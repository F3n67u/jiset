digraph {
  node16559 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16555 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16552 [shape=diamond, label=<<font color="black">(! (= typeName &quot;Int32Array&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16545 [shape=cds, label=<<font color="black">1:app __x0__ = (Type typedArray)</font>> color="black" fillcolor="white" style=filled]
  node16544 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onlyInt32 = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16560 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return buffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:assert (! (= typedArray.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">9:let buffer = typedArray.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16548 [shape=diamond, label=<<font color="black">(= typedArray.TypedArrayName absent)</font>> color="black" fillcolor="white" style=filled]
  node16553 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16542 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16557 [shape=cds, label=<<font color="black">10:app __x1__ = (IsSharedArrayBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16547 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16550 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let typeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16554 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (|| (|| (= typeName &quot;Int8Array&quot;) (= typeName &quot;Uint8Array&quot;)) (= typeName &quot;Int16Array&quot;)) (= typeName &quot;Uint16Array&quot;)) (= typeName &quot;Int32Array&quot;)) (= typeName &quot;Uint32Array&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node16558 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16541 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16551 [shape=diamond, label=<<font color="black">(= onlyInt32 true)</font>> color="black" fillcolor="white" style=filled]
  node16546 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16549 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16543 [shape=diamond, label=<<font color="black">(= onlyInt32 absent)</font>> color="black" fillcolor="white" style=filled]
  node16545 -> node16546 [ color="black"]
  node16552 -> node16553 [label=<<font color="black">true</font>> color="black"]
  node16552 -> node16556 [label=<<font color="black">false</font>> color="black"]
  node16546 -> node16547 [label=<<font color="black">true</font>> color="black"]
  node16546 -> node16548 [label=<<font color="black">false</font>> color="black"]
  node16556 -> node16557 [ color="black"]
  node16541 -> node16543 [ color="black"]
  node16550 -> node16551 [ color="black"]
  node16559 -> node16560 [ color="black"]
  node16551 -> node16552 [label=<<font color="black">true</font>> color="black"]
  node16551 -> node16554 [label=<<font color="black">false</font>> color="black"]
  node16557 -> node16558 [ color="black"]
  node16548 -> node16549 [label=<<font color="black">true</font>> color="black"]
  node16548 -> node16550 [label=<<font color="black">false</font>> color="black"]
  node16547 -> node16548 [ color="black"]
  node16560 -> node16542 [ color="black"]
  node16549 -> node16550 [ color="black"]
  node16554 -> node16555 [label=<<font color="black">true</font>> color="black"]
  node16554 -> node16556 [label=<<font color="black">false</font>> color="black"]
  node16543 -> node16544 [label=<<font color="black">true</font>> color="black"]
  node16543 -> node16545 [label=<<font color="black">false</font>> color="black"]
  node16558 -> node16559 [label=<<font color="black">true</font>> color="black"]
  node16558 -> node16560 [label=<<font color="black">false</font>> color="black"]
  node16555 -> node16556 [ color="black"]
  node16553 -> node16556 [ color="black"]
  node16544 -> node16545 [ color="black"]
}
