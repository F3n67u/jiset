{
  let C = this
  if (= mapfn undefined) let mapping = false else {
    app __x0__ = (IsCallable mapfn)
    if (= __x0__ false) throw TypeError else {}
    if (! (= thisArg absent)) let T = thisArg else let T = undefined
    let mapping = true
  }
  app __x1__ = (GetMethod items SYMBOL_iterator)
  let usingIterator = [? __x1__]
  if (! (= usingIterator undefined)) {
    app __x2__ = (IsConstructor C)
    if (= __x2__ true) {
      app __x3__ = (Construct C)
      let A = [? __x3__]
    } else {
      app __x4__ = (ArrayCreate 0i)
      let A = __x4__
    }
    app __x5__ = (GetIterator items usingIterator)
    let iterator = [? __x5__]
    let k = 0i
    while true {
      if (! (< k (- (** 2.0 53i) 1i))) {
        let error = (new Completion("Type" -> CONST_throw, "Value" -> ??? "TypeError", "Target" -> CONST_empty))
        app __x6__ = (IteratorClose iterator error)
        return [? __x6__]
      } else {}
      app __x7__ = (ToString k)
      let Pk = [! __x7__]
      app __x8__ = (IteratorStep iterator)
      let next = [? __x8__]
      if (= next false) {
        app __x9__ = (Set A "length" k true)
        [? __x9__]
        return A
      } else {}
      app __x10__ = (IteratorValue next)
      let nextValue = [? __x10__]
      if (= mapping true) {
        app __x11__ = (Call mapfn T (new [nextValue, k]))
        let mappedValue = __x11__
        app __x12__ = (IsAbruptCompletion mappedValue)
        if __x12__ {
          app __x13__ = (IteratorClose iterator mappedValue)
          return [? __x13__]
        } else {}
        let mappedValue = mappedValue.Value
      } else let mappedValue = nextValue
      app __x14__ = (CreateDataPropertyOrThrow A Pk mappedValue)
      let defineStatus = __x14__
      app __x15__ = (IsAbruptCompletion defineStatus)
      if __x15__ {
        app __x16__ = (IteratorClose iterator defineStatus)
        return [? __x16__]
      } else {}
      k = (+ k 1i)
    }
  } else {}
  app __x17__ = (ToObject items)
  let arrayLike = [! __x17__]
  app __x18__ = (Get arrayLike "length")
  app __x19__ = (ToLength [? __x18__])
  let len = [? __x19__]
  app __x20__ = (IsConstructor C)
  if (= __x20__ true) {
    app __x21__ = (Construct C (new [len]))
    let A = [? __x21__]
  } else {
    app __x22__ = (ArrayCreate len)
    let A = [? __x22__]
  }
  let k = 0i
  while (< k len) {
    app __x23__ = (ToString k)
    let Pk = [! __x23__]
    app __x24__ = (Get arrayLike Pk)
    let kValue = [? __x24__]
    if (= mapping true) {
      app __x25__ = (Call mapfn T (new [kValue, k]))
      let mappedValue = [? __x25__]
    } else let mappedValue = kValue
    app __x26__ = (CreateDataPropertyOrThrow A Pk mappedValue)
    [? __x26__]
    k = (+ k 1i)
  }
  app __x27__ = (Set A "length" len true)
  [? __x27__]
  return A
}