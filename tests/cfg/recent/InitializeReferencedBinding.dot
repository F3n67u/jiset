digraph {
  node352 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node357 [shape=cds, label=<<font color="black">6:app __x1__ = (base.InitializeBinding base V.ReferencedName W)</font>> color="black" fillcolor="white" style=filled]
  node353 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node356 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x0__ false)</td></tr>
      <tr><td align="left">4:let base = V.Base</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node355 [shape=cds, label=<<font color="black">3:app __x0__ = (IsUnresolvableReference V)</font>> color="black" fillcolor="white" style=filled]
  node358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node354 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? V]</td></tr>
      <tr><td align="left">1:[? W]</td></tr>
      <tr><td align="left">2:assert (= (typeof V) &quot;ReferenceRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node355 -> node356 [ color="black"]
  node358 -> node353 [ color="black"]
  node357 -> node358 [ color="black"]
  node356 -> node357 [ color="black"]
  node352 -> node354 [ color="black"]
  node354 -> node355 [ color="black"]
}
