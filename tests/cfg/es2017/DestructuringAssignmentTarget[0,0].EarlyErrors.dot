digraph {
  node17079 [shape=cds, label=<<font color="black">app __x1__ = (IsValidSimpleAssignmentTarget LeftHandSideExpression)</font>> color="black" fillcolor="white" style=filled]
  node17081 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node17075 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17078 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node17082 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17083 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17077 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;It is a Syntax Error if nt:{LeftHandSideExpression} is either an nt:{ObjectLiteral} or an nt:{ArrayLiteral} and if the lexical token sequence matched by nt:{LeftHandSideExpression} cannot be parsed with no tokens left over using nt:{AssignmentPattern} as the goal symbol .&quot;</td></tr>
      <tr><td align="left">1:let __x0__ = true</td></tr>
      <tr><td align="left">1:__x0__ = (! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17080 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = (= __x1__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17076 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17082 -> node17076 [ color="black"]
  node17078 -> node17079 [label=<<font color="black">true</font>> color="black"]
  node17078 -> node17081 [label=<<font color="black">false</font>> color="black"]
  node17077 -> node17078 [ color="black"]
  node17083 -> node17076 [ color="black"]
  node17079 -> node17080 [ color="black"]
  node17080 -> node17081 [ color="black"]
  node17081 -> node17082 [label=<<font color="black">true</font>> color="black"]
  node17081 -> node17083 [label=<<font color="black">false</font>> color="black"]
  node17075 -> node17077 [ color="black"]
}
