digraph {
  node10844 [shape=cds, label=<<font color="black">app unescapedSet = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node10854 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:??? &quot;Let id:{jOctet} be the value at index id:{j} within id:{Octets} .&quot;</td></tr>
      <tr><td align="left">23:??? &quot;Let id:{S} be a String containing three code units &lt; code &gt; \&quot; % &lt; var &gt; XY &lt; / var &gt; \&quot; &lt; / code &gt; where id:{XY} are two uppercase hexadecimal digits encoding id:{jOctet} .&quot;</td></tr>
      <tr><td align="left">24:R = (+ R S)</td></tr>
      <tr><td align="left">25:j = (+ j 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10850 [shape=diamond, label=<<font color="black">(contains unescapedSet C)</font>> color="black" fillcolor="white" style=filled]
  node10855 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10843 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10848 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return R</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10851 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{S} be a String containing only the code unit id:{C} .&quot;</td></tr>
      <tr><td align="left">8:R = (+ R S)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10842 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10847 [shape=diamond, label=<<font color="black">(= k strLen)</font>> color="black" fillcolor="white" style=filled]
  node10852 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:??? &quot;If the code unit value of id:{C} is not less than 0xDC00 and not greater than 0xDFFF , throw a value:{URIError} exception .&quot;</td></tr>
      <tr><td align="left">11:??? &quot;If the code unit value of id:{C} is less than 0xD800 or greater than 0xDBFF , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">13:??? &quot;Else , in:{} out:{}&quot;</td></tr>
      <tr><td align="left">19:??? &quot;Let id:{Octets} be the array of octets resulting by applying the UTF - 8 transformation to id:{V} , and let id:{L} be the array size .&quot;</td></tr>
      <tr><td align="left">20:let j = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10846 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node10841 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10853 [shape=diamond, label=<<font color="black">(&lt; j L)</font>> color="black" fillcolor="white" style=filled]
  node10849 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let C = string[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10845 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let strLen = string.length</td></tr>
      <tr><td align="left">1:let R = &quot;&quot;</td></tr>
      <tr><td align="left">2:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10855 -> node10846 [ color="black"]
  node10847 -> node10848 [label=<<font color="black">true</font>> color="black"]
  node10847 -> node10849 [label=<<font color="black">false</font>> color="black"]
  node10853 -> node10854 [label=<<font color="black">true</font>> color="black"]
  node10853 -> node10855 [label=<<font color="black">false</font>> color="black"]
  node10850 -> node10851 [label=<<font color="black">true</font>> color="black"]
  node10850 -> node10852 [label=<<font color="black">false</font>> color="black"]
  node10849 -> node10850 [ color="black"]
  node10846 -> node10847 [label=<<font color="black">true</font>> color="black"]
  node10846 -> node10842 [label=<<font color="black">false</font>> color="black"]
  node10852 -> node10853 [ color="black"]
  node10851 -> node10855 [ color="black"]
  node10843 -> node10844 [ color="black"]
  node10841 -> node10843 [ color="black"]
  node10844 -> node10845 [ color="black"]
  node10848 -> node10849 [ color="black"]
  node10854 -> node10853 [ color="black"]
  node10845 -> node10846 [ color="black"]
}
