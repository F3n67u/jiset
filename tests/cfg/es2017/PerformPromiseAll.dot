digraph {
  node16501 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextValue = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16480 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16497 [shape=cds, label=<<font color="black">14:app __x3__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node16504 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16486 [shape=cds, label=<<font color="black">6:app __x0__ = (IteratorStep iteratorRecord.Iterator)</font>> color="black" fillcolor="white" style=filled]
  node16493 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16499 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16482 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16481 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16498 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16491 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16488 [shape=cds, label=<<font color="black">7:app __x1__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node16495 [shape=cds, label=<<font color="black">13:app __x2__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node16508 [shape=cds, label=<<font color="black">28:app __x7__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node16487 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16484 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16509 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:[? __x7__]</td></tr>
      <tr><td align="left">29:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16492 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node16483 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16505 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? nextValue]</td></tr>
      <tr><td align="left">19:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16496 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let valuesArray = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16503 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node16500 [shape=cds, label=<<font color="black">16:app __x4__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node16506 [shape=cds, label=<<font color="black">20:app __x6__ = (Invoke constructor &quot;resolve&quot; (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node16489 [shape=diamond, label=<<font color="black">__x1__</font>> color="black" fillcolor="white" style=filled]
  node16485 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node16502 [shape=cds, label=<<font color="black">17:app __x5__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node16507 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let nextPromise = [? __x6__]</td></tr>
      <tr><td align="left">21:let resolveElement = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">22:resolveElement.AlreadyCalled = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">23:resolveElement.Index = index</td></tr>
      <tr><td align="left">24:resolveElement.Values = values</td></tr>
      <tr><td align="left">25:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">26:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">27:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16494 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node16479 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16490 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16490 -> node16491 [ color="black"]
  node16487 -> node16488 [ color="black"]
  node16481 -> node16482 [ color="black"]
  node16485 -> node16486 [label=<<font color="black">true</font>> color="black"]
  node16485 -> node16480 [label=<<font color="black">false</font>> color="black"]
  node16507 -> node16508 [ color="black"]
  node16494 -> node16495 [label=<<font color="black">true</font>> color="black"]
  node16494 -> node16499 [label=<<font color="black">false</font>> color="black"]
  node16504 -> node16505 [ color="black"]
  node16508 -> node16509 [ color="black"]
  node16499 -> node16500 [ color="black"]
  node16488 -> node16489 [ color="black"]
  node16482 -> node16483 [ color="black"]
  node16493 -> node16494 [ color="black"]
  node16500 -> node16501 [ color="black"]
  node16492 -> node16493 [label=<<font color="black">true</font>> color="black"]
  node16492 -> node16500 [label=<<font color="black">false</font>> color="black"]
  node16498 -> node16499 [ color="black"]
  node16479 -> node16481 [ color="black"]
  node16496 -> node16497 [ color="black"]
  node16486 -> node16487 [ color="black"]
  node16495 -> node16496 [ color="black"]
  node16497 -> node16498 [ color="black"]
  node16501 -> node16502 [ color="black"]
  node16489 -> node16490 [label=<<font color="black">true</font>> color="black"]
  node16489 -> node16491 [label=<<font color="black">false</font>> color="black"]
  node16503 -> node16504 [label=<<font color="black">true</font>> color="black"]
  node16503 -> node16505 [label=<<font color="black">false</font>> color="black"]
  node16506 -> node16507 [ color="black"]
  node16505 -> node16506 [ color="black"]
  node16502 -> node16503 [ color="black"]
  node16491 -> node16492 [ color="black"]
  node16509 -> node16485 [ color="black"]
  node16483 -> node16484 [ color="black"]
  node16484 -> node16485 [ color="black"]
}
