{
  let O = this
  let f = GLOBAL_context.Function
  if (= O.IteratorNext absent) throw INTRINSIC_TypeError else {}
  let next = O.IteratorNext
  app __x0__ = (SameValue f next)
  if (= __x0__ false) throw INTRINSIC_TypeError else {}
  if (= O.IteratedList absent) throw INTRINSIC_TypeError else {}
  let list = O.IteratedList
  let index = O.ListIteratorNextIndex
  let len = list.length
  if (! (< index len)) {
    app __x1__ = (CreateIterResultObject undefined true)
    app __x2__ = (WrapCompletion __x1__)
    return __x2__
  } else {}
  O.ListIteratorNextIndex = (+ index 1i)
  app __x3__ = (CreateIterResultObject list[index] false)
  app __x4__ = (WrapCompletion __x3__)
  return __x4__
}