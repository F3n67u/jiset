{
  app __x0__ = (IsPropertyKey P)
  assert (= __x0__ true)
  app __x1__ = (Type P)
  if (= __x1__ String) {
    app __x2__ = (CanonicalNumericIndexString P)
    let numericIndex = [! __x2__]
    if (! (= numericIndex undefined)) {
      app __x3__ = (IsInteger numericIndex)
      if (= __x3__ false) return false else {}
      if (== numericIndex -0.0) return false else {}
      if (< numericIndex 0i) return false else {}
      let length = O.ArrayLength
      if (! (< numericIndex length)) return false else {}
      app __x4__ = (IsAccessorDescriptor Desc)
      if (= __x4__ true) return false else {}
      if (&& (! (= Desc.Configurable absent)) (= Desc.Configurable true)) return false else {}
      if (&& (! (= Desc.Enumerable absent)) (= Desc.Enumerable false)) return false else {}
      if (&& (! (= Desc.Writable absent)) (= Desc.Writable false)) return false else {}
      if (! (= Desc.Value absent)) {
        let value = Desc.Value
        app __x5__ = (IntegerIndexedElementSet O numericIndex value)
        return [? __x5__]
      } else {}
      return true
    } else {}
  } else {}
  app __x6__ = (OrdinaryDefineOwnProperty O P Desc)
  return [! __x6__]
}