digraph {
  node7294 [shape=cds, label=<<font color="black">0:access __x0__ = (CaseClauses &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node7293 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7299 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7295 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7292 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7296 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node7298 [shape=cds, label=<<font color="black">2:access __x1__ = (CaseClause &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node7298 -> node7299 [ color="black"]
  node7297 -> node7298 [ color="black"]
  node7296 -> node7297 [label=<<font color="black">true</font>> color="black"]
  node7296 -> node7298 [label=<<font color="black">false</font>> color="black"]
  node7292 -> node7294 [ color="black"]
  node7299 -> node7293 [ color="black"]
  node7295 -> node7296 [ color="black"]
  node7294 -> node7295 [ color="black"]
}
