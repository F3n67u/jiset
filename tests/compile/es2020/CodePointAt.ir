{
  [0] let size = string.length
  [1] assert (&& (! (< position 0i)) (< position size))
  [2] let first = string[position]
  [3] ??? "Let id:{cp} be the code point whose numeric value is that of id:{first} ."
  [4] ??? "If id:{first} is not a link:{} or link:{} , then step-list:{...}"
  [6] ??? "If id:{first} is a link:{} or id:{position} + 1 = id:{size} , then step-list:{...}"
  [8] let second = string[(+ position 1i)]
  [9] ??? "If id:{second} is not a link:{} , then step-list:{...}"
  [11] app __x0__ = (UTF16DecodeSurrogatePair first second)
  [11] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [0] {}
  [11] cp = __x0__
  [12] app __x1__ = (WrapCompletion (new Record("CodePoint" -> cp, "CodeUnitCount" -> 2i, "IsUnpairedSurrogate" -> false)))
  [12] return __x1__
}