{
  app __x0__ = (Type target)
  if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  app __x2__ = (Type handler)
  if (! (= __x2__ Object)) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
  app __x4__ = (MakeBasicObject (new ["ProxyHandler", "ProxyTarget"]))
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  let P = __x4__
  app __x5__ = (IsCallable target)
  if (= __x5__ true) {
    ??? "Set id:{P} . [ [ Call ] ] as specified in link:{} ."
    app __x6__ = (IsConstructor target)
    if (= __x6__ true) ??? "Set id:{P} . [ [ Construct ] ] as specified in link:{} ." else {}
  } else {}
  P.ProxyTarget = target
  P.ProxyHandler = handler
  app __x7__ = (WrapCompletion P)
  return __x7__
}