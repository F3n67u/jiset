digraph {
  node14570 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node14559 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_SetPrototype (new [&quot;SetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node14584 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node14573 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14572 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node14576 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14577 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node14567 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node14574 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node14585 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node14564 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14579 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node14569 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14558 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14556 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14565 [shape=cds, label=<<font color="black">6:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14566 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14580 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14561 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node14581 [shape=cds, label=<<font color="black">14:app __x6__ = (Call adder set (new [nextValue.Value]))</font>> color="black" fillcolor="white" style=filled]
  node14555 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14562 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14557 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node14554 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14586 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14571 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14560 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.SetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14582 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14575 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node14578 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14563 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node14568 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node14583 [shape=cds, label=<<font color="black">15:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node14580 -> node14581 [ color="black"]
  node14584 -> node14585 [label=<<font color="black">true</font>> color="black"]
  node14584 -> node14574 [label=<<font color="black">false</font>> color="black"]
  node14570 -> node14571 [ color="black"]
  node14569 -> node14570 [ color="black"]
  node14576 -> node14577 [ color="black"]
  node14560 -> node14561 [ color="black"]
  node14564 -> node14572 [ color="black"]
  node14559 -> node14560 [ color="black"]
  node14572 -> node14573 [label=<<font color="black">true</font>> color="black"]
  node14572 -> node14574 [label=<<font color="black">false</font>> color="black"]
  node14581 -> node14582 [ color="black"]
  node14583 -> node14584 [ color="black"]
  node14554 -> node14556 [ color="black"]
  node14574 -> node14575 [label=<<font color="black">true</font>> color="black"]
  node14574 -> node14555 [label=<<font color="black">false</font>> color="black"]
  node14568 -> node14569 [label=<<font color="black">true</font>> color="black"]
  node14568 -> node14570 [label=<<font color="black">false</font>> color="black"]
  node14571 -> node14572 [ color="black"]
  node14565 -> node14566 [ color="black"]
  node14566 -> node14567 [ color="black"]
  node14558 -> node14559 [ color="black"]
  node14578 -> node14579 [ color="black"]
  node14577 -> node14578 [label=<<font color="black">true</font>> color="black"]
  node14577 -> node14579 [label=<<font color="black">false</font>> color="black"]
  node14586 -> node14574 [ color="black"]
  node14573 -> node14574 [ color="black"]
  node14582 -> node14583 [ color="black"]
  node14575 -> node14576 [ color="black"]
  node14562 -> node14563 [ color="black"]
  node14579 -> node14580 [ color="black"]
  node14556 -> node14557 [ color="black"]
  node14585 -> node14586 [ color="black"]
  node14561 -> node14562 [label=<<font color="black">true</font>> color="black"]
  node14561 -> node14563 [label=<<font color="black">false</font>> color="black"]
  node14567 -> node14568 [ color="black"]
  node14557 -> node14558 [label=<<font color="black">true</font>> color="black"]
  node14557 -> node14559 [label=<<font color="black">false</font>> color="black"]
  node14563 -> node14564 [label=<<font color="black">true</font>> color="black"]
  node14563 -> node14565 [label=<<font color="black">false</font>> color="black"]
}
