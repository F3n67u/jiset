["Let", {
  "id": "lref"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "AdditiveExpression"
}, ".", {
  "k": 0
}, "Let", {
  "id": "lval"
}, "be", "?", "GetValue", "(", {
  "id": "lref"
}, ")", ".", {
  "k": 1
}, "Let", {
  "id": "rref"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "MultiplicativeExpression"
}, ".", {
  "k": 2
}, "Let", {
  "id": "rval"
}, "be", "?", "GetValue", "(", {
  "id": "rref"
}, ")", ".", {
  "k": 3
}, "Let", {
  "id": "lprim"
}, "be", "?", "ToPrimitive", "(", {
  "id": "lval"
}, ")", ".", {
  "k": 4
}, "Let", {
  "id": "rprim"
}, "be", "?", "ToPrimitive", "(", {
  "id": "rval"
}, ")", ".", {
  "k": 5
}, "If", "Type", "(", {
  "id": "lprim"
}, ")", "is", "String", "or", "Type", "(", {
  "id": "rprim"
}, ")", "is", "String", ",", "then", {
  "in": null
}, "Let", {
  "id": "lstr"
}, "be", "?", "ToString", "(", {
  "id": "lprim"
}, ")", ".", {
  "k": 7
}, "Let", {
  "id": "rstr"
}, "be", "?", "ToString", "(", {
  "id": "rprim"
}, ")", ".", {
  "k": 8
}, "Return", "the", "string", "-", "concatenation", "of", {
  "id": "lstr"
}, "and", {
  "id": "rstr"
}, ".", {
  "k": 9
}, {
  "out": null
}, {
  "k": 6
}, "Let", {
  "id": "lnum"
}, "be", "?", "ToNumber", "(", {
  "id": "lprim"
}, ")", ".", {
  "k": 10
}, "Let", {
  "id": "rnum"
}, "be", "?", "ToNumber", "(", {
  "id": "rprim"
}, ")", ".", {
  "k": 11
}, "Return", "the", "result", "of", "applying", "the", "addition", "operation", "to", {
  "id": "lnum"
}, "and", {
  "id": "rnum"
}, ".", "See", "the", "Note", "below", {
  "link": "unhandled: sec-applying-the-additive-operators-to-numbers"
}, ".", {
  "k": 12
}]