digraph {
  node16894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let W = S[0i]</td></tr>
      <tr><td align="left">15:(pop S 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16877 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16890 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16897 [shape=cds, label=<<font color="black">18:app __x8__ = (LeaveCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node16885 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let c = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16882 [shape=cds, label=<<font color="black">4:app __x2__ = (ToInteger count)</font>> color="black" fillcolor="white" style=filled]
  node16880 [shape=diamond, label=<<font color="black">(= count undefined)</font>> color="black" fillcolor="white" style=filled]
  node16893 [shape=diamond, label=<<font color="black">(&lt; 0i S.length)</font>> color="black" fillcolor="white" style=filled]
  node16889 [shape=cds, label=<<font color="black">11:app __x5__ = (EnterCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node16886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let block = buffer.ArrayBufferData</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:let indexedPosition = (+ (* i 4i) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16896 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:__x7__</td></tr>
      <tr><td align="left">17:append 1i -&gt; n</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let intCount = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16887 [shape=cds, label=<<font color="black">9:app __x4__ = (GetWaiterList block indexedPosition)</font>> color="black" fillcolor="white" style=filled]
  node16875 [shape=cds, label=<<font color="black">app count = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let S = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16895 [shape=cds, label=<<font color="black">16:app __x7__ = (NotifyWaiter WL W)</font>> color="black" fillcolor="white" style=filled]
  node16878 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node16884 [shape=cds, label=<<font color="black">5:app __x3__ = (max intCount 0i)</font>> color="black" fillcolor="white" style=filled]
  node16888 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let WL = __x4__</td></tr>
      <tr><td align="left">10:let n = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16891 [shape=cds, label=<<font color="black">12:app __x6__ = (RemoveWaiters WL c)</font>> color="black" fillcolor="white" style=filled]
  node16898 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x8__</td></tr>
      <tr><td align="left">19:return n</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let c = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16873 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16872 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16876 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray true)</font>> color="black" fillcolor="white" style=filled]
  node16871 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16874 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16886 -> node16887 [ color="black"]
  node16876 -> node16877 [ color="black"]
  node16890 -> node16891 [ color="black"]
  node16873 -> node16874 [ color="black"]
  node16871 -> node16873 [ color="black"]
  node16894 -> node16895 [ color="black"]
  node16882 -> node16883 [ color="black"]
  node16893 -> node16894 [label=<<font color="black">true</font>> color="black"]
  node16893 -> node16897 [label=<<font color="black">false</font>> color="black"]
  node16881 -> node16886 [ color="black"]
  node16879 -> node16880 [ color="black"]
  node16887 -> node16888 [ color="black"]
  node16896 -> node16893 [ color="black"]
  node16885 -> node16886 [ color="black"]
  node16892 -> node16893 [ color="black"]
  node16877 -> node16878 [ color="black"]
  node16891 -> node16892 [ color="black"]
  node16888 -> node16889 [ color="black"]
  node16898 -> node16872 [ color="black"]
  node16895 -> node16896 [ color="black"]
  node16884 -> node16885 [ color="black"]
  node16897 -> node16898 [ color="black"]
  node16874 -> node16875 [ color="black"]
  node16875 -> node16876 [ color="black"]
  node16880 -> node16881 [label=<<font color="black">true</font>> color="black"]
  node16880 -> node16882 [label=<<font color="black">false</font>> color="black"]
  node16889 -> node16890 [ color="black"]
  node16878 -> node16879 [ color="black"]
  node16883 -> node16884 [ color="black"]
}
