digraph {
  node15303 [shape=cds, label=<<font color="black">7:app __x8__ = (Set matcher &quot;lastIndex&quot; lastIndex true)</font>> color="black" fillcolor="white" style=filled]
  node15293 [shape=cds, label=<<font color="black">3:app __x2__ = (SpeciesConstructor R INTRINSIC_RegExp)</font>> color="black" fillcolor="white" style=filled]
  node15299 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let matcher = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15295 [shape=cds, label=<<font color="black">4:app __x3__ = (Get R &quot;flags&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15306 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15289 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15298 [shape=cds, label=<<font color="black">5:app __x5__ = (Construct C (new [R, flags]))</font>> color="black" fillcolor="white" style=filled]
  node15296 [shape=cds, label=<<font color="black">4:app __x4__ = (ToString [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node15302 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let lastIndex = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15312 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return [! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15285 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15284 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let flags = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15291 [shape=cds, label=<<font color="black">2:app __x1__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node15301 [shape=cds, label=<<font color="black">6:app __x7__ = (ToLength [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node15308 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15288 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node15304 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15300 [shape=cds, label=<<font color="black">6:app __x6__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15292 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15287 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15286 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15311 [shape=cds, label=<<font color="black">12:app __x9__ = (CreateRegExpStringIterator matcher S global fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node15290 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15294 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let C = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15309 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15310 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15305 [shape=diamond, label=<<font color="black">(contains flags &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15310 -> node15311 [ color="black"]
  node15288 -> node15289 [ color="black"]
  node15295 -> node15296 [ color="black"]
  node15308 -> node15309 [label=<<font color="black">true</font>> color="black"]
  node15308 -> node15310 [label=<<font color="black">false</font>> color="black"]
  node15307 -> node15308 [ color="black"]
  node15290 -> node15291 [ color="black"]
  node15298 -> node15299 [ color="black"]
  node15296 -> node15297 [ color="black"]
  node15297 -> node15298 [ color="black"]
  node15286 -> node15287 [ color="black"]
  node15302 -> node15303 [ color="black"]
  node15294 -> node15295 [ color="black"]
  node15284 -> node15286 [ color="black"]
  node15304 -> node15305 [ color="black"]
  node15311 -> node15312 [ color="black"]
  node15300 -> node15301 [ color="black"]
  node15291 -> node15292 [ color="black"]
  node15292 -> node15293 [ color="black"]
  node15303 -> node15304 [ color="black"]
  node15299 -> node15300 [ color="black"]
  node15305 -> node15306 [label=<<font color="black">true</font>> color="black"]
  node15305 -> node15307 [label=<<font color="black">false</font>> color="black"]
  node15289 -> node15290 [label=<<font color="black">true</font>> color="black"]
  node15289 -> node15291 [label=<<font color="black">false</font>> color="black"]
  node15312 -> node15285 [ color="black"]
  node15309 -> node15311 [ color="black"]
  node15301 -> node15302 [ color="black"]
  node15293 -> node15294 [ color="black"]
  node15287 -> node15288 [ color="black"]
  node15306 -> node15308 [ color="black"]
}
