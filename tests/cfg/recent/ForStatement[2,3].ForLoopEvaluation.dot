digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">2:access __x1__ = (LexicalDeclaration &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x3__[__x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=cds, label=<<font color="black">8:app __x6__ = (loopEnv.CreateMutableBinding loopEnv dn false)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=cds, label=<<font color="black">11:app __x8__ = (IsAbruptCompletion forDcl)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isConst = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=diamond, label=<<font color="black">(&lt; __x4__ __x3__.length)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let oldEnv = CONTEXT.LexicalEnvironment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:CONTEXT.LexicalEnvironment = loopEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=cds, label=<<font color="black">6:app __x5__ = (loopEnv.CreateImmutableBinding loopEnv dn true)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">3:access __x2__ = (LexicalDeclaration &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">1:app __x0__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=cds, label=<<font color="black">10:access __x7__ = (LexicalDeclaration &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__ = (+ __x4__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=diamond, label=<<font color="black">(= isConst true)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let boundNames = __x2__</td></tr>
      <tr><td align="left">4:let __x3__ = boundNames</td></tr>
      <tr><td align="left">4:let __x4__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let forDcl = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let loopEnv = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let perIterationLets = boundNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let perIterationLets = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:CONTEXT.LexicalEnvironment = oldEnv</td></tr>
      <tr><td align="left">13:return forDcl</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let bodyResult = __x9__</td></tr>
      <tr><td align="left">16:CONTEXT.LexicalEnvironment = oldEnv</td></tr>
      <tr><td align="left">17:return bodyResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=cds, label=<<font color="black">15:app __x9__ = (ForBodyEvaluation Expression0 Expression1 Statement perIterationLets labelSet)</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=diamond, label=<<font color="black">(= isConst false)</font>> color="black" fillcolor="white" style=filled]
  node19 -> node20 [ color="black"]
  node0 -> node2 [ color="black"]
  node21 -> node22 [label=<<font color="black">true</font>> color="black"]
  node21 -> node23 [label=<<font color="black">false</font>> color="black"]
  node26 -> node27 [ color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [ color="black"]
  node25 -> node26 [ color="black"]
  node23 -> node24 [label=<<font color="black">true</font>> color="black"]
  node23 -> node25 [label=<<font color="black">false</font>> color="black"]
  node27 -> node1 [ color="black"]
  node17 -> node18 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node7 -> node8 [ color="black"]
  node18 -> node19 [ color="black"]
  node2 -> node3 [ color="black"]
  node9 -> node10 [label=<<font color="black">true</font>> color="black"]
  node9 -> node17 [label=<<font color="black">false</font>> color="black"]
  node15 -> node16 [ color="black"]
  node12 -> node13 [ color="black"]
  node11 -> node12 [label=<<font color="black">true</font>> color="black"]
  node11 -> node14 [label=<<font color="black">false</font>> color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node16 -> node9 [ color="black"]
  node14 -> node15 [ color="black"]
  node8 -> node9 [ color="black"]
  node13 -> node16 [ color="black"]
  node24 -> node26 [ color="black"]
  node20 -> node21 [ color="black"]
}
