digraph {
  node3276 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:P.ProxyTarget = target</td></tr>
      <tr><td align="left">11:P.ProxyHandler = handler</td></tr>
      <tr><td align="left">12:return P</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3265 [shape=diamond, label=<<font color="black">(! (= __x1__ Object))</font>> color="black" fillcolor="white" style=filled]
  node3261 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3270 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable target)</font>> color="black" fillcolor="white" style=filled]
  node3260 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node3273 [shape=cds, label=<<font color="black">8:app __x3__ = (IsConstructor target)</font>> color="black" fillcolor="white" style=filled]
  node3267 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof handler) &quot;ProxyExoticObject&quot;) (= handler.ProxyHandler null))</font>> color="black" fillcolor="white" style=filled]
  node3264 [shape=cds, label=<<font color="black">2:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3259 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node3263 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3275 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">P.Construct = ProxyObjectDOTConstruct</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3258 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3271 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node3269 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let P = (new OrdinaryObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3257 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3262 [shape=diamond, label=<<font color="black">(&amp;&amp; (= (typeof target) &quot;ProxyExoticObject&quot;) (= target.ProxyHandler null))</font>> color="black" fillcolor="white" style=filled]
  node3274 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node3266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3272 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:P.Call = ProxyObjectDOTCall</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3271 -> node3272 [label=<<font color="black">true</font>> color="black"]
  node3271 -> node3276 [label=<<font color="black">false</font>> color="black"]
  node3266 -> node3267 [ color="black"]
  node3272 -> node3273 [ color="black"]
  node3269 -> node3270 [ color="black"]
  node3259 -> node3260 [ color="black"]
  node3273 -> node3274 [ color="black"]
  node3260 -> node3261 [label=<<font color="black">true</font>> color="black"]
  node3260 -> node3262 [label=<<font color="black">false</font>> color="black"]
  node3262 -> node3263 [label=<<font color="black">true</font>> color="black"]
  node3262 -> node3264 [label=<<font color="black">false</font>> color="black"]
  node3268 -> node3269 [ color="black"]
  node3275 -> node3276 [ color="black"]
  node3270 -> node3271 [ color="black"]
  node3267 -> node3268 [label=<<font color="black">true</font>> color="black"]
  node3267 -> node3269 [label=<<font color="black">false</font>> color="black"]
  node3257 -> node3259 [ color="black"]
  node3276 -> node3258 [ color="black"]
  node3274 -> node3275 [label=<<font color="black">true</font>> color="black"]
  node3274 -> node3276 [label=<<font color="black">false</font>> color="black"]
  node3264 -> node3265 [ color="black"]
  node3263 -> node3264 [ color="black"]
  node3261 -> node3262 [ color="black"]
  node3265 -> node3266 [label=<<font color="black">true</font>> color="black"]
  node3265 -> node3267 [label=<<font color="black">false</font>> color="black"]
}
