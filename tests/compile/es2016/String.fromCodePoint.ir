{
  app codePoints = (GetArgument argumentsList 0i)
  [0] let codePoints = argumentsList
  [1] let length = codePoints.length
  [2] let elements = (new [])
  [3] let nextIndex = 0i
  [4] while (< nextIndex length) {
    [5] let next = codePoints[nextIndex]
    [6] app __x0__ = (ToNumber next)
    [6] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [2] {}
    [6] let nextCP = __x0__
    [7] app __x1__ = (ToInteger nextCP)
    [7] app __x2__ = (SameValue nextCP __x1__)
    [7] if (= __x2__ false) {
      app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x3__
    } else [2] {}
    [8] if (|| (< nextCP 0i) (< 1114111i nextCP)) {
      app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x4__
    } else [2] {}
    [9] access __x5__ = (nextCP "UTF16Encoding")
    [9] let __x6__ = __x5__
    [9] let __x7__ = 0i
    [9] while (< __x7__ __x6__.length) {
      let __x8__ = __x6__[__x7__]
      append __x8__ -> elements
      __x7__ = (+ __x7__ 1i)
    }
    [10] let nextIndex = (+ nextIndex 1i)
  }
  [11] ??? "Return the String value whose elements are , in order , the elements in the List id:{elements} . If id:{length} is 0 , the empty string is returned ."
}