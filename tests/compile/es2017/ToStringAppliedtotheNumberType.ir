{
  [0] if (= m NaN) {
    app __x0__ = (WrapCompletion "NaN")
    return __x0__
  } else [1] {}
  [1] if (|| (= m 0i) (= m -0.0)) {
    app __x1__ = (WrapCompletion "0")
    return __x1__
  } else [1] {}
  [2] if (< m 0i) {
    app __x2__ = (ToString (- m))
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [1] {}
    app __x3__ = (WrapCompletion (+ "-" __x2__))
    return __x3__
  } else [1] {}
  [3] if (= m Infinity) {
    app __x4__ = (WrapCompletion "Infinity")
    return __x4__
  } else [1] {}
  [4] ??? "Otherwise , let id:{n} , id:{k} , and id:{s} be integers such that id:{k} ≥ 1 , 10 sup:{id:{k} - 1 } ≤ id:{s} < 10 sup:{id:{k} } , the Number value for id:{s} × 10 sup:{id:{n} - id:{k} } is id:{m} , and id:{k} is as small as possible . Note that id:{k} is the number of digits in the decimal representation of id:{s} , that id:{s} is not divisible by 10 , and that the least significant digit of id:{s} is not necessarily uniquely determined by these criteria ."
  [5] ??? "If id:{k} ≤ id:{n} ≤ 21 , return the String consisting of the code units of the id:{k} digits of the decimal representation of id:{s} ( in order , with no leading zeroes ) , followed by id:{n} - id:{k} occurrences of the code unit 0x0030 ( DIGIT ZERO ) ."
  [6] ??? "If 0 < id:{n} ≤ 21 , return the String consisting of the code units of the most significant id:{n} digits of the decimal representation of id:{s} , followed by the code unit 0x002E ( FULL STOP ) , followed by the code units of the remaining id:{k} - id:{n} digits of the decimal representation of id:{s} ."
  [7] ??? "If - 6 < id:{n} ≤ 0 , return the String consisting of the code unit 0x0030 ( DIGIT ZERO ) , followed by the code unit 0x002E ( FULL STOP ) , followed by - id:{n} occurrences of the code unit 0x0030 ( DIGIT ZERO ) , followed by the code units of the id:{k} digits of the decimal representation of id:{s} ."
  [8] ??? "Otherwise , if id:{k} = 1 , return the String consisting of the code unit of the single digit of id:{s} , followed by code unit 0x0065 ( LATIN SMALL LETTER E ) , followed by the code unit 0x002B ( PLUS SIGN ) or the code unit 0x002D ( HYPHEN - MINUS ) according to whether id:{n} - 1 is positive or negative , followed by the code units of the decimal representation of the integer abs ( id:{n} - 1 ) ( with no leading zeroes ) ."
  [9] ??? "Return the String consisting of the code units of the most significant digit of the decimal representation of id:{s} , followed by code unit 0x002E ( FULL STOP ) , followed by the code units of the remaining id:{k} - 1 digits of the decimal representation of id:{s} , followed by code unit 0x0065 ( LATIN SMALL LETTER E ) , followed by code unit 0x002B ( PLUS SIGN ) or the code unit 0x002D ( HYPHEN - MINUS ) according to whether id:{n} - 1 is positive or negative , followed by the code units of the decimal representation of the integer abs ( id:{n} - 1 ) ( with no leading zeroes ) ."
}