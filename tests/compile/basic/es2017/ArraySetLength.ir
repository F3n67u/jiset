{
  if (= Desc.Value absent) {
    app __x0__ = (OrdinaryDefineOwnProperty A "length" Desc)
    app __x1__ = (WrapCompletion __x0__)
    return __x1__
  } else {}
  let newLenDesc = (copy-obj Desc)
  app __x2__ = (ToUint32 Desc.Value)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let newLen = __x2__
  app __x3__ = (ToNumber Desc.Value)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let numberLen = __x3__
  if (! (== newLen numberLen)) throw INTRINSIC_RangeError else {}
  newLenDesc.Value = newLen
  app __x4__ = (OrdinaryGetOwnProperty A "length")
  let oldLenDesc = __x4__
  let oldLen = oldLenDesc.Value
  if (! (< newLen oldLen)) {
    app __x5__ = (OrdinaryDefineOwnProperty A "length" newLenDesc)
    app __x6__ = (WrapCompletion __x5__)
    return __x6__
  } else {}
  if (= oldLenDesc.Writable false) {
    app __x7__ = (WrapCompletion false)
    return __x7__
  } else {}
  if (|| (= newLenDesc.Writable absent) (= newLenDesc.Writable true)) let newWritable = true else {
    let newWritable = false
    newLenDesc.Writable = true
  }
  app __x8__ = (OrdinaryDefineOwnProperty A "length" newLenDesc)
  if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
  let succeeded = __x8__
  if (= succeeded false) {
    app __x9__ = (WrapCompletion false)
    return __x9__
  } else {}
  while (< newLen oldLen) {
    oldLen = (- oldLen 1i)
    app __x10__ = (ToString oldLen)
    if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
    app __x11__ = (A.Delete A __x10__)
    if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else {}
    let deleteSucceeded = __x11__
    if (= deleteSucceeded false) {
      newLenDesc.Value = (+ oldLen 1i)
      if (= newWritable false) newLenDesc.Writable = false else {}
      app __x12__ = (OrdinaryDefineOwnProperty A "length" newLenDesc)
      if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else {}
      let succeeded = __x12__
      app __x13__ = (WrapCompletion false)
      return __x13__
    } else {}
  }
  if (= newWritable false) {
    app __x14__ = (OrdinaryDefineOwnProperty A "length" (new PropertyDescriptor("Writable" -> false)))
    app __x15__ = (WrapCompletion __x14__)
    return __x15__
  } else {}
  app __x16__ = (WrapCompletion true)
  return __x16__
}