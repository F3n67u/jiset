digraph {
  node10387 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;SourceTextModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10391 [shape=diamond, label=<<font color="black">(= module.EvaluationError undefined)</font>> color="black" fillcolor="white" style=filled]
  node10401 [shape=cds, label=<<font color="black">16:app __x4__ = (InnerModuleEvaluation requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node10406 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10385 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10392 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10415 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10396 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= module.Status &quot;instantiated&quot;)</td></tr>
      <tr><td align="left">8:module.Status = &quot;evaluating&quot;</td></tr>
      <tr><td align="left">9:module.DFSIndex = index</td></tr>
      <tr><td align="left">10:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">11:index = (+ index 1i)</td></tr>
      <tr><td align="left">12:append module -&gt; stack</td></tr>
      <tr><td align="left">13:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">13:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10408 [shape=cds, label=<<font color="black">22:app __x6__ = (ModuleExecution module)</font>> color="black" fillcolor="white" style=filled]
  node10403 [shape=diamond, label=<<font color="black">(= requiredModule.Status &quot;evaluating&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10389 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10410 [shape=diamond, label=<<font color="black">(= module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node10399 [shape=cds, label=<<font color="black">14:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node10395 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10414 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node10404 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:assert (= (typeof requiredModule) &quot;SourceTextModuleRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10405 [shape=cds, label=<<font color="black">21:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node10388 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Evaluate module)</font>> color="black" fillcolor="white" style=filled]
  node10390 [shape=diamond, label=<<font color="black">(= module.Status &quot;evaluated&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10409 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:[? __x6__]</td></tr>
      <tr><td align="left">24:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10394 [shape=diamond, label=<<font color="black">(= module.Status &quot;evaluating&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10413 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">29:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">30:requiredModule.Status = &quot;evaluated&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10398 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10393 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return module.EvaluationError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10416 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10397 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10412 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node10402 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:index = [? __x4__]</td></tr>
      <tr><td align="left">17:assert (|| (= requiredModule.Status &quot;evaluating&quot;) (= requiredModule.Status &quot;evaluated&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10407 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10411 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10386 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10400 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let requiredModule = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10407 -> node10397 [ color="black"]
  node10395 -> node10396 [ color="black"]
  node10385 -> node10387 [ color="black"]
  node10398 -> node10399 [ color="black"]
  node10405 -> node10406 [ color="black"]
  node10392 -> node10394 [ color="black"]
  node10396 -> node10397 [ color="black"]
  node10415 -> node10412 [ color="black"]
  node10411 -> node10412 [ color="black"]
  node10387 -> node10388 [label=<<font color="black">true</font>> color="black"]
  node10387 -> node10390 [label=<<font color="black">false</font>> color="black"]
  node10416 -> node10386 [ color="black"]
  node10394 -> node10395 [label=<<font color="black">true</font>> color="black"]
  node10394 -> node10396 [label=<<font color="black">false</font>> color="black"]
  node10401 -> node10402 [ color="black"]
  node10410 -> node10411 [label=<<font color="black">true</font>> color="black"]
  node10410 -> node10416 [label=<<font color="black">false</font>> color="black"]
  node10406 -> node10407 [ color="black"]
  node10390 -> node10391 [label=<<font color="black">true</font>> color="black"]
  node10390 -> node10394 [label=<<font color="black">false</font>> color="black"]
  node10408 -> node10409 [ color="black"]
  node10403 -> node10404 [label=<<font color="black">true</font>> color="black"]
  node10403 -> node10407 [label=<<font color="black">false</font>> color="black"]
  node10414 -> node10415 [label=<<font color="black">true</font>> color="black"]
  node10414 -> node10412 [label=<<font color="black">false</font>> color="black"]
  node10388 -> node10389 [ color="black"]
  node10413 -> node10414 [ color="black"]
  node10391 -> node10392 [label=<<font color="black">true</font>> color="black"]
  node10391 -> node10393 [label=<<font color="black">false</font>> color="black"]
  node10397 -> node10398 [label=<<font color="black">true</font>> color="black"]
  node10397 -> node10408 [label=<<font color="black">false</font>> color="black"]
  node10404 -> node10405 [ color="black"]
  node10389 -> node10390 [ color="black"]
  node10409 -> node10410 [ color="black"]
  node10402 -> node10403 [ color="black"]
  node10393 -> node10394 [ color="black"]
  node10399 -> node10400 [ color="black"]
  node10412 -> node10413 [label=<<font color="black">true</font>> color="black"]
  node10412 -> node10416 [label=<<font color="black">false</font>> color="black"]
  node10400 -> node10401 [ color="black"]
}
