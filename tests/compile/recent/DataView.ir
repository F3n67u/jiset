{
  app buffer = (GetArgument argumentsList 0i)
  app byteOffset = (GetArgument argumentsList 1i)
  app byteLength = (GetArgument argumentsList 2i)
  [0] if (= NewTarget undefined) {
    app __x0__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x0__
  } else [0] {}
  [1] app __x1__ = (RequireInternalSlot buffer "ArrayBufferData")
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [0] {}
  [1] __x1__
  [2] app __x2__ = (ToIndex byteOffset)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [0] {}
  [2] let offset = __x2__
  [3] app __x3__ = (IsDetachedBuffer buffer)
  [3] if (= __x3__ true) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [0] {}
  [4] let bufferByteLength = buffer.ArrayBufferByteLength
  [5] if (< bufferByteLength offset) {
    app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x5__
  } else [0] {}
  [8] if (= byteLength undefined) let viewByteLength = (- bufferByteLength offset) else {
    [9] app __x6__ = (ToIndex byteLength)
    [9] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [0] {}
    [9] let viewByteLength = __x6__
    [10] if (< bufferByteLength (+ offset viewByteLength)) {
      app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x7__
    } else [0] {}
  }
  [11] app __x8__ = (OrdinaryCreateFromConstructor NewTarget "%DataView.prototype%" (new ["DataView", "ViewedArrayBuffer", "ByteLength", "ByteOffset"]))
  [11] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [0] {}
  [11] let O = __x8__
  [12] app __x9__ = (IsDetachedBuffer buffer)
  [12] if (= __x9__ true) {
    app __x10__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x10__
  } else [0] {}
  [13] O.ViewedArrayBuffer = buffer
  [14] O.ByteLength = viewByteLength
  [15] O.ByteOffset = offset
  [16] app __x11__ = (WrapCompletion O)
  [16] return __x11__
}