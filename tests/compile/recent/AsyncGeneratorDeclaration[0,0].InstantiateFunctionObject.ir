{
  [0] access __x0__ = (BindingIdentifier "StringValue")
  [0] let name = __x0__
  [1] let sourceText = (get-syntax AsyncGeneratorDeclaration)
  [2] ??? "Let id:{F} be ! OrdinaryFunctionCreate ( % AsyncGeneratorFunction . prototype % , id:{sourceText} , nt:{FormalParameters} , nt:{AsyncGeneratorBody} , const:{non-lexical-this} , id:{scope} ) ."
  [3] app __x1__ = (SetFunctionName F name)
  [3] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [33] {}
  [3] __x1__
  [4] ??? "Let id:{prototype} be ! OrdinaryObjectCreate ( % AsyncGeneratorFunction . prototype . prototype % ) ."
  [5] app __x2__ = (DefinePropertyOrThrow F "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  [5] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [33] {}
  [5] __x2__
  [6] app __x3__ = (WrapCompletion F)
  [6] return __x3__
}