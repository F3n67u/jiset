digraph {
  node13127 [shape=cds, label=<<font color="black">app __x5__ = (min intStart len)</font>> color="black" fillcolor="white" style=filled]
  node13116 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13112 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
      <tr><td align="left">2:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let intEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let intStart = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13111 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13110 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13120 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node13130 [shape=cds, label=<<font color="black">app __x6__ = (max (+ len intEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node13115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13113 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13123 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let intEnd = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13134 [shape=cds, label=<<font color="black">7:app __x8__ = (max (- to from) 0i)</font>> color="black" fillcolor="white" style=filled]
  node13126 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13122 [shape=cds, label=<<font color="black">app __x3__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node13135 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let span = __x8__</td></tr>
      <tr><td align="left">8:??? &quot;Return the String value containing id:{span} consecutive elements from id:{S} beginning with the element at index id:{from} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13125 [shape=cds, label=<<font color="black">app __x4__ = (max (+ len intStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node13132 [shape=cds, label=<<font color="black">app __x7__ = (min intEnd len)</font>> color="black" fillcolor="white" style=filled]
  node13114 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13129 [shape=diamond, label=<<font color="black">(&lt; intEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node13128 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13124 [shape=diamond, label=<<font color="black">(&lt; intStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node13118 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node13133 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13115 -> node13116 [ color="black"]
  node13123 -> node13124 [ color="black"]
  node13112 -> node13113 [ color="black"]
  node13129 -> node13130 [label=<<font color="black">true</font>> color="black"]
  node13129 -> node13132 [label=<<font color="black">false</font>> color="black"]
  node13124 -> node13125 [label=<<font color="black">true</font>> color="black"]
  node13124 -> node13127 [label=<<font color="black">false</font>> color="black"]
  node13132 -> node13133 [ color="black"]
  node13118 -> node13119 [ color="black"]
  node13131 -> node13134 [ color="black"]
  node13125 -> node13126 [ color="black"]
  node13113 -> node13114 [ color="black"]
  node13117 -> node13118 [ color="black"]
  node13126 -> node13129 [ color="black"]
  node13110 -> node13112 [ color="black"]
  node13134 -> node13135 [ color="black"]
  node13133 -> node13134 [ color="black"]
  node13127 -> node13128 [ color="black"]
  node13122 -> node13123 [ color="black"]
  node13130 -> node13131 [ color="black"]
  node13121 -> node13124 [ color="black"]
  node13114 -> node13115 [ color="black"]
  node13116 -> node13117 [ color="black"]
  node13128 -> node13129 [ color="black"]
  node13120 -> node13121 [label=<<font color="black">true</font>> color="black"]
  node13120 -> node13122 [label=<<font color="black">false</font>> color="black"]
  node13119 -> node13120 [ color="black"]
  node13135 -> node13111 [ color="black"]
}
