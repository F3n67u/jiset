digraph {
  node17815 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17820 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17843 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">14:O.ByteLength = viewByteLength</td></tr>
      <tr><td align="left">15:O.ByteOffset = offset</td></tr>
      <tr><td align="left">16:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17835 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let viewByteLength = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17816 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17834 [shape=cds, label=<<font color="black">9:app __x3__ = (ToIndex byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17837 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17841 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node17840 [shape=cds, label=<<font color="black">12:app __x5__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17826 [shape=cds, label=<<font color="black">3:app __x2__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let viewByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17817 [shape=cds, label=<<font color="black">app buffer = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17842 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17821 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17824 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node17830 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength offset)</font>> color="black" fillcolor="white" style=filled]
  node17831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17838 [shape=cds, label=<<font color="black">11:app __x4__ = (OrdinaryCreateFromConstructor NewTarget &quot;%DataView.prototype%&quot; (new [&quot;DataView&quot;, &quot;ViewedArrayBuffer&quot;, &quot;ByteLength&quot;, &quot;ByteOffset&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17827 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node17819 [shape=cds, label=<<font color="black">app byteLength = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17825 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let offset = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17823 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17818 [shape=cds, label=<<font color="black">app byteOffset = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17822 [shape=cds, label=<<font color="black">1:app __x0__ = (RequireInternalSlot buffer &quot;ArrayBufferData&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17832 [shape=diamond, label=<<font color="black">(= byteLength undefined)</font>> color="black" fillcolor="white" style=filled]
  node17839 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let O = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17836 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset viewByteLength))</font>> color="black" fillcolor="white" style=filled]
  node17815 -> node17817 [ color="black"]
  node17827 -> node17828 [label=<<font color="black">true</font>> color="black"]
  node17827 -> node17829 [label=<<font color="black">false</font>> color="black"]
  node17821 -> node17822 [ color="black"]
  node17822 -> node17823 [ color="black"]
  node17830 -> node17831 [label=<<font color="black">true</font>> color="black"]
  node17830 -> node17832 [label=<<font color="black">false</font>> color="black"]
  node17826 -> node17827 [ color="black"]
  node17839 -> node17840 [ color="black"]
  node17837 -> node17838 [ color="black"]
  node17834 -> node17835 [ color="black"]
  node17819 -> node17820 [ color="black"]
  node17817 -> node17818 [ color="black"]
  node17824 -> node17825 [ color="black"]
  node17842 -> node17843 [ color="black"]
  node17828 -> node17829 [ color="black"]
  node17831 -> node17832 [ color="black"]
  node17820 -> node17821 [label=<<font color="black">true</font>> color="black"]
  node17820 -> node17822 [label=<<font color="black">false</font>> color="black"]
  node17841 -> node17842 [label=<<font color="black">true</font>> color="black"]
  node17841 -> node17843 [label=<<font color="black">false</font>> color="black"]
  node17832 -> node17833 [label=<<font color="black">true</font>> color="black"]
  node17832 -> node17834 [label=<<font color="black">false</font>> color="black"]
  node17833 -> node17838 [ color="black"]
  node17838 -> node17839 [ color="black"]
  node17843 -> node17816 [ color="black"]
  node17836 -> node17837 [label=<<font color="black">true</font>> color="black"]
  node17836 -> node17838 [label=<<font color="black">false</font>> color="black"]
  node17823 -> node17824 [ color="black"]
  node17835 -> node17836 [ color="black"]
  node17825 -> node17826 [ color="black"]
  node17818 -> node17819 [ color="black"]
  node17840 -> node17841 [ color="black"]
  node17829 -> node17830 [ color="black"]
}
