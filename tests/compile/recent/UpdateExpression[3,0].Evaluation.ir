{
  [0] access __x0__ = (UnaryExpression "Evaluation")
  [0] let expr = __x0__
  [1] app __x1__ = (GetValue expr)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [5] {}
  [1] app __x2__ = (ToNumeric __x1__)
  [1] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [5] {}
  [1] let oldValue = __x2__
  [2] ??? "Let id:{newValue} be ! Type ( id:{oldValue} ) : : add ( id:{oldValue} , Type ( id:{oldValue} ) : : unit ) ."
  [3] app __x3__ = (PutValue expr newValue)
  [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [5] {}
  [3] __x3__
  [4] app __x4__ = (WrapCompletion newValue)
  [4] return __x4__
}