{
  app __x0__ = (Type object)
  assert (= __x0__ Object)
  app __x1__ = (OrdinaryObjectCreate INTRINSIC_ForInIteratorPrototype (new ["Object", "ObjectWasVisited", "VisitedKeys", "RemainingKeys"]))
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let iterator = __x1__
  iterator.Object = object
  iterator.ObjectWasVisited = false
  iterator.VisitedKeys = (new [])
  iterator.RemainingKeys = (new [])
  app __x2__ = (WrapCompletion iterator)
  return __x2__
}