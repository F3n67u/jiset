digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">2:app __x0__ = (HasProperty Obj &quot;enumerable&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let enumerable = [! __x2__]</td></tr>
      <tr><td align="left">5:desc.Enumerable = enumerable</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=cds, label=<<font color="black">8:app __x4__ = (Get Obj &quot;configurable&quot;)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let hasEnumerable = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=cds, label=<<font color="black">4:app __x2__ = (ToBoolean [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=diamond, label=<<font color="black">(! (= (typeof Obj) Object))</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">4:app __x1__ = (Get Obj &quot;enumerable&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let desc = (new PropertyDescriptor(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node42 [shape=cds, label=<<font color="black">26:app __x16__ = (IsCallable setter)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=diamond, label=<<font color="black">(= hasWritable true)</font>> color="black" fillcolor="white" style=filled]
  node37 [shape=cds, label=<<font color="black">23:app __x14__ = (HasProperty Obj &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=cds, label=<<font color="black">16:app __x9__ = (Get Obj &quot;writable&quot;)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=cds, label=<<font color="black">12:app __x7__ = (Get Obj &quot;value&quot;)</font>> color="black" fillcolor="white" style=filled]
  node46 [shape=diamond, label=<<font color="black">(|| (! (= desc.Get absent)) (! (= desc.Set absent)))</font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let hasGet = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let value = [? __x7__]</td></tr>
      <tr><td align="left">13:desc.Value = value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node33 [shape=cds, label=<<font color="black">21:app __x13__ = (IsCallable getter)</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=cds, label=<<font color="black">18:app __x11__ = (HasProperty Obj &quot;get&quot;)</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let hasSet = [? __x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=diamond, label=<<font color="black">(= hasConfigurable true)</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let setter = [? __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node45 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:desc.Set = setter</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=cds, label=<<font color="black">10:app __x6__ = (HasProperty Obj &quot;value&quot;)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let getter = [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node34 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x13__ false) (! (= getter undefined)))</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">14:app __x8__ = (HasProperty Obj &quot;writable&quot;)</font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let writable = [! __x10__]</td></tr>
      <tr><td align="left">17:desc.Writable = writable</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let hasConfigurable = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node49 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:return desc</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=diamond, label=<<font color="black">(= hasEnumerable true)</font>> color="black" fillcolor="white" style=filled]
  node39 [shape=diamond, label=<<font color="black">(= hasSet true)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node35 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node48 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let hasValue = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let configurable = [! __x5__]</td></tr>
      <tr><td align="left">9:desc.Configurable = configurable</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node31 [shape=cds, label=<<font color="black">20:app __x12__ = (Get Obj &quot;get&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">6:app __x3__ = (HasProperty Obj &quot;configurable&quot;)</font>> color="black" fillcolor="white" style=filled]
  node43 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x16__ false) (! (= setter undefined)))</font>> color="black" fillcolor="white" style=filled]
  node40 [shape=cds, label=<<font color="black">25:app __x15__ = (Get Obj &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=cds, label=<<font color="black">16:app __x10__ = (ToBoolean [? __x9__])</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let hasWritable = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node36 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:desc.Get = getter</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=diamond, label=<<font color="black">(= hasGet true)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=diamond, label=<<font color="black">(= hasValue true)</font>> color="black" fillcolor="white" style=filled]
  node47 [shape=diamond, label=<<font color="black">(|| (! (= desc.Value absent)) (! (= desc.Writable absent)))</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node15 -> node16 [ color="black"]
  node35 -> node36 [ color="black"]
  node12 -> node13 [ color="black"]
  node9 -> node10 [ color="black"]
  node40 -> node41 [ color="black"]
  node26 -> node27 [ color="black"]
  node13 -> node14 [label=<<font color="black">true</font>> color="black"]
  node13 -> node17 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [ color="black"]
  node20 -> node21 [ color="black"]
  node46 -> node47 [label=<<font color="black">true</font>> color="black"]
  node46 -> node49 [label=<<font color="black">false</font>> color="black"]
  node16 -> node17 [ color="black"]
  node38 -> node39 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node28 -> node29 [ color="black"]
  node29 -> node30 [ color="black"]
  node24 -> node25 [label=<<font color="black">true</font>> color="black"]
  node24 -> node28 [label=<<font color="black">false</font>> color="black"]
  node42 -> node43 [ color="black"]
  node18 -> node19 [ color="black"]
  node7 -> node8 [label=<<font color="black">true</font>> color="black"]
  node7 -> node11 [label=<<font color="black">false</font>> color="black"]
  node11 -> node12 [ color="black"]
  node39 -> node40 [label=<<font color="black">true</font>> color="black"]
  node39 -> node46 [label=<<font color="black">false</font>> color="black"]
  node34 -> node35 [label=<<font color="black">true</font>> color="black"]
  node34 -> node36 [label=<<font color="black">false</font>> color="black"]
  node45 -> node46 [ color="black"]
  node0 -> node2 [ color="black"]
  node36 -> node37 [ color="black"]
  node2 -> node3 [label=<<font color="black">true</font>> color="black"]
  node2 -> node4 [label=<<font color="black">false</font>> color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node44 -> node45 [ color="black"]
  node27 -> node28 [ color="black"]
  node37 -> node38 [ color="black"]
  node19 -> node20 [label=<<font color="black">true</font>> color="black"]
  node19 -> node22 [label=<<font color="black">false</font>> color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
  node31 -> node32 [ color="black"]
  node43 -> node44 [label=<<font color="black">true</font>> color="black"]
  node43 -> node45 [label=<<font color="black">false</font>> color="black"]
  node4 -> node5 [ color="black"]
  node49 -> node1 [ color="black"]
  node25 -> node26 [ color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [ color="black"]
  node48 -> node49 [ color="black"]
  node30 -> node31 [label=<<font color="black">true</font>> color="black"]
  node30 -> node37 [label=<<font color="black">false</font>> color="black"]
  node32 -> node33 [ color="black"]
  node47 -> node48 [label=<<font color="black">true</font>> color="black"]
  node47 -> node49 [label=<<font color="black">false</font>> color="black"]
  node17 -> node18 [ color="black"]
  node33 -> node34 [ color="black"]
  node41 -> node42 [ color="black"]
}
