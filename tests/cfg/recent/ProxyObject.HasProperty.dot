digraph {
  node3345 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;has&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3338 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3350 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P]))</font>> color="black" fillcolor="white" style=filled]
  node3357 [shape=diamond, label=<<font color="black">(= targetDesc.Configurable false)</font>> color="black" fillcolor="white" style=filled]
  node3361 [shape=diamond, label=<<font color="black">(= extensibleTarget false)</font>> color="black" fillcolor="white" style=filled]
  node3339 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node3349 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3354 [shape=cds, label=<<font color="black">10:app __x6__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3356 [shape=diamond, label=<<font color="black">(! (= targetDesc undefined))</font>> color="black" fillcolor="white" style=filled]
  node3346 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3351 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node3337 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3347 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3353 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node3358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3343 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3340 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let targetDesc = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3363 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return booleanTrapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3348 [shape=cds, label=<<font color="black">7:app __x3__ = (target.HasProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3344 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3359 [shape=cds, label=<<font color="black">13:app __x7__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node3362 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3360 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let extensibleTarget = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3341 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3346 -> node3347 [ color="black"]
  node3363 -> node3338 [ color="black"]
  node3355 -> node3356 [ color="black"]
  node3347 -> node3348 [label=<<font color="black">true</font>> color="black"]
  node3347 -> node3350 [label=<<font color="black">false</font>> color="black"]
  node3359 -> node3360 [ color="black"]
  node3349 -> node3350 [ color="black"]
  node3348 -> node3349 [ color="black"]
  node3340 -> node3341 [ color="black"]
  node3345 -> node3346 [ color="black"]
  node3351 -> node3352 [ color="black"]
  node3341 -> node3342 [label=<<font color="black">true</font>> color="black"]
  node3341 -> node3343 [label=<<font color="black">false</font>> color="black"]
  node3339 -> node3340 [ color="black"]
  node3361 -> node3362 [label=<<font color="black">true</font>> color="black"]
  node3361 -> node3363 [label=<<font color="black">false</font>> color="black"]
  node3352 -> node3353 [ color="black"]
  node3354 -> node3355 [ color="black"]
  node3343 -> node3344 [ color="black"]
  node3362 -> node3363 [ color="black"]
  node3350 -> node3351 [ color="black"]
  node3357 -> node3358 [label=<<font color="black">true</font>> color="black"]
  node3357 -> node3359 [label=<<font color="black">false</font>> color="black"]
  node3358 -> node3359 [ color="black"]
  node3344 -> node3345 [ color="black"]
  node3353 -> node3354 [label=<<font color="black">true</font>> color="black"]
  node3353 -> node3363 [label=<<font color="black">false</font>> color="black"]
  node3356 -> node3357 [label=<<font color="black">true</font>> color="black"]
  node3356 -> node3363 [label=<<font color="black">false</font>> color="black"]
  node3360 -> node3361 [ color="black"]
  node3337 -> node3339 [ color="black"]
  node3342 -> node3343 [ color="black"]
}
