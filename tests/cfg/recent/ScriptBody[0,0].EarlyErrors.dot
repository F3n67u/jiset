digraph {
  node21538 [shape=cds, label=<<font color="black">3:app __x3__ = (__x2__ (new []))</font>> color="black" fillcolor="white" style=filled]
  node21534 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node21530 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node21542 [shape=cds, label=<<font color="black">4:access __x4__ = (StatementList &quot;ContainsUndefinedContinueTarget&quot;)</font>> color="black" fillcolor="white" style=filled]
  node21536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21540 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21532 [shape=cds, label=<<font color="black">2:access __x0__ = (StatementList &quot;ContainsDuplicateLabels&quot;)</font>> color="black" fillcolor="white" style=filled]
  node21535 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21537 [shape=cds, label=<<font color="black">3:access __x2__ = (StatementList &quot;ContainsUndefinedBreakTarget&quot;)</font>> color="black" fillcolor="white" style=filled]
  node21531 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;It is a Syntax Error if nt:{StatementList} Contains code:{super} unless the source code containing code:{super} is eval code that is being processed by a direct eval . Additional early error rules for code:{super} within direct eval are defined in PerformEval .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;It is a Syntax Error if nt:{StatementList} Contains nt:{NewTarget} unless the source code containing nt:{NewTarget} is eval code that is being processed by a direct eval . Additional early error rules for nt:{NewTarget} in direct eval are defined in PerformEval .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21541 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21533 [shape=cds, label=<<font color="black">2:app __x1__ = (__x0__ (new []))</font>> color="black" fillcolor="white" style=filled]
  node21539 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node21529 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node21543 [shape=cds, label=<<font color="black">4:app __x5__ = (__x4__ (new []) (new []))</font>> color="black" fillcolor="white" style=filled]
  node21546 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21545 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21544 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node21536 -> node21537 [ color="black"]
  node21533 -> node21534 [ color="black"]
  node21537 -> node21538 [ color="black"]
  node21539 -> node21540 [label=<<font color="black">true</font>> color="black"]
  node21539 -> node21541 [label=<<font color="black">false</font>> color="black"]
  node21540 -> node21542 [ color="black"]
  node21529 -> node21531 [ color="black"]
  node21535 -> node21537 [ color="black"]
  node21541 -> node21542 [ color="black"]
  node21546 -> node21530 [ color="black"]
  node21534 -> node21535 [label=<<font color="black">true</font>> color="black"]
  node21534 -> node21536 [label=<<font color="black">false</font>> color="black"]
  node21545 -> node21530 [ color="black"]
  node21531 -> node21532 [ color="black"]
  node21532 -> node21533 [ color="black"]
  node21542 -> node21543 [ color="black"]
  node21543 -> node21544 [ color="black"]
  node21544 -> node21545 [label=<<font color="black">true</font>> color="black"]
  node21544 -> node21546 [label=<<font color="black">false</font>> color="black"]
  node21538 -> node21539 [ color="black"]
}
