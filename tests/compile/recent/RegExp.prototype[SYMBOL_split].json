[{
  "tokens": ["Let", {
    "id": "rx"
  }, "be", "the", {
    "value": "this"
  }, "value", "."]
}, {
  "tokens": ["If", "Type", "(", {
    "id": "rx"
  }, ")", "is", "not", "Object", ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Let", {
    "id": "S"
  }, "be", "?", "ToString", "(", {
    "id": "string"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "C"
  }, "be", "?", "SpeciesConstructor", "(", {
    "id": "rx"
  }, ",", "%", "RegExp", "%", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "flags"
  }, "be", "?", "ToString", "(", "?", "Get", "(", {
    "id": "rx"
  }, ",", {
    "value": "\"flags\""
  }, ")", ")", "."]
}, {
  "tokens": ["If", {
    "id": "flags"
  }, "contains", {
    "value": "\"u\""
  }, ",", "let", {
    "id": "unicodeMatching"
  }, "be", {
    "value": "true"
  }, "."]
}, {
  "tokens": ["Else", ",", "let", {
    "id": "unicodeMatching"
  }, "be", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "flags"
  }, "contains", {
    "value": "\"y\""
  }, ",", "let", {
    "id": "newFlags"
  }, "be", {
    "id": "flags"
  }, "."]
}, {
  "tokens": ["Else", ",", "let", {
    "id": "newFlags"
  }, "be", "the", "string", "-", "concatenation", "of", {
    "id": "flags"
  }, "and", {
    "value": "\"y\""
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "splitter"
  }, "be", "?", "Construct", "(", {
    "id": "C"
  }, ",", "¬´", {
    "id": "rx"
  }, ",", {
    "id": "newFlags"
  }, "¬ª", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "A"
  }, "be", "!", "ArrayCreate", "(", "0", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "lengthA"
  }, "be", "0", "."]
}, {
  "tokens": ["If", {
    "id": "limit"
  }, "is", {
    "value": "undefined"
  }, ",", "let", {
    "id": "lim"
  }, "be", "2", {
    "sup": {
      "tokens": ["32"]
    }
  }, "-", "1", ";", "else", "let", {
    "id": "lim"
  }, "be", "‚Ñù", "(", "?", "ToUint32", "(", {
    "id": "limit"
  }, ")", ")", "."]
}, {
  "tokens": ["If", {
    "id": "lim"
  }, "is", "0", ",", "return", {
    "id": "A"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "size"
  }, "be", "the", "length", "of", {
    "id": "S"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "size"
  }, "is", "0", ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "z"
  }, "be", "?", "RegExpExec", "(", {
    "id": "splitter"
  }, ",", {
    "id": "S"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "z"
  }, "is", "not", {
    "value": "null"
  }, ",", "return", {
    "id": "A"
  }, "."]
}, {
  "tokens": ["Perform", "!", "CreateDataPropertyOrThrow", "(", {
    "id": "A"
  }, ",", {
    "value": "\"0\""
  }, ",", {
    "id": "S"
  }, ")", "."]
}, {
  "tokens": ["Return", {
    "id": "A"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "p"
  }, "be", "0", "."]
}, {
  "tokens": ["Let", {
    "id": "q"
  }, "be", {
    "id": "p"
  }, "."]
}, {
  "tokens": ["Repeat", ",", "while", {
    "id": "q"
  }, "<", {
    "id": "size"
  }, ","]
}, {
  "tokens": ["Perform", "?", "Set", "(", {
    "id": "splitter"
  }, ",", {
    "value": "\"lastIndex\""
  }, ",", "ùîΩ", "(", {
    "id": "q"
  }, ")", ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "z"
  }, "be", "?", "RegExpExec", "(", {
    "id": "splitter"
  }, ",", {
    "id": "S"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "z"
  }, "is", {
    "value": "null"
  }, ",", "set", {
    "id": "q"
  }, "to", "AdvanceStringIndex", "(", {
    "id": "S"
  }, ",", {
    "id": "q"
  }, ",", {
    "id": "unicodeMatching"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "e"
  }, "be", "‚Ñù", "(", "?", "ToLength", "(", "?", "Get", "(", {
    "id": "splitter"
  }, ",", {
    "value": "\"lastIndex\""
  }, ")", ")", ")", "."]
}, {
  "tokens": ["Set", {
    "id": "e"
  }, "to", "min", "(", {
    "id": "e"
  }, ",", {
    "id": "size"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "e"
  }, "=", {
    "id": "p"
  }, ",", "set", {
    "id": "q"
  }, "to", "AdvanceStringIndex", "(", {
    "id": "S"
  }, ",", {
    "id": "q"
  }, ",", {
    "id": "unicodeMatching"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "T"
  }, "be", "the", "substring", "of", {
    "id": "S"
  }, "from", {
    "id": "p"
  }, "to", {
    "id": "q"
  }, "."]
}, {
  "tokens": ["Perform", "!", "CreateDataPropertyOrThrow", "(", {
    "id": "A"
  }, ",", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "lengthA"
  }, ")", ")", ",", {
    "id": "T"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "lengthA"
  }, "to", {
    "id": "lengthA"
  }, "+", "1", "."]
}, {
  "tokens": ["If", {
    "id": "lengthA"
  }, "=", {
    "id": "lim"
  }, ",", "return", {
    "id": "A"
  }, "."]
}, {
  "tokens": ["Set", {
    "id": "p"
  }, "to", {
    "id": "e"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "numberOfCaptures"
  }, "be", "?", "LengthOfArrayLike", "(", {
    "id": "z"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "numberOfCaptures"
  }, "to", "max", "(", {
    "id": "numberOfCaptures"
  }, "-", "1", ",", "0", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "i"
  }, "be", "1", "."]
}, {
  "tokens": ["Repeat", ",", "while", {
    "id": "i"
  }, "‚â§", {
    "id": "numberOfCaptures"
  }, ","]
}, {
  "tokens": ["Let", {
    "id": "nextCapture"
  }, "be", "?", "Get", "(", {
    "id": "z"
  }, ",", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "i"
  }, ")", ")", ")", "."]
}, {
  "tokens": ["Perform", "!", "CreateDataPropertyOrThrow", "(", {
    "id": "A"
  }, ",", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "lengthA"
  }, ")", ")", ",", {
    "id": "nextCapture"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "i"
  }, "to", {
    "id": "i"
  }, "+", "1", "."]
}, {
  "tokens": ["Set", {
    "id": "lengthA"
  }, "to", {
    "id": "lengthA"
  }, "+", "1", "."]
}, {
  "tokens": ["If", {
    "id": "lengthA"
  }, "=", {
    "id": "lim"
  }, ",", "return", {
    "id": "A"
  }, "."]
}, {
  "tokens": ["Set", {
    "id": "q"
  }, "to", {
    "id": "p"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "T"
  }, "be", "the", "substring", "of", {
    "id": "S"
  }, "from", {
    "id": "p"
  }, "to", {
    "id": "size"
  }, "."]
}, {
  "tokens": ["Perform", "!", "CreateDataPropertyOrThrow", "(", {
    "id": "A"
  }, ",", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "lengthA"
  }, ")", ")", ",", {
    "id": "T"
  }, ")", "."]
}, {
  "tokens": ["Return", {
    "id": "A"
  }, "."]
}]