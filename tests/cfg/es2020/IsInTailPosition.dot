digraph {
  node10387 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10395 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10394 [shape=cds, label=<<font color="black">8:app __x1__ = (__x0__ call)</font>> color="black" fillcolor="white" style=filled]
  node10391 [shape=diamond, label=<<font color="black">(is-instance-of body AsyncConciseBody)</font>> color="black" fillcolor="white" style=filled]
  node10393 [shape=cds, label=<<font color="black">8:access __x0__ = (body &quot;HasCallInTailPosition&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10392 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10386 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10389 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10388 [shape=diamond, label=<<font color="black">false</font>> color="black" fillcolor="white" style=filled]
  node10390 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:??? &quot;If id:{call} is not contained within a nt:{FunctionBody} , nt:{ConciseBody} , or nt:{AsyncConciseBody} , return value:{false} .&quot;</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{body} be the nt:{FunctionBody} , nt:{ConciseBody} , or nt:{AsyncConciseBody} that most closely contains id:{call} .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;If id:{body} is the nt:{FunctionBody} of a nt:{GeneratorBody} , return value:{false} .&quot;</td></tr>
      <tr><td align="left">5:??? &quot;If id:{body} is the nt:{FunctionBody} of an nt:{AsyncFunctionBody} , return value:{false} .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;If id:{body} is the nt:{FunctionBody} of an nt:{AsyncGeneratorBody} , return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10394 -> node10395 [ color="black"]
  node10391 -> node10392 [label=<<font color="black">true</font>> color="black"]
  node10391 -> node10393 [label=<<font color="black">false</font>> color="black"]
  node10389 -> node10390 [ color="black"]
  node10390 -> node10391 [ color="black"]
  node10393 -> node10394 [ color="black"]
  node10388 -> node10389 [label=<<font color="black">true</font>> color="black"]
  node10388 -> node10390 [label=<<font color="black">false</font>> color="black"]
  node10392 -> node10393 [ color="black"]
  node10386 -> node10388 [ color="black"]
  node10395 -> node10387 [ color="black"]
}
