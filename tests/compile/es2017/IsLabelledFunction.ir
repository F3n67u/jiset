{
  [0] if (! (is-instance-of stmt LabelledStatement)) {
    app __x0__ = (WrapCompletion false)
    return __x0__
  } else [20] {}
  [1] access __x1__ = (stmt "LabelledItem")
  [1] let item = __x1__
  [2] if (is-instance-of item LabelledItem1) {
    access FunctionDeclaration = (item "FunctionDeclaration")
    app __x2__ = (WrapCompletion true)
    return __x2__
  } else [20] {}
  [3] access __x3__ = (item "Statement")
  [3] let subStmt = __x3__
  [4] app __x4__ = (IsLabelledFunction subStmt)
  [4] app __x5__ = (WrapCompletion __x4__)
  [4] return __x5__
}