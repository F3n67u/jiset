digraph {
  node1469 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1465 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1470 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:GLOBAL_context = null</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{nextQueue} be a non - empty Job Queue chosen in an implementation defined manner . If all Job Queues are empty , the result is implementation defined .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{nextPending} be the PendingJob record at the front of id:{nextQueue} . Remove that record from id:{nextQueue} .&quot;</td></tr>
      <tr><td align="left">5:let newContext = (new ExecutionContext(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">6:newContext.Function = null</td></tr>
      <tr><td align="left">7:newContext.Realm = nextPending.Realm</td></tr>
      <tr><td align="left">8:newContext.ScriptOrModule = nextPending.ScriptOrModule</td></tr>
      <tr><td align="left">9:append newContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">9:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">11:??? &quot;Perform the abstract operation named by id:{nextPending} . [ [ Job ] ] using the elements of id:{nextPending} . [ [ Arguments ] ] as its arguments .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1466 [shape=cds, label=<<font color="black">0:app __x0__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node1464 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1467 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node1468 [shape=cds, label=<<font color="black">app __x1__ = (HostReportErrors (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node1468 -> node1469 [ color="black"]
  node1470 -> node1465 [ color="black"]
  node1464 -> node1466 [ color="black"]
  node1469 -> node1470 [ color="black"]
  node1466 -> node1467 [ color="black"]
  node1467 -> node1468 [label=<<font color="black">true</font>> color="black"]
  node1467 -> node1470 [label=<<font color="black">false</font>> color="black"]
}
