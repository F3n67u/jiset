{
  access __x0__ = (Atom "Evaluation")
  app __x1__ = (__x0__ direction)
  let m = __x1__
  ??? "Evaluate nt:{Quantifier} to obtain the three results : a non - negative integer id:{min} , a non - negative integer ( or + âˆž ) id:{max} , and Boolean id:{greedy} ."
  assert (! (< max min))
  ??? "Let id:{parenIndex} be the number of left - capturing parentheses in the entire regular expression that occur to the left of this nt:{Term} . This is the total number of grammar:{Atom4} Parse Nodes prior to or enclosing this nt:{Term} ."
  ??? "Let id:{parenCount} be the number of left - capturing parentheses in nt:{Atom} . This is the total number of grammar:{Atom4} Parse Nodes enclosed by nt:{Atom} ."
  ??? "Return a new Matcher with parameters ( id:{x} , id:{c} ) that captures id:{m} , id:{min} , id:{max} , id:{greedy} , id:{parenIndex} , and id:{parenCount} and performs the following steps when called : in:{} out:{}"
}