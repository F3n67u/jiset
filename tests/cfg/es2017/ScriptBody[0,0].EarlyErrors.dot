digraph {
  node18114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;It is a Syntax Error if nt:{StatementList} Contains code:{super} unless the source code containing code:{super} is eval code that is being processed by a direct eval . Additional early error rules for code:{super} within direct eval are defined in PerformEval .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;It is a Syntax Error if nt:{StatementList} Contains nt:{NewTarget} unless the source code containing nt:{NewTarget} is eval code that is being processed by a direct eval . Additional early error rules for nt:{NewTarget} in direct eval are defined in PerformEval .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18120 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node18116 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node18126 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18123 [shape=cds, label=<<font color="black">4:access __x2__ = (StatementList &quot;ContainsUndefinedContinueTarget&quot; (new []) (new []))</font>> color="black" fillcolor="white" style=filled]
  node18112 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18124 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node18118 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18122 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18113 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18119 [shape=cds, label=<<font color="black">3:access __x1__ = (StatementList &quot;ContainsUndefinedBreakTarget&quot; (new []))</font>> color="black" fillcolor="white" style=filled]
  node18117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18115 [shape=cds, label=<<font color="black">2:access __x0__ = (StatementList &quot;ContainsDuplicateLabels&quot; (new []))</font>> color="black" fillcolor="white" style=filled]
  node18114 -> node18115 [ color="black"]
  node18112 -> node18114 [ color="black"]
  node18126 -> node18113 [ color="black"]
  node18123 -> node18124 [ color="black"]
  node18116 -> node18117 [label=<<font color="black">true</font>> color="black"]
  node18116 -> node18118 [label=<<font color="black">false</font>> color="black"]
  node18124 -> node18125 [label=<<font color="black">true</font>> color="black"]
  node18124 -> node18126 [label=<<font color="black">false</font>> color="black"]
  node18125 -> node18113 [ color="black"]
  node18119 -> node18120 [ color="black"]
  node18122 -> node18123 [ color="black"]
  node18118 -> node18119 [ color="black"]
  node18120 -> node18121 [label=<<font color="black">true</font>> color="black"]
  node18120 -> node18122 [label=<<font color="black">false</font>> color="black"]
  node18121 -> node18123 [ color="black"]
  node18115 -> node18116 [ color="black"]
  node18117 -> node18119 [ color="black"]
}
