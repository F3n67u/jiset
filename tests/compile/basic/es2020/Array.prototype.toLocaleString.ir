{
  app __x0__ = (ToObject this)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let array = __x0__
  app __x1__ = (LengthOfArrayLike array)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let len = __x1__
  ??? "Let id:{separator} be the String value for the list - separator String appropriate for the host environment ' s current locale ( this is derived in an implementation - defined way ) ."
  let R = ""
  let k = 0i
  while (< k len) {
    if (< 0i k) R = (+ R separator) else {}
    app __x2__ = (ToString k)
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
    app __x3__ = (Get array __x2__)
    if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
    let nextElement = __x3__
    if (! (|| (= nextElement undefined) (= nextElement null))) {
      app __x4__ = (Invoke nextElement "toLocaleString")
      if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
      app __x5__ = (ToString __x4__)
      if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
      let S = __x5__
      R = (+ R S)
    } else {}
    k = (+ k 1i)
  }
  app __x6__ = (WrapCompletion R)
  return __x6__
}