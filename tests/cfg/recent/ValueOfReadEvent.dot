digraph {
  node19621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19617 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (= (typeof R) &quot;ReadSharedMemory&quot;) (= (typeof R) &quot;ReadModifyWriteSharedMemory&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19615 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19620 [shape=cds, label=<<font color="black">3:app __x1__ = (ComposeWriteEventBytes execution R.ByteIndex Ws)</font>> color="black" fillcolor="white" style=filled]
  node19616 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19619 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let Ws = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19618 [shape=cds, label=<<font color="black">1:app __x0__ = (execution.ReadsBytesFrom execution R)</font>> color="black" fillcolor="white" style=filled]
  node19615 -> node19617 [ color="black"]
  node19618 -> node19619 [ color="black"]
  node19617 -> node19618 [ color="black"]
  node19619 -> node19620 [ color="black"]
  node19621 -> node19616 [ color="black"]
  node19620 -> node19621 [ color="black"]
}
