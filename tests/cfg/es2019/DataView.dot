digraph {
  node16619 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">15:O.ByteLength = viewByteLength</td></tr>
      <tr><td align="left">16:O.ByteOffset = offset</td></tr>
      <tr><td align="left">17:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16613 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16609 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let viewByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16608 [shape=diamond, label=<<font color="black">(|| (= byteLength absent) (= byteLength undefined))</font>> color="black" fillcolor="white" style=filled]
  node16594 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16605 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16617 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node16600 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIndex byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node16602 [shape=cds, label=<<font color="black">4:app __x2__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16595 [shape=cds, label=<<font color="black">1:app __x0__ = (Type buffer)</font>> color="black" fillcolor="white" style=filled]
  node16598 [shape=diamond, label=<<font color="black">(= buffer.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node16604 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16591 [shape=cds, label=<<font color="black">app byteOffset = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16592 [shape=cds, label=<<font color="black">app byteLength = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16597 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16616 [shape=cds, label=<<font color="black">13:app __x5__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16601 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let offset = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16588 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16615 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let O = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16593 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16612 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset viewByteLength))</font>> color="black" fillcolor="white" style=filled]
  node16599 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16596 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16611 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let viewByteLength = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16589 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16606 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength offset)</font>> color="black" fillcolor="white" style=filled]
  node16607 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16618 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16603 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node16614 [shape=cds, label=<<font color="black">12:app __x4__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_DataViewPrototype (new [&quot;DataView&quot;, &quot;ViewedArrayBuffer&quot;, &quot;ByteLength&quot;, &quot;ByteOffset&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16590 [shape=cds, label=<<font color="black">app buffer = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16610 [shape=cds, label=<<font color="black">10:app __x3__ = (ToIndex byteLength)</font>> color="black" fillcolor="white" style=filled]
  node16603 -> node16604 [label=<<font color="black">true</font>> color="black"]
  node16603 -> node16605 [label=<<font color="black">false</font>> color="black"]
  node16590 -> node16591 [ color="black"]
  node16601 -> node16602 [ color="black"]
  node16607 -> node16608 [ color="black"]
  node16604 -> node16605 [ color="black"]
  node16592 -> node16593 [ color="black"]
  node16591 -> node16592 [ color="black"]
  node16616 -> node16617 [ color="black"]
  node16612 -> node16613 [label=<<font color="black">true</font>> color="black"]
  node16612 -> node16614 [label=<<font color="black">false</font>> color="black"]
  node16619 -> node16589 [ color="black"]
  node16595 -> node16596 [ color="black"]
  node16594 -> node16595 [ color="black"]
  node16609 -> node16614 [ color="black"]
  node16593 -> node16594 [label=<<font color="black">true</font>> color="black"]
  node16593 -> node16595 [label=<<font color="black">false</font>> color="black"]
  node16596 -> node16597 [label=<<font color="black">true</font>> color="black"]
  node16596 -> node16598 [label=<<font color="black">false</font>> color="black"]
  node16597 -> node16598 [ color="black"]
  node16610 -> node16611 [ color="black"]
  node16615 -> node16616 [ color="black"]
  node16611 -> node16612 [ color="black"]
  node16614 -> node16615 [ color="black"]
  node16598 -> node16599 [label=<<font color="black">true</font>> color="black"]
  node16598 -> node16600 [label=<<font color="black">false</font>> color="black"]
  node16606 -> node16607 [label=<<font color="black">true</font>> color="black"]
  node16606 -> node16608 [label=<<font color="black">false</font>> color="black"]
  node16600 -> node16601 [ color="black"]
  node16618 -> node16619 [ color="black"]
  node16588 -> node16590 [ color="black"]
  node16605 -> node16606 [ color="black"]
  node16608 -> node16609 [label=<<font color="black">true</font>> color="black"]
  node16608 -> node16610 [label=<<font color="black">false</font>> color="black"]
  node16599 -> node16600 [ color="black"]
  node16602 -> node16603 [ color="black"]
  node16613 -> node16614 [ color="black"]
  node16617 -> node16618 [label=<<font color="black">true</font>> color="black"]
  node16617 -> node16619 [label=<<font color="black">false</font>> color="black"]
}
