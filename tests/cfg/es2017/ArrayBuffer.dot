digraph {
  node15514 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node15509 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15515 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15513 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15510 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15507 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15508 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15512 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node15514 -> node15515 [ color="black"]
  node15510 -> node15511 [label=<<font color="black">true</font>> color="black"]
  node15510 -> node15512 [label=<<font color="black">false</font>> color="black"]
  node15511 -> node15512 [ color="black"]
  node15509 -> node15510 [ color="black"]
  node15507 -> node15509 [ color="black"]
  node15515 -> node15508 [ color="black"]
  node15512 -> node15513 [ color="black"]
  node15513 -> node15514 [ color="black"]
}
