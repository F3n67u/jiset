digraph {
  node17545 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17542 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17541 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17538 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17544 [shape=cds, label=<<font color="black">2:app __x1__ = (PromiseResolve C x)</font>> color="black" fillcolor="white" style=filled]
  node17537 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17539 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17543 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17540 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17537 -> node17539 [ color="black"]
  node17544 -> node17545 [ color="black"]
  node17543 -> node17544 [ color="black"]
  node17545 -> node17538 [ color="black"]
  node17542 -> node17543 [label=<<font color="black">true</font>> color="black"]
  node17542 -> node17544 [label=<<font color="black">false</font>> color="black"]
  node17541 -> node17542 [ color="black"]
  node17540 -> node17541 [ color="black"]
  node17539 -> node17540 [ color="black"]
}
