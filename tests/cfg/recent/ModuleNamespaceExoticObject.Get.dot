digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">2:app __x1__ = (OrdinaryGet O P Receiver)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let m = O.Module</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=cds, label=<<font color="black">11:app __x3__ = (GetModuleNamespace targetModule)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=diamond, label=<<font color="black">(= binding.BindingName &quot;*namespace*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=diamond, label=<<font color="black">(= targetEnv undefined)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let binding = [! __x2__]</td></tr>
      <tr><td align="left">7:assert (is-instance-of binding ResolvedBindingRecord)</td></tr>
      <tr><td align="left">8:let targetModule = binding.Module</td></tr>
      <tr><td align="left">9:assert (! (= targetModule undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let exports = O.Exports</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw ReferenceError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let targetEnv = targetModule.Environment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">6:app __x2__ = (m.ResolveExport m P)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=diamond, label=<<font color="black">(! (contains exports P))</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=cds, label=<<font color="black">14:app __x4__ = (targetEnv.GetBindingValue targetEnv binding.BindingName true)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=diamond, label=<<font color="black">(= (typeof P) Symbol)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 -> node20 [ color="black"]
  node12 -> node13 [ color="black"]
  node0 -> node2 [ color="black"]
  node9 -> node10 [ color="black"]
  node14 -> node15 [ color="black"]
  node10 -> node11 [ color="black"]
  node16 -> node17 [ color="black"]
  node8 -> node9 [label=<<font color="black">true</font>> color="black"]
  node8 -> node10 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node7 -> node8 [ color="black"]
  node18 -> node19 [ color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node4 -> node5 [label=<<font color="black">true</font>> color="black"]
  node4 -> node7 [label=<<font color="black">false</font>> color="black"]
  node11 -> node12 [ color="black"]
  node13 -> node14 [label=<<font color="black">true</font>> color="black"]
  node13 -> node16 [label=<<font color="black">false</font>> color="black"]
  node6 -> node7 [ color="black"]
  node17 -> node18 [label=<<font color="black">true</font>> color="black"]
  node17 -> node19 [label=<<font color="black">false</font>> color="black"]
  node20 -> node1 [ color="black"]
}
