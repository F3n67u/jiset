digraph {
  node8838 [shape=cds, label=<<font color="black">1:app __x1__ = (OrdinaryCreateFromConstructor functionObject INTRINSIC_AsyncGeneratorPrototype (new [&quot;AsyncGeneratorState&quot;, &quot;AsyncGeneratorContext&quot;, &quot;AsyncGeneratorQueue&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node8834 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8835 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8839 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let generator = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8841 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:[! __x2__]</td></tr>
      <tr><td align="left">3:return (new Completion(&quot;Type&quot; -&gt; CONST_return, &quot;Value&quot; -&gt; generator, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8836 [shape=cds, label=<<font color="black">0:app __x0__ = (FunctionDeclarationInstantiation functionObject argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node8840 [shape=cds, label=<<font color="black">2:app __x2__ = (AsyncGeneratorStart generator FunctionBody)</font>> color="black" fillcolor="white" style=filled]
  node8837 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8838 -> node8839 [ color="black"]
  node8834 -> node8836 [ color="black"]
  node8839 -> node8840 [ color="black"]
  node8840 -> node8841 [ color="black"]
  node8836 -> node8837 [ color="black"]
  node8837 -> node8838 [ color="black"]
  node8841 -> node8835 [ color="black"]
}
