digraph {
  node9096 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9099 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9103 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let closure = [! __x1__]</td></tr>
      <tr><td align="left">4:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9095 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9100 [shape=cds, label=<<font color="black">1:access __x0__ = (GLOBAL_context &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9101 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let scope = __x0__</td></tr>
      <tr><td align="left">2:let parameters = AsyncArrowBindingIdentifier</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9097 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node9102 [shape=cds, label=<<font color="black">3:app __x1__ = (AsyncFunctionCreate CONST_Arrow parameters AsyncConciseBody scope strict)</font>> color="black" fillcolor="white" style=filled]
  node9098 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9097 -> node9098 [label=<<font color="black">true</font>> color="black"]
  node9097 -> node9099 [label=<<font color="black">false</font>> color="black"]
  node9100 -> node9101 [ color="black"]
  node9095 -> node9097 [ color="black"]
  node9099 -> node9100 [ color="black"]
  node9102 -> node9103 [ color="black"]
  node9103 -> node9096 [ color="black"]
  node9101 -> node9102 [ color="black"]
  node9098 -> node9100 [ color="black"]
}
