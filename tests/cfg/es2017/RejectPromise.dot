digraph {
  node16383 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16376 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16379 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node16381 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16377 [shape=cds, label=<<font color="black">app reason = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16374 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16382 [shape=cds, label=<<font color="black">7:app __x1__ = (TriggerPromiseReactions reactions reason)</font>> color="black" fillcolor="white" style=filled]
  node16378 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= promise.PromiseState &quot;pending&quot;)</td></tr>
      <tr><td align="left">1:let reactions = promise.PromiseRejectReactions</td></tr>
      <tr><td align="left">2:promise.PromiseResult = reason</td></tr>
      <tr><td align="left">3:promise.PromiseFulfillReactions = undefined</td></tr>
      <tr><td align="left">4:promise.PromiseRejectReactions = undefined</td></tr>
      <tr><td align="left">5:promise.PromiseState = &quot;rejected&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16375 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16380 [shape=cds, label=<<font color="black">app __x0__ = (HostPromiseRejectionTracker promise &quot;reject&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16381 -> node16382 [ color="black"]
  node16383 -> node16375 [ color="black"]
  node16378 -> node16379 [ color="black"]
  node16377 -> node16378 [ color="black"]
  node16379 -> node16380 [label=<<font color="black">true</font>> color="black"]
  node16379 -> node16382 [label=<<font color="black">false</font>> color="black"]
  node16380 -> node16381 [ color="black"]
  node16374 -> node16376 [ color="black"]
  node16376 -> node16377 [ color="black"]
  node16382 -> node16383 [ color="black"]
}
