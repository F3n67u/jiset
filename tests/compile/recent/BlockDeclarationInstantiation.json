[{
  "tokens": ["Assert", ":", {
    "id": "env"
  }, "is", "a", "declarative", "Environment", "Record", "."]
}, {
  "tokens": ["Let", {
    "id": "declarations"
  }, "be", "the", "LexicallyScopedDeclarations", "of", {
    "id": "code"
  }, "."]
}, {
  "tokens": ["For", "each", "element", {
    "id": "d"
  }, "of", {
    "id": "declarations"
  }, ",", "do"]
}, {
  "tokens": ["For", "each", "element", {
    "id": "dn"
  }, "of", "the", "BoundNames", "of", {
    "id": "d"
  }, ",", "do"]
}, {
  "tokens": ["If", "IsConstantDeclaration", "of", {
    "id": "d"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Perform", "!", {
    "id": "env"
  }, ".", "CreateImmutableBinding", "(", {
    "id": "dn"
  }, ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Perform", "!", {
    "id": "env"
  }, ".", "CreateMutableBinding", "(", {
    "id": "dn"
  }, ",", {
    "value": "false"
  }, ")", ".", "NOTE", ":", "This", "step", "is", "replaced", "in", "section", {
    "link": ""
  }, "."]
}, {
  "tokens": ["If", {
    "id": "d"
  }, "is", "a", {
    "nt": "FunctionDeclaration"
  }, ",", "a", {
    "nt": "GeneratorDeclaration"
  }, ",", "an", {
    "nt": "AsyncFunctionDeclaration"
  }, ",", "or", "an", {
    "nt": "AsyncGeneratorDeclaration"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "fn"
  }, "be", "the", "sole", "element", "of", "the", "BoundNames", "of", {
    "id": "d"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "fo"
  }, "be", "InstantiateFunctionObject", "of", {
    "id": "d"
  }, "with", "argument", {
    "id": "env"
  }, "."]
}, {
  "tokens": ["Perform", {
    "id": "env"
  }, ".", "InitializeBinding", "(", {
    "id": "fn"
  }, ",", {
    "id": "fo"
  }, ")", ".", "NOTE", ":", "This", "step", "is", "replaced", "in", "section", {
    "link": ""
  }, "."]
}]