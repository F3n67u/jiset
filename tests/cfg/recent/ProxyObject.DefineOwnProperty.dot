digraph {
  node3317 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node3312 [shape=cds, label=<<font color="black">8:app __x4__ = (FromPropertyDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node3327 [shape=diamond, label=<<font color="black">(= extensibleTarget false)</font>> color="black" fillcolor="white" style=filled]
  node3339 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3333 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3319 [shape=cds, label=<<font color="black">11:app __x7__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3315 [shape=cds, label=<<font color="black">9:app __x6__ = (ToBoolean [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node3320 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetDesc = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3324 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let settingConfigFalse = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3337 [shape=diamond, label=<<font color="black">(&amp;&amp; (&amp;&amp; (= __x10__ true) (= targetDesc.Configurable false)) (= targetDesc.Writable true))</font>> color="black" fillcolor="white" style=filled]
  node3332 [shape=diamond, label=<<font color="black">(= __x9__ false)</font>> color="black" fillcolor="white" style=filled]
  node3338 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Desc.Writable absent)) (= Desc.Writable false))</font>> color="black" fillcolor="white" style=filled]
  node3313 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let descObj = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3308 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3322 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let extensibleTarget = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3300 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3318 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3301 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node3303 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3307 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;defineProperty&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3314 [shape=cds, label=<<font color="black">9:app __x5__ = (Call trap handler (new [target, P, descObj]))</font>> color="black" fillcolor="white" style=filled]
  node3311 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3326 [shape=diamond, label=<<font color="black">(= targetDesc undefined)</font>> color="black" fillcolor="white" style=filled]
  node3306 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3321 [shape=cds, label=<<font color="black">12:app __x8__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node3330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3340 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3304 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3302 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3310 [shape=cds, label=<<font color="black">7:app __x3__ = (target.DefineOwnProperty target P Desc)</font>> color="black" fillcolor="white" style=filled]
  node3325 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let settingConfigFalse = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3305 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3334 [shape=diamond, label=<<font color="black">(&amp;&amp; (= settingConfigFalse true) (= targetDesc.Configurable true))</font>> color="black" fillcolor="white" style=filled]
  node3329 [shape=diamond, label=<<font color="black">(= settingConfigFalse true)</font>> color="black" fillcolor="white" style=filled]
  node3336 [shape=cds, label=<<font color="black">22:app __x10__ = (IsDataDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3331 [shape=cds, label=<<font color="black">20:app __x9__ = (IsCompatiblePropertyDescriptor extensibleTarget Desc targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3309 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3328 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3323 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Desc.Configurable absent)) (= Desc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node3299 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3316 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let booleanTrapResult = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3338 -> node3339 [label=<<font color="black">true</font>> color="black"]
  node3338 -> node3340 [label=<<font color="black">false</font>> color="black"]
  node3327 -> node3328 [label=<<font color="black">true</font>> color="black"]
  node3327 -> node3329 [label=<<font color="black">false</font>> color="black"]
  node3324 -> node3326 [ color="black"]
  node3303 -> node3304 [label=<<font color="black">true</font>> color="black"]
  node3303 -> node3305 [label=<<font color="black">false</font>> color="black"]
  node3334 -> node3335 [label=<<font color="black">true</font>> color="black"]
  node3334 -> node3336 [label=<<font color="black">false</font>> color="black"]
  node3331 -> node3332 [ color="black"]
  node3323 -> node3324 [label=<<font color="black">true</font>> color="black"]
  node3323 -> node3325 [label=<<font color="black">false</font>> color="black"]
  node3315 -> node3316 [ color="black"]
  node3332 -> node3333 [label=<<font color="black">true</font>> color="black"]
  node3332 -> node3334 [label=<<font color="black">false</font>> color="black"]
  node3321 -> node3322 [ color="black"]
  node3299 -> node3301 [ color="black"]
  node3329 -> node3330 [label=<<font color="black">true</font>> color="black"]
  node3329 -> node3340 [label=<<font color="black">false</font>> color="black"]
  node3313 -> node3314 [ color="black"]
  node3309 -> node3310 [label=<<font color="black">true</font>> color="black"]
  node3309 -> node3312 [label=<<font color="black">false</font>> color="black"]
  node3320 -> node3321 [ color="black"]
  node3318 -> node3319 [ color="black"]
  node3306 -> node3307 [ color="black"]
  node3305 -> node3306 [ color="black"]
  node3339 -> node3340 [ color="black"]
  node3312 -> node3313 [ color="black"]
  node3325 -> node3326 [ color="black"]
  node3322 -> node3323 [ color="black"]
  node3333 -> node3334 [ color="black"]
  node3328 -> node3329 [ color="black"]
  node3311 -> node3312 [ color="black"]
  node3301 -> node3302 [ color="black"]
  node3340 -> node3300 [ color="black"]
  node3307 -> node3308 [ color="black"]
  node3319 -> node3320 [ color="black"]
  node3304 -> node3305 [ color="black"]
  node3302 -> node3303 [ color="black"]
  node3317 -> node3318 [label=<<font color="black">true</font>> color="black"]
  node3317 -> node3319 [label=<<font color="black">false</font>> color="black"]
  node3335 -> node3336 [ color="black"]
  node3326 -> node3327 [label=<<font color="black">true</font>> color="black"]
  node3326 -> node3331 [label=<<font color="black">false</font>> color="black"]
  node3336 -> node3337 [ color="black"]
  node3308 -> node3309 [ color="black"]
  node3314 -> node3315 [ color="black"]
  node3316 -> node3317 [ color="black"]
  node3330 -> node3340 [ color="black"]
  node3310 -> node3311 [ color="black"]
  node3337 -> node3338 [label=<<font color="black">true</font>> color="black"]
  node3337 -> node3340 [label=<<font color="black">false</font>> color="black"]
}
