digraph {
  node7867 [shape=cds, label=<<font color="black">2:access __x1__ = (Catch &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7862 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7863 [shape=cds, label=<<font color="black">0:access __x0__ = (Block &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7865 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node7864 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7868 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7861 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7868 -> node7862 [ color="black"]
  node7867 -> node7868 [ color="black"]
  node7865 -> node7866 [label=<<font color="black">true</font>> color="black"]
  node7865 -> node7867 [label=<<font color="black">false</font>> color="black"]
  node7864 -> node7865 [ color="black"]
  node7866 -> node7867 [ color="black"]
  node7861 -> node7863 [ color="black"]
  node7863 -> node7864 [ color="black"]
}
