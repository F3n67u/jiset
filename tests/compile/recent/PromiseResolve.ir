{
  [0] app __x0__ = (Type C)
  [0] assert (= __x0__ Object)
  [1] app __x1__ = (IsPromise x)
  [1] if (= __x1__ true) {
    [2] app __x2__ = (Get x "constructor")
    [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [10] {}
    [2] let xConstructor = __x2__
    [3] app __x3__ = (SameValue xConstructor C)
    [3] if (= __x3__ true) {
      app __x4__ = (WrapCompletion x)
      return __x4__
    } else [10] {}
  } else [10] {}
  [4] app __x5__ = (NewPromiseCapability C)
  [4] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [10] {}
  [4] let promiseCapability = __x5__
  [5] app __x6__ = (Call promiseCapability.Resolve undefined (new [x]))
  [5] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [10] {}
  [5] __x6__
  [6] app __x7__ = (WrapCompletion promiseCapability.Promise)
  [6] return __x7__
}