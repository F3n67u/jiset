{
  let R = this
  app __x0__ = (Type R)
  if (! (= __x0__ Object)) throw INTRINSIC_TypeError else {}
  let result = ""
  app __x1__ = (Get R "global")
  app __x2__ = (ToBoolean [? __x1__])
  let global = __x2__
  if (= global true) let result = (+ result "g") else {}
  app __x3__ = (Get R "ignoreCase")
  app __x4__ = (ToBoolean [? __x3__])
  let ignoreCase = __x4__
  if (= ignoreCase true) let result = (+ result "i") else {}
  app __x5__ = (Get R "multiline")
  app __x6__ = (ToBoolean [? __x5__])
  let multiline = __x6__
  if (= multiline true) let result = (+ result "m") else {}
  app __x7__ = (Get R "dotAll")
  app __x8__ = (ToBoolean [? __x7__])
  let dotAll = __x8__
  if (= dotAll true) let result = (+ result "s") else {}
  app __x9__ = (Get R "unicode")
  app __x10__ = (ToBoolean [? __x9__])
  let unicode = __x10__
  if (= unicode true) let result = (+ result "u") else {}
  app __x11__ = (Get R "sticky")
  app __x12__ = (ToBoolean [? __x11__])
  let sticky = __x12__
  if (= sticky true) let result = (+ result "y") else {}
  return result
}