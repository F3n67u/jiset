digraph {
  node3072 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= targetDesc undefined)) (= targetDesc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node3061 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3075 [shape=cds, label=<<font color="black">12:app __x7__ = (SameValue trapResult targetDesc.Value)</font>> color="black" fillcolor="white" style=filled]
  node3068 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P, Receiver]))</font>> color="black" fillcolor="white" style=filled]
  node3069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let trapResult = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3065 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3079 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x8__ true) (= targetDesc.Get undefined))</font>> color="black" fillcolor="white" style=filled]
  node3077 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3066 [shape=cds, label=<<font color="black">7:app __x3__ = (target.Get target P Receiver)</font>> color="black" fillcolor="white" style=filled]
  node3071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let targetDesc = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3078 [shape=cds, label=<<font color="black">13:app __x8__ = (IsAccessorDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3059 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3064 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3074 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x6__ true) (= targetDesc.Writable false))</font>> color="black" fillcolor="white" style=filled]
  node3070 [shape=cds, label=<<font color="black">9:app __x5__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3055 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3073 [shape=cds, label=<<font color="black">11:app __x6__ = (IsDataDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3082 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return trapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3080 [shape=diamond, label=<<font color="black">(! (= trapResult undefined))</font>> color="black" fillcolor="white" style=filled]
  node3063 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;get&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3067 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3056 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3057 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node3076 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node3069 -> node3070 [ color="black"]
  node3059 -> node3060 [label=<<font color="black">true</font>> color="black"]
  node3059 -> node3061 [label=<<font color="black">false</font>> color="black"]
  node3065 -> node3066 [label=<<font color="black">true</font>> color="black"]
  node3065 -> node3068 [label=<<font color="black">false</font>> color="black"]
  node3066 -> node3067 [ color="black"]
  node3067 -> node3068 [ color="black"]
  node3075 -> node3076 [ color="black"]
  node3058 -> node3059 [ color="black"]
  node3063 -> node3064 [ color="black"]
  node3061 -> node3062 [ color="black"]
  node3077 -> node3078 [ color="black"]
  node3064 -> node3065 [ color="black"]
  node3079 -> node3080 [label=<<font color="black">true</font>> color="black"]
  node3079 -> node3082 [label=<<font color="black">false</font>> color="black"]
  node3060 -> node3061 [ color="black"]
  node3081 -> node3082 [ color="black"]
  node3076 -> node3077 [label=<<font color="black">true</font>> color="black"]
  node3076 -> node3078 [label=<<font color="black">false</font>> color="black"]
  node3068 -> node3069 [ color="black"]
  node3080 -> node3081 [label=<<font color="black">true</font>> color="black"]
  node3080 -> node3082 [label=<<font color="black">false</font>> color="black"]
  node3074 -> node3075 [label=<<font color="black">true</font>> color="black"]
  node3074 -> node3078 [label=<<font color="black">false</font>> color="black"]
  node3078 -> node3079 [ color="black"]
  node3062 -> node3063 [ color="black"]
  node3073 -> node3074 [ color="black"]
  node3055 -> node3057 [ color="black"]
  node3072 -> node3073 [label=<<font color="black">true</font>> color="black"]
  node3072 -> node3082 [label=<<font color="black">false</font>> color="black"]
  node3070 -> node3071 [ color="black"]
  node3082 -> node3056 [ color="black"]
  node3057 -> node3058 [ color="black"]
  node3071 -> node3072 [ color="black"]
}
