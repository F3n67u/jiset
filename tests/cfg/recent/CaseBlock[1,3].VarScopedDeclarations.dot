digraph {
  node8146 [shape=diamond, label=<<font color="black">(= CaseClauses1 absent)</font>> color="black" fillcolor="white" style=filled]
  node8141 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8138 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node8139 [shape=cds, label=<<font color="black">access __x0__ = (CaseClauses0 &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8143 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let __x2__ = __x1__</td></tr>
      <tr><td align="left">2:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8148 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Return the result of appending to id:{declarations} the elements of the VarScopedDeclarations of the second nt:{CaseClauses} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8140 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8147 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return declarations</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; declarations</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8136 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8137 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8144 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node8142 [shape=cds, label=<<font color="black">2:access __x1__ = (DefaultClause &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8139 -> node8140 [ color="black"]
  node8143 -> node8144 [ color="black"]
  node8136 -> node8138 [ color="black"]
  node8144 -> node8145 [label=<<font color="black">true</font>> color="black"]
  node8144 -> node8146 [label=<<font color="black">false</font>> color="black"]
  node8141 -> node8142 [ color="black"]
  node8142 -> node8143 [ color="black"]
  node8140 -> node8142 [ color="black"]
  node8138 -> node8139 [label=<<font color="black">true</font>> color="black"]
  node8138 -> node8141 [label=<<font color="black">false</font>> color="black"]
  node8145 -> node8144 [ color="black"]
  node8148 -> node8137 [ color="black"]
  node8146 -> node8147 [label=<<font color="black">true</font>> color="black"]
  node8146 -> node8148 [label=<<font color="black">false</font>> color="black"]
  node8147 -> node8148 [ color="black"]
}
