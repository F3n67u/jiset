{
  let queue = generator.AsyncGeneratorQueue
  assert (< 0i queue.length)
  let next = queue[0i]
  let __x0__ = (pop queue 0i)
  let promiseCapability = next.Capability
  app __x1__ = (CreateIterResultObject value done)
  let iteratorResult = [! __x1__]
  app __x2__ = (Call promiseCapability.Resolve undefined (new [iteratorResult]))
  [! __x2__]
  app __x3__ = (AsyncGeneratorResumeNext generator)
  [! __x3__]
  return undefined
}