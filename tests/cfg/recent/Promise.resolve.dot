digraph {
  node19306 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node19310 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19305 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19312 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19309 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node19308 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node19307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19311 [shape=cds, label=<<font color="black">2:app __x1__ = (PromiseResolve C x)</font>> color="black" fillcolor="white" style=filled]
  node19304 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19307 -> node19308 [ color="black"]
  node19304 -> node19306 [ color="black"]
  node19312 -> node19305 [ color="black"]
  node19309 -> node19310 [label=<<font color="black">true</font>> color="black"]
  node19309 -> node19311 [label=<<font color="black">false</font>> color="black"]
  node19310 -> node19311 [ color="black"]
  node19308 -> node19309 [ color="black"]
  node19306 -> node19307 [ color="black"]
  node19311 -> node19312 [ color="black"]
}
