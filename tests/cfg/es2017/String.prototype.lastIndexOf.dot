digraph {
  node12383 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12388 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let numPos = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12394 [shape=cds, label=<<font color="black">6:app __x5__ = (max pos 0i)</font>> color="black" fillcolor="white" style=filled]
  node12392 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12379 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12385 [shape=cds, label=<<font color="black">2:app __x2__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node12382 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12389 [shape=diamond, label=<<font color="black">(= numPos NaN)</font>> color="black" fillcolor="white" style=filled]
  node12386 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let searchStr = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12381 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12377 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12390 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12396 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let start = __x6__</td></tr>
      <tr><td align="left">7:let searchLen = searchStr.length</td></tr>
      <tr><td align="left">8:??? &quot;Return the largest possible nonnegative integer id:{k} not larger than id:{start} such that id:{k} + id:{searchLen} is not greater than id:{len} , and for all nonnegative integers id:{j} less than id:{searchLen} , the code unit at index id:{k} + id:{j} of id:{S} is the same as the code unit at index id:{j} of id:{searchStr} ; but if there is no such integer id:{k} , return the value - 1 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12387 [shape=cds, label=<<font color="black">3:app __x3__ = (ToNumber position)</font>> color="black" fillcolor="white" style=filled]
  node12393 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12378 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12391 [shape=cds, label=<<font color="black">app __x4__ = (ToInteger numPos)</font>> color="black" fillcolor="white" style=filled]
  node12380 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12395 [shape=cds, label=<<font color="black">6:app __x6__ = (min __x5__ len)</font>> color="black" fillcolor="white" style=filled]
  node12384 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12391 -> node12392 [ color="black"]
  node12393 -> node12394 [ color="black"]
  node12382 -> node12383 [ color="black"]
  node12386 -> node12387 [ color="black"]
  node12395 -> node12396 [ color="black"]
  node12392 -> node12393 [ color="black"]
  node12390 -> node12393 [ color="black"]
  node12384 -> node12385 [ color="black"]
  node12381 -> node12382 [ color="black"]
  node12394 -> node12395 [ color="black"]
  node12380 -> node12381 [ color="black"]
  node12396 -> node12378 [ color="black"]
  node12379 -> node12380 [ color="black"]
  node12385 -> node12386 [ color="black"]
  node12377 -> node12379 [ color="black"]
  node12389 -> node12390 [label=<<font color="black">true</font>> color="black"]
  node12389 -> node12391 [label=<<font color="black">false</font>> color="black"]
  node12387 -> node12388 [ color="black"]
  node12388 -> node12389 [ color="black"]
  node12383 -> node12384 [ color="black"]
}
