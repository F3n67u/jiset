def [SYNTAX] TemplateMiddleList[0,0].Evaluation[R]<(TemplateMiddle, Expression),true>() = 0:{
  0:access __x0__ = (TemplateMiddle "TV")
  0:let head = __x0__
  1:access __x1__ = (Expression "Evaluation")
  1:let sub = __x1__
  2:[? sub]
  3:app __x2__ = (ToString sub)
  3:let middle = [? __x2__]
  4:return (+ head middle)
}
- id: "sec-template-literals-runtime-semantics-evaluation"
- code:
          1. Let _head_ be the TV of |TemplateMiddle| as defined in <emu-xref href="#sec-template-literal-lexical-components"></emu-xref>.
          1. Let _sub_ be the result of evaluating |Expression|.
          1. ReturnIfAbrupt(_sub_).
          1. Let _middle_ be ? ToString(_sub_).
          1. Return the string-concatenation of _head_ and _middle_.