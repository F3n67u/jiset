digraph {
  node15698 [shape=cds, label=<<font color="black">12:app __x4__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_DataViewPrototype (new [&quot;DataView&quot;, &quot;ViewedArrayBuffer&quot;, &quot;ByteLength&quot;, &quot;ByteOffset&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15691 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15686 [shape=cds, label=<<font color="black">4:app __x2__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15689 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15693 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let viewByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15676 [shape=cds, label=<<font color="black">app byteLength = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node15677 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15672 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15685 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let offset = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15699 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let O = [? __x4__]</td></tr>
      <tr><td align="left">13:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">14:O.ByteLength = viewByteLength</td></tr>
      <tr><td align="left">15:O.ByteOffset = offset</td></tr>
      <tr><td align="left">16:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15673 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15694 [shape=cds, label=<<font color="black">10:app __x3__ = (ToIndex byteLength)</font>> color="black" fillcolor="white" style=filled]
  node15683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15674 [shape=cds, label=<<font color="black">app buffer = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15680 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15695 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let viewByteLength = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15684 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIndex byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node15682 [shape=diamond, label=<<font color="black">(= buffer.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node15697 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15687 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node15692 [shape=diamond, label=<<font color="black">(|| (= byteLength absent) (= byteLength undefined))</font>> color="black" fillcolor="white" style=filled]
  node15675 [shape=cds, label=<<font color="black">app byteOffset = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15696 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset viewByteLength))</font>> color="black" fillcolor="white" style=filled]
  node15679 [shape=cds, label=<<font color="black">1:app __x0__ = (Type buffer)</font>> color="black" fillcolor="white" style=filled]
  node15690 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength offset)</font>> color="black" fillcolor="white" style=filled]
  node15672 -> node15674 [ color="black"]
  node15684 -> node15685 [ color="black"]
  node15677 -> node15678 [label=<<font color="black">true</font>> color="black"]
  node15677 -> node15679 [label=<<font color="black">false</font>> color="black"]
  node15676 -> node15677 [ color="black"]
  node15691 -> node15692 [ color="black"]
  node15682 -> node15683 [label=<<font color="black">true</font>> color="black"]
  node15682 -> node15684 [label=<<font color="black">false</font>> color="black"]
  node15696 -> node15697 [label=<<font color="black">true</font>> color="black"]
  node15696 -> node15698 [label=<<font color="black">false</font>> color="black"]
  node15697 -> node15698 [ color="black"]
  node15698 -> node15699 [ color="black"]
  node15693 -> node15698 [ color="black"]
  node15686 -> node15687 [ color="black"]
  node15680 -> node15681 [label=<<font color="black">true</font>> color="black"]
  node15680 -> node15682 [label=<<font color="black">false</font>> color="black"]
  node15699 -> node15673 [ color="black"]
  node15687 -> node15688 [label=<<font color="black">true</font>> color="black"]
  node15687 -> node15689 [label=<<font color="black">false</font>> color="black"]
  node15689 -> node15690 [ color="black"]
  node15681 -> node15682 [ color="black"]
  node15683 -> node15684 [ color="black"]
  node15678 -> node15679 [ color="black"]
  node15690 -> node15691 [label=<<font color="black">true</font>> color="black"]
  node15690 -> node15692 [label=<<font color="black">false</font>> color="black"]
  node15688 -> node15689 [ color="black"]
  node15675 -> node15676 [ color="black"]
  node15694 -> node15695 [ color="black"]
  node15685 -> node15686 [ color="black"]
  node15674 -> node15675 [ color="black"]
  node15695 -> node15696 [ color="black"]
  node15679 -> node15680 [ color="black"]
  node15692 -> node15693 [label=<<font color="black">true</font>> color="black"]
  node15692 -> node15694 [label=<<font color="black">false</font>> color="black"]
}
