["Let", {
  "id": "oldEnv"
}, "be", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", ".", {
  "k": 0
}, "If", {
  "id": "uninitializedBoundNames"
}, "is", "not", "an", "empty", "List", ",", "then", true, "Assert", ":", {
  "id": "uninitializedBoundNames"
}, "has", "no", "duplicate", "entries", ".", {
  "k": 2
}, "Let", {
  "id": "newEnv"
}, "be", "NewDeclarativeEnvironment", "(", {
  "id": "oldEnv"
}, ")", ".", {
  "k": 3
}, "For", "each", "String", {
  "id": "name"
}, "of", {
  "id": "uninitializedBoundNames"
}, ",", "do", true, "Perform", "!", {
  "id": "newEnv"
}, ".", "CreateMutableBinding", "(", {
  "id": "name"
}, ",", {
  "value": "false"
}, ")", ".", {
  "k": 5
}, false, {
  "k": 4
}, "Set", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", "to", {
  "id": "newEnv"
}, ".", {
  "k": 6
}, false, {
  "k": 1
}, "Let", {
  "id": "exprRef"
}, "be", "the", "result", "of", "evaluating", {
  "id": "expr"
}, ".", {
  "k": 7
}, "Set", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", "to", {
  "id": "oldEnv"
}, ".", {
  "k": 8
}, "Let", {
  "id": "exprValue"
}, "be", "?", "GetValue", "(", {
  "id": "exprRef"
}, ")", ".", {
  "k": 9
}, "If", {
  "id": "iterationKind"
}, "is", {
  "const": "enumerate"
}, ",", "then", true, "If", {
  "id": "exprValue"
}, "is", {
  "value": "undefined"
}, "or", {
  "value": "null"
}, ",", "then", true, "Return", "Completion", "{", "[", "[", "Type", "]", "]", ":", {
  "const": "break"
}, ",", "[", "[", "Value", "]", "]", ":", {
  "const": "empty"
}, ",", "[", "[", "Target", "]", "]", ":", {
  "const": "empty"
}, "}", ".", {
  "k": 12
}, false, {
  "k": 11
}, "Let", {
  "id": "obj"
}, "be", "!", "ToObject", "(", {
  "id": "exprValue"
}, ")", ".", {
  "k": 13
}, "Let", {
  "id": "iterator"
}, "be", "?", "EnumerateObjectProperties", "(", {
  "id": "obj"
}, ")", ".", {
  "k": 14
}, "Let", {
  "id": "nextMethod"
}, "be", "!", "GetV", "(", {
  "id": "iterator"
}, ",", {
  "value": "\"next\""
}, ")", ".", {
  "k": 15
}, "Return", "the", "Record", "{", "[", "[", "Iterator", "]", "]", ":", {
  "id": "iterator"
}, ",", "[", "[", "NextMethod", "]", "]", ":", {
  "id": "nextMethod"
}, ",", "[", "[", "Done", "]", "]", ":", {
  "value": "false"
}, "}", ".", {
  "k": 16
}, false, {
  "k": 10
}, "Else", ",", true, "Assert", ":", {
  "id": "iterationKind"
}, "is", {
  "const": "iterate"
}, "or", {
  "const": "async-iterate"
}, ".", {
  "k": 18
}, "If", {
  "id": "iterationKind"
}, "is", {
  "const": "async-iterate"
}, ",", "let", {
  "id": "iteratorHint"
}, "be", {
  "const": "async"
}, ".", {
  "k": 19
}, "Else", ",", "let", {
  "id": "iteratorHint"
}, "be", {
  "const": "sync"
}, ".", {
  "k": 20
}, "Return", "?", "GetIterator", "(", {
  "id": "exprValue"
}, ",", {
  "id": "iteratorHint"
}, ")", ".", {
  "k": 21
}, false, {
  "k": 17
}]