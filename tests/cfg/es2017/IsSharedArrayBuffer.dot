digraph {
  node15611 [shape=diamond, label=<<font color="black">(= bufferData null)</font>> color="black" fillcolor="white" style=filled]
  node15610 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let bufferData = obj.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15614 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15607 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15609 [shape=cds, label=<<font color="black">app obj = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15615 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (= (typeof bufferData) &quot;SharedDataBlock&quot;)</td></tr>
      <tr><td align="left">5:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15608 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15613 [shape=diamond, label=<<font color="black">(= (typeof bufferData) &quot;DataBlock&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15612 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15614 -> node15615 [ color="black"]
  node15607 -> node15609 [ color="black"]
  node15612 -> node15613 [ color="black"]
  node15611 -> node15612 [label=<<font color="black">true</font>> color="black"]
  node15611 -> node15613 [label=<<font color="black">false</font>> color="black"]
  node15609 -> node15610 [ color="black"]
  node15613 -> node15614 [label=<<font color="black">true</font>> color="black"]
  node15613 -> node15615 [label=<<font color="black">false</font>> color="black"]
  node15615 -> node15608 [ color="black"]
  node15610 -> node15611 [ color="black"]
}
