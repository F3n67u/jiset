digraph {
  node16765 [shape=diamond, label=<<font color="black">(= newTarget absent)</font>> color="black" fillcolor="white" style=filled]
  node16762 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor target)</font>> color="black" fillcolor="white" style=filled]
  node16769 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16764 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16767 [shape=cds, label=<<font color="black">app __x1__ = (IsConstructor newTarget)</font>> color="black" fillcolor="white" style=filled]
  node16770 [shape=cds, label=<<font color="black">3:app __x2__ = (CreateListFromArrayLike argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node16759 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16771 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let args = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16760 [shape=cds, label=<<font color="black">app argumentsList = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16757 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16772 [shape=cds, label=<<font color="black">4:app __x3__ = (Construct target args newTarget)</font>> color="black" fillcolor="white" style=filled]
  node16761 [shape=cds, label=<<font color="black">app newTarget = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16768 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16758 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16773 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16763 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node16766 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = target</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16771 -> node16772 [ color="black"]
  node16769 -> node16770 [ color="black"]
  node16759 -> node16760 [ color="black"]
  node16767 -> node16768 [ color="black"]
  node16765 -> node16766 [label=<<font color="black">true</font>> color="black"]
  node16765 -> node16767 [label=<<font color="black">false</font>> color="black"]
  node16757 -> node16759 [ color="black"]
  node16773 -> node16758 [ color="black"]
  node16770 -> node16771 [ color="black"]
  node16766 -> node16770 [ color="black"]
  node16760 -> node16761 [ color="black"]
  node16772 -> node16773 [ color="black"]
  node16768 -> node16769 [label=<<font color="black">true</font>> color="black"]
  node16768 -> node16770 [label=<<font color="black">false</font>> color="black"]
  node16763 -> node16764 [label=<<font color="black">true</font>> color="black"]
  node16763 -> node16765 [label=<<font color="black">false</font>> color="black"]
  node16761 -> node16762 [ color="black"]
  node16764 -> node16765 [ color="black"]
  node16762 -> node16763 [ color="black"]
}
