digraph {
  node12116 [shape=cds, label=<<font color="black">1:app __x1__ = (IsExtensible O)</font>> color="black" fillcolor="white" style=filled]
  node12117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12110 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12114 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node12111 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12112 [shape=cds, label=<<font color="black">app O = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12113 [shape=cds, label=<<font color="black">0:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node12115 -> node12116 [ color="black"]
  node12114 -> node12115 [label=<<font color="black">true</font>> color="black"]
  node12114 -> node12116 [label=<<font color="black">false</font>> color="black"]
  node12117 -> node12111 [ color="black"]
  node12113 -> node12114 [ color="black"]
  node12112 -> node12113 [ color="black"]
  node12110 -> node12112 [ color="black"]
  node12116 -> node12117 [ color="black"]
}
