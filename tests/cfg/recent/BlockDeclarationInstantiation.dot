digraph {
  node6523 [shape=cds, label=<<font color="black">9:access __x9__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6529 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:__x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6518 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6525 [shape=cds, label=<<font color="black">10:access __x10__ = (d &quot;InstantiateFunctionObject&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6504 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6517 [shape=cds, label=<<font color="black">5:app __x7__ = (env.CreateImmutableBinding env dn true)</font>> color="black" fillcolor="white" style=filled]
  node6520 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6530 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let __x4__ = __x3__</td></tr>
      <tr><td align="left">3:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6527 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let fo = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6522 [shape=diamond, label=<<font color="black">(|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</font>> color="black" fillcolor="white" style=filled]
  node6505 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6515 [shape=cds, label=<<font color="black">6:access __x6__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6506 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= (typeof env) &quot;DeclarativeEnvironmentRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6519 [shape=cds, label=<<font color="black">7:app __x8__ = (env.CreateMutableBinding env dn false)</font>> color="black" fillcolor="white" style=filled]
  node6528 [shape=cds, label=<<font color="black">11:app __x12__ = (env.InitializeBinding env fn fo)</font>> color="black" fillcolor="white" style=filled]
  node6509 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node6524 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let fn = __x9__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6507 [shape=cds, label=<<font color="black">1:access __x0__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6513 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node6508 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let declarations = __x0__</td></tr>
      <tr><td align="left">2:let __x1__ = declarations</td></tr>
      <tr><td align="left">2:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6526 [shape=cds, label=<<font color="black">10:app __x11__ = (__x10__ env)</font>> color="black" fillcolor="white" style=filled]
  node6511 [shape=cds, label=<<font color="black">3:access __x3__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6516 [shape=diamond, label=<<font color="black">(= __x6__ true)</font>> color="black" fillcolor="white" style=filled]
  node6521 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6528 -> node6529 [ color="black"]
  node6529 -> node6530 [ color="black"]
  node6523 -> node6524 [ color="black"]
  node6520 -> node6521 [ color="black"]
  node6524 -> node6525 [ color="black"]
  node6507 -> node6508 [ color="black"]
  node6530 -> node6509 [ color="black"]
  node6517 -> node6518 [ color="black"]
  node6518 -> node6521 [ color="black"]
  node6522 -> node6523 [label=<<font color="black">true</font>> color="black"]
  node6522 -> node6530 [label=<<font color="black">false</font>> color="black"]
  node6514 -> node6515 [ color="black"]
  node6513 -> node6514 [label=<<font color="black">true</font>> color="black"]
  node6513 -> node6522 [label=<<font color="black">false</font>> color="black"]
  node6512 -> node6513 [ color="black"]
  node6526 -> node6527 [ color="black"]
  node6504 -> node6506 [ color="black"]
  node6525 -> node6526 [ color="black"]
  node6510 -> node6511 [ color="black"]
  node6527 -> node6528 [ color="black"]
  node6511 -> node6512 [ color="black"]
  node6521 -> node6513 [ color="black"]
  node6519 -> node6520 [ color="black"]
  node6509 -> node6510 [label=<<font color="black">true</font>> color="black"]
  node6509 -> node6505 [label=<<font color="black">false</font>> color="black"]
  node6516 -> node6517 [label=<<font color="black">true</font>> color="black"]
  node6516 -> node6519 [label=<<font color="black">false</font>> color="black"]
  node6506 -> node6507 [ color="black"]
  node6508 -> node6509 [ color="black"]
  node6515 -> node6516 [ color="black"]
}
