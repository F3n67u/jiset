digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let yv = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=cds, label=<<font color="black">8:app __x1__ = (StringPad year 4i &quot;0&quot; CONST_start)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=diamond, label=<<font color="black">(! (&lt; yv 0i))</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{year} be the String representation of abs ( id:{yv} ) , formatted as a decimal number .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app tv = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let yearSign = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= (typeof tv) Number)</td></tr>
      <tr><td align="left">1:assert (! (= tv NaN))</td></tr>
      <tr><td align="left">2:??? &quot;Let id:{weekday} be the Name of the entry in link:{unhandled: sec-todatestring-day-names} with the Number WeekDay ( id:{tv} ) .&quot;</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{month} be the Name of the entry in link:{unhandled: sec-todatestring-month-names} with the Number MonthFromTime ( id:{tv} ) .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{day} be the String representation of DateFromTime ( id:{tv} ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let paddedYear = [! __x1__]</td></tr>
      <tr><td align="left">9:return (+ (+ (+ (+ (+ (+ (+ weekday &quot; &quot;) month) &quot; &quot;) day) &quot; &quot;) yearSign) paddedYear)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let yearSign = &quot;-&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">5:app __x0__ = (YearFromTime tv)</font>> color="black" fillcolor="white" style=filled]
  node6 -> node7 [label=<<font color="black">true</font>> color="black"]
  node6 -> node8 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node0 -> node2 [ color="black"]
  node9 -> node10 [ color="black"]
  node11 -> node1 [ color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [ color="black"]
  node7 -> node9 [ color="black"]
  node8 -> node9 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
}
