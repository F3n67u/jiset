digraph {
  node16105 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16118 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:__x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:append fulfillReaction -&gt; promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">10:append rejectReaction -&gt; promise.PromiseRejectReactions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16109 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable onRejected)</font>> color="black" fillcolor="white" style=filled]
  node16119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:assert (= promise.PromiseState &quot;rejected&quot;)</td></tr>
      <tr><td align="left">16:let reason = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16104 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPromise promise)</font>> color="black" fillcolor="white" style=filled]
  node16123 [shape=cds, label=<<font color="black">18:app __x5__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [rejectReaction, reason]))</font>> color="black" fillcolor="white" style=filled]
  node16108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let onFulfilled = &quot;Identity&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let fulfillReaction = (new PromiseReaction(&quot;Capabilities&quot; -&gt; resultCapability, &quot;Handler&quot; -&gt; onFulfilled))</td></tr>
      <tr><td align="left">7:let rejectReaction = (new PromiseReaction(&quot;Capabilities&quot; -&gt; resultCapability, &quot;Handler&quot; -&gt; onRejected))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16122 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16107 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16106 [shape=cds, label=<<font color="black">2:app __x1__ = (IsCallable onFulfilled)</font>> color="black" fillcolor="white" style=filled]
  node16121 [shape=cds, label=<<font color="black">app __x4__ = (HostPromiseRejectionTracker promise &quot;handle&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16102 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16117 [shape=cds, label=<<font color="black">13:app __x3__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [fulfillReaction, value]))</font>> color="black" fillcolor="white" style=filled]
  node16113 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;pending&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16110 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:promise.PromiseIsHandled = true</td></tr>
      <tr><td align="left">20:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16103 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16124 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16115 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;fulfilled&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16120 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node16116 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let value = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16111 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let onRejected = &quot;Thrower&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16110 -> node16111 [label=<<font color="black">true</font>> color="black"]
  node16110 -> node16112 [label=<<font color="black">false</font>> color="black"]
  node16123 -> node16124 [ color="black"]
  node16109 -> node16110 [ color="black"]
  node16113 -> node16114 [label=<<font color="black">true</font>> color="black"]
  node16113 -> node16115 [label=<<font color="black">false</font>> color="black"]
  node16118 -> node16125 [ color="black"]
  node16106 -> node16107 [ color="black"]
  node16114 -> node16125 [ color="black"]
  node16105 -> node16106 [ color="black"]
  node16119 -> node16120 [ color="black"]
  node16112 -> node16113 [ color="black"]
  node16104 -> node16105 [ color="black"]
  node16108 -> node16109 [ color="black"]
  node16120 -> node16121 [label=<<font color="black">true</font>> color="black"]
  node16120 -> node16123 [label=<<font color="black">false</font>> color="black"]
  node16125 -> node16103 [ color="black"]
  node16116 -> node16117 [ color="black"]
  node16115 -> node16116 [label=<<font color="black">true</font>> color="black"]
  node16115 -> node16119 [label=<<font color="black">false</font>> color="black"]
  node16102 -> node16104 [ color="black"]
  node16121 -> node16122 [ color="black"]
  node16107 -> node16108 [label=<<font color="black">true</font>> color="black"]
  node16107 -> node16109 [label=<<font color="black">false</font>> color="black"]
  node16122 -> node16123 [ color="black"]
  node16124 -> node16125 [ color="black"]
  node16117 -> node16118 [ color="black"]
  node16111 -> node16112 [ color="black"]
}
