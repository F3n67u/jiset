digraph {
  node4852 [shape=cds, label=<<font color="black">3:app __x3__ = (NewPromiseCapability INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node4856 [shape=diamond, label=<<font color="black">(is-completion specifierString)</font>> color="black" fillcolor="white" style=filled]
  node4862 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4853 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let promiseCapability = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4849 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let argRef = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4845 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4846 [shape=cds, label=<<font color="black">0:app __x0__ = (GetActiveScriptOrModule)</font>> color="black" fillcolor="white" style=filled]
  node4854 [shape=cds, label=<<font color="black">4:app __x4__ = (ToString specifier)</font>> color="black" fillcolor="white" style=filled]
  node4850 [shape=cds, label=<<font color="black">2:app __x2__ = (GetValue argRef)</font>> color="black" fillcolor="white" style=filled]
  node4844 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4859 [shape=cds, label=<<font color="black">app __x5__ = (Call promiseCapability.Reject undefined (new [specifierString.Value]))</font>> color="black" fillcolor="white" style=filled]
  node4864 [shape=cds, label=<<font color="black">6:app __x6__ = (HostImportModuleDynamically referencingScriptOrModule specifierString promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node4851 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let specifier = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4855 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let specifierString = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4865 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[! __x6__]</td></tr>
      <tr><td align="left">7:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4848 [shape=cds, label=<<font color="black">1:access __x1__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4857 [shape=diamond, label=<<font color="black">(= specifierString.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node4847 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let referencingScriptOrModule = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4860 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x5__) (! (= __x5__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node4861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4863 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:specifierString</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4858 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">specifierString = specifierString.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4844 -> node4846 [ color="black"]
  node4861 -> node4862 [ color="black"]
  node4850 -> node4851 [ color="black"]
  node4846 -> node4847 [ color="black"]
  node4864 -> node4865 [ color="black"]
  node4851 -> node4852 [ color="black"]
  node4854 -> node4855 [ color="black"]
  node4857 -> node4858 [label=<<font color="black">true</font>> color="black"]
  node4857 -> node4859 [label=<<font color="black">false</font>> color="black"]
  node4847 -> node4848 [ color="black"]
  node4855 -> node4856 [ color="black"]
  node4858 -> node4863 [ color="black"]
  node4859 -> node4860 [ color="black"]
  node4848 -> node4849 [ color="black"]
  node4853 -> node4854 [ color="black"]
  node4860 -> node4861 [label=<<font color="black">true</font>> color="black"]
  node4860 -> node4862 [label=<<font color="black">false</font>> color="black"]
  node4865 -> node4845 [ color="black"]
  node4852 -> node4853 [ color="black"]
  node4863 -> node4864 [ color="black"]
  node4849 -> node4850 [ color="black"]
  node4856 -> node4857 [label=<<font color="black">true</font>> color="black"]
  node4856 -> node4863 [label=<<font color="black">false</font>> color="black"]
  node4862 -> node4863 [ color="black"]
}
