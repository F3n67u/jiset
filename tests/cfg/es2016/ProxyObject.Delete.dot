digraph {
  node2908 [shape=cds, label=<<font color="black">10:app __x6__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node2901 [shape=cds, label=<<font color="black">7:app __x3__ = (target.Delete target P)</font>> color="black" fillcolor="white" style=filled]
  node2897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2893 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2890 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2900 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2909 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let targetDesc = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2891 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2911 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2903 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P]))</font>> color="black" fillcolor="white" style=filled]
  node2892 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node2907 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2913 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2898 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;deleteProperty&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2910 [shape=diamond, label=<<font color="black">(= targetDesc undefined)</font>> color="black" fillcolor="white" style=filled]
  node2905 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2904 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node2894 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2906 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node2896 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2914 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2899 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2912 [shape=diamond, label=<<font color="black">(= targetDesc.Configurable false)</font>> color="black" fillcolor="white" style=filled]
  node2902 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2899 -> node2900 [ color="black"]
  node2903 -> node2904 [ color="black"]
  node2894 -> node2895 [label=<<font color="black">true</font>> color="black"]
  node2894 -> node2896 [label=<<font color="black">false</font>> color="black"]
  node2897 -> node2898 [ color="black"]
  node2910 -> node2911 [label=<<font color="black">true</font>> color="black"]
  node2910 -> node2912 [label=<<font color="black">false</font>> color="black"]
  node2892 -> node2893 [ color="black"]
  node2902 -> node2903 [ color="black"]
  node2895 -> node2896 [ color="black"]
  node2906 -> node2907 [label=<<font color="black">true</font>> color="black"]
  node2906 -> node2908 [label=<<font color="black">false</font>> color="black"]
  node2912 -> node2913 [label=<<font color="black">true</font>> color="black"]
  node2912 -> node2914 [label=<<font color="black">false</font>> color="black"]
  node2908 -> node2909 [ color="black"]
  node2898 -> node2899 [ color="black"]
  node2900 -> node2901 [label=<<font color="black">true</font>> color="black"]
  node2900 -> node2903 [label=<<font color="black">false</font>> color="black"]
  node2905 -> node2906 [ color="black"]
  node2907 -> node2908 [ color="black"]
  node2893 -> node2894 [ color="black"]
  node2904 -> node2905 [ color="black"]
  node2901 -> node2902 [ color="black"]
  node2913 -> node2914 [ color="black"]
  node2890 -> node2892 [ color="black"]
  node2909 -> node2910 [ color="black"]
  node2911 -> node2912 [ color="black"]
  node2914 -> node2891 [ color="black"]
  node2896 -> node2897 [ color="black"]
}
