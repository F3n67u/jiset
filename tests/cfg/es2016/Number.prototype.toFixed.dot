digraph {
  node11235 [shape=cds, label=<<font color="black">app fractionDigits = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:return (+ s m)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11239 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let f = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11250 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:??? &quot;Let id:{n} be an integer for which the exact mathematical value of id:{n} &divide; 10 sup:{id:{f}} - id:{x} is as close to zero as possible . If there are two such id:{n} , pick the larger id:{n} .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;If id:{n} = 0 , let id:{m} be the String code:{\&quot;0\&quot;} . Otherwise , let id:{m} be the String consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11247 [shape=diamond, label=<<font color="black">(! (&lt; x (** 10.0 21i)))</font>> color="black" fillcolor="white" style=filled]
  node11242 [shape=diamond, label=<<font color="black">(= x NaN)</font>> color="black" fillcolor="white" style=filled]
  node11238 [shape=cds, label=<<font color="black">1:app __x1__ = (ToInteger fractionDigits)</font>> color="black" fillcolor="white" style=filled]
  node11234 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11254 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:??? &quot;Let id:{z} be the String consisting of id:{f} + 1 - id:{k} occurrences of the code unit 0x0030 ( DIGIT ZERO ) .&quot;</td></tr>
      <tr><td align="left">17:let m = (+ z m)</td></tr>
      <tr><td align="left">18:let k = (+ f 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11237 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let x = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11233 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11245 [shape=diamond, label=<<font color="black">(&lt; x 0i)</font>> color="black" fillcolor="white" style=filled]
  node11252 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let k = m.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11240 [shape=diamond, label=<<font color="black">(|| (&lt; f 0i) (&lt; 20i f))</font>> color="black" fillcolor="white" style=filled]
  node11246 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let s = &quot;-&quot;</td></tr>
      <tr><td align="left">7:let x = (- x)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11236 [shape=cds, label=<<font color="black">0:app __x0__ = (thisNumberValue this)</font>> color="black" fillcolor="white" style=filled]
  node11253 [shape=diamond, label=<<font color="black">(! (&lt; f k))</font>> color="black" fillcolor="white" style=filled]
  node11255 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;Let id:{a} be the first id:{k} - id:{f} elements of id:{m} , and let id:{b} be the remaining id:{f} elements of id:{m} .&quot;</td></tr>
      <tr><td align="left">20:??? &quot;Let id:{m} be the concatenation of the three Strings id:{a} , code:{\&quot;.\&quot;} , and id:{b} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11244 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let s = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11249 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let m = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11243 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;NaN&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11248 [shape=cds, label=<<font color="black">9:app __x2__ = (ToString x)</font>> color="black" fillcolor="white" style=filled]
  node11251 [shape=diamond, label=<<font color="black">(! (== f 0i))</font>> color="black" fillcolor="white" style=filled]
  node11241 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11242 -> node11243 [label=<<font color="black">true</font>> color="black"]
  node11242 -> node11244 [label=<<font color="black">false</font>> color="black"]
  node11244 -> node11245 [ color="black"]
  node11250 -> node11251 [ color="black"]
  node11239 -> node11240 [ color="black"]
  node11256 -> node11234 [ color="black"]
  node11251 -> node11252 [label=<<font color="black">true</font>> color="black"]
  node11251 -> node11256 [label=<<font color="black">false</font>> color="black"]
  node11236 -> node11237 [ color="black"]
  node11243 -> node11244 [ color="black"]
  node11237 -> node11238 [ color="black"]
  node11245 -> node11246 [label=<<font color="black">true</font>> color="black"]
  node11245 -> node11247 [label=<<font color="black">false</font>> color="black"]
  node11240 -> node11241 [label=<<font color="black">true</font>> color="black"]
  node11240 -> node11242 [label=<<font color="black">false</font>> color="black"]
  node11249 -> node11256 [ color="black"]
  node11255 -> node11256 [ color="black"]
  node11247 -> node11248 [label=<<font color="black">true</font>> color="black"]
  node11247 -> node11250 [label=<<font color="black">false</font>> color="black"]
  node11252 -> node11253 [ color="black"]
  node11241 -> node11242 [ color="black"]
  node11248 -> node11249 [ color="black"]
  node11254 -> node11255 [ color="black"]
  node11238 -> node11239 [ color="black"]
  node11233 -> node11235 [ color="black"]
  node11253 -> node11254 [label=<<font color="black">true</font>> color="black"]
  node11253 -> node11255 [label=<<font color="black">false</font>> color="black"]
  node11235 -> node11236 [ color="black"]
  node11246 -> node11247 [ color="black"]
}
