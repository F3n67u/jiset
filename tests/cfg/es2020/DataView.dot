digraph {
  node17270 [shape=diamond, label=<<font color="black">(= byteLength undefined)</font>> color="black" fillcolor="white" style=filled]
  node17266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17257 [shape=cds, label=<<font color="black">app byteLength = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17254 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17267 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17261 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17271 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let viewByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17260 [shape=cds, label=<<font color="black">1:app __x0__ = (RequireInternalSlot buffer &quot;ArrayBufferData&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17263 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let offset = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17262 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node17259 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17269 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17279 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node17265 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node17256 [shape=cds, label=<<font color="black">app byteOffset = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17278 [shape=cds, label=<<font color="black">12:app __x5__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17275 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17253 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17258 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17274 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset viewByteLength))</font>> color="black" fillcolor="white" style=filled]
  node17264 [shape=cds, label=<<font color="black">3:app __x2__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17280 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17273 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let viewByteLength = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17268 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength offset)</font>> color="black" fillcolor="white" style=filled]
  node17281 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">14:O.ByteLength = viewByteLength</td></tr>
      <tr><td align="left">15:O.ByteOffset = offset</td></tr>
      <tr><td align="left">16:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17276 [shape=cds, label=<<font color="black">11:app __x4__ = (OrdinaryCreateFromConstructor NewTarget &quot;%DataView.prototype%&quot; (new [&quot;DataView&quot;, &quot;ViewedArrayBuffer&quot;, &quot;ByteLength&quot;, &quot;ByteOffset&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17277 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let O = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17255 [shape=cds, label=<<font color="black">app buffer = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17272 [shape=cds, label=<<font color="black">9:app __x3__ = (ToIndex byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17278 -> node17279 [ color="black"]
  node17277 -> node17278 [ color="black"]
  node17268 -> node17269 [label=<<font color="black">true</font>> color="black"]
  node17268 -> node17270 [label=<<font color="black">false</font>> color="black"]
  node17256 -> node17257 [ color="black"]
  node17274 -> node17275 [label=<<font color="black">true</font>> color="black"]
  node17274 -> node17276 [label=<<font color="black">false</font>> color="black"]
  node17270 -> node17271 [label=<<font color="black">true</font>> color="black"]
  node17270 -> node17272 [label=<<font color="black">false</font>> color="black"]
  node17259 -> node17260 [ color="black"]
  node17264 -> node17265 [ color="black"]
  node17258 -> node17259 [label=<<font color="black">true</font>> color="black"]
  node17258 -> node17260 [label=<<font color="black">false</font>> color="black"]
  node17265 -> node17266 [label=<<font color="black">true</font>> color="black"]
  node17265 -> node17267 [label=<<font color="black">false</font>> color="black"]
  node17260 -> node17261 [ color="black"]
  node17253 -> node17255 [ color="black"]
  node17267 -> node17268 [ color="black"]
  node17272 -> node17273 [ color="black"]
  node17276 -> node17277 [ color="black"]
  node17263 -> node17264 [ color="black"]
  node17279 -> node17280 [label=<<font color="black">true</font>> color="black"]
  node17279 -> node17281 [label=<<font color="black">false</font>> color="black"]
  node17271 -> node17276 [ color="black"]
  node17262 -> node17263 [ color="black"]
  node17281 -> node17254 [ color="black"]
  node17275 -> node17276 [ color="black"]
  node17269 -> node17270 [ color="black"]
  node17257 -> node17258 [ color="black"]
  node17273 -> node17274 [ color="black"]
  node17280 -> node17281 [ color="black"]
  node17266 -> node17267 [ color="black"]
  node17261 -> node17262 [ color="black"]
  node17255 -> node17256 [ color="black"]
}
