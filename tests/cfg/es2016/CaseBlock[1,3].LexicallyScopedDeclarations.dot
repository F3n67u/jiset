digraph {
  node6986 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6996 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:??? &quot;If the second nt:{CaseClauses} is not present , return id:{declarations} .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;Else return the result of appending to id:{declarations} the elements of the LexicallyScopedDeclarations of the second nt:{CaseClauses} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6987 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6990 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6995 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; declarations</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6988 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node6991 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6989 [shape=cds, label=<<font color="black">access __x0__ = (CaseClauses0 &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6994 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node6992 [shape=cds, label=<<font color="black">2:access __x1__ = (DefaultClause &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6993 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let __x2__ = __x1__</td></tr>
      <tr><td align="left">2:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6993 -> node6994 [ color="black"]
  node6996 -> node6987 [ color="black"]
  node6995 -> node6994 [ color="black"]
  node6986 -> node6988 [ color="black"]
  node6989 -> node6990 [ color="black"]
  node6994 -> node6995 [label=<<font color="black">true</font>> color="black"]
  node6994 -> node6996 [label=<<font color="black">false</font>> color="black"]
  node6991 -> node6992 [ color="black"]
  node6988 -> node6989 [label=<<font color="black">true</font>> color="black"]
  node6988 -> node6991 [label=<<font color="black">false</font>> color="black"]
  node6992 -> node6993 [ color="black"]
  node6990 -> node6992 [ color="black"]
}
