{
  app __x0__ = (RequireObjectCoercible this)
  let O = [? __x0__]
  app __x1__ = (ToString O)
  let S = [? __x1__]
  let len = S.length
  app __x2__ = (ToInteger start)
  let intStart = [? __x2__]
  if (= end undefined) let intEnd = len else {
    app __x3__ = (ToInteger end)
    let intEnd = [? __x3__]
  }
  if (< intStart 0i) {
    app __x4__ = (max (+ len intStart) 0i)
    let from = __x4__
  } else {
    app __x5__ = (min intStart len)
    let from = __x5__
  }
  if (< intEnd 0i) {
    app __x6__ = (max (+ len intEnd) 0i)
    let to = __x6__
  } else {
    app __x7__ = (min intEnd len)
    let to = __x7__
  }
  app __x8__ = (max (- to from) 0i)
  let span = __x8__
  ??? "Return a String value containing id:{span} consecutive elements from id:{S} beginning with the element at index id:{from} ."
}