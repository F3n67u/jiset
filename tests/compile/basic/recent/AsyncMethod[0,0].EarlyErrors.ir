{
  let __x0__ = true
  access __x1__ = (AsyncFunctionBody "ContainsUseStrict")
  __x0__ = (= __x1__ true)
  if __x0__ {
    access __x2__ = (UniqueFormalParameters "IsSimpleParameterList")
    __x0__ = (= __x2__ false)
  } else {}
  if __x0__ throw SyntaxError else return undefined
  access __x3__ = (AsyncMethod "HasDirectSuper")
  if (= __x3__ true) throw SyntaxError else return undefined
  access __x4__ = (__x4__ "Contains" "AwaitExpression")
  if (= __x4__ true) throw SyntaxError else return undefined
  access __x5__ = (UniqueFormalParameters "BoundNames")
  access __x6__ = (AsyncFunctionBody "LexicallyDeclaredNames")
  let __x7__ = __x5__
  let __x8__ = __x6__
  let __x9__ = 0i
  let __x10__ = 0i
  let __x11__ = false
  while (< __x9__ __x7__.length) {
    __x10__ = 0i
    while (< __x10__ __x8__.length) if (= __x7__[__x9__] __x8__[__x10__]) __x11__ = true else {}
  }
  if __x11__ throw SyntaxError else return undefined
}