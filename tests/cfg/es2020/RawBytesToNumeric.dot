digraph {
  node17326 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;If id:{isLittleEndian} is value:{false} , reverse the order of the elements of id:{rawBytes} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{value} be the byte elements of id:{rawBytes} concatenated and interpreted as a little - endian bit string encoding of an IEEE 754 - 2019 binary64 value .&quot;</td></tr>
      <tr><td align="left">8:??? &quot;If id:{value} is an IEEE 754 - 2019 binary64 NaN value , return the value:{NaN} Number value .&quot;</td></tr>
      <tr><td align="left">9:return value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17334 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{intValue} be the byte elements of id:{rawBytes} concatenated and interpreted as a bit string encoding of a binary little - endian 2 ' s complement number of bit length id:{elementSize} &times; 8 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17331 [shape=cds, label=<<font color="black">12:app __x0__ = (IsUnsignedElementType type)</font>> color="black" fillcolor="white" style=filled]
  node17325 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17328 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:??? &quot;Let id:{value} be the byte elements of id:{rawBytes} concatenated and interpreted as a little - endian bit string encoding of an IEEE 754 - 2019 binary32 value .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;If id:{value} is an IEEE 754 - 2019 binary32 NaN value , return the value:{NaN} Number value .&quot;</td></tr>
      <tr><td align="left">5:return value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:??? &quot;If ! IsBigIntElementType ( id:{type} ) is value:{true} , return the BigInt value that corresponds to id:{intValue} .&quot;</td></tr>
      <tr><td align="left">15:??? &quot;Otherwise , return the Number value that corresponds to id:{intValue} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17332 [shape=diamond, label=<<font color="black">(= [! __x0__] true)</font>> color="black" fillcolor="white" style=filled]
  node17324 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17327 [shape=diamond, label=<<font color="black">(= type CONST_Float32)</font>> color="black" fillcolor="white" style=filled]
  node17329 [shape=diamond, label=<<font color="black">(= type CONST_Float64)</font>> color="black" fillcolor="white" style=filled]
  node17333 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{intValue} be the byte elements of id:{rawBytes} concatenated and interpreted as a bit string encoding of an unsigned little - endian binary number .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17329 -> node17330 [label=<<font color="black">true</font>> color="black"]
  node17329 -> node17331 [label=<<font color="black">false</font>> color="black"]
  node17331 -> node17332 [ color="black"]
  node17333 -> node17335 [ color="black"]
  node17326 -> node17327 [ color="black"]
  node17334 -> node17335 [ color="black"]
  node17332 -> node17333 [label=<<font color="black">true</font>> color="black"]
  node17332 -> node17334 [label=<<font color="black">false</font>> color="black"]
  node17324 -> node17326 [ color="black"]
  node17328 -> node17329 [ color="black"]
  node17330 -> node17331 [ color="black"]
  node17327 -> node17328 [label=<<font color="black">true</font>> color="black"]
  node17327 -> node17329 [label=<<font color="black">false</font>> color="black"]
  node17335 -> node17325 [ color="black"]
}
