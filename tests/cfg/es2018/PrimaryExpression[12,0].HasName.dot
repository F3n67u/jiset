digraph {
  node3377 [shape=cds, label=<<font color="black">2:access __x2__ = (expr &quot;HasName&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3370 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3374 [shape=cds, label=<<font color="black">1:access __x1__ = (expr &quot;IsFunctionDefinition&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3378 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3371 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3375 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node3372 [shape=cds, label=<<font color="black">0:access __x0__ = (CoverParenthesizedExpressionAndArrowParameterList &quot;CoveredParenthesizedExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3376 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let expr = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3370 -> node3372 [ color="black"]
  node3376 -> node3377 [ color="black"]
  node3373 -> node3374 [ color="black"]
  node3374 -> node3375 [ color="black"]
  node3375 -> node3376 [label=<<font color="black">true</font>> color="black"]
  node3375 -> node3377 [label=<<font color="black">false</font>> color="black"]
  node3378 -> node3371 [ color="black"]
  node3377 -> node3378 [ color="black"]
  node3372 -> node3373 [ color="black"]
}
