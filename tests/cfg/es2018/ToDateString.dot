digraph {
  node12710 [shape=cds, label=<<font color="black">2:app __x1__ = (LocalTime tv)</font>> color="black" fillcolor="white" style=filled]
  node12714 [shape=cds, label=<<font color="black">3:app __x4__ = (TimeZoneString tv)</font>> color="black" fillcolor="white" style=filled]
  node12713 [shape=cds, label=<<font color="black">3:app __x3__ = (TimeString t)</font>> color="black" fillcolor="white" style=filled]
  node12706 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12705 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12715 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return (+ (+ (+ __x2__ &quot; &quot;) __x3__) __x4__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12709 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Number)</td></tr>
      <tr><td align="left">1:??? &quot;If id:{tv} is value:{NaN} , return ` \&quot; Invalid Date \&quot; ` .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12712 [shape=cds, label=<<font color="black">3:app __x2__ = (DateString t)</font>> color="black" fillcolor="white" style=filled]
  node12708 [shape=cds, label=<<font color="black">0:app __x0__ = (Type tv)</font>> color="black" fillcolor="white" style=filled]
  node12711 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let t = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12707 [shape=cds, label=<<font color="black">app tv = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12715 -> node12706 [ color="black"]
  node12707 -> node12708 [ color="black"]
  node12705 -> node12707 [ color="black"]
  node12711 -> node12712 [ color="black"]
  node12708 -> node12709 [ color="black"]
  node12714 -> node12715 [ color="black"]
  node12709 -> node12710 [ color="black"]
  node12712 -> node12713 [ color="black"]
  node12713 -> node12714 [ color="black"]
  node12710 -> node12711 [ color="black"]
}
