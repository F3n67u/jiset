<algorithm>
  <param>Expression</param>
  <param>Statement</param>
  <step-list>
    <step>Let <id>V</id> be <value>undefined</value> .</step>
    <step>Repeat,     <step-list>
      <step>Let <id>exprRef</id> be the result of evaluating Expression .</step>
      <step>Let <id>exprValue</id> be ? GetValue ( <id>exprRef</id> ).</step>
      <step>If ToBoolean ( <id>exprValue</id> ) is <value>false</value> , return NormalCompletion ( <id>V</id> ).</step>
      <step>Let <id>stmtResult</id> be the result of evaluating Statement .</step>
      <step>If LoopContinues ( <id>stmtResult</id> , <id>labelSet</id> ) is <value>false</value> , return Completion ( UpdateEmpty ( <id>stmtResult</id> , <id>V</id> )).</step>
      <step>If <id>stmtResult</id> .[[Value]] is not <value>empty</value> , set <id>V</id> to <id>stmtResult</id> .[[Value]].</step>
    </step-list></step>
  </step-list>
</algorithm>