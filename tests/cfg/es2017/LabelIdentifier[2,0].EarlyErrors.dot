digraph {
  node17079 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node17081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17075 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17078 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17074 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17077 [shape=diamond, label=<<font color="black">(= absent (parse-syntax this &quot;Module&quot; (new [])))</font>> color="black" fillcolor="white" style=filled]
  node17080 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17076 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17081 -> node17075 [ color="black"]
  node17078 -> node17079 [ color="black"]
  node17077 -> node17078 [label=<<font color="black">true</font>> color="black"]
  node17077 -> node17079 [label=<<font color="black">false</font>> color="black"]
  node17074 -> node17076 [ color="black"]
  node17076 -> node17077 [ color="black"]
  node17079 -> node17080 [label=<<font color="black">true</font>> color="black"]
  node17079 -> node17081 [label=<<font color="black">false</font>> color="black"]
  node17080 -> node17075 [ color="black"]
}
