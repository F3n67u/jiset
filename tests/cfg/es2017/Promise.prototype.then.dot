digraph {
  node16676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let C = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16668 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16672 [shape=cds, label=<<font color="black">1:app __x0__ = (IsPromise promise)</font>> color="black" fillcolor="white" style=filled]
  node16680 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16673 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node16677 [shape=cds, label=<<font color="black">3:app __x2__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16669 [shape=cds, label=<<font color="black">app onFulfilled = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16670 [shape=cds, label=<<font color="black">app onRejected = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let resultCapability = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16675 [shape=cds, label=<<font color="black">2:app __x1__ = (SpeciesConstructor promise INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node16667 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let promise = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16679 [shape=cds, label=<<font color="black">4:app __x3__ = (PerformPromiseThen promise onFulfilled onRejected resultCapability)</font>> color="black" fillcolor="white" style=filled]
  node16678 -> node16679 [ color="black"]
  node16680 -> node16668 [ color="black"]
  node16667 -> node16669 [ color="black"]
  node16673 -> node16674 [label=<<font color="black">true</font>> color="black"]
  node16673 -> node16675 [label=<<font color="black">false</font>> color="black"]
  node16677 -> node16678 [ color="black"]
  node16679 -> node16680 [ color="black"]
  node16676 -> node16677 [ color="black"]
  node16671 -> node16672 [ color="black"]
  node16674 -> node16675 [ color="black"]
  node16670 -> node16671 [ color="black"]
  node16672 -> node16673 [ color="black"]
  node16675 -> node16676 [ color="black"]
  node16669 -> node16670 [ color="black"]
}
