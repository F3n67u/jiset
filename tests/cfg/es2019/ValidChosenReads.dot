digraph {
  node18129 [shape=diamond, label=<<font color="black">(! (= chosenLen readLen))</font>> color="black" fillcolor="white" style=filled]
  node18126 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let R = __x1__[__x2__]</td></tr>
      <tr><td align="left">1:??? &quot;Let id:{chosenValueRecord} be the element of id:{execution} . [ [ ChosenValues ] ] whose [ [ Event ] ] field is id:{R} .&quot;</td></tr>
      <tr><td align="left">2:let chosenValue = chosenValueRecord.ChosenValue</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18123 [shape=cds, label=<<font color="black">0:app __x0__ = (SharedDataBlockEventSet execution)</font>> color="black" fillcolor="white" style=filled]
  node18132 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18127 [shape=cds, label=<<font color="black">3:app __x3__ = (ValueOfReadEvent execution R)</font>> color="black" fillcolor="white" style=filled]
  node18124 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x1__ = __x0__</td></tr>
      <tr><td align="left">0:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:??? &quot;If id:{chosenValue} [ id:{i} ] is not equal to id:{readValue} [ id:{i} ] for any integer value id:{i} in the range 0 through id:{chosenLen} , exclusive , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18121 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18128 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let readValue = __x3__</td></tr>
      <tr><td align="left">4:let chosenLen = chosenValue.length</td></tr>
      <tr><td align="left">5:let readLen = readValue.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18122 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18125 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node18130 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18123 -> node18124 [ color="black"]
  node18125 -> node18126 [label=<<font color="black">true</font>> color="black"]
  node18125 -> node18132 [label=<<font color="black">false</font>> color="black"]
  node18129 -> node18130 [label=<<font color="black">true</font>> color="black"]
  node18129 -> node18131 [label=<<font color="black">false</font>> color="black"]
  node18131 -> node18125 [ color="black"]
  node18121 -> node18123 [ color="black"]
  node18127 -> node18128 [ color="black"]
  node18126 -> node18127 [ color="black"]
  node18128 -> node18129 [ color="black"]
  node18124 -> node18125 [ color="black"]
  node18130 -> node18131 [ color="black"]
  node18132 -> node18122 [ color="black"]
}
