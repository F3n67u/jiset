{
  let ObjRec = envRec.ObjectRecord
  let globalObject = ObjRec.BindingObject
  app __x0__ = (globalObject.GetOwnProperty globalObject N)
  let existingProp = [? __x0__]
  if (|| (= existingProp undefined) (= existingProp.Configurable true)) let desc = (new PropertyDescriptor("Value" -> V, "Writable" -> true, "Enumerable" -> true, "Configurable" -> D)) else let desc = (new PropertyDescriptor("Value" -> V))
  app __x1__ = (DefinePropertyOrThrow globalObject N desc)
  [? __x1__]
  app __x2__ = (Set globalObject N V false)
  [? __x2__]
  let varDeclaredNames = envRec.VarNames
  if (! (contains varDeclaredNames N)) append N -> varDeclaredNames else {}
  app __x3__ = (NormalCompletion CONST_empty)
  return __x3__
}