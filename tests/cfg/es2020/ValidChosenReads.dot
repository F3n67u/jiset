digraph {
  node18878 [shape=cds, label=<<font color="black">0:app __x0__ = (SharedDataBlockEventSet execution)</font>> color="black" fillcolor="white" style=filled]
  node18883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let readValue = __x3__</td></tr>
      <tr><td align="left">4:let chosenLen = chosenValue.length</td></tr>
      <tr><td align="left">5:let readLen = readValue.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18877 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18885 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18884 [shape=diamond, label=<<font color="black">(! (= chosenLen readLen))</font>> color="black" fillcolor="white" style=filled]
  node18880 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node18876 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:??? &quot;If id:{chosenValue} [ id:{i} ] is not equal to id:{readValue} [ id:{i} ] for any integer value id:{i} in the range 0 through id:{chosenLen} , exclusive , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x1__ = __x0__</td></tr>
      <tr><td align="left">0:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let R = __x1__[__x2__]</td></tr>
      <tr><td align="left">1:??? &quot;Let id:{chosenValueRecord} be the element of id:{execution} . [ [ ChosenValues ] ] whose [ [ Event ] ] field is id:{R} .&quot;</td></tr>
      <tr><td align="left">2:let chosenValue = chosenValueRecord.ChosenValue</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18882 [shape=cds, label=<<font color="black">3:app __x3__ = (ValueOfReadEvent execution R)</font>> color="black" fillcolor="white" style=filled]
  node18887 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18879 -> node18880 [ color="black"]
  node18886 -> node18880 [ color="black"]
  node18876 -> node18878 [ color="black"]
  node18885 -> node18886 [ color="black"]
  node18878 -> node18879 [ color="black"]
  node18887 -> node18877 [ color="black"]
  node18884 -> node18885 [label=<<font color="black">true</font>> color="black"]
  node18884 -> node18886 [label=<<font color="black">false</font>> color="black"]
  node18880 -> node18881 [label=<<font color="black">true</font>> color="black"]
  node18880 -> node18887 [label=<<font color="black">false</font>> color="black"]
  node18881 -> node18882 [ color="black"]
  node18883 -> node18884 [ color="black"]
  node18882 -> node18883 [ color="black"]
}
