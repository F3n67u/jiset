{
  let F = CONTEXT.Function
  let alreadyCalled = F.AlreadyCalled
  if (= alreadyCalled.Value true) return undefined else {}
  alreadyCalled.Value = true
  let index = F.Index
  let values = F.Values
  let promiseCapability = F.Capability
  let remainingElementsCount = F.RemainingElements
  app __x0__ = (OrdinaryObjectCreate INTRINSIC_Object_prototype)
  let obj = [! __x0__]
  app __x1__ = (CreateDataPropertyOrThrow obj "status" "rejected")
  [! __x1__]
  app __x2__ = (CreateDataPropertyOrThrow obj "reason" x)
  [! __x2__]
  values[index] = obj
  remainingElementsCount.Value = (- remainingElementsCount.Value 1i)
  if (= remainingElementsCount.Value 0i) {
    app __x3__ = (CreateArrayFromList values)
    let valuesArray = [! __x3__]
    app __x4__ = (Call promiseCapability.Resolve undefined (new [valuesArray]))
    return [? __x4__]
  } else {}
  return undefined
}