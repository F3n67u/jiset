digraph {
  node5614 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let assignmentPattern = (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x11__]</td></tr>
      <tr><td align="left">14:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5597 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5611 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rval = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5620 [shape=cds, label=<<font color="black">13:app __x11__ = (__x10__ rval)</font>> color="black" fillcolor="white" style=filled]
  node5603 [shape=cds, label=<<font color="black">5:access __x2__ = (LeftHandSideExpression &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5612 [shape=cds, label=<<font color="black">8:app __x7__ = (PutValue lref rval)</font>> color="black" fillcolor="white" style=filled]
  node5599 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5619 [shape=cds, label=<<font color="black">13:access __x10__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5613 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x7__]</td></tr>
      <tr><td align="left">9:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5600 [shape=cds, label=<<font color="black">1:access __x0__ = (LeftHandSideExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5618 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let rval = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5605 [shape=cds, label=<<font color="black">4:access __x3__ = (AssignmentExpression &quot;NamedEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5604 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x1__ true) (= __x2__ true))</font>> color="black" fillcolor="white" style=filled]
  node5617 [shape=cds, label=<<font color="black">12:app __x9__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5609 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rref = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5615 [shape=cds, label=<<font color="black">11:access __x8__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5608 [shape=cds, label=<<font color="black">6:access __x5__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5598 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5610 [shape=cds, label=<<font color="black">7:app __x6__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5616 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rref = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5607 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let rval = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5602 [shape=cds, label=<<font color="black">5:app __x1__ = (IsAnonymousFunctionDefinition AssignmentExpression)</font>> color="black" fillcolor="white" style=filled]
  node5606 [shape=cds, label=<<font color="black">4:app __x4__ = (__x3__ lref.ReferencedName)</font>> color="black" fillcolor="white" style=filled]
  node5601 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5612 -> node5613 [ color="black"]
  node5618 -> node5619 [ color="black"]
  node5597 -> node5599 [ color="black"]
  node5606 -> node5607 [ color="black"]
  node5602 -> node5603 [ color="black"]
  node5608 -> node5609 [ color="black"]
  node5601 -> node5602 [ color="black"]
  node5600 -> node5601 [ color="black"]
  node5613 -> node5614 [ color="black"]
  node5599 -> node5600 [label=<<font color="black">true</font>> color="black"]
  node5599 -> node5614 [label=<<font color="black">false</font>> color="black"]
  node5607 -> node5612 [ color="black"]
  node5611 -> node5612 [ color="black"]
  node5610 -> node5611 [ color="black"]
  node5609 -> node5610 [ color="black"]
  node5603 -> node5604 [ color="black"]
  node5605 -> node5606 [ color="black"]
  node5619 -> node5620 [ color="black"]
  node5621 -> node5598 [ color="black"]
  node5616 -> node5617 [ color="black"]
  node5604 -> node5605 [label=<<font color="black">true</font>> color="black"]
  node5604 -> node5608 [label=<<font color="black">false</font>> color="black"]
  node5620 -> node5621 [ color="black"]
  node5617 -> node5618 [ color="black"]
  node5614 -> node5615 [ color="black"]
  node5615 -> node5616 [ color="black"]
}
