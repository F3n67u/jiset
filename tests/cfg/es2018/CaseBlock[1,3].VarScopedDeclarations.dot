digraph {
  node7652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; declarations</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7645 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node7651 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node7646 [shape=cds, label=<<font color="black">access __x0__ = (CaseClauses0 &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7643 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return declarations</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let __x2__ = __x1__</td></tr>
      <tr><td align="left">2:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Return the result of appending to id:{declarations} the elements of the VarScopedDeclarations of the second nt:{CaseClauses} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7653 [shape=diamond, label=<<font color="black">(= CaseClauses1 absent)</font>> color="black" fillcolor="white" style=filled]
  node7644 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7649 [shape=cds, label=<<font color="black">2:access __x1__ = (DefaultClause &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7648 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7650 -> node7651 [ color="black"]
  node7655 -> node7644 [ color="black"]
  node7652 -> node7651 [ color="black"]
  node7646 -> node7647 [ color="black"]
  node7651 -> node7652 [label=<<font color="black">true</font>> color="black"]
  node7651 -> node7653 [label=<<font color="black">false</font>> color="black"]
  node7645 -> node7646 [label=<<font color="black">true</font>> color="black"]
  node7645 -> node7648 [label=<<font color="black">false</font>> color="black"]
  node7648 -> node7649 [ color="black"]
  node7653 -> node7654 [label=<<font color="black">true</font>> color="black"]
  node7653 -> node7655 [label=<<font color="black">false</font>> color="black"]
  node7654 -> node7655 [ color="black"]
  node7649 -> node7650 [ color="black"]
  node7643 -> node7645 [ color="black"]
  node7647 -> node7649 [ color="black"]
}
