{
  app __x0__ = (Type O)
  assert (= __x0__ Object)
  assert (|| (= level CONST_sealed) (= level CONST_frozen))
  app __x1__ = (O.PreventExtensions O)
  let status = [? __x1__]
  if (= status false) return false else {}
  app __x2__ = (O.OwnPropertyKeys O)
  let keys = [? __x2__]
  if (= level CONST_sealed) {
    let __x3__ = keys
    let __x4__ = 0i
    while (< __x4__ __x3__.length) {
      let k = __x3__[__x4__]
      app __x5__ = (DefinePropertyOrThrow O k (new PropertyDescriptor("Configurable" -> false)))
      [? __x5__]
      __x4__ = (+ __x4__ 1i)
    }
  } else {
    assert (= level CONST_frozen)
    let __x6__ = keys
    let __x7__ = 0i
    while (< __x7__ __x6__.length) {
      let k = __x6__[__x7__]
      app __x8__ = (O.GetOwnProperty O k)
      let currentDesc = [? __x8__]
      if (! (= currentDesc undefined)) {
        app __x9__ = (IsAccessorDescriptor currentDesc)
        if (= __x9__ true) let desc = (new PropertyDescriptor("Configurable" -> false)) else let desc = (new PropertyDescriptor("Configurable" -> false, "Writable" -> false))
        app __x10__ = (DefinePropertyOrThrow O k desc)
        [? __x10__]
      } else {}
      __x7__ = (+ __x7__ 1i)
    }
  }
  return true
}