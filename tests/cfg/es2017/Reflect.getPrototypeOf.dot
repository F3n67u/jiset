digraph {
  node16830 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16826 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16829 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node16833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16832 [shape=cds, label=<<font color="black">1:app __x1__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node16831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16828 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16827 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16826 -> node16828 [ color="black"]
  node16830 -> node16831 [label=<<font color="black">true</font>> color="black"]
  node16830 -> node16832 [label=<<font color="black">false</font>> color="black"]
  node16829 -> node16830 [ color="black"]
  node16833 -> node16827 [ color="black"]
  node16831 -> node16832 [ color="black"]
  node16832 -> node16833 [ color="black"]
  node16828 -> node16829 [ color="black"]
}
