digraph {
  node9127 [shape=cds, label=<<font color="black">2:app __x2__ = (OrdinaryFunctionCreate INTRINSIC_Function_prototype parameters ConciseBody CONST_lexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node9126 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let parameters = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9122 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9125 [shape=cds, label=<<font color="black">1:access __x1__ = (ArrowParameters &quot;CoveredFormalsList&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9121 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9124 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let scope = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9123 [shape=cds, label=<<font color="black">0:access __x0__ = (GLOBAL_context &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9128 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let closure = __x2__</td></tr>
      <tr><td align="left">3:closure.SourceText = (get-syntax ArrowFunction)</td></tr>
      <tr><td align="left">4:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9127 -> node9128 [ color="black"]
  node9124 -> node9125 [ color="black"]
  node9125 -> node9126 [ color="black"]
  node9126 -> node9127 [ color="black"]
  node9121 -> node9123 [ color="black"]
  node9128 -> node9122 [ color="black"]
  node9123 -> node9124 [ color="black"]
}
