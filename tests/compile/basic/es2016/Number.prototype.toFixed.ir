{
  app __x0__ = (thisNumberValue this)
  let x = [? __x0__]
  app __x1__ = (ToInteger fractionDigits)
  let f = [? __x1__]
  if (|| (< f 0i) (< 20i f)) throw INTRINSIC_RangeError else {}
  if (= x NaN) return "NaN" else {}
  let s = ""
  if (< x 0i) {
    let s = "-"
    let x = (- x)
  } else {}
  if (! (< x (** 10.0 21i))) {
    app __x2__ = (ToString x)
    let m = [! __x2__]
  } else {
    ??? "Let id:{n} be an integer for which the exact mathematical value of id:{n} รท 10 sup:{id:{f}} - id:{x} is as close to zero as possible . If there are two such id:{n} , pick the larger id:{n} ."
    ??? "If id:{n} = 0 , let id:{m} be the String code:{\"0\"} . Otherwise , let id:{m} be the String consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) ."
    if (! (== f 0i)) {
      let k = m.length
      if (! (< f k)) {
        ??? "Let id:{z} be the String consisting of id:{f} + 1 - id:{k} occurrences of the code unit 0x0030 ( DIGIT ZERO ) ."
        let m = (+ z m)
        let k = (+ f 1i)
      } else {}
      ??? "Let id:{a} be the first id:{k} - id:{f} elements of id:{m} , and let id:{b} be the remaining id:{f} elements of id:{m} ."
      ??? "Let id:{m} be the concatenation of the three Strings id:{a} , code:{\".\"} , and id:{b} ."
    } else {}
  }
  return (+ s m)
}