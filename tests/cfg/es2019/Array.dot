digraph {
  node14478 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let proto = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14483 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let Pk = [! __x2__]</td></tr>
      <tr><td align="left">9:let itemK = items[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14474 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node14484 [shape=cds, label=<<font color="black">10:app __x3__ = (CreateDataProperty array Pk itemK)</font>> color="black" fillcolor="white" style=filled]
  node14477 [shape=cds, label=<<font color="black">3:app __x0__ = (GetPrototypeFromConstructor newTarget INTRINSIC_ArrayPrototype)</font>> color="black" fillcolor="white" style=filled]
  node14473 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let numberOfArgs = argumentsList.length</td></tr>
      <tr><td align="left">1:assert (! (&lt; numberOfArgs 2i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14481 [shape=diamond, label=<<font color="black">(&lt; k numberOfArgs)</font>> color="black" fillcolor="white" style=filled]
  node14471 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14476 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14480 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let array = [? __x1__]</td></tr>
      <tr><td align="left">5:let k = 0i</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{items} be a zero - origined List containing the argument items in order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14482 [shape=cds, label=<<font color="black">8:app __x2__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node14479 [shape=cds, label=<<font color="black">4:app __x1__ = (ArrayCreate numberOfArgs proto)</font>> color="black" fillcolor="white" style=filled]
  node14472 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14475 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14486 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14470 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let defineStatus = __x3__</td></tr>
      <tr><td align="left">11:assert (= defineStatus true)</td></tr>
      <tr><td align="left">12:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14475 -> node14477 [ color="black"]
  node14470 -> node14472 [ color="black"]
  node14481 -> node14482 [label=<<font color="black">true</font>> color="black"]
  node14481 -> node14486 [label=<<font color="black">false</font>> color="black"]
  node14474 -> node14475 [label=<<font color="black">true</font>> color="black"]
  node14474 -> node14476 [label=<<font color="black">false</font>> color="black"]
  node14479 -> node14480 [ color="black"]
  node14473 -> node14474 [ color="black"]
  node14482 -> node14483 [ color="black"]
  node14480 -> node14481 [ color="black"]
  node14483 -> node14484 [ color="black"]
  node14476 -> node14477 [ color="black"]
  node14477 -> node14478 [ color="black"]
  node14478 -> node14479 [ color="black"]
  node14485 -> node14481 [ color="black"]
  node14484 -> node14485 [ color="black"]
  node14486 -> node14471 [ color="black"]
  node14472 -> node14473 [ color="black"]
}
