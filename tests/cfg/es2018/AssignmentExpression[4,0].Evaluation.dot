digraph {
  node5069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let rval = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5056 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x3__ true) (= __x4__ true))</font>> color="black" fillcolor="white" style=filled]
  node5064 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x8__]</td></tr>
      <tr><td align="left">9:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5052 [shape=cds, label=<<font color="black">4:app __x2__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5070 [shape=cds, label=<<font color="black">13:access __x11__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; rval)</font>> color="black" fillcolor="white" style=filled]
  node5049 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5066 [shape=cds, label=<<font color="black">11:access __x9__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5053 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let rval = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5048 [shape=cds, label=<<font color="black">1:access __x0__ = (LeftHandSideExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5057 [shape=cds, label=<<font color="black">6:app __x5__ = (HasOwnProperty rval &quot;name&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5047 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5068 [shape=cds, label=<<font color="black">12:app __x10__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5055 [shape=cds, label=<<font color="black">5:access __x4__ = (LeftHandSideExpression &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let rref = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5045 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5059 [shape=diamond, label=<<font color="black">(= hasNameProperty false)</font>> color="black" fillcolor="white" style=filled]
  node5063 [shape=cds, label=<<font color="black">8:app __x8__ = (PutValue lref rval)</font>> color="black" fillcolor="white" style=filled]
  node5058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let hasNameProperty = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let assignmentPattern = (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5067 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rref = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5050 [shape=cds, label=<<font color="black">3:access __x1__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x11__]</td></tr>
      <tr><td align="left">14:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5054 [shape=cds, label=<<font color="black">5:app __x3__ = (IsAnonymousFunctionDefinition AssignmentExpression)</font>> color="black" fillcolor="white" style=filled]
  node5061 [shape=cds, label=<<font color="black">app __x7__ = (SetFunctionName rval __x6__)</font>> color="black" fillcolor="white" style=filled]
  node5060 [shape=cds, label=<<font color="black">app __x6__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5046 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5067 -> node5068 [ color="black"]
  node5053 -> node5054 [ color="black"]
  node5062 -> node5063 [ color="black"]
  node5065 -> node5066 [ color="black"]
  node5054 -> node5055 [ color="black"]
  node5068 -> node5069 [ color="black"]
  node5052 -> node5053 [ color="black"]
  node5050 -> node5051 [ color="black"]
  node5049 -> node5050 [ color="black"]
  node5066 -> node5067 [ color="black"]
  node5055 -> node5056 [ color="black"]
  node5061 -> node5062 [ color="black"]
  node5069 -> node5070 [ color="black"]
  node5071 -> node5046 [ color="black"]
  node5051 -> node5052 [ color="black"]
  node5064 -> node5065 [ color="black"]
  node5056 -> node5057 [label=<<font color="black">true</font>> color="black"]
  node5056 -> node5063 [label=<<font color="black">false</font>> color="black"]
  node5058 -> node5059 [ color="black"]
  node5059 -> node5060 [label=<<font color="black">true</font>> color="black"]
  node5059 -> node5063 [label=<<font color="black">false</font>> color="black"]
  node5048 -> node5049 [ color="black"]
  node5063 -> node5064 [ color="black"]
  node5047 -> node5048 [label=<<font color="black">true</font>> color="black"]
  node5047 -> node5065 [label=<<font color="black">false</font>> color="black"]
  node5070 -> node5071 [ color="black"]
  node5057 -> node5058 [ color="black"]
  node5060 -> node5061 [ color="black"]
  node5045 -> node5047 [ color="black"]
}
