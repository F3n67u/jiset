{
  [? ref]
  if (= (typeof ref) Reference) {
    app __x0__ = (IsPropertyReference ref)
    if (= __x0__ true) {
      app __x1__ = (GetThisValue ref)
      let thisValue = __x1__
    } else {
      app __x2__ = (GetBase ref)
      let refEnv = __x2__
      app __x3__ = (refEnv.WithBaseObject refEnv)
      let thisValue = __x3__
    }
  } else let thisValue = undefined
  access __x4__ = (arguments "ArgumentListEvaluation")
  let argList = [? __x4__]
  if (! (= (typeof func) Object)) throw TypeError else {}
  app __x5__ = (IsCallable func)
  if (= __x5__ false) throw TypeError else {}
  if (= tailPosition true) {
    app __x6__ = (PrepareForTailCall)
    __x6__
  } else {}
  app __x7__ = (Call func thisValue argList)
  let result = __x7__
  return result
}