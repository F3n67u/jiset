{
  app __x0__ = (GetArgument argumentsList 0i)
  let searchString = __x0__
  app __x1__ = (GetArgument argumentsList 1i)
  let position = __x1__
  app __x2__ = (RequireObjectCoercible this)
  let O = [? __x2__]
  app __x3__ = (ToString O)
  let S = [? __x3__]
  app __x4__ = (ToString searchString)
  let searchStr = [? __x4__]
  app __x5__ = (ToNumber position)
  let numPos = [? __x5__]
  if (= numPos NaN) let pos = Infinity else {
    app __x6__ = (ToInteger numPos)
    let pos = [! __x6__]
  }
  let len = S.length
  app __x7__ = (max pos 0i)
  app __x8__ = (min __x7__ len)
  let start = __x8__
  let searchLen = searchStr.length
  ??? "Return the largest possible nonnegative integer id:{k} not larger than id:{start} such that id:{k} + id:{searchLen} is not greater than id:{len} , and for all nonnegative integers id:{j} less than id:{searchLen} , the code unit at index id:{k} + id:{j} within id:{S} is the same as the code unit at index id:{j} within id:{searchStr} ; but if there is no such integer id:{k} , return the value - 1 ."
}