{
  access __x0__ = (UpdateExpression "Evaluation")
  let left = __x0__
  app __x1__ = (GetValue left)
  let leftValue = [? __x1__]
  access __x2__ = (ExponentiationExpression "Evaluation")
  let right = __x2__
  app __x3__ = (GetValue right)
  let rightValue = [? __x3__]
  app __x4__ = (ToNumeric leftValue)
  let base = [? __x4__]
  app __x5__ = (ToNumeric rightValue)
  let exponent = [? __x5__]
  if (! (= (typeof base) (typeof exponent))) throw TypeError else {}
  app __x6__ = (PRIMITIVE[(typeof base)].exponentiate base exponent)
  return [? __x6__]
}