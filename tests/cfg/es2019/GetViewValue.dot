digraph {
  node16894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16890 [shape=cds, label=<<font color="black">4:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16885 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node16882 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node16880 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16899 [shape=cds, label=<<font color="black">12:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false &quot;Unordered&quot; isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16893 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node16889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16896 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node16887 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16892 [shape=cds, label=<<font color="black">6:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">8:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16884 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16888 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node16891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:isLittleEndian = __x2__</td></tr>
      <tr><td align="left">5:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16898 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16881 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16900 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16883 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16899 -> node16900 [ color="black"]
  node16890 -> node16891 [ color="black"]
  node16880 -> node16882 [ color="black"]
  node16883 -> node16884 [label=<<font color="black">true</font>> color="black"]
  node16883 -> node16885 [label=<<font color="black">false</font>> color="black"]
  node16896 -> node16897 [label=<<font color="black">true</font>> color="black"]
  node16896 -> node16898 [label=<<font color="black">false</font>> color="black"]
  node16887 -> node16888 [ color="black"]
  node16885 -> node16886 [label=<<font color="black">true</font>> color="black"]
  node16885 -> node16887 [label=<<font color="black">false</font>> color="black"]
  node16893 -> node16894 [label=<<font color="black">true</font>> color="black"]
  node16893 -> node16895 [label=<<font color="black">false</font>> color="black"]
  node16892 -> node16893 [ color="black"]
  node16895 -> node16896 [ color="black"]
  node16894 -> node16895 [ color="black"]
  node16889 -> node16890 [ color="black"]
  node16882 -> node16883 [ color="black"]
  node16898 -> node16899 [ color="black"]
  node16886 -> node16887 [ color="black"]
  node16900 -> node16881 [ color="black"]
  node16891 -> node16892 [ color="black"]
  node16888 -> node16889 [ color="black"]
  node16884 -> node16885 [ color="black"]
  node16897 -> node16898 [ color="black"]
}
