{
  let promise = this
  app __x0__ = (IsPromise promise)
  if (= __x0__ false) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  app __x2__ = (SpeciesConstructor promise INTRINSIC_Promise)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let C = __x2__
  app __x3__ = (NewPromiseCapability C)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let resultCapability = __x3__
  app __x4__ = (PerformPromiseThen promise onFulfilled onRejected resultCapability)
  app __x5__ = (WrapCompletion __x4__)
  return __x5__
}