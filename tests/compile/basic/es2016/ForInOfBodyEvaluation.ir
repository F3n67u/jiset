{
  let oldEnv = GLOBAL_context.LexicalEnvironment
  let V = undefined
  access __x0__ = (lhs "IsDestructuring")
  let destructuring = __x0__
  if (&& (= destructuring true) (= lhsKind CONST_assignment)) {
    assert (is-instance-of lhs LeftHandSideExpression)
    ??? "Let id:{assignmentPattern} be the parse of the source text corresponding to id:{lhs} using nt:{AssignmentPattern} as the goal symbol ."
  } else {}
  while true {
    app __x1__ = (IteratorStep iterator)
    let nextResult = [? __x1__]
    if (= nextResult false) {
      app __x2__ = (NormalCompletion V)
      return __x2__
    } else {}
    app __x3__ = (IteratorValue nextResult)
    let nextValue = [? __x3__]
    if (|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding)) if (= destructuring false) {
      access __x4__ = (lhs "Evaluation")
      let lhsRef = __x4__
    } else {} else {
      assert (= lhsKind CONST_lexicalBinding)
      assert (is-instance-of lhs ForDeclaration)
      app __x5__ = (NewDeclarativeEnvironment oldEnv)
      let iterationEnv = __x5__
      access __x6__ = (lhs "BindingInstantiation")
      app __x7__ = (__x6__ iterationEnv)
      __x7__
      GLOBAL_context.LexicalEnvironment = iterationEnv
      if (= destructuring false) {
        access __x8__ = (lhs "BoundNames")
        let lhsName = __x8__[0i]
        app __x9__ = (ResolveBinding lhsName)
        let lhsRef = [! __x9__]
      } else {}
    }
    if (= destructuring false) {
      app __x10__ = (IsAbruptCompletion lhsRef)
      if __x10__ let status = lhsRef else if (= lhsKind CONST_lexicalBinding) {
        app __x11__ = (InitializeReferencedBinding lhsRef nextValue)
        let status = __x11__
      } else {
        app __x12__ = (PutValue lhsRef nextValue)
        let status = __x12__
      }
    } else if (= lhsKind CONST_assignment) {
      access __x13__ = (assignmentPattern "DestructuringAssignmentEvaluation")
      app __x14__ = (__x13__ nextValue)
      let status = __x14__
    } else if (= lhsKind CONST_varBinding) {
      assert (is-instance-of lhs ForBinding)
      access __x15__ = (lhs "BindingInitialization")
      app __x16__ = (__x15__ nextValue undefined)
      let status = __x16__
    } else {
      assert (= lhsKind CONST_lexicalBinding)
      assert (is-instance-of lhs ForDeclaration)
      access __x17__ = (lhs "BindingInitialization")
      app __x18__ = (__x17__ nextValue iterationEnv)
      let status = __x18__
    }
    app __x19__ = (IsAbruptCompletion status)
    if __x19__ {
      GLOBAL_context.LexicalEnvironment = oldEnv
      app __x20__ = (IteratorClose iterator status)
      return [? __x20__]
    } else {}
    access __x21__ = (stmt "Evaluation")
    let result = __x21__
    GLOBAL_context.LexicalEnvironment = oldEnv
    app __x22__ = (LoopContinues result labelSet)
    if (= __x22__ false) {
      app __x23__ = (UpdateEmpty result V)
      app __x24__ = (IteratorClose iterator __x23__)
      return [? __x24__]
    } else {}
    if (! (= result.Value CONST_empty)) let V = result.Value else {}
  }
}