{
  app __x0__ = (Type iteratorRecord.Iterator)
  assert (= __x0__ Object)
  assert (is-completion completion)
  let iterator = iteratorRecord.Iterator
  app __x1__ = (GetMethod iterator "return")
  let innerResult = __x1__
  if (= innerResult.Type CONST_normal) {
    let return = innerResult.Value
    if (= return undefined) return completion else {}
    app __x2__ = (Call return iterator)
    innerResult = __x2__
    if (= innerResult.Type CONST_normal) {
      app __x3__ = (Await innerResult.Value)
      innerResult = __x3__
    } else {}
  } else {}
  if (= completion.Type CONST_throw) return completion else {}
  if (= innerResult.Type CONST_throw) return innerResult else {}
  app __x4__ = (Type innerResult.Value)
  if (! (= __x4__ Object)) throw TypeError else {}
  return completion
}