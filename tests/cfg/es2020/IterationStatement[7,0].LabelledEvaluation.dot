digraph {
  node7673 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7677 [shape=cds, label=<<font color="black">1:app __x2__ = (ForInOfBodyEvaluation ForDeclaration Statement keyResult CONST_enumerate CONST_lexicalBinding labelSet)</font>> color="black" fillcolor="white" style=filled]
  node7674 [shape=cds, label=<<font color="black">0:access __x0__ = (ForDeclaration &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7675 [shape=cds, label=<<font color="black">0:app __x1__ = (ForInOfHeadEvaluation __x0__ Expression CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7672 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let keyResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7674 -> node7675 [ color="black"]
  node7675 -> node7676 [ color="black"]
  node7672 -> node7674 [ color="black"]
  node7678 -> node7673 [ color="black"]
  node7677 -> node7678 [ color="black"]
  node7676 -> node7677 [ color="black"]
}
