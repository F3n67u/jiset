{
  app __x0__ = (ValidateIntegerTypedArray typedArray true)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let buffer = __x0__
  app __x1__ = (ValidateAtomicAccess typedArray index)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let indexedPosition = __x1__
  if (= count undefined) let c = Infinity else {
    app __x2__ = (ToIntegerOrInfinity count)
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
    let intCount = __x2__
    app __x3__ = (max intCount 0i)
    let c = __x3__
  }
  let block = buffer.ArrayBufferData
  let arrayTypeName = typedArray.TypedArrayName
  app __x4__ = (IsSharedArrayBuffer buffer)
  if (= __x4__ false) {
    app __x5__ = (WrapCompletion 0i)
    return __x5__
  } else {}
  app __x6__ = (GetWaiterList block indexedPosition)
  let WL = __x6__
  let n = 0i
  app __x7__ = (EnterCriticalSection WL)
  __x7__
  app __x8__ = (RemoveWaiters WL c)
  let S = __x8__
  while (< 0i S.length) {
    let W = S[0i]
    (pop S 0i)
    app __x9__ = (NotifyWaiter WL W)
    __x9__
    n = (+ n 1i)
  }
  app __x10__ = (LeaveCriticalSection WL)
  __x10__
  app __x11__ = (WrapCompletion n)
  return __x11__
}