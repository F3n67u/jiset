digraph {
  node12490 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{T} be a String value that is made from id:{n} copies of id:{S} appended together . If id:{n} is 0 , id:{T} is the empty String .&quot;</td></tr>
      <tr><td align="left">6:return T</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12479 [shape=cds, label=<<font color="black">app count = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let n = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12489 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12478 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12481 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12486 [shape=diamond, label=<<font color="black">(&lt; n 0i)</font>> color="black" fillcolor="white" style=filled]
  node12483 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12477 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12482 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12487 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12484 [shape=cds, label=<<font color="black">2:app __x2__ = (ToInteger count)</font>> color="black" fillcolor="white" style=filled]
  node12480 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12488 [shape=diamond, label=<<font color="black">(= n Infinity)</font>> color="black" fillcolor="white" style=filled]
  node12490 -> node12478 [ color="black"]
  node12479 -> node12480 [ color="black"]
  node12486 -> node12487 [label=<<font color="black">true</font>> color="black"]
  node12486 -> node12488 [label=<<font color="black">false</font>> color="black"]
  node12481 -> node12482 [ color="black"]
  node12487 -> node12488 [ color="black"]
  node12488 -> node12489 [label=<<font color="black">true</font>> color="black"]
  node12488 -> node12490 [label=<<font color="black">false</font>> color="black"]
  node12485 -> node12486 [ color="black"]
  node12477 -> node12479 [ color="black"]
  node12483 -> node12484 [ color="black"]
  node12480 -> node12481 [ color="black"]
  node12482 -> node12483 [ color="black"]
  node12484 -> node12485 [ color="black"]
  node12489 -> node12490 [ color="black"]
}
