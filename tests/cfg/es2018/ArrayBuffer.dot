digraph {
  node16261 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16255 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16259 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16260 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node16258 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node16253 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16257 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16256 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16254 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16257 -> node16258 [ color="black"]
  node16255 -> node16256 [ color="black"]
  node16253 -> node16255 [ color="black"]
  node16261 -> node16254 [ color="black"]
  node16259 -> node16260 [ color="black"]
  node16256 -> node16257 [label=<<font color="black">true</font>> color="black"]
  node16256 -> node16258 [label=<<font color="black">false</font>> color="black"]
  node16260 -> node16261 [ color="black"]
  node16258 -> node16259 [ color="black"]
}
