{
  app __x0__ = (RequireObjectCoercible this)
  let O = [? __x0__]
  app __x1__ = (ToString O)
  let S = [? __x1__]
  app __x2__ = (IsRegExp searchString)
  let isRegExp = [? __x2__]
  if (= isRegExp true) throw TypeError else {}
  app __x3__ = (ToString searchString)
  let searchStr = [? __x3__]
  let len = S.length
  if (= endPosition undefined) let pos = len else {
    app __x4__ = (ToIntegerOrInfinity endPosition)
    let pos = [? __x4__]
  }
  ??? "Let id:{end} be the result of clamping id:{pos} between 0 and id:{len} ."
  let searchLength = searchStr.length
  if (== searchLength 0i) return true else {}
  let start = (- end searchLength)
  if (< start 0i) return false else {}
  let __x5__ = ""
  let __x6__ = start
  while (< __x6__ (+ end 1i)) {
    access __x7__ = (S __x6__)
    __x5__ = (+ __x5__ __x7__)
    __x6__ = (+ __x6__ 1i)
  }
  let substring = __x5__
  app __x8__ = (SameValueNonNumeric substring searchStr)
  return [! __x8__]
}