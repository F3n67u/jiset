digraph {
  node19020 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:[? __x1__]</td></tr>
      <tr><td align="left">3:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19016 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19017 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node19015 [shape=cds, label=<<font color="black">app r = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node19018 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19014 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19013 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19019 [shape=cds, label=<<font color="black">2:app __x1__ = (Call promiseCapability.Reject undefined (new [r]))</font>> color="black" fillcolor="white" style=filled]
  node19016 -> node19017 [ color="black"]
  node19020 -> node19014 [ color="black"]
  node19013 -> node19015 [ color="black"]
  node19019 -> node19020 [ color="black"]
  node19018 -> node19019 [ color="black"]
  node19017 -> node19018 [ color="black"]
  node19015 -> node19016 [ color="black"]
}
