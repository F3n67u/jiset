digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let addend = 41i</td></tr>
      <tr><td align="left">1:??? &quot;Let id:{closure} be a new Abstract Closure with parameters ( id:{x} ) that captures id:{addend} and performs the following steps when called : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">3:app __x0__ = (closure 1i)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let val = __x0__</td></tr>
      <tr><td align="left">4:assert (= val 42i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node0 -> node2 [ color="black"]
  node2 -> node3 [ color="black"]
  node3 -> node4 [ color="black"]
  node4 -> node1 [ color="black"]
}
