digraph {
  node15752 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">6:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15759 [shape=cds, label=<<font color="black">10:app __x4__ = (Invoke C &quot;resolve&quot; (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node15748 [shape=diamond, label=<<font color="black">__x1__</font>> color="black" fillcolor="white" style=filled]
  node15751 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15756 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node15760 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextPromise = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15747 [shape=cds, label=<<font color="black">2:app __x1__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node15740 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15753 [shape=cds, label=<<font color="black">7:app __x2__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15743 [shape=cds, label=<<font color="black">app C = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node15741 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15758 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[? nextValue]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15755 [shape=cds, label=<<font color="black">8:app __x3__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node15762 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15742 [shape=cds, label=<<font color="black">app promiseCapability = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15744 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15761 [shape=cds, label=<<font color="black">11:app __x5__ = (Invoke nextPromise &quot;then&quot; (new [promiseCapability.Resolve, promiseCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node15739 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15745 [shape=cds, label=<<font color="black">1:app __x0__ = (IteratorStep iteratorRecord.Iterator)</font>> color="black" fillcolor="white" style=filled]
  node15746 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let next = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15757 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15754 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let nextValue = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15749 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15761 -> node15762 [ color="black"]
  node15757 -> node15758 [ color="black"]
  node15753 -> node15754 [ color="black"]
  node15760 -> node15761 [ color="black"]
  node15739 -> node15741 [ color="black"]
  node15748 -> node15749 [label=<<font color="black">true</font>> color="black"]
  node15748 -> node15750 [label=<<font color="black">false</font>> color="black"]
  node15751 -> node15752 [label=<<font color="black">true</font>> color="black"]
  node15751 -> node15753 [label=<<font color="black">false</font>> color="black"]
  node15741 -> node15742 [ color="black"]
  node15749 -> node15750 [ color="black"]
  node15759 -> node15760 [ color="black"]
  node15743 -> node15744 [ color="black"]
  node15758 -> node15759 [ color="black"]
  node15755 -> node15756 [ color="black"]
  node15762 -> node15744 [ color="black"]
  node15745 -> node15746 [ color="black"]
  node15756 -> node15757 [label=<<font color="black">true</font>> color="black"]
  node15756 -> node15758 [label=<<font color="black">false</font>> color="black"]
  node15752 -> node15753 [ color="black"]
  node15746 -> node15747 [ color="black"]
  node15747 -> node15748 [ color="black"]
  node15754 -> node15755 [ color="black"]
  node15742 -> node15743 [ color="black"]
  node15750 -> node15751 [ color="black"]
  node15744 -> node15745 [label=<<font color="black">true</font>> color="black"]
  node15744 -> node15740 [label=<<font color="black">false</font>> color="black"]
}
