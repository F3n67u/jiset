digraph {
  node18311 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18316 [shape=cds, label=<<font color="black">2:app __x0__ = (AtomicReadModifyWrite typedArray index value second)</font>> color="black" fillcolor="white" style=filled]
  node18312 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18315 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{second} be a new read - modify - write modification function with parameters ( id:{oldBytes} , id:{newBytes} ) that captures nothing and performs the following steps atomically when called : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18314 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18310 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18317 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18313 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18315 -> node18316 [ color="black"]
  node18310 -> node18312 [ color="black"]
  node18314 -> node18315 [ color="black"]
  node18317 -> node18311 [ color="black"]
  node18316 -> node18317 [ color="black"]
  node18313 -> node18314 [ color="black"]
  node18312 -> node18313 [ color="black"]
}
