digraph {
  node3199 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3207 [shape=cds, label=<<font color="black">7:app __x3__ = (CreateArrayFromList argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node3198 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3205 [shape=cds, label=<<font color="black">6:app __x2__ = (Call target thisArgument argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node3210 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3201 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3208 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let argArray = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3197 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3206 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3209 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, thisArgument, argArray]))</font>> color="black" fillcolor="white" style=filled]
  node3202 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;apply&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3203 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3196 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3200 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3204 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3195 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3207 -> node3208 [ color="black"]
  node3208 -> node3209 [ color="black"]
  node3199 -> node3200 [ color="black"]
  node3200 -> node3201 [ color="black"]
  node3210 -> node3196 [ color="black"]
  node3203 -> node3204 [ color="black"]
  node3197 -> node3198 [ color="black"]
  node3201 -> node3202 [ color="black"]
  node3206 -> node3207 [ color="black"]
  node3209 -> node3210 [ color="black"]
  node3205 -> node3206 [ color="black"]
  node3204 -> node3205 [label=<<font color="black">true</font>> color="black"]
  node3204 -> node3207 [label=<<font color="black">false</font>> color="black"]
  node3198 -> node3199 [label=<<font color="black">true</font>> color="black"]
  node3198 -> node3200 [label=<<font color="black">false</font>> color="black"]
  node3195 -> node3197 [ color="black"]
  node3202 -> node3203 [ color="black"]
}
