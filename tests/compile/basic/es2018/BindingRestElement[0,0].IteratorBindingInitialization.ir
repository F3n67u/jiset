{
  access __x0__ = (BindingIdentifier "StringValue")
  app __x1__ = (ResolveBinding __x0__ environment)
  let lhs = [? __x1__]
  app __x2__ = (ArrayCreate 0i)
  let A = [! __x2__]
  let n = 0i
  while true {
    if (= iteratorRecord.Done false) {
      app __x3__ = (IteratorStep iteratorRecord)
      let next = __x3__
      app __x4__ = (IsAbruptCompletion next)
      if __x4__ iteratorRecord.Done = true else {}
      [? next]
      if (= next false) iteratorRecord.Done = true else {}
    } else {}
    if (= iteratorRecord.Done true) {
      if (= environment undefined) {
        app __x5__ = (PutValue lhs A)
        return [? __x5__]
      } else {}
      app __x6__ = (InitializeReferencedBinding lhs A)
      return __x6__
    } else {}
    app __x7__ = (IteratorValue next)
    let nextValue = __x7__
    app __x8__ = (IsAbruptCompletion nextValue)
    if __x8__ iteratorRecord.Done = true else {}
    [? nextValue]
    app __x9__ = (ToString n)
    app __x10__ = (CreateDataProperty A [! __x9__] nextValue)
    let status = __x10__
    assert (= status true)
    n = (+ n 1i)
  }
}