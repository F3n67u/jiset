digraph {
  node16780 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16782 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let execution = GLOBAL_agent.CandidateExecution</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{eventsRecord} be the Agent Events Record in id:{execution} . [ [ EventsRecords ] ] whose [ [ AgentSignifier ] ] is AgentSignifier ( ) .&quot;</td></tr>
      <tr><td align="left">4:let agentSynchronizesWith = eventsRecord.AgentSynchronizesWith</td></tr>
      <tr><td align="left">5:let notifierEventList = eventsRecord.EventList</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{waiterEventList} be the [ [ EventList ] ] field of the element in id:{execution} . [ [ EventsRecords ] ] whose [ [ AgentSignifier ] ] is id:{W} .&quot;</td></tr>
      <tr><td align="left">7:??? &quot;Let id:{notifyEvent} and id:{waitEvent} be new Synchronize events .&quot;</td></tr>
      <tr><td align="left">8:append notifyEvent -&gt; notifierEventList</td></tr>
      <tr><td align="left">9:append waitEvent -&gt; waiterEventList</td></tr>
      <tr><td align="left">10:append (new [notifyEvent, waitEvent]) -&gt; agentSynchronizesWith</td></tr>
      <tr><td align="left">11:??? &quot;Notify the agent id:{W} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16781 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16780 -> node16782 [ color="black"]
  node16782 -> node16781 [ color="black"]
}
