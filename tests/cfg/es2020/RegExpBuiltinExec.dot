digraph {
  node14793 [shape=cds, label=<<font color="black">21:app __x6__ = (AdvanceStringIndex S lastIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node14773 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14783 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node14809 [shape=cds, label=<<font color="black">38:app __x11__ = (CreateDataPropertyOrThrow A &quot;0&quot; matchedSubstr)</font>> color="black" fillcolor="white" style=filled]
  node14821 [shape=cds, label=<<font color="black">app __x15__ = (ToString i)</font>> color="black" fillcolor="white" style=filled]
  node14824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">58:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14775 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">lastIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14781 [shape=diamond, label=<<font color="black">(= matchSucceeded false)</font>> color="black" fillcolor="white" style=filled]
  node14770 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14811 [shape=cds, label=<<font color="black">43:app __x12__ = (CreateDataPropertyOrThrow A &quot;groups&quot; groups)</font>> color="black" fillcolor="white" style=filled]
  node14782 [shape=diamond, label=<<font color="black">(&lt; length lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14801 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:[? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14822 [shape=cds, label=<<font color="black">app __x16__ = (CreateDataPropertyOrThrow A [! __x15__] capturedValue)</font>> color="black" fillcolor="white" style=filled]
  node14786 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14765 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14805 [shape=cds, label=<<font color="black">35:app __x9__ = (CreateDataPropertyOrThrow A &quot;index&quot; lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14818 [shape=cds, label=<<font color="black">app __x14__ = (UTF16Encode captureI)</font>> color="black" fillcolor="white" style=filled]
  node14769 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14790 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node14780 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let matchSucceeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14815 [shape=diamond, label=<<font color="black">(= captureI undefined)</font>> color="black" fillcolor="white" style=filled]
  node14812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:[! __x12__]</td></tr>
      <tr><td align="left">44:let i = (+ 0i 1i)</td></tr>
      <tr><td align="left">44:let __x13__ = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14798 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:??? &quot;id:{e} is an index into the id:{Input} character list , derived from id:{S} , matched by id:{matcher} . Let id:{eUTF} be the smallest index into id:{S} that corresponds to the character at element id:{e} of id:{Input} . If id:{e} is greater than or equal to the number of elements in id:{Input} , then id:{eUTF} is the number of code units in id:{S} .&quot;</td></tr>
      <tr><td align="left">28:e = eUTF</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14761 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14817 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node14785 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14808 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:[! __x10__]</td></tr>
      <tr><td align="left">37:??? &quot;Let id:{matchedSubstr} be the matched substring ( i . e . the portion of id:{S} between offset id:{lastIndex} inclusive and offset id:{e} exclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14766 [shape=cds, label=<<font color="black">3:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node14772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14789 [shape=diamond, label=<<font color="black">(= r CONST_failure)</font>> color="black" fillcolor="white" style=filled]
  node14804 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let A = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14784 [shape=cds, label=<<font color="black">14:app __x3__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node14799 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node14794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:lastIndex = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14816 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14762 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14777 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14776 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let matcher = R.RegExpMatcher</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14771 [shape=diamond, label=<<font color="black">(contains flags &quot;y&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14792 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x5__]</td></tr>
      <tr><td align="left">20:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14807 [shape=cds, label=<<font color="black">36:app __x10__ = (CreateDataPropertyOrThrow A &quot;input&quot; S)</font>> color="black" fillcolor="white" style=filled]
  node14820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">assert (= fullUnicode false)</td></tr>
      <tr><td align="left">let capturedValue = captureI</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14788 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let r = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14803 [shape=cds, label=<<font color="black">33:app __x8__ = (ArrayCreate (+ n 1i))</font>> color="black" fillcolor="white" style=filled]
  node14767 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let lastIndex = [? __x2__]</td></tr>
      <tr><td align="left">4:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14768 [shape=diamond, label=<<font color="black">(contains flags &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14800 [shape=cds, label=<<font color="black">30:app __x7__ = (Set R &quot;lastIndex&quot; e true)</font>> color="black" fillcolor="white" style=filled]
  node14763 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node14813 [shape=diamond, label=<<font color="black">(&lt; i __x13__)</font>> color="black" fillcolor="white" style=filled]
  node14810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:[! __x11__]</td></tr>
      <tr><td align="left">39:??? &quot;If id:{R} contains any nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">41:??? &quot;Else , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14795 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">matchSucceeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14778 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14791 [shape=cds, label=<<font color="black">19:app __x5__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node14819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = [! __x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14802 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:??? &quot;Let id:{n} be the number of elements in id:{r} ' s id:{captures} List . ( This is the same value as link:{unhandled: sec-notation} ' s id:{NcapturingParens} . )&quot;</td></tr>
      <tr><td align="left">32:assert (&lt; n (- (** 2.0 32i) 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14823 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[! __x16__]</td></tr>
      <tr><td align="left">??? &quot;If the id:{i} sup:{th} capture of id:{R} was defined with a nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14787 [shape=cds, label=<<font color="black">16:app __x4__ = (matcher S lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14806 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14779 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{captureI} be id:{i} sup:{th} element of id:{r} ' s id:{captures} List .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14774 [shape=diamond, label=<<font color="black">(&amp;&amp; (= global false) (= sticky false))</font>> color="black" fillcolor="white" style=filled]
  node14797 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node14764 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ String)</td></tr>
      <tr><td align="left">2:let length = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14796 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let e = r.endIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14812 -> node14813 [ color="black"]
  node14808 -> node14809 [ color="black"]
  node14802 -> node14803 [ color="black"]
  node14788 -> node14789 [ color="black"]
  node14789 -> node14790 [label=<<font color="black">true</font>> color="black"]
  node14789 -> node14795 [label=<<font color="black">false</font>> color="black"]
  node14776 -> node14777 [ color="black"]
  node14815 -> node14816 [label=<<font color="black">true</font>> color="black"]
  node14815 -> node14817 [label=<<font color="black">false</font>> color="black"]
  node14785 -> node14786 [ color="black"]
  node14795 -> node14781 [ color="black"]
  node14780 -> node14781 [ color="black"]
  node14790 -> node14791 [label=<<font color="black">true</font>> color="black"]
  node14790 -> node14793 [label=<<font color="black">false</font>> color="black"]
  node14816 -> node14821 [ color="black"]
  node14818 -> node14819 [ color="black"]
  node14767 -> node14768 [ color="black"]
  node14781 -> node14782 [label=<<font color="black">true</font>> color="black"]
  node14781 -> node14796 [label=<<font color="black">false</font>> color="black"]
  node14809 -> node14810 [ color="black"]
  node14777 -> node14778 [label=<<font color="black">true</font>> color="black"]
  node14777 -> node14779 [label=<<font color="black">false</font>> color="black"]
  node14796 -> node14797 [ color="black"]
  node14778 -> node14780 [ color="black"]
  node14806 -> node14807 [ color="black"]
  node14784 -> node14785 [ color="black"]
  node14797 -> node14798 [label=<<font color="black">true</font>> color="black"]
  node14797 -> node14799 [label=<<font color="black">false</font>> color="black"]
  node14814 -> node14815 [ color="black"]
  node14765 -> node14766 [ color="black"]
  node14783 -> node14784 [label=<<font color="black">true</font>> color="black"]
  node14783 -> node14786 [label=<<font color="black">false</font>> color="black"]
  node14770 -> node14771 [ color="black"]
  node14792 -> node14793 [ color="black"]
  node14764 -> node14765 [ color="black"]
  node14800 -> node14801 [ color="black"]
  node14803 -> node14804 [ color="black"]
  node14813 -> node14814 [label=<<font color="black">true</font>> color="black"]
  node14813 -> node14824 [label=<<font color="black">false</font>> color="black"]
  node14817 -> node14818 [label=<<font color="black">true</font>> color="black"]
  node14817 -> node14820 [label=<<font color="black">false</font>> color="black"]
  node14772 -> node14774 [ color="black"]
  node14807 -> node14808 [ color="black"]
  node14822 -> node14823 [ color="black"]
  node14801 -> node14802 [ color="black"]
  node14811 -> node14812 [ color="black"]
  node14771 -> node14772 [label=<<font color="black">true</font>> color="black"]
  node14771 -> node14773 [label=<<font color="black">false</font>> color="black"]
  node14819 -> node14821 [ color="black"]
  node14793 -> node14794 [ color="black"]
  node14799 -> node14800 [label=<<font color="black">true</font>> color="black"]
  node14799 -> node14802 [label=<<font color="black">false</font>> color="black"]
  node14791 -> node14792 [ color="black"]
  node14787 -> node14788 [ color="black"]
  node14804 -> node14805 [ color="black"]
  node14820 -> node14821 [ color="black"]
  node14773 -> node14774 [ color="black"]
  node14805 -> node14806 [ color="black"]
  node14823 -> node14813 [ color="black"]
  node14824 -> node14762 [ color="black"]
  node14775 -> node14776 [ color="black"]
  node14763 -> node14764 [ color="black"]
  node14761 -> node14763 [ color="black"]
  node14821 -> node14822 [ color="black"]
  node14782 -> node14783 [label=<<font color="black">true</font>> color="black"]
  node14782 -> node14787 [label=<<font color="black">false</font>> color="black"]
  node14769 -> node14771 [ color="black"]
  node14766 -> node14767 [ color="black"]
  node14794 -> node14781 [ color="black"]
  node14774 -> node14775 [label=<<font color="black">true</font>> color="black"]
  node14774 -> node14776 [label=<<font color="black">false</font>> color="black"]
  node14786 -> node14787 [ color="black"]
  node14768 -> node14769 [label=<<font color="black">true</font>> color="black"]
  node14768 -> node14770 [label=<<font color="black">false</font>> color="black"]
  node14798 -> node14799 [ color="black"]
  node14810 -> node14811 [ color="black"]
  node14779 -> node14780 [ color="black"]
}
