digraph {
  node4877 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4884 [shape=cds, label=<<font color="black">4:app __x3__ = (EvaluateCall tagFunc tagRef TemplateLiteral tailCall)</font>> color="black" fillcolor="white" style=filled]
  node4878 [shape=cds, label=<<font color="black">0:access __x0__ = (CallExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let tailCall = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4882 [shape=cds, label=<<font color="black">3:app __x2__ = (IsInTailPosition thisCall)</font>> color="black" fillcolor="white" style=filled]
  node4879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let tagRef = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let tagFunc = [? __x1__]</td></tr>
      <tr><td align="left">2:let thisCall = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4876 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4880 [shape=cds, label=<<font color="black">1:app __x1__ = (GetValue tagRef)</font>> color="black" fillcolor="white" style=filled]
  node4885 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4883 -> node4884 [ color="black"]
  node4881 -> node4882 [ color="black"]
  node4876 -> node4878 [ color="black"]
  node4885 -> node4877 [ color="black"]
  node4882 -> node4883 [ color="black"]
  node4879 -> node4880 [ color="black"]
  node4880 -> node4881 [ color="black"]
  node4884 -> node4885 [ color="black"]
  node4878 -> node4879 [ color="black"]
}
