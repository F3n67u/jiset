digraph {
  node16630 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onRejected = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16640 [shape=cds, label=<<font color="black">app __x4__ = (HostPromiseRejectionTracker promise &quot;handle&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16633 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:append fulfillReaction -&gt; promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">10:append rejectReaction -&gt; promise.PromiseRejectReactions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16629 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:promise.PromiseIsHandled = true</td></tr>
      <tr><td align="left">20:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:__x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16634 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;fulfilled&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16632 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;pending&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16631 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let fulfillReaction = (new PromiseReaction(&quot;Capability&quot; -&gt; resultCapability, &quot;Type&quot; -&gt; &quot;Fulfill&quot;, &quot;Handler&quot; -&gt; onFulfilled))</td></tr>
      <tr><td align="left">7:let rejectReaction = (new PromiseReaction(&quot;Capability&quot; -&gt; resultCapability, &quot;Type&quot; -&gt; &quot;Reject&quot;, &quot;Handler&quot; -&gt; onRejected))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let value = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16639 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node16642 [shape=cds, label=<<font color="black">18:app __x5__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [rejectReaction, reason]))</font>> color="black" fillcolor="white" style=filled]
  node16623 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPromise promise)</font>> color="black" fillcolor="white" style=filled]
  node16636 [shape=cds, label=<<font color="black">13:app __x3__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [fulfillReaction, value]))</font>> color="black" fillcolor="white" style=filled]
  node16641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16626 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16625 [shape=cds, label=<<font color="black">2:app __x1__ = (IsCallable onFulfilled)</font>> color="black" fillcolor="white" style=filled]
  node16624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16621 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16638 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:assert (= promise.PromiseState &quot;rejected&quot;)</td></tr>
      <tr><td align="left">16:let reason = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16628 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable onRejected)</font>> color="black" fillcolor="white" style=filled]
  node16627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onFulfilled = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16622 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16626 -> node16627 [label=<<font color="black">true</font>> color="black"]
  node16626 -> node16628 [label=<<font color="black">false</font>> color="black"]
  node16624 -> node16625 [ color="black"]
  node16621 -> node16623 [ color="black"]
  node16625 -> node16626 [ color="black"]
  node16629 -> node16630 [label=<<font color="black">true</font>> color="black"]
  node16629 -> node16631 [label=<<font color="black">false</font>> color="black"]
  node16630 -> node16631 [ color="black"]
  node16634 -> node16635 [label=<<font color="black">true</font>> color="black"]
  node16634 -> node16638 [label=<<font color="black">false</font>> color="black"]
  node16623 -> node16624 [ color="black"]
  node16633 -> node16644 [ color="black"]
  node16636 -> node16637 [ color="black"]
  node16635 -> node16636 [ color="black"]
  node16643 -> node16644 [ color="black"]
  node16627 -> node16628 [ color="black"]
  node16639 -> node16640 [label=<<font color="black">true</font>> color="black"]
  node16639 -> node16642 [label=<<font color="black">false</font>> color="black"]
  node16640 -> node16641 [ color="black"]
  node16642 -> node16643 [ color="black"]
  node16637 -> node16644 [ color="black"]
  node16644 -> node16622 [ color="black"]
  node16632 -> node16633 [label=<<font color="black">true</font>> color="black"]
  node16632 -> node16634 [label=<<font color="black">false</font>> color="black"]
  node16628 -> node16629 [ color="black"]
  node16631 -> node16632 [ color="black"]
  node16641 -> node16642 [ color="black"]
  node16638 -> node16639 [ color="black"]
}
