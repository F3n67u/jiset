digraph {
  node14996 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node15002 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node14993 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15001 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let entries = S.SetData</td></tr>
      <tr><td align="left">4:let __x1__ = entries</td></tr>
      <tr><td align="left">4:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14997 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node14994 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15004 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14998 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14999 [shape=diamond, label=<<font color="black">(= S.SetData absent)</font>> color="black" fillcolor="white" style=filled]
  node15003 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x1__[__x2__]</td></tr>
      <tr><td align="left">5:??? &quot;Replace the element of id:{entries} whose value is id:{e} with an element whose value is const:{empty} .&quot;</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15000 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14995 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let S = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14993 -> node14995 [ color="black"]
  node14995 -> node14996 [ color="black"]
  node14997 -> node14998 [label=<<font color="black">true</font>> color="black"]
  node14997 -> node14999 [label=<<font color="black">false</font>> color="black"]
  node15002 -> node15003 [label=<<font color="black">true</font>> color="black"]
  node15002 -> node15004 [label=<<font color="black">false</font>> color="black"]
  node15004 -> node14994 [ color="black"]
  node15003 -> node15002 [ color="black"]
  node14999 -> node15000 [label=<<font color="black">true</font>> color="black"]
  node14999 -> node15001 [label=<<font color="black">false</font>> color="black"]
  node14998 -> node14999 [ color="black"]
  node14996 -> node14997 [ color="black"]
  node15000 -> node15001 [ color="black"]
  node15001 -> node15002 [ color="black"]
}
