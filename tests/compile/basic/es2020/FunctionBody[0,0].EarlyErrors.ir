{
  access __x0__ = (FunctionStatementList "LexicallyDeclaredNames")
  app __x1__ = (IsDuplicate __x0__)
  if __x1__ throw INTRINSIC_SyntaxError else return undefined
  access __x2__ = (FunctionStatementList "LexicallyDeclaredNames")
  access __x3__ = (FunctionStatementList "VarDeclaredNames")
  let __x4__ = __x2__
  let __x5__ = __x3__
  let __x6__ = 0i
  let __x7__ = 0i
  let __x8__ = false
  while (< __x6__ __x4__.length) {
    __x7__ = 0i
    while (< __x7__ __x5__.length) if (= __x4__[__x6__] __x5__[__x7__]) __x8__ = true else {}
  }
  if __x8__ throw INTRINSIC_SyntaxError else return undefined
  access __x9__ = (FunctionStatementList "ContainsDuplicateLabels")
  app __x10__ = (__x9__ (new []))
  if (= __x10__ true) throw INTRINSIC_SyntaxError else return undefined
  access __x11__ = (FunctionStatementList "ContainsUndefinedBreakTarget")
  app __x12__ = (__x11__ (new []))
  if (= __x12__ true) throw INTRINSIC_SyntaxError else return undefined
  access __x13__ = (FunctionStatementList "ContainsUndefinedContinueTarget")
  app __x14__ = (__x13__ (new []) (new []))
  if (= __x14__ true) throw INTRINSIC_SyntaxError else return undefined
}