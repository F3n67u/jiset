{
  access __x0__ = (AssignmentExpression "Evaluation")
  let exprRef = __x0__
  app __x1__ = (GetValue exprRef)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let value = __x1__
  app __x2__ = (GetIterator value)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let iterator = __x2__
  app __x3__ = (NormalCompletion undefined)
  let received = __x3__
  while true if (= received.Type CONST_normal) {
    app __x4__ = (IteratorNext iterator received.Value)
    if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
    let innerResult = __x4__
    app __x5__ = (IteratorComplete innerResult)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
    let done = __x5__
    if (= done true) {
      app __x6__ = (IteratorValue innerResult)
      if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
      app __x7__ = (WrapCompletion __x6__)
      return __x7__
    } else {}
    app __x8__ = (GeneratorYield innerResult)
    received = __x8__
  } else if (= received.Type CONST_throw) {
    app __x9__ = (GetMethod iterator "throw")
    if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
    let throw = __x9__
    if (! (= throw undefined)) {
      app __x10__ = (Call throw iterator (new [received.Value]))
      if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
      let innerResult = __x10__
      app __x11__ = (Type innerResult)
      if (! (= __x11__ Object)) throw INTRINSIC_TypeError else {}
      app __x12__ = (IteratorComplete innerResult)
      if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else {}
      let done = __x12__
      if (= done true) {
        app __x13__ = (IteratorValue innerResult)
        if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else {}
        app __x14__ = (WrapCompletion __x13__)
        return __x14__
      } else {}
      app __x15__ = (GeneratorYield innerResult)
      received = __x15__
    } else {
      app __x16__ = (IteratorClose iterator (new Completion("Type" -> CONST_normal, "Value" -> CONST_empty, "Target" -> CONST_empty)))
      if (is-completion __x16__) if (= __x16__.Type CONST_normal) __x16__ = __x16__.Value else return __x16__ else {}
      __x16__
      throw INTRINSIC_TypeError
    }
  } else {
    assert (= received.Type CONST_return)
    app __x17__ = (GetMethod iterator "return")
    if (is-completion __x17__) if (= __x17__.Type CONST_normal) __x17__ = __x17__.Value else return __x17__ else {}
    let return = __x17__
    if (= return undefined) {
      app __x18__ = (Completion received)
      app __x19__ = (WrapCompletion __x18__)
      return __x19__
    } else {}
    app __x20__ = (Call return iterator (new [received.Value]))
    if (is-completion __x20__) if (= __x20__.Type CONST_normal) __x20__ = __x20__.Value else return __x20__ else {}
    let innerReturnResult = __x20__
    app __x21__ = (Type innerReturnResult)
    if (! (= __x21__ Object)) throw INTRINSIC_TypeError else {}
    app __x22__ = (IteratorComplete innerReturnResult)
    if (is-completion __x22__) if (= __x22__.Type CONST_normal) __x22__ = __x22__.Value else return __x22__ else {}
    let done = __x22__
    if (= done true) {
      app __x23__ = (IteratorValue innerReturnResult)
      if (is-completion __x23__) if (= __x23__.Type CONST_normal) __x23__ = __x23__.Value else return __x23__ else {}
      let value = __x23__
      app __x24__ = (WrapCompletion (new Completion("Type" -> CONST_return, "Value" -> value, "Target" -> CONST_empty)))
      return __x24__
    } else {}
    app __x25__ = (GeneratorYield innerReturnResult)
    received = __x25__
  }
}