{
  access __x0__ = (PropertyName "Evaluation")
  let propKey = __x0__
  [? propKey]
  let scope = CONTEXT.LexicalEnvironment
  let sourceText = (get-syntax GeneratorMethod)
  app __x1__ = (OrdinaryFunctionCreate INTRINSIC_GeneratorFunction_prototype sourceText UniqueFormalParameters GeneratorBody CONST_nonDASHlexicalDASHthis scope)
  let closure = __x1__
  app __x2__ = (MakeMethod closure object)
  __x2__
  app __x3__ = (SetFunctionName closure propKey)
  __x3__
  app __x4__ = (OrdinaryObjectCreate INTRINSIC_GeneratorFunction_prototype_prototype)
  let prototype = [! __x4__]
  app __x5__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  __x5__
  let desc = (new PropertyDescriptor("Value" -> closure, "Writable" -> true, "Enumerable" -> enumerable, "Configurable" -> true))
  app __x6__ = (DefinePropertyOrThrow object propKey desc)
  return [? __x6__]
}