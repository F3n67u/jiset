digraph {
  node8695 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8699 [shape=cds, label=<<font color="black">access __x1__ = (Catch &quot;CatchClauseEvaluation&quot; B.Value)</font>> color="black" fillcolor="white" style=filled]
  node8703 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8700 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8694 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8697 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let B = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8701 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = B</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8696 [shape=cds, label=<<font color="black">0:access __x0__ = (Block &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8698 [shape=diamond, label=<<font color="black">(= B.Type CONST_throw)</font>> color="black" fillcolor="white" style=filled]
  node8702 [shape=cds, label=<<font color="black">3:app __x2__ = (UpdateEmpty C undefined)</font>> color="black" fillcolor="white" style=filled]
  node8698 -> node8699 [label=<<font color="black">true</font>> color="black"]
  node8698 -> node8701 [label=<<font color="black">false</font>> color="black"]
  node8697 -> node8698 [ color="black"]
  node8696 -> node8697 [ color="black"]
  node8699 -> node8700 [ color="black"]
  node8694 -> node8696 [ color="black"]
  node8702 -> node8703 [ color="black"]
  node8703 -> node8695 [ color="black"]
  node8701 -> node8702 [ color="black"]
  node8700 -> node8702 [ color="black"]
}
