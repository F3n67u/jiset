digraph {
  node16576 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let numberValue = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16584 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16569 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16580 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node16567 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node16574 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16579 [shape=cds, label=<<font color="black">7:app __x4__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16582 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">9:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16575 [shape=cds, label=<<font color="black">4:app __x2__ = (ToNumber value)</font>> color="black" fillcolor="white" style=filled]
  node16586 [shape=cds, label=<<font color="black">13:app __x5__ = (SetValueInBuffer buffer bufferIndex type numberValue false &quot;Unordered&quot; isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16571 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16578 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:isLittleEndian = __x3__</td></tr>
      <tr><td align="left">6:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16566 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16581 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16572 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16587 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16577 [shape=cds, label=<<font color="black">5:app __x3__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16565 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16568 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16583 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node16573 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node16570 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node16585 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16569 -> node16570 [ color="black"]
  node16580 -> node16581 [label=<<font color="black">true</font>> color="black"]
  node16580 -> node16582 [label=<<font color="black">false</font>> color="black"]
  node16578 -> node16579 [ color="black"]
  node16586 -> node16587 [ color="black"]
  node16585 -> node16586 [ color="black"]
  node16574 -> node16575 [ color="black"]
  node16565 -> node16567 [ color="black"]
  node16581 -> node16582 [ color="black"]
  node16575 -> node16576 [ color="black"]
  node16582 -> node16583 [ color="black"]
  node16570 -> node16571 [label=<<font color="black">true</font>> color="black"]
  node16570 -> node16572 [label=<<font color="black">false</font>> color="black"]
  node16584 -> node16585 [ color="black"]
  node16568 -> node16569 [label=<<font color="black">true</font>> color="black"]
  node16568 -> node16570 [label=<<font color="black">false</font>> color="black"]
  node16572 -> node16573 [ color="black"]
  node16571 -> node16572 [ color="black"]
  node16573 -> node16574 [ color="black"]
  node16587 -> node16566 [ color="black"]
  node16576 -> node16577 [ color="black"]
  node16579 -> node16580 [ color="black"]
  node16577 -> node16578 [ color="black"]
  node16567 -> node16568 [ color="black"]
  node16583 -> node16584 [label=<<font color="black">true</font>> color="black"]
  node16583 -> node16585 [label=<<font color="black">false</font>> color="black"]
}
