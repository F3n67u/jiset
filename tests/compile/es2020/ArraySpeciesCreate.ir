{
  [0] app __x0__ = (IsNonNegativeInteger length)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [5] {}
  [0] assert (= __x0__ true)
  [1] if (= length -0.0) length = 0i else [5] {}
  [2] app __x1__ = (IsArray originalArray)
  [2] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [5] {}
  [2] let isArray = __x1__
  [3] if (= isArray false) {
    app __x2__ = (ArrayCreate length)
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [5] {}
    app __x3__ = (WrapCompletion __x2__)
    return __x3__
  } else [5] {}
  [4] app __x4__ = (Get originalArray "constructor")
  [4] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [5] {}
  [4] let C = __x4__
  [5] app __x5__ = (IsConstructor C)
  [5] if (= __x5__ true) {
    [6] let thisRealm = REALM
    [7] app __x6__ = (GetFunctionRealm C)
    [7] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [5] {}
    [7] let realmC = __x6__
    [8] if (! (= thisRealm realmC)) {
      [9] app __x7__ = (SameValue C realmC.Intrinsics.INTRINSIC_Array)
      [9] if (= __x7__ true) C = undefined else [5] {}
    } else [5] {}
  } else [5] {}
  [10] app __x8__ = (Type C)
  [10] if (= __x8__ Object) {
    [11] app __x9__ = (Get C SYMBOL_species)
    [11] if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else [5] {}
    [11] C = __x9__
    [12] if (= C null) C = undefined else [5] {}
  } else [5] {}
  [13] if (= C undefined) {
    app __x10__ = (ArrayCreate length)
    if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else [5] {}
    app __x11__ = (WrapCompletion __x10__)
    return __x11__
  } else [5] {}
  [14] app __x12__ = (IsConstructor C)
  [14] if (= __x12__ false) {
    app __x13__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x13__
  } else [5] {}
  [15] app __x14__ = (Construct C (new [length]))
  [15] if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else [5] {}
  [15] app __x15__ = (WrapCompletion __x14__)
  [15] return __x15__
}