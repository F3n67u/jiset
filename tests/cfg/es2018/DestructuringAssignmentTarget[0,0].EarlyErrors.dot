digraph {
  node18384 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18368 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18379 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node18371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x1__ = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18376 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18378 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let __x2__ = true</td></tr>
      <tr><td align="left">1:__x2__ = (! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x1__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18377 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18381 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (= __x3__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18369 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = true</td></tr>
      <tr><td align="left">0:__x0__ = (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18374 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18380 [shape=cds, label=<<font color="black">app __x3__ = (IsValidSimpleAssignmentTarget LeftHandSideExpression)</font>> color="black" fillcolor="white" style=filled]
  node18375 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18370 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18383 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18372 [shape=diamond, label=<<font color="black">(= absent (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new [])))</font>> color="black" fillcolor="white" style=filled]
  node18382 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node18367 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18376 -> node18378 [ color="black"]
  node18374 -> node18375 [ color="black"]
  node18370 -> node18371 [label=<<font color="black">true</font>> color="black"]
  node18370 -> node18375 [label=<<font color="black">false</font>> color="black"]
  node18367 -> node18369 [ color="black"]
  node18375 -> node18376 [label=<<font color="black">true</font>> color="black"]
  node18375 -> node18377 [label=<<font color="black">false</font>> color="black"]
  node18381 -> node18382 [ color="black"]
  node18383 -> node18368 [ color="black"]
  node18379 -> node18380 [label=<<font color="black">true</font>> color="black"]
  node18379 -> node18382 [label=<<font color="black">false</font>> color="black"]
  node18377 -> node18378 [ color="black"]
  node18378 -> node18379 [ color="black"]
  node18382 -> node18383 [label=<<font color="black">true</font>> color="black"]
  node18382 -> node18384 [label=<<font color="black">false</font>> color="black"]
  node18369 -> node18370 [ color="black"]
  node18380 -> node18381 [ color="black"]
  node18384 -> node18368 [ color="black"]
  node18371 -> node18372 [ color="black"]
  node18373 -> node18374 [ color="black"]
  node18372 -> node18373 [label=<<font color="black">true</font>> color="black"]
  node18372 -> node18374 [label=<<font color="black">false</font>> color="black"]
}
