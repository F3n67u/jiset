digraph {
  node14655 [shape=diamond, label=<<font color="black">(= set.SetData absent)</font>> color="black" fillcolor="white" style=filled]
  node14657 [shape=cds, label=<<font color="black">2:app __x1__ = (ObjectCreate INTRINSIC_SetIteratorPrototype (new [&quot;IteratedSet&quot;, &quot;SetNextIndex&quot;, &quot;SetIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node14658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = __x1__</td></tr>
      <tr><td align="left">3:iterator.IteratedSet = set</td></tr>
      <tr><td align="left">4:iterator.SetNextIndex = 0i</td></tr>
      <tr><td align="left">5:iterator.SetIterationKind = kind</td></tr>
      <tr><td align="left">6:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14652 [shape=cds, label=<<font color="black">0:app __x0__ = (Type set)</font>> color="black" fillcolor="white" style=filled]
  node14656 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14650 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14653 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node14651 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14654 -> node14655 [ color="black"]
  node14652 -> node14653 [ color="black"]
  node14653 -> node14654 [label=<<font color="black">true</font>> color="black"]
  node14653 -> node14655 [label=<<font color="black">false</font>> color="black"]
  node14655 -> node14656 [label=<<font color="black">true</font>> color="black"]
  node14655 -> node14657 [label=<<font color="black">false</font>> color="black"]
  node14656 -> node14657 [ color="black"]
  node14650 -> node14652 [ color="black"]
  node14658 -> node14651 [ color="black"]
  node14657 -> node14658 [ color="black"]
}
