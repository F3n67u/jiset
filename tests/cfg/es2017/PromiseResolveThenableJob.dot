digraph {
  node16481 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node16480 [shape=cds, label=<<font color="black">2:app __x2__ = (IsAbruptCompletion thenCallResult)</font>> color="black" fillcolor="white" style=filled]
  node16476 [shape=cds, label=<<font color="black">0:app __x0__ = (CreateResolvingFunctions promiseToResolve)</font>> color="black" fillcolor="white" style=filled]
  node16484 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return thenCallResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16472 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16473 [shape=cds, label=<<font color="black">app promiseToResolve = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16471 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16474 [shape=cds, label=<<font color="black">app thenable = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16478 [shape=cds, label=<<font color="black">1:app __x1__ = (Call then thenable (new [resolvingFunctions.Resolve, resolvingFunctions.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node16475 [shape=cds, label=<<font color="black">app then = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16482 [shape=cds, label=<<font color="black">3:app __x3__ = (Call resolvingFunctions.Reject undefined (new [thenCallResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16479 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let thenCallResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16483 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let status = __x3__</td></tr>
      <tr><td align="left">4:return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16477 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let resolvingFunctions = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16479 -> node16480 [ color="black"]
  node16473 -> node16474 [ color="black"]
  node16478 -> node16479 [ color="black"]
  node16477 -> node16478 [ color="black"]
  node16476 -> node16477 [ color="black"]
  node16480 -> node16481 [ color="black"]
  node16484 -> node16472 [ color="black"]
  node16483 -> node16484 [ color="black"]
  node16482 -> node16483 [ color="black"]
  node16475 -> node16476 [ color="black"]
  node16471 -> node16473 [ color="black"]
  node16474 -> node16475 [ color="black"]
  node16481 -> node16482 [label=<<font color="black">true</font>> color="black"]
  node16481 -> node16484 [label=<<font color="black">false</font>> color="black"]
}
