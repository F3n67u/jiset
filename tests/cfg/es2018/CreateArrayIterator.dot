digraph {
  node15435 [shape=cds, label=<<font color="black">app kind = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15433 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15438 [shape=cds, label=<<font color="black">1:app __x1__ = (ObjectCreate INTRINSIC_ArrayIteratorPrototype (new [&quot;IteratedObject&quot;, &quot;ArrayIteratorNextIndex&quot;, &quot;ArrayIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15432 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15434 [shape=cds, label=<<font color="black">app array = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15439 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let iterator = __x1__</td></tr>
      <tr><td align="left">2:iterator.IteratedObject = array</td></tr>
      <tr><td align="left">3:iterator.ArrayIteratorNextIndex = 0i</td></tr>
      <tr><td align="left">4:iterator.ArrayIterationKind = kind</td></tr>
      <tr><td align="left">5:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15436 [shape=cds, label=<<font color="black">0:app __x0__ = (Type array)</font>> color="black" fillcolor="white" style=filled]
  node15437 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15432 -> node15434 [ color="black"]
  node15438 -> node15439 [ color="black"]
  node15435 -> node15436 [ color="black"]
  node15434 -> node15435 [ color="black"]
  node15437 -> node15438 [ color="black"]
  node15436 -> node15437 [ color="black"]
  node15439 -> node15433 [ color="black"]
}
