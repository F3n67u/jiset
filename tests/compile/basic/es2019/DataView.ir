{
  if (= NewTarget undefined) throw TypeError else {}
  if (! (= (typeof buffer) Object)) throw TypeError else {}
  if (= buffer.ArrayBufferData absent) throw TypeError else {}
  app __x0__ = (ToIndex byteOffset)
  let offset = [? __x0__]
  app __x1__ = (IsDetachedBuffer buffer)
  if (= __x1__ true) throw TypeError else {}
  let bufferByteLength = buffer.ArrayBufferByteLength
  if (< bufferByteLength offset) throw RangeError else {}
  if (|| (= byteLength absent) (= byteLength undefined)) let viewByteLength = (- bufferByteLength offset) else {
    app __x2__ = (ToIndex byteLength)
    let viewByteLength = [? __x2__]
    if (< bufferByteLength (+ offset viewByteLength)) throw RangeError else {}
  }
  app __x3__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_DataViewPrototype (new ["DataView", "ViewedArrayBuffer", "ByteLength", "ByteOffset"]))
  let O = [? __x3__]
  app __x4__ = (IsDetachedBuffer buffer)
  if (= __x4__ true) throw TypeError else {}
  O.ViewedArrayBuffer = buffer
  O.ByteLength = viewByteLength
  O.ByteOffset = offset
  return O
}