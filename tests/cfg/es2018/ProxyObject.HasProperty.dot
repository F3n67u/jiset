digraph {
  node3053 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3040 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3036 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;has&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3032 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3042 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node3051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let extensibleTarget = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3038 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3034 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3041 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P]))</font>> color="black" fillcolor="white" style=filled]
  node3039 [shape=cds, label=<<font color="black">7:app __x3__ = (target.HasProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3049 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3044 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node3029 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let targetDesc = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3043 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return booleanTrapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3037 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3033 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3028 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3050 [shape=cds, label=<<font color="black">13:app __x7__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node3031 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3048 [shape=diamond, label=<<font color="black">(= targetDesc.Configurable false)</font>> color="black" fillcolor="white" style=filled]
  node3030 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node3045 [shape=cds, label=<<font color="black">10:app __x6__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3052 [shape=diamond, label=<<font color="black">(= extensibleTarget false)</font>> color="black" fillcolor="white" style=filled]
  node3047 [shape=diamond, label=<<font color="black">(! (= targetDesc undefined))</font>> color="black" fillcolor="white" style=filled]
  node3035 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3041 -> node3042 [ color="black"]
  node3040 -> node3041 [ color="black"]
  node3054 -> node3029 [ color="black"]
  node3048 -> node3049 [label=<<font color="black">true</font>> color="black"]
  node3048 -> node3050 [label=<<font color="black">false</font>> color="black"]
  node3032 -> node3033 [label=<<font color="black">true</font>> color="black"]
  node3032 -> node3034 [label=<<font color="black">false</font>> color="black"]
  node3044 -> node3045 [label=<<font color="black">true</font>> color="black"]
  node3044 -> node3054 [label=<<font color="black">false</font>> color="black"]
  node3047 -> node3048 [label=<<font color="black">true</font>> color="black"]
  node3047 -> node3054 [label=<<font color="black">false</font>> color="black"]
  node3035 -> node3036 [ color="black"]
  node3053 -> node3054 [ color="black"]
  node3031 -> node3032 [ color="black"]
  node3039 -> node3040 [ color="black"]
  node3050 -> node3051 [ color="black"]
  node3036 -> node3037 [ color="black"]
  node3045 -> node3046 [ color="black"]
  node3034 -> node3035 [ color="black"]
  node3043 -> node3044 [ color="black"]
  node3051 -> node3052 [ color="black"]
  node3038 -> node3039 [label=<<font color="black">true</font>> color="black"]
  node3038 -> node3041 [label=<<font color="black">false</font>> color="black"]
  node3046 -> node3047 [ color="black"]
  node3030 -> node3031 [ color="black"]
  node3052 -> node3053 [label=<<font color="black">true</font>> color="black"]
  node3052 -> node3054 [label=<<font color="black">false</font>> color="black"]
  node3042 -> node3043 [ color="black"]
  node3033 -> node3034 [ color="black"]
  node3028 -> node3030 [ color="black"]
  node3037 -> node3038 [ color="black"]
  node3049 -> node3050 [ color="black"]
}
