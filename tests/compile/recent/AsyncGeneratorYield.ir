{
  [0] let genContext = GLOBAL_context
  [2] let generator = genContext.Generator
  [3] app __x0__ = (GetGeneratorKind )
  [3] assert (= __x0__ CONST_async)
  [4] app __x1__ = (Await value)
  [4] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [15] {}
  [4] value = __x1__
  [5] generator.AsyncGeneratorState = CONST_suspendedYield
  [6] if (= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] genContext) {
    let __x2__ = (- GLOBAL_executionStack.length 1i)
    (pop GLOBAL_executionStack __x2__)
  } else {}
  [6] GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]
  [7] ??? "Set the code evaluation state of id:{genContext} such that when evaluation is resumed with a Completion id:{resumptionValue} the following steps will be performed : step-list:{...}"
  [14] app __x3__ = (AsyncGeneratorResolve generator value false)
  [14] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [15] {}
  [14] app __x4__ = (WrapCompletion __x3__)
  [14] return __x4__
}