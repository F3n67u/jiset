{
  app __x0__ = (IsPropertyKey P)
  assert (= __x0__ true)
  if (= P "length") {
    app __x1__ = (ArraySetLength A Desc)
    return [? __x1__]
  } else {
    app __x2__ = (IsArrayIndex P)
    if __x2__ {
      app __x3__ = (OrdinaryGetOwnProperty A "length")
      let oldLenDesc = __x3__
      let oldLen = oldLenDesc.Value
      app __x4__ = (ToUint32 P)
      let index = [! __x4__]
      if (&& (! (< index oldLen)) (= oldLenDesc.Writable false)) return false else {}
      app __x5__ = (OrdinaryDefineOwnProperty A P Desc)
      let succeeded = [! __x5__]
      if (= succeeded false) return false else {}
      if (! (< index oldLen)) {
        oldLenDesc.Value = (+ index 1i)
        app __x6__ = (OrdinaryDefineOwnProperty A "length" oldLenDesc)
        let succeeded = __x6__
        assert (= succeeded true)
      } else {}
      return true
    } else {}
  }
  app __x7__ = (OrdinaryDefineOwnProperty A P Desc)
  return __x7__
}