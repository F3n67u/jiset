["Let", {
  "id": "O"
}, "be", "the", {
  "value": "this"
}, "value", ".", {
  "k": 0
}, "If", "Type", "(", {
  "id": "O"
}, ")", "is", "not", "Object", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 1
}, "If", {
  "id": "O"
}, "does", "not", "have", "all", "of", "the", "internal", "slots", "of", "a", "Map", "Iterator", "Instance", "(", "23", ".", "1", ".", "5", ".", "3", ")", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 2
}, "Let", {
  "id": "m"
}, "be", {
  "id": "O"
}, ".", "[", "[", "IteratedMap", "]", "]", ".", {
  "k": 3
}, "Let", {
  "id": "index"
}, "be", {
  "id": "O"
}, ".", "[", "[", "MapNextIndex", "]", "]", ".", {
  "k": 4
}, "Let", {
  "id": "itemKind"
}, "be", {
  "id": "O"
}, ".", "[", "[", "MapIterationKind", "]", "]", ".", {
  "k": 5
}, "If", {
  "id": "m"
}, "is", {
  "value": "undefined"
}, ",", "return", "CreateIterResultObject", "(", {
  "value": "undefined"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 6
}, "Assert", ":", {
  "id": "m"
}, "has", "a", "[", "[", "MapData", "]", "]", "internal", "slot", ".", {
  "k": 7
}, "Let", {
  "id": "entries"
}, "be", "the", "List", "that", "is", {
  "id": "m"
}, ".", "[", "[", "MapData", "]", "]", ".", {
  "k": 8
}, "Let", {
  "id": "numEntries"
}, "be", "the", "number", "of", "elements", "of", {
  "id": "entries"
}, ".", {
  "k": 9
}, "NOTE", ":", {
  "id": "numEntries"
}, "must", "be", "redetermined", "each", "time", "this", "method", "is", "evaluated", ".", {
  "k": 10
}, "Repeat", ",", "while", {
  "id": "index"
}, "is", "less", "than", {
  "id": "numEntries"
}, ",", {
  "in": null
}, "Let", {
  "id": "e"
}, "be", "the", "Record", "{", "[", "[", "Key", "]", "]", ",", "[", "[", "Value", "]", "]", "}", "that", "is", "the", "value", "of", {
  "id": "entries"
}, "[", {
  "id": "index"
}, "]", ".", {
  "k": 12
}, "Set", {
  "id": "index"
}, "to", {
  "id": "index"
}, "+", "1", ".", {
  "k": 13
}, "Set", {
  "id": "O"
}, ".", "[", "[", "MapNextIndex", "]", "]", "to", {
  "id": "index"
}, ".", {
  "k": 14
}, "If", {
  "id": "e"
}, ".", "[", "[", "Key", "]", "]", "is", "not", {
  "const": "empty"
}, ",", "then", {
  "in": null
}, "If", {
  "id": "itemKind"
}, "is", {
  "const": "key"
}, ",", "let", {
  "id": "result"
}, "be", {
  "id": "e"
}, ".", "[", "[", "Key", "]", "]", ".", {
  "k": 16
}, "Else", "if", {
  "id": "itemKind"
}, "is", {
  "const": "value"
}, ",", "let", {
  "id": "result"
}, "be", {
  "id": "e"
}, ".", "[", "[", "Value", "]", "]", ".", {
  "k": 17
}, "Else", ",", {
  "in": null
}, "Assert", ":", {
  "id": "itemKind"
}, "is", {
  "const": "key+value"
}, ".", {
  "k": 19
}, "Let", {
  "id": "result"
}, "be", "!", "CreateArrayFromList", "(", "«", {
  "id": "e"
}, ".", "[", "[", "Key", "]", "]", ",", {
  "id": "e"
}, ".", "[", "[", "Value", "]", "]", "»", ")", ".", {
  "k": 20
}, {
  "out": null
}, {
  "k": 18
}, "Return", "CreateIterResultObject", "(", {
  "id": "result"
}, ",", {
  "value": "false"
}, ")", ".", {
  "k": 21
}, {
  "out": null
}, {
  "k": 15
}, {
  "out": null
}, {
  "k": 11
}, "Set", {
  "id": "O"
}, ".", "[", "[", "IteratedMap", "]", "]", "to", {
  "value": "undefined"
}, ".", {
  "k": 22
}, "Return", "CreateIterResultObject", "(", {
  "value": "undefined"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 23
}]
