digraph {
  node14245 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let nextValue = [? __x3__]</td></tr>
      <tr><td align="left">9:append nextValue -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14238 [shape=cds, label=<<font color="black">2:app __x1__ = (GetIterator items usingIterator)</font>> color="black" fillcolor="white" style=filled]
  node14248 [shape=cds, label=<<font color="black">12:app __x5__ = (ToObject items)</font>> color="black" fillcolor="white" style=filled]
  node14244 [shape=cds, label=<<font color="black">8:app __x3__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node14239 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = [? __x1__]</td></tr>
      <tr><td align="left">3:let values = (new [])</td></tr>
      <tr><td align="left">4:let next = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14249 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14247 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14240 [shape=diamond, label=<<font color="black">(! (= next false))</font>> color="black" fillcolor="white" style=filled]
  node14242 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14235 [shape=cds, label=<<font color="black">0:app __x0__ = (GetMethod items SYMBOL_iterator)</font>> color="black" fillcolor="white" style=filled]
  node14241 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iterator)</font>> color="black" fillcolor="white" style=filled]
  node14243 [shape=diamond, label=<<font color="black">(! (= next false))</font>> color="black" fillcolor="white" style=filled]
  node14233 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14246 [shape=cds, label=<<font color="black">10:app __x4__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node14234 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14237 [shape=diamond, label=<<font color="black">(! (= usingIterator undefined))</font>> color="black" fillcolor="white" style=filled]
  node14236 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let usingIterator = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14244 -> node14245 [ color="black"]
  node14239 -> node14240 [ color="black"]
  node14243 -> node14244 [label=<<font color="black">true</font>> color="black"]
  node14243 -> node14240 [label=<<font color="black">false</font>> color="black"]
  node14237 -> node14238 [label=<<font color="black">true</font>> color="black"]
  node14237 -> node14248 [label=<<font color="black">false</font>> color="black"]
  node14249 -> node14234 [ color="black"]
  node14248 -> node14249 [ color="black"]
  node14242 -> node14243 [ color="black"]
  node14247 -> node14248 [ color="black"]
  node14238 -> node14239 [ color="black"]
  node14241 -> node14242 [ color="black"]
  node14245 -> node14240 [ color="black"]
  node14240 -> node14241 [label=<<font color="black">true</font>> color="black"]
  node14240 -> node14246 [label=<<font color="black">false</font>> color="black"]
  node14246 -> node14247 [ color="black"]
  node14235 -> node14236 [ color="black"]
  node14233 -> node14235 [ color="black"]
  node14236 -> node14237 [ color="black"]
}
