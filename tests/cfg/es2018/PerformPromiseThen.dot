digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let fulfillReaction = (new PromiseReaction(&quot;Capability&quot; -&gt; resultCapability, &quot;Type&quot; -&gt; &quot;Fulfill&quot;, &quot;Handler&quot; -&gt; onFulfilled))</td></tr>
      <tr><td align="left">7:let rejectReaction = (new PromiseReaction(&quot;Capability&quot; -&gt; resultCapability, &quot;Type&quot; -&gt; &quot;Reject&quot;, &quot;Handler&quot; -&gt; onRejected))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let value = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onFulfilled = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=cds, label=<<font color="black">18:app __x5__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [rejectReaction, reason]))</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onRejected = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;fulfilled&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPromise promise)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:assert (= promise.PromiseState &quot;rejected&quot;)</td></tr>
      <tr><td align="left">16:let reason = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:append fulfillReaction -&gt; promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">10:append rejectReaction -&gt; promise.PromiseRejectReactions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable onRejected)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:assert (= (typeof resultCapability) &quot;PromiseCapabilityRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:__x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;pending&quot;)</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:promise.PromiseIsHandled = true</td></tr>
      <tr><td align="left">20:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=cds, label=<<font color="black">app __x4__ = (HostPromiseRejectionTracker promise &quot;handle&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">2:app __x1__ = (IsCallable onFulfilled)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">13:app __x3__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [fulfillReaction, value]))</font>> color="black" fillcolor="white" style=filled]
  node3 -> node4 [ color="black"]
  node7 -> node8 [ color="black"]
  node11 -> node12 [label=<<font color="black">true</font>> color="black"]
  node11 -> node13 [label=<<font color="black">false</font>> color="black"]
  node12 -> node23 [ color="black"]
  node19 -> node20 [ color="black"]
  node0 -> node2 [ color="black"]
  node9 -> node10 [ color="black"]
  node14 -> node15 [ color="black"]
  node13 -> node14 [label=<<font color="black">true</font>> color="black"]
  node13 -> node17 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [ color="black"]
  node23 -> node1 [ color="black"]
  node8 -> node9 [label=<<font color="black">true</font>> color="black"]
  node8 -> node10 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node16 -> node23 [ color="black"]
  node21 -> node22 [ color="black"]
  node20 -> node21 [ color="black"]
  node5 -> node6 [label=<<font color="black">true</font>> color="black"]
  node5 -> node7 [label=<<font color="black">false</font>> color="black"]
  node18 -> node19 [label=<<font color="black">true</font>> color="black"]
  node18 -> node21 [label=<<font color="black">false</font>> color="black"]
  node17 -> node18 [ color="black"]
}
