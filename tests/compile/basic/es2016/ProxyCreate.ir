{
  app __x0__ = (Type target)
  if (! (= __x0__ Object)) throw INTRINSIC_TypeError else {}
  if (&& (= (typeof target) "ProxyExoticObject") (= target.ProxyHandler null)) throw INTRINSIC_TypeError else {}
  app __x1__ = (Type handler)
  if (! (= __x1__ Object)) throw INTRINSIC_TypeError else {}
  if (&& (= (typeof handler) "ProxyExoticObject") (= handler.ProxyHandler null)) throw INTRINSIC_TypeError else {}
  let P = (new OrdinaryObject("SubMap" -> (new SubMap())))
  app __x2__ = (IsCallable target)
  if (= __x2__ true) {
    P.Call = ProxyObjectDOTCall
    if (! (= target.Construct absent)) P.Construct = ProxyObjectDOTConstruct else {}
  } else {}
  P.ProxyTarget = target
  P.ProxyHandler = handler
  return P
}