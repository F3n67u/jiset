{
  app searchElement = (GetArgument argumentsList 0i)
  app fromIndex = (GetArgument argumentsList 1i)
  [0] app __x0__ = (ToObject this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [4] {}
  [0] let O = __x0__
  [1] app __x1__ = (LengthOfArrayLike O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [4] {}
  [1] let len = __x1__
  [2] if (= len 0i) {
    app __x2__ = (WrapCompletion -1i)
    return __x2__
  } else [4] {}
  [3] if (! (= fromIndex absent)) {
    app __x3__ = (ToIntegerOrInfinity fromIndex)
    if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [4] {}
    let n = __x3__
  } else let n = (- len 1i)
  [4] ??? "If id:{n} is - ∞ , return value:{-1} ."
  [7] if (! (< n 0i)) {
    [6] app __x4__ = (min n (- len 1i))
    [6] let k = __x4__
  } else let k = (+ len n)
  [9] while (! (< k 0i)) {
    [10] ??? "Let id:{kPresent} be ? HasProperty ( id:{O} , ! ToString ( 𝔽 ( id:{k} ) ) ) ."
    [11] if (= kPresent true) {
      [12] ??? "Let id:{elementK} be ? Get ( id:{O} , ! ToString ( 𝔽 ( id:{k} ) ) ) ."
      [13] app __x5__ = (StrictEqualityComparison searchElement elementK)
      [13] let same = __x5__
      [14] ??? "If id:{same} is value:{true} , return 𝔽 ( id:{k} ) ."
    } else [4] {}
    [15] k = (- k 1i)
  }
  [16] app __x6__ = (WrapCompletion -1i)
  [16] return __x6__
}