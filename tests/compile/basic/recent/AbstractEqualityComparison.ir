{
  app __x0__ = (Type x)
  app __x1__ = (Type y)
  if (= __x0__ __x1__) {
    app __x2__ = (StrictEqualityComparison x y)
    app __x3__ = (WrapCompletion __x2__)
    return __x3__
  } else {}
  if (&& (= x null) (= y undefined)) {
    app __x4__ = (WrapCompletion true)
    return __x4__
  } else {}
  if (&& (= x undefined) (= y null)) {
    app __x5__ = (WrapCompletion true)
    return __x5__
  } else {}
  let __x6__ = true
  app __x7__ = (Type x)
  __x6__ = (= __x7__ Number)
  if __x6__ {
    app __x8__ = (Type y)
    __x6__ = (= __x8__ String)
  } else {}
  if __x6__ {
    app __x9__ = (ToNumber y)
    if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
    app __x10__ = (AbstractEqualityComparison x __x9__)
    app __x11__ = (WrapCompletion __x10__)
    return __x11__
  } else {}
  let __x12__ = true
  app __x13__ = (Type x)
  __x12__ = (= __x13__ String)
  if __x12__ {
    app __x14__ = (Type y)
    __x12__ = (= __x14__ Number)
  } else {}
  if __x12__ {
    app __x15__ = (ToNumber x)
    if (is-completion __x15__) if (= __x15__.Type CONST_normal) __x15__ = __x15__.Value else return __x15__ else {}
    app __x16__ = (AbstractEqualityComparison __x15__ y)
    app __x17__ = (WrapCompletion __x16__)
    return __x17__
  } else {}
  let __x18__ = true
  app __x19__ = (Type x)
  __x18__ = (= __x19__ BigInt)
  if __x18__ {
    app __x20__ = (Type y)
    __x18__ = (= __x20__ String)
  } else {}
  if __x18__ {
    app __x21__ = (StringToBigInt y)
    if (is-completion __x21__) if (= __x21__.Type CONST_normal) __x21__ = __x21__.Value else return __x21__ else {}
    let n = __x21__
    if (= n NaN) {
      app __x22__ = (WrapCompletion false)
      return __x22__
    } else {}
    app __x23__ = (AbstractEqualityComparison x n)
    app __x24__ = (WrapCompletion __x23__)
    return __x24__
  } else {}
  let __x25__ = true
  app __x26__ = (Type x)
  __x25__ = (= __x26__ String)
  if __x25__ {
    app __x27__ = (Type y)
    __x25__ = (= __x27__ BigInt)
  } else {}
  if __x25__ {
    app __x28__ = (AbstractEqualityComparison y x)
    app __x29__ = (WrapCompletion __x28__)
    return __x29__
  } else {}
  app __x30__ = (Type x)
  if (= __x30__ Boolean) {
    app __x31__ = (ToNumber x)
    if (is-completion __x31__) if (= __x31__.Type CONST_normal) __x31__ = __x31__.Value else return __x31__ else {}
    app __x32__ = (AbstractEqualityComparison __x31__ y)
    app __x33__ = (WrapCompletion __x32__)
    return __x33__
  } else {}
  app __x34__ = (Type y)
  if (= __x34__ Boolean) {
    app __x35__ = (ToNumber y)
    if (is-completion __x35__) if (= __x35__.Type CONST_normal) __x35__ = __x35__.Value else return __x35__ else {}
    app __x36__ = (AbstractEqualityComparison x __x35__)
    app __x37__ = (WrapCompletion __x36__)
    return __x37__
  } else {}
  let __x38__ = true
  app __x39__ = (Type x)
  __x38__ = (|| (|| (|| (= __x39__ String) (= __x39__ Number)) (= __x39__ BigInt)) (= __x39__ Symbol))
  if __x38__ {
    app __x40__ = (Type y)
    __x38__ = (= __x40__ Object)
  } else {}
  if __x38__ {
    app __x41__ = (ToPrimitive y)
    if (is-completion __x41__) if (= __x41__.Type CONST_normal) __x41__ = __x41__.Value else return __x41__ else {}
    app __x42__ = (AbstractEqualityComparison x __x41__)
    app __x43__ = (WrapCompletion __x42__)
    return __x43__
  } else {}
  let __x44__ = true
  app __x45__ = (Type x)
  __x44__ = (= __x45__ Object)
  if __x44__ {
    app __x46__ = (Type y)
    __x44__ = (|| (|| (|| (= __x46__ String) (= __x46__ Number)) (= __x46__ BigInt)) (= __x46__ Symbol))
  } else {}
  if __x44__ {
    app __x47__ = (ToPrimitive x)
    if (is-completion __x47__) if (= __x47__.Type CONST_normal) __x47__ = __x47__.Value else return __x47__ else {}
    app __x48__ = (AbstractEqualityComparison __x47__ y)
    app __x49__ = (WrapCompletion __x48__)
    return __x49__
  } else {}
  let __x50__ = true
  app __x51__ = (Type x)
  __x50__ = (= __x51__ BigInt)
  if __x50__ {
    let __x52__ = true
    app __x53__ = (Type y)
    __x52__ = (= __x53__ Number)
    if __x52__ {} else {
      let __x54__ = true
      app __x55__ = (Type x)
      __x54__ = (= __x55__ Number)
      if __x54__ {
        app __x56__ = (Type y)
        __x54__ = (= __x56__ BigInt)
      } else {}
      __x52__ = __x54__
    }
    __x50__ = __x52__
  } else {}
  if __x50__ {
    if (|| (|| (|| (= x NaN) (= x Infinity)) (= x -Infinity)) (|| (|| (= y NaN) (= y Infinity)) (= y -Infinity))) {
      app __x57__ = (WrapCompletion false)
      return __x57__
    } else {}
    if (== x y) {
      app __x58__ = (WrapCompletion true)
      return __x58__
    } else {
      app __x59__ = (WrapCompletion false)
      return __x59__
    }
  } else {}
  app __x60__ = (WrapCompletion false)
  return __x60__
}