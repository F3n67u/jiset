digraph {
  node12742 [shape=diamond, label=<<font color="black">(! (= replacer undefined))</font>> color="black" fillcolor="white" style=filled]
  node12745 [shape=cds, label=<<font color="black">5:app __x3__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12762 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let replStr = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12747 [shape=cds, label=<<font color="black">6:app __x4__ = (ToString searchValue)</font>> color="black" fillcolor="white" style=filled]
  node12737 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12746 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let string = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12756 [shape=cds, label=<<font color="black">12:app __x7__ = (Call replaceValue undefined (new [matched, pos, string]))</font>> color="black" fillcolor="white" style=filled]
  node12740 [shape=cds, label=<<font color="black">2:app __x1__ = (GetMethod searchValue SYMBOL_replace)</font>> color="black" fillcolor="white" style=filled]
  node12754 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:??? &quot;Search id:{string} for the first occurrence of id:{searchString} and let id:{pos} be the index within id:{string} of the first code unit of the matched substring and let id:{matched} be id:{searchString} . If no occurrences of id:{searchString} were found , return id:{string} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12739 [shape=diamond, label=<<font color="black">(! (|| (= searchValue undefined) (= searchValue null)))</font>> color="black" fillcolor="white" style=filled]
  node12734 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12761 [shape=cds, label=<<font color="black">16:app __x9__ = (GetSubstitution matched string pos captures replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12749 [shape=cds, label=<<font color="black">7:app __x5__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let replaceValue = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12763 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let tailPos = (+ pos matched.length)</td></tr>
      <tr><td align="left">18:??? &quot;Let id:{newString} be the String formed by concatenating the first id:{pos} code units of id:{string} , id:{replStr} , and the trailing substring of id:{string} starting at index id:{tailPos} . If id:{pos} is 0 , the first element of the concatenation will be the empty String .&quot;</td></tr>
      <tr><td align="left">19:return newString</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12757 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let replValue = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let functionalReplace = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12735 [shape=cds, label=<<font color="black">app searchValue = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let replacer = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12760 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12751 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node12736 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12748 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let searchString = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12759 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let replStr = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12755 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node12744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12752 [shape=cds, label=<<font color="black">9:app __x6__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12733 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12743 [shape=cds, label=<<font color="black">4:app __x2__ = (Call replacer searchValue (new [O, replaceValue]))</font>> color="black" fillcolor="white" style=filled]
  node12758 [shape=cds, label=<<font color="black">13:app __x8__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node12737 -> node12738 [ color="black"]
  node12745 -> node12746 [ color="black"]
  node12748 -> node12749 [ color="black"]
  node12762 -> node12763 [ color="black"]
  node12736 -> node12737 [ color="black"]
  node12756 -> node12757 [ color="black"]
  node12752 -> node12753 [ color="black"]
  node12746 -> node12747 [ color="black"]
  node12751 -> node12752 [label=<<font color="black">true</font>> color="black"]
  node12751 -> node12754 [label=<<font color="black">false</font>> color="black"]
  node12755 -> node12756 [label=<<font color="black">true</font>> color="black"]
  node12755 -> node12760 [label=<<font color="black">false</font>> color="black"]
  node12733 -> node12735 [ color="black"]
  node12749 -> node12750 [ color="black"]
  node12741 -> node12742 [ color="black"]
  node12744 -> node12745 [ color="black"]
  node12738 -> node12739 [ color="black"]
  node12735 -> node12736 [ color="black"]
  node12763 -> node12734 [ color="black"]
  node12753 -> node12754 [ color="black"]
  node12739 -> node12740 [label=<<font color="black">true</font>> color="black"]
  node12739 -> node12745 [label=<<font color="black">false</font>> color="black"]
  node12754 -> node12755 [ color="black"]
  node12760 -> node12761 [ color="black"]
  node12740 -> node12741 [ color="black"]
  node12742 -> node12743 [label=<<font color="black">true</font>> color="black"]
  node12742 -> node12745 [label=<<font color="black">false</font>> color="black"]
  node12750 -> node12751 [ color="black"]
  node12758 -> node12759 [ color="black"]
  node12759 -> node12763 [ color="black"]
  node12743 -> node12744 [ color="black"]
  node12757 -> node12758 [ color="black"]
  node12761 -> node12762 [ color="black"]
  node12747 -> node12748 [ color="black"]
}
