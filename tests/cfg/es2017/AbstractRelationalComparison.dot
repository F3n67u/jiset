digraph {
  node602 [shape=diamond, label=<<font color="black">(= nx -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node598 [shape=diamond, label=<<font color="black">(= ny Infinity)</font>> color="black" fillcolor="white" style=filled]
  node583 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:??? &quot;Let id:{nx} be ? ToNumber ( id:{px} ) . Because id:{px} and id:{py} are primitive values evaluation order is not important .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node590 [shape=diamond, label=<<font color="black">(= nx ny)</font>> color="black" fillcolor="white" style=filled]
  node569 [shape=diamond, label=<<font color="black">(= LeftFirst true)</font>> color="black" fillcolor="white" style=filled]
  node586 [shape=diamond, label=<<font color="black">(= nx NaN)</font>> color="black" fillcolor="white" style=filled]
  node572 [shape=cds, label=<<font color="black">2:app __x1__ = (ToPrimitive y Number)</font>> color="black" fillcolor="white" style=filled]
  node594 [shape=diamond, label=<<font color="black">(&amp;&amp; (= nx -0.0) (= ny 0i))</font>> color="black" fillcolor="white" style=filled]
  node589 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node580 [shape=diamond, label=<<font color="black">(&lt; m n)</font>> color="black" fillcolor="white" style=filled]
  node581 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node588 [shape=diamond, label=<<font color="black">(= ny NaN)</font>> color="black" fillcolor="white" style=filled]
  node568 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node603 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node592 [shape=diamond, label=<<font color="black">(&amp;&amp; (= nx 0i) (= ny -0.0))</font>> color="black" fillcolor="white" style=filled]
  node582 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node597 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node570 [shape=cds, label=<<font color="black">1:app __x0__ = (ToPrimitive x Number)</font>> color="black" fillcolor="white" style=filled]
  node587 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node591 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node574 [shape=cds, label=<<font color="black">4:app __x2__ = (ToPrimitive y Number)</font>> color="black" fillcolor="white" style=filled]
  node578 [shape=diamond, label=<<font color="black">(&amp;&amp; (= px Strings) (= py Strings))</font>> color="black" fillcolor="white" style=filled]
  node593 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node573 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let py = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node601 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node584 [shape=cds, label=<<font color="black">15:app __x4__ = (ToNumber py)</font>> color="black" fillcolor="white" style=filled]
  node577 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let px = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node579 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;If id:{py} is a prefix of id:{px} , return value:{false} . ( A String value id:{p} is a prefix of String value id:{q} if id:{q} can be the result of concatenating id:{p} and some other String id:{r} . Note that any String is a prefix of itself , because id:{r} may be the empty String . )&quot;</td></tr>
      <tr><td align="left">8:??? &quot;If id:{px} is a prefix of id:{py} , return value:{true} .&quot;</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{k} be the smallest nonnegative integer such that the code unit at index id:{k} within id:{px} is different from the code unit at index id:{k} within id:{py} . ( There must be such a id:{k} , for neither String is a prefix of the other . )&quot;</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{m} be the integer that is the code unit value at index id:{k} within id:{px} .&quot;</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{n} be the integer that is the code unit value at index id:{k} within id:{py} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node604 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:??? &quot;If the mathematical value of id:{nx} is less than the mathematical value of id:{ny} &mdash; note that these mathematical values are both finite and not both zero &mdash; return value:{true} . Otherwise , return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node567 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node599 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node585 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let ny = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node576 [shape=cds, label=<<font color="black">5:app __x3__ = (ToPrimitive x Number)</font>> color="black" fillcolor="white" style=filled]
  node600 [shape=diamond, label=<<font color="black">(= ny -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node571 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let px = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node595 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node575 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let py = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node596 [shape=diamond, label=<<font color="black">(= nx Infinity)</font>> color="black" fillcolor="white" style=filled]
  node598 -> node599 [label=<<font color="black">true</font>> color="black"]
  node598 -> node600 [label=<<font color="black">false</font>> color="black"]
  node579 -> node580 [ color="black"]
  node590 -> node591 [label=<<font color="black">true</font>> color="black"]
  node590 -> node592 [label=<<font color="black">false</font>> color="black"]
  node578 -> node579 [label=<<font color="black">true</font>> color="black"]
  node578 -> node583 [label=<<font color="black">false</font>> color="black"]
  node583 -> node584 [ color="black"]
  node589 -> node590 [ color="black"]
  node585 -> node586 [ color="black"]
  node604 -> node568 [ color="black"]
  node595 -> node596 [ color="black"]
  node587 -> node588 [ color="black"]
  node570 -> node571 [ color="black"]
  node575 -> node576 [ color="black"]
  node593 -> node594 [ color="black"]
  node599 -> node600 [ color="black"]
  node577 -> node578 [ color="black"]
  node572 -> node573 [ color="black"]
  node574 -> node575 [ color="black"]
  node582 -> node568 [ color="black"]
  node592 -> node593 [label=<<font color="black">true</font>> color="black"]
  node592 -> node594 [label=<<font color="black">false</font>> color="black"]
  node594 -> node595 [label=<<font color="black">true</font>> color="black"]
  node594 -> node596 [label=<<font color="black">false</font>> color="black"]
  node567 -> node569 [ color="black"]
  node580 -> node581 [label=<<font color="black">true</font>> color="black"]
  node580 -> node582 [label=<<font color="black">false</font>> color="black"]
  node597 -> node598 [ color="black"]
  node601 -> node602 [ color="black"]
  node591 -> node592 [ color="black"]
  node588 -> node589 [label=<<font color="black">true</font>> color="black"]
  node588 -> node590 [label=<<font color="black">false</font>> color="black"]
  node603 -> node604 [ color="black"]
  node573 -> node578 [ color="black"]
  node581 -> node568 [ color="black"]
  node584 -> node585 [ color="black"]
  node569 -> node570 [label=<<font color="black">true</font>> color="black"]
  node569 -> node574 [label=<<font color="black">false</font>> color="black"]
  node571 -> node572 [ color="black"]
  node602 -> node603 [label=<<font color="black">true</font>> color="black"]
  node602 -> node604 [label=<<font color="black">false</font>> color="black"]
  node596 -> node597 [label=<<font color="black">true</font>> color="black"]
  node596 -> node598 [label=<<font color="black">false</font>> color="black"]
  node586 -> node587 [label=<<font color="black">true</font>> color="black"]
  node586 -> node588 [label=<<font color="black">false</font>> color="black"]
  node576 -> node577 [ color="black"]
  node600 -> node601 [label=<<font color="black">true</font>> color="black"]
  node600 -> node602 [label=<<font color="black">false</font>> color="black"]
}
