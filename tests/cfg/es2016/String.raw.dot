digraph {
  node12109 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let nextIndex = (+ nextIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12105 [shape=cds, label=<<font color="black">16:app __x11__ = (ToString next)</font>> color="black" fillcolor="white" style=filled]
  node12083 [shape=cds, label=<<font color="black">3:app __x1__ = (Get cooked &quot;raw&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12095 [shape=cds, label=<<font color="black">10:app __x6__ = (Get raw nextKey)</font>> color="black" fillcolor="white" style=filled]
  node12091 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let stringElements = (new [])</td></tr>
      <tr><td align="left">7:let nextIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12104 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12099 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x10__ = __x8__[__x9__]</td></tr>
      <tr><td align="left">append __x10__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x9__ = (+ __x9__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12079 [shape=cds, label=<<font color="black">app substitutions = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12107 [shape=diamond, label=<<font color="black">(&lt; __x13__ __x12__.length)</font>> color="black" fillcolor="white" style=filled]
  node12085 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let raw = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12094 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextKey = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12084 [shape=cds, label=<<font color="black">3:app __x2__ = (ToObject [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node12089 [shape=diamond, label=<<font color="black">(! (&lt; 0i literalSegments))</font>> color="black" fillcolor="white" style=filled]
  node12097 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextSeg = [? __x7__]</td></tr>
      <tr><td align="left">11:let __x8__ = nextSeg</td></tr>
      <tr><td align="left">11:let __x9__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12077 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12090 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12101 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return the String value whose code units are , in order , the elements in the List id:{stringElements} . If id:{stringElements} has no elements , the empty string is returned .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12078 [shape=cds, label=<<font color="black">app template = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12100 [shape=diamond, label=<<font color="black">(== (+ nextIndex 1i) literalSegments)</font>> color="black" fillcolor="white" style=filled]
  node12106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextSub = [? __x11__]</td></tr>
      <tr><td align="left">17:let __x12__ = nextSub</td></tr>
      <tr><td align="left">17:let __x13__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12087 [shape=cds, label=<<font color="black">4:app __x4__ = (ToLength [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node12082 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let cooked = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12096 [shape=cds, label=<<font color="black">10:app __x7__ = (ToString [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node12092 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node12086 [shape=cds, label=<<font color="black">4:app __x3__ = (Get raw &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12088 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let literalSegments = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12103 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = substitutions[nextIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12080 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{substitutions} be a List consisting of all of the arguments passed to this function , starting with the second argument . If fewer than two arguments were passed , the List is empty .&quot;</td></tr>
      <tr><td align="left">1:let numberOfSubstitutions = substitutions.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12093 [shape=cds, label=<<font color="black">9:app __x5__ = (ToString nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node12098 [shape=diamond, label=<<font color="black">(&lt; __x9__ __x8__.length)</font>> color="black" fillcolor="white" style=filled]
  node12108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x14__ = __x12__[__x13__]</td></tr>
      <tr><td align="left">append __x14__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x13__ = (+ __x13__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12081 [shape=cds, label=<<font color="black">2:app __x0__ = (ToObject template)</font>> color="black" fillcolor="white" style=filled]
  node12076 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12102 [shape=diamond, label=<<font color="black">(&lt; nextIndex numberOfSubstitutions)</font>> color="black" fillcolor="white" style=filled]
  node12102 -> node12103 [label=<<font color="black">true</font>> color="black"]
  node12102 -> node12104 [label=<<font color="black">false</font>> color="black"]
  node12104 -> node12105 [ color="black"]
  node12091 -> node12092 [ color="black"]
  node12103 -> node12105 [ color="black"]
  node12108 -> node12107 [ color="black"]
  node12105 -> node12106 [ color="black"]
  node12094 -> node12095 [ color="black"]
  node12106 -> node12107 [ color="black"]
  node12101 -> node12102 [ color="black"]
  node12084 -> node12085 [ color="black"]
  node12096 -> node12097 [ color="black"]
  node12087 -> node12088 [ color="black"]
  node12083 -> node12084 [ color="black"]
  node12093 -> node12094 [ color="black"]
  node12079 -> node12080 [ color="black"]
  node12089 -> node12090 [label=<<font color="black">true</font>> color="black"]
  node12089 -> node12091 [label=<<font color="black">false</font>> color="black"]
  node12082 -> node12083 [ color="black"]
  node12097 -> node12098 [ color="black"]
  node12099 -> node12098 [ color="black"]
  node12092 -> node12093 [label=<<font color="black">true</font>> color="black"]
  node12092 -> node12077 [label=<<font color="black">false</font>> color="black"]
  node12098 -> node12099 [label=<<font color="black">true</font>> color="black"]
  node12098 -> node12100 [label=<<font color="black">false</font>> color="black"]
  node12085 -> node12086 [ color="black"]
  node12109 -> node12092 [ color="black"]
  node12090 -> node12091 [ color="black"]
  node12095 -> node12096 [ color="black"]
  node12080 -> node12081 [ color="black"]
  node12088 -> node12089 [ color="black"]
  node12078 -> node12079 [ color="black"]
  node12100 -> node12101 [label=<<font color="black">true</font>> color="black"]
  node12100 -> node12102 [label=<<font color="black">false</font>> color="black"]
  node12107 -> node12108 [label=<<font color="black">true</font>> color="black"]
  node12107 -> node12109 [label=<<font color="black">false</font>> color="black"]
  node12081 -> node12082 [ color="black"]
  node12076 -> node12078 [ color="black"]
  node12086 -> node12087 [ color="black"]
}
