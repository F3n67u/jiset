digraph {
  node16444 [shape=cds, label=<<font color="black">4:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16452 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16448 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16440 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16441 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16445 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:isLittleEndian = __x2__</td></tr>
      <tr><td align="left">5:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16435 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16442 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node16446 [shape=cds, label=<<font color="black">6:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16447 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node16434 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16449 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">8:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16437 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16436 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node16451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16454 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16439 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node16450 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node16443 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16438 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16453 [shape=cds, label=<<font color="black">12:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false &quot;Unordered&quot; isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16453 -> node16454 [ color="black"]
  node16449 -> node16450 [ color="black"]
  node16448 -> node16449 [ color="black"]
  node16450 -> node16451 [label=<<font color="black">true</font>> color="black"]
  node16450 -> node16452 [label=<<font color="black">false</font>> color="black"]
  node16452 -> node16453 [ color="black"]
  node16447 -> node16448 [label=<<font color="black">true</font>> color="black"]
  node16447 -> node16449 [label=<<font color="black">false</font>> color="black"]
  node16446 -> node16447 [ color="black"]
  node16439 -> node16440 [label=<<font color="black">true</font>> color="black"]
  node16439 -> node16441 [label=<<font color="black">false</font>> color="black"]
  node16444 -> node16445 [ color="black"]
  node16437 -> node16438 [label=<<font color="black">true</font>> color="black"]
  node16437 -> node16439 [label=<<font color="black">false</font>> color="black"]
  node16443 -> node16444 [ color="black"]
  node16451 -> node16452 [ color="black"]
  node16442 -> node16443 [ color="black"]
  node16445 -> node16446 [ color="black"]
  node16438 -> node16439 [ color="black"]
  node16441 -> node16442 [ color="black"]
  node16436 -> node16437 [ color="black"]
  node16440 -> node16441 [ color="black"]
  node16454 -> node16435 [ color="black"]
  node16434 -> node16436 [ color="black"]
}
