digraph {
  node12738 [shape=cds, label=<<font color="black">0:app __x0__ = (Type tv)</font>> color="black" fillcolor="white" style=filled]
  node12742 [shape=diamond, label=<<font color="black">(! (&lt; offset 0i))</font>> color="black" fillcolor="white" style=filled]
  node12745 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Let id:{offsetMin} be the String representation of MinFromTime ( abs ( id:{offset} ) ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary .&quot;</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{offsetHour} be the String representation of HourFromTime ( abs ( id:{offset} ) ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{tzName} be an implementation - defined string that is either the empty string or the string - concatenation of the code unit 0x0020 ( SPACE ) , the code unit 0x0028 ( LEFT PARENTHESIS ) , an implementation - dependent timezone name , and the code unit 0x0029 ( RIGHT PARENTHESIS ) .&quot;</td></tr>
      <tr><td align="left">7:return (+ (+ (+ offsetSign offsetHour) offsetMin) tzName)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12735 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12737 [shape=cds, label=<<font color="black">app tv = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let offset = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12736 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let offsetSign = &quot;-&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12740 [shape=cds, label=<<font color="black">2:app __x1__ = (LocalTZA tv true)</font>> color="black" fillcolor="white" style=filled]
  node12743 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let offsetSign = &quot;+&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12739 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Number)</td></tr>
      <tr><td align="left">1:assert (! (= tv NaN))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12737 -> node12738 [ color="black"]
  node12735 -> node12737 [ color="black"]
  node12743 -> node12745 [ color="black"]
  node12742 -> node12743 [label=<<font color="black">true</font>> color="black"]
  node12742 -> node12744 [label=<<font color="black">false</font>> color="black"]
  node12741 -> node12742 [ color="black"]
  node12739 -> node12740 [ color="black"]
  node12740 -> node12741 [ color="black"]
  node12745 -> node12736 [ color="black"]
  node12744 -> node12745 [ color="black"]
  node12738 -> node12739 [ color="black"]
}
