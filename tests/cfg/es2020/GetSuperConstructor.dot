digraph {
  node4762 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4766 [shape=cds, label=<<font color="black">4:app __x1__ = (activeFunction.GetPrototypeOf activeFunction)</font>> color="black" fillcolor="white" style=filled]
  node4765 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let envRec = __x0__</td></tr>
      <tr><td align="left">1:assert (= (typeof envRec) &quot;FunctionEnvironmentRecord&quot;)</td></tr>
      <tr><td align="left">2:let activeFunction = envRec.FunctionObject</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4764 [shape=cds, label=<<font color="black">0:app __x0__ = (GetThisEnvironment )</font>> color="black" fillcolor="white" style=filled]
  node4763 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4767 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let superConstructor = [! __x1__]</td></tr>
      <tr><td align="left">5:return superConstructor</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4766 -> node4767 [ color="black"]
  node4767 -> node4763 [ color="black"]
  node4762 -> node4764 [ color="black"]
  node4765 -> node4766 [ color="black"]
  node4764 -> node4765 [ color="black"]
}
