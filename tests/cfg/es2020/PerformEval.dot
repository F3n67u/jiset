digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">3:app __x0__ = (HostEnsureCanCompileStrings callerRealm evalRealm)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let F = thisEnvRec.FunctionObject</td></tr>
      <tr><td align="left">7:let inFunction = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let inDerivedConstructor = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=diamond, label=<<font color="black">(is-instance-of thisEnvRec FunctionEnvironmentRecord)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=diamond, label=<<font color="black">(! (= (typeof x) String))</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let inMethod = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=diamond, label=<<font color="black">(= strictCaller true)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let thisEnvRec = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let evalRealm = REALM</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let inDerivedConstructor = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node42 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] evalContext)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=cds, label=<<font color="black">26:app __x4__ = (NewDeclarativeEnvironment runningContext.LexicalEnvironment)</font>> color="black" fillcolor="white" style=filled]
  node37 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">42:result = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let lexEnv = __x4__</td></tr>
      <tr><td align="left">27:let varEnv = runningContext.VariableEnvironment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=cds, label=<<font color="black">access __x3__ = (script &quot;IsStrict&quot;)</font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">varEnv = lexEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strictEval = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node33 [shape=cds, label=<<font color="black">40:app __x6__ = (EvalDeclarationInstantiation body varEnv lexEnv strictEval)</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=diamond, label=<<font color="black">(= strictEval true)</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type CONST_normal) (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=diamond, label=<<font color="black">(= F.ConstructorKind CONST_derived)</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:GLOBAL_context = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:??? &quot;Perform the following substeps in an implementation - dependent order , possibly interleaving parsing and error detection : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let evalContext = (new ExecutionContext(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">34:evalContext.Function = null</td></tr>
      <tr><td align="left">35:evalContext.Realm = evalRealm</td></tr>
      <tr><td align="left">36:evalContext.ScriptOrModule = runningContext.ScriptOrModule</td></tr>
      <tr><td align="left">37:evalContext.VariableEnvironment = varEnv</td></tr>
      <tr><td align="left">38:evalContext.LexicalEnvironment = lexEnv</td></tr>
      <tr><td align="left">39:append evalContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">39:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node34 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let runningContext = GLOBAL_context</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">47:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let lexEnv = __x5__</td></tr>
      <tr><td align="left">30:let varEnv = evalRealm.GlobalEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">4:app __x1__ = (GetThisEnvironment)</font>> color="black" fillcolor="white" style=filled]
  node39 [shape=cds, label=<<font color="black">44:app __x8__ = (NormalCompletion undefined)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return x</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node35 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let inFunction = false</td></tr>
      <tr><td align="left">12:let inMethod = false</td></tr>
      <tr><td align="left">13:let inDerivedConstructor = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">GLOBAL_context = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">8:app __x2__ = (thisEnvRec.HasSuperBinding thisEnvRec)</font>> color="black" fillcolor="white" style=filled]
  node43 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">(pop GLOBAL_executionStack (- GLOBAL_executionStack.length 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node40 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">44:result = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=cds, label=<<font color="black">29:app __x5__ = (NewDeclarativeEnvironment evalRealm.GlobalEnv)</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=diamond, label=<<font color="black">(= direct true)</font>> color="black" fillcolor="white" style=filled]
  node36 [shape=cds, label=<<font color="black">42:access __x7__ = (body &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node30 [shape=diamond, label=<<font color="black">(= runningContext null)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strictEval = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 -> node30 [ color="black"]
  node13 -> node14 [label=<<font color="black">true</font>> color="black"]
  node13 -> node15 [label=<<font color="black">false</font>> color="black"]
  node23 -> node24 [label=<<font color="black">true</font>> color="black"]
  node23 -> node26 [label=<<font color="black">false</font>> color="black"]
  node11 -> node12 [ color="black"]
  node12 -> node13 [ color="black"]
  node0 -> node2 [ color="black"]
  node43 -> node44 [ color="black"]
  node31 -> node32 [ color="black"]
  node26 -> node27 [ color="black"]
  node15 -> node17 [ color="black"]
  node4 -> node5 [ color="black"]
  node19 -> node22 [ color="black"]
  node44 -> node1 [ color="black"]
  node35 -> node36 [label=<<font color="black">true</font>> color="black"]
  node35 -> node38 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node39 -> node40 [ color="black"]
  node25 -> node28 [ color="black"]
  node7 -> node8 [ color="black"]
  node34 -> node35 [ color="black"]
  node36 -> node37 [ color="black"]
  node2 -> node3 [label=<<font color="black">true</font>> color="black"]
  node2 -> node4 [label=<<font color="black">false</font>> color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node27 -> node28 [ color="black"]
  node37 -> node38 [ color="black"]
  node40 -> node41 [ color="black"]
  node30 -> node31 [label=<<font color="black">true</font>> color="black"]
  node30 -> node32 [label=<<font color="black">false</font>> color="black"]
  node38 -> node39 [label=<<font color="black">true</font>> color="black"]
  node38 -> node41 [label=<<font color="black">false</font>> color="black"]
  node28 -> node29 [label=<<font color="black">true</font>> color="black"]
  node28 -> node30 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [ color="black"]
  node42 -> node43 [label=<<font color="black">true</font>> color="black"]
  node42 -> node44 [label=<<font color="black">false</font>> color="black"]
  node9 -> node10 [label=<<font color="black">true</font>> color="black"]
  node9 -> node16 [label=<<font color="black">false</font>> color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [ color="black"]
  node20 -> node21 [ color="black"]
  node24 -> node25 [ color="black"]
  node16 -> node17 [ color="black"]
  node18 -> node19 [label=<<font color="black">true</font>> color="black"]
  node18 -> node20 [label=<<font color="black">false</font>> color="black"]
  node32 -> node33 [ color="black"]
  node17 -> node18 [ color="black"]
  node41 -> node42 [ color="black"]
  node14 -> node17 [ color="black"]
  node33 -> node34 [ color="black"]
}
