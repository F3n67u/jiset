{
  [0] let target = F.BoundTargetFunction
  [1] app __x0__ = (IsConstructor target)
  [1] assert (= __x0__ true)
  [2] let boundArgs = F.BoundArguments
  [3] let __x1__ = (copy-obj boundArgs)
  [3] let __x2__ = argumentsList
  [3] let __x3__ = 0i
  [3] while (< __x3__ __x2__.length) {
    let __x4__ = __x2__[__x3__]
    append __x4__ -> __x1__
    __x3__ = (+ __x3__ 1i)
  }
  [3] let args = __x1__
  [4] app __x5__ = (SameValue F newTarget)
  [4] if (= __x5__ true) newTarget = target else [0] {}
  [5] app __x6__ = (Construct target args newTarget)
  [5] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [0] {}
  [5] app __x7__ = (WrapCompletion __x6__)
  [5] return __x7__
}