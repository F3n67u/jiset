{
  [0] let O = this
  [1] app __x0__ = (thisTimeValue O)
  [1] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [11] {}
  [1] let tv = __x0__
  [2] ??? "If id:{tv} is value:{NaN} , return * \" Invalid Date \" * ."
  [3] ??? "Let id:{weekday} be the Name of the entry in link:{} with the Number WeekDay ( id:{tv} ) ."
  [4] ??? "Let id:{month} be the Name of the entry in link:{} with the Number MonthFromTime ( id:{tv} ) ."
  [5] ??? "Let id:{day} be the String representation of DateFromTime ( id:{tv} ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary ."
  [6] app __x1__ = (YearFromTime tv)
  [6] let yv = __x1__
  [7] if (! (< yv 0i)) let yearSign = "" else let yearSign = "-"
  [8] ??? "Let id:{year} be the String representation of abs ( id:{yv} ) , formatted as a decimal number ."
  [9] app __x2__ = (StringPad year 4i "0" CONST_start)
  [9] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [11] {}
  [9] let paddedYear = __x2__
  [10] app __x3__ = (TimeString tv)
  [10] app __x4__ = (WrapCompletion (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ weekday ",") " ") day) " ") month) " ") yearSign) paddedYear) " ") __x3__))
  [10] return __x4__
}