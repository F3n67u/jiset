<algorithm>
  <param>CaseClauses</param>
  <step-list>
    <step>Let <id>V</id> be <value>undefined</value> .</step>
    <step>Let <id>A</id> be the List of CaseClause items in CaseClauses , in source text order.</step>
    <step>Let <id>found</id> be <value>false</value> .</step>
    <step>For each CaseClause  <id>C</id> in <id>A</id> , do     <step-list>
      <step>If <id>found</id> is <value>false</value> , then       <step-list>
        <step>Set <id>found</id> to ? CaseClauseIsSelected ( <id>C</id> , <id>input</id> ).</step>
      </step-list></step>
      <step>If <id>found</id> is <value>true</value> , then       <step-list>
        <step>Let <id>R</id> be the result of evaluating <id>C</id> .</step>
        <step>If <id>R</id> .[[Value]] is not <value>empty</value> , set <id>V</id> to <id>R</id> .[[Value]].</step>
        <step>If <id>R</id> is an abrupt completion , return Completion ( UpdateEmpty ( <id>R</id> , <id>V</id> )).</step>
      </step-list></step>
    </step-list></step>
    <step>Return NormalCompletion ( <id>V</id> ).</step>
  </step-list>
</algorithm>