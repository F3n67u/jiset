digraph {
  node17569 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17577 [shape=cds, label=<<font color="black">5:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17581 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node17571 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot view &quot;DataView&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17574 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17578 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node17582 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17573 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node17583 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17579 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17576 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:isLittleEndian = [! __x2__]</td></tr>
      <tr><td align="left">4:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17580 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">7:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17575 [shape=cds, label=<<font color="black">3:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17570 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17584 [shape=cds, label=<<font color="black">11:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false CONST_Unordered isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17572 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">1:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17585 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17582 -> node17583 [ color="black"]
  node17576 -> node17577 [ color="black"]
  node17575 -> node17576 [ color="black"]
  node17584 -> node17585 [ color="black"]
  node17579 -> node17580 [ color="black"]
  node17569 -> node17571 [ color="black"]
  node17573 -> node17574 [ color="black"]
  node17581 -> node17582 [label=<<font color="black">true</font>> color="black"]
  node17581 -> node17583 [label=<<font color="black">false</font>> color="black"]
  node17572 -> node17573 [ color="black"]
  node17580 -> node17581 [ color="black"]
  node17577 -> node17578 [ color="black"]
  node17571 -> node17572 [ color="black"]
  node17585 -> node17570 [ color="black"]
  node17578 -> node17579 [label=<<font color="black">true</font>> color="black"]
  node17578 -> node17580 [label=<<font color="black">false</font>> color="black"]
  node17583 -> node17584 [ color="black"]
  node17574 -> node17575 [ color="black"]
}
