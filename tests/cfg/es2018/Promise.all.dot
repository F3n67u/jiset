digraph {
  node17411 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17415 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17432 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17410 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17423 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node17406 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node17412 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17402 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17430 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17427 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17409 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iteratorRecord = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17404 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17424 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17407 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17433 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17428 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17403 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17425 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node17420 [shape=cds, label=<<font color="black">6:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node17399 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17429 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17416 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17419 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17426 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17405 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17422 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node17401 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17418 [shape=cds, label=<<font color="black">5:app __x4__ = (PerformPromiseAll iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node17413 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17400 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17421 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node17408 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node17431 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17414 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17429 -> node17430 [label=<<font color="black">true</font>> color="black"]
  node17429 -> node17431 [label=<<font color="black">false</font>> color="black"]
  node17419 -> node17420 [ color="black"]
  node17421 -> node17422 [label=<<font color="black">true</font>> color="black"]
  node17421 -> node17433 [label=<<font color="black">false</font>> color="black"]
  node17415 -> node17416 [ color="black"]
  node17411 -> node17412 [label=<<font color="black">true</font>> color="black"]
  node17411 -> node17413 [label=<<font color="black">false</font>> color="black"]
  node17427 -> node17432 [ color="black"]
  node17428 -> node17429 [ color="black"]
  node17402 -> node17403 [ color="black"]
  node17403 -> node17404 [ color="black"]
  node17413 -> node17414 [ color="black"]
  node17401 -> node17402 [ color="black"]
  node17422 -> node17423 [label=<<font color="black">true</font>> color="black"]
  node17422 -> node17425 [label=<<font color="black">false</font>> color="black"]
  node17408 -> node17409 [ color="black"]
  node17407 -> node17408 [ color="black"]
  node17425 -> node17426 [label=<<font color="black">true</font>> color="black"]
  node17425 -> node17432 [label=<<font color="black">false</font>> color="black"]
  node17409 -> node17410 [ color="black"]
  node17406 -> node17407 [ color="black"]
  node17420 -> node17421 [ color="black"]
  node17417 -> node17418 [ color="black"]
  node17399 -> node17401 [ color="black"]
  node17416 -> node17417 [ color="black"]
  node17404 -> node17405 [label=<<font color="black">true</font>> color="black"]
  node17404 -> node17406 [label=<<font color="black">false</font>> color="black"]
  node17418 -> node17419 [ color="black"]
  node17412 -> node17417 [ color="black"]
  node17423 -> node17424 [ color="black"]
  node17430 -> node17431 [ color="black"]
  node17433 -> node17400 [ color="black"]
  node17405 -> node17406 [ color="black"]
  node17410 -> node17411 [label=<<font color="black">true</font>> color="black"]
  node17410 -> node17417 [label=<<font color="black">false</font>> color="black"]
  node17432 -> node17433 [ color="black"]
  node17426 -> node17427 [label=<<font color="black">true</font>> color="black"]
  node17426 -> node17428 [label=<<font color="black">false</font>> color="black"]
  node17424 -> node17425 [ color="black"]
  node17414 -> node17415 [label=<<font color="black">true</font>> color="black"]
  node17414 -> node17416 [label=<<font color="black">false</font>> color="black"]
  node17431 -> node17432 [ color="black"]
}
