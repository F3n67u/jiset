digraph {
  node5 [shape=cds, label=<<font color="black">1:app __x2__ = (module.ResolveExport module e.ExportName)</font>> color="black" fillcolor="white" style=filled]
  node65 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:[! __x30__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node66 [shape=cds, label=<<font color="black">49:app __x31__ = (env.CreateMutableBinding env dn false)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node69 [shape=cds, label=<<font color="black">51:access __x32__ = (d &quot;InstantiateFunctionObject&quot; env)</font>> color="black" fillcolor="white" style=filled]
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let realm = module.Realm</td></tr>
      <tr><td align="left">6:assert (! (= realm undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node56 [shape=diamond, label=<<font color="black">(&lt; __x25__ __x24__.length)</font>> color="black" fillcolor="white" style=filled]
  node42 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node24 [shape=cds, label=<<font color="black">17:app __x10__ = (importedModule.ResolveExport importedModule in.ImportName)</font>> color="black" fillcolor="white" style=filled]
  node37 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let resolution = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node52 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x20__ = (+ __x20__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let in = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=cds, label=<<font color="black">14:app __x8__ = (env.CreateImmutableBinding env in.LocalName true)</font>> color="black" fillcolor="white" style=filled]
  node46 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x19__[__x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node57 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x24__[__x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=cds, label=<<font color="black">20:app __x11__ = (GetModuleNamespace resolution.Module)</font>> color="black" fillcolor="white" style=filled]
  node61 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x27__[__x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node74 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x25__ = (+ __x25__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let resolution = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node60 [shape=diamond, label=<<font color="black">(&lt; __x28__ __x27__.length)</font>> color="black" fillcolor="white" style=filled]
  node70 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:let fo = __x32__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node33 [shape=cds, label=<<font color="black">22:app __x13__ = (env.InitializeBinding env in.LocalName namespace)</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=diamond, label=<<font color="black">(= resolution.BindingName &quot;*namespace*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let moduleContext = (new ExecutionContext(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">26:moduleContext.Function = null</td></tr>
      <tr><td align="left">27:assert (! (= module.Realm undefined))</td></tr>
      <tr><td align="left">28:moduleContext.Realm = module.Realm</td></tr>
      <tr><td align="left">29:moduleContext.ScriptOrModule = module</td></tr>
      <tr><td align="left">30:moduleContext.VariableEnvironment = module.Environment</td></tr>
      <tr><td align="left">31:moduleContext.LexicalEnvironment = module.Environment</td></tr>
      <tr><td align="left">32:module.Context = moduleContext</td></tr>
      <tr><td align="left">33:append moduleContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">33:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">34:let code = module.ECMAScriptCode</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= (typeof resolution) &quot;ResolvedBindingRecord&quot;)</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node53 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node73 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x28__ = (+ __x28__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = module.IndirectExportEntries</td></tr>
      <tr><td align="left">0:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node45 [shape=diamond, label=<<font color="black">(&lt; __x20__ __x19__.length)</font>> color="black" fillcolor="white" style=filled]
  node64 [shape=cds, label=<<font color="black">47:app __x30__ = (env.CreateImmutableBinding env dn true)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=diamond, label=<<font color="black">(= in.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:[! __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node34 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:__x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">15:app __x9__ = (env.InitializeBinding env in.LocalName namespace)</font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:let __x19__ = __x18__</td></tr>
      <tr><td align="left">38:let __x20__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node59 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:let __x27__ = __x26__</td></tr>
      <tr><td align="left">45:let __x28__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node71 [shape=cds, label=<<font color="black">52:app __x33__ = (env.InitializeBinding env dn fo)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let env = __x3__</td></tr>
      <tr><td align="left">8:module.Environment = env</td></tr>
      <tr><td align="left">9:let __x4__ = module.ImportEntries</td></tr>
      <tr><td align="left">9:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node54 [shape=cds, label=<<font color="black">43:access __x23__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node49 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:[! __x21__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node39 [shape=cds, label=<<font color="black">35:access __x15__ = (code &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node35 [shape=cds, label=<<font color="black">24:app __x14__ = (env.CreateImportBinding env in.LocalName resolution.Module resolution.BindingName)</font>> color="black" fillcolor="white" style=filled]
  node48 [shape=cds, label=<<font color="black">40:app __x21__ = (env.CreateMutableBinding env dn false)</font>> color="black" fillcolor="white" style=filled]
  node63 [shape=diamond, label=<<font color="black">(= __x29__ true)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=cds, label=<<font color="black">13:app __x7__ = (GetModuleNamespace importedModule)</font>> color="black" fillcolor="white" style=filled]
  node50 [shape=cds, label=<<font color="black">41:app __x22__ = (env.InitializeBinding env dn undefined)</font>> color="black" fillcolor="white" style=filled]
  node67 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:[! __x31__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let importedModule = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node31 [shape=cds, label=<<font color="black">21:app __x12__ = (env.CreateImmutableBinding env in.LocalName true)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">7:app __x3__ = (NewModuleEnvironment realm.GlobalEnv)</font>> color="black" fillcolor="white" style=filled]
  node72 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:__x33__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node43 [shape=cds, label=<<font color="black">38:access __x18__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node40 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let varDeclarations = __x15__</td></tr>
      <tr><td align="left">36:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">37:let __x16__ = varDeclarations</td></tr>
      <tr><td align="left">37:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node55 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let lexDeclarations = __x23__</td></tr>
      <tr><td align="left">44:let __x24__ = lexDeclarations</td></tr>
      <tr><td align="left">44:let __x25__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:__x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node75 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:??? &quot;Remove id:{moduleContext} from the execution context stack .&quot;</td></tr>
      <tr><td align="left">54:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node58 [shape=cds, label=<<font color="black">45:access __x26__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node36 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:__x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let namespace = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node51 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:__x22__</td></tr>
      <tr><td align="left">42:append dn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let namespace = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node47 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames dn))</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">10:app __x6__ = (HostResolveImportedModule module in.ModuleRequest)</font>> color="black" fillcolor="white" style=filled]
  node68 [shape=diamond, label=<<font color="black">(|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</font>> color="black" fillcolor="white" style=filled]
  node62 [shape=cds, label=<<font color="black">48:access __x29__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node71 -> node72 [ color="black"]
  node26 -> node27 [label=<<font color="black">true</font>> color="black"]
  node26 -> node28 [label=<<font color="black">false</font>> color="black"]
  node7 -> node8 [label=<<font color="black">true</font>> color="black"]
  node7 -> node9 [label=<<font color="black">false</font>> color="black"]
  node23 -> node37 [ color="black"]
  node10 -> node11 [ color="black"]
  node48 -> node49 [ color="black"]
  node49 -> node50 [ color="black"]
  node32 -> node33 [ color="black"]
  node33 -> node34 [ color="black"]
  node5 -> node6 [ color="black"]
  node17 -> node18 [label=<<font color="black">true</font>> color="black"]
  node17 -> node24 [label=<<font color="black">false</font>> color="black"]
  node61 -> node62 [ color="black"]
  node64 -> node65 [ color="black"]
  node29 -> node30 [ color="black"]
  node39 -> node40 [ color="black"]
  node67 -> node68 [ color="black"]
  node47 -> node48 [label=<<font color="black">true</font>> color="black"]
  node47 -> node52 [label=<<font color="black">false</font>> color="black"]
  node74 -> node56 [ color="black"]
  node54 -> node55 [ color="black"]
  node42 -> node43 [ color="black"]
  node18 -> node19 [ color="black"]
  node75 -> node1 [ color="black"]
  node66 -> node67 [ color="black"]
  node2 -> node3 [ color="black"]
  node9 -> node3 [ color="black"]
  node62 -> node63 [ color="black"]
  node52 -> node45 [ color="black"]
  node15 -> node16 [ color="black"]
  node55 -> node56 [ color="black"]
  node11 -> node12 [ color="black"]
  node13 -> node14 [label=<<font color="black">true</font>> color="black"]
  node13 -> node38 [label=<<font color="black">false</font>> color="black"]
  node19 -> node20 [ color="black"]
  node35 -> node36 [ color="black"]
  node57 -> node58 [ color="black"]
  node12 -> node13 [ color="black"]
  node34 -> node37 [ color="black"]
  node0 -> node2 [ color="black"]
  node41 -> node42 [label=<<font color="black">true</font>> color="black"]
  node41 -> node54 [label=<<font color="black">false</font>> color="black"]
  node36 -> node37 [ color="black"]
  node22 -> node23 [ color="black"]
  node70 -> node71 [ color="black"]
  node6 -> node7 [ color="black"]
  node56 -> node57 [label=<<font color="black">true</font>> color="black"]
  node56 -> node75 [label=<<font color="black">false</font>> color="black"]
  node43 -> node44 [ color="black"]
  node44 -> node45 [ color="black"]
  node27 -> node28 [ color="black"]
  node14 -> node15 [ color="black"]
  node60 -> node61 [label=<<font color="black">true</font>> color="black"]
  node60 -> node74 [label=<<font color="black">false</font>> color="black"]
  node31 -> node32 [ color="black"]
  node40 -> node41 [ color="black"]
  node30 -> node31 [ color="black"]
  node63 -> node64 [label=<<font color="black">true</font>> color="black"]
  node63 -> node66 [label=<<font color="black">false</font>> color="black"]
  node72 -> node73 [ color="black"]
  node73 -> node60 [ color="black"]
  node50 -> node51 [ color="black"]
  node4 -> node5 [ color="black"]
  node51 -> node52 [ color="black"]
  node25 -> node26 [ color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [ color="black"]
  node59 -> node60 [ color="black"]
  node20 -> node21 [ color="black"]
  node24 -> node25 [ color="black"]
  node3 -> node4 [label=<<font color="black">true</font>> color="black"]
  node3 -> node10 [label=<<font color="black">false</font>> color="black"]
  node68 -> node69 [label=<<font color="black">true</font>> color="black"]
  node68 -> node73 [label=<<font color="black">false</font>> color="black"]
  node65 -> node68 [ color="black"]
  node45 -> node46 [label=<<font color="black">true</font>> color="black"]
  node45 -> node53 [label=<<font color="black">false</font>> color="black"]
  node69 -> node70 [ color="black"]
  node37 -> node13 [ color="black"]
  node16 -> node17 [ color="black"]
  node46 -> node47 [ color="black"]
  node58 -> node59 [ color="black"]
  node53 -> node41 [ color="black"]
  node28 -> node29 [label=<<font color="black">true</font>> color="black"]
  node28 -> node35 [label=<<font color="black">false</font>> color="black"]
  node38 -> node39 [ color="black"]
}
