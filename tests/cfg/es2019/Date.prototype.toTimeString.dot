digraph {
  node12816 [shape=cds, label=<<font color="black">1:app __x0__ = (thisTimeValue O)</font>> color="black" fillcolor="white" style=filled]
  node12819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let t = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12822 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return (+ __x2__ __x3__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12818 [shape=cds, label=<<font color="black">3:app __x1__ = (LocalTime tv)</font>> color="black" fillcolor="white" style=filled]
  node12813 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12814 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12821 [shape=cds, label=<<font color="black">4:app __x3__ = (TimeZoneString tv)</font>> color="black" fillcolor="white" style=filled]
  node12817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let tv = [? __x0__]</td></tr>
      <tr><td align="left">2:??? &quot;If id:{tv} is value:{NaN} , return ` \&quot; Invalid Date \&quot; ` .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12815 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12820 [shape=cds, label=<<font color="black">4:app __x2__ = (TimeString t)</font>> color="black" fillcolor="white" style=filled]
  node12822 -> node12814 [ color="black"]
  node12816 -> node12817 [ color="black"]
  node12818 -> node12819 [ color="black"]
  node12813 -> node12815 [ color="black"]
  node12815 -> node12816 [ color="black"]
  node12820 -> node12821 [ color="black"]
  node12821 -> node12822 [ color="black"]
  node12817 -> node12818 [ color="black"]
  node12819 -> node12820 [ color="black"]
}
