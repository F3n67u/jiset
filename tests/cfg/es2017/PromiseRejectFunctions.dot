digraph {
  node16364 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16360 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16365 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16361 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16366 [shape=cds, label=<<font color="black">5:app __x0__ = (RejectPromise promise reason)</font>> color="black" fillcolor="white" style=filled]
  node16362 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promise = F.Promise</td></tr>
      <tr><td align="left">2:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16367 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16363 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node16363 -> node16364 [label=<<font color="black">true</font>> color="black"]
  node16363 -> node16365 [label=<<font color="black">false</font>> color="black"]
  node16360 -> node16362 [ color="black"]
  node16366 -> node16367 [ color="black"]
  node16365 -> node16366 [ color="black"]
  node16364 -> node16365 [ color="black"]
  node16367 -> node16361 [ color="black"]
  node16362 -> node16363 [ color="black"]
}
