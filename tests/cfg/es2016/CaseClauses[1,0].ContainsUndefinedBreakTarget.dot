digraph {
  node6887 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6892 [shape=cds, label=<<font color="black">2:access __x1__ = (CaseClause &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6888 [shape=cds, label=<<font color="black">0:access __x0__ = (CaseClauses &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6890 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node6893 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6886 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6892 -> node6893 [ color="black"]
  node6886 -> node6888 [ color="black"]
  node6891 -> node6892 [ color="black"]
  node6889 -> node6890 [ color="black"]
  node6893 -> node6887 [ color="black"]
  node6888 -> node6889 [ color="black"]
  node6890 -> node6891 [label=<<font color="black">true</font>> color="black"]
  node6890 -> node6892 [label=<<font color="black">false</font>> color="black"]
}
