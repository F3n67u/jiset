digraph {
  node6014 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node6034 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6025 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rhsValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6021 [shape=cds, label=<<font color="black">7:access __x3__ = (DestructuringAssignmentTarget &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6032 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let assignmentPattern = (parse-syntax DestructuringAssignmentTarget &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6028 [shape=cds, label=<<font color="black">9:app __x7__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node6033 [shape=cds, label=<<font color="black">13:access __x8__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node6026 [shape=cds, label=<<font color="black">8:access __x6__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6019 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= v undefined))</font>> color="black" fillcolor="white" style=filled]
  node6016 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6024 [shape=cds, label=<<font color="black">6:access __x5__ = (Initializer &quot;NamedEvaluation&quot; __x4__)</font>> color="black" fillcolor="white" style=filled]
  node6012 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6013 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6018 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let v = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6035 [shape=cds, label=<<font color="black">14:app __x9__ = (PutValue lref rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node6022 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x2__ true) (= __x3__ true))</font>> color="black" fillcolor="white" style=filled]
  node6031 [shape=diamond, label=<<font color="black">(|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))</font>> color="black" fillcolor="white" style=filled]
  node6017 [shape=cds, label=<<font color="black">3:app __x1__ = (GetV value propertyName)</font>> color="black" fillcolor="white" style=filled]
  node6020 [shape=cds, label=<<font color="black">7:app __x2__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node6015 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6027 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let defaultValue = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6029 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let rhsValue = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6030 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let rhsValue = v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6023 [shape=cds, label=<<font color="black">6:app __x4__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node6026 -> node6027 [ color="black"]
  node6029 -> node6031 [ color="black"]
  node6016 -> node6017 [ color="black"]
  node6027 -> node6028 [ color="black"]
  node6030 -> node6031 [ color="black"]
  node6023 -> node6024 [ color="black"]
  node6021 -> node6022 [ color="black"]
  node6031 -> node6032 [label=<<font color="black">true</font>> color="black"]
  node6031 -> node6035 [label=<<font color="black">false</font>> color="black"]
  node6032 -> node6033 [ color="black"]
  node6019 -> node6020 [label=<<font color="black">true</font>> color="black"]
  node6019 -> node6030 [label=<<font color="black">false</font>> color="black"]
  node6018 -> node6019 [ color="black"]
  node6012 -> node6014 [ color="black"]
  node6020 -> node6021 [ color="black"]
  node6025 -> node6031 [ color="black"]
  node6015 -> node6016 [ color="black"]
  node6028 -> node6029 [ color="black"]
  node6035 -> node6036 [ color="black"]
  node6033 -> node6034 [ color="black"]
  node6036 -> node6013 [ color="black"]
  node6017 -> node6018 [ color="black"]
  node6024 -> node6025 [ color="black"]
  node6014 -> node6015 [label=<<font color="black">true</font>> color="black"]
  node6014 -> node6017 [label=<<font color="black">false</font>> color="black"]
  node6022 -> node6023 [label=<<font color="black">true</font>> color="black"]
  node6022 -> node6026 [label=<<font color="black">false</font>> color="black"]
  node6034 -> node6035 [ color="black"]
}
