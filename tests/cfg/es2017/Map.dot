digraph {
  node15055 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15041 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_MapPrototype (new [&quot;MapData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15050 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15068 [shape=cds, label=<<font color="black">17:app __x8__ = (Get nextItem &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15049 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node15063 [shape=cds, label=<<font color="black">14:app __x6__ = (Type nextItem)</font>> color="black" fillcolor="white" style=filled]
  node15085 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x16__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15084 [shape=cds, label=<<font color="black">app __x16__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node15056 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15067 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15052 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15059 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15044 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15066 [shape=cds, label=<<font color="black">16:app __x7__ = (IteratorClose iter error)</font>> color="black" fillcolor="white" style=filled]
  node15045 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node15083 [shape=diamond, label=<<font color="black">__x15__</font>> color="black" fillcolor="white" style=filled]
  node15051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15072 [shape=cds, label=<<font color="black">app __x10__ = (IteratorClose iter k)</font>> color="black" fillcolor="white" style=filled]
  node15077 [shape=diamond, label=<<font color="black">__x12__</font>> color="black" fillcolor="white" style=filled]
  node15060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15040 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15082 [shape=cds, label=<<font color="black">22:app __x15__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node15061 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15078 [shape=cds, label=<<font color="black">app __x13__ = (IteratorClose iter v)</font>> color="black" fillcolor="white" style=filled]
  node15071 [shape=diamond, label=<<font color="black">__x9__</font>> color="black" fillcolor="white" style=filled]
  node15065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let error = (new Completion(&quot;Type&quot; -&gt; CONST_throw, &quot;Value&quot; -&gt; ??? &quot;TypeError&quot;, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15054 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node15047 [shape=cds, label=<<font color="black">6:app __x1__ = (Get map &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15074 [shape=cds, label=<<font color="black">19:app __x11__ = (Get nextItem &quot;1&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let k = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15037 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15039 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15042 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let map = [? __x0__]</td></tr>
      <tr><td align="left">2:map.MapData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextItem = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15057 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node15070 [shape=cds, label=<<font color="black">18:app __x9__ = (IsAbruptCompletion k)</font>> color="black" fillcolor="white" style=filled]
  node15079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let status = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15036 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15048 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15038 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15053 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15080 [shape=cds, label=<<font color="black">21:app __x14__ = (Call adder map (new [k.Value, v.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15043 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node15075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let v = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15064 [shape=diamond, label=<<font color="black">(! (= __x6__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15076 [shape=cds, label=<<font color="black">20:app __x12__ = (IsAbruptCompletion v)</font>> color="black" fillcolor="white" style=filled]
  node15081 -> node15082 [ color="black"]
  node15067 -> node15068 [ color="black"]
  node15041 -> node15042 [ color="black"]
  node15083 -> node15084 [label=<<font color="black">true</font>> color="black"]
  node15083 -> node15056 [label=<<font color="black">false</font>> color="black"]
  node15042 -> node15043 [ color="black"]
  node15049 -> node15050 [ color="black"]
  node15077 -> node15078 [label=<<font color="black">true</font>> color="black"]
  node15077 -> node15080 [label=<<font color="black">false</font>> color="black"]
  node15066 -> node15067 [ color="black"]
  node15036 -> node15038 [ color="black"]
  node15043 -> node15044 [label=<<font color="black">true</font>> color="black"]
  node15043 -> node15045 [label=<<font color="black">false</font>> color="black"]
  node15055 -> node15056 [ color="black"]
  node15084 -> node15085 [ color="black"]
  node15060 -> node15061 [ color="black"]
  node15059 -> node15060 [label=<<font color="black">true</font>> color="black"]
  node15059 -> node15061 [label=<<font color="black">false</font>> color="black"]
  node15069 -> node15070 [ color="black"]
  node15048 -> node15049 [ color="black"]
  node15051 -> node15052 [ color="black"]
  node15057 -> node15058 [ color="black"]
  node15058 -> node15059 [ color="black"]
  node15079 -> node15080 [ color="black"]
  node15065 -> node15066 [ color="black"]
  node15056 -> node15057 [label=<<font color="black">true</font>> color="black"]
  node15056 -> node15037 [label=<<font color="black">false</font>> color="black"]
  node15074 -> node15075 [ color="black"]
  node15044 -> node15045 [ color="black"]
  node15080 -> node15081 [ color="black"]
  node15040 -> node15041 [ color="black"]
  node15071 -> node15072 [label=<<font color="black">true</font>> color="black"]
  node15071 -> node15074 [label=<<font color="black">false</font>> color="black"]
  node15038 -> node15039 [ color="black"]
  node15053 -> node15054 [ color="black"]
  node15047 -> node15048 [ color="black"]
  node15064 -> node15065 [label=<<font color="black">true</font>> color="black"]
  node15064 -> node15068 [label=<<font color="black">false</font>> color="black"]
  node15075 -> node15076 [ color="black"]
  node15054 -> node15055 [label=<<font color="black">true</font>> color="black"]
  node15054 -> node15056 [label=<<font color="black">false</font>> color="black"]
  node15063 -> node15064 [ color="black"]
  node15050 -> node15051 [label=<<font color="black">true</font>> color="black"]
  node15050 -> node15052 [label=<<font color="black">false</font>> color="black"]
  node15073 -> node15074 [ color="black"]
  node15061 -> node15062 [ color="black"]
  node15039 -> node15040 [label=<<font color="black">true</font>> color="black"]
  node15039 -> node15041 [label=<<font color="black">false</font>> color="black"]
  node15085 -> node15056 [ color="black"]
  node15078 -> node15079 [ color="black"]
  node15070 -> node15071 [ color="black"]
  node15076 -> node15077 [ color="black"]
  node15052 -> node15053 [ color="black"]
  node15045 -> node15046 [label=<<font color="black">true</font>> color="black"]
  node15045 -> node15047 [label=<<font color="black">false</font>> color="black"]
  node15062 -> node15063 [ color="black"]
  node15068 -> node15069 [ color="black"]
  node15046 -> node15054 [ color="black"]
  node15072 -> node15073 [ color="black"]
  node15082 -> node15083 [ color="black"]
}
