digraph {
  node12992 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let pos = [? __x3__]</td></tr>
      <tr><td align="left">4:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12993 [shape=cds, label=<<font color="black">5:app __x4__ = (max pos 0i)</font>> color="black" fillcolor="white" style=filled]
  node12988 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12981 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12985 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12991 [shape=cds, label=<<font color="black">3:app __x3__ = (ToInteger position)</font>> color="black" fillcolor="white" style=filled]
  node12987 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12994 [shape=cds, label=<<font color="black">5:app __x5__ = (min __x4__ len)</font>> color="black" fillcolor="white" style=filled]
  node12982 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12986 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12990 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let searchStr = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12989 [shape=cds, label=<<font color="black">2:app __x2__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node12984 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12995 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let start = __x5__</td></tr>
      <tr><td align="left">6:let searchLen = searchStr.length</td></tr>
      <tr><td align="left">7:??? &quot;Return the smallest possible integer id:{k} not smaller than id:{start} such that id:{k} + id:{searchLen} is not greater than id:{len} , and for all nonnegative integers id:{j} less than id:{searchLen} , the code unit at index id:{k} + id:{j} within id:{S} is the same as the code unit at index id:{j} within id:{searchStr} ; but if there is no such integer id:{k} , return the value - 1 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12983 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12990 -> node12991 [ color="black"]
  node12985 -> node12986 [ color="black"]
  node12995 -> node12982 [ color="black"]
  node12988 -> node12989 [ color="black"]
  node12989 -> node12990 [ color="black"]
  node12984 -> node12985 [ color="black"]
  node12994 -> node12995 [ color="black"]
  node12986 -> node12987 [ color="black"]
  node12987 -> node12988 [ color="black"]
  node12992 -> node12993 [ color="black"]
  node12983 -> node12984 [ color="black"]
  node12993 -> node12994 [ color="black"]
  node12981 -> node12983 [ color="black"]
  node12991 -> node12992 [ color="black"]
}
