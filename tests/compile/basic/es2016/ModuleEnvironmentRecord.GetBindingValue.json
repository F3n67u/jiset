["Let", {
  "id": "envRec"
}, "be", "the", "module", "Environment", "Record", "for", "which", "the", "method", "was", "invoked", ".", {
  "k": 0
}, "Assert", ":", {
  "id": "envRec"
}, "has", "a", "binding", "for", {
  "id": "N"
}, ".", {
  "k": 1
}, "If", "the", "binding", "for", {
  "id": "N"
}, "is", "an", "indirect", "binding", ",", "then", true, "Let", {
  "id": "M"
}, "and", {
  "id": "N2"
}, "be", "the", "indirection", "values", "provided", "when", "this", "binding", "for", {
  "id": "N"
}, "was", "created", ".", {
  "k": 3
}, "Let", {
  "id": "targetEnv"
}, "be", {
  "id": "M"
}, ".", "[", "[", "Environment", "]", "]", ".", {
  "k": 4
}, "If", {
  "id": "targetEnv"
}, "is", {
  "value": "undefined"
}, ",", "throw", "a", {
  "value": "ReferenceError"
}, "exception", ".", {
  "k": 5
}, "Let", {
  "id": "targetER"
}, "be", {
  "id": "targetEnv"
}, "'", "s", "EnvironmentRecord", ".", {
  "k": 6
}, "Return", "?", {
  "id": "targetER"
}, ".", "GetBindingValue", "(", {
  "id": "N2"
}, ",", {
  "id": "S"
}, ")", ".", {
  "k": 7
}, false, {
  "k": 2
}, "If", "the", "binding", "for", {
  "id": "N"
}, "in", {
  "id": "envRec"
}, "is", "an", "uninitialized", "binding", ",", "throw", "a", {
  "value": "ReferenceError"
}, "exception", ".", {
  "k": 8
}, "Return", "the", "value", "currently", "bound", "to", {
  "id": "N"
}, "in", {
  "id": "envRec"
}, ".", {
  "k": 9
}]