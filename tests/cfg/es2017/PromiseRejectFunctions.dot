digraph {
  node16304 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16300 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16301 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16302 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promise = F.Promise</td></tr>
      <tr><td align="left">2:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16306 [shape=cds, label=<<font color="black">5:app __x0__ = (RejectPromise promise reason)</font>> color="black" fillcolor="white" style=filled]
  node16305 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16303 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node16300 -> node16302 [ color="black"]
  node16307 -> node16301 [ color="black"]
  node16304 -> node16305 [ color="black"]
  node16305 -> node16306 [ color="black"]
  node16306 -> node16307 [ color="black"]
  node16302 -> node16303 [ color="black"]
  node16303 -> node16304 [label=<<font color="black">true</font>> color="black"]
  node16303 -> node16305 [label=<<font color="black">false</font>> color="black"]
}
