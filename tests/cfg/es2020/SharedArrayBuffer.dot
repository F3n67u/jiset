digraph {
  node17509 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17503 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17504 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17510 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateSharedArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17507 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17505 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17508 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node17506 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17503 -> node17505 [ color="black"]
  node17511 -> node17504 [ color="black"]
  node17509 -> node17510 [ color="black"]
  node17506 -> node17507 [label=<<font color="black">true</font>> color="black"]
  node17506 -> node17508 [label=<<font color="black">false</font>> color="black"]
  node17508 -> node17509 [ color="black"]
  node17510 -> node17511 [ color="black"]
  node17505 -> node17506 [ color="black"]
  node17507 -> node17508 [ color="black"]
}
