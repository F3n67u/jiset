digraph {
  node2512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let length = O.ArrayLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2516 [shape=cds, label=<<font color="black">13:app __x3__ = (GetValueFromBuffer buffer indexedPosition elementType)</font>> color="black" fillcolor="white" style=filled]
  node2501 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2508 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node2514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2510 [shape=diamond, label=<<font color="black">(== index -0.0)</font>> color="black" fillcolor="white" style=filled]
  node2506 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2503 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Number)</td></tr>
      <tr><td align="left">2:let buffer = O.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2513 [shape=diamond, label=<<font color="black">(|| (&lt; index 0i) (! (&lt; index length)))</font>> color="black" fillcolor="white" style=filled]
  node2517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2515 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let offset = O.ByteOffset</td></tr>
      <tr><td align="left">9:let arrayTypeName = O.TypedArrayName</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">11:let indexedPosition = (+ (* index elementSize) offset)</td></tr>
      <tr><td align="left">12:??? &quot;Let id:{elementType} be the String value of the Element Type value in link:{unhandled: table-49} for id:{arrayTypeName} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2509 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2504 [shape=cds, label=<<font color="black">3:app __x1__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node2505 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node2500 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2502 [shape=cds, label=<<font color="black">0:app __x0__ = (Type index)</font>> color="black" fillcolor="white" style=filled]
  node2507 [shape=cds, label=<<font color="black">4:app __x2__ = (IsInteger index)</font>> color="black" fillcolor="white" style=filled]
  node2513 -> node2514 [label=<<font color="black">true</font>> color="black"]
  node2513 -> node2515 [label=<<font color="black">false</font>> color="black"]
  node2517 -> node2501 [ color="black"]
  node2510 -> node2511 [label=<<font color="black">true</font>> color="black"]
  node2510 -> node2512 [label=<<font color="black">false</font>> color="black"]
  node2506 -> node2507 [ color="black"]
  node2505 -> node2506 [label=<<font color="black">true</font>> color="black"]
  node2505 -> node2507 [label=<<font color="black">false</font>> color="black"]
  node2516 -> node2517 [ color="black"]
  node2503 -> node2504 [ color="black"]
  node2509 -> node2510 [ color="black"]
  node2507 -> node2508 [ color="black"]
  node2502 -> node2503 [ color="black"]
  node2500 -> node2502 [ color="black"]
  node2512 -> node2513 [ color="black"]
  node2504 -> node2505 [ color="black"]
  node2508 -> node2509 [label=<<font color="black">true</font>> color="black"]
  node2508 -> node2510 [label=<<font color="black">false</font>> color="black"]
  node2515 -> node2516 [ color="black"]
  node2514 -> node2515 [ color="black"]
  node2511 -> node2512 [ color="black"]
}
