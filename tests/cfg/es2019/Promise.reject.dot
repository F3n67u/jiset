digraph {
  node17734 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17739 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17737 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17736 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17740 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node17738 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17742 [shape=cds, label=<<font color="black">3:app __x2__ = (Call promiseCapability.Reject undefined (new [r]))</font>> color="black" fillcolor="white" style=filled]
  node17735 [shape=cds, label=<<font color="black">app r = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17733 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17743 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? __x2__]</td></tr>
      <tr><td align="left">4:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17735 -> node17736 [ color="black"]
  node17742 -> node17743 [ color="black"]
  node17733 -> node17735 [ color="black"]
  node17740 -> node17741 [ color="black"]
  node17741 -> node17742 [ color="black"]
  node17737 -> node17738 [ color="black"]
  node17739 -> node17740 [ color="black"]
  node17743 -> node17734 [ color="black"]
  node17738 -> node17739 [label=<<font color="black">true</font>> color="black"]
  node17738 -> node17740 [label=<<font color="black">false</font>> color="black"]
  node17736 -> node17737 [ color="black"]
}
