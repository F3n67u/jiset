{
  app __x0__ = (ToObject target)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let to = __x0__
  if (= argumentsList.length 1i) {
    app __x1__ = (WrapCompletion to)
    return __x1__
  } else {}
  let __x2__ = sources
  let __x3__ = 0i
  while (< __x3__ __x2__.length) {
    let nextSource = __x2__[__x3__]
    if (! (|| (= nextSource undefined) (= nextSource null))) {
      app __x4__ = (ToObject nextSource)
      if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
      let from = __x4__
      app __x5__ = (from.OwnPropertyKeys from)
      if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
      let keys = __x5__
      let __x6__ = keys
      let __x7__ = 0i
      while (< __x7__ __x6__.length) {
        let nextKey = __x6__[__x7__]
        app __x8__ = (from.GetOwnProperty from nextKey)
        if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
        let desc = __x8__
        if (&& (! (= desc undefined)) (= desc.Enumerable true)) {
          app __x9__ = (Get from nextKey)
          if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
          let propValue = __x9__
          app __x10__ = (Set to nextKey propValue true)
          if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
          __x10__
        } else {}
        __x7__ = (+ __x7__ 1i)
      }
    } else {}
    __x3__ = (+ __x3__ 1i)
  }
  app __x11__ = (WrapCompletion to)
  return __x11__
}