digraph {
  node10350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10306 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10320 [shape=cds, label=<<font color="black">11:app __x6__ = (HostResolveImportedModule module in.ModuleRequest)</font>> color="black" fillcolor="white" style=filled]
  node10312 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10319 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let in = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10363 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:[! __x27__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10331 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10314 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= (typeof resolution) &quot;ResolvedBindingRecord&quot;)</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10358 [shape=diamond, label=<<font color="black">(&lt; __x25__ __x24__.length)</font>> color="black" fillcolor="white" style=filled]
  node10346 [shape=cds, label=<<font color="black">27:app __x18__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10341 [shape=cds, label=<<font color="black">25:access __x15__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10351 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x14__ = (+ __x14__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10368 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:let fo = __x29__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10336 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let code = module.ECMAScriptCode</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10326 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:[! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10305 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10356 [shape=cds, label=<<font color="black">32:access __x23__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10337 [shape=cds, label=<<font color="black">22:access __x12__ = (code &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10309 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10324 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let namespace = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10313 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10362 [shape=cds, label=<<font color="black">34:app __x27__ = (envRec.CreateImmutableBinding envRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node10345 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames dn))</font>> color="black" fillcolor="white" style=filled]
  node10330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let resolution = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10369 [shape=cds, label=<<font color="black">39:app __x30__ = (envRec.InitializeBinding envRec dn fo)</font>> color="black" fillcolor="white" style=filled]
  node10367 [shape=cds, label=<<font color="black">38:access __x29__ = (d &quot;InstantiateFunctionObject&quot; env)</font>> color="black" fillcolor="white" style=filled]
  node10335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10318 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node10342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let __x16__ = __x15__</td></tr>
      <tr><td align="left">25:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10353 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let lexDeclarations = __x20__</td></tr>
      <tr><td align="left">31:let __x21__ = lexDeclarations</td></tr>
      <tr><td align="left">31:let __x22__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10349 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:__x19__</td></tr>
      <tr><td align="left">29:append dn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10366 [shape=diamond, label=<<font color="black">(|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</font>> color="black" fillcolor="white" style=filled]
  node10338 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let varDeclarations = __x12__</td></tr>
      <tr><td align="left">23:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">24:let __x13__ = varDeclarations</td></tr>
      <tr><td align="left">24:let __x14__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10359 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x24__[__x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10310 [shape=cds, label=<<font color="black">1:app __x2__ = (module.ResolveExport module e.ExportName (new []))</font>> color="black" fillcolor="white" style=filled]
  node10327 [shape=cds, label=<<font color="black">16:app __x9__ = (envRec.InitializeBinding envRec in.LocalName namespace)</font>> color="black" fillcolor="white" style=filled]
  node10321 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let importedModule = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10334 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:__x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10329 [shape=cds, label=<<font color="black">18:app __x10__ = (importedModule.ResolveExport importedModule in.ImportName (new []))</font>> color="black" fillcolor="white" style=filled]
  node10348 [shape=cds, label=<<font color="black">28:app __x19__ = (envRec.InitializeBinding envRec dn undefined)</font>> color="black" fillcolor="white" style=filled]
  node10361 [shape=diamond, label=<<font color="black">(= __x26__ true)</font>> color="black" fillcolor="white" style=filled]
  node10370 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:__x30__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10317 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let env = __x3__</td></tr>
      <tr><td align="left">8:module.Environment = env</td></tr>
      <tr><td align="left">9:let envRec = env.EnvironmentRecord</td></tr>
      <tr><td align="left">10:let __x4__ = module.ImportEntries</td></tr>
      <tr><td align="left">10:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10316 [shape=cds, label=<<font color="black">7:app __x3__ = (NewModuleEnvironment realm.GlobalEnv)</font>> color="black" fillcolor="white" style=filled]
  node10354 [shape=diamond, label=<<font color="black">(&lt; __x22__ __x21__.length)</font>> color="black" fillcolor="white" style=filled]
  node10339 [shape=diamond, label=<<font color="black">(&lt; __x14__ __x13__.length)</font>> color="black" fillcolor="white" style=filled]
  node10311 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let resolution = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10322 [shape=diamond, label=<<font color="black">(= in.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x25__ = (+ __x25__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10333 [shape=cds, label=<<font color="black">20:app __x11__ = (envRec.CreateImportBinding envRec in.LocalName resolution.Module resolution.BindingName)</font>> color="black" fillcolor="white" style=filled]
  node10307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = module.IndirectExportEntries</td></tr>
      <tr><td align="left">0:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10328 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:__x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10360 [shape=cds, label=<<font color="black">35:access __x26__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10365 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:[! __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10343 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node10332 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10364 [shape=cds, label=<<font color="black">36:app __x28__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10347 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:[! __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10352 [shape=cds, label=<<font color="black">30:access __x20__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10325 [shape=cds, label=<<font color="black">15:app __x8__ = (envRec.CreateImmutableBinding envRec in.LocalName true)</font>> color="black" fillcolor="white" style=filled]
  node10315 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let realm = module.Realm</td></tr>
      <tr><td align="left">6:assert (! (= realm undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10357 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let __x24__ = __x23__</td></tr>
      <tr><td align="left">32:let __x25__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10340 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x13__[__x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x21__[__x22__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10308 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node10323 [shape=cds, label=<<font color="black">14:app __x7__ = (GetModuleNamespace importedModule)</font>> color="black" fillcolor="white" style=filled]
  node10372 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x22__ = (+ __x22__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10344 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10342 -> node10343 [ color="black"]
  node10307 -> node10308 [ color="black"]
  node10345 -> node10346 [label=<<font color="black">true</font>> color="black"]
  node10345 -> node10350 [label=<<font color="black">false</font>> color="black"]
  node10313 -> node10314 [ color="black"]
  node10326 -> node10327 [ color="black"]
  node10353 -> node10354 [ color="black"]
  node10330 -> node10331 [ color="black"]
  node10322 -> node10323 [label=<<font color="black">true</font>> color="black"]
  node10322 -> node10329 [label=<<font color="black">false</font>> color="black"]
  node10340 -> node10341 [ color="black"]
  node10341 -> node10342 [ color="black"]
  node10343 -> node10344 [label=<<font color="black">true</font>> color="black"]
  node10343 -> node10351 [label=<<font color="black">false</font>> color="black"]
  node10310 -> node10311 [ color="black"]
  node10337 -> node10338 [ color="black"]
  node10328 -> node10335 [ color="black"]
  node10356 -> node10357 [ color="black"]
  node10368 -> node10369 [ color="black"]
  node10357 -> node10358 [ color="black"]
  node10363 -> node10366 [ color="black"]
  node10358 -> node10359 [label=<<font color="black">true</font>> color="black"]
  node10358 -> node10372 [label=<<font color="black">false</font>> color="black"]
  node10344 -> node10345 [ color="black"]
  node10364 -> node10365 [ color="black"]
  node10350 -> node10343 [ color="black"]
  node10318 -> node10319 [label=<<font color="black">true</font>> color="black"]
  node10318 -> node10336 [label=<<font color="black">false</font>> color="black"]
  node10366 -> node10367 [label=<<font color="black">true</font>> color="black"]
  node10366 -> node10371 [label=<<font color="black">false</font>> color="black"]
  node10361 -> node10362 [label=<<font color="black">true</font>> color="black"]
  node10361 -> node10364 [label=<<font color="black">false</font>> color="black"]
  node10329 -> node10330 [ color="black"]
  node10332 -> node10333 [ color="black"]
  node10334 -> node10335 [ color="black"]
  node10336 -> node10337 [ color="black"]
  node10371 -> node10358 [ color="black"]
  node10314 -> node10308 [ color="black"]
  node10335 -> node10318 [ color="black"]
  node10348 -> node10349 [ color="black"]
  node10324 -> node10325 [ color="black"]
  node10351 -> node10339 [ color="black"]
  node10308 -> node10309 [label=<<font color="black">true</font>> color="black"]
  node10308 -> node10315 [label=<<font color="black">false</font>> color="black"]
  node10365 -> node10366 [ color="black"]
  node10323 -> node10324 [ color="black"]
  node10333 -> node10334 [ color="black"]
  node10320 -> node10321 [ color="black"]
  node10319 -> node10320 [ color="black"]
  node10372 -> node10354 [ color="black"]
  node10321 -> node10322 [ color="black"]
  node10316 -> node10317 [ color="black"]
  node10331 -> node10332 [label=<<font color="black">true</font>> color="black"]
  node10331 -> node10333 [label=<<font color="black">false</font>> color="black"]
  node10327 -> node10328 [ color="black"]
  node10354 -> node10355 [label=<<font color="black">true</font>> color="black"]
  node10354 -> node10306 [label=<<font color="black">false</font>> color="black"]
  node10305 -> node10307 [ color="black"]
  node10367 -> node10368 [ color="black"]
  node10352 -> node10353 [ color="black"]
  node10369 -> node10370 [ color="black"]
  node10309 -> node10310 [ color="black"]
  node10317 -> node10318 [ color="black"]
  node10346 -> node10347 [ color="black"]
  node10355 -> node10356 [ color="black"]
  node10349 -> node10350 [ color="black"]
  node10360 -> node10361 [ color="black"]
  node10359 -> node10360 [ color="black"]
  node10315 -> node10316 [ color="black"]
  node10370 -> node10371 [ color="black"]
  node10311 -> node10312 [ color="black"]
  node10362 -> node10363 [ color="black"]
  node10339 -> node10340 [label=<<font color="black">true</font>> color="black"]
  node10339 -> node10352 [label=<<font color="black">false</font>> color="black"]
  node10338 -> node10339 [ color="black"]
  node10325 -> node10326 [ color="black"]
  node10312 -> node10313 [label=<<font color="black">true</font>> color="black"]
  node10312 -> node10314 [label=<<font color="black">false</font>> color="black"]
  node10347 -> node10348 [ color="black"]
}
