digraph {
  node16730 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:assert (! (= typedArray.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">9:let buffer = typedArray.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16725 [shape=diamond, label=<<font color="black">(= onlyInt32 true)</font>> color="black" fillcolor="white" style=filled]
  node16729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16719 [shape=cds, label=<<font color="black">1:app __x0__ = (Type typedArray)</font>> color="black" fillcolor="white" style=filled]
  node16715 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16722 [shape=diamond, label=<<font color="black">(= typedArray.TypedArrayName absent)</font>> color="black" fillcolor="white" style=filled]
  node16726 [shape=diamond, label=<<font color="black">(! (= typeName &quot;Int32Array&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16723 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16731 [shape=cds, label=<<font color="black">10:app __x1__ = (IsSharedArrayBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16727 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16728 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (|| (|| (= typeName &quot;Int8Array&quot;) (= typeName &quot;Uint8Array&quot;)) (= typeName &quot;Int16Array&quot;)) (= typeName &quot;Uint16Array&quot;)) (= typeName &quot;Int32Array&quot;)) (= typeName &quot;Uint32Array&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node16724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let typeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16733 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16720 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16721 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16716 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16718 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onlyInt32 = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16732 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16734 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return buffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16717 [shape=diamond, label=<<font color="black">(= onlyInt32 absent)</font>> color="black" fillcolor="white" style=filled]
  node16734 -> node16716 [ color="black"]
  node16725 -> node16726 [label=<<font color="black">true</font>> color="black"]
  node16725 -> node16728 [label=<<font color="black">false</font>> color="black"]
  node16720 -> node16721 [label=<<font color="black">true</font>> color="black"]
  node16720 -> node16722 [label=<<font color="black">false</font>> color="black"]
  node16727 -> node16730 [ color="black"]
  node16728 -> node16729 [label=<<font color="black">true</font>> color="black"]
  node16728 -> node16730 [label=<<font color="black">false</font>> color="black"]
  node16721 -> node16722 [ color="black"]
  node16722 -> node16723 [label=<<font color="black">true</font>> color="black"]
  node16722 -> node16724 [label=<<font color="black">false</font>> color="black"]
  node16717 -> node16718 [label=<<font color="black">true</font>> color="black"]
  node16717 -> node16719 [label=<<font color="black">false</font>> color="black"]
  node16724 -> node16725 [ color="black"]
  node16733 -> node16734 [ color="black"]
  node16715 -> node16717 [ color="black"]
  node16729 -> node16730 [ color="black"]
  node16730 -> node16731 [ color="black"]
  node16719 -> node16720 [ color="black"]
  node16723 -> node16724 [ color="black"]
  node16732 -> node16733 [label=<<font color="black">true</font>> color="black"]
  node16732 -> node16734 [label=<<font color="black">false</font>> color="black"]
  node16731 -> node16732 [ color="black"]
  node16718 -> node16719 [ color="black"]
  node16726 -> node16727 [label=<<font color="black">true</font>> color="black"]
  node16726 -> node16730 [label=<<font color="black">false</font>> color="black"]
}
