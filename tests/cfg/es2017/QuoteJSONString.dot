digraph {
  node16459 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:product = (+ product &quot;\\&quot;)</td></tr>
      <tr><td align="left">4:product = (+ product C)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16456 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node16463 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">60:product = (+ product &quot;\&quot;&quot;)</td></tr>
      <tr><td align="left">61:return product</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16460 [shape=diamond, label=<<font color="black">(|| (|| (|| (|| (= C &quot;\b&quot;) (= C &quot;&quot;)) (= C &quot;\n&quot;)) (= C &quot;&quot;)) (= C &quot;	&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16455 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let product = &quot;\&quot;&quot;</td></tr>
      <tr><td align="left">1:let __x0__ = value</td></tr>
      <tr><td align="left">1:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16454 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16457 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16461 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:product = (+ product &quot;\\&quot;)</td></tr>
      <tr><td align="left">7:??? &quot;Let id:{abbrev} be the String value corresponding to the value of id:{C} as follows : in:{} out:{}&quot;</td></tr>
      <tr><td align="left">52:product = (+ product abbrev)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16453 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16458 [shape=diamond, label=<<font color="black">(|| (= C &quot;\&quot;&quot;) (= C &quot;\\&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16462 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:??? &quot;Else if id:{C} has a code unit value less than 0x0020 ( SPACE ) , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">58:??? &quot;Else , in:{} out:{}&quot;</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16460 -> node16461 [label=<<font color="black">true</font>> color="black"]
  node16460 -> node16462 [label=<<font color="black">false</font>> color="black"]
  node16462 -> node16456 [ color="black"]
  node16456 -> node16457 [label=<<font color="black">true</font>> color="black"]
  node16456 -> node16463 [label=<<font color="black">false</font>> color="black"]
  node16458 -> node16459 [label=<<font color="black">true</font>> color="black"]
  node16458 -> node16460 [label=<<font color="black">false</font>> color="black"]
  node16457 -> node16458 [ color="black"]
  node16455 -> node16456 [ color="black"]
  node16453 -> node16455 [ color="black"]
  node16463 -> node16454 [ color="black"]
  node16459 -> node16462 [ color="black"]
  node16461 -> node16462 [ color="black"]
}
