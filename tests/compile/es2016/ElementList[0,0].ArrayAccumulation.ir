{
  [0] if (= Elision absent) let padding = 0i else {
    access __x0__ = (Elision "ElisionWidth")
    let padding = __x0__
  }
  [1] access __x1__ = (AssignmentExpression "Evaluation")
  [1] let initResult = __x1__
  [2] app __x2__ = (GetValue initResult)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [11] {}
  [2] let initValue = __x2__
  [3] app __x3__ = (ToUint32 (+ nextIndex padding))
  [3] app __x4__ = (ToString __x3__)
  [3] app __x5__ = (CreateDataProperty array __x4__ initValue)
  [3] let created = __x5__
  [4] assert (= created true)
  [5] app __x6__ = (WrapCompletion (+ (+ nextIndex padding) 1i))
  [5] return __x6__
}