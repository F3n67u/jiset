digraph {
  node18033 [shape=cds, label=<<font color="black">2:app __x0__ = (AtomicReadModifyWrite typedArray index value second)</font>> color="black" fillcolor="white" style=filled]
  node18030 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18031 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18027 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18028 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18032 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{second} be a new read - modify - write modification function with parameters ( id:{oldBytes} , id:{newBytes} ) that captures nothing and performs the following steps atomically when called : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18034 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18029 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18029 -> node18030 [ color="black"]
  node18034 -> node18028 [ color="black"]
  node18031 -> node18032 [ color="black"]
  node18030 -> node18031 [ color="black"]
  node18032 -> node18033 [ color="black"]
  node18027 -> node18029 [ color="black"]
  node18033 -> node18034 [ color="black"]
}
