{"kind":"Method","lang":true,"params":["C","x"],"steps":[{"tokens":["Assert",":","Type","(",{"id":"C"},")","is","Object","."]},{"tokens":["If","IsPromise","(",{"id":"x"},")","is",{"value":"true"},",","then",{"steps":[{"tokens":["Let",{"id":"xConstructor"},"be","?","Get","(",{"id":"x"},",",{"code":"\"constructor\""},")","."]},{"tokens":["If","SameValue","(",{"id":"xConstructor"},",",{"id":"C"},")","is",{"value":"true"},",","return",{"id":"x"},"."]}]}]},{"tokens":["Let",{"id":"promiseCapability"},"be","?","NewPromiseCapability","(",{"id":"C"},")","."]},{"tokens":["Perform","?","Call","(",{"id":"promiseCapability"},".","[","[","Resolve","]","]",",",{"value":"undefined"},",","«",{"id":"x"},"»",")","."]},{"tokens":["Return",{"id":"promiseCapability"},".","[","[","Promise","]","]","."]}],"length":2,"filename":"es2019/algorithm/PromiseResolve.json"}