digraph {
  node16533 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16540 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16534 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16537 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node16532 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16535 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16538 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16539 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateSharedArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node16538 -> node16539 [ color="black"]
  node16534 -> node16535 [ color="black"]
  node16532 -> node16534 [ color="black"]
  node16540 -> node16533 [ color="black"]
  node16539 -> node16540 [ color="black"]
  node16535 -> node16536 [label=<<font color="black">true</font>> color="black"]
  node16535 -> node16537 [label=<<font color="black">false</font>> color="black"]
  node16537 -> node16538 [ color="black"]
  node16536 -> node16537 [ color="black"]
}
