digraph {
  node12189 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12172 [shape=cds, label=<<font color="black">4:app __x4__ = (ToLength [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node12161 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12180 [shape=cds, label=<<font color="black">10:app __x6__ = (Get raw nextKey)</font>> color="black" fillcolor="white" style=filled]
  node12185 [shape=diamond, label=<<font color="black">(== (+ nextIndex 1i) literalSegments)</font>> color="black" fillcolor="white" style=filled]
  node12169 [shape=cds, label=<<font color="black">3:app __x2__ = (ToObject [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node12190 [shape=cds, label=<<font color="black">16:app __x11__ = (ToString next)</font>> color="black" fillcolor="white" style=filled]
  node12179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextKey = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12167 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let cooked = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextSeg = [? __x7__]</td></tr>
      <tr><td align="left">11:let __x8__ = nextSeg</td></tr>
      <tr><td align="left">11:let __x9__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12174 [shape=diamond, label=<<font color="black">(! (&lt; 0i literalSegments))</font>> color="black" fillcolor="white" style=filled]
  node12166 [shape=cds, label=<<font color="black">2:app __x0__ = (ToObject template)</font>> color="black" fillcolor="white" style=filled]
  node12162 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12188 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = substitutions[nextIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12193 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x14__ = __x12__[__x13__]</td></tr>
      <tr><td align="left">append __x14__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x13__ = (+ __x13__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12165 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{substitutions} be a List consisting of all of the arguments passed to this function , starting with the second argument . If fewer than two arguments were passed , the List is empty .&quot;</td></tr>
      <tr><td align="left">1:let numberOfSubstitutions = substitutions.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12164 [shape=cds, label=<<font color="black">app substitutions = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12191 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextSub = [? __x11__]</td></tr>
      <tr><td align="left">17:let __x12__ = nextSub</td></tr>
      <tr><td align="left">17:let __x13__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12183 [shape=diamond, label=<<font color="black">(&lt; __x9__ __x8__.length)</font>> color="black" fillcolor="white" style=filled]
  node12173 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let literalSegments = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12168 [shape=cds, label=<<font color="black">3:app __x1__ = (Get cooked &quot;raw&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12186 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return the String value whose code units are , in order , the elements in the List id:{stringElements} . If id:{stringElements} has no elements , the empty string is returned .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12170 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let raw = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x10__ = __x8__[__x9__]</td></tr>
      <tr><td align="left">append __x10__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x9__ = (+ __x9__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12178 [shape=cds, label=<<font color="black">9:app __x5__ = (ToString nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node12192 [shape=diamond, label=<<font color="black">(&lt; __x13__ __x12__.length)</font>> color="black" fillcolor="white" style=filled]
  node12187 [shape=diamond, label=<<font color="black">(&lt; nextIndex numberOfSubstitutions)</font>> color="black" fillcolor="white" style=filled]
  node12163 [shape=cds, label=<<font color="black">app template = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12181 [shape=cds, label=<<font color="black">10:app __x7__ = (ToString [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node12176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let stringElements = (new [])</td></tr>
      <tr><td align="left">7:let nextIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12194 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let nextIndex = (+ nextIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12171 [shape=cds, label=<<font color="black">4:app __x3__ = (Get raw &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12177 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node12175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12183 -> node12184 [label=<<font color="black">true</font>> color="black"]
  node12183 -> node12185 [label=<<font color="black">false</font>> color="black"]
  node12161 -> node12163 [ color="black"]
  node12186 -> node12187 [ color="black"]
  node12187 -> node12188 [label=<<font color="black">true</font>> color="black"]
  node12187 -> node12189 [label=<<font color="black">false</font>> color="black"]
  node12171 -> node12172 [ color="black"]
  node12194 -> node12177 [ color="black"]
  node12169 -> node12170 [ color="black"]
  node12177 -> node12178 [label=<<font color="black">true</font>> color="black"]
  node12177 -> node12162 [label=<<font color="black">false</font>> color="black"]
  node12167 -> node12168 [ color="black"]
  node12182 -> node12183 [ color="black"]
  node12165 -> node12166 [ color="black"]
  node12191 -> node12192 [ color="black"]
  node12170 -> node12171 [ color="black"]
  node12172 -> node12173 [ color="black"]
  node12179 -> node12180 [ color="black"]
  node12174 -> node12175 [label=<<font color="black">true</font>> color="black"]
  node12174 -> node12176 [label=<<font color="black">false</font>> color="black"]
  node12193 -> node12192 [ color="black"]
  node12166 -> node12167 [ color="black"]
  node12189 -> node12190 [ color="black"]
  node12190 -> node12191 [ color="black"]
  node12188 -> node12190 [ color="black"]
  node12192 -> node12193 [label=<<font color="black">true</font>> color="black"]
  node12192 -> node12194 [label=<<font color="black">false</font>> color="black"]
  node12173 -> node12174 [ color="black"]
  node12175 -> node12176 [ color="black"]
  node12181 -> node12182 [ color="black"]
  node12178 -> node12179 [ color="black"]
  node12163 -> node12164 [ color="black"]
  node12185 -> node12186 [label=<<font color="black">true</font>> color="black"]
  node12185 -> node12187 [label=<<font color="black">false</font>> color="black"]
  node12168 -> node12169 [ color="black"]
  node12176 -> node12177 [ color="black"]
  node12164 -> node12165 [ color="black"]
  node12180 -> node12181 [ color="black"]
  node12184 -> node12183 [ color="black"]
}
