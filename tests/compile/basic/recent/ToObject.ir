{
  if (= (typeof argument) Undefined) throw TypeError else {}
  if (= (typeof argument) Null) throw TypeError else {}
  if (= (typeof argument) Boolean) {
    let obj = (new OrdinaryObject("Prototype" -> INTRINSIC_Boolean_prototype, "BooleanData" -> argument))
    return obj
  } else {}
  if (= (typeof argument) Number) {
    let obj = (new OrdinaryObject("Prototype" -> INTRINSIC_Number_prototype, "NumberData" -> argument))
    return obj
  } else {}
  if (= (typeof argument) String) {
    let obj = (new StringExoticObject("Prototype" -> INTRINSIC_String_prototype, "StringData" -> argument))
    return obj
  } else {}
  if (= (typeof argument) Symbol) {
    let obj = (new OrdinaryObject("Prototype" -> INTRINSIC_Symbol_prototype, "SymbolData" -> argument))
    return obj
  } else {}
  if (= (typeof argument) BigInt) {
    let obj = (new OrdinaryObject("Prototype" -> INTRINSIC_BigInt_prototype, "BigIntData" -> argument))
    return obj
  } else {}
  if (= (typeof argument) Object) return argument else {}
  assert false
}