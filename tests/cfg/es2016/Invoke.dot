digraph {
  node877 [shape=cds, label=<<font color="black">2:app __x1__ = (GetV V P)</font>> color="black" fillcolor="white" style=filled]
  node879 [shape=cds, label=<<font color="black">3:app __x2__ = (Call func V argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node875 [shape=diamond, label=<<font color="black">(= argumentsList absent)</font>> color="black" fillcolor="white" style=filled]
  node880 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node872 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let argumentsList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node871 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node873 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node878 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let func = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node875 -> node876 [label=<<font color="black">true</font>> color="black"]
  node875 -> node877 [label=<<font color="black">false</font>> color="black"]
  node873 -> node874 [ color="black"]
  node871 -> node873 [ color="black"]
  node878 -> node879 [ color="black"]
  node877 -> node878 [ color="black"]
  node879 -> node880 [ color="black"]
  node876 -> node877 [ color="black"]
  node874 -> node875 [ color="black"]
  node880 -> node872 [ color="black"]
}
