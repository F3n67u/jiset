digraph {
  node18482 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node18496 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">10:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18486 [shape=cds, label=<<font color="black">4:app __x1__ = (CreateBuiltinFunction steps (new [&quot;Capability&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18492 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18493 [shape=cds, label=<<font color="black">8:app __x4__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node18481 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18480 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = (new PromiseCapability(&quot;Promise&quot; -&gt; undefined, &quot;Resolve&quot; -&gt; undefined, &quot;Reject&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:let steps = GetCapabilitiesExecutorFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18489 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let promise = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18494 [shape=diamond, label=<<font color="black">(= __x4__ false)</font>> color="black" fillcolor="white" style=filled]
  node18490 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node18488 [shape=cds, label=<<font color="black">6:app __x2__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node18495 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18483 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node18491 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node18484 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18487 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let executor = [! __x1__]</td></tr>
      <tr><td align="left">5:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18486 -> node18487 [ color="black"]
  node18487 -> node18488 [ color="black"]
  node18492 -> node18493 [ color="black"]
  node18480 -> node18482 [ color="black"]
  node18495 -> node18496 [ color="black"]
  node18494 -> node18495 [label=<<font color="black">true</font>> color="black"]
  node18494 -> node18496 [label=<<font color="black">false</font>> color="black"]
  node18491 -> node18492 [label=<<font color="black">true</font>> color="black"]
  node18491 -> node18493 [label=<<font color="black">false</font>> color="black"]
  node18496 -> node18481 [ color="black"]
  node18482 -> node18483 [ color="black"]
  node18484 -> node18485 [ color="black"]
  node18493 -> node18494 [ color="black"]
  node18485 -> node18486 [ color="black"]
  node18490 -> node18491 [ color="black"]
  node18488 -> node18489 [ color="black"]
  node18489 -> node18490 [ color="black"]
  node18483 -> node18484 [label=<<font color="black">true</font>> color="black"]
  node18483 -> node18485 [label=<<font color="black">false</font>> color="black"]
}
