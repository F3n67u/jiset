digraph {
  node15490 [shape=diamond, label=<<font color="black">(&amp;&amp; (= isTypedArray true) (|| (|| (|| (|| (|| (= type &quot;Int8&quot;) (= type &quot;Uint8&quot;)) (= type &quot;Int16&quot;)) (= type &quot;Uint16&quot;)) (= type &quot;Int32&quot;)) (= type &quot;Uint32&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node15482 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Number)</td></tr>
      <tr><td align="left">4:let block = arrayBuffer.ArrayBufferData</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15477 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15494 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:??? &quot;Else , store the individual bytes of id:{rawBytes} into id:{block} , in order , starting at id:{block} [ id:{byteIndex} ] .&quot;</td></tr>
      <tr><td align="left">14:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15491 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15481 [shape=cds, label=<<font color="black">3:app __x1__ = (Type value)</font>> color="black" fillcolor="white" style=filled]
  node15478 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15485 [shape=cds, label=<<font color="black">7:app __x2__ = (NumberToRawBytes type value isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15492 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15487 [shape=cds, label=<<font color="black">8:app __x3__ = (IsSharedArrayBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node15479 [shape=cds, label=<<font color="black">0:app __x0__ = (IsDetachedBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node15483 [shape=diamond, label=<<font color="black">(= isLittleEndian absent)</font>> color="black" fillcolor="white" style=filled]
  node15480 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15493 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:append (new WriteSharedMemory(&quot;Order&quot; -&gt; order, &quot;NoTear&quot; -&gt; noTear, &quot;Block&quot; -&gt; block, &quot;ByteIndex&quot; -&gt; byteIndex, &quot;ElementSize&quot; -&gt; elementSize, &quot;Payload&quot; -&gt; rawBytes)) -&gt; eventList</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15484 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">isLittleEndian = GLOBAL_agent.LittleEndian</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15489 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let execution = GLOBAL_agent.CandidateExecution</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{eventList} be the [ [ EventList ] ] field of the element in id:{execution} . [ [ EventLists ] ] whose [ [ AgentSignifier ] ] is AgentSignifier ( ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15486 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rawBytes = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15488 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node15492 -> node15493 [ color="black"]
  node15494 -> node15478 [ color="black"]
  node15480 -> node15481 [ color="black"]
  node15485 -> node15486 [ color="black"]
  node15493 -> node15494 [ color="black"]
  node15484 -> node15485 [ color="black"]
  node15491 -> node15493 [ color="black"]
  node15486 -> node15487 [ color="black"]
  node15487 -> node15488 [ color="black"]
  node15489 -> node15490 [ color="black"]
  node15482 -> node15483 [ color="black"]
  node15483 -> node15484 [label=<<font color="black">true</font>> color="black"]
  node15483 -> node15485 [label=<<font color="black">false</font>> color="black"]
  node15479 -> node15480 [ color="black"]
  node15477 -> node15479 [ color="black"]
  node15481 -> node15482 [ color="black"]
  node15488 -> node15489 [label=<<font color="black">true</font>> color="black"]
  node15488 -> node15494 [label=<<font color="black">false</font>> color="black"]
  node15490 -> node15491 [label=<<font color="black">true</font>> color="black"]
  node15490 -> node15492 [label=<<font color="black">false</font>> color="black"]
}
