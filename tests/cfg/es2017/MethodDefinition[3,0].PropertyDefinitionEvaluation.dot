digraph {
  node8353 [shape=cds, label=<<font color="black">5:app __x1__ = (FunctionCreate CONST_Method formalParameterList FunctionBody scope strict)</font>> color="black" fillcolor="white" style=filled]
  node8357 [shape=cds, label=<<font color="black">7:app __x3__ = (SetFunctionName closure propKey &quot;get&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let scope = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{formalParameterList} be an instance of the production grammar:{FormalParameters0, []} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8347 [shape=cds, label=<<font color="black">0:access __x0__ = (PropertyName &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:__x3__</td></tr>
      <tr><td align="left">8:let desc = (new PropertyDescriptor(&quot;Get&quot; -&gt; closure, &quot;Enumerable&quot; -&gt; enumerable, &quot;Configurable&quot; -&gt; true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8354 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let closure = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8346 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8351 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8349 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node8359 [shape=cds, label=<<font color="black">9:app __x4__ = (DefinePropertyOrThrow object propKey desc)</font>> color="black" fillcolor="white" style=filled]
  node8355 [shape=cds, label=<<font color="black">6:app __x2__ = (MakeMethod closure object)</font>> color="black" fillcolor="white" style=filled]
  node8360 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8356 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:__x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8348 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let propKey = __x0__</td></tr>
      <tr><td align="left">1:[? propKey]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8345 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8358 -> node8359 [ color="black"]
  node8351 -> node8352 [ color="black"]
  node8352 -> node8353 [ color="black"]
  node8347 -> node8348 [ color="black"]
  node8360 -> node8346 [ color="black"]
  node8353 -> node8354 [ color="black"]
  node8354 -> node8355 [ color="black"]
  node8349 -> node8350 [label=<<font color="black">true</font>> color="black"]
  node8349 -> node8351 [label=<<font color="black">false</font>> color="black"]
  node8359 -> node8360 [ color="black"]
  node8345 -> node8347 [ color="black"]
  node8348 -> node8349 [ color="black"]
  node8356 -> node8357 [ color="black"]
  node8355 -> node8356 [ color="black"]
  node8350 -> node8352 [ color="black"]
  node8357 -> node8358 [ color="black"]
}
