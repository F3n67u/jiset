digraph {
  node16645 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16651 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16648 [shape=cds, label=<<font color="black">1:app __x1__ = (Get array &quot;join&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">func = INTRINSIC_Object_prototype_toString</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16644 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let func = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let array = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16653 [shape=cds, label=<<font color="black">3:app __x3__ = (Call func array)</font>> color="black" fillcolor="white" style=filled]
  node16650 [shape=cds, label=<<font color="black">2:app __x2__ = (IsCallable func)</font>> color="black" fillcolor="white" style=filled]
  node16646 [shape=cds, label=<<font color="black">0:app __x0__ = (ToObject this)</font>> color="black" fillcolor="white" style=filled]
  node16654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16648 -> node16649 [ color="black"]
  node16647 -> node16648 [ color="black"]
  node16649 -> node16650 [ color="black"]
  node16652 -> node16653 [ color="black"]
  node16650 -> node16651 [ color="black"]
  node16654 -> node16645 [ color="black"]
  node16651 -> node16652 [label=<<font color="black">true</font>> color="black"]
  node16651 -> node16653 [label=<<font color="black">false</font>> color="black"]
  node16644 -> node16646 [ color="black"]
  node16653 -> node16654 [ color="black"]
  node16646 -> node16647 [ color="black"]
}
