digraph {
  node18629 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node18627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let promise = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18624 [shape=cds, label=<<font color="black">4:app __x1__ = (CreateBuiltinFunction steps (new [&quot;Capability&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18632 [shape=diamond, label=<<font color="black">(= __x4__ false)</font>> color="black" fillcolor="white" style=filled]
  node18618 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18626 [shape=cds, label=<<font color="black">6:app __x2__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node18621 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node18633 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18631 [shape=cds, label=<<font color="black">8:app __x4__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node18625 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let executor = [! __x1__]</td></tr>
      <tr><td align="left">5:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18630 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">10:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18623 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:??? &quot;Let id:{promiseCapability} be the PromiseCapability Record { [ [ Promise ] ] : value:{undefined} , [ [ Resolve ] ] : value:{undefined} , [ [ Reject ] ] : value:{undefined} } .&quot;</td></tr>
      <tr><td align="left">3:let steps = GetCapabilitiesExecutorFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18628 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node18620 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node18622 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18619 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18634 -> node18619 [ color="black"]
  node18630 -> node18631 [ color="black"]
  node18631 -> node18632 [ color="black"]
  node18628 -> node18629 [ color="black"]
  node18620 -> node18621 [ color="black"]
  node18629 -> node18630 [label=<<font color="black">true</font>> color="black"]
  node18629 -> node18631 [label=<<font color="black">false</font>> color="black"]
  node18621 -> node18622 [label=<<font color="black">true</font>> color="black"]
  node18621 -> node18623 [label=<<font color="black">false</font>> color="black"]
  node18633 -> node18634 [ color="black"]
  node18623 -> node18624 [ color="black"]
  node18618 -> node18620 [ color="black"]
  node18622 -> node18623 [ color="black"]
  node18626 -> node18627 [ color="black"]
  node18627 -> node18628 [ color="black"]
  node18624 -> node18625 [ color="black"]
  node18632 -> node18633 [label=<<font color="black">true</font>> color="black"]
  node18632 -> node18634 [label=<<font color="black">false</font>> color="black"]
  node18625 -> node18626 [ color="black"]
}
