digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">1:app __x0__ = (ToObject template)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=cds, label=<<font color="black">3:app __x3__ = (LengthOfArrayLike raw)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let stringElements = (new [])</td></tr>
      <tr><td align="left">6:let nextIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let cooked = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let raw = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app template = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=diamond, label=<<font color="black">(! (&lt; 0i literalSegments))</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">2:app __x1__ = (Get cooked &quot;raw&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app substitutions = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=cds, label=<<font color="black">9:app __x5__ = (Get raw nextKey)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let literalSegments = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">2:app __x2__ = (ToObject [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let numberOfSubstitutions = substitutions.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return the String value whose code units are the elements in the List id:{stringElements} . If id:{stringElements} has no elements , the empty String is returned .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=diamond, label=<<font color="black">(&lt; nextIndex numberOfSubstitutions)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextSeg = [? __x6__]</td></tr>
      <tr><td align="left">10:let __x7__ = nextSeg</td></tr>
      <tr><td align="left">10:let __x8__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let nextSub = [? __x10__]</td></tr>
      <tr><td align="left">16:let __x11__ = nextSub</td></tr>
      <tr><td align="left">16:let __x12__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=cds, label=<<font color="black">15:app __x10__ = (ToString next)</font>> color="black" fillcolor="white" style=filled]
  node21 [shape=diamond, label=<<font color="black">(&lt; __x8__ __x7__.length)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:nextIndex = (+ nextIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let nextKey = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x9__ = __x7__[__x8__]</td></tr>
      <tr><td align="left">append __x9__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x8__ = (+ __x8__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=cds, label=<<font color="black">8:app __x4__ = (ToString nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x13__ = __x11__[__x12__]</td></tr>
      <tr><td align="left">append __x13__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x12__ = (+ __x12__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = substitutions[nextIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=diamond, label=<<font color="black">(== (+ nextIndex 1i) literalSegments)</font>> color="black" fillcolor="white" style=filled]
  node30 [shape=diamond, label=<<font color="black">(&lt; __x12__ __x11__.length)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=cds, label=<<font color="black">9:app __x6__ = (ToString [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node26 -> node28 [ color="black"]
  node31 -> node30 [ color="black"]
  node2 -> node3 [ color="black"]
  node0 -> node2 [ color="black"]
  node6 -> node7 [ color="black"]
  node27 -> node28 [ color="black"]
  node14 -> node15 [ color="black"]
  node30 -> node31 [label=<<font color="black">true</font>> color="black"]
  node30 -> node32 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [ color="black"]
  node8 -> node9 [ color="black"]
  node23 -> node24 [label=<<font color="black">true</font>> color="black"]
  node23 -> node25 [label=<<font color="black">false</font>> color="black"]
  node16 -> node17 [ color="black"]
  node15 -> node16 [label=<<font color="black">true</font>> color="black"]
  node15 -> node1 [label=<<font color="black">false</font>> color="black"]
  node17 -> node18 [ color="black"]
  node12 -> node13 [label=<<font color="black">true</font>> color="black"]
  node12 -> node14 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node28 -> node29 [ color="black"]
  node29 -> node30 [ color="black"]
  node32 -> node15 [ color="black"]
  node7 -> node8 [ color="black"]
  node22 -> node21 [ color="black"]
  node18 -> node19 [ color="black"]
  node11 -> node12 [ color="black"]
  node25 -> node26 [label=<<font color="black">true</font>> color="black"]
  node25 -> node27 [label=<<font color="black">false</font>> color="black"]
  node19 -> node20 [ color="black"]
  node13 -> node14 [ color="black"]
  node21 -> node22 [label=<<font color="black">true</font>> color="black"]
  node21 -> node23 [label=<<font color="black">false</font>> color="black"]
  node9 -> node10 [ color="black"]
  node20 -> node21 [ color="black"]
  node24 -> node25 [ color="black"]
}
