digraph {
  node17358 [shape=cds, label=<<font color="black">5:app __x4__ = (PerformPromiseAll iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node17349 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iteratorRecord = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17363 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node17353 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17346 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node17357 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17360 [shape=cds, label=<<font color="black">6:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node17364 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17351 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17356 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17359 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17348 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node17355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17340 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17362 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node17343 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17366 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17339 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17354 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17345 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17350 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17370 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17367 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17347 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17368 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17341 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17369 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17361 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node17344 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17372 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17365 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node17351 -> node17352 [label=<<font color="black">true</font>> color="black"]
  node17351 -> node17353 [label=<<font color="black">false</font>> color="black"]
  node17369 -> node17370 [label=<<font color="black">true</font>> color="black"]
  node17369 -> node17371 [label=<<font color="black">false</font>> color="black"]
  node17348 -> node17349 [ color="black"]
  node17371 -> node17372 [ color="black"]
  node17365 -> node17366 [label=<<font color="black">true</font>> color="black"]
  node17365 -> node17372 [label=<<font color="black">false</font>> color="black"]
  node17347 -> node17348 [ color="black"]
  node17373 -> node17340 [ color="black"]
  node17367 -> node17372 [ color="black"]
  node17359 -> node17360 [ color="black"]
  node17342 -> node17343 [ color="black"]
  node17360 -> node17361 [ color="black"]
  node17346 -> node17347 [ color="black"]
  node17345 -> node17346 [ color="black"]
  node17362 -> node17363 [label=<<font color="black">true</font>> color="black"]
  node17362 -> node17365 [label=<<font color="black">false</font>> color="black"]
  node17353 -> node17354 [ color="black"]
  node17368 -> node17369 [ color="black"]
  node17363 -> node17364 [ color="black"]
  node17361 -> node17362 [label=<<font color="black">true</font>> color="black"]
  node17361 -> node17373 [label=<<font color="black">false</font>> color="black"]
  node17352 -> node17357 [ color="black"]
  node17357 -> node17358 [ color="black"]
  node17344 -> node17345 [label=<<font color="black">true</font>> color="black"]
  node17344 -> node17346 [label=<<font color="black">false</font>> color="black"]
  node17350 -> node17351 [label=<<font color="black">true</font>> color="black"]
  node17350 -> node17357 [label=<<font color="black">false</font>> color="black"]
  node17349 -> node17350 [ color="black"]
  node17341 -> node17342 [ color="black"]
  node17366 -> node17367 [label=<<font color="black">true</font>> color="black"]
  node17366 -> node17368 [label=<<font color="black">false</font>> color="black"]
  node17343 -> node17344 [ color="black"]
  node17358 -> node17359 [ color="black"]
  node17354 -> node17355 [label=<<font color="black">true</font>> color="black"]
  node17354 -> node17356 [label=<<font color="black">false</font>> color="black"]
  node17372 -> node17373 [ color="black"]
  node17339 -> node17341 [ color="black"]
  node17356 -> node17357 [ color="black"]
  node17370 -> node17371 [ color="black"]
  node17364 -> node17365 [ color="black"]
  node17355 -> node17356 [ color="black"]
}
