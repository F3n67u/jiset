--------------------------------------------------------------------------------
5687197db84d84c8ec16aaf532f693badc3fdcec
--------------------------------------------------------------------------------
- Optional nonterminal 에 대한 처리?
[Bug] unknown variable: Expression1 @ IterationStatement[2,7].LoopEvaluation
[Bug] unknown variable: Expression2 @ IterationStatement[2,7].LoopEvaluation
[Bug] unknown variable: Expression0 @ IterationStatement[3,3].LoopEvaluation
[Bug] unknown variable: Expression1 @ IterationStatement[3,3].LoopEvaluation
[Bug] unknown variable: Expression0 @ IterationStatement[4,3].LoopEvaluation
[Bug] unknown variable: Expression1 @ IterationStatement[4,3].LoopEvaluation

--------------------------------------------------------------------------------
4a2cfd6a36326f1cd566ed02efb7f42df073d376
--------------------------------------------------------------------------------
- Optional nonterminal 에 대한 처리?
[Bug] unknown variable: Expression1 @ IterationStatement[2,7].LabelledEvaluation
[Bug] unknown variable: Expression2 @ IterationStatement[2,7].LabelledEvaluation
[Bug] unknown variable: Expression0 @ IterationStatement[3,3].LabelledEvaluation
[Bug] unknown variable: Expression1 @ IterationStatement[3,3].LabelledEvaluation
[Bug] unknown variable: Expression0 @ IterationStatement[4,3].LabelledEvaluation
[Bug] unknown variable: Expression1 @ IterationStatement[4,3].LabelledEvaluation

--------------------------------------------------------------------------------
d0583d8f72787cd9130c571bdffeeeb07d2b8193
--------------------------------------------------------------------------------
- Head를 Builtin Head로 잘못 인식함.
[Bug] unknown variable: GetGeneratorKind @ YieldExpression[0,0].Evaluation
[Bug] unknown variable: GetGeneratorKind @ YieldExpression[1,0].Evaluation
[Bug] unknown variable: GetGeneratorKind @ YieldExpression[2,0].Evaluation
[Bug] unknown variable: GetGeneratorKind @ ReturnStatement[1,0].Evaluation
[Bug] unknown variable: FlattenIntoArray @ Array.prototype.flat
[Bug] unknown variable: FlattenIntoArray @ Array.prototype.flatMap
[Bug] unknown variable: NumberToBigInt @ BigInt
[Bug] unknown variable: CreateResolvingFunctions @ Promise

--------------------------------------------------------------------------------
4ff267d8802d2549c2d323dcc090113fc84726cc
--------------------------------------------------------------------------------
- Builtin method 가 global 에 없음.
- Incomplete한 문장이 생겨 알람이 사라짐.
[Bug] unknown variable: ThenFinallyFunctions @ Promise.prototype.finally
[Bug] unknown variable: stepsThenFinally @ Promise.prototype.finally
[Bug] unknown variable: PromiseResolveFunctions @ CreateResolvingFunctions
[Bug] unknown variable: stepsResolve @ CreateResolvingFunctions

--------------------------------------------------------------------------------
6681ce795eacdfebbcc795983d37064d621da000
--------------------------------------------------------------------------------
- Pop 구현이 안됨.
[Bug] unknown variable: next @ AsyncGeneratorResolve

--------------------------------------------------------------------------------
0b9842733631a3857f34a3ac88f8d66bf7c848a2
--------------------------------------------------------------------------------
- emu-alg 사이에 p가 있을 때 parsing 오류.
[Bug] unknown variable: len @ Array.prototype.sort
[Bug] unknown variable: obj @ Array.prototype.sort

--------------------------------------------------------------------------------
2e754fd478d30a41a8941603333b637edb63a4d7
--------------------------------------------------------------------------------
- Pop 구현이 안됨.
[Bug] unknown variable: E @ Array.prototype.splice
[Bug] unknown variable: E @ Array.prototype.push
[Bug] unknown variable: E @ Array.prototype.unshift
[Bug] unknown variable: next @ String.prototype.concat

--------------------------------------------------------------------------------
aa1f4077730ae2826758de9034de7da6d5d620f8
--------------------------------------------------------------------------------
- 높은 확률로 true alarm 이지만, 확실한 inspection 필요.
[Bug] unchecked abrupt completions @ ToPrimitive
[Bug] unchecked abrupt completions @ ProxyObject.Set
[Bug] unchecked abrupt completions @ SameValue
[Bug] unchecked abrupt completions @ ToObject
[Bug] unchecked abrupt completions @ ToNumber
[Bug] unchecked abrupt completions @ RequireObjectCoercible

--------------------------------------------------------------------------------
b38902109c62ae5e904c225b4f695a6da0ad3300
--------------------------------------------------------------------------------
- <emu-alg> tag 를 닫지 않아 EvaluatePropertyAccessWithExpressionKey 함수가 parsing 이 안된 것으로 추측됨.
[Bug] unknown variable: EvaluatePropertyAccessWithExpressionKey @ CallExpression[4,0].Evaluation
[Bug] unknown variable: EvaluatePropertyAccessWithExpressionKey @ MemberExpression[1,0].Evaluation
[Bug] unknown variable: EvaluatePropertyAccessWithExpressionKey @ OptionalChain[5,0].ChainEvaluation
[Bug] unknown variable: EvaluatePropertyAccessWithExpressionKey @ OptionalChain[1,0].ChainEvaluation
[Bug] unknown variable: EvaluatePropertyAccessWithIdentifierKey @ CallExpression[5,0].Evaluation
[Bug] unknown variable: EvaluatePropertyAccessWithIdentifierKey @ OptionalChain[2,0].ChainEvaluation
[Bug] unknown variable: EvaluatePropertyAccessWithIdentifierKey @ OptionalChain[6,0].ChainEvaluation
[Bug] unknown variable: EvaluatePropertyAccessWithIdentifierKey @ MemberExpression[2,0].Evaluation

--------------------------------------------------------------------------------
e8727ee90d641851ae1cc18af6171c65b6228dbc
--------------------------------------------------------------------------------
- Head를 Builtin Head로 잘못 인식함.
[Bug] unknown variable: PromiseReactionJob @ PerformPromiseThen

--------------------------------------------------------------------------------
0033dd99b7f3726e1646f7d3b7a531df94a9f0ef
--------------------------------------------------------------------------------
- Head를 Builtin Head로 잘못 인식함.
[Bug] unknown variable: PerformPromiseThen @ Promise.prototype.then

--------------------------------------------------------------------------------
096f30b7c7ee7b12f6907bb5760496711c29b66f
--------------------------------------------------------------------------------
- GetReferencedName 함수가 사라지며 alarm 이 사라짐. 그 전에 왜 발생했는지는 inspection 필요
[Bug] unchecked abrupt completions @ GetReferencedName
- IsUnresolvableReference에서 검사를 한 순간 Bool이 사라져야 하지만, 계속 남아 있어서 GetBase로 흘러 들어가 Assertion failed 이 됨.
[Bug] assertion failed: (= (typeof V) Reference) @ GetBase
- AssignmentExpression[6,0].Evaluation 에서 lref 가 Object 인 경우가 발생함. 이 object 는 LeftHandSideExpression 의 evaluation 의 결과로 나오는데 이 것이 실제 오류인지는 잘 모르겠음.
- need discussion
[Bug] assertion failed: (= (typeof V) Reference) @ GetReferencedName

--------------------------------------------------------------------------------
acf7a5161b76991d89fe97478c45a3fc89960cfe
--------------------------------------------------------------------------------
- syntax-directed algo 호출 하는 notation 을 잘못 사용함
[Bug] unknown variable: AssignmentTargetType @ DestructuringAssignmentTarget[0,0].EarlyErrors

--------------------------------------------------------------------------------
0ceb728a1adbffe42b26972a6541fd7f398b1557
--------------------------------------------------------------------------------
- syntax-directed algo 호출 하는 notation 을 잘못 사용함. IsValidSimpleAssignmentTarget가 이후에 AssignmentTargetType로 이름이 바뀌어 버그 이름도 바로 위에 언급된 버그로 이름이 바뀐다.
[Bug] unknown variable: IsValidSimpleAssignmentTarget @ DestructuringAssignmentTarget[0,0].EarlyErrors

--------------------------------------------------------------------------------
980e1ccf1d37a3c890dc5fe5a36275710459c122
--------------------------------------------------------------------------------
- IsNonNegativeInteger:[ESValue] 의 중간 분석 과정에서 결과가 false 인 경우가 생기고, 그에 따라 assertion failed.
[Bug] assertion failed: (= __x4__ true) @ ArrayExoticObject.DefineOwnProperty

--------------------------------------------------------------------------------
f9be7ed17f262ccaadc8d7d7fd9f4828076f6567
--------------------------------------------------------------------------------
- IsNonNegativeInteger:[ESValue] 의 중간 분석 과정에서 결과가 false 인 경우가 생기고, 그에 따라 assertion failed.
[Bug] assertion failed: (= __x5__ true) @ ArrayExoticObject.DefineOwnProperty
[Bug] assertion failed: (= [! __x0__] true) @ ArrayCreate

--------------------------------------------------------------------------------
6e633e684ed8b12245e906593bdeb4969441f3bc
--------------------------------------------------------------------------------
- AsyncFunctionExpression[0,0].NamedEvaluation 에서 AsyncFunctionExpression[1,0].InstantiateAsyncFunctionExpression 으로 가는 false call edge 가 존재함.
[Bug] assertion failed: (= name absent) @ AsyncFunctionExpression[1,0].InstantiateAsyncFunctionExpression

--------------------------------------------------------------------------------
1f9825e6547853da43ae18f4d72aebaefb06eae8
--------------------------------------------------------------------------------
- MultiplicativeOperator 의 마지막 case 에 대한 branch 임을 assertion 으로 표시해 놓았음. false alarm 임.
[Bug] assertion failed: (= MultiplicativeOperator \"%\") @ MultiplicativeExpression[1,0].Evaluation

--------------------------------------------------------------------------------
fa8e6b3ec1e94b3d1e7455da877495a32e742134
--------------------------------------------------------------------------------
- const value 에 대한 표현이 달라 Const_Fulfill 이 "Fulfill" 로 parsing 됨
[Bug] assertion failed: (= promise.PromiseState \"rejected\") @ PerformPromiseThen

--------------------------------------------------------------------------------
e8727ee90d641851ae1cc18af6171c65b6228dbc
--------------------------------------------------------------------------------
- algorithm 설명에 p 태그가 누락되어 builtin head 로 인식되면서 bug 메세지가 사라졌음. 근본적인 원인은 fa8e6b3ec1e94b3d1e7455da877495a32e742134 에 있음
[Bug] assertion failed: (= promise.PromiseState \"rejected\") @ PerformPromiseThen

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
- NamedEvaluation 이 spec 에 추가되고, SetFunctionName 이 *BindingInitialization 에서 빠지면서 에러가 사라졌음. 실제 버그가 있었는지는 more inspection 필요
- need discussion
[Bug] assertion failed: (= (typeof O) Object) @ DefinePropertyOrThrow

--------------------------------------------------------------------------------
79ee19659384de3c32a49c0bd36bf1e5313b4cdd
--------------------------------------------------------------------------------
- SpeciesConstructor 함수에서 IsConstructor S를 통해 S가 Constructor인 경우에만 return S를 하게 한다. 그러나 이를 static하게 잡아내지 못해 모든 S에 대해 return S가 됐고, 이에 따라 이후에 Promise.prototype.finally에서 return된 값에 대해 IsConstructor를 실행 했을 때 false가 되는 경우가 생긴다. 이에 따라 assertion failed가 되고 있다. 여기서 return된 값의 어떤 view에 대해 IsConstructor를 먼저 부르느냐에 따라 assertion failed 에러가 뜨고 안뜨고가 변한다.
[Bug] assertion failed: (= __x1__ true) @ Promise.prototype.finally

--------------------------------------------------------------------------------
5ad43c48b1f452173aa7ec9f02535d8421a2f28
--------------------------------------------------------------------------------
- IsConstructor[Object]의 중간 분석 과정에서 결과가 false 인 경우가 생기고, 그에 따라 assertion failed.
[Bug] assertion failed: (= __x0__ true) @ ProxyObject.Construct

--------------------------------------------------------------------------------
RECENT
--------------------------------------------------------------------------------
- 실제로는 2번 define 되는 경우가 없는 것으로 생각됨
[Bug] already defined variable: v @ ArrowParameters[0,0].IteratorBindingInitialization
- Builtin method 가 global 에 없음
[Bug] unknown variable: CreateDataPropertyOnObjectFunctions @ Object.fromEntries
[Bug] unknown variable: stepsDefine @ Object.fromEntries
- ArrayExoticObject 의 "length" property 를 가져오면 numeric value 를 가진 property 가 나오지만, 현재 PropertyDescriptor의 [[Value]] 가 ESValue 전체로 modeling 되어있음
[Bug] non-numeric types: oldLen @ ArrayExoticObject.DefineOwnProperty
[Bug] non-numeric types: oldLen @ ArraySetLength
- Optional nonterminal 에 대한 처리?
[Bug] unknown variable: Expression0 @ ForStatement[1,3].ForLoopEvaluation
[Bug] unknown variable: Expression0 @ ForStatement[2,3].ForLoopEvaluation
[Bug] unknown variable: Expression1 @ ForStatement[0,7].ForLoopEvaluation
[Bug] unknown variable: Expression1 @ ForStatement[1,3].ForLoopEvaluation
[Bug] unknown variable: Expression1 @ ForStatement[2,3].ForLoopEvaluation
[Bug] unknown variable: Expression2 @ ForStatement[0,7].ForLoopEvaluation
- HostEnqueuePromiseJob 에 대한 modeling 필요
[Bug] unknown variable: HostEnqueuePromiseJob @ PerformPromiseThen
- lref 가 GetValue 호출 이후에 Abrupt 일 수 없음
[Bug] unchecked abrupt completions @ AssignmentExpression[6,0].Evaluation
[Bug] unchecked abrupt completions @ AssignmentExpression[7,0].Evaluation
[Bug] unchecked abrupt completions @ AssignmentExpression[8,0].Evaluation
[Bug] unchecked abrupt completions @ CallExpression[0,0].Evaluation
[Bug] unchecked abrupt completions @ EvaluateCall
[Bug] unchecked abrupt completions @ IsPropertyReference
- env.HasBinding 이 abrupt 를 반환하려면 env 가 global 이어야 하지만, 위의 condition 에서 global 이 아닌 경우만 남게되므로 실제로는 abrupt 가 발생하는 경우가 없게됨
[Bug] unchecked abrupt completions @ EvalDeclarationInstantiation
- env 가 19, 20 step 에서 define 되지만 이 함수는 항상 function body 안에서 불리므로 global env 가 올 수 없음.
[Bug] unchecked abrupt completions @ FunctionDeclarationInstantiation
- ArraySpeciesCreate에서 IsConstructor가 불렸을 때 C가 Object가 아닌 경우에는 Throw가 되고 Construct가 불릴 때는 Object만 남아있어야 하는데 다른 타입도 남아 있어 undef가 return되어 false alarm이 발생하고 있음.
[Bug] assertion failed: (= (typeof target) Object) @ FlattenIntoArray
[Bug] assertion failed: (= __x0__ true) @ Construct
- 위의 alarm 과 같은 이유로 Array.prototype.filter 에서 undef 가 흘러들어감
[Bug] assertion failed: (= (typeof O) Object) @ CreateDataPropertyOrThrow
- 위의 alarm 과 같은 이유로 Array.prototype.slice 에서 undef 가 흘러들어감
[Bug] assertion failed: (= (typeof O) Object) @ Set
- FlattenIntoArray 에서 element 가 array 가 아닐 경우, shouldFlatten 이 false 가 되어, 해당 element 가 LengthOfArrayLike 의 arugment 로 사용될 수 없음. 하지만, 이에 대한 별도의 refinement 가 구현되지 않아 현재 ~empty~ 가 LengthOfArrayLike 로 흘러와 false alarm 이 발생하고 있음.
[Bug] assertion failed: (= (typeof obj) Object) @ LengthOfArrayLike
- 위와 같은 이유로, ~empty~ 가 FlattenIntoArray 안의 recursive 호출에도 흘러들어옴.
[Bug] assertion failed: (= (typeof source) Object) @ FlattenIntoArray
- IsCallable:[OrdinaryObject] 의 중간 분석 과정에서 결과가 false 인 경우가 생기고, 그에 따라 assertion failed.
[Bug] assertion failed: (= __x0__ true) @ GetPrototypeFromConstructor
- GetValue 에서 IsPropertyReference 가 true 이면 [[Base]] 가 ~unresolvable~ 일 수 없음. 하지만 이를 인식하지 못해 ~unresolvable~ 이 ToObject 로 흘러들어옴.
- ClassHeritage Evaluation 에서 ~empty~ 가 흘러나오는 원인을 파악해야함.
- 아마도 AbruptT.Value 에 ~empty~ 가 있기 때문인 것으로 생각됨.
- OptionalExpression Evaluation 은 분석이 안되고 있음.
- need discussion
[Bug] assertion failed: (= (typeof functionPrototype) Object) @ OrdinaryFunctionCreate
- OptionalExpression.Evaluation 에서 baseReference 가 empty 가 될 수 있는지?  될 수 있으면 bug 로 생각됨.
- need discussion
[Bug] assertion failed: false @ RequireObjectCoercible
- env.HasSuperBinding 의 중간 분석 과정에서 결과가 false 인 경우가 생기고, 그에 따라 assertion failed.
[Bug] assertion failed: (= __x1__ true) @ MakeSuperPropertyReference
- Expression IsFunctionDefinition의 중간 분석 과정에서 결과가 false인 경우가 생기고, 그에 따라 assertion failed.
[Bug] assertion failed: (= __x0__ true) @ ParenthesizedExpression[0,0].NamedEvaluation
- BindingRestElement[1,0].IteratorBindingInitialization 에서 next 가 false 가 될 경우, iteratorRecord.Done 이 true 가 되어서 IteratorValue 를 호출하지 않게됨.
[Bug] assertion failed: (= (typeof iterResult) Object) @ IteratorValue

TODO
- name은 optional parameter인데, 이게 absent가 아닌 경우에 대해 assertion fail이 된다.
  ae77188c64085669f8c7cc859327f0817cdb260d의 경우와 비슷한 경우인 것 같음.
[Bug] assertion failed: (= name absent) @ AsyncGeneratorExpression[0,1].InstantiateAsyncGeneratorFunctionExpression
[Bug] assertion failed: (= name absent) @ FunctionExpression[0,1].InstantiateOrdinaryFunctionExpression
[Bug] assertion failed: (= name absent) @ GeneratorExpression[0,1].InstantiateGeneratorFunctionExpression
- RequireObjectCoercible에서 ESValue가 아닌 ReferenceRecord가 들어와서 해당되는 케이스가 존재하지 않아 Assert false가 되고 있다.
  TryStatement[0,0]/[2,0].Evaluation에서부터 ReferenceRecord가 흘러들어왔는데 이 함수 내부에서 Block.Evaluation에 접근하는 과정에서 ReferenceRecord가 리턴된다.
	TryStmt함수에서 이 리턴된 것의 타입을 검사해 CONST_throw인 경우에만 RequireObjectCoercible가 불려야 하는데 모든 view에 대해 불리는 게 문제가 되는 것 같다.
[Bug] assertion failed: false @ RequireObjectCoercible
- IsPropertyReference에 Reference가 아닌 것들이 parameter로 들어오는 문제가 있다.
  CallExpression[0,0].Evaluation에서 is-instance-of ref ReferenceRecord가 true인 경우에만 IsPropertyReference ref를 부르는 branch로 가야하는데 모든 view에 대해 전부 실행하게 되는 것이 문제인 것 같다.
[Bug] assertion failed: (is-instance-of V ReferenceRecord) @ IsPropertyReference
- OrdinaryGetOwnProperty에서 ArrayExoticObject.SubMap[str] = absent에 대해 true branch와 false branch를 모두 분석한다.
  true인 경우 undef를 return해서 아래 Assertion Fail이 된다.
[Bug] assertion failed: (= [! __x4__] true) @ ArrayExoticObject.DefineOwnProperty
[Bug] assertion failed: (= [! __x4__] true) @ ArraySetLength
# reported 
- optional parameter 에 대한 처리?
[Bug] unknown variable: internalSlotsList @ OrdinaryCreateFromConstructor
