digraph {
  node15752 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node15735 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15748 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (|| (|| (= typeName &quot;Int8Array&quot;) (= typeName &quot;Uint8Array&quot;)) (= typeName &quot;Int16Array&quot;)) (= typeName &quot;Uint16Array&quot;)) (= typeName &quot;Int32Array&quot;)) (= typeName &quot;Uint32Array&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node15738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onlyInt32 = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15751 [shape=cds, label=<<font color="black">10:app __x1__ = (IsSharedArrayBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15739 [shape=cds, label=<<font color="black">1:app __x0__ = (Type typedArray)</font>> color="black" fillcolor="white" style=filled]
  node15747 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15740 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15746 [shape=diamond, label=<<font color="black">(! (= typeName &quot;Int32Array&quot;))</font>> color="black" fillcolor="white" style=filled]
  node15753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15736 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15743 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15737 [shape=diamond, label=<<font color="black">(= onlyInt32 absent)</font>> color="black" fillcolor="white" style=filled]
  node15742 [shape=diamond, label=<<font color="black">(= typedArray.TypedArrayName absent)</font>> color="black" fillcolor="white" style=filled]
  node15744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let typeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:assert (! (= typedArray.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">9:let buffer = typedArray.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15745 [shape=diamond, label=<<font color="black">(= onlyInt32 true)</font>> color="black" fillcolor="white" style=filled]
  node15754 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return buffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15749 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15737 -> node15738 [label=<<font color="black">true</font>> color="black"]
  node15737 -> node15739 [label=<<font color="black">false</font>> color="black"]
  node15739 -> node15740 [ color="black"]
  node15742 -> node15743 [label=<<font color="black">true</font>> color="black"]
  node15742 -> node15744 [label=<<font color="black">false</font>> color="black"]
  node15747 -> node15750 [ color="black"]
  node15751 -> node15752 [ color="black"]
  node15746 -> node15747 [label=<<font color="black">true</font>> color="black"]
  node15746 -> node15750 [label=<<font color="black">false</font>> color="black"]
  node15753 -> node15754 [ color="black"]
  node15748 -> node15749 [label=<<font color="black">true</font>> color="black"]
  node15748 -> node15750 [label=<<font color="black">false</font>> color="black"]
  node15740 -> node15741 [label=<<font color="black">true</font>> color="black"]
  node15740 -> node15742 [label=<<font color="black">false</font>> color="black"]
  node15741 -> node15742 [ color="black"]
  node15738 -> node15739 [ color="black"]
  node15744 -> node15745 [ color="black"]
  node15743 -> node15744 [ color="black"]
  node15749 -> node15750 [ color="black"]
  node15745 -> node15746 [label=<<font color="black">true</font>> color="black"]
  node15745 -> node15748 [label=<<font color="black">false</font>> color="black"]
  node15752 -> node15753 [label=<<font color="black">true</font>> color="black"]
  node15752 -> node15754 [label=<<font color="black">false</font>> color="black"]
  node15750 -> node15751 [ color="black"]
  node15735 -> node15737 [ color="black"]
  node15754 -> node15736 [ color="black"]
}
