digraph {
  node17667 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node17674 [shape=cds, label=<<font color="black">6:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node17687 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node17663 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17660 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17682 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17661 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17671 [shape=cds, label=<<font color="black">5:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node17684 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17665 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget &quot;%WeakSet.prototype%&quot; (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17677 [shape=cds, label=<<font color="black">8:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17662 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17683 [shape=cds, label=<<font color="black">11:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node17678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17675 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17669 [shape=cds, label=<<font color="black">4:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17686 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node17679 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node17676 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node17664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17685 [shape=cds, label=<<font color="black">12:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node17668 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17672 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node17681 [shape=cds, label=<<font color="black">10:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node17680 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17673 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17663 -> node17664 [label=<<font color="black">true</font>> color="black"]
  node17663 -> node17665 [label=<<font color="black">false</font>> color="black"]
  node17681 -> node17682 [ color="black"]
  node17662 -> node17663 [ color="black"]
  node17668 -> node17669 [ color="black"]
  node17667 -> node17668 [label=<<font color="black">true</font>> color="black"]
  node17667 -> node17669 [label=<<font color="black">false</font>> color="black"]
  node17688 -> node17676 [ color="black"]
  node17683 -> node17684 [ color="black"]
  node17684 -> node17685 [ color="black"]
  node17679 -> node17680 [label=<<font color="black">true</font>> color="black"]
  node17679 -> node17681 [label=<<font color="black">false</font>> color="black"]
  node17665 -> node17666 [ color="black"]
  node17675 -> node17676 [ color="black"]
  node17672 -> node17673 [label=<<font color="black">true</font>> color="black"]
  node17672 -> node17674 [label=<<font color="black">false</font>> color="black"]
  node17669 -> node17670 [ color="black"]
  node17678 -> node17679 [ color="black"]
  node17674 -> node17675 [ color="black"]
  node17677 -> node17678 [ color="black"]
  node17682 -> node17683 [ color="black"]
  node17660 -> node17662 [ color="black"]
  node17676 -> node17677 [label=<<font color="black">true</font>> color="black"]
  node17676 -> node17661 [label=<<font color="black">false</font>> color="black"]
  node17666 -> node17667 [ color="black"]
  node17664 -> node17665 [ color="black"]
  node17686 -> node17687 [label=<<font color="black">true</font>> color="black"]
  node17686 -> node17676 [label=<<font color="black">false</font>> color="black"]
  node17671 -> node17672 [ color="black"]
  node17670 -> node17671 [ color="black"]
  node17673 -> node17674 [ color="black"]
  node17685 -> node17686 [ color="black"]
  node17687 -> node17688 [ color="black"]
  node17680 -> node17681 [ color="black"]
}
