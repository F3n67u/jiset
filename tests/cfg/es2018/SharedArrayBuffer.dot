digraph {
  node16308 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16304 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16307 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node16302 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16306 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16303 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16309 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateSharedArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node16310 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16305 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16308 -> node16309 [ color="black"]
  node16305 -> node16306 [label=<<font color="black">true</font>> color="black"]
  node16305 -> node16307 [label=<<font color="black">false</font>> color="black"]
  node16310 -> node16303 [ color="black"]
  node16307 -> node16308 [ color="black"]
  node16302 -> node16304 [ color="black"]
  node16304 -> node16305 [ color="black"]
  node16306 -> node16307 [ color="black"]
  node16309 -> node16310 [ color="black"]
}
