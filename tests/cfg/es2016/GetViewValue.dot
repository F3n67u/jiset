digraph {
  node15115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15130 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node15119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let numberIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let isLittleEndian = __x3__</td></tr>
      <tr><td align="left">6:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15133 [shape=cds, label=<<font color="black">13:app __x5__ = (GetValueFromBuffer buffer bufferIndex type isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15118 [shape=cds, label=<<font color="black">2:app __x1__ = (ToNumber requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node15129 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">9:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15114 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15126 [shape=cds, label=<<font color="black">7:app __x4__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15111 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15113 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node15112 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15122 [shape=diamond, label=<<font color="black">(|| (! (== numberIndex getIndex)) (&lt; getIndex 0i))</font>> color="black" fillcolor="white" style=filled]
  node15116 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node15131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15120 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger numberIndex)</font>> color="black" fillcolor="white" style=filled]
  node15124 [shape=cds, label=<<font color="black">5:app __x3__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15134 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15127 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node15132 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15123 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15128 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15132 -> node15133 [ color="black"]
  node15121 -> node15122 [ color="black"]
  node15114 -> node15115 [label=<<font color="black">true</font>> color="black"]
  node15114 -> node15116 [label=<<font color="black">false</font>> color="black"]
  node15125 -> node15126 [ color="black"]
  node15120 -> node15121 [ color="black"]
  node15128 -> node15129 [ color="black"]
  node15130 -> node15131 [label=<<font color="black">true</font>> color="black"]
  node15130 -> node15132 [label=<<font color="black">false</font>> color="black"]
  node15131 -> node15132 [ color="black"]
  node15123 -> node15124 [ color="black"]
  node15126 -> node15127 [ color="black"]
  node15111 -> node15113 [ color="black"]
  node15117 -> node15118 [ color="black"]
  node15115 -> node15116 [ color="black"]
  node15124 -> node15125 [ color="black"]
  node15134 -> node15112 [ color="black"]
  node15116 -> node15117 [label=<<font color="black">true</font>> color="black"]
  node15116 -> node15118 [label=<<font color="black">false</font>> color="black"]
  node15113 -> node15114 [ color="black"]
  node15127 -> node15128 [label=<<font color="black">true</font>> color="black"]
  node15127 -> node15129 [label=<<font color="black">false</font>> color="black"]
  node15133 -> node15134 [ color="black"]
  node15122 -> node15123 [label=<<font color="black">true</font>> color="black"]
  node15122 -> node15124 [label=<<font color="black">false</font>> color="black"]
  node15119 -> node15120 [ color="black"]
  node15129 -> node15130 [ color="black"]
  node15118 -> node15119 [ color="black"]
}
