digraph {
  node15767 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node15770 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node15763 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15766 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15771 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15765 [shape=cds, label=<<font color="black">app r = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15772 [shape=cds, label=<<font color="black">3:app __x2__ = (Call promiseCapability.Reject undefined (new [r]))</font>> color="black" fillcolor="white" style=filled]
  node15768 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15773 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? __x2__]</td></tr>
      <tr><td align="left">4:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15764 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15769 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15771 -> node15772 [ color="black"]
  node15772 -> node15773 [ color="black"]
  node15769 -> node15770 [ color="black"]
  node15766 -> node15767 [ color="black"]
  node15768 -> node15769 [label=<<font color="black">true</font>> color="black"]
  node15768 -> node15770 [label=<<font color="black">false</font>> color="black"]
  node15767 -> node15768 [ color="black"]
  node15763 -> node15765 [ color="black"]
  node15765 -> node15766 [ color="black"]
  node15770 -> node15771 [ color="black"]
  node15773 -> node15764 [ color="black"]
}
