def [SYNTAX] AsyncArrowFunction[1,0].Contains<CoverCallExpressionAndAsyncArrowHead `=>` AsyncConciseBody>(symbol) = {
  0:if (! (|| (|| (|| (|| (is-instance-of symbol NewTarget) (is-instance-of symbol SuperProperty)) (is-instance-of symbol SuperCall)) (= symbol "super")) (= symbol "this"))) return false else 1:{}
  1:access __x0__ = (CoverCallExpressionAndAsyncArrowHead "CoveredAsyncArrowHead")
  1:let head = __x0__
  2:access __x1__ = (head "Contains" symbol)
  2:if (= __x1__ true) return true else 1:{}
  3:access __x2__ = (AsyncConciseBody "Contains" symbol)
  3:return __x2__
}
- id: "sec-static-semantics-contains"
- code:
        1. If _symbol_ is not one of |NewTarget|, |SuperProperty|, |SuperCall|, `super`, or `this`, return *false*.
        1. Let _head_ be CoveredAsyncArrowHead of |CoverCallExpressionAndAsyncArrowHead|.
        1. If _head_ Contains _symbol_ is *true*, return *true*.
        1. Return |AsyncConciseBody| Contains _symbol_.