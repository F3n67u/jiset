{
  let scope = GLOBAL_context.LexicalEnvironment
  app __x0__ = (NewDeclarativeEnvironment scope)
  let funcEnv = __x0__
  access __x1__ = (BindingIdentifier "StringValue")
  let name = __x1__
  app __x2__ = (funcEnv.CreateImmutableBinding funcEnv name false)
  __x2__
  let sourceText = (get-syntax FunctionExpression)
  ??? "Let id:{closure} be OrdinaryFunctionCreate ( % Function . prototype % , id:{sourceText} , nt:{FormalParameters} , nt:{FunctionBody} , const:{non-lexical-this} , id:{funcEnv} ) ."
  app __x3__ = (SetFunctionName closure name)
  __x3__
  app __x4__ = (MakeConstructor closure)
  __x4__
  app __x5__ = (funcEnv.InitializeBinding funcEnv name closure)
  __x5__
  app __x6__ = (WrapCompletion closure)
  return __x6__
}