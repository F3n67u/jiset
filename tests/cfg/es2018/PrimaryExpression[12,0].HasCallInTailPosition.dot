digraph {
  node10093 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10089 [shape=cds, label=<<font color="black">0:access __x0__ = (CoverParenthesizedExpressionAndArrowParameterList &quot;CoveredParenthesizedExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10090 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let expr = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10088 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10091 [shape=cds, label=<<font color="black">1:access __x1__ = (expr &quot;HasCallInTailPosition&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10087 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10092 [shape=cds, label=<<font color="black">1:app __x2__ = (__x1__ call)</font>> color="black" fillcolor="white" style=filled]
  node10091 -> node10092 [ color="black"]
  node10090 -> node10091 [ color="black"]
  node10089 -> node10090 [ color="black"]
  node10093 -> node10088 [ color="black"]
  node10092 -> node10093 [ color="black"]
  node10087 -> node10089 [ color="black"]
}
