digraph {
  node15440 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15450 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:assert (= state &quot;suspendedYield&quot;)</td></tr>
      <tr><td align="left">10:let genContext = generator.GeneratorContext</td></tr>
      <tr><td align="left">11:let methodContext = GLOBAL_context</td></tr>
      <tr><td align="left">12:GLOBAL_context = null</td></tr>
      <tr><td align="left">13:generator.GeneratorState = &quot;executing&quot;</td></tr>
      <tr><td align="left">14:append genContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">14:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">15:??? &quot;Resume the suspended evaluation of id:{genContext} using id:{abruptCompletion} as the result of the operation that suspended it . Let id:{result} be the completion record returned by the resumed computation .&quot;</td></tr>
      <tr><td align="left">17:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15441 [shape=cds, label=<<font color="black">0:app __x0__ = (GeneratorValidate generator)</font>> color="black" fillcolor="white" style=filled]
  node15445 [shape=diamond, label=<<font color="black">(= state &quot;completed&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15449 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return abruptCompletion</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15439 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15442 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let state = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15446 [shape=diamond, label=<<font color="black">(= abruptCompletion.Type CONST_return)</font>> color="black" fillcolor="white" style=filled]
  node15447 [shape=cds, label=<<font color="black">7:app __x1__ = (CreateIterResultObject abruptCompletion.Value true)</font>> color="black" fillcolor="white" style=filled]
  node15443 [shape=diamond, label=<<font color="black">(= state &quot;suspendedStart&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15448 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15444 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:generator.GeneratorState = &quot;completed&quot;</td></tr>
      <tr><td align="left">4:let state = &quot;completed&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15450 -> node15440 [ color="black"]
  node15444 -> node15445 [ color="black"]
  node15445 -> node15446 [label=<<font color="black">true</font>> color="black"]
  node15445 -> node15450 [label=<<font color="black">false</font>> color="black"]
  node15443 -> node15444 [label=<<font color="black">true</font>> color="black"]
  node15443 -> node15445 [label=<<font color="black">false</font>> color="black"]
  node15439 -> node15441 [ color="black"]
  node15442 -> node15443 [ color="black"]
  node15447 -> node15448 [ color="black"]
  node15446 -> node15447 [label=<<font color="black">true</font>> color="black"]
  node15446 -> node15449 [label=<<font color="black">false</font>> color="black"]
  node15449 -> node15450 [ color="black"]
  node15441 -> node15442 [ color="black"]
  node15448 -> node15449 [ color="black"]
}
