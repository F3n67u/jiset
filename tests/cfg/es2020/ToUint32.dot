digraph {
  node591 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node593 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let number = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node590 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node594 [shape=diamond, label=<<font color="black">(|| (|| (|| (|| (= number NaN) (= number 0i)) (= number -0.0)) (= number Infinity)) (= number -Infinity))</font>> color="black" fillcolor="white" style=filled]
  node595 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node596 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let int = (convert number num2int )</td></tr>
      <tr><td align="left">3:let int32bit = (%% int (** 2.0 32i))</td></tr>
      <tr><td align="left">4:return int32bit</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node592 [shape=cds, label=<<font color="black">0:app __x0__ = (ToNumber argument)</font>> color="black" fillcolor="white" style=filled]
  node594 -> node595 [label=<<font color="black">true</font>> color="black"]
  node594 -> node596 [label=<<font color="black">false</font>> color="black"]
  node592 -> node593 [ color="black"]
  node595 -> node596 [ color="black"]
  node593 -> node594 [ color="black"]
  node590 -> node592 [ color="black"]
  node596 -> node591 [ color="black"]
}
