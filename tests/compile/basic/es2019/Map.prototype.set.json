["Let", {
  "id": "M"
}, "be", "the", {
  "value": "this"
}, "value", ".", {
  "k": 0
}, "If", "Type", "(", {
  "id": "M"
}, ")", "is", "not", "Object", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 1
}, "If", {
  "id": "M"
}, "does", "not", "have", "a", "[", "[", "MapData", "]", "]", "internal", "slot", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 2
}, "Let", {
  "id": "entries"
}, "be", "the", "List", "that", "is", {
  "id": "M"
}, ".", "[", "[", "MapData", "]", "]", ".", {
  "k": 3
}, "For", "each", "Record", "{", "[", "[", "Key", "]", "]", ",", "[", "[", "Value", "]", "]", "}", {
  "id": "p"
}, "that", "is", "an", "element", "of", {
  "id": "entries"
}, ",", "do", {
  "in": null
}, "If", {
  "id": "p"
}, ".", "[", "[", "Key", "]", "]", "is", "not", {
  "const": "empty"
}, "and", "SameValueZero", "(", {
  "id": "p"
}, ".", "[", "[", "Key", "]", "]", ",", {
  "id": "key"
}, ")", "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "Set", {
  "id": "p"
}, ".", "[", "[", "Value", "]", "]", "to", {
  "id": "value"
}, ".", {
  "k": 6
}, "Return", {
  "id": "M"
}, ".", {
  "k": 7
}, {
  "out": null
}, {
  "k": 5
}, {
  "out": null
}, {
  "k": 4
}, "If", {
  "id": "key"
}, "is", {
  "value": "-0"
}, ",", "set", {
  "id": "key"
}, "to", {
  "value": "+0"
}, ".", {
  "k": 8
}, "Let", {
  "id": "p"
}, "be", "the", "Record", "{", "[", "[", "Key", "]", "]", ":", {
  "id": "key"
}, ",", "[", "[", "Value", "]", "]", ":", {
  "id": "value"
}, "}", ".", {
  "k": 9
}, "Append", {
  "id": "p"
}, "as", "the", "last", "element", "of", {
  "id": "entries"
}, ".", {
  "k": 10
}, "Return", {
  "id": "M"
}, ".", {
  "k": 11
}]