{
  if (= NewTarget undefined) throw INTRINSIC_TypeError else {}
  app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakMapPrototype (new ["WeakMapData"]))
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let map = __x0__
  map.WeakMapData = (new [])
  if (= iterable absent) let iterable = undefined else {}
  if (|| (= iterable undefined) (= iterable null)) let iter = undefined else {
    app __x1__ = (Get map "set")
    if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
    let adder = __x1__
    app __x2__ = (IsCallable adder)
    if (= __x2__ false) throw INTRINSIC_TypeError else {}
    app __x3__ = (GetIterator iterable)
    if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
    let iter = __x3__
  }
  if (= iter undefined) {
    app __x4__ = (WrapCompletion map)
    return __x4__
  } else {}
  while true {
    app __x5__ = (IteratorStep iter)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
    let next = __x5__
    if (= next false) {
      app __x6__ = (WrapCompletion map)
      return __x6__
    } else {}
    app __x7__ = (IteratorValue next)
    if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
    let nextItem = __x7__
    app __x8__ = (Type nextItem)
    if (! (= __x8__ Object)) {
      let error = (new Completion("Type" -> CONST_throw, "Value" -> ??? "TypeError", "Target" -> CONST_empty))
      app __x9__ = (IteratorClose iter error)
      if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
      app __x10__ = (WrapCompletion __x9__)
      return __x10__
    } else {}
    app __x11__ = (Get nextItem "0")
    let k = __x11__
    app __x12__ = (IsAbruptCompletion k)
    if __x12__ {
      app __x13__ = (IteratorClose iter k)
      if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else {}
      app __x14__ = (WrapCompletion __x13__)
      return __x14__
    } else {}
    app __x15__ = (Get nextItem "1")
    let v = __x15__
    app __x16__ = (IsAbruptCompletion v)
    if __x16__ {
      app __x17__ = (IteratorClose iter v)
      if (is-completion __x17__) if (= __x17__.Type CONST_normal) __x17__ = __x17__.Value else return __x17__ else {}
      app __x18__ = (WrapCompletion __x17__)
      return __x18__
    } else {}
    app __x19__ = (Call adder map (new [k.Value, v.Value]))
    let status = __x19__
    app __x20__ = (IsAbruptCompletion status)
    if __x20__ {
      app __x21__ = (IteratorClose iter status)
      if (is-completion __x21__) if (= __x21__.Type CONST_normal) __x21__ = __x21__.Value else return __x21__ else {}
      app __x22__ = (WrapCompletion __x21__)
      return __x22__
    } else {}
  }
}