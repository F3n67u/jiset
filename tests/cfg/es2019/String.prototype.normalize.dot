digraph {
  node13410 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13414 [shape=diamond, label=<<font color="black">(|| (= form absent) (= form undefined))</font>> color="black" fillcolor="white" style=filled]
  node13420 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{ns} be the String value that is the result of normalizing id:{S} into the normalization form named by id:{f} as specified in &lt; a href = \&quot; https : / / unicode . org / reports / tr15 / \&quot; &gt; https : / / unicode . org / reports / tr15 / &lt; / a &gt; .&quot;</td></tr>
      <tr><td align="left">6:return ns</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13408 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13411 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13415 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">form = &quot;NFC&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13419 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13407 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let f = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13412 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13418 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (= f &quot;NFC&quot;) (= f &quot;NFD&quot;)) (= f &quot;NFKC&quot;)) (= f &quot;NFKD&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node13416 [shape=cds, label=<<font color="black">3:app __x2__ = (ToString form)</font>> color="black" fillcolor="white" style=filled]
  node13409 [shape=cds, label=<<font color="black">app form = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13413 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13419 -> node13420 [ color="black"]
  node13411 -> node13412 [ color="black"]
  node13412 -> node13413 [ color="black"]
  node13409 -> node13410 [ color="black"]
  node13410 -> node13411 [ color="black"]
  node13414 -> node13415 [label=<<font color="black">true</font>> color="black"]
  node13414 -> node13416 [label=<<font color="black">false</font>> color="black"]
  node13420 -> node13408 [ color="black"]
  node13407 -> node13409 [ color="black"]
  node13416 -> node13417 [ color="black"]
  node13413 -> node13414 [ color="black"]
  node13418 -> node13419 [label=<<font color="black">true</font>> color="black"]
  node13418 -> node13420 [label=<<font color="black">false</font>> color="black"]
  node13415 -> node13416 [ color="black"]
  node13417 -> node13418 [ color="black"]
}
