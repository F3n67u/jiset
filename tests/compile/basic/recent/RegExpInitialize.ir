{
  if (= pattern undefined) let P = "" else {
    app __x0__ = (ToString pattern)
    let P = [? __x0__]
  }
  if (= flags undefined) let F = "" else {
    app __x1__ = (ToString flags)
    let F = [? __x1__]
  }
  if AnyBool throw SyntaxError else {}
  if (contains F "u") let u = true else let u = false
  if (= u true) {
    app __x2__ = (StringToCodePoints P)
    let patternText = [! __x2__]
    let patternCharacters = StrList
  } else {
    let patternText = AnyStr
    let patternCharacters = StrList
  }
  app __x3__ = (ParsePattern patternText u)
  let parseResult = __x3__
  if AnyBool throw SyntaxError else {}
  obj.OriginalSource = P
  obj.OriginalFlags = F
  obj.RegExpMatcher = null
  app __x4__ = (Set obj "lastIndex" 0i true)
  [? __x4__]
  return obj
}