digraph {
  node2607 [shape=cds, label=<<font color="black">4:app __x1__ = (MakeBasicObject (new [&quot;Prototype&quot;, &quot;Extensible&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node2603 [shape=diamond, label=<<font color="black">(&lt; (- (** 2.0 32i) 1i) length)</font>> color="black" fillcolor="white" style=filled]
  node2609 [shape=cds, label=<<font color="black">7:app __x2__ = (OrdinaryDefineOwnProperty A &quot;length&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; length, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node2598 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2602 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">length = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2597 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2599 [shape=cds, label=<<font color="black">0:app __x0__ = (IsNonNegativeInteger length)</font>> color="black" fillcolor="white" style=filled]
  node2608 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let A = [! __x1__]</td></tr>
      <tr><td align="left">5:A.Prototype = proto</td></tr>
      <tr><td align="left">6:A.DefineOwnProperty = ArrayExoticObjectDOTDefineOwnProperty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2604 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2600 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= [! __x0__] true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2601 [shape=diamond, label=<<font color="black">(= length -0.0)</font>> color="black" fillcolor="white" style=filled]
  node2606 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">proto = INTRINSIC_Array_prototype</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2605 [shape=diamond, label=<<font color="black">(= proto absent)</font>> color="black" fillcolor="white" style=filled]
  node2610 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x2__]</td></tr>
      <tr><td align="left">8:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2609 -> node2610 [ color="black"]
  node2602 -> node2603 [ color="black"]
  node2599 -> node2600 [ color="black"]
  node2601 -> node2602 [label=<<font color="black">true</font>> color="black"]
  node2601 -> node2603 [label=<<font color="black">false</font>> color="black"]
  node2600 -> node2601 [ color="black"]
  node2605 -> node2606 [label=<<font color="black">true</font>> color="black"]
  node2605 -> node2607 [label=<<font color="black">false</font>> color="black"]
  node2604 -> node2605 [ color="black"]
  node2610 -> node2598 [ color="black"]
  node2606 -> node2607 [ color="black"]
  node2597 -> node2599 [ color="black"]
  node2603 -> node2604 [label=<<font color="black">true</font>> color="black"]
  node2603 -> node2605 [label=<<font color="black">false</font>> color="black"]
  node2608 -> node2609 [ color="black"]
  node2607 -> node2608 [ color="black"]
}
