digraph {
  node18810 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18793 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18801 [shape=diamond, label=<<font color="black">(= promiseResolve.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18829 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x8__) (! (= __x8__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18792 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18802 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">promiseResolve = promiseResolve.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18822 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node18815 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18803 [shape=cds, label=<<font color="black">app __x2__ = (Call promiseCapability.Reject undefined (new [promiseResolve.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18807 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:promiseResolve</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18823 [shape=cds, label=<<font color="black">app __x7__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node18818 [shape=cds, label=<<font color="black">6:app __x5__ = (PerformPromiseAllSettled iteratorRecord C promiseCapability promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18804 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x2__) (! (= __x2__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18830 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18798 [shape=cds, label=<<font color="black">2:app __x1__ = (GetPromiseResolve C)</font>> color="black" fillcolor="white" style=filled]
  node18805 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18800 [shape=diamond, label=<<font color="black">(is-completion promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18814 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x4__) (! (= __x4__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18825 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node18809 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let iteratorRecord = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18796 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18820 [shape=cds, label=<<font color="black">7:app __x6__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node18821 [shape=diamond, label=<<font color="black">__x6__</font>> color="black" fillcolor="white" style=filled]
  node18799 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseResolve = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18816 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18828 [shape=cds, label=<<font color="black">app __x8__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18806 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18832 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18813 [shape=cds, label=<<font color="black">app __x4__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18795 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18797 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18811 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18794 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18826 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18808 [shape=cds, label=<<font color="black">4:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node18815 -> node18816 [ color="black"]
  node18812 -> node18817 [ color="black"]
  node18803 -> node18804 [ color="black"]
  node18824 -> node18825 [ color="black"]
  node18804 -> node18805 [label=<<font color="black">true</font>> color="black"]
  node18804 -> node18806 [label=<<font color="black">false</font>> color="black"]
  node18792 -> node18794 [ color="black"]
  node18827 -> node18832 [ color="black"]
  node18798 -> node18799 [ color="black"]
  node18816 -> node18817 [ color="black"]
  node18796 -> node18797 [ color="black"]
  node18821 -> node18822 [label=<<font color="black">true</font>> color="black"]
  node18821 -> node18833 [label=<<font color="black">false</font>> color="black"]
  node18818 -> node18819 [ color="black"]
  node18832 -> node18833 [ color="black"]
  node18805 -> node18806 [ color="black"]
  node18802 -> node18807 [ color="black"]
  node18826 -> node18827 [label=<<font color="black">true</font>> color="black"]
  node18826 -> node18828 [label=<<font color="black">false</font>> color="black"]
  node18811 -> node18812 [label=<<font color="black">true</font>> color="black"]
  node18811 -> node18813 [label=<<font color="black">false</font>> color="black"]
  node18819 -> node18820 [ color="black"]
  node18822 -> node18823 [label=<<font color="black">true</font>> color="black"]
  node18822 -> node18825 [label=<<font color="black">false</font>> color="black"]
  node18829 -> node18830 [label=<<font color="black">true</font>> color="black"]
  node18829 -> node18831 [label=<<font color="black">false</font>> color="black"]
  node18817 -> node18818 [ color="black"]
  node18814 -> node18815 [label=<<font color="black">true</font>> color="black"]
  node18814 -> node18816 [label=<<font color="black">false</font>> color="black"]
  node18813 -> node18814 [ color="black"]
  node18808 -> node18809 [ color="black"]
  node18828 -> node18829 [ color="black"]
  node18809 -> node18810 [ color="black"]
  node18806 -> node18807 [ color="black"]
  node18795 -> node18796 [ color="black"]
  node18831 -> node18832 [ color="black"]
  node18820 -> node18821 [ color="black"]
  node18801 -> node18802 [label=<<font color="black">true</font>> color="black"]
  node18801 -> node18803 [label=<<font color="black">false</font>> color="black"]
  node18830 -> node18831 [ color="black"]
  node18794 -> node18795 [ color="black"]
  node18797 -> node18798 [ color="black"]
  node18833 -> node18793 [ color="black"]
  node18825 -> node18826 [label=<<font color="black">true</font>> color="black"]
  node18825 -> node18832 [label=<<font color="black">false</font>> color="black"]
  node18807 -> node18808 [ color="black"]
  node18823 -> node18824 [ color="black"]
  node18799 -> node18800 [ color="black"]
  node18810 -> node18811 [label=<<font color="black">true</font>> color="black"]
  node18810 -> node18817 [label=<<font color="black">false</font>> color="black"]
  node18800 -> node18801 [label=<<font color="black">true</font>> color="black"]
  node18800 -> node18807 [label=<<font color="black">false</font>> color="black"]
}
