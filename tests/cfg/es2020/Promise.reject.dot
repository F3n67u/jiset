digraph {
  node18499 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18496 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18498 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18497 [shape=cds, label=<<font color="black">app r = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18502 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:[? __x1__]</td></tr>
      <tr><td align="left">3:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18500 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18495 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18501 [shape=cds, label=<<font color="black">2:app __x1__ = (Call promiseCapability.Reject undefined (new [r]))</font>> color="black" fillcolor="white" style=filled]
  node18500 -> node18501 [ color="black"]
  node18495 -> node18497 [ color="black"]
  node18497 -> node18498 [ color="black"]
  node18498 -> node18499 [ color="black"]
  node18501 -> node18502 [ color="black"]
  node18499 -> node18500 [ color="black"]
  node18502 -> node18496 [ color="black"]
}
