digraph {
  node17888 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot generator &quot;GeneratorState&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17890 [shape=diamond, label=<<font color="black">(= state CONST_executing)</font>> color="black" fillcolor="white" style=filled]
  node17887 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">2:let state = generator.GeneratorState</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return state</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17886 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17890 -> node17891 [label=<<font color="black">true</font>> color="black"]
  node17890 -> node17892 [label=<<font color="black">false</font>> color="black"]
  node17892 -> node17887 [ color="black"]
  node17888 -> node17889 [ color="black"]
  node17891 -> node17892 [ color="black"]
  node17889 -> node17890 [ color="black"]
  node17886 -> node17888 [ color="black"]
}
