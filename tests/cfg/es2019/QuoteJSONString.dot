digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = __x0__[__x1__]</td></tr>
      <tr><td align="left">3:??? &quot;If id:{C} is listed in the Code Point column of link:{unhandled: table-json-single-character-escapes} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">5:??? &quot;Else if id:{C} has a numeric value less than 0x0020 ( SPACE ) , or if id:{C} has the same numeric value as a link:{unhandled: leading-surrogate} or link:{unhandled: trailing-surrogate} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">8:??? &quot;Else , in:{} out:{}&quot;</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:product = (+ product &quot;\&quot;&quot;)</td></tr>
      <tr><td align="left">11:return product</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let product = &quot;\&quot;&quot;</td></tr>
      <tr><td align="left">1:??? &quot;Let id:{cpList} be a List containing in order the code points of id:{value} when interpreted as a sequence of UTF - 16 encoded code points as described in link:{unhandled: sec-ecmascript-language-types-string-type} .&quot;</td></tr>
      <tr><td align="left">2:let __x0__ = cpList</td></tr>
      <tr><td align="left">2:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node3 -> node4 [ color="black"]
  node2 -> node3 [ color="black"]
  node0 -> node2 [ color="black"]
  node4 -> node5 [label=<<font color="black">true</font>> color="black"]
  node4 -> node6 [label=<<font color="black">false</font>> color="black"]
  node6 -> node1 [ color="black"]
  node5 -> node4 [ color="black"]
}
