digraph {
  node12299 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12303 [shape=diamond, label=<<font color="black">(&lt; n 0i)</font>> color="black" fillcolor="white" style=filled]
  node12296 [shape=cds, label=<<font color="black">app count = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12306 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12300 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12304 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12305 [shape=diamond, label=<<font color="black">(= n Infinity)</font>> color="black" fillcolor="white" style=filled]
  node12295 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12301 [shape=cds, label=<<font color="black">2:app __x2__ = (ToInteger count)</font>> color="black" fillcolor="white" style=filled]
  node12297 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12294 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12302 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let n = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12298 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{T} be a String value that is made from id:{n} copies of id:{S} appended together . If id:{n} is 0 , id:{T} is the empty String .&quot;</td></tr>
      <tr><td align="left">6:return T</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12301 -> node12302 [ color="black"]
  node12298 -> node12299 [ color="black"]
  node12299 -> node12300 [ color="black"]
  node12305 -> node12306 [label=<<font color="black">true</font>> color="black"]
  node12305 -> node12307 [label=<<font color="black">false</font>> color="black"]
  node12304 -> node12305 [ color="black"]
  node12300 -> node12301 [ color="black"]
  node12296 -> node12297 [ color="black"]
  node12294 -> node12296 [ color="black"]
  node12303 -> node12304 [label=<<font color="black">true</font>> color="black"]
  node12303 -> node12305 [label=<<font color="black">false</font>> color="black"]
  node12306 -> node12307 [ color="black"]
  node12307 -> node12295 [ color="black"]
  node12297 -> node12298 [ color="black"]
  node12302 -> node12303 [ color="black"]
}
