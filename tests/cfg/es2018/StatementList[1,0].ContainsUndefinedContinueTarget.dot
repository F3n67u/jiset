digraph {
  node5676 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node5674 [shape=cds, label=<<font color="black">0:app __x1__ = (__x0__ iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node5680 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5673 [shape=cds, label=<<font color="black">0:access __x0__ = (StatementList &quot;ContainsUndefinedContinueTarget&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5679 [shape=cds, label=<<font color="black">2:app __x3__ = (__x2__ iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node5671 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5678 [shape=cds, label=<<font color="black">2:access __x2__ = (StatementListItem &quot;ContainsUndefinedContinueTarget&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5675 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5672 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5674 -> node5675 [ color="black"]
  node5680 -> node5672 [ color="black"]
  node5677 -> node5678 [ color="black"]
  node5676 -> node5677 [label=<<font color="black">true</font>> color="black"]
  node5676 -> node5678 [label=<<font color="black">false</font>> color="black"]
  node5679 -> node5680 [ color="black"]
  node5673 -> node5674 [ color="black"]
  node5671 -> node5673 [ color="black"]
  node5678 -> node5679 [ color="black"]
  node5675 -> node5676 [ color="black"]
}
