{
  app __x0__ = (RequireObjectCoercible this)
  let O = [? __x0__]
  if (! (|| (= separator undefined) (= separator null))) {
    app __x1__ = (GetMethod separator SYMBOL_split)
    let splitter = [? __x1__]
    if (! (= splitter undefined)) {
      app __x2__ = (Call splitter separator (new [O, limit]))
      return [? __x2__]
    } else {}
  } else {}
  app __x3__ = (ToString O)
  let S = [? __x3__]
  app __x4__ = (ArrayCreate 0i)
  let A = [! __x4__]
  let lengthA = 0i
  if (= limit undefined) let lim = (- (** 2.0 32i) 1i) else {
    app __x5__ = (ToUint32 limit)
    let lim = [? __x5__]
  }
  app __x6__ = (ToString separator)
  let R = [? __x6__]
  if (== lim 0i) return A else {}
  if (= separator undefined) {
    app __x7__ = (CreateDataPropertyOrThrow A "0" S)
    [! __x7__]
    return A
  } else {}
  let s = S.length
  if (== s 0i) {
    if (! (= R "")) {
      app __x8__ = (CreateDataPropertyOrThrow A "0" S)
      [! __x8__]
    } else {}
    return A
  } else {}
  let p = 0i
  let q = p
  while (! (== q s)) {
    app __x9__ = (SplitMatch S q R)
    let e = __x9__
    if (= e CONST_notDASHmatched) q = (+ q 1i) else if (== e p) q = (+ q 1i) else {
      let __x10__ = ""
      let __x11__ = p
      while (< __x11__ (+ q 1i)) {
        access __x12__ = (S __x11__)
        __x10__ = (+ __x10__ __x12__)
        __x11__ = (+ __x11__ 1i)
      }
      let T = __x10__
      app __x13__ = (ToString lengthA)
      app __x14__ = (CreateDataPropertyOrThrow A [! __x13__] T)
      [! __x14__]
      lengthA = (+ lengthA 1i)
      if (== lengthA lim) return A else {}
      p = e
      q = p
    }
  }
  let __x15__ = ""
  let __x16__ = p
  while (< __x16__ (+ s 1i)) {
    access __x17__ = (S __x16__)
    __x15__ = (+ __x15__ __x17__)
    __x16__ = (+ __x16__ 1i)
  }
  let T = __x15__
  app __x18__ = (ToString lengthA)
  app __x19__ = (CreateDataPropertyOrThrow A [! __x18__] T)
  [! __x19__]
  return A
}