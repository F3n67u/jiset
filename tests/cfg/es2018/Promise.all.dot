digraph {
  node17667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17687 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node17695 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17682 [shape=cds, label=<<font color="black">6:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node17689 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17693 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iteratorRecord = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17684 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node17665 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17688 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17694 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17662 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17691 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17670 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node17683 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node17692 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17663 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17675 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17669 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17686 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17676 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17685 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node17668 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node17666 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17672 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17680 [shape=cds, label=<<font color="black">5:app __x4__ = (PerformPromiseAll iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node17673 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17661 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17690 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17666 -> node17667 [label=<<font color="black">true</font>> color="black"]
  node17666 -> node17668 [label=<<font color="black">false</font>> color="black"]
  node17681 -> node17682 [ color="black"]
  node17688 -> node17689 [label=<<font color="black">true</font>> color="black"]
  node17688 -> node17690 [label=<<font color="black">false</font>> color="black"]
  node17676 -> node17677 [label=<<font color="black">true</font>> color="black"]
  node17676 -> node17678 [label=<<font color="black">false</font>> color="black"]
  node17672 -> node17673 [label=<<font color="black">true</font>> color="black"]
  node17672 -> node17679 [label=<<font color="black">false</font>> color="black"]
  node17695 -> node17662 [ color="black"]
  node17669 -> node17670 [ color="black"]
  node17678 -> node17679 [ color="black"]
  node17677 -> node17678 [ color="black"]
  node17682 -> node17683 [ color="black"]
  node17674 -> node17679 [ color="black"]
  node17667 -> node17668 [ color="black"]
  node17663 -> node17664 [ color="black"]
  node17664 -> node17665 [ color="black"]
  node17671 -> node17672 [ color="black"]
  node17661 -> node17663 [ color="black"]
  node17670 -> node17671 [ color="black"]
  node17685 -> node17686 [ color="black"]
  node17683 -> node17684 [label=<<font color="black">true</font>> color="black"]
  node17683 -> node17695 [label=<<font color="black">false</font>> color="black"]
  node17686 -> node17687 [ color="black"]
  node17668 -> node17669 [ color="black"]
  node17673 -> node17674 [label=<<font color="black">true</font>> color="black"]
  node17673 -> node17675 [label=<<font color="black">false</font>> color="black"]
  node17693 -> node17694 [ color="black"]
  node17687 -> node17688 [label=<<font color="black">true</font>> color="black"]
  node17687 -> node17694 [label=<<font color="black">false</font>> color="black"]
  node17680 -> node17681 [ color="black"]
  node17690 -> node17691 [ color="black"]
  node17684 -> node17685 [label=<<font color="black">true</font>> color="black"]
  node17684 -> node17687 [label=<<font color="black">false</font>> color="black"]
  node17691 -> node17692 [label=<<font color="black">true</font>> color="black"]
  node17691 -> node17693 [label=<<font color="black">false</font>> color="black"]
  node17692 -> node17693 [ color="black"]
  node17694 -> node17695 [ color="black"]
  node17665 -> node17666 [ color="black"]
  node17679 -> node17680 [ color="black"]
  node17689 -> node17694 [ color="black"]
  node17675 -> node17676 [ color="black"]
}
