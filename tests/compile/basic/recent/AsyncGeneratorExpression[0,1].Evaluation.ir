{
  let scope = GLOBAL_context.LexicalEnvironment
  app __x0__ = (NewDeclarativeEnvironment scope)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let funcEnv = __x0__
  access __x1__ = (BindingIdentifier "StringValue")
  let name = __x1__
  app __x2__ = (funcEnv.CreateImmutableBinding funcEnv name false)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  __x2__
  let sourceText = (get-syntax AsyncGeneratorExpression)
  app __x3__ = (OrdinaryFunctionCreate INTRINSIC_AsyncGeneratorFunction.prototype sourceText FormalParameters AsyncGeneratorBody CONST_nonDASHlexicalDASHthis funcEnv)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let closure = __x3__
  app __x4__ = (SetFunctionName closure name)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  __x4__
  app __x5__ = (OrdinaryObjectCreate INTRINSIC_AsyncGeneratorFunction[prototype.prototype])
  if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
  let prototype = __x5__
  app __x6__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
  __x6__
  app __x7__ = (funcEnv.InitializeBinding funcEnv name closure)
  if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
  __x7__
  app __x8__ = (WrapCompletion closure)
  return __x8__
}