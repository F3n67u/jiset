{
  access __x0__ = (PropertyName "Evaluation")
  let propKey = __x0__
  if (is-completion propKey) if (= propKey.Type CONST_normal) propKey = propKey.Value else return propKey else {}
  propKey
  let scope = GLOBAL_context.LexicalEnvironment
  let sourceText = (get-syntax GeneratorMethod)
  ??? "Let id:{closure} be OrdinaryFunctionCreate ( % GeneratorFunction . prototype % , id:{sourceText} , nt:{UniqueFormalParameters} , nt:{GeneratorBody} , const:{non-lexical-this} , id:{scope} ) ."
  app __x1__ = (MakeMethod closure object)
  __x1__
  app __x2__ = (SetFunctionName closure propKey)
  __x2__
  ??? "Let id:{prototype} be ! OrdinaryObjectCreate ( % GeneratorFunction . prototype . prototype % ) ."
  app __x3__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  __x3__
  let desc = (new PropertyDescriptor("Value" -> closure, "Writable" -> true, "Enumerable" -> enumerable, "Configurable" -> true))
  app __x4__ = (DefinePropertyOrThrow object propKey desc)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  app __x5__ = (WrapCompletion __x4__)
  return __x5__
}