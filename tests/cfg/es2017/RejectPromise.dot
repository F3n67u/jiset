digraph {
  node16440 [shape=cds, label=<<font color="black">app __x0__ = (HostPromiseRejectionTracker promise &quot;reject&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16441 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16436 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16439 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node16435 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16442 [shape=cds, label=<<font color="black">7:app __x1__ = (TriggerPromiseReactions reactions reason)</font>> color="black" fillcolor="white" style=filled]
  node16443 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16438 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= promise.PromiseState &quot;pending&quot;)</td></tr>
      <tr><td align="left">1:let reactions = promise.PromiseRejectReactions</td></tr>
      <tr><td align="left">2:promise.PromiseResult = reason</td></tr>
      <tr><td align="left">3:promise.PromiseFulfillReactions = undefined</td></tr>
      <tr><td align="left">4:promise.PromiseRejectReactions = undefined</td></tr>
      <tr><td align="left">5:promise.PromiseState = &quot;rejected&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16434 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16437 [shape=cds, label=<<font color="black">app reason = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16439 -> node16440 [label=<<font color="black">true</font>> color="black"]
  node16439 -> node16442 [label=<<font color="black">false</font>> color="black"]
  node16442 -> node16443 [ color="black"]
  node16443 -> node16435 [ color="black"]
  node16438 -> node16439 [ color="black"]
  node16441 -> node16442 [ color="black"]
  node16436 -> node16437 [ color="black"]
  node16440 -> node16441 [ color="black"]
  node16437 -> node16438 [ color="black"]
  node16434 -> node16436 [ color="black"]
}
