{
  access __x0__ = (AsyncFunctionBody "ContainsUseStrict")
  let __x1__ = (= __x0__ true)
  if __x1__ {
    access __x2__ = (FormalParameters "IsSimpleParameterList")
    __x1__ = (= __x2__ false)
  } else {}
  if __x1__ {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
  access __x4__ = (FormalParameters "Contains")
  app __x5__ = (__x4__ "AwaitExpression")
  if (= __x5__ true) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
  ??? "If the source code matching this production is strict code , the Early Error rules for grammar:{UniqueFormalParameters0, [FormalParameters]} are applied ."
  ??? "If the source code matching this production is strict code , it is a Syntax Error if nt:{BindingIdentifier} is the nt:{IdentifierName} code:{eval} or the nt:{IdentifierName} code:{arguments} ."
  access __x6__ = (FormalParameters "BoundNames")
  access __x7__ = (AsyncFunctionBody "LexicallyDeclaredNames")
  let __x8__ = __x6__
  let __x9__ = __x7__
  let __x10__ = 0i
  let __x11__ = 0i
  let __x12__ = false
  while (< __x10__ __x8__.length) {
    __x11__ = 0i
    while (< __x11__ __x9__.length) if (= __x8__[__x10__] __x9__[__x11__]) __x12__ = true else {}
  }
  if __x12__ {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
  access __x13__ = (FormalParameters "Contains")
  app __x14__ = (__x13__ "SuperProperty")
  if (= __x14__ true) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
  access __x15__ = (AsyncFunctionBody "Contains")
  app __x16__ = (__x15__ "SuperProperty")
  if (= __x16__ true) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
  access __x17__ = (FormalParameters "Contains")
  app __x18__ = (__x17__ "SuperCall")
  if (= __x18__ true) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
  access __x19__ = (AsyncFunctionBody "Contains")
  app __x20__ = (__x19__ "SuperCall")
  if (= __x20__ true) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
}