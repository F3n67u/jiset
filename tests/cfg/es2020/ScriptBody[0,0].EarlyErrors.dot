digraph {
  node20765 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node20771 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20774 [shape=cds, label=<<font color="black">3:app __x3__ = (__x2__ (new []))</font>> color="black" fillcolor="white" style=filled]
  node20767 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;It is a Syntax Error if nt:{StatementList} Contains code:{super} unless the source code containing code:{super} is eval code that is being processed by a direct eval . Additional early error rules for code:{super} within direct eval are defined in PerformEval .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;It is a Syntax Error if nt:{StatementList} Contains nt:{NewTarget} unless the source code containing nt:{NewTarget} is eval code that is being processed by a direct eval . Additional early error rules for nt:{NewTarget} in direct eval are defined in PerformEval .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20779 [shape=cds, label=<<font color="black">4:app __x5__ = (__x4__ (new []) (new []))</font>> color="black" fillcolor="white" style=filled]
  node20782 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20768 [shape=cds, label=<<font color="black">2:access __x0__ = (StatementList &quot;ContainsDuplicateLabels&quot;)</font>> color="black" fillcolor="white" style=filled]
  node20769 [shape=cds, label=<<font color="black">2:app __x1__ = (__x0__ (new []))</font>> color="black" fillcolor="white" style=filled]
  node20772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20777 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20775 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node20781 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20780 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node20766 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node20770 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node20773 [shape=cds, label=<<font color="black">3:access __x2__ = (StatementList &quot;ContainsUndefinedBreakTarget&quot;)</font>> color="black" fillcolor="white" style=filled]
  node20776 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20778 [shape=cds, label=<<font color="black">4:access __x4__ = (StatementList &quot;ContainsUndefinedContinueTarget&quot;)</font>> color="black" fillcolor="white" style=filled]
  node20777 -> node20778 [ color="black"]
  node20774 -> node20775 [ color="black"]
  node20782 -> node20766 [ color="black"]
  node20779 -> node20780 [ color="black"]
  node20775 -> node20776 [label=<<font color="black">true</font>> color="black"]
  node20775 -> node20777 [label=<<font color="black">false</font>> color="black"]
  node20773 -> node20774 [ color="black"]
  node20769 -> node20770 [ color="black"]
  node20765 -> node20767 [ color="black"]
  node20781 -> node20766 [ color="black"]
  node20770 -> node20771 [label=<<font color="black">true</font>> color="black"]
  node20770 -> node20772 [label=<<font color="black">false</font>> color="black"]
  node20768 -> node20769 [ color="black"]
  node20780 -> node20781 [label=<<font color="black">true</font>> color="black"]
  node20780 -> node20782 [label=<<font color="black">false</font>> color="black"]
  node20767 -> node20768 [ color="black"]
  node20776 -> node20778 [ color="black"]
  node20772 -> node20773 [ color="black"]
  node20771 -> node20773 [ color="black"]
  node20778 -> node20779 [ color="black"]
}
