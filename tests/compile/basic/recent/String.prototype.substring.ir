{
  app __x0__ = (RequireObjectCoercible this)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let O = __x0__
  app __x1__ = (ToString O)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let S = __x1__
  let len = S.length
  app __x2__ = (ToIntegerOrInfinity start)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let intStart = __x2__
  if (= end undefined) let intEnd = len else {
    app __x3__ = (ToIntegerOrInfinity end)
    if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
    let intEnd = __x3__
  }
  ??? "Let id:{finalStart} be the result of clamping id:{intStart} between 0 and id:{len} ."
  ??? "Let id:{finalEnd} be the result of clamping id:{intEnd} between 0 and id:{len} ."
  app __x4__ = (min finalStart finalEnd)
  let from = __x4__
  app __x5__ = (max finalStart finalEnd)
  let to = __x5__
  let __x6__ = ""
  let __x7__ = from
  while (< __x7__ (+ to 1i)) {
    access __x8__ = (S __x7__)
    __x6__ = (+ __x6__ __x8__)
    __x7__ = (+ __x7__ 1i)
  }
  app __x9__ = (WrapCompletion __x6__)
  return __x9__
}