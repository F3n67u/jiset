digraph {
  node3588 [shape=cds, label=<<font color="black">1:app __x0__ = (GetTemplateObject templateLiteral)</font>> color="black" fillcolor="white" style=filled]
  node3591 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let firstSub = __x1__</td></tr>
      <tr><td align="left">3:[? firstSub]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3590 [shape=cds, label=<<font color="black">2:access __x1__ = (Expression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3586 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3585 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3587 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let templateLiteral = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3592 [shape=cds, label=<<font color="black">4:access __x2__ = (TemplateSpans &quot;SubstitutionEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3589 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let siteObj = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3593 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let restSub = __x2__</td></tr>
      <tr><td align="left">5:[? restSub]</td></tr>
      <tr><td align="left">7:??? &quot;Return a List whose first element is id:{siteObj} , whose second elements is id:{firstSub} , and whose subsequent elements are the elements of id:{restSub} , in order . id:{restSub} may contain no elements .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3585 -> node3587 [ color="black"]
  node3590 -> node3591 [ color="black"]
  node3588 -> node3589 [ color="black"]
  node3593 -> node3586 [ color="black"]
  node3592 -> node3593 [ color="black"]
  node3587 -> node3588 [ color="black"]
  node3589 -> node3590 [ color="black"]
  node3591 -> node3592 [ color="black"]
}
