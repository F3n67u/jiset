{
  app mapperFunction = (GetArgument argumentsList 0i)
  app thisArg = (GetArgument argumentsList 1i)
  [0] app __x0__ = (ToObject this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [5] {}
  [0] let O = __x0__
  [1] app __x1__ = (LengthOfArrayLike O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [5] {}
  [1] let sourceLen = __x1__
  [2] app __x2__ = (IsCallable mapperFunction)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [5] {}
  [2] if (= __x2__ false) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else [5] {}
  [3] app __x4__ = (ArraySpeciesCreate O 0i)
  [3] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [5] {}
  [3] let A = __x4__
  [4] app __x5__ = (FlattenIntoArray A O sourceLen 0i 1i mapperFunction thisArg)
  [4] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [5] {}
  [4] __x5__
  [5] app __x6__ = (WrapCompletion A)
  [5] return __x6__
}