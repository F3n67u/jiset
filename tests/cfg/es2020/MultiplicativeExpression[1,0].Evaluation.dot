digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let leftValue = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=cds, label=<<font color="black">4:app __x4__ = (ToNumeric leftValue)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=cds, label=<<font color="black">6:app __x6__ = (Type lnum)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=diamond, label=<<font color="black">(= MultiplicativeOperator ??? &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=cds, label=<<font color="black">2:access __x2__ = (ExponentiationExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let rightValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let rnum = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">0:access __x0__ = (MultiplicativeExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=cds, label=<<font color="black">5:app __x5__ = (ToNumeric rightValue)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let right = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let left = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=cds, label=<<font color="black">7:app __x8__ = (Type lnum)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=diamond, label=<<font color="black">(! (= __x6__ __x7__))</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let lnum = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">3:app __x3__ = (GetValue right)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let T = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">1:app __x1__ = (GetValue left)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">6:app __x7__ = (Type rnum)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=cds, label=<<font color="black">app __x10__ = (PRIMITIVE[T].divide lnum rnum)</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=cds, label=<<font color="black">app __x9__ = (PRIMITIVE[T].multiply lnum rnum)</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=cds, label=<<font color="black">12:app __x11__ = (PRIMITIVE[T].remainder lnum rnum)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:assert (= MultiplicativeOperator ??? &quot;%&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=diamond, label=<<font color="black">(= MultiplicativeOperator ??? &quot;/&quot;)</font>> color="black" fillcolor="white" style=filled]
  node28 -> node1 [ color="black"]
  node11 -> node12 [ color="black"]
  node0 -> node2 [ color="black"]
  node9 -> node10 [ color="black"]
  node27 -> node28 [ color="black"]
  node14 -> node15 [ color="black"]
  node26 -> node27 [ color="black"]
  node4 -> node5 [ color="black"]
  node24 -> node25 [ color="black"]
  node17 -> node18 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node7 -> node8 [ color="black"]
  node18 -> node19 [ color="black"]
  node2 -> node3 [ color="black"]
  node23 -> node24 [label=<<font color="black">true</font>> color="black"]
  node23 -> node26 [label=<<font color="black">false</font>> color="black"]
  node15 -> node16 [ color="black"]
  node19 -> node20 [ color="black"]
  node13 -> node14 [ color="black"]
  node20 -> node21 [label=<<font color="black">true</font>> color="black"]
  node20 -> node23 [label=<<font color="black">false</font>> color="black"]
  node12 -> node13 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node10 -> node11 [ color="black"]
  node16 -> node17 [label=<<font color="black">true</font>> color="black"]
  node16 -> node18 [label=<<font color="black">false</font>> color="black"]
  node25 -> node1 [ color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [ color="black"]
}
