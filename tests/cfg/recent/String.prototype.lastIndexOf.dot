digraph {
  node14358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let searchStr = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14354 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14351 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14361 [shape=diamond, label=<<font color="black">(= numPos NaN)</font>> color="black" fillcolor="white" style=filled]
  node14357 [shape=cds, label=<<font color="black">2:app __x2__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node14363 [shape=cds, label=<<font color="black">app __x4__ = (ToIntegerOrInfinity numPos)</font>> color="black" fillcolor="white" style=filled]
  node14353 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node14352 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node14362 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14360 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let numPos = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14364 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14365 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let len = S.length</td></tr>
      <tr><td align="left">7:??? &quot;Let id:{start} be the result of clamping id:{pos} between 0 and id:{len} .&quot;</td></tr>
      <tr><td align="left">8:let searchLen = searchStr.length</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{k} be the largest possible non - negative integer not larger than id:{start} such that id:{k} + id:{searchLen} &le; id:{len} , and for all non - negative integers id:{j} such that id:{j} &lt; id:{searchLen} , the code unit at index id:{k} + id:{j} within id:{S} is the same as the code unit at index id:{j} within id:{searchStr} ; but if there is no such integer , let id:{k} be - 1 .&quot;</td></tr>
      <tr><td align="left">10:return k</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14349 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14356 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14359 [shape=cds, label=<<font color="black">3:app __x3__ = (ToNumber position)</font>> color="black" fillcolor="white" style=filled]
  node14350 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14355 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node14363 -> node14364 [ color="black"]
  node14358 -> node14359 [ color="black"]
  node14355 -> node14356 [ color="black"]
  node14365 -> node14350 [ color="black"]
  node14357 -> node14358 [ color="black"]
  node14361 -> node14362 [label=<<font color="black">true</font>> color="black"]
  node14361 -> node14363 [label=<<font color="black">false</font>> color="black"]
  node14364 -> node14365 [ color="black"]
  node14354 -> node14355 [ color="black"]
  node14359 -> node14360 [ color="black"]
  node14362 -> node14365 [ color="black"]
  node14356 -> node14357 [ color="black"]
  node14353 -> node14354 [ color="black"]
  node14349 -> node14351 [ color="black"]
  node14352 -> node14353 [ color="black"]
  node14360 -> node14361 [ color="black"]
  node14351 -> node14352 [ color="black"]
}
