{
  [0] let oldEnv = GLOBAL_context.LexicalEnvironment
  [1] app __x0__ = (NewDeclarativeEnvironment oldEnv)
  [1] let loopEnv = __x0__
  [2] access __x1__ = (LexicalDeclaration "IsConstantDeclaration")
  [2] let isConst = __x1__
  [3] access __x2__ = (LexicalDeclaration "BoundNames")
  [3] let boundNames = __x2__
  [4] let __x3__ = boundNames
  [4] let __x4__ = 0i
  [4] while (< __x4__ __x3__.length) {
    let dn = __x3__[__x4__]
    [7] if (= isConst true) {
      [6] app __x5__ = (loopEnv.CreateImmutableBinding loopEnv dn true)
      [6] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [9] {}
      [6] __x5__
    } else {
      [8] app __x6__ = (loopEnv.CreateMutableBinding loopEnv dn false)
      [8] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [9] {}
      [8] __x6__
    }
    __x4__ = (+ __x4__ 1i)
  }
  [9] GLOBAL_context.LexicalEnvironment = loopEnv
  [10] access __x7__ = (LexicalDeclaration "Evaluation")
  [10] let forDcl = __x7__
  [11] app __x8__ = (IsAbruptCompletion forDcl)
  [11] if __x8__ {
    [12] GLOBAL_context.LexicalEnvironment = oldEnv
    [13] app __x9__ = (Completion forDcl)
    [13] app __x10__ = (WrapCompletion __x9__)
    [13] return __x10__
  } else [9] {}
  [14] if (= isConst false) let perIterationLets = boundNames else let perIterationLets = (new [])
  [15] app __x11__ = (ForBodyEvaluation Expression0 Expression1 Statement perIterationLets labelSet)
  [15] let bodyResult = __x11__
  [16] GLOBAL_context.LexicalEnvironment = oldEnv
  [17] app __x12__ = (Completion bodyResult)
  [17] app __x13__ = (WrapCompletion __x12__)
  [17] return __x13__
}