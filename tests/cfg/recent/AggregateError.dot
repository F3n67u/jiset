digraph {
  node12539 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let msg = [? __x1__]</td></tr>
      <tr><td align="left">4:let msgDesc = (new PropertyDescriptor(&quot;Value&quot; -&gt; msg, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12545 [shape=cds, label=<<font color="black">7:app __x5__ = (DefinePropertyOrThrow O &quot;errors&quot; (new PropertyDescriptor(&quot;Configurable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Writable&quot; -&gt; true, &quot;Value&quot; -&gt; [! __x4__])))</font>> color="black" fillcolor="white" style=filled]
  node12543 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let errorsList = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12531 [shape=cds, label=<<font color="black">app message = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12542 [shape=cds, label=<<font color="black">6:app __x3__ = (IterableToList errors)</font>> color="black" fillcolor="white" style=filled]
  node12541 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12537 [shape=diamond, label=<<font color="black">(! (= message undefined))</font>> color="black" fillcolor="white" style=filled]
  node12528 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12534 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12529 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12540 [shape=cds, label=<<font color="black">5:app __x2__ = (DefinePropertyOrThrow O &quot;message&quot; msgDesc)</font>> color="black" fillcolor="white" style=filled]
  node12544 [shape=cds, label=<<font color="black">7:app __x4__ = (CreateArrayFromList errorsList)</font>> color="black" fillcolor="white" style=filled]
  node12538 [shape=cds, label=<<font color="black">3:app __x1__ = (ToString message)</font>> color="black" fillcolor="white" style=filled]
  node12546 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x5__]</td></tr>
      <tr><td align="left">8:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12532 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node12533 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12530 [shape=cds, label=<<font color="black">app errors = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12535 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor newTarget &quot;%AggregateError.prototype%&quot; (new [&quot;ErrorData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node12545 -> node12546 [ color="black"]
  node12542 -> node12543 [ color="black"]
  node12538 -> node12539 [ color="black"]
  node12543 -> node12544 [ color="black"]
  node12535 -> node12536 [ color="black"]
  node12531 -> node12532 [ color="black"]
  node12539 -> node12540 [ color="black"]
  node12540 -> node12541 [ color="black"]
  node12536 -> node12537 [ color="black"]
  node12541 -> node12542 [ color="black"]
  node12528 -> node12530 [ color="black"]
  node12546 -> node12529 [ color="black"]
  node12544 -> node12545 [ color="black"]
  node12533 -> node12535 [ color="black"]
  node12532 -> node12533 [label=<<font color="black">true</font>> color="black"]
  node12532 -> node12534 [label=<<font color="black">false</font>> color="black"]
  node12530 -> node12531 [ color="black"]
  node12537 -> node12538 [label=<<font color="black">true</font>> color="black"]
  node12537 -> node12542 [label=<<font color="black">false</font>> color="black"]
  node12534 -> node12535 [ color="black"]
}
