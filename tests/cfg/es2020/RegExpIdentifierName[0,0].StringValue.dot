digraph {
  node14280 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let idText = (get-syntax RegExpIdentifierName)</td></tr>
      <tr><td align="left">1:??? &quot;Let id:{idTextUnescaped} be the result of replacing any occurrences of code:{\\\\} nt:{RegExpUnicodeEscapeSequence} in id:{idText} with the code point represented by the nt:{RegExpUnicodeEscapeSequence} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14281 [shape=cds, label=<<font color="black">2:app __x0__ = (UTF16Encode idTextUnescaped)</font>> color="black" fillcolor="white" style=filled]
  node14282 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14279 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14278 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14278 -> node14280 [ color="black"]
  node14280 -> node14281 [ color="black"]
  node14281 -> node14282 [ color="black"]
  node14282 -> node14279 [ color="black"]
}
