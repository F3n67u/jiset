digraph {
  node11866 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11870 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node11876 [shape=cds, label=<<font color="black">10:app __x0__ = (CodePointAt string k)</font>> color="black" fillcolor="white" style=filled]
  node11865 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11877 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let cp = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11869 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let strLen = string.length</td></tr>
      <tr><td align="left">1:let R = &quot;&quot;</td></tr>
      <tr><td align="left">2:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11873 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let C = string[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11878 [shape=diamond, label=<<font color="black">(= cp.IsUnpairedSurrogate true)</font>> color="black" fillcolor="white" style=filled]
  node11868 [shape=cds, label=<<font color="black">app unescapedSet = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node11874 [shape=diamond, label=<<font color="black">(contains unescapedSet C)</font>> color="black" fillcolor="white" style=filled]
  node11872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return R</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11867 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11871 [shape=diamond, label=<<font color="black">(= k strLen)</font>> color="black" fillcolor="white" style=filled]
  node11875 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:k = (+ k 1i)</td></tr>
      <tr><td align="left">8:R = (+ R C)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11880 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:k = (+ k cp.CodeUnitCount)</td></tr>
      <tr><td align="left">13:??? &quot;Let id:{Octets} be the List of octets resulting by applying the UTF - 8 transformation to id:{cp} . [ [ CodePoint ] ] .&quot;</td></tr>
      <tr><td align="left">14:let __x1__ = Octets</td></tr>
      <tr><td align="left">14:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11881 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node11882 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let octet = __x1__[__x2__]</td></tr>
      <tr><td align="left">15:R = (+ (+ ??? &quot;StringOp&quot; &quot;%&quot;) ??? &quot;StringOp&quot;)</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw URIError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11880 -> node11881 [ color="black"]
  node11867 -> node11868 [ color="black"]
  node11877 -> node11878 [ color="black"]
  node11869 -> node11870 [ color="black"]
  node11865 -> node11867 [ color="black"]
  node11878 -> node11879 [label=<<font color="black">true</font>> color="black"]
  node11878 -> node11880 [label=<<font color="black">false</font>> color="black"]
  node11882 -> node11881 [ color="black"]
  node11872 -> node11873 [ color="black"]
  node11868 -> node11869 [ color="black"]
  node11873 -> node11874 [ color="black"]
  node11871 -> node11872 [label=<<font color="black">true</font>> color="black"]
  node11871 -> node11873 [label=<<font color="black">false</font>> color="black"]
  node11870 -> node11871 [label=<<font color="black">true</font>> color="black"]
  node11870 -> node11866 [label=<<font color="black">false</font>> color="black"]
  node11876 -> node11877 [ color="black"]
  node11874 -> node11875 [label=<<font color="black">true</font>> color="black"]
  node11874 -> node11876 [label=<<font color="black">false</font>> color="black"]
  node11879 -> node11880 [ color="black"]
  node11881 -> node11882 [label=<<font color="black">true</font>> color="black"]
  node11881 -> node11870 [label=<<font color="black">false</font>> color="black"]
  node11875 -> node11870 [ color="black"]
}
