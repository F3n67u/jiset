digraph {
  node3873 [shape=cds, label=<<font color="black">4:app __x2__ = (GetValue initResult)</font>> color="black" fillcolor="white" style=filled]
  node3866 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3870 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:nextIndex = __x0__</td></tr>
      <tr><td align="left">2:[? nextIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3867 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3877 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let created = [! __x4__]</td></tr>
      <tr><td align="left">6:return (+ nextIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3871 [shape=cds, label=<<font color="black">3:access __x1__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3868 [shape=diamond, label=<<font color="black">(! (= Elision absent))</font>> color="black" fillcolor="white" style=filled]
  node3876 [shape=cds, label=<<font color="black">5:app __x4__ = (CreateDataPropertyOrThrow array [! __x3__] initValue)</font>> color="black" fillcolor="white" style=filled]
  node3872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let initResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let initValue = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3875 [shape=cds, label=<<font color="black">5:app __x3__ = (ToString nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node3869 [shape=cds, label=<<font color="black">1:access __x0__ = (Elision &quot;ArrayAccumulation&quot; array nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node3866 -> node3868 [ color="black"]
  node3875 -> node3876 [ color="black"]
  node3877 -> node3867 [ color="black"]
  node3870 -> node3871 [ color="black"]
  node3874 -> node3875 [ color="black"]
  node3873 -> node3874 [ color="black"]
  node3868 -> node3869 [label=<<font color="black">true</font>> color="black"]
  node3868 -> node3871 [label=<<font color="black">false</font>> color="black"]
  node3871 -> node3872 [ color="black"]
  node3869 -> node3870 [ color="black"]
  node3876 -> node3877 [ color="black"]
  node3872 -> node3873 [ color="black"]
}
