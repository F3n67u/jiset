digraph {
  node17371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let generator = this</td></tr>
      <tr><td align="left">1:let completion = (new Completion(&quot;Type&quot; -&gt; CONST_return, &quot;Value&quot; -&gt; value, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17370 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17372 [shape=cds, label=<<font color="black">2:app __x0__ = (AsyncGeneratorEnqueue generator completion)</font>> color="black" fillcolor="white" style=filled]
  node17368 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17369 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17371 -> node17372 [ color="black"]
  node17368 -> node17370 [ color="black"]
  node17372 -> node17373 [ color="black"]
  node17370 -> node17371 [ color="black"]
  node17373 -> node17369 [ color="black"]
}
