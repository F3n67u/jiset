{
  app x = (GetArgument argumentsList 0i)
  [0] let C = this
  [1] app __x0__ = (Type C)
  [1] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [1] {}
  [2] app __x2__ = (IsPromise x)
  [2] if (= __x2__ true) {
    [3] app __x3__ = (Get x "constructor")
    [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [1] {}
    [3] let xConstructor = __x3__
    [4] app __x4__ = (SameValue xConstructor C)
    [4] if (= __x4__ true) {
      app __x5__ = (WrapCompletion x)
      return __x5__
    } else [1] {}
  } else [1] {}
  [5] app __x6__ = (NewPromiseCapability C)
  [5] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [1] {}
  [5] let promiseCapability = __x6__
  [6] app __x7__ = (Call promiseCapability.Resolve undefined (new [x]))
  [6] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [1] {}
  [6] __x7__
  [7] app __x8__ = (WrapCompletion promiseCapability.Promise)
  [7] return __x8__
}