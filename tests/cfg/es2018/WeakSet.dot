digraph {
  node16340 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16353 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16336 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node16351 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node16347 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16344 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node16339 [shape=cds, label=<<font color="black">7:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16348 [shape=cds, label=<<font color="black">12:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node16343 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16334 [shape=cds, label=<<font color="black">5:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16338 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16342 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node16345 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16337 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16341 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node16346 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node16332 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node16325 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16324 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16333 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16328 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakSetPrototype (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16329 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16323 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16349 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16330 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node16327 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16350 [shape=cds, label=<<font color="black">13:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node16352 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node16326 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16331 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16326 -> node16327 [label=<<font color="black">true</font>> color="black"]
  node16326 -> node16328 [label=<<font color="black">false</font>> color="black"]
  node16335 -> node16336 [ color="black"]
  node16348 -> node16349 [ color="black"]
  node16342 -> node16343 [ color="black"]
  node16330 -> node16331 [label=<<font color="black">true</font>> color="black"]
  node16330 -> node16332 [label=<<font color="black">false</font>> color="black"]
  node16341 -> node16342 [label=<<font color="black">true</font>> color="black"]
  node16341 -> node16324 [label=<<font color="black">false</font>> color="black"]
  node16337 -> node16338 [label=<<font color="black">true</font>> color="black"]
  node16337 -> node16339 [label=<<font color="black">false</font>> color="black"]
  node16347 -> node16348 [ color="black"]
  node16332 -> node16333 [label=<<font color="black">true</font>> color="black"]
  node16332 -> node16334 [label=<<font color="black">false</font>> color="black"]
  node16339 -> node16340 [ color="black"]
  node16351 -> node16352 [label=<<font color="black">true</font>> color="black"]
  node16351 -> node16341 [label=<<font color="black">false</font>> color="black"]
  node16344 -> node16345 [label=<<font color="black">true</font>> color="black"]
  node16344 -> node16346 [label=<<font color="black">false</font>> color="black"]
  node16333 -> node16334 [ color="black"]
  node16329 -> node16330 [ color="black"]
  node16346 -> node16347 [ color="black"]
  node16331 -> node16332 [ color="black"]
  node16352 -> node16353 [ color="black"]
  node16323 -> node16325 [ color="black"]
  node16327 -> node16328 [ color="black"]
  node16353 -> node16341 [ color="black"]
  node16350 -> node16351 [ color="black"]
  node16338 -> node16339 [ color="black"]
  node16328 -> node16329 [ color="black"]
  node16325 -> node16326 [ color="black"]
  node16343 -> node16344 [ color="black"]
  node16345 -> node16346 [ color="black"]
  node16334 -> node16335 [ color="black"]
  node16349 -> node16350 [ color="black"]
  node16336 -> node16337 [ color="black"]
  node16340 -> node16341 [ color="black"]
}
