digraph {
  node11603 [shape=diamond, label=<<font color="black">(! (= fractionDigits undefined))</font>> color="black" fillcolor="white" style=filled]
  node11596 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let s = &quot;-&quot;</td></tr>
      <tr><td align="left">7:let x = (- x)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11597 [shape=diamond, label=<<font color="black">(== x Infinity)</font>> color="black" fillcolor="white" style=filled]
  node11602 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:??? &quot;Let id:{m} be the String consisting of id:{f} + 1 occurrences of the code unit 0x0030 ( DIGIT ZERO ) .&quot;</td></tr>
      <tr><td align="left">13:let e = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11614 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:??? &quot;Let id:{d} be the String consisting of the digits of the decimal representation of id:{e} ( in order , with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11593 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;NaN&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11591 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let f = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11585 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11595 [shape=diamond, label=<<font color="black">(&lt; x 0i)</font>> color="black" fillcolor="white" style=filled]
  node11613 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let c = &quot;-&quot;</td></tr>
      <tr><td align="left">30:let e = (- e)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11588 [shape=cds, label=<<font color="black">0:app __x0__ = (thisNumberValue this)</font>> color="black" fillcolor="white" style=filled]
  node11609 [shape=diamond, label=<<font color="black">(== e 0i)</font>> color="black" fillcolor="white" style=filled]
  node11600 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11587 [shape=cds, label=<<font color="black">app fractionDigits = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11592 [shape=diamond, label=<<font color="black">(= x NaN)</font>> color="black" fillcolor="white" style=filled]
  node11608 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:??? &quot;Let id:{a} be the first element of id:{m} , and let id:{b} be the remaining id:{f} elements of id:{m} .&quot;</td></tr>
      <tr><td align="left">22:??? &quot;Let id:{m} be the concatenation of the three Strings id:{a} , code:{\&quot;.\&quot;} , and id:{b} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11606 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;Let id:{m} be the String consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11610 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let c = &quot;+&quot;</td></tr>
      <tr><td align="left">25:let d = &quot;0&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11615 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:??? &quot;Let id:{m} be the concatenation of the four Strings id:{m} , code:{\&quot;e\&quot;} , id:{c} , and id:{d} .&quot;</td></tr>
      <tr><td align="left">33:return (+ s m)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11598 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (+ s &quot;Infinity&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11601 [shape=diamond, label=<<font color="black">(== x 0i)</font>> color="black" fillcolor="white" style=filled]
  node11586 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11590 [shape=cds, label=<<font color="black">1:app __x1__ = (ToInteger fractionDigits)</font>> color="black" fillcolor="white" style=filled]
  node11607 [shape=diamond, label=<<font color="black">(! (== f 0i))</font>> color="black" fillcolor="white" style=filled]
  node11605 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{e} , id:{n} , and id:{f} be integers such that id:{f} &ge; 0 , 10 sup:{id:{f}} &le; id:{n} &lt; 10 sup:{id:{f} + 1} , the Number value for id:{n} &times; 10 sup:{id:{e} - id:{f}} is id:{x} , and id:{f} is as small as possible . Note that the decimal representation of id:{n} has id:{f} + 1 digits , id:{n} is not divisible by 10 , and the least significant digit of id:{n} is not necessarily uniquely determined by these criteria .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11611 [shape=diamond, label=<<font color="black">(&lt; 0i e)</font>> color="black" fillcolor="white" style=filled]
  node11594 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let s = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11599 [shape=diamond, label=<<font color="black">(|| (&lt; f 0i) (&lt; 20i f))</font>> color="black" fillcolor="white" style=filled]
  node11604 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{e} and id:{n} be integers such that 10 sup:{id:{f}} &le; id:{n} &lt; 10 sup:{id:{f} + 1} and for which the exact mathematical value of id:{n} &times; 10 sup:{id:{e} - id:{f}} - id:{x} is as close to zero as possible . If there are two such sets of id:{e} and id:{n} , pick the id:{e} and id:{n} for which id:{n} &times; 10 sup:{id:{e} - id:{f}} is larger .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11589 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let x = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11612 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let c = &quot;+&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11601 -> node11602 [label=<<font color="black">true</font>> color="black"]
  node11601 -> node11603 [label=<<font color="black">false</font>> color="black"]
  node11587 -> node11588 [ color="black"]
  node11599 -> node11600 [label=<<font color="black">true</font>> color="black"]
  node11599 -> node11601 [label=<<font color="black">false</font>> color="black"]
  node11613 -> node11614 [ color="black"]
  node11610 -> node11615 [ color="black"]
  node11591 -> node11592 [ color="black"]
  node11605 -> node11606 [ color="black"]
  node11600 -> node11601 [ color="black"]
  node11602 -> node11607 [ color="black"]
  node11588 -> node11589 [ color="black"]
  node11595 -> node11596 [label=<<font color="black">true</font>> color="black"]
  node11595 -> node11597 [label=<<font color="black">false</font>> color="black"]
  node11611 -> node11612 [label=<<font color="black">true</font>> color="black"]
  node11611 -> node11613 [label=<<font color="black">false</font>> color="black"]
  node11592 -> node11593 [label=<<font color="black">true</font>> color="black"]
  node11592 -> node11594 [label=<<font color="black">false</font>> color="black"]
  node11606 -> node11607 [ color="black"]
  node11609 -> node11610 [label=<<font color="black">true</font>> color="black"]
  node11609 -> node11611 [label=<<font color="black">false</font>> color="black"]
  node11607 -> node11608 [label=<<font color="black">true</font>> color="black"]
  node11607 -> node11609 [label=<<font color="black">false</font>> color="black"]
  node11603 -> node11604 [label=<<font color="black">true</font>> color="black"]
  node11603 -> node11605 [label=<<font color="black">false</font>> color="black"]
  node11597 -> node11598 [label=<<font color="black">true</font>> color="black"]
  node11597 -> node11599 [label=<<font color="black">false</font>> color="black"]
  node11594 -> node11595 [ color="black"]
  node11590 -> node11591 [ color="black"]
  node11596 -> node11597 [ color="black"]
  node11615 -> node11586 [ color="black"]
  node11593 -> node11594 [ color="black"]
  node11612 -> node11614 [ color="black"]
  node11589 -> node11590 [ color="black"]
  node11608 -> node11609 [ color="black"]
  node11604 -> node11606 [ color="black"]
  node11598 -> node11599 [ color="black"]
  node11614 -> node11615 [ color="black"]
  node11585 -> node11587 [ color="black"]
}
