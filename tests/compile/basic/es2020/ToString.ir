{
  app __x0__ = (Type argument)
  if (= __x0__ Undefined) {
    app __x1__ = (WrapCompletion "undefined")
    return __x1__
  } else {}
  app __x2__ = (Type argument)
  if (= __x2__ Null) {
    app __x3__ = (WrapCompletion "null")
    return __x3__
  } else {}
  app __x4__ = (Type argument)
  if (= __x4__ Boolean) ??? "< p > If id:{argument} is value:{true} , return value:{\"true\"} . < / p >" else {}
  app __x5__ = (Type argument)
  if (= __x5__ Number) {
    app __x6__ = (PRIMITIVE[Number].toString argument)
    if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
    app __x7__ = (WrapCompletion __x6__)
    return __x7__
  } else {}
  app __x8__ = (Type argument)
  if (= __x8__ String) {
    app __x9__ = (WrapCompletion argument)
    return __x9__
  } else {}
  app __x10__ = (Type argument)
  if (= __x10__ Symbol) {
    app __x11__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x11__
  } else {}
  app __x12__ = (Type argument)
  if (= __x12__ BigInt) {
    app __x13__ = (PRIMITIVE[BigInt].toString argument)
    if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else {}
    app __x14__ = (WrapCompletion __x13__)
    return __x14__
  } else {}
  app __x15__ = (Type argument)
  if (= __x15__ Object) ??? "< p > Apply the following steps : < / p >" else {}
  ??? ""
}