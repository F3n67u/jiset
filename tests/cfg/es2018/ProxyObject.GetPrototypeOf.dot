digraph {
  node2854 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2869 [shape=cds, label=<<font color="black">11:app __x6__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node2861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let handlerProto = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2858 [shape=cds, label=<<font color="black">6:app __x2__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node2868 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return handlerProto</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return handlerProto</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2867 [shape=diamond, label=<<font color="black">(= extensibleTarget true)</font>> color="black" fillcolor="white" style=filled]
  node2864 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let extensibleTarget = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2857 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2852 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2873 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2872 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node2851 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2862 [shape=cds, label=<<font color="black">8:app __x4__ = (Type handlerProto)</font>> color="black" fillcolor="white" style=filled]
  node2859 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2849 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2856 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2871 [shape=cds, label=<<font color="black">12:app __x7__ = (SameValue handlerProto targetProto)</font>> color="black" fillcolor="white" style=filled]
  node2863 [shape=diamond, label=<<font color="black">(! (|| (= __x4__ Object) (= __x4__ Null)))</font>> color="black" fillcolor="white" style=filled]
  node2850 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2860 [shape=cds, label=<<font color="black">7:app __x3__ = (Call trap handler (new [target]))</font>> color="black" fillcolor="white" style=filled]
  node2848 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2865 [shape=cds, label=<<font color="black">9:app __x5__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node2870 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetProto = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2855 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;getPrototypeOf&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2853 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2859 -> node2860 [ color="black"]
  node2864 -> node2865 [ color="black"]
  node2856 -> node2857 [ color="black"]
  node2857 -> node2858 [label=<<font color="black">true</font>> color="black"]
  node2857 -> node2860 [label=<<font color="black">false</font>> color="black"]
  node2860 -> node2861 [ color="black"]
  node2852 -> node2853 [ color="black"]
  node2871 -> node2872 [ color="black"]
  node2850 -> node2851 [ color="black"]
  node2848 -> node2850 [ color="black"]
  node2863 -> node2864 [label=<<font color="black">true</font>> color="black"]
  node2863 -> node2865 [label=<<font color="black">false</font>> color="black"]
  node2861 -> node2862 [ color="black"]
  node2851 -> node2852 [label=<<font color="black">true</font>> color="black"]
  node2851 -> node2853 [label=<<font color="black">false</font>> color="black"]
  node2866 -> node2867 [ color="black"]
  node2854 -> node2855 [ color="black"]
  node2868 -> node2869 [ color="black"]
  node2869 -> node2870 [ color="black"]
  node2874 -> node2849 [ color="black"]
  node2867 -> node2868 [label=<<font color="black">true</font>> color="black"]
  node2867 -> node2869 [label=<<font color="black">false</font>> color="black"]
  node2862 -> node2863 [ color="black"]
  node2855 -> node2856 [ color="black"]
  node2873 -> node2874 [ color="black"]
  node2853 -> node2854 [ color="black"]
  node2865 -> node2866 [ color="black"]
  node2872 -> node2873 [label=<<font color="black">true</font>> color="black"]
  node2872 -> node2874 [label=<<font color="black">false</font>> color="black"]
  node2858 -> node2859 [ color="black"]
  node2870 -> node2871 [ color="black"]
}
