{
  [0] let handler = O.ProxyHandler
  [1] if (= handler null) {
    app __x0__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x0__
  } else [13] {}
  [2] app __x1__ = (Type handler)
  [2] assert (= __x1__ Object)
  [3] let target = O.ProxyTarget
  [4] app __x2__ = (GetMethod handler "construct")
  [4] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [13] {}
  [4] let trap = __x2__
  [5] if (= trap undefined) {
    [6] app __x3__ = (IsConstructor target)
    [6] assert (= __x3__ true)
    [7] app __x4__ = (Construct target argumentsList newTarget)
    [7] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [13] {}
    [7] app __x5__ = (WrapCompletion __x4__)
    [7] return __x5__
  } else [13] {}
  [8] app __x6__ = (CreateArrayFromList argumentsList)
  [8] let argArray = __x6__
  [9] app __x7__ = (Call trap handler (new [target, argArray, newTarget]))
  [9] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [13] {}
  [9] let newObj = __x7__
  [10] app __x8__ = (Type newObj)
  [10] if (! (= __x8__ Object)) {
    app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x9__
  } else [13] {}
  [11] app __x10__ = (WrapCompletion newObj)
  [11] return __x10__
}