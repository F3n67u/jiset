digraph {
  node5088 [shape=diamond, label=<<font color="black">__x9__</font>> color="black" fillcolor="white" style=filled]
  node5069 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= value undefined))</font>> color="black" fillcolor="white" style=filled]
  node5056 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node5064 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node5084 [shape=cds, label=<<font color="black">app __x11__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node5070 [shape=cds, label=<<font color="black">14:access __x5__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5066 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? value]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5090 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let hasNameProperty = [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5086 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x10__ = (&amp;&amp; (= __x11__ true) (= __x12__ true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5082 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x10__ = true</td></tr>
      <tr><td align="left">__x10__ = (= value undefined)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let value = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5083 [shape=diamond, label=<<font color="black">__x10__</font>> color="black" fillcolor="white" style=filled]
  node5068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let value = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5072 [shape=cds, label=<<font color="black">15:app __x6__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node5092 [shape=cds, label=<<font color="black">app __x14__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let v = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5052 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node5076 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:??? &quot;Let id:{nestedAssignmentPattern} be the parse of the source text corresponding to nt:{DestructuringAssignmentTarget} using either nt:{AssignmentPattern} or nt:{AssignmentPattern[Yield]} as the goal symbol depending upon whether this nt:{AssignmentElement} has the sub:{[ Yield ]} parameter .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5091 [shape=diamond, label=<<font color="black">(= hasNameProperty false)</font>> color="black" fillcolor="white" style=filled]
  node5077 [shape=cds, label=<<font color="black">19:access __x7__ = (nestedAssignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5059 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node5096 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:return [? __x16__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5049 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5085 [shape=cds, label=<<font color="black">access __x12__ = (DestructuringAssignmentTarget &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5053 [shape=cds, label=<<font color="black">4:app __x1__ = (IteratorStep iteratorRecord.Iterator)</font>> color="black" fillcolor="white" style=filled]
  node5081 [shape=diamond, label=<<font color="black">__x9__</font>> color="black" fillcolor="white" style=filled]
  node5075 [shape=diamond, label=<<font color="black">(|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))</font>> color="black" fillcolor="white" style=filled]
  node5080 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let __x9__ = true</td></tr>
      <tr><td align="left">20:__x9__ = (! (= Initializer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5063 [shape=cds, label=<<font color="black">10:app __x4__ = (IsAbruptCompletion value)</font>> color="black" fillcolor="white" style=filled]
  node5058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5048 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5095 [shape=cds, label=<<font color="black">23:app __x16__ = (PutValue lref v)</font>> color="black" fillcolor="white" style=filled]
  node5065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5067 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done true)</font>> color="black" fillcolor="white" style=filled]
  node5050 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let defaultValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let next = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5093 [shape=cds, label=<<font color="black">app __x15__ = (SetFunctionName v __x14__)</font>> color="black" fillcolor="white" style=filled]
  node5057 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5094 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x15__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5089 [shape=cds, label=<<font color="black">21:app __x13__ = (HasOwnProperty v &quot;name&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5047 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5055 [shape=cds, label=<<font color="black">5:app __x2__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node5087 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x9__ = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5078 [shape=cds, label=<<font color="black">19:app __x8__ = (__x7__ v)</font>> color="black" fillcolor="white" style=filled]
  node5061 [shape=cds, label=<<font color="black">9:app __x3__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node5060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5071 -> node5072 [ color="black"]
  node5053 -> node5054 [ color="black"]
  node5065 -> node5066 [ color="black"]
  node5054 -> node5055 [ color="black"]
  node5068 -> node5069 [ color="black"]
  node5052 -> node5053 [label=<<font color="black">true</font>> color="black"]
  node5052 -> node5067 [label=<<font color="black">false</font>> color="black"]
  node5094 -> node5095 [ color="black"]
  node5089 -> node5090 [ color="black"]
  node5057 -> node5058 [ color="black"]
  node5091 -> node5092 [label=<<font color="black">true</font>> color="black"]
  node5091 -> node5095 [label=<<font color="black">false</font>> color="black"]
  node5059 -> node5060 [label=<<font color="black">true</font>> color="black"]
  node5059 -> node5061 [label=<<font color="black">false</font>> color="black"]
  node5074 -> node5075 [ color="black"]
  node5064 -> node5065 [label=<<font color="black">true</font>> color="black"]
  node5064 -> node5066 [label=<<font color="black">false</font>> color="black"]
  node5067 -> node5068 [label=<<font color="black">true</font>> color="black"]
  node5067 -> node5069 [label=<<font color="black">false</font>> color="black"]
  node5075 -> node5076 [label=<<font color="black">true</font>> color="black"]
  node5075 -> node5080 [label=<<font color="black">false</font>> color="black"]
  node5077 -> node5078 [ color="black"]
  node5047 -> node5049 [ color="black"]
  node5080 -> node5081 [ color="black"]
  node5051 -> node5052 [ color="black"]
  node5058 -> node5059 [ color="black"]
  node5090 -> node5091 [ color="black"]
  node5088 -> node5089 [label=<<font color="black">true</font>> color="black"]
  node5088 -> node5095 [label=<<font color="black">false</font>> color="black"]
  node5087 -> node5088 [ color="black"]
  node5062 -> node5063 [ color="black"]
  node5082 -> node5083 [ color="black"]
  node5063 -> node5064 [ color="black"]
  node5079 -> node5080 [ color="black"]
  node5092 -> node5093 [ color="black"]
  node5050 -> node5051 [ color="black"]
  node5086 -> node5087 [ color="black"]
  node5073 -> node5075 [ color="black"]
  node5060 -> node5067 [ color="black"]
  node5072 -> node5073 [ color="black"]
  node5084 -> node5085 [ color="black"]
  node5066 -> node5067 [ color="black"]
  node5095 -> node5096 [ color="black"]
  node5096 -> node5048 [ color="black"]
  node5070 -> node5071 [ color="black"]
  node5085 -> node5086 [ color="black"]
  node5093 -> node5094 [ color="black"]
  node5055 -> node5056 [ color="black"]
  node5069 -> node5070 [label=<<font color="black">true</font>> color="black"]
  node5069 -> node5074 [label=<<font color="black">false</font>> color="black"]
  node5049 -> node5050 [label=<<font color="black">true</font>> color="black"]
  node5049 -> node5052 [label=<<font color="black">false</font>> color="black"]
  node5081 -> node5082 [label=<<font color="black">true</font>> color="black"]
  node5081 -> node5088 [label=<<font color="black">false</font>> color="black"]
  node5056 -> node5057 [label=<<font color="black">true</font>> color="black"]
  node5056 -> node5058 [label=<<font color="black">false</font>> color="black"]
  node5083 -> node5084 [label=<<font color="black">true</font>> color="black"]
  node5083 -> node5087 [label=<<font color="black">false</font>> color="black"]
  node5076 -> node5077 [ color="black"]
  node5061 -> node5062 [ color="black"]
  node5078 -> node5079 [ color="black"]
}
