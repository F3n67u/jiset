digraph {
  node18556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18543 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node18550 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let promise = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18545 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18544 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node18553 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18548 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let executor = [! __x1__]</td></tr>
      <tr><td align="left">5:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18551 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node18547 [shape=cds, label=<<font color="black">4:app __x1__ = (CreateBuiltinFunction steps (new [&quot;Capability&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18542 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18555 [shape=diamond, label=<<font color="black">(= __x4__ false)</font>> color="black" fillcolor="white" style=filled]
  node18549 [shape=cds, label=<<font color="black">6:app __x2__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node18546 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:??? &quot;Let id:{promiseCapability} be the PromiseCapability Record { [ [ Promise ] ] : value:{undefined} , [ [ Resolve ] ] : value:{undefined} , [ [ Reject ] ] : value:{undefined} } .&quot;</td></tr>
      <tr><td align="left">3:let steps = GetCapabilitiesExecutorFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18557 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">10:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18552 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node18541 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18554 [shape=cds, label=<<font color="black">8:app __x4__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node18541 -> node18543 [ color="black"]
  node18557 -> node18542 [ color="black"]
  node18549 -> node18550 [ color="black"]
  node18545 -> node18546 [ color="black"]
  node18552 -> node18553 [label=<<font color="black">true</font>> color="black"]
  node18552 -> node18554 [label=<<font color="black">false</font>> color="black"]
  node18554 -> node18555 [ color="black"]
  node18555 -> node18556 [label=<<font color="black">true</font>> color="black"]
  node18555 -> node18557 [label=<<font color="black">false</font>> color="black"]
  node18548 -> node18549 [ color="black"]
  node18550 -> node18551 [ color="black"]
  node18547 -> node18548 [ color="black"]
  node18546 -> node18547 [ color="black"]
  node18551 -> node18552 [ color="black"]
  node18543 -> node18544 [ color="black"]
  node18544 -> node18545 [label=<<font color="black">true</font>> color="black"]
  node18544 -> node18546 [label=<<font color="black">false</font>> color="black"]
  node18553 -> node18554 [ color="black"]
  node18556 -> node18557 [ color="black"]
}
