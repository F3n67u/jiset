digraph {
  node17569 [shape=cds, label=<<font color="black">8:app __x4__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node17556 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17566 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node17560 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17562 [shape=cds, label=<<font color="black">4:app __x1__ = (CreateBuiltinFunction steps (new [&quot;Capability&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17571 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17567 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node17559 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node17563 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let executor = __x1__</td></tr>
      <tr><td align="left">5:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17568 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17564 [shape=cds, label=<<font color="black">6:app __x2__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node17558 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node17570 [shape=diamond, label=<<font color="black">(= __x4__ false)</font>> color="black" fillcolor="white" style=filled]
  node17565 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let promise = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17561 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = (new PromiseCapability(&quot;Promise&quot; -&gt; undefined, &quot;Resolve&quot; -&gt; undefined, &quot;Reject&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:let steps = GetCapabilitiesExecutorFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17572 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">10:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17557 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17558 -> node17559 [ color="black"]
  node17568 -> node17569 [ color="black"]
  node17564 -> node17565 [ color="black"]
  node17569 -> node17570 [ color="black"]
  node17571 -> node17572 [ color="black"]
  node17559 -> node17560 [label=<<font color="black">true</font>> color="black"]
  node17559 -> node17561 [label=<<font color="black">false</font>> color="black"]
  node17563 -> node17564 [ color="black"]
  node17561 -> node17562 [ color="black"]
  node17556 -> node17558 [ color="black"]
  node17565 -> node17566 [ color="black"]
  node17570 -> node17571 [label=<<font color="black">true</font>> color="black"]
  node17570 -> node17572 [label=<<font color="black">false</font>> color="black"]
  node17562 -> node17563 [ color="black"]
  node17560 -> node17561 [ color="black"]
  node17572 -> node17557 [ color="black"]
  node17566 -> node17567 [ color="black"]
  node17567 -> node17568 [label=<<font color="black">true</font>> color="black"]
  node17567 -> node17569 [label=<<font color="black">false</font>> color="black"]
}
