digraph {
  node15948 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15943 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15952 [shape=cds, label=<<font color="black">2:app __x1__ = (ObjectCreate INTRINSIC_MapIteratorPrototype (new [&quot;Map&quot;, &quot;MapNextIndex&quot;, &quot;MapIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15947 [shape=cds, label=<<font color="black">0:app __x0__ = (Type map)</font>> color="black" fillcolor="white" style=filled]
  node15944 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15951 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15946 [shape=cds, label=<<font color="black">app kind = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15953 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = __x1__</td></tr>
      <tr><td align="left">3:iterator.Map = map</td></tr>
      <tr><td align="left">4:iterator.MapNextIndex = 0i</td></tr>
      <tr><td align="left">5:iterator.MapIterationKind = kind</td></tr>
      <tr><td align="left">6:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15949 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15950 [shape=diamond, label=<<font color="black">(= map.MapData absent)</font>> color="black" fillcolor="white" style=filled]
  node15945 [shape=cds, label=<<font color="black">app map = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15951 -> node15952 [ color="black"]
  node15947 -> node15948 [ color="black"]
  node15949 -> node15950 [ color="black"]
  node15943 -> node15945 [ color="black"]
  node15950 -> node15951 [label=<<font color="black">true</font>> color="black"]
  node15950 -> node15952 [label=<<font color="black">false</font>> color="black"]
  node15945 -> node15946 [ color="black"]
  node15952 -> node15953 [ color="black"]
  node15948 -> node15949 [label=<<font color="black">true</font>> color="black"]
  node15948 -> node15950 [label=<<font color="black">false</font>> color="black"]
  node15946 -> node15947 [ color="black"]
  node15953 -> node15944 [ color="black"]
}
