digraph {
  node4582 [shape=cds, label=<<font color="black">2:access __x1__ = (identifierName &quot;StringValue&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4577 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4579 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (is-instance-of identifierName IdentifierName)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4583 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let propertyNameString = __x1__</td></tr>
      <tr><td align="left">3:return (new ReferenceRecord(&quot;Base&quot; -&gt; bv, &quot;ReferencedName&quot; -&gt; propertyNameString, &quot;Strict&quot; -&gt; strict, &quot;ThisValue&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4578 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4580 [shape=cds, label=<<font color="black">1:app __x0__ = (RequireObjectCoercible baseValue)</font>> color="black" fillcolor="white" style=filled]
  node4581 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let bv = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4580 -> node4581 [ color="black"]
  node4583 -> node4578 [ color="black"]
  node4579 -> node4580 [ color="black"]
  node4577 -> node4579 [ color="black"]
  node4582 -> node4583 [ color="black"]
  node4581 -> node4582 [ color="black"]
}
