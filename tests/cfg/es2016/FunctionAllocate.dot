digraph {
  node1835 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:F.Construct = ECMAScriptFunctionObjectDOTConstruct</td></tr>
      <tr><td align="left">10:F.ConstructorKind = &quot;base&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1828 [shape=diamond, label=<<font color="black">(= functionKind &quot;normal&quot;)</font>> color="black" fillcolor="white" style=filled]
  node1824 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1836 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:F.Strict = strict</td></tr>
      <tr><td align="left">12:F.FunctionKind = functionKind</td></tr>
      <tr><td align="left">13:F.Prototype = functionPrototype</td></tr>
      <tr><td align="left">14:F.Extensible = true</td></tr>
      <tr><td align="left">15:F.Realm = REALM</td></tr>
      <tr><td align="left">16:return F</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{F} be a newly created ECMAScript function object with the internal slots listed in link:{unhandled: table-27} . All of those internal slots are initialized to value:{undefined} .&quot;</td></tr>
      <tr><td align="left">7:F.Call = ECMAScriptFunctionObjectDOTCall</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1830 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let needsConstruct = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1834 [shape=diamond, label=<<font color="black">(= needsConstruct true)</font>> color="black" fillcolor="white" style=filled]
  node1826 [shape=cds, label=<<font color="black">0:app __x0__ = (Type functionPrototype)</font>> color="black" fillcolor="white" style=filled]
  node1832 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let functionKind = &quot;normal&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1825 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1831 [shape=diamond, label=<<font color="black">(= functionKind &quot;non-constructor&quot;)</font>> color="black" fillcolor="white" style=filled]
  node1829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let needsConstruct = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">1:assert (|| (|| (= functionKind &quot;normal&quot;) (= functionKind &quot;non-constructor&quot;)) (= functionKind &quot;generator&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1827 -> node1828 [ color="black"]
  node1824 -> node1826 [ color="black"]
  node1829 -> node1831 [ color="black"]
  node1828 -> node1829 [label=<<font color="black">true</font>> color="black"]
  node1828 -> node1830 [label=<<font color="black">false</font>> color="black"]
  node1826 -> node1827 [ color="black"]
  node1830 -> node1831 [ color="black"]
  node1836 -> node1825 [ color="black"]
  node1833 -> node1834 [ color="black"]
  node1834 -> node1835 [label=<<font color="black">true</font>> color="black"]
  node1834 -> node1836 [label=<<font color="black">false</font>> color="black"]
  node1835 -> node1836 [ color="black"]
  node1832 -> node1833 [ color="black"]
  node1831 -> node1832 [label=<<font color="black">true</font>> color="black"]
  node1831 -> node1833 [label=<<font color="black">false</font>> color="black"]
}
