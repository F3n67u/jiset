digraph {
  node3021 [shape=cds, label=<<font color="black">1:app __x0__ = (IsValidIntegerIndex O index)</font>> color="black" fillcolor="white" style=filled]
  node3022 [shape=diamond, label=<<font color="black">(= [! __x0__] false)</font>> color="black" fillcolor="white" style=filled]
  node3023 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let offset = O.ByteOffset</td></tr>
      <tr><td align="left">3:let arrayTypeName = O.TypedArrayName</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">5:let indexedPosition = (+ (* index elementSize) offset)</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3019 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3026 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3025 [shape=cds, label=<<font color="black">7:app __x1__ = (GetValueFromBuffer O.ViewedArrayBuffer indexedPosition elementType true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node3020 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3026 -> node3020 [ color="black"]
  node3019 -> node3021 [ color="black"]
  node3022 -> node3023 [label=<<font color="black">true</font>> color="black"]
  node3022 -> node3024 [label=<<font color="black">false</font>> color="black"]
  node3023 -> node3024 [ color="black"]
  node3024 -> node3025 [ color="black"]
  node3021 -> node3022 [ color="black"]
  node3025 -> node3026 [ color="black"]
}
