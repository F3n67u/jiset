digraph {
  node11350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11340 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11344 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11346 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let obj = __x1__</td></tr>
      <tr><td align="left">3:let stepsDefine = CreateDataPropertyOnObjectFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11347 [shape=cds, label=<<font color="black">4:app __x2__ = (CreateBuiltinFunction stepsDefine (new []))</font>> color="black" fillcolor="white" style=filled]
  node11343 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible iterable)</font>> color="black" fillcolor="white" style=filled]
  node11349 [shape=cds, label=<<font color="black">5:app __x3__ = (AddEntriesFromIterable obj iterable adder)</font>> color="black" fillcolor="white" style=filled]
  node11341 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11345 [shape=cds, label=<<font color="black">1:app __x1__ = (ObjectCreate INTRINSIC_ObjectPrototype)</font>> color="black" fillcolor="white" style=filled]
  node11348 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let adder = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11342 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11347 -> node11348 [ color="black"]
  node11345 -> node11346 [ color="black"]
  node11344 -> node11345 [ color="black"]
  node11348 -> node11349 [ color="black"]
  node11343 -> node11344 [ color="black"]
  node11346 -> node11347 [ color="black"]
  node11340 -> node11342 [ color="black"]
  node11350 -> node11341 [ color="black"]
  node11342 -> node11343 [ color="black"]
  node11349 -> node11350 [ color="black"]
}
