digraph {
  node10967 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append &quot;*default*&quot; -&gt; declarationNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10965 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let declarationNames = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10962 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10968 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return declarationNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10963 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10964 [shape=cds, label=<<font color="black">0:access __x0__ = (HoistableDeclaration &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10966 [shape=diamond, label=<<font color="black">(! (contains declarationNames &quot;*default*&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10965 -> node10966 [ color="black"]
  node10968 -> node10963 [ color="black"]
  node10966 -> node10967 [label=<<font color="black">true</font>> color="black"]
  node10966 -> node10968 [label=<<font color="black">false</font>> color="black"]
  node10967 -> node10968 [ color="black"]
  node10964 -> node10965 [ color="black"]
  node10962 -> node10964 [ color="black"]
}
