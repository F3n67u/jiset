digraph {
  node1823 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1828 [shape=cds, label=<<font color="black">3:app __x0__ = (envRec.HasBinding envRec name)</font>> color="black" fillcolor="white" style=filled]
  node1824 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1833 [shape=cds, label=<<font color="black">8:app __x1__ = (GetIdentifierReference outer name strict)</font>> color="black" fillcolor="white" style=filled]
  node1830 [shape=diamond, label=<<font color="black">(= exists true)</font>> color="black" fillcolor="white" style=filled]
  node1834 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (new Reference(&quot;BaseValue&quot; -&gt; undefined, &quot;ReferencedName&quot; -&gt; name, &quot;StrictReference&quot; -&gt; strict))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1832 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let outer = lex.Outer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1825 [shape=diamond, label=<<font color="black">(= lex null)</font>> color="black" fillcolor="white" style=filled]
  node1831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (new Reference(&quot;BaseValue&quot; -&gt; envRec, &quot;ReferencedName&quot; -&gt; name, &quot;StrictReference&quot; -&gt; strict))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let exists = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let envRec = lex.EnvironmentRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1827 -> node1828 [ color="black"]
  node1828 -> node1829 [ color="black"]
  node1830 -> node1831 [label=<<font color="black">true</font>> color="black"]
  node1830 -> node1832 [label=<<font color="black">false</font>> color="black"]
  node1833 -> node1834 [ color="black"]
  node1823 -> node1825 [ color="black"]
  node1832 -> node1833 [ color="black"]
  node1826 -> node1827 [ color="black"]
  node1829 -> node1830 [ color="black"]
  node1834 -> node1824 [ color="black"]
  node1825 -> node1826 [label=<<font color="black">true</font>> color="black"]
  node1825 -> node1827 [label=<<font color="black">false</font>> color="black"]
  node1831 -> node1824 [ color="black"]
}
