digraph {
  node18180 [shape=diamond, label=<<font color="black">(! (= reaction.Handler undefined))</font>> color="black" fillcolor="white" style=filled]
  node18177 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18183 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion getHandlerRealmResult) (= getHandlerRealmResult.Type CONST_normal))</font>> color="black" fillcolor="white" style=filled]
  node18182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let getHandlerRealmResult = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18185 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:return (new Record(&quot;Job&quot; -&gt; job, &quot;Realm&quot; -&gt; handlerRealm))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{job} be a new Job abstract closure with no parameters that captures id:{reaction} and id:{argument} and performs the following steps when called : in:{} out:{}&quot;</td></tr>
      <tr><td align="left">19:let handlerRealm = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18181 [shape=cds, label=<<font color="black">21:app __x0__ = (GetFunctionRealm reaction.Handler)</font>> color="black" fillcolor="white" style=filled]
  node18178 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">handlerRealm = getHandlerRealmResult.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18180 -> node18181 [label=<<font color="black">true</font>> color="black"]
  node18180 -> node18185 [label=<<font color="black">false</font>> color="black"]
  node18183 -> node18184 [label=<<font color="black">true</font>> color="black"]
  node18183 -> node18185 [label=<<font color="black">false</font>> color="black"]
  node18182 -> node18183 [ color="black"]
  node18177 -> node18179 [ color="black"]
  node18184 -> node18185 [ color="black"]
  node18185 -> node18178 [ color="black"]
  node18181 -> node18182 [ color="black"]
  node18179 -> node18180 [ color="black"]
}
