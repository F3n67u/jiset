def [METHOD] BoundFunctionExoticObject.Call(F)(thisArgument, argumentsList) = {
  0:let target = F.BoundTargetFunction
  1:let boundThis = F.BoundThis
  2:let boundArgs = F.BoundArguments
  3:let __x0__ = (copy-obj boundArgs)
  3:append argumentsList -> __x0__
  3:let args = __x0__
  4:app __x1__ = (Call target boundThis args)
  4:return [? __x1__]
}
- id: sec-bound-function-exotic-objects-call-thisargument-argumentslist
- code:
          1. Let _target_ be _F_.[[BoundTargetFunction]].
          1. Let _boundThis_ be _F_.[[BoundThis]].
          1. Let _boundArgs_ be _F_.[[BoundArguments]].
          1. Let _args_ be a List whose elements are the elements of _boundArgs_, followed by the elements of _argumentsList_.
          1. Return ? Call(_target_, _boundThis_, _args_).