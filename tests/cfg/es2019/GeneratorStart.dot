digraph {
  node17252 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17254 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= generator.GeneratorState undefined)</td></tr>
      <tr><td align="left">1:let genContext = GLOBAL_context</td></tr>
      <tr><td align="left">2:genContext.Generator = generator</td></tr>
      <tr><td align="left">3:??? &quot;Set the code evaluation state of id:{genContext} such that when evaluation is resumed for that execution context the following steps will be performed : in:{} out:{}&quot;</td></tr>
      <tr><td align="left">15:generator.GeneratorContext = genContext</td></tr>
      <tr><td align="left">16:generator.GeneratorState = &quot;suspendedStart&quot;</td></tr>
      <tr><td align="left">17:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17253 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17252 -> node17254 [ color="black"]
  node17254 -> node17253 [ color="black"]
}
