digraph {
  node12507 [shape=cds, label=<<font color="black">7:app __x5__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12500 [shape=diamond, label=<<font color="black">(! (= replacer undefined))</font>> color="black" fillcolor="white" style=filled]
  node12517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let replStr = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12510 [shape=cds, label=<<font color="black">9:app __x6__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12518 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12501 [shape=cds, label=<<font color="black">4:app __x2__ = (Call replacer searchValue (new [O, replaceValue]))</font>> color="black" fillcolor="white" style=filled]
  node12513 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node12509 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node12497 [shape=diamond, label=<<font color="black">(! (|| (= searchValue undefined) (= searchValue null)))</font>> color="black" fillcolor="white" style=filled]
  node12492 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12514 [shape=cds, label=<<font color="black">12:app __x7__ = (Call replaceValue undefined (new [matched, pos, string]))</font>> color="black" fillcolor="white" style=filled]
  node12512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:??? &quot;Search id:{string} for the first occurrence of id:{searchString} and let id:{pos} be the index within id:{string} of the first code unit of the matched substring and let id:{matched} be id:{searchString} . If no occurrences of id:{searchString} were found , return id:{string} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12495 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12516 [shape=cds, label=<<font color="black">13:app __x8__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node12491 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12503 [shape=cds, label=<<font color="black">5:app __x3__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12508 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let functionalReplace = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let replaceValue = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12494 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12504 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let string = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12499 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let replacer = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12521 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let tailPos = (+ pos matched.length)</td></tr>
      <tr><td align="left">18:??? &quot;Let id:{newString} be the String formed by concatenating the first id:{pos} code units of id:{string} , id:{replStr} , and the trailing substring of id:{string} starting at index id:{tailPos} . If id:{pos} is 0 , the first element of the concatenation will be the empty String .&quot;</td></tr>
      <tr><td align="left">19:return newString</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12493 [shape=cds, label=<<font color="black">app searchValue = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12506 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let searchString = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12496 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12505 [shape=cds, label=<<font color="black">6:app __x4__ = (ToString searchValue)</font>> color="black" fillcolor="white" style=filled]
  node12502 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12519 [shape=cds, label=<<font color="black">16:app __x9__ = (GetSubstitution matched string pos captures replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12498 [shape=cds, label=<<font color="black">2:app __x1__ = (GetMethod searchValue SYMBOL_replace)</font>> color="black" fillcolor="white" style=filled]
  node12520 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let replStr = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12515 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let replValue = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12506 -> node12507 [ color="black"]
  node12514 -> node12515 [ color="black"]
  node12515 -> node12516 [ color="black"]
  node12517 -> node12521 [ color="black"]
  node12497 -> node12498 [label=<<font color="black">true</font>> color="black"]
  node12497 -> node12503 [label=<<font color="black">false</font>> color="black"]
  node12512 -> node12513 [ color="black"]
  node12498 -> node12499 [ color="black"]
  node12493 -> node12494 [ color="black"]
  node12508 -> node12509 [ color="black"]
  node12499 -> node12500 [ color="black"]
  node12521 -> node12492 [ color="black"]
  node12513 -> node12514 [label=<<font color="black">true</font>> color="black"]
  node12513 -> node12518 [label=<<font color="black">false</font>> color="black"]
  node12510 -> node12511 [ color="black"]
  node12502 -> node12503 [ color="black"]
  node12509 -> node12510 [label=<<font color="black">true</font>> color="black"]
  node12509 -> node12512 [label=<<font color="black">false</font>> color="black"]
  node12519 -> node12520 [ color="black"]
  node12511 -> node12512 [ color="black"]
  node12520 -> node12521 [ color="black"]
  node12507 -> node12508 [ color="black"]
  node12503 -> node12504 [ color="black"]
  node12516 -> node12517 [ color="black"]
  node12501 -> node12502 [ color="black"]
  node12495 -> node12496 [ color="black"]
  node12496 -> node12497 [ color="black"]
  node12518 -> node12519 [ color="black"]
  node12505 -> node12506 [ color="black"]
  node12504 -> node12505 [ color="black"]
  node12494 -> node12495 [ color="black"]
  node12500 -> node12501 [label=<<font color="black">true</font>> color="black"]
  node12500 -> node12503 [label=<<font color="black">false</font>> color="black"]
  node12491 -> node12493 [ color="black"]
}
