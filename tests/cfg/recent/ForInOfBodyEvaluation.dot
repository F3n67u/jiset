digraph {
  node7726 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let status = lhsRef</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7739 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">42:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7717 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:__x8__</td></tr>
      <tr><td align="left">22:GLOBAL_context.LexicalEnvironment = iterationEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7731 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let status = __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7718 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7727 [shape=diamond, label=<<font color="black">(= lhsKind CONST_lexicalBinding)</font>> color="black" fillcolor="white" style=filled]
  node7723 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7766 [shape=cds, label=<<font color="black">61:app __x25__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7691 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let destructuring = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7716 [shape=cds, label=<<font color="black">21:access __x8__ = (lhs &quot;BindingInstantiation&quot; iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node7748 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7697 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7695 [shape=cds, label=<<font color="black">8:app __x1__ = (Call iteratorRecord.NextMethod iteratorRecord.Iterator)</font>> color="black" fillcolor="white" style=filled]
  node7734 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:let status = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let status = __x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7761 [shape=cds, label=<<font color="black">59:app __x23__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node7701 [shape=diamond, label=<<font color="black">(! (= __x3__ Object))</font>> color="black" fillcolor="white" style=filled]
  node7696 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let nextResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7743 [shape=diamond, label=<<font color="black">__x17__</font>> color="black" fillcolor="white" style=filled]
  node7754 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:let result = __x20__</td></tr>
      <tr><td align="left">53:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7711 [shape=cds, label=<<font color="black">16:access __x6__ = (lhs &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7728 [shape=cds, label=<<font color="black">31:app __x12__ = (InitializeReferencedBinding lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7733 [shape=cds, label=<<font color="black">36:access __x14__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7707 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorKind = CONST_sync</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7760 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">58:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7758 [shape=cds, label=<<font color="black">56:app __x22__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node7722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let lhsRef = [! __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7745 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7725 [shape=diamond, label=<<font color="black">__x11__</font>> color="black" fillcolor="white" style=filled]
  node7735 [shape=diamond, label=<<font color="black">(= lhsKind CONST_varBinding)</font>> color="black" fillcolor="white" style=filled]
  node7730 [shape=cds, label=<<font color="black">33:app __x13__ = (PutValue lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7703 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorComplete nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7757 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7710 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7692 [shape=diamond, label=<<font color="black">(&amp;&amp; (= destructuring true) (= lhsKind CONST_assignment))</font>> color="black" fillcolor="white" style=filled]
  node7762 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">59:status = __x23__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7713 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">19:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7767 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">61:return [? __x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7686 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">50:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7698 [shape=cds, label=<<font color="black">app __x2__ = (Await nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let status = __x15__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7749 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7702 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7721 [shape=cds, label=<<font color="black">26:app __x10__ = (ResolveBinding lhsName)</font>> color="black" fillcolor="white" style=filled]
  node7687 [shape=diamond, label=<<font color="black">(= iteratorKind absent)</font>> color="black" fillcolor="white" style=filled]
  node7742 [shape=cds, label=<<font color="black">44:app __x17__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node7706 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return V</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7753 [shape=cds, label=<<font color="black">52:access __x20__ = (stmt &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7709 [shape=diamond, label=<<font color="black">(|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding))</font>> color="black" fillcolor="white" style=filled]
  node7714 [shape=cds, label=<<font color="black">20:app __x7__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node7736 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:assert (is-instance-of lhs ForBinding)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7751 [shape=cds, label=<<font color="black">51:app __x19__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7704 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let done = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7763 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7689 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">2:let V = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7719 [shape=cds, label=<<font color="black">25:access __x9__ = (lhs &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7746 [shape=cds, label=<<font color="black">app __x18__ = (AsyncIteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let status = __x16__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7768 [shape=diamond, label=<<font color="black">(! (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node7699 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">nextResult = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7685 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7705 [shape=diamond, label=<<font color="black">(= done true)</font>> color="black" fillcolor="white" style=filled]
  node7724 [shape=cds, label=<<font color="black">32:app __x11__ = (IsAbruptCompletion lhsRef)</font>> color="black" fillcolor="white" style=filled]
  node7756 [shape=diamond, label=<<font color="black">(= __x21__ false)</font>> color="black" fillcolor="white" style=filled]
  node7693 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (is-instance-of lhs LeftHandSideExpression)</td></tr>
      <tr><td align="left">6:let assignmentPattern = (parse-syntax lhs &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7769 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">V = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7737 [shape=cds, label=<<font color="black">39:access __x15__ = (lhs &quot;BindingInitialization&quot; nextValue undefined)</font>> color="black" fillcolor="white" style=filled]
  node7752 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:return [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7720 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let lhsName = __x9__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7690 [shape=cds, label=<<font color="black">3:access __x0__ = (lhs &quot;IsDestructuring&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7764 [shape=cds, label=<<font color="black">app __x24__ = (AsyncIteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7765 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x24__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7732 [shape=diamond, label=<<font color="black">(= lhsKind CONST_assignment)</font>> color="black" fillcolor="white" style=filled]
  node7700 [shape=cds, label=<<font color="black">10:app __x3__ = (Type nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7715 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let iterationEnv = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7747 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7759 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">56:return __x22__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7712 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let lhsRef = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7740 [shape=cds, label=<<font color="black">43:access __x16__ = (lhs &quot;BindingInitialization&quot; nextValue iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node7708 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7755 [shape=cds, label=<<font color="black">54:app __x21__ = (LoopContinues result labelSet)</font>> color="black" fillcolor="white" style=filled]
  node7694 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node7692 -> node7693 [label=<<font color="black">true</font>> color="black"]
  node7692 -> node7694 [label=<<font color="black">false</font>> color="black"]
  node7741 -> node7742 [ color="black"]
  node7740 -> node7741 [ color="black"]
  node7704 -> node7705 [ color="black"]
  node7728 -> node7729 [ color="black"]
  node7688 -> node7689 [ color="black"]
  node7695 -> node7696 [ color="black"]
  node7694 -> node7695 [label=<<font color="black">true</font>> color="black"]
  node7694 -> node7686 [label=<<font color="black">false</font>> color="black"]
  node7734 -> node7742 [ color="black"]
  node7687 -> node7688 [label=<<font color="black">true</font>> color="black"]
  node7687 -> node7689 [label=<<font color="black">false</font>> color="black"]
  node7724 -> node7725 [ color="black"]
  node7733 -> node7734 [ color="black"]
  node7711 -> node7712 [ color="black"]
  node7730 -> node7731 [ color="black"]
  node7725 -> node7726 [label=<<font color="black">true</font>> color="black"]
  node7725 -> node7727 [label=<<font color="black">false</font>> color="black"]
  node7712 -> node7723 [ color="black"]
  node7727 -> node7728 [label=<<font color="black">true</font>> color="black"]
  node7727 -> node7730 [label=<<font color="black">false</font>> color="black"]
  node7691 -> node7692 [ color="black"]
  node7705 -> node7706 [label=<<font color="black">true</font>> color="black"]
  node7705 -> node7707 [label=<<font color="black">false</font>> color="black"]
  node7744 -> node7745 [ color="black"]
  node7750 -> node7751 [ color="black"]
  node7759 -> node7768 [ color="black"]
  node7716 -> node7717 [ color="black"]
  node7715 -> node7716 [ color="black"]
  node7700 -> node7701 [ color="black"]
  node7685 -> node7687 [ color="black"]
  node7763 -> node7764 [label=<<font color="black">true</font>> color="black"]
  node7763 -> node7766 [label=<<font color="black">false</font>> color="black"]
  node7762 -> node7763 [ color="black"]
  node7749 -> node7753 [ color="black"]
  node7713 -> node7714 [ color="black"]
  node7760 -> node7761 [ color="black"]
  node7698 -> node7699 [ color="black"]
  node7739 -> node7740 [ color="black"]
  node7720 -> node7721 [ color="black"]
  node7732 -> node7733 [label=<<font color="black">true</font>> color="black"]
  node7732 -> node7735 [label=<<font color="black">false</font>> color="black"]
  node7756 -> node7757 [label=<<font color="black">true</font>> color="black"]
  node7756 -> node7768 [label=<<font color="black">false</font>> color="black"]
  node7761 -> node7762 [ color="black"]
  node7690 -> node7691 [ color="black"]
  node7717 -> node7718 [ color="black"]
  node7693 -> node7694 [ color="black"]
  node7735 -> node7736 [label=<<font color="black">true</font>> color="black"]
  node7735 -> node7739 [label=<<font color="black">false</font>> color="black"]
  node7757 -> node7758 [label=<<font color="black">true</font>> color="black"]
  node7757 -> node7760 [label=<<font color="black">false</font>> color="black"]
  node7714 -> node7715 [ color="black"]
  node7745 -> node7746 [label=<<font color="black">true</font>> color="black"]
  node7745 -> node7748 [label=<<font color="black">false</font>> color="black"]
  node7746 -> node7747 [ color="black"]
  node7723 -> node7724 [label=<<font color="black">true</font>> color="black"]
  node7723 -> node7732 [label=<<font color="black">false</font>> color="black"]
  node7697 -> node7698 [label=<<font color="black">true</font>> color="black"]
  node7697 -> node7700 [label=<<font color="black">false</font>> color="black"]
  node7767 -> node7768 [ color="black"]
  node7721 -> node7722 [ color="black"]
  node7703 -> node7704 [ color="black"]
  node7738 -> node7742 [ color="black"]
  node7718 -> node7719 [label=<<font color="black">true</font>> color="black"]
  node7718 -> node7723 [label=<<font color="black">false</font>> color="black"]
  node7709 -> node7710 [label=<<font color="black">true</font>> color="black"]
  node7709 -> node7713 [label=<<font color="black">false</font>> color="black"]
  node7689 -> node7690 [ color="black"]
  node7701 -> node7702 [label=<<font color="black">true</font>> color="black"]
  node7701 -> node7703 [label=<<font color="black">false</font>> color="black"]
  node7729 -> node7742 [ color="black"]
  node7742 -> node7743 [ color="black"]
  node7748 -> node7749 [label=<<font color="black">true</font>> color="black"]
  node7748 -> node7750 [label=<<font color="black">false</font>> color="black"]
  node7755 -> node7756 [ color="black"]
  node7765 -> node7766 [ color="black"]
  node7752 -> node7753 [ color="black"]
  node7719 -> node7720 [ color="black"]
  node7743 -> node7744 [label=<<font color="black">true</font>> color="black"]
  node7743 -> node7753 [label=<<font color="black">false</font>> color="black"]
  node7768 -> node7769 [label=<<font color="black">true</font>> color="black"]
  node7768 -> node7694 [label=<<font color="black">false</font>> color="black"]
  node7766 -> node7767 [ color="black"]
  node7731 -> node7742 [ color="black"]
  node7753 -> node7754 [ color="black"]
  node7706 -> node7707 [ color="black"]
  node7747 -> node7748 [ color="black"]
  node7754 -> node7755 [ color="black"]
  node7751 -> node7752 [ color="black"]
  node7708 -> node7709 [ color="black"]
  node7736 -> node7737 [ color="black"]
  node7707 -> node7708 [ color="black"]
  node7769 -> node7694 [ color="black"]
  node7710 -> node7711 [label=<<font color="black">true</font>> color="black"]
  node7710 -> node7723 [label=<<font color="black">false</font>> color="black"]
  node7702 -> node7703 [ color="black"]
  node7737 -> node7738 [ color="black"]
  node7699 -> node7700 [ color="black"]
  node7758 -> node7759 [ color="black"]
  node7722 -> node7723 [ color="black"]
  node7696 -> node7697 [ color="black"]
  node7726 -> node7742 [ color="black"]
  node7764 -> node7765 [ color="black"]
}
