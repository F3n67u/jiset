{
  [0] access __x0__ = (PropertyName "Evaluation")
  [0] let propKey = __x0__
  [1] if (is-completion propKey) if (= propKey.Type CONST_normal) propKey = propKey.Value else return propKey else [0] {}
  [1] propKey
  [2] if true let strict = true else let strict = false
  [3] let scope = GLOBAL_context.LexicalEnvironment
  [4] app __x1__ = (GeneratorFunctionCreate CONST_Method UniqueFormalParameters GeneratorBody scope strict)
  [4] let closure = __x1__
  [5] app __x2__ = (MakeMethod closure object)
  [5] __x2__
  [6] app __x3__ = (ObjectCreate INTRINSIC_GeneratorPrototype)
  [6] let prototype = __x3__
  [7] app __x4__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  [7] __x4__
  [8] app __x5__ = (SetFunctionName closure propKey)
  [8] __x5__
  [9] let desc = (new PropertyDescriptor("Value" -> closure, "Writable" -> true, "Enumerable" -> enumerable, "Configurable" -> true))
  [10] app __x6__ = (DefinePropertyOrThrow object propKey desc)
  [10] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [0] {}
  [10] app __x7__ = (WrapCompletion __x6__)
  [10] return __x7__
}