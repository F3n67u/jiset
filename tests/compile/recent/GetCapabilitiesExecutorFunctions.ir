{
  [0] let F = GLOBAL_context.Function
  [2] let promiseCapability = F.Capability
  [3] if (! (= promiseCapability.Resolve undefined)) {
    app __x0__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x0__
  } else [1] {}
  [4] if (! (= promiseCapability.Reject undefined)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [1] {}
  [5] promiseCapability.Resolve = resolve
  [6] promiseCapability.Reject = reject
  [7] app __x2__ = (WrapCompletion undefined)
  [7] return __x2__
}