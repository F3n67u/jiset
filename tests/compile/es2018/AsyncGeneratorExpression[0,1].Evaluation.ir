{
  [0] if true let strict = true else let strict = false
  [1] let scope = GLOBAL_context.LexicalEnvironment
  [2] app __x0__ = (NewDeclarativeEnvironment scope)
  [2] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [33] {}
  [2] let funcEnv = __x0__
  [3] let envRec = funcEnv.EnvironmentRecord
  [4] access __x1__ = (BindingIdentifier "StringValue")
  [4] let name = __x1__
  [5] app __x2__ = (envRec.CreateImmutableBinding envRec name)
  [5] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [33] {}
  [5] __x2__
  [6] app __x3__ = (AsyncGeneratorFunctionCreate CONST_Normal FormalParameters AsyncGeneratorBody funcEnv strict)
  [6] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [33] {}
  [6] let closure = __x3__
  [7] app __x4__ = (ObjectCreate INTRINSIC_AsyncGeneratorPrototype)
  [7] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [33] {}
  [7] let prototype = __x4__
  [8] app __x5__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  [8] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [33] {}
  [8] __x5__
  [9] app __x6__ = (SetFunctionName closure name)
  [9] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [33] {}
  [9] __x6__
  [10] app __x7__ = (envRec.InitializeBinding envRec name closure)
  [10] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [33] {}
  [10] __x7__
  [11] app __x8__ = (WrapCompletion closure)
  [11] return __x8__
}