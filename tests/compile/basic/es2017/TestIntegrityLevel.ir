{
  app __x0__ = (Type O)
  assert (= __x0__ Object)
  assert (|| (= level "sealed") (= level "frozen"))
  app __x1__ = (IsExtensible O)
  let status = [? __x1__]
  if (= status true) return false else {}
  app __x2__ = (O.OwnPropertyKeys O)
  let keys = [? __x2__]
  let __x3__ = keys
  let __x4__ = 0i
  while (< __x4__ __x3__.length) {
    let k = __x3__[__x4__]
    app __x5__ = (O.GetOwnProperty O k)
    let currentDesc = [? __x5__]
    if (! (= currentDesc undefined)) {
      if (= currentDesc.Configurable true) return false else {}
      let __x6__ = true
      __x6__ = (= level "frozen")
      if __x6__ {
        app __x7__ = (IsDataDescriptor currentDesc)
        __x6__ = (= __x7__ true)
      } else {}
      if __x6__ if (= currentDesc.Writable true) return false else {} else {}
    } else {}
    __x4__ = (+ __x4__ 1i)
  }
  return true
}