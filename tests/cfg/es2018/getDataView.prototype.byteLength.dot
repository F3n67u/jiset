digraph {
  node16789 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let size = O.ByteLength</td></tr>
      <tr><td align="left">7:return size</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16785 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (! (= O.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">4:let buffer = O.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16780 [shape=cds, label=<<font color="black">1:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node16783 [shape=diamond, label=<<font color="black">(= O.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node16786 [shape=cds, label=<<font color="black">5:app __x1__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16787 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node16781 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16778 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16788 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16777 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16784 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16779 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16782 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16784 -> node16785 [ color="black"]
  node16783 -> node16784 [label=<<font color="black">true</font>> color="black"]
  node16783 -> node16785 [label=<<font color="black">false</font>> color="black"]
  node16786 -> node16787 [ color="black"]
  node16785 -> node16786 [ color="black"]
  node16789 -> node16778 [ color="black"]
  node16781 -> node16782 [label=<<font color="black">true</font>> color="black"]
  node16781 -> node16783 [label=<<font color="black">false</font>> color="black"]
  node16788 -> node16789 [ color="black"]
  node16787 -> node16788 [label=<<font color="black">true</font>> color="black"]
  node16787 -> node16789 [label=<<font color="black">false</font>> color="black"]
  node16782 -> node16783 [ color="black"]
  node16780 -> node16781 [ color="black"]
  node16779 -> node16780 [ color="black"]
  node16777 -> node16779 [ color="black"]
}
