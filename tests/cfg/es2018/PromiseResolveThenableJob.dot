digraph {
  node17375 [shape=cds, label=<<font color="black">2:app __x2__ = (IsAbruptCompletion thenCallResult)</font>> color="black" fillcolor="white" style=filled]
  node17377 [shape=cds, label=<<font color="black">3:app __x3__ = (Call resolvingFunctions.Reject undefined (new [thenCallResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17373 [shape=cds, label=<<font color="black">1:app __x1__ = (Call then thenable (new [resolvingFunctions.Resolve, resolvingFunctions.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node17379 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return thenCallResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17376 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node17372 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let resolvingFunctions = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17366 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17371 [shape=cds, label=<<font color="black">0:app __x0__ = (CreateResolvingFunctions promiseToResolve)</font>> color="black" fillcolor="white" style=filled]
  node17374 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let thenCallResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17378 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let status = __x3__</td></tr>
      <tr><td align="left">4:return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17370 [shape=cds, label=<<font color="black">app then = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17367 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17368 [shape=cds, label=<<font color="black">app promiseToResolve = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17369 [shape=cds, label=<<font color="black">app thenable = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17366 -> node17368 [ color="black"]
  node17368 -> node17369 [ color="black"]
  node17379 -> node17367 [ color="black"]
  node17369 -> node17370 [ color="black"]
  node17374 -> node17375 [ color="black"]
  node17377 -> node17378 [ color="black"]
  node17372 -> node17373 [ color="black"]
  node17373 -> node17374 [ color="black"]
  node17375 -> node17376 [ color="black"]
  node17371 -> node17372 [ color="black"]
  node17376 -> node17377 [label=<<font color="black">true</font>> color="black"]
  node17376 -> node17379 [label=<<font color="black">false</font>> color="black"]
  node17370 -> node17371 [ color="black"]
  node17378 -> node17379 [ color="black"]
}
