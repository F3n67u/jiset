digraph {
  node7569 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node7573 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Return the result of appending to id:{declarations} the elements of the LexicallyScopedDeclarations of the second nt:{CaseClauses} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7564 [shape=cds, label=<<font color="black">access __x0__ = (CaseClauses0 &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7565 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7572 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return declarations</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7567 [shape=cds, label=<<font color="black">2:access __x1__ = (DefaultClause &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7568 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let __x2__ = __x1__</td></tr>
      <tr><td align="left">2:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7570 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; declarations</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7563 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node7566 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7561 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7571 [shape=diamond, label=<<font color="black">(= CaseClauses1 absent)</font>> color="black" fillcolor="white" style=filled]
  node7562 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7565 -> node7567 [ color="black"]
  node7568 -> node7569 [ color="black"]
  node7570 -> node7569 [ color="black"]
  node7573 -> node7562 [ color="black"]
  node7566 -> node7567 [ color="black"]
  node7567 -> node7568 [ color="black"]
  node7569 -> node7570 [label=<<font color="black">true</font>> color="black"]
  node7569 -> node7571 [label=<<font color="black">false</font>> color="black"]
  node7561 -> node7563 [ color="black"]
  node7572 -> node7573 [ color="black"]
  node7571 -> node7572 [label=<<font color="black">true</font>> color="black"]
  node7571 -> node7573 [label=<<font color="black">false</font>> color="black"]
  node7563 -> node7564 [label=<<font color="black">true</font>> color="black"]
  node7563 -> node7566 [label=<<font color="black">false</font>> color="black"]
  node7564 -> node7565 [ color="black"]
}
