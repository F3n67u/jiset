digraph {
  node15278 [shape=cds, label=<<font color="black">7:app __x3__ = (ToString len)</font>> color="black" fillcolor="white" style=filled]
  node15267 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15282 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[? __x5__]</td></tr>
      <tr><td align="left">10:return len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15274 [shape=diamond, label=<<font color="black">(&lt; (- (** 2.0 53i) 1i) (+ len argCount))</font>> color="black" fillcolor="white" style=filled]
  node15271 [shape=cds, label=<<font color="black">1:app __x1__ = (Get O &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15281 [shape=cds, label=<<font color="black">9:app __x5__ = (Set O &quot;length&quot; len true)</font>> color="black" fillcolor="white" style=filled]
  node15280 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? __x4__]</td></tr>
      <tr><td align="left">8:let len = (+ len 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15276 [shape=diamond, label=<<font color="black">(&lt; 0i items.length)</font>> color="black" fillcolor="white" style=filled]
  node15269 [shape=cds, label=<<font color="black">0:app __x0__ = (ToObject this)</font>> color="black" fillcolor="white" style=filled]
  node15279 [shape=cds, label=<<font color="black">7:app __x4__ = (Set O [! __x3__] E true)</font>> color="black" fillcolor="white" style=filled]
  node15266 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15270 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15275 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15277 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let E = (pop items 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15268 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15272 [shape=cds, label=<<font color="black">1:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node15273 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let len = [? __x2__]</td></tr>
      <tr><td align="left">2:let items = argumentsList</td></tr>
      <tr><td align="left">3:let argCount = items.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15280 -> node15276 [ color="black"]
  node15268 -> node15269 [ color="black"]
  node15269 -> node15270 [ color="black"]
  node15282 -> node15267 [ color="black"]
  node15266 -> node15268 [ color="black"]
  node15271 -> node15272 [ color="black"]
  node15275 -> node15276 [ color="black"]
  node15276 -> node15277 [label=<<font color="black">true</font>> color="black"]
  node15276 -> node15281 [label=<<font color="black">false</font>> color="black"]
  node15273 -> node15274 [ color="black"]
  node15281 -> node15282 [ color="black"]
  node15279 -> node15280 [ color="black"]
  node15278 -> node15279 [ color="black"]
  node15274 -> node15275 [label=<<font color="black">true</font>> color="black"]
  node15274 -> node15276 [label=<<font color="black">false</font>> color="black"]
  node15272 -> node15273 [ color="black"]
  node15270 -> node15271 [ color="black"]
  node15277 -> node15278 [ color="black"]
}
