digraph {
  node18020 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18023 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x1__ = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18030 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;It is an early Reference Error if nt:{LeftHandSideExpression} is neither an nt:{ObjectLiteral} nor an nt:{ArrayLiteral} and IsValidSimpleAssignmentTarget of nt:{LeftHandSideExpression} is value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18026 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18022 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18027 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18028 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18019 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18025 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x1__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18021 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = true</td></tr>
      <tr><td align="left">0:__x0__ = (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18024 [shape=diamond, label=<<font color="black">(= absent (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new [])))</font>> color="black" fillcolor="white" style=filled]
  node18029 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18019 -> node18021 [ color="black"]
  node18029 -> node18030 [ color="black"]
  node18023 -> node18024 [ color="black"]
  node18024 -> node18025 [label=<<font color="black">true</font>> color="black"]
  node18024 -> node18026 [label=<<font color="black">false</font>> color="black"]
  node18022 -> node18023 [label=<<font color="black">true</font>> color="black"]
  node18022 -> node18027 [label=<<font color="black">false</font>> color="black"]
  node18028 -> node18030 [ color="black"]
  node18025 -> node18026 [ color="black"]
  node18026 -> node18027 [ color="black"]
  node18021 -> node18022 [ color="black"]
  node18030 -> node18020 [ color="black"]
  node18027 -> node18028 [label=<<font color="black">true</font>> color="black"]
  node18027 -> node18029 [label=<<font color="black">false</font>> color="black"]
}
