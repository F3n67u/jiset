digraph {
  node16236 [shape=cds, label=<<font color="black">5:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16227 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16237 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16233 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16246 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node16241 [shape=cds, label=<<font color="black">7:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16238 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node16253 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node16230 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakSetPrototype (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16245 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16225 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16235 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16254 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node16239 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16250 [shape=cds, label=<<font color="black">12:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node16243 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node16248 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node16228 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16229 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16251 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16240 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16255 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16244 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node16247 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16252 [shape=cds, label=<<font color="black">13:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node16232 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node16242 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16226 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16231 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16249 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16234 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node16254 -> node16255 [ color="black"]
  node16225 -> node16227 [ color="black"]
  node16228 -> node16229 [label=<<font color="black">true</font>> color="black"]
  node16228 -> node16230 [label=<<font color="black">false</font>> color="black"]
  node16241 -> node16242 [ color="black"]
  node16253 -> node16254 [label=<<font color="black">true</font>> color="black"]
  node16253 -> node16243 [label=<<font color="black">false</font>> color="black"]
  node16242 -> node16243 [ color="black"]
  node16234 -> node16235 [label=<<font color="black">true</font>> color="black"]
  node16234 -> node16236 [label=<<font color="black">false</font>> color="black"]
  node16251 -> node16252 [ color="black"]
  node16245 -> node16246 [ color="black"]
  node16246 -> node16247 [label=<<font color="black">true</font>> color="black"]
  node16246 -> node16248 [label=<<font color="black">false</font>> color="black"]
  node16236 -> node16237 [ color="black"]
  node16232 -> node16233 [label=<<font color="black">true</font>> color="black"]
  node16232 -> node16234 [label=<<font color="black">false</font>> color="black"]
  node16239 -> node16240 [label=<<font color="black">true</font>> color="black"]
  node16239 -> node16241 [label=<<font color="black">false</font>> color="black"]
  node16238 -> node16239 [ color="black"]
  node16244 -> node16245 [ color="black"]
  node16229 -> node16230 [ color="black"]
  node16243 -> node16244 [label=<<font color="black">true</font>> color="black"]
  node16243 -> node16226 [label=<<font color="black">false</font>> color="black"]
  node16233 -> node16234 [ color="black"]
  node16247 -> node16248 [ color="black"]
  node16230 -> node16231 [ color="black"]
  node16235 -> node16236 [ color="black"]
  node16248 -> node16249 [ color="black"]
  node16227 -> node16228 [ color="black"]
  node16231 -> node16232 [ color="black"]
  node16240 -> node16241 [ color="black"]
  node16250 -> node16251 [ color="black"]
  node16252 -> node16253 [ color="black"]
  node16249 -> node16250 [ color="black"]
  node16237 -> node16238 [ color="black"]
  node16255 -> node16243 [ color="black"]
}
