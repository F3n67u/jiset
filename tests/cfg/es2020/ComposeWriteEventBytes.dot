digraph {
  node18857 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let byteLocation = byteIndex</td></tr>
      <tr><td align="left">1:let bytesRead = (new [])</td></tr>
      <tr><td align="left">2:let __x0__ = Ws</td></tr>
      <tr><td align="left">2:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let byte = W.Payload[payloadIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let bytesModified = __x3__</td></tr>
      <tr><td align="left">11:let byte = bytesModified[payloadIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18856 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18864 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let bytes = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18860 [shape=diamond, label=<<font color="black">(= (typeof W) &quot;WriteSharedMemory&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18867 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:append byte -&gt; bytesRead</td></tr>
      <tr><td align="left">13:byteLocation = (+ byteLocation 1i)</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18863 [shape=cds, label=<<font color="black">9:app __x2__ = (ValueOfReadEvent execution W)</font>> color="black" fillcolor="white" style=filled]
  node18859 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let W = __x0__[__x1__]</td></tr>
      <tr><td align="left">4:let payloadIndex = (- byteLocation W.ByteIndex)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18868 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return bytesRead</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18858 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node18862 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:assert (= (typeof W) &quot;ReadModifyWriteSharedMemory&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18855 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18865 [shape=cds, label=<<font color="black">10:app __x3__ = (W.ModifyOp W bytes W.Payload)</font>> color="black" fillcolor="white" style=filled]
  node18863 -> node18864 [ color="black"]
  node18866 -> node18867 [ color="black"]
  node18867 -> node18858 [ color="black"]
  node18855 -> node18857 [ color="black"]
  node18865 -> node18866 [ color="black"]
  node18857 -> node18858 [ color="black"]
  node18868 -> node18856 [ color="black"]
  node18860 -> node18861 [label=<<font color="black">true</font>> color="black"]
  node18860 -> node18862 [label=<<font color="black">false</font>> color="black"]
  node18858 -> node18859 [label=<<font color="black">true</font>> color="black"]
  node18858 -> node18868 [label=<<font color="black">false</font>> color="black"]
  node18861 -> node18867 [ color="black"]
  node18862 -> node18863 [ color="black"]
  node18864 -> node18865 [ color="black"]
  node18859 -> node18860 [ color="black"]
}
