digraph {
  node17894 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17899 [shape=cds, label=<<font color="black">3:app __x1__ = (ComposeWriteEventBytes execution R.ByteIndex Ws)</font>> color="black" fillcolor="white" style=filled]
  node17898 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let Ws = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17895 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17896 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (= (typeof R) &quot;ReadSharedMemory&quot;) (= (typeof R) &quot;ReadModifyWriteSharedMemory&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17897 [shape=cds, label=<<font color="black">1:app __x0__ = (execution.ReadsBytesFrom execution R)</font>> color="black" fillcolor="white" style=filled]
  node17900 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17894 -> node17896 [ color="black"]
  node17897 -> node17898 [ color="black"]
  node17898 -> node17899 [ color="black"]
  node17900 -> node17895 [ color="black"]
  node17899 -> node17900 [ color="black"]
  node17896 -> node17897 [ color="black"]
}
