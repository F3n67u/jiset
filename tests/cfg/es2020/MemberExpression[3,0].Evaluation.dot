digraph {
  node4950 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4949 [shape=cds, label=<<font color="black">4:app __x3__ = (EvaluateCall tagFunc tagRef TemplateLiteral tailCall)</font>> color="black" fillcolor="white" style=filled]
  node4941 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4948 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let tailCall = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4947 [shape=cds, label=<<font color="black">3:app __x2__ = (IsInTailPosition thisCall)</font>> color="black" fillcolor="white" style=filled]
  node4942 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4943 [shape=cds, label=<<font color="black">0:access __x0__ = (MemberExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4946 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let tagFunc = [? __x1__]</td></tr>
      <tr><td align="left">2:let thisCall = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4945 [shape=cds, label=<<font color="black">1:app __x1__ = (GetValue tagRef)</font>> color="black" fillcolor="white" style=filled]
  node4944 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let tagRef = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4946 -> node4947 [ color="black"]
  node4941 -> node4943 [ color="black"]
  node4945 -> node4946 [ color="black"]
  node4947 -> node4948 [ color="black"]
  node4944 -> node4945 [ color="black"]
  node4949 -> node4950 [ color="black"]
  node4950 -> node4942 [ color="black"]
  node4948 -> node4949 [ color="black"]
  node4943 -> node4944 [ color="black"]
}
