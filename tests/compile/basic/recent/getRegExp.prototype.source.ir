{
  let R = this
  app __x0__ = (Type R)
  if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  if (= R.OriginalSource absent) {
    app __x2__ = (SameValue R INTRINSIC_RegExp.prototype)
    if (= __x2__ true) {
      app __x3__ = (WrapCompletion "(?:)")
      return __x3__
    } else {
      app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x4__
    }
  } else {}
  assert (! (= R.OriginalFlags absent))
  let src = R.OriginalSource
  let flags = R.OriginalFlags
  app __x5__ = (EscapeRegExpPattern src flags)
  app __x6__ = (WrapCompletion __x5__)
  return __x6__
}