digraph {
  node16027 [shape=cds, label=<<font color="black">5:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16039 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node16022 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.SetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16035 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node16028 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16044 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node16016 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16031 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16043 [shape=cds, label=<<font color="black">13:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node16020 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16032 [shape=cds, label=<<font color="black">7:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16029 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node16034 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node16038 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16041 [shape=cds, label=<<font color="black">12:app __x6__ = (Call adder set (new [nextValue.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16021 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_SetPrototype (new [&quot;SetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16045 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node16018 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16026 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16019 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16040 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16023 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node16033 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16030 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16037 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node16025 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node16024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16042 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16017 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16031 -> node16032 [ color="black"]
  node16043 -> node16044 [ color="black"]
  node16020 -> node16021 [ color="black"]
  node16021 -> node16022 [ color="black"]
  node16026 -> node16027 [ color="black"]
  node16041 -> node16042 [ color="black"]
  node16027 -> node16028 [ color="black"]
  node16033 -> node16034 [ color="black"]
  node16039 -> node16040 [ color="black"]
  node16023 -> node16024 [label=<<font color="black">true</font>> color="black"]
  node16023 -> node16025 [label=<<font color="black">false</font>> color="black"]
  node16040 -> node16041 [ color="black"]
  node16042 -> node16043 [ color="black"]
  node16046 -> node16034 [ color="black"]
  node16025 -> node16026 [label=<<font color="black">true</font>> color="black"]
  node16025 -> node16027 [label=<<font color="black">false</font>> color="black"]
  node16028 -> node16029 [ color="black"]
  node16024 -> node16025 [ color="black"]
  node16029 -> node16030 [ color="black"]
  node16018 -> node16019 [ color="black"]
  node16038 -> node16039 [ color="black"]
  node16044 -> node16045 [label=<<font color="black">true</font>> color="black"]
  node16044 -> node16034 [label=<<font color="black">false</font>> color="black"]
  node16045 -> node16046 [ color="black"]
  node16019 -> node16020 [label=<<font color="black">true</font>> color="black"]
  node16019 -> node16021 [label=<<font color="black">false</font>> color="black"]
  node16037 -> node16038 [label=<<font color="black">true</font>> color="black"]
  node16037 -> node16039 [label=<<font color="black">false</font>> color="black"]
  node16030 -> node16031 [label=<<font color="black">true</font>> color="black"]
  node16030 -> node16032 [label=<<font color="black">false</font>> color="black"]
  node16034 -> node16035 [label=<<font color="black">true</font>> color="black"]
  node16034 -> node16017 [label=<<font color="black">false</font>> color="black"]
  node16022 -> node16023 [ color="black"]
  node16032 -> node16033 [ color="black"]
  node16036 -> node16037 [ color="black"]
  node16016 -> node16018 [ color="black"]
  node16035 -> node16036 [ color="black"]
}
