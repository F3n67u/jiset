digraph {
  node17214 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:__x7__</td></tr>
      <tr><td align="left">29:srcByteIndex = (+ srcByteIndex srcElementSize)</td></tr>
      <tr><td align="left">30:targetByteIndex = (+ targetByteIndex elementSize)</td></tr>
      <tr><td align="left">31:count = (- count 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17194 [shape=cds, label=<<font color="black">15:app __x1__ = (IsSharedArrayBuffer srcData)</font>> color="black" fillcolor="white" style=filled]
  node17197 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let bufferConstructor = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17210 [shape=diamond, label=<<font color="black">(&lt; 0i count)</font>> color="black" fillcolor="white" style=filled]
  node17193 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let constructorName = O.TypedArrayName</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{constructorName} .&quot;</td></tr>
      <tr><td align="left">6:let elementLength = srcArray.ArrayLength</td></tr>
      <tr><td align="left">7:let srcName = srcArray.TypedArrayName</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{srcType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{srcName} .&quot;</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{srcElementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{srcName} .&quot;</td></tr>
      <tr><td align="left">10:let srcByteOffset = srcArray.ByteOffset</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{constructorName} .&quot;</td></tr>
      <tr><td align="left">12:let byteLength = (* elementSize elementLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17200 [shape=cds, label=<<font color="black">18:app __x3__ = (CloneArrayBuffer srcData srcByteOffset byteLength bufferConstructor)</font>> color="black" fillcolor="white" style=filled]
  node17213 [shape=cds, label=<<font color="black">28:app __x7__ = (SetValueInBuffer data targetByteIndex elementType value true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node17203 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let data = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17190 [shape=cds, label=<<font color="black">3:app __x0__ = (IsDetachedBuffer srcData)</font>> color="black" fillcolor="white" style=filled]
  node17199 [shape=diamond, label=<<font color="black">(= elementType srcType)</font>> color="black" fillcolor="white" style=filled]
  node17191 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node17212 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let value = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17195 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node17198 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let bufferConstructor = INTRINSIC_ArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17201 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let data = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17192 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17205 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node17211 [shape=cds, label=<<font color="black">27:app __x6__ = (GetValueFromBuffer srcData srcByteIndex srcType true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node17202 [shape=cds, label=<<font color="black">20:app __x4__ = (AllocateArrayBuffer bufferConstructor byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17206 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17189 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let srcData = srcArray.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17196 [shape=cds, label=<<font color="black">14:app __x2__ = (SpeciesConstructor srcData INTRINSIC_ArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17207 [shape=diamond, label=<<font color="black">(! (== srcArray.ContentType O.ContentType))</font>> color="black" fillcolor="white" style=filled]
  node17209 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let srcByteIndex = srcByteOffset</td></tr>
      <tr><td align="left">24:let targetByteIndex = 0i</td></tr>
      <tr><td align="left">25:let count = elementLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17204 [shape=cds, label=<<font color="black">21:app __x5__ = (IsDetachedBuffer srcData)</font>> color="black" fillcolor="white" style=filled]
  node17208 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17187 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17215 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:O.ViewedArrayBuffer = data</td></tr>
      <tr><td align="left">33:O.ByteLength = byteLength</td></tr>
      <tr><td align="left">34:O.ByteOffset = 0i</td></tr>
      <tr><td align="left">35:O.ArrayLength = elementLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17188 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17213 -> node17214 [ color="black"]
  node17190 -> node17191 [ color="black"]
  node17200 -> node17201 [ color="black"]
  node17193 -> node17194 [ color="black"]
  node17209 -> node17210 [ color="black"]
  node17215 -> node17188 [ color="black"]
  node17210 -> node17211 [label=<<font color="black">true</font>> color="black"]
  node17210 -> node17215 [label=<<font color="black">false</font>> color="black"]
  node17199 -> node17200 [label=<<font color="black">true</font>> color="black"]
  node17199 -> node17202 [label=<<font color="black">false</font>> color="black"]
  node17206 -> node17207 [ color="black"]
  node17187 -> node17189 [ color="black"]
  node17204 -> node17205 [ color="black"]
  node17203 -> node17204 [ color="black"]
  node17189 -> node17190 [ color="black"]
  node17211 -> node17212 [ color="black"]
  node17214 -> node17210 [ color="black"]
  node17196 -> node17197 [ color="black"]
  node17195 -> node17196 [label=<<font color="black">true</font>> color="black"]
  node17195 -> node17198 [label=<<font color="black">false</font>> color="black"]
  node17208 -> node17209 [ color="black"]
  node17202 -> node17203 [ color="black"]
  node17197 -> node17199 [ color="black"]
  node17194 -> node17195 [ color="black"]
  node17205 -> node17206 [label=<<font color="black">true</font>> color="black"]
  node17205 -> node17207 [label=<<font color="black">false</font>> color="black"]
  node17198 -> node17199 [ color="black"]
  node17207 -> node17208 [label=<<font color="black">true</font>> color="black"]
  node17207 -> node17209 [label=<<font color="black">false</font>> color="black"]
  node17201 -> node17215 [ color="black"]
  node17192 -> node17193 [ color="black"]
  node17212 -> node17213 [ color="black"]
  node17191 -> node17192 [label=<<font color="black">true</font>> color="black"]
  node17191 -> node17193 [label=<<font color="black">false</font>> color="black"]
}
