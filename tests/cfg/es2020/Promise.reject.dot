digraph {
  node18782 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18784 [shape=cds, label=<<font color="black">2:app __x1__ = (Call promiseCapability.Reject undefined (new [r]))</font>> color="black" fillcolor="white" style=filled]
  node18783 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18780 [shape=cds, label=<<font color="black">app r = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18779 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18785 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:[? __x1__]</td></tr>
      <tr><td align="left">3:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18781 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18778 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18782 -> node18783 [ color="black"]
  node18778 -> node18780 [ color="black"]
  node18783 -> node18784 [ color="black"]
  node18780 -> node18781 [ color="black"]
  node18781 -> node18782 [ color="black"]
  node18784 -> node18785 [ color="black"]
  node18785 -> node18779 [ color="black"]
}
