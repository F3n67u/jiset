def [SYNTAX] BindingPropertyList[1,0].PropertyBindingInitialization<BindingPropertyList `,` BindingProperty>(value, environment) = {
  0:access __x0__ = (BindingPropertyList "PropertyBindingInitialization" value environment)
  0:let boundNames = [? __x0__]
  1:access __x1__ = (BindingProperty "PropertyBindingInitialization" value environment)
  1:let nextNames = [? __x1__]
  2:let __x2__ = nextNames
  2:let __x3__ = 0i
  2:while (< __x3__ __x2__.length) {
    let __x4__ = __x2__[__x3__]
    append __x4__ -> boundNames
    __x3__ = (+ __x3__ 1i)
  }
  3:return boundNames
}
- id: sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization
- code:
          1. Let _boundNames_ be ? PropertyBindingInitialization of |BindingPropertyList| with arguments _value_ and _environment_.
          1. Let _nextNames_ be ? PropertyBindingInitialization of |BindingProperty| with arguments _value_ and _environment_.
          1. Append each item in _nextNames_ to the end of _boundNames_.
          1. Return _boundNames_.