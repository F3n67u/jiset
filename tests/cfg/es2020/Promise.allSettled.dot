digraph {
  node18667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18661 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18659 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let result = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18663 [shape=cds, label=<<font color="black">app __x5__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node18665 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node18648 [shape=cds, label=<<font color="black">2:app __x1__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node18644 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18646 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18642 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18656 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18645 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18658 [shape=cds, label=<<font color="black">4:app __x3__ = (PerformPromiseAllSettled iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node18664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iteratorRecord = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18673 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18668 [shape=cds, label=<<font color="black">app __x6__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18653 [shape=cds, label=<<font color="black">app __x2__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18672 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18650 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18657 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18654 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x2__) (! (= __x2__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18669 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x6__) (! (= __x6__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18666 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18651 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18662 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node18643 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18660 [shape=cds, label=<<font color="black">5:app __x4__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node18667 -> node18672 [ color="black"]
  node18660 -> node18661 [ color="black"]
  node18657 -> node18658 [ color="black"]
  node18670 -> node18671 [ color="black"]
  node18652 -> node18657 [ color="black"]
  node18649 -> node18650 [ color="black"]
  node18665 -> node18666 [label=<<font color="black">true</font>> color="black"]
  node18665 -> node18672 [label=<<font color="black">false</font>> color="black"]
  node18661 -> node18662 [label=<<font color="black">true</font>> color="black"]
  node18661 -> node18673 [label=<<font color="black">false</font>> color="black"]
  node18663 -> node18664 [ color="black"]
  node18653 -> node18654 [ color="black"]
  node18664 -> node18665 [ color="black"]
  node18658 -> node18659 [ color="black"]
  node18668 -> node18669 [ color="black"]
  node18662 -> node18663 [label=<<font color="black">true</font>> color="black"]
  node18662 -> node18665 [label=<<font color="black">false</font>> color="black"]
  node18659 -> node18660 [ color="black"]
  node18666 -> node18667 [label=<<font color="black">true</font>> color="black"]
  node18666 -> node18668 [label=<<font color="black">false</font>> color="black"]
  node18655 -> node18656 [ color="black"]
  node18672 -> node18673 [ color="black"]
  node18645 -> node18646 [ color="black"]
  node18646 -> node18647 [ color="black"]
  node18644 -> node18645 [ color="black"]
  node18656 -> node18657 [ color="black"]
  node18647 -> node18648 [ color="black"]
  node18651 -> node18652 [label=<<font color="black">true</font>> color="black"]
  node18651 -> node18653 [label=<<font color="black">false</font>> color="black"]
  node18648 -> node18649 [ color="black"]
  node18654 -> node18655 [label=<<font color="black">true</font>> color="black"]
  node18654 -> node18656 [label=<<font color="black">false</font>> color="black"]
  node18650 -> node18651 [label=<<font color="black">true</font>> color="black"]
  node18650 -> node18657 [label=<<font color="black">false</font>> color="black"]
  node18642 -> node18644 [ color="black"]
  node18673 -> node18643 [ color="black"]
  node18669 -> node18670 [label=<<font color="black">true</font>> color="black"]
  node18669 -> node18671 [label=<<font color="black">false</font>> color="black"]
  node18671 -> node18672 [ color="black"]
}
