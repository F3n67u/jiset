{
  access __x0__ = (PropertyName "Evaluation")
  let propKey = __x0__
  [? propKey]
  if true let strict = true else let strict = false
  let scope = GLOBAL_context.LexicalEnvironment
  app __x1__ = (GeneratorFunctionCreate CONST_Method StrictFormalParameters GeneratorBody scope strict)
  let closure = __x1__
  app __x2__ = (MakeMethod closure object)
  __x2__
  app __x3__ = (ObjectCreate INTRINSIC_GeneratorPrototype)
  let prototype = __x3__
  app __x4__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  __x4__
  app __x5__ = (SetFunctionName closure propKey)
  __x5__
  let desc = (new PropertyDescriptor("Value" -> closure, "Writable" -> true, "Enumerable" -> enumerable, "Configurable" -> true))
  app __x6__ = (DefinePropertyOrThrow object propKey desc)
  return [? __x6__]
}