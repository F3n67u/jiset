digraph {
  node25 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let asyncContext = F.AsyncContext</td></tr>
      <tr><td align="left">1:let prevContext = GLOBAL_context</td></tr>
      <tr><td align="left">2:GLOBAL_context = null</td></tr>
      <tr><td align="left">3:append asyncContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">3:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">4:??? &quot;Resume the suspended evaluation of asyncContext using (ThrowCompletion~reason) as the result of the operation that suspended it&quot;</td></tr>
      <tr><td align="left">6:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node25 -> node27 [ color="black"]
  node27 -> node26 [ color="black"]
}
