<algorithm>
  <param>TemplateHead</param>
  <param>Expression</param>
  <param>TemplateSpans</param>
  <step-list>
    <step>Let <id>templateLiteral</id> be this TemplateLiteral .</step>
    <step>Let <id>siteObj</id> be GetTemplateObject ( <id>templateLiteral</id> ).</step>
    <step>Let <id>firstSubRef</id> be the result of evaluating Expression .</step>
    <step>Let <id>firstSub</id> be ? GetValue ( <id>firstSubRef</id> ).</step>
    <step>Let <id>restSub</id> be SubstitutionEvaluation of TemplateSpans .</step>
    <step>ReturnIfAbrupt ( <id>restSub</id> ).</step>
    <step>Assert : <id>restSub</id> is a List .</step>
    <step>Return a List whose first element is <id>siteObj</id> , whose second elements is <id>firstSub</id> , and whose subsequent elements are the elements of <id>restSub</id> , in order. <id>restSub</id> may contain no elements.</step>
  </step-list>
</algorithm>