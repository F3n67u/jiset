digraph {
  node17473 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let genContext = GLOBAL_context</td></tr>
      <tr><td align="left">2:let generator = genContext.Generator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17475 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x0__ CONST_async)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17481 [shape=cds, label=<<font color="black">14:app __x3__ = (AsyncGeneratorResolve generator value false)</font>> color="black" fillcolor="white" style=filled]
  node17477 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:value = [? __x1__]</td></tr>
      <tr><td align="left">5:generator.AsyncGeneratorState = &quot;suspendedYield&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17478 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] genContext)</font>> color="black" fillcolor="white" style=filled]
  node17482 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17471 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17480 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">7:??? &quot;Set the code evaluation state of id:{genContext} such that when evaluation is resumed with a Completion id:{resumptionValue} the following steps will be performed : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17472 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17479 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x2__ = (- GLOBAL_executionStack.length 1i)</td></tr>
      <tr><td align="left">(pop GLOBAL_executionStack __x2__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17474 [shape=cds, label=<<font color="black">3:app __x0__ = (GetGeneratorKind )</font>> color="black" fillcolor="white" style=filled]
  node17476 [shape=cds, label=<<font color="black">4:app __x1__ = (Await value)</font>> color="black" fillcolor="white" style=filled]
  node17473 -> node17474 [ color="black"]
  node17475 -> node17476 [ color="black"]
  node17474 -> node17475 [ color="black"]
  node17479 -> node17480 [ color="black"]
  node17478 -> node17479 [label=<<font color="black">true</font>> color="black"]
  node17478 -> node17480 [label=<<font color="black">false</font>> color="black"]
  node17471 -> node17473 [ color="black"]
  node17482 -> node17472 [ color="black"]
  node17477 -> node17478 [ color="black"]
  node17480 -> node17481 [ color="black"]
  node17476 -> node17477 [ color="black"]
  node17481 -> node17482 [ color="black"]
}
