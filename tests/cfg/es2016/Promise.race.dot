digraph {
  node15767 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15791 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node15776 [shape=diamond, label=<<font color="black">(= iterator.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node15787 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node15792 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15788 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iterator result)</font>> color="black" fillcolor="white" style=filled]
  node15783 [shape=cds, label=<<font color="black">6:app __x4__ = (PerformPromiseRace iteratorRecord promiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node15782 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iterator</td></tr>
      <tr><td align="left">5:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; iterator, &quot;Done&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15797 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15785 [shape=cds, label=<<font color="black">7:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node15790 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node15786 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node15780 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15770 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15795 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15784 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15774 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iterator = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15779 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node15766 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15794 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node15771 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node15798 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15793 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15765 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15789 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15778 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iterator.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15768 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node15796 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15777 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterator = iterator.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15775 [shape=diamond, label=<<font color="black">(is-completion iterator)</font>> color="black" fillcolor="white" style=filled]
  node15781 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15773 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15764 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15769 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15794 -> node15795 [label=<<font color="black">true</font>> color="black"]
  node15794 -> node15796 [label=<<font color="black">false</font>> color="black"]
  node15788 -> node15789 [ color="black"]
  node15778 -> node15779 [ color="black"]
  node15783 -> node15784 [ color="black"]
  node15772 -> node15773 [ color="black"]
  node15770 -> node15771 [ color="black"]
  node15792 -> node15797 [ color="black"]
  node15768 -> node15769 [ color="black"]
  node15774 -> node15775 [ color="black"]
  node15786 -> node15787 [label=<<font color="black">true</font>> color="black"]
  node15786 -> node15798 [label=<<font color="black">false</font>> color="black"]
  node15771 -> node15772 [ color="black"]
  node15779 -> node15780 [label=<<font color="black">true</font>> color="black"]
  node15779 -> node15781 [label=<<font color="black">false</font>> color="black"]
  node15764 -> node15766 [ color="black"]
  node15776 -> node15777 [label=<<font color="black">true</font>> color="black"]
  node15776 -> node15778 [label=<<font color="black">false</font>> color="black"]
  node15795 -> node15796 [ color="black"]
  node15784 -> node15785 [ color="black"]
  node15789 -> node15790 [ color="black"]
  node15787 -> node15788 [label=<<font color="black">true</font>> color="black"]
  node15787 -> node15790 [label=<<font color="black">false</font>> color="black"]
  node15767 -> node15768 [ color="black"]
  node15781 -> node15782 [ color="black"]
  node15777 -> node15782 [ color="black"]
  node15773 -> node15774 [ color="black"]
  node15780 -> node15781 [ color="black"]
  node15769 -> node15770 [label=<<font color="black">true</font>> color="black"]
  node15769 -> node15771 [label=<<font color="black">false</font>> color="black"]
  node15775 -> node15776 [label=<<font color="black">true</font>> color="black"]
  node15775 -> node15782 [label=<<font color="black">false</font>> color="black"]
  node15782 -> node15783 [ color="black"]
  node15793 -> node15794 [ color="black"]
  node15766 -> node15767 [ color="black"]
  node15791 -> node15792 [label=<<font color="black">true</font>> color="black"]
  node15791 -> node15793 [label=<<font color="black">false</font>> color="black"]
  node15790 -> node15791 [label=<<font color="black">true</font>> color="black"]
  node15790 -> node15797 [label=<<font color="black">false</font>> color="black"]
  node15796 -> node15797 [ color="black"]
  node15798 -> node15765 [ color="black"]
  node15785 -> node15786 [ color="black"]
  node15797 -> node15798 [ color="black"]
}
