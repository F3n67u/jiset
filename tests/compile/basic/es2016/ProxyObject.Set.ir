{
  app __x0__ = (IsPropertyKey P)
  assert (= __x0__ true)
  let handler = O.ProxyHandler
  if (= handler null) throw INTRINSIC_TypeError else {}
  app __x1__ = (Type handler)
  assert (= __x1__ Object)
  let target = O.ProxyTarget
  app __x2__ = (GetMethod handler "set")
  let trap = [? __x2__]
  if (= trap undefined) {
    app __x3__ = (target.Set target P V Receiver)
    return [? __x3__]
  } else {}
  app __x4__ = (Call trap handler (new [target, P, V, Receiver]))
  app __x5__ = (ToBoolean [? __x4__])
  let booleanTrapResult = __x5__
  if (= booleanTrapResult false) return false else {}
  app __x6__ = (target.GetOwnProperty target P)
  let targetDesc = [? __x6__]
  if (! (= targetDesc undefined)) {
    app __x7__ = (IsDataDescriptor targetDesc)
    if (&& (= __x7__ true) (&& (= targetDesc.Configurable false) (= targetDesc.Writable false))) {
      app __x8__ = (SameValue V targetDesc.Value)
      if (= __x8__ false) throw INTRINSIC_TypeError else {}
    } else {}
    app __x9__ = (IsAccessorDescriptor targetDesc)
    if (&& (= __x9__ true) (= targetDesc.Configurable false)) if (= targetDesc.Set undefined) throw INTRINSIC_TypeError else {} else {}
  } else {}
  return true
}