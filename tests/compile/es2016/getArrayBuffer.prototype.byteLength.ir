{
  [0] let O = this
  [1] app __x0__ = (Type O)
  [1] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [2] {}
  [2] if (= O.ArrayBufferData absent) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [2] {}
  [3] app __x3__ = (IsDetachedBuffer O)
  [3] if (= __x3__ true) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [2] {}
  [4] let length = O.ArrayBufferByteLength
  [5] app __x5__ = (WrapCompletion length)
  [5] return __x5__
}