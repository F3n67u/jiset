digraph {
  node11848 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let O = [? __x0__]</td></tr>
      <tr><td align="left">4:??? &quot;Set id:{O} . [ [ DateValue ] ] to the time value ( UTC ) identifying the current time .&quot;</td></tr>
      <tr><td align="left">5:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11844 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11849 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{now} be the Number that is the time value ( UTC ) identifying the current time .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11845 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let numberOfArgs = argumentsList.length</td></tr>
      <tr><td align="left">1:assert (== numberOfArgs 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11851 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11846 [shape=diamond, label=<<font color="black">(! (= NewTarget undefined))</font>> color="black" fillcolor="white" style=filled]
  node11847 [shape=cds, label=<<font color="black">3:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_DatePrototype (new [&quot;DateValue&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node11850 [shape=cds, label=<<font color="black">8:app __x1__ = (ToDateString now)</font>> color="black" fillcolor="white" style=filled]
  node11843 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11851 -> node11844 [ color="black"]
  node11846 -> node11847 [label=<<font color="black">true</font>> color="black"]
  node11846 -> node11849 [label=<<font color="black">false</font>> color="black"]
  node11845 -> node11846 [ color="black"]
  node11843 -> node11845 [ color="black"]
  node11847 -> node11848 [ color="black"]
  node11850 -> node11851 [ color="black"]
  node11849 -> node11850 [ color="black"]
  node11848 -> node11844 [ color="black"]
}
