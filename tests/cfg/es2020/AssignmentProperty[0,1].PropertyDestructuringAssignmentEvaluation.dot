digraph {
  node5878 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[? __x7__]</td></tr>
      <tr><td align="left">10:return (new [P])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let defaultValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5861 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5865 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:v = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:v = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5870 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node5863 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let P = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5871 [shape=cds, label=<<font color="black">5:access __x4__ = (Initializer &quot;NamedEvaluation&quot; P)</font>> color="black" fillcolor="white" style=filled]
  node5867 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let v = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5877 [shape=cds, label=<<font color="black">9:app __x7__ = (PutValue lref v)</font>> color="black" fillcolor="white" style=filled]
  node5868 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= v undefined))</font>> color="black" fillcolor="white" style=filled]
  node5866 [shape=cds, label=<<font color="black">2:app __x2__ = (GetV value P)</font>> color="black" fillcolor="white" style=filled]
  node5875 [shape=cds, label=<<font color="black">8:app __x6__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node5862 [shape=cds, label=<<font color="black">0:access __x0__ = (IdentifierReference &quot;StringValue&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5873 [shape=cds, label=<<font color="black">7:access __x5__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5860 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5869 [shape=cds, label=<<font color="black">6:app __x3__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node5864 [shape=cds, label=<<font color="black">1:app __x1__ = (ResolveBinding P)</font>> color="black" fillcolor="white" style=filled]
  node5867 -> node5868 [ color="black"]
  node5871 -> node5872 [ color="black"]
  node5874 -> node5875 [ color="black"]
  node5873 -> node5874 [ color="black"]
  node5869 -> node5870 [ color="black"]
  node5860 -> node5862 [ color="black"]
  node5863 -> node5864 [ color="black"]
  node5870 -> node5871 [label=<<font color="black">true</font>> color="black"]
  node5870 -> node5873 [label=<<font color="black">false</font>> color="black"]
  node5872 -> node5877 [ color="black"]
  node5866 -> node5867 [ color="black"]
  node5876 -> node5877 [ color="black"]
  node5865 -> node5866 [ color="black"]
  node5877 -> node5878 [ color="black"]
  node5862 -> node5863 [ color="black"]
  node5875 -> node5876 [ color="black"]
  node5868 -> node5869 [label=<<font color="black">true</font>> color="black"]
  node5868 -> node5877 [label=<<font color="black">false</font>> color="black"]
  node5864 -> node5865 [ color="black"]
  node5878 -> node5861 [ color="black"]
}
