digraph {
  node9268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:__x5__</td></tr>
      <tr><td align="left">9:let desc = (new PropertyDescriptor(&quot;Value&quot; -&gt; closure, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; enumerable, &quot;Configurable&quot; -&gt; true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9261 [shape=cds, label=<<font color="black">5:app __x2__ = (MakeMethod closure object)</font>> color="black" fillcolor="white" style=filled]
  node9266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let prototype = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9255 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9264 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:__x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9260 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let closure = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let propKey = __x0__</td></tr>
      <tr><td align="left">1:[? propKey]</td></tr>
      <tr><td align="left">2:let scope = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">3:let sourceText = (get-syntax GeneratorMethod)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9263 [shape=cds, label=<<font color="black">6:app __x3__ = (SetFunctionName closure propKey)</font>> color="black" fillcolor="white" style=filled]
  node9259 [shape=cds, label=<<font color="black">4:app __x1__ = (OrdinaryFunctionCreate INTRINSIC_GeneratorFunction_prototype sourceText UniqueFormalParameters GeneratorBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node9270 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9257 [shape=cds, label=<<font color="black">0:access __x0__ = (PropertyName &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9262 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:__x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9265 [shape=cds, label=<<font color="black">7:app __x4__ = (OrdinaryObjectCreate INTRINSIC_GeneratorFunction_prototype_prototype)</font>> color="black" fillcolor="white" style=filled]
  node9267 [shape=cds, label=<<font color="black">8:app __x5__ = (DefinePropertyOrThrow closure &quot;prototype&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; prototype, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node9269 [shape=cds, label=<<font color="black">10:app __x6__ = (DefinePropertyOrThrow object propKey desc)</font>> color="black" fillcolor="white" style=filled]
  node9256 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9258 -> node9259 [ color="black"]
  node9262 -> node9263 [ color="black"]
  node9265 -> node9266 [ color="black"]
  node9260 -> node9261 [ color="black"]
  node9259 -> node9260 [ color="black"]
  node9264 -> node9265 [ color="black"]
  node9269 -> node9270 [ color="black"]
  node9267 -> node9268 [ color="black"]
  node9257 -> node9258 [ color="black"]
  node9268 -> node9269 [ color="black"]
  node9270 -> node9256 [ color="black"]
  node9261 -> node9262 [ color="black"]
  node9255 -> node9257 [ color="black"]
  node9263 -> node9264 [ color="black"]
  node9266 -> node9267 [ color="black"]
}
