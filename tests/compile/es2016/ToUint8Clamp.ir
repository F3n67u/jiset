{
  [0] app __x0__ = (ToNumber argument)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [1] {}
  [0] let number = __x0__
  [1] if (= number NaN) {
    app __x1__ = (WrapCompletion 0i)
    return __x1__
  } else [1] {}
  [2] if (! (< 0i number)) {
    app __x2__ = (WrapCompletion 0i)
    return __x2__
  } else [1] {}
  [3] if (! (< number 255i)) {
    app __x3__ = (WrapCompletion 255i)
    return __x3__
  } else [1] {}
  [4] app __x4__ = (floor number)
  [4] let f = __x4__
  [5] if (< (+ f 0.5) number) {
    app __x5__ = (WrapCompletion (+ f 1i))
    return __x5__
  } else [1] {}
  [6] if (< number (+ f 0.5)) {
    app __x6__ = (WrapCompletion f)
    return __x6__
  } else [1] {}
  [7] if (= (% f 2i) 1i) {
    app __x7__ = (WrapCompletion (+ f 1i))
    return __x7__
  } else [1] {}
  [8] app __x8__ = (WrapCompletion f)
  [8] return __x8__
}