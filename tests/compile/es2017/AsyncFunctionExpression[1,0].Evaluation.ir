{
  [0] if true let strict = true else let strict = false
  [1] access __x0__ = (GLOBAL_context "LexicalEnvironment")
  [1] let scope = __x0__
  [2] app __x1__ = (NewDeclarativeEnvironment scope)
  [2] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [24] {}
  [2] let funcEnv = __x1__
  [3] let envRec = funcEnv.EnvironmentRecord
  [4] access __x2__ = (BindingIdentifier "StringValue")
  [4] let name = __x2__
  [5] app __x3__ = (envRec.CreateImmutableBinding envRec name)
  [5] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [24] {}
  [5] __x3__
  [6] app __x4__ = (AsyncFunctionCreate CONST_Normal FormalParameters AsyncFunctionBody funcEnv strict)
  [6] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [24] {}
  [6] let closure = __x4__
  [7] app __x5__ = (SetFunctionName closure name)
  [7] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [24] {}
  [7] __x5__
  [8] app __x6__ = (envRec.InitializeBinding envRec name closure)
  [8] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [24] {}
  [8] __x6__
  [9] app __x7__ = (WrapCompletion closure)
  [9] return __x7__
}