digraph {
  node10103 [shape=cds, label=<<font color="black">2:access __x2__ = (head &quot;ArrowFormalParameters&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let closure = [! __x3__]</td></tr>
      <tr><td align="left">4:closure.SourceText = (get-syntax AsyncArrowFunction)</td></tr>
      <tr><td align="left">5:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10101 [shape=cds, label=<<font color="black">1:access __x1__ = (CoverCallExpressionAndAsyncArrowHead &quot;CoveredAsyncArrowHead&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let scope = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10098 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10097 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10104 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let parameters = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10105 [shape=cds, label=<<font color="black">3:app __x3__ = (OrdinaryFunctionCreate INTRINSIC_AsyncFunction_prototype parameters AsyncConciseBody CONST_lexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node10099 [shape=cds, label=<<font color="black">0:access __x0__ = (GLOBAL_context &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10102 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let head = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10102 -> node10103 [ color="black"]
  node10100 -> node10101 [ color="black"]
  node10097 -> node10099 [ color="black"]
  node10103 -> node10104 [ color="black"]
  node10101 -> node10102 [ color="black"]
  node10104 -> node10105 [ color="black"]
  node10105 -> node10106 [ color="black"]
  node10106 -> node10098 [ color="black"]
  node10099 -> node10100 [ color="black"]
}
