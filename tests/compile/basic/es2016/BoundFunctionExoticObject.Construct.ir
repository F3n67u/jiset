{
  let target = F.BoundTargetFunction
  assert (! (= target.Construct absent))
  let boundArgs = F.BoundArguments
  let __x0__ = (copy-obj boundArgs)
  let __x1__ = argumentsList
  let __x2__ = 0i
  while (< __x2__ __x1__.length) {
    let __x3__ = __x1__[__x2__]
    append __x3__ -> __x0__
    __x2__ = (+ __x2__ 1i)
  }
  let args = __x0__
  app __x4__ = (SameValue F newTarget)
  if (= __x4__ true) let newTarget = target else {}
  app __x5__ = (Construct target args newTarget)
  return [? __x5__]
}