{
  let M = this
  if (! (= (typeof M) Object)) throw TypeError else {}
  if (= M.WeakMapData absent) throw TypeError else {}
  let entries = M.WeakMapData
  if (! (= (typeof key) Object)) throw TypeError else {}
  let __x0__ = entries
  let __x1__ = 0i
  while (< __x1__ __x0__.length) {
    let p = __x0__[__x1__]
    let __x2__ = true
    __x2__ = (! (= p.Key CONST_empty))
    if __x2__ {
      app __x3__ = (SameValue p.Key key)
      __x2__ = (= __x3__ true)
    } else {}
    if __x2__ {
      p.Value = value
      return M
    } else {}
    __x1__ = (+ __x1__ 1i)
  }
  let p = (new Record("Key" -> key, "Value" -> value))
  append p -> entries
  return M
}