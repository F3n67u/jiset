digraph {
  node12896 [shape=cds, label=<<font color="black">7:app __x5__ = (max pos 0i)</font>> color="black" fillcolor="white" style=filled]
  node12901 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:??? &quot;If the sequence of elements of id:{S} starting at id:{start} of length id:{searchLength} is the same as the full element sequence of id:{searchStr} , return value:{true} .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;Otherwise , return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12892 [shape=diamond, label=<<font color="black">(= endPosition undefined)</font>> color="black" fillcolor="white" style=filled]
  node12878 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12881 [shape=cds, label=<<font color="black">app endPosition = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12885 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12899 [shape=diamond, label=<<font color="black">(&lt; start 0i)</font>> color="black" fillcolor="white" style=filled]
  node12890 [shape=cds, label=<<font color="black">4:app __x3__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node12886 [shape=cds, label=<<font color="black">2:app __x2__ = (IsRegExp searchString)</font>> color="black" fillcolor="white" style=filled]
  node12883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12880 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12887 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isRegExp = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12879 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12884 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12897 [shape=cds, label=<<font color="black">7:app __x6__ = (min __x5__ len)</font>> color="black" fillcolor="white" style=filled]
  node12888 [shape=diamond, label=<<font color="black">(= isRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node12898 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let end = __x6__</td></tr>
      <tr><td align="left">8:let searchLength = searchStr.length</td></tr>
      <tr><td align="left">9:let start = (- end searchLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let searchStr = [? __x3__]</td></tr>
      <tr><td align="left">5:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12894 [shape=cds, label=<<font color="black">app __x4__ = (ToInteger endPosition)</font>> color="black" fillcolor="white" style=filled]
  node12882 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12900 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12893 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12896 -> node12897 [ color="black"]
  node12893 -> node12896 [ color="black"]
  node12886 -> node12887 [ color="black"]
  node12891 -> node12892 [ color="black"]
  node12880 -> node12881 [ color="black"]
  node12894 -> node12895 [ color="black"]
  node12885 -> node12886 [ color="black"]
  node12887 -> node12888 [ color="black"]
  node12898 -> node12899 [ color="black"]
  node12882 -> node12883 [ color="black"]
  node12892 -> node12893 [label=<<font color="black">true</font>> color="black"]
  node12892 -> node12894 [label=<<font color="black">false</font>> color="black"]
  node12900 -> node12901 [ color="black"]
  node12901 -> node12879 [ color="black"]
  node12897 -> node12898 [ color="black"]
  node12895 -> node12896 [ color="black"]
  node12888 -> node12889 [label=<<font color="black">true</font>> color="black"]
  node12888 -> node12890 [label=<<font color="black">false</font>> color="black"]
  node12883 -> node12884 [ color="black"]
  node12878 -> node12880 [ color="black"]
  node12889 -> node12890 [ color="black"]
  node12884 -> node12885 [ color="black"]
  node12890 -> node12891 [ color="black"]
  node12881 -> node12882 [ color="black"]
  node12899 -> node12900 [label=<<font color="black">true</font>> color="black"]
  node12899 -> node12901 [label=<<font color="black">false</font>> color="black"]
}
