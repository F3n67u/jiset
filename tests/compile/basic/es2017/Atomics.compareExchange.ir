{
  app __x0__ = (ValidateSharedIntegerTypedArray typedArray)
  let buffer = [? __x0__]
  app __x1__ = (ValidateAtomicAccess typedArray index)
  let i = [? __x1__]
  app __x2__ = (ToInteger expectedValue)
  let expected = [? __x2__]
  app __x3__ = (ToInteger replacementValue)
  let replacement = [? __x3__]
  let arrayTypeName = typedArray.TypedArrayName
  ??? "Let id:{elementType} be the String value of the Element Type value in link:{unhandled: table-49} for id:{arrayTypeName} ."
  let isLittleEndian = GLOBAL_agent.LittleEndian
  app __x4__ = (NumberToRawBytes elementType expected isLittleEndian)
  let expectedBytes = __x4__
  ??? "Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for id:{arrayTypeName} ."
  let offset = typedArray.ByteOffset
  let indexedPosition = (+ (* i elementSize) offset)
  ??? "Let code:{compareExchange} denote a semantic function of two List of byte values arguments that returns the second argument if the first argument is element - wise equal to id:{expectedBytes} ."
  app __x5__ = (GetModifySetValueInBuffer buffer indexedPosition elementType replacement ??? "compareExchange")
  return __x5__
}