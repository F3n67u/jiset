digraph {
  node18360 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18384 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18361 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18379 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node18386 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x6__) (! (= __x6__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18376 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let result = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18378 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18363 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18387 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18377 [shape=cds, label=<<font color="black">5:app __x4__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node18366 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iteratorRecord = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18381 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18369 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18374 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18388 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18365 [shape=cds, label=<<font color="black">2:app __x1__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node18385 [shape=cds, label=<<font color="black">app __x6__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18368 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18380 [shape=cds, label=<<font color="black">app __x5__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node18375 [shape=cds, label=<<font color="black">4:app __x3__ = (PerformPromiseRace iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node18370 [shape=cds, label=<<font color="black">app __x2__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18383 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18372 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18364 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18371 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x2__) (! (= __x2__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18389 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18382 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node18367 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18390 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18359 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18362 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18371 -> node18372 [label=<<font color="black">true</font>> color="black"]
  node18371 -> node18373 [label=<<font color="black">false</font>> color="black"]
  node18386 -> node18387 [label=<<font color="black">true</font>> color="black"]
  node18386 -> node18388 [label=<<font color="black">false</font>> color="black"]
  node18372 -> node18373 [ color="black"]
  node18374 -> node18375 [ color="black"]
  node18387 -> node18388 [ color="black"]
  node18367 -> node18368 [label=<<font color="black">true</font>> color="black"]
  node18367 -> node18374 [label=<<font color="black">false</font>> color="black"]
  node18368 -> node18369 [label=<<font color="black">true</font>> color="black"]
  node18368 -> node18370 [label=<<font color="black">false</font>> color="black"]
  node18381 -> node18382 [ color="black"]
  node18383 -> node18384 [label=<<font color="black">true</font>> color="black"]
  node18383 -> node18385 [label=<<font color="black">false</font>> color="black"]
  node18366 -> node18367 [ color="black"]
  node18390 -> node18360 [ color="black"]
  node18389 -> node18390 [ color="black"]
  node18365 -> node18366 [ color="black"]
  node18359 -> node18361 [ color="black"]
  node18378 -> node18379 [label=<<font color="black">true</font>> color="black"]
  node18378 -> node18390 [label=<<font color="black">false</font>> color="black"]
  node18363 -> node18364 [ color="black"]
  node18369 -> node18374 [ color="black"]
  node18364 -> node18365 [ color="black"]
  node18379 -> node18380 [label=<<font color="black">true</font>> color="black"]
  node18379 -> node18382 [label=<<font color="black">false</font>> color="black"]
  node18373 -> node18374 [ color="black"]
  node18385 -> node18386 [ color="black"]
  node18361 -> node18362 [ color="black"]
  node18370 -> node18371 [ color="black"]
  node18377 -> node18378 [ color="black"]
  node18384 -> node18389 [ color="black"]
  node18375 -> node18376 [ color="black"]
  node18388 -> node18389 [ color="black"]
  node18376 -> node18377 [ color="black"]
  node18380 -> node18381 [ color="black"]
  node18382 -> node18383 [label=<<font color="black">true</font>> color="black"]
  node18382 -> node18389 [label=<<font color="black">false</font>> color="black"]
  node18362 -> node18363 [ color="black"]
}
