digraph {
  node17815 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17820 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node17816 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">isLittleEndian = GLOBAL_agent.LittleEndian</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17817 [shape=cds, label=<<font color="black">0:app __x0__ = (IsDetachedBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:??? &quot;Else , let id:{rawValue} be a List whose elements are bytes from id:{block} at indices id:{byteIndex} ( inclusive ) through id:{byteIndex} + id:{elementSize} ( exclusive ) .&quot;</td></tr>
      <tr><td align="left">14:assert (= rawValue.length elementSize)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17821 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let execution = GLOBAL_agent.CandidateExecution</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{eventList} be the [ [ EventList ] ] field of the element in id:{execution} . [ [ EventsRecords ] ] whose [ [ AgentSignifier ] ] is AgentSignifier ( ) .&quot;</td></tr>
      <tr><td align="left">7:let __x2__ = true</td></tr>
      <tr><td align="left">7:__x2__ = (= isTypedArray true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (= __x3__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17830 [shape=diamond, label=<<font color="black">(= isLittleEndian absent)</font>> color="black" fillcolor="white" style=filled]
  node17827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17819 [shape=cds, label=<<font color="black">4:app __x1__ = (IsSharedArrayBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17825 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node17823 [shape=cds, label=<<font color="black">app __x3__ = (IsNoTearConfiguration type order)</font>> color="black" fillcolor="white" style=filled]
  node17818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ false)</td></tr>
      <tr><td align="left">2:let block = arrayBuffer.ArrayBufferData</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:??? &quot;Let id:{rawValue} be a List of length id:{elementSize} whose elements are nondeterministically chosen byte values .&quot;</td></tr>
      <tr><td align="left">10:let readEvent = (new ReadSharedMemory(&quot;Order&quot; -&gt; order, &quot;NoTear&quot; -&gt; noTear, &quot;Block&quot; -&gt; block, &quot;ByteIndex&quot; -&gt; byteIndex, &quot;ElementSize&quot; -&gt; elementSize))</td></tr>
      <tr><td align="left">11:append readEvent -&gt; eventList</td></tr>
      <tr><td align="left">12:append (new ChosenValueRecord(&quot;Event&quot; -&gt; readEvent, &quot;ChosenValue&quot; -&gt; rawValue)) -&gt; execution.ChosenValues</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17822 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node17832 [shape=cds, label=<<font color="black">16:app __x4__ = (RawBytesToNumeric type rawValue isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17815 -> node17817 [ color="black"]
  node17825 -> node17826 [label=<<font color="black">true</font>> color="black"]
  node17825 -> node17827 [label=<<font color="black">false</font>> color="black"]
  node17822 -> node17823 [label=<<font color="black">true</font>> color="black"]
  node17822 -> node17825 [label=<<font color="black">false</font>> color="black"]
  node17821 -> node17822 [ color="black"]
  node17830 -> node17831 [label=<<font color="black">true</font>> color="black"]
  node17830 -> node17832 [label=<<font color="black">false</font>> color="black"]
  node17833 -> node17816 [ color="black"]
  node17819 -> node17820 [ color="black"]
  node17829 -> node17830 [ color="black"]
  node17831 -> node17832 [ color="black"]
  node17832 -> node17833 [ color="black"]
  node17817 -> node17818 [ color="black"]
  node17827 -> node17828 [ color="black"]
  node17820 -> node17821 [label=<<font color="black">true</font>> color="black"]
  node17820 -> node17829 [label=<<font color="black">false</font>> color="black"]
  node17824 -> node17825 [ color="black"]
  node17823 -> node17824 [ color="black"]
  node17818 -> node17819 [ color="black"]
  node17826 -> node17828 [ color="black"]
  node17828 -> node17829 [ color="black"]
}
