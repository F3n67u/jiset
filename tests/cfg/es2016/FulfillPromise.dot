digraph {
  node15522 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15523 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= promise.PromiseState &quot;pending&quot;)</td></tr>
      <tr><td align="left">1:let reactions = promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">2:promise.PromiseResult = value</td></tr>
      <tr><td align="left">3:promise.PromiseFulfillReactions = undefined</td></tr>
      <tr><td align="left">4:promise.PromiseRejectReactions = undefined</td></tr>
      <tr><td align="left">5:promise.PromiseState = &quot;fulfilled&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15520 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15524 [shape=cds, label=<<font color="black">6:app __x0__ = (TriggerPromiseReactions reactions value)</font>> color="black" fillcolor="white" style=filled]
  node15519 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15525 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15521 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15525 -> node15520 [ color="black"]
  node15524 -> node15525 [ color="black"]
  node15521 -> node15522 [ color="black"]
  node15523 -> node15524 [ color="black"]
  node15522 -> node15523 [ color="black"]
  node15519 -> node15521 [ color="black"]
}
