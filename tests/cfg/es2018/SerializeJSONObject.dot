digraph {
  node16972 [shape=diamond, label=<<font color="black">(! (= PropertyList undefined))</font>> color="black" fillcolor="white" style=filled]
  node16982 [shape=cds, label=<<font color="black">12:app __x4__ = (QuoteJSONString P)</font>> color="black" fillcolor="white" style=filled]
  node16979 [shape=cds, label=<<font color="black">10:app __x3__ = (SerializeJSONProperty P value)</font>> color="black" fillcolor="white" style=filled]
  node16985 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">member = (+ member &quot; &quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16989 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = &quot;{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16976 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let partial = (new [])</td></tr>
      <tr><td align="left">9:let __x1__ = K</td></tr>
      <tr><td align="left">9:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16978 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let P = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16973 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let K = PropertyList</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16981 [shape=diamond, label=<<font color="black">(! (= strP undefined))</font>> color="black" fillcolor="white" style=filled]
  node16968 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16990 [shape=diamond, label=<<font color="black">(= gap &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16977 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node16967 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16984 [shape=diamond, label=<<font color="black">(! (= gap &quot;&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16970 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16974 [shape=cds, label=<<font color="black">7:app __x0__ = (EnumerableOwnPropertyNames value &quot;key&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16987 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16993 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">29:indent = stepback</td></tr>
      <tr><td align="left">30:return final</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16975 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let K = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:append value -&gt; stack</td></tr>
      <tr><td align="left">2:let stepback = indent</td></tr>
      <tr><td align="left">3:indent = (+ indent gap)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16992 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let separator = (+ (+ &quot;,&quot; &quot;\n&quot;) indent)</td></tr>
      <tr><td align="left">26:??? &quot;Let id:{properties} be the String value formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with id:{separator} . The id:{separator} String is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">27:let final = (+ (+ (+ (+ (+ (+ &quot;{&quot; &quot;\n&quot;) indent) properties) &quot;\n&quot;) stepback) &quot;}&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16986 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:member = (+ member strP)</td></tr>
      <tr><td align="left">17:append member -&gt; partial</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16969 [shape=diamond, label=<<font color="black">(contains stack value)</font>> color="black" fillcolor="white" style=filled]
  node16980 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let strP = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16991 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:??? &quot;Let id:{properties} be the String value formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with the code unit 0x002C ( COMMA ) . A comma is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">23:let final = (+ (+ &quot;{&quot; properties) &quot;}&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16988 [shape=diamond, label=<<font color="black">(= partial.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node16983 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let member = __x4__</td></tr>
      <tr><td align="left">13:member = (+ member &quot;:&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16983 -> node16984 [ color="black"]
  node16976 -> node16977 [ color="black"]
  node16988 -> node16989 [label=<<font color="black">true</font>> color="black"]
  node16988 -> node16990 [label=<<font color="black">false</font>> color="black"]
  node16981 -> node16982 [label=<<font color="black">true</font>> color="black"]
  node16981 -> node16987 [label=<<font color="black">false</font>> color="black"]
  node16982 -> node16983 [ color="black"]
  node16969 -> node16970 [label=<<font color="black">true</font>> color="black"]
  node16969 -> node16971 [label=<<font color="black">false</font>> color="black"]
  node16990 -> node16991 [label=<<font color="black">true</font>> color="black"]
  node16990 -> node16992 [label=<<font color="black">false</font>> color="black"]
  node16971 -> node16972 [ color="black"]
  node16979 -> node16980 [ color="black"]
  node16986 -> node16987 [ color="black"]
  node16973 -> node16976 [ color="black"]
  node16989 -> node16993 [ color="black"]
  node16974 -> node16975 [ color="black"]
  node16985 -> node16986 [ color="black"]
  node16977 -> node16978 [label=<<font color="black">true</font>> color="black"]
  node16977 -> node16988 [label=<<font color="black">false</font>> color="black"]
  node16991 -> node16993 [ color="black"]
  node16984 -> node16985 [label=<<font color="black">true</font>> color="black"]
  node16984 -> node16986 [label=<<font color="black">false</font>> color="black"]
  node16987 -> node16977 [ color="black"]
  node16980 -> node16981 [ color="black"]
  node16972 -> node16973 [label=<<font color="black">true</font>> color="black"]
  node16972 -> node16974 [label=<<font color="black">false</font>> color="black"]
  node16978 -> node16979 [ color="black"]
  node16967 -> node16969 [ color="black"]
  node16970 -> node16971 [ color="black"]
  node16993 -> node16968 [ color="black"]
  node16992 -> node16993 [ color="black"]
  node16975 -> node16976 [ color="black"]
}
