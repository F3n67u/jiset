digraph {
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= extensible true)</td></tr>
      <tr><td align="left">6:let __x0__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node65 [shape=diamond, label=<<font color="black">__x19__</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=diamond, label=<<font color="black">(= current undefined)</font>> color="black" fillcolor="white" style=filled]
  node66 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node69 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;For each field of id:{Desc} that is present , set the corresponding attribute of the property named id:{P} of object id:{O} to the value of the field .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = (= __x2__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node56 [shape=diamond, label=<<font color="black">__x17__</font>> color="black" fillcolor="white" style=filled]
  node42 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Desc.Writable absent)) (= Desc.Writable true))</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node37 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If id:{O} is not value:{undefined} , convert the property named id:{P} of object id:{O} from an accessor property to a data property . Preserve the existing values of the converted property ' s [ [ Configurable ] ] and [ [ Enumerable ] ] attributes and set the rest of the property ' s attributes to their &lt; emu - xref href = \&quot; # table - default - attribute - values \&quot; &gt; default values &lt; / emu - xref &gt; .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node52 [shape=cds, label=<<font color="black">28:app __x16__ = (IsAccessorDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= [! __x3__] true)</td></tr>
      <tr><td align="left">8:??? &quot;If id:{O} is not value:{undefined} , create an own accessor property named id:{P} of object id:{O} whose [ [ Get ] ] , [ [ Set ] ] , [ [ Enumerable ] ] , and [ [ Configurable ] ] attribute values are described by id:{Desc} . If the value of an attribute field of id:{Desc} is absent , the attribute of the newly created property is set to its &lt; emu - xref href = \&quot; # table - default - attribute - values \&quot; &gt; default value &lt; / emu - xref &gt; .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let __x4__ = true</td></tr>
      <tr><td align="left">13:__x4__ = (! (= Desc.Enumerable absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node46 [shape=cds, label=<<font color="black">app __x14__ = (SameValue Desc.Value current.Value)</font>> color="black" fillcolor="white" style=filled]
  node57 [shape=cds, label=<<font color="black">app __x18__ = (SameValue Desc.Set current.Set)</font>> color="black" fillcolor="white" style=filled]
  node29 [shape=cds, label=<<font color="black">app __x8__ = (IsDataDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node61 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let __x19__ = true</td></tr>
      <tr><td align="left">31:__x19__ = (! (= Desc.Get absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=cds, label=<<font color="black">6:app __x1__ = (IsGenericDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node60 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node70 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node33 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=cds, label=<<font color="black">app __x7__ = (IsDataDescriptor current)</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=cds, label=<<font color="black">app __x11__ = (IsDataDescriptor current)</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=cds, label=<<font color="black">app __x2__ = (IsDataDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node53 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:assert (&amp;&amp; (= [! __x15__] true) (= [! __x16__] true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">7:app __x3__ = (IsAccessorDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=diamond, label=<<font color="black">(&amp;&amp; (= current.Configurable false) (= current.Writable false))</font>> color="black" fillcolor="white" style=filled]
  node45 [shape=diamond, label=<<font color="black">__x13__</font>> color="black" fillcolor="white" style=filled]
  node64 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x19__ = (= __x20__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=diamond, label=<<font color="black">(= current.Configurable false)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=diamond, label=<<font color="black">(= current.Configurable false)</font>> color="black" fillcolor="white" style=filled]
  node34 [shape=cds, label=<<font color="black">20:app __x10__ = (IsDataDescriptor current)</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">app __x5__ = (SameValue Desc.Enumerable current.Enumerable)</font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let __x13__ = true</td></tr>
      <tr><td align="left">25:__x13__ = (! (= Desc.Value absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node59 [shape=diamond, label=<<font color="black">__x17__</font>> color="black" fillcolor="white" style=filled]
  node27 [shape=diamond, label=<<font color="black">(= [! __x6__] true)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If id:{O} is not value:{undefined} , create an own data property named id:{P} of object id:{O} whose [ [ Value ] ] , [ [ Writable ] ] , [ [ Enumerable ] ] , and [ [ Configurable ] ] attribute values are described by id:{Desc} . If the value of an attribute field of id:{Desc} is absent , the attribute of the newly created property is set to its &lt; emu - xref href = \&quot; # table - default - attribute - values \&quot; &gt; default value &lt; / emu - xref &gt; .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node54 [shape=diamond, label=<<font color="black">(= current.Configurable false)</font>> color="black" fillcolor="white" style=filled]
  node49 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:__x0__ = (= __x1__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node39 [shape=cds, label=<<font color="black">app __x12__ = (IsDataDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=diamond, label=<<font color="black">(= extensible false)</font>> color="black" fillcolor="white" style=filled]
  node35 [shape=diamond, label=<<font color="black">(= __x10__ true)</font>> color="black" fillcolor="white" style=filled]
  node48 [shape=diamond, label=<<font color="black">__x13__</font>> color="black" fillcolor="white" style=filled]
  node63 [shape=cds, label=<<font color="black">app __x20__ = (SameValue Desc.Get current.Get)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=diamond, label=<<font color="black">(= Desc.Configurable true)</font>> color="black" fillcolor="white" style=filled]
  node50 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node67 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:??? &quot;If every field in id:{Desc} is absent , return value:{true} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node31 [shape=diamond, label=<<font color="black">(= [! __x9__] false)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node43 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node40 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x11__ true) (= __x12__ true))</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=cds, label=<<font color="black">27:app __x6__ = (IsGenericDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node55 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let __x17__ = true</td></tr>
      <tr><td align="left">30:__x17__ = (! (= Desc.Set absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__ = (= [! __x5__] false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node58 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (= __x18__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node36 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If id:{O} is not value:{undefined} , convert the property named id:{P} of object id:{O} from a data property to an accessor property . Preserve the existing values of the converted property ' s [ [ Configurable ] ] and [ [ Enumerable ] ] attributes and set the rest of the property ' s attributes to their &lt; emu - xref href = \&quot; # table - default - attribute - values \&quot; &gt; default values &lt; / emu - xref &gt; .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=cds, label=<<font color="black">app __x9__ = (SameValue [! __x7__] [! __x8__])</font>> color="black" fillcolor="white" style=filled]
  node51 [shape=cds, label=<<font color="black">28:app __x15__ = (IsAccessorDescriptor current)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node47 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x13__ = (= __x14__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node68 [shape=diamond, label=<<font color="black">(! (= O undefined))</font>> color="black" fillcolor="white" style=filled]
  node62 [shape=diamond, label=<<font color="black">__x19__</font>> color="black" fillcolor="white" style=filled]
  node37 -> node68 [ color="black"]
  node35 -> node36 [label=<<font color="black">true</font>> color="black"]
  node35 -> node37 [label=<<font color="black">false</font>> color="black"]
  node70 -> node1 [ color="black"]
  node0 -> node2 [ color="black"]
  node44 -> node45 [ color="black"]
  node17 -> node18 [label=<<font color="black">true</font>> color="black"]
  node17 -> node26 [label=<<font color="black">false</font>> color="black"]
  node24 -> node25 [label=<<font color="black">true</font>> color="black"]
  node24 -> node26 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [ color="black"]
  node53 -> node54 [ color="black"]
  node63 -> node64 [ color="black"]
  node61 -> node62 [ color="black"]
  node28 -> node29 [ color="black"]
  node64 -> node65 [ color="black"]
  node29 -> node30 [ color="black"]
  node39 -> node40 [ color="black"]
  node67 -> node68 [ color="black"]
  node7 -> node8 [ color="black"]
  node34 -> node35 [ color="black"]
  node8 -> node11 [label=<<font color="black">true</font>> color="black"]
  node8 -> node9 [label=<<font color="black">false</font>> color="black"]
  node66 -> node67 [ color="black"]
  node3 -> node4 [label=<<font color="black">true</font>> color="black"]
  node3 -> node5 [label=<<font color="black">false</font>> color="black"]
  node15 -> node16 [ color="black"]
  node55 -> node56 [ color="black"]
  node11 -> node12 [label=<<font color="black">true</font>> color="black"]
  node11 -> node13 [label=<<font color="black">false</font>> color="black"]
  node68 -> node69 [label=<<font color="black">true</font>> color="black"]
  node68 -> node70 [label=<<font color="black">false</font>> color="black"]
  node19 -> node20 [ color="black"]
  node45 -> node46 [label=<<font color="black">true</font>> color="black"]
  node45 -> node48 [label=<<font color="black">false</font>> color="black"]
  node59 -> node60 [label=<<font color="black">true</font>> color="black"]
  node59 -> node61 [label=<<font color="black">false</font>> color="black"]
  node13 -> node14 [ color="black"]
  node12 -> node15 [ color="black"]
  node57 -> node58 [ color="black"]
  node52 -> node53 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node43 -> node44 [ color="black"]
  node9 -> node10 [ color="black"]
  node65 -> node66 [label=<<font color="black">true</font>> color="black"]
  node65 -> node67 [label=<<font color="black">false</font>> color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
  node30 -> node31 [ color="black"]
  node48 -> node49 [label=<<font color="black">true</font>> color="black"]
  node48 -> node50 [label=<<font color="black">false</font>> color="black"]
  node32 -> node33 [label=<<font color="black">true</font>> color="black"]
  node32 -> node34 [label=<<font color="black">false</font>> color="black"]
  node21 -> node22 [label=<<font color="black">true</font>> color="black"]
  node21 -> node24 [label=<<font color="black">false</font>> color="black"]
  node26 -> node27 [ color="black"]
  node62 -> node63 [label=<<font color="black">true</font>> color="black"]
  node62 -> node65 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [ color="black"]
  node42 -> node43 [label=<<font color="black">true</font>> color="black"]
  node42 -> node44 [label=<<font color="black">false</font>> color="black"]
  node47 -> node48 [ color="black"]
  node27 -> node68 [label=<<font color="black">true</font>> color="black"]
  node27 -> node28 [label=<<font color="black">false</font>> color="black"]
  node4 -> node5 [ color="black"]
  node51 -> node52 [ color="black"]
  node2 -> node3 [label=<<font color="black">true</font>> color="black"]
  node2 -> node16 [label=<<font color="black">false</font>> color="black"]
  node25 -> node26 [ color="black"]
  node20 -> node21 [ color="black"]
  node60 -> node61 [ color="black"]
  node69 -> node70 [ color="black"]
  node54 -> node55 [label=<<font color="black">true</font>> color="black"]
  node54 -> node68 [label=<<font color="black">false</font>> color="black"]
  node41 -> node42 [label=<<font color="black">true</font>> color="black"]
  node41 -> node68 [label=<<font color="black">false</font>> color="black"]
  node46 -> node47 [ color="black"]
  node58 -> node59 [ color="black"]
  node16 -> node17 [ color="black"]
  node18 -> node19 [label=<<font color="black">true</font>> color="black"]
  node18 -> node20 [label=<<font color="black">false</font>> color="black"]
  node49 -> node50 [ color="black"]
  node36 -> node68 [ color="black"]
  node38 -> node39 [ color="black"]
  node40 -> node41 [label=<<font color="black">true</font>> color="black"]
  node40 -> node51 [label=<<font color="black">false</font>> color="black"]
  node56 -> node57 [label=<<font color="black">true</font>> color="black"]
  node56 -> node59 [label=<<font color="black">false</font>> color="black"]
  node50 -> node68 [ color="black"]
  node31 -> node32 [label=<<font color="black">true</font>> color="black"]
  node31 -> node38 [label=<<font color="black">false</font>> color="black"]
  node33 -> node34 [ color="black"]
}
