digraph {
  node10134 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node10138 [shape=cds, label=<<font color="black">14:app __x2__ = (NormalCompletion undefined)</font>> color="black" fillcolor="white" style=filled]
  node10142 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">(pop GLOBAL_executionStack (- GLOBAL_executionStack.length 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10139 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:result = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10133 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let result = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let globalEnv = scriptRecord.Realm.GlobalEnv</td></tr>
      <tr><td align="left">1:let scriptCxt = (new ExecutionContext(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">2:scriptCxt.Function = null</td></tr>
      <tr><td align="left">3:scriptCxt.Realm = scriptRecord.Realm</td></tr>
      <tr><td align="left">4:scriptCxt.ScriptOrModule = scriptRecord</td></tr>
      <tr><td align="left">5:scriptCxt.VariableEnvironment = globalEnv</td></tr>
      <tr><td align="left">6:scriptCxt.LexicalEnvironment = globalEnv</td></tr>
      <tr><td align="left">7:GLOBAL_context = null</td></tr>
      <tr><td align="left">8:append scriptCxt -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">8:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">9:let scriptBody = scriptRecord.ECMAScriptCode</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10143 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:assert (&lt; 0i GLOBAL_executionStack.length)</td></tr>
      <tr><td align="left">17:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">18:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10136 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:result = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10132 [shape=cds, label=<<font color="black">10:app __x0__ = (GlobalDeclarationInstantiation scriptBody globalEnv)</font>> color="black" fillcolor="white" style=filled]
  node10129 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10135 [shape=cds, label=<<font color="black">12:access __x1__ = (scriptBody &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10137 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type CONST_normal) (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node10141 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] scriptCxt)</font>> color="black" fillcolor="white" style=filled]
  node10130 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10140 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:GLOBAL_context = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10143 -> node10130 [ color="black"]
  node10141 -> node10142 [label=<<font color="black">true</font>> color="black"]
  node10141 -> node10143 [label=<<font color="black">false</font>> color="black"]
  node10131 -> node10132 [ color="black"]
  node10133 -> node10134 [ color="black"]
  node10142 -> node10143 [ color="black"]
  node10132 -> node10133 [ color="black"]
  node10135 -> node10136 [ color="black"]
  node10140 -> node10141 [ color="black"]
  node10139 -> node10140 [ color="black"]
  node10129 -> node10131 [ color="black"]
  node10134 -> node10135 [label=<<font color="black">true</font>> color="black"]
  node10134 -> node10137 [label=<<font color="black">false</font>> color="black"]
  node10137 -> node10138 [label=<<font color="black">true</font>> color="black"]
  node10137 -> node10140 [label=<<font color="black">false</font>> color="black"]
  node10138 -> node10139 [ color="black"]
  node10136 -> node10137 [ color="black"]
}
