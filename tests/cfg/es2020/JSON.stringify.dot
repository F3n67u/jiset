digraph {
  node18001 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let isArray = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If the length of id:{space} is 10 or less , let id:{gap} be id:{space} ; otherwise let id:{gap} be the String value consisting of the first 10 code units of id:{space} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18004 [shape=cds, label=<<font color="black">10:app __x3__ = (LengthOfArrayLike replacer)</font>> color="black" fillcolor="white" style=filled]
  node18016 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">item = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18012 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">item = v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17991 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18006 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white" style=filled]
  node18041 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x18__]</td></tr>
      <tr><td align="left">36:let state = (new Record(&quot;ReplacerFunction&quot; -&gt; ReplacerFunction, &quot;Stack&quot; -&gt; stack, &quot;Indent&quot; -&gt; indent, &quot;Gap&quot; -&gt; gap, &quot;PropertyList&quot; -&gt; PropertyList))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18009 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let v = [? __x5__]</td></tr>
      <tr><td align="left">14:let item = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18002 [shape=diamond, label=<<font color="black">(= isArray true)</font>> color="black" fillcolor="white" style=filled]
  node17989 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18014 [shape=diamond, label=<<font color="black">(= __x7__ Number)</font>> color="black" fillcolor="white" style=filled]
  node18008 [shape=cds, label=<<font color="black">13:app __x5__ = (Get replacer [! __x4__])</font>> color="black" fillcolor="white" style=filled]
  node17998 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node18033 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:space = __x15__</td></tr>
      <tr><td align="left">29:??? &quot;If id:{space} &lt; 1 , let id:{gap} be the empty String ; otherwise let id:{gap} be the String value containing id:{space} occurrences of the code unit 0x0020 ( SPACE ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18018 [shape=diamond, label=<<font color="black">(= __x9__ Object)</font>> color="black" fillcolor="white" style=filled]
  node18020 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;If id:{item} is not value:{undefined} and id:{item} is not currently an element of id:{PropertyList} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">21:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18040 [shape=cds, label=<<font color="black">35:app __x18__ = (CreateDataPropertyOrThrow wrapper &quot;&quot; value)</font>> color="black" fillcolor="white" style=filled]
  node18023 [shape=diamond, label=<<font color="black">(! (= space.NumberData absent))</font>> color="black" fillcolor="white" style=filled]
  node18015 [shape=cds, label=<<font color="black">app __x8__ = (ToString v)</font>> color="black" fillcolor="white" style=filled]
  node18005 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let len = [? __x3__]</td></tr>
      <tr><td align="left">11:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18030 [shape=diamond, label=<<font color="black">(= __x13__ Number)</font>> color="black" fillcolor="white" style=filled]
  node18011 [shape=diamond, label=<<font color="black">(= __x6__ String)</font>> color="black" fillcolor="white" style=filled]
  node18043 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:return [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17994 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let stack = (new [])</td></tr>
      <tr><td align="left">1:let indent = &quot;&quot;</td></tr>
      <tr><td align="left">2:let PropertyList = undefined</td></tr>
      <tr><td align="left">2:let ReplacerFunction = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18026 [shape=diamond, label=<<font color="black">(! (= space.StringData absent))</font>> color="black" fillcolor="white" style=filled]
  node18037 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let gap = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18022 [shape=diamond, label=<<font color="black">(= __x10__ Object)</font>> color="black" fillcolor="white" style=filled]
  node18031 [shape=cds, label=<<font color="black">28:app __x14__ = (ToInteger space)</font>> color="black" fillcolor="white" style=filled]
  node17999 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">ReplacerFunction = replacer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17990 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18017 [shape=cds, label=<<font color="black">app __x9__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node18039 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:let wrapper = __x17__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17995 [shape=cds, label=<<font color="black">3:app __x0__ = (Type replacer)</font>> color="black" fillcolor="white" style=filled]
  node18027 [shape=cds, label=<<font color="black">26:app __x12__ = (ToString space)</font>> color="black" fillcolor="white" style=filled]
  node18038 [shape=cds, label=<<font color="black">34:app __x17__ = (OrdinaryObjectCreate INTRINSIC_Object_prototype)</font>> color="black" fillcolor="white" style=filled]
  node18013 [shape=cds, label=<<font color="black">app __x7__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node18003 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:PropertyList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18035 [shape=diamond, label=<<font color="black">(= __x16__ String)</font>> color="black" fillcolor="white" style=filled]
  node18028 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:space = [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18000 [shape=cds, label=<<font color="black">7:app __x2__ = (IsArray replacer)</font>> color="black" fillcolor="white" style=filled]
  node18032 [shape=cds, label=<<font color="black">28:app __x15__ = (min 10i [! __x14__])</font>> color="black" fillcolor="white" style=filled]
  node17996 [shape=diamond, label=<<font color="black">(= __x0__ Object)</font>> color="black" fillcolor="white" style=filled]
  node18007 [shape=cds, label=<<font color="black">13:app __x4__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node17997 [shape=cds, label=<<font color="black">6:app __x1__ = (IsCallable replacer)</font>> color="black" fillcolor="white" style=filled]
  node17992 [shape=cds, label=<<font color="black">app replacer = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18034 [shape=cds, label=<<font color="black">app __x16__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node18019 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If id:{v} has a [ [ StringData ] ] or [ [ NumberData ] ] internal slot , set id:{item} to ? ToString ( id:{v} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18024 [shape=cds, label=<<font color="black">24:app __x11__ = (ToNumber space)</font>> color="black" fillcolor="white" style=filled]
  node18029 [shape=cds, label=<<font color="black">32:app __x13__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node18010 [shape=cds, label=<<font color="black">17:app __x6__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node18025 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:space = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18042 [shape=cds, label=<<font color="black">37:app __x19__ = (SerializeJSONProperty state &quot;&quot; wrapper)</font>> color="black" fillcolor="white" style=filled]
  node17993 [shape=cds, label=<<font color="black">app space = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18021 [shape=cds, label=<<font color="black">22:app __x10__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node17992 -> node17993 [ color="black"]
  node18029 -> node18030 [ color="black"]
  node18000 -> node18001 [ color="black"]
  node18036 -> node18038 [ color="black"]
  node17999 -> node18021 [ color="black"]
  node18002 -> node18003 [label=<<font color="black">true</font>> color="black"]
  node18002 -> node18021 [label=<<font color="black">false</font>> color="black"]
  node18013 -> node18014 [ color="black"]
  node18032 -> node18033 [ color="black"]
  node18024 -> node18025 [ color="black"]
  node18016 -> node18020 [ color="black"]
  node18001 -> node18002 [ color="black"]
  node18042 -> node18043 [ color="black"]
  node18034 -> node18035 [ color="black"]
  node18021 -> node18022 [ color="black"]
  node17995 -> node17996 [ color="black"]
  node18025 -> node18029 [ color="black"]
  node18027 -> node18028 [ color="black"]
  node18039 -> node18040 [ color="black"]
  node18028 -> node18029 [ color="black"]
  node18022 -> node18023 [label=<<font color="black">true</font>> color="black"]
  node18022 -> node18029 [label=<<font color="black">false</font>> color="black"]
  node18038 -> node18039 [ color="black"]
  node18010 -> node18011 [ color="black"]
  node18037 -> node18038 [ color="black"]
  node18017 -> node18018 [ color="black"]
  node18020 -> node18006 [ color="black"]
  node18009 -> node18010 [ color="black"]
  node18031 -> node18032 [ color="black"]
  node18003 -> node18004 [ color="black"]
  node18026 -> node18027 [label=<<font color="black">true</font>> color="black"]
  node18026 -> node18029 [label=<<font color="black">false</font>> color="black"]
  node18015 -> node18016 [ color="black"]
  node18023 -> node18024 [label=<<font color="black">true</font>> color="black"]
  node18023 -> node18026 [label=<<font color="black">false</font>> color="black"]
  node18033 -> node18038 [ color="black"]
  node18006 -> node18007 [label=<<font color="black">true</font>> color="black"]
  node18006 -> node18021 [label=<<font color="black">false</font>> color="black"]
  node18011 -> node18012 [label=<<font color="black">true</font>> color="black"]
  node18011 -> node18013 [label=<<font color="black">false</font>> color="black"]
  node18035 -> node18036 [label=<<font color="black">true</font>> color="black"]
  node18035 -> node18037 [label=<<font color="black">false</font>> color="black"]
  node18043 -> node17990 [ color="black"]
  node18030 -> node18031 [label=<<font color="black">true</font>> color="black"]
  node18030 -> node18034 [label=<<font color="black">false</font>> color="black"]
  node17994 -> node17995 [ color="black"]
  node18019 -> node18020 [ color="black"]
  node18004 -> node18005 [ color="black"]
  node18041 -> node18042 [ color="black"]
  node17989 -> node17991 [ color="black"]
  node17991 -> node17992 [ color="black"]
  node17997 -> node17998 [ color="black"]
  node18018 -> node18019 [label=<<font color="black">true</font>> color="black"]
  node18018 -> node18020 [label=<<font color="black">false</font>> color="black"]
  node17993 -> node17994 [ color="black"]
  node18040 -> node18041 [ color="black"]
  node17996 -> node17997 [label=<<font color="black">true</font>> color="black"]
  node17996 -> node18021 [label=<<font color="black">false</font>> color="black"]
  node18005 -> node18006 [ color="black"]
  node18012 -> node18020 [ color="black"]
  node18008 -> node18009 [ color="black"]
  node18014 -> node18015 [label=<<font color="black">true</font>> color="black"]
  node18014 -> node18017 [label=<<font color="black">false</font>> color="black"]
  node18007 -> node18008 [ color="black"]
  node17998 -> node17999 [label=<<font color="black">true</font>> color="black"]
  node17998 -> node18000 [label=<<font color="black">false</font>> color="black"]
}
