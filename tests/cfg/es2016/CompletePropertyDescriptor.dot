digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=diamond, label=<<font color="black">(|| (= __x0__ true) (= __x1__ true))</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">(= Desc.Get absent)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=diamond, label=<<font color="black">(= Desc.Enumerable absent)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=diamond, label=<<font color="black">(= Desc.Value absent)</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">Desc.Writable = like.Writable</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">Desc.Set = like.Set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (is-instance-of Desc PropertyDescriptor)</td></tr>
      <tr><td align="left">1:let like = (new Record(&quot;Value&quot; -&gt; undefined, &quot;Writable&quot; -&gt; false, &quot;Get&quot; -&gt; undefined, &quot;Set&quot; -&gt; undefined, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">Desc.Configurable = like.Configurable</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=diamond, label=<<font color="black">(= Desc.Set absent)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">Desc.Value = like.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">5:app __x0__ = (IsGenericDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return Desc</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=diamond, label=<<font color="black">(= Desc.Configurable absent)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">Desc.Get = like.Get</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=diamond, label=<<font color="black">(= Desc.Writable absent)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">5:app __x1__ = (IsDataDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">Desc.Enumerable = like.Enumerable</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 -> node4 [ color="black"]
  node8 -> node9 [label=<<font color="black">true</font>> color="black"]
  node8 -> node14 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node12 [label=<<font color="black">false</font>> color="black"]
  node9 -> node14 [ color="black"]
  node11 -> node12 [ color="black"]
  node13 -> node14 [ color="black"]
  node0 -> node2 [ color="black"]
  node4 -> node5 [ color="black"]
  node6 -> node7 [label=<<font color="black">true</font>> color="black"]
  node6 -> node8 [label=<<font color="black">false</font>> color="black"]
  node7 -> node8 [ color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node16 -> node17 [label=<<font color="black">true</font>> color="black"]
  node16 -> node18 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [label=<<font color="black">true</font>> color="black"]
  node5 -> node10 [label=<<font color="black">false</font>> color="black"]
  node18 -> node1 [ color="black"]
  node17 -> node18 [ color="black"]
  node14 -> node15 [label=<<font color="black">true</font>> color="black"]
  node14 -> node16 [label=<<font color="black">false</font>> color="black"]
  node12 -> node13 [label=<<font color="black">true</font>> color="black"]
  node12 -> node14 [label=<<font color="black">false</font>> color="black"]
}
