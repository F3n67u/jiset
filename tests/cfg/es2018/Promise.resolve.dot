digraph {
  node17803 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17807 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17806 [shape=cds, label=<<font color="black">2:app __x1__ = (PromiseResolve C x)</font>> color="black" fillcolor="white" style=filled]
  node17800 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17801 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17805 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17804 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17802 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17799 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17806 -> node17807 [ color="black"]
  node17805 -> node17806 [ color="black"]
  node17804 -> node17805 [label=<<font color="black">true</font>> color="black"]
  node17804 -> node17806 [label=<<font color="black">false</font>> color="black"]
  node17802 -> node17803 [ color="black"]
  node17799 -> node17801 [ color="black"]
  node17803 -> node17804 [ color="black"]
  node17807 -> node17800 [ color="black"]
  node17801 -> node17802 [ color="black"]
}
