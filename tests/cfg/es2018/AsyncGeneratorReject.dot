digraph {
  node17407 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[! __x1__]</td></tr>
      <tr><td align="left">7:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17403 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let queue = generator.AsyncGeneratorQueue</td></tr>
      <tr><td align="left">2:assert (&lt; 0i queue.length)</td></tr>
      <tr><td align="left">3:let next = (pop queue 0i)</td></tr>
      <tr><td align="left">4:let promiseCapability = next.Capability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17406 [shape=cds, label=<<font color="black">6:app __x1__ = (AsyncGeneratorResumeNext generator)</font>> color="black" fillcolor="white" style=filled]
  node17402 [shape=cds, label=<<font color="black">app exception = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17399 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17405 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17401 [shape=cds, label=<<font color="black">app generator = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17400 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17404 [shape=cds, label=<<font color="black">5:app __x0__ = (Call promiseCapability.Reject undefined (new [exception]))</font>> color="black" fillcolor="white" style=filled]
  node17406 -> node17407 [ color="black"]
  node17399 -> node17401 [ color="black"]
  node17407 -> node17400 [ color="black"]
  node17405 -> node17406 [ color="black"]
  node17404 -> node17405 [ color="black"]
  node17402 -> node17403 [ color="black"]
  node17403 -> node17404 [ color="black"]
  node17401 -> node17402 [ color="black"]
}
