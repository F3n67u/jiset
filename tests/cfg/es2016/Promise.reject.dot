digraph {
  node15827 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node15823 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15824 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15830 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node15825 [shape=cds, label=<<font color="black">app r = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15828 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15832 [shape=cds, label=<<font color="black">3:app __x2__ = (Call promiseCapability.Reject undefined (new [r]))</font>> color="black" fillcolor="white" style=filled]
  node15833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? __x2__]</td></tr>
      <tr><td align="left">4:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15831 -> node15832 [ color="black"]
  node15830 -> node15831 [ color="black"]
  node15825 -> node15826 [ color="black"]
  node15829 -> node15830 [ color="black"]
  node15832 -> node15833 [ color="black"]
  node15828 -> node15829 [label=<<font color="black">true</font>> color="black"]
  node15828 -> node15830 [label=<<font color="black">false</font>> color="black"]
  node15833 -> node15824 [ color="black"]
  node15826 -> node15827 [ color="black"]
  node15827 -> node15828 [ color="black"]
  node15823 -> node15825 [ color="black"]
}
