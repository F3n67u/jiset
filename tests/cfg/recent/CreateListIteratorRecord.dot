digraph {
  node1511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{closure} be a new Abstract Closure with no parameters that captures id:{list} and performs the following steps when called : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1510 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1509 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1513 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let iterator = [! __x0__]</td></tr>
      <tr><td align="left">5:return (new Record(&quot;Iterator&quot; -&gt; iterator, &quot;NextMethod&quot; -&gt; INTRINSIC_GeneratorFunction_prototype_prototype_next, &quot;Done&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1512 [shape=cds, label=<<font color="black">4:app __x0__ = (CreateIteratorFromClosure closure CONST_empty INTRINSIC_IteratorPrototype)</font>> color="black" fillcolor="white" style=filled]
  node1509 -> node1511 [ color="black"]
  node1511 -> node1512 [ color="black"]
  node1512 -> node1513 [ color="black"]
  node1513 -> node1510 [ color="black"]
}
