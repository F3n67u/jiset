digraph {
  node17788 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable onFinally)</font>> color="black" fillcolor="white" style=filled]
  node17791 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let stepsThenFinally = ThenFinallyFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17779 [shape=cds, label=<<font color="black">app onFinally = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17783 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17787 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x2__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17780 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let promise = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17793 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let thenFinally = __x4__</td></tr>
      <tr><td align="left">10:thenFinally.Constructor = C</td></tr>
      <tr><td align="left">11:thenFinally.OnFinally = onFinally</td></tr>
      <tr><td align="left">12:let stepsCatchFinally = CatchFinallyFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17784 [shape=cds, label=<<font color="black">2:app __x1__ = (SpeciesConstructor promise INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node17795 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let catchFinally = __x5__</td></tr>
      <tr><td align="left">14:catchFinally.Constructor = C</td></tr>
      <tr><td align="left">15:catchFinally.OnFinally = onFinally</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17794 [shape=cds, label=<<font color="black">13:app __x5__ = (CreateBuiltinFunction stepsCatchFinally (new [&quot;Constructor&quot;, &quot;OnFinally&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17781 [shape=cds, label=<<font color="black">1:app __x0__ = (Type promise)</font>> color="black" fillcolor="white" style=filled]
  node17796 [shape=cds, label=<<font color="black">16:app __x6__ = (Invoke promise &quot;then&quot; (new [thenFinally, catchFinally]))</font>> color="black" fillcolor="white" style=filled]
  node17778 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17789 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node17786 [shape=cds, label=<<font color="black">3:app __x2__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node17777 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17790 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let thenFinally = onFinally</td></tr>
      <tr><td align="left">6:let catchFinally = onFinally</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17797 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17792 [shape=cds, label=<<font color="black">9:app __x4__ = (CreateBuiltinFunction stepsThenFinally (new [&quot;Constructor&quot;, &quot;OnFinally&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17785 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let C = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17782 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17782 -> node17783 [label=<<font color="black">true</font>> color="black"]
  node17782 -> node17784 [label=<<font color="black">false</font>> color="black"]
  node17783 -> node17784 [ color="black"]
  node17797 -> node17778 [ color="black"]
  node17788 -> node17789 [ color="black"]
  node17781 -> node17782 [ color="black"]
  node17785 -> node17786 [ color="black"]
  node17791 -> node17792 [ color="black"]
  node17793 -> node17794 [ color="black"]
  node17790 -> node17796 [ color="black"]
  node17780 -> node17781 [ color="black"]
  node17786 -> node17787 [ color="black"]
  node17789 -> node17790 [label=<<font color="black">true</font>> color="black"]
  node17789 -> node17791 [label=<<font color="black">false</font>> color="black"]
  node17792 -> node17793 [ color="black"]
  node17787 -> node17788 [ color="black"]
  node17779 -> node17780 [ color="black"]
  node17794 -> node17795 [ color="black"]
  node17784 -> node17785 [ color="black"]
  node17795 -> node17796 [ color="black"]
  node17777 -> node17779 [ color="black"]
  node17796 -> node17797 [ color="black"]
}
