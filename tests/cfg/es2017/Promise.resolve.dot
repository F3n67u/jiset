digraph {
  node16645 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16651 [shape=cds, label=<<font color="black">4:app __x3__ = (SameValue xConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node16641 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16648 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node16652 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node16644 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node16649 [shape=cds, label=<<font color="black">3:app __x2__ = (Get x &quot;constructor&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16647 [shape=cds, label=<<font color="black">2:app __x1__ = (IsPromise x)</font>> color="black" fillcolor="white" style=filled]
  node16653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return x</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let xConstructor = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16646 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16642 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16654 [shape=cds, label=<<font color="black">5:app __x4__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promiseCapability = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16640 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16657 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[? __x5__]</td></tr>
      <tr><td align="left">7:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16656 [shape=cds, label=<<font color="black">6:app __x5__ = (Call promiseCapability.Resolve undefined (new [x]))</font>> color="black" fillcolor="white" style=filled]
  node16657 -> node16641 [ color="black"]
  node16645 -> node16646 [label=<<font color="black">true</font>> color="black"]
  node16645 -> node16647 [label=<<font color="black">false</font>> color="black"]
  node16647 -> node16648 [ color="black"]
  node16650 -> node16651 [ color="black"]
  node16654 -> node16655 [ color="black"]
  node16643 -> node16644 [ color="black"]
  node16642 -> node16643 [ color="black"]
  node16644 -> node16645 [ color="black"]
  node16655 -> node16656 [ color="black"]
  node16653 -> node16654 [ color="black"]
  node16646 -> node16647 [ color="black"]
  node16651 -> node16652 [ color="black"]
  node16648 -> node16649 [label=<<font color="black">true</font>> color="black"]
  node16648 -> node16654 [label=<<font color="black">false</font>> color="black"]
  node16640 -> node16642 [ color="black"]
  node16656 -> node16657 [ color="black"]
  node16652 -> node16653 [label=<<font color="black">true</font>> color="black"]
  node16652 -> node16654 [label=<<font color="black">false</font>> color="black"]
  node16649 -> node16650 [ color="black"]
}
