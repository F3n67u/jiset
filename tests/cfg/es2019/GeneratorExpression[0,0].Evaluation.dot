digraph {
  node8650 [shape=cds, label=<<font color="black">4:app __x3__ = (DefinePropertyOrThrow closure &quot;prototype&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; prototype, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node8647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let closure = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8642 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8640 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8645 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let scope = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8651 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:__x3__</td></tr>
      <tr><td align="left">5:closure.SourceText = (get-syntax GeneratorExpression)</td></tr>
      <tr><td align="left">6:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8641 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node8644 [shape=cds, label=<<font color="black">1:access __x0__ = (GLOBAL_context &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let prototype = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8648 [shape=cds, label=<<font color="black">3:app __x2__ = (ObjectCreate INTRINSIC_GeneratorPrototype)</font>> color="black" fillcolor="white" style=filled]
  node8643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8646 [shape=cds, label=<<font color="black">2:app __x1__ = (GeneratorFunctionCreate CONST_Normal FormalParameters GeneratorBody scope strict)</font>> color="black" fillcolor="white" style=filled]
  node8639 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8650 -> node8651 [ color="black"]
  node8642 -> node8644 [ color="black"]
  node8644 -> node8645 [ color="black"]
  node8641 -> node8642 [label=<<font color="black">true</font>> color="black"]
  node8641 -> node8643 [label=<<font color="black">false</font>> color="black"]
  node8648 -> node8649 [ color="black"]
  node8643 -> node8644 [ color="black"]
  node8651 -> node8640 [ color="black"]
  node8649 -> node8650 [ color="black"]
  node8645 -> node8646 [ color="black"]
  node8647 -> node8648 [ color="black"]
  node8646 -> node8647 [ color="black"]
  node8639 -> node8641 [ color="black"]
}
