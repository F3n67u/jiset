digraph {
  node17253 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17254 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let generator = this</td></tr>
      <tr><td align="left">1:let completion = (new Completion(&quot;Type&quot; -&gt; CONST_return, &quot;Value&quot; -&gt; value, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17251 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17255 [shape=cds, label=<<font color="black">2:app __x0__ = (AsyncGeneratorEnqueue generator completion)</font>> color="black" fillcolor="white" style=filled]
  node17252 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17253 -> node17254 [ color="black"]
  node17256 -> node17252 [ color="black"]
  node17254 -> node17255 [ color="black"]
  node17251 -> node17253 [ color="black"]
  node17255 -> node17256 [ color="black"]
}
