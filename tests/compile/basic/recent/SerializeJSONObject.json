["If", {
  "id": "state"
}, ".", "[", "[", "Stack", "]", "]", "contains", {
  "id": "value"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", "because", "the", "structure", "is", "cyclical", ".", {
  "k": 0
}, "Append", {
  "id": "value"
}, "to", {
  "id": "state"
}, ".", "[", "[", "Stack", "]", "]", ".", {
  "k": 1
}, "Let", {
  "id": "stepback"
}, "be", {
  "id": "state"
}, ".", "[", "[", "Indent", "]", "]", ".", {
  "k": 2
}, "Set", {
  "id": "state"
}, ".", "[", "[", "Indent", "]", "]", "to", "the", "string", "-", "concatenation", "of", {
  "id": "state"
}, ".", "[", "[", "Indent", "]", "]", "and", {
  "id": "state"
}, ".", "[", "[", "Gap", "]", "]", ".", {
  "k": 3
}, "If", {
  "id": "state"
}, ".", "[", "[", "PropertyList", "]", "]", "is", "not", {
  "value": "undefined"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "K"
}, "be", {
  "id": "state"
}, ".", "[", "[", "PropertyList", "]", "]", ".", {
  "k": 5
}, {
  "out": null
}, {
  "k": 4
}, "Else", ",", {
  "in": null
}, "Let", {
  "id": "K"
}, "be", "?", "EnumerableOwnPropertyNames", "(", {
  "id": "value"
}, ",", {
  "const": "key"
}, ")", ".", {
  "k": 7
}, {
  "out": null
}, {
  "k": 6
}, "Let", {
  "id": "partial"
}, "be", "a", "new", "empty", "List", ".", {
  "k": 8
}, "For", "each", "element", {
  "id": "P"
}, "of", {
  "id": "K"
}, ",", "do", {
  "in": null
}, "Let", {
  "id": "strP"
}, "be", "?", "SerializeJSONProperty", "(", {
  "id": "state"
}, ",", {
  "id": "P"
}, ",", {
  "id": "value"
}, ")", ".", {
  "k": 10
}, "If", {
  "id": "strP"
}, "is", "not", {
  "value": "undefined"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "member"
}, "be", "QuoteJSONString", "(", {
  "id": "P"
}, ")", ".", {
  "k": 12
}, "Set", {
  "id": "member"
}, "to", "the", "string", "-", "concatenation", "of", {
  "id": "member"
}, "and", {
  "value": "\":\""
}, ".", {
  "k": 13
}, "If", {
  "id": "state"
}, ".", "[", "[", "Gap", "]", "]", "is", "not", "the", "empty", "String", ",", "then", {
  "in": null
}, "Set", {
  "id": "member"
}, "to", "the", "string", "-", "concatenation", "of", {
  "id": "member"
}, "and", "the", "code", "unit", "0x0020", "(", "SPACE", ")", ".", {
  "k": 15
}, {
  "out": null
}, {
  "k": 14
}, "Set", {
  "id": "member"
}, "to", "the", "string", "-", "concatenation", "of", {
  "id": "member"
}, "and", {
  "id": "strP"
}, ".", {
  "k": 16
}, "Append", {
  "id": "member"
}, "to", {
  "id": "partial"
}, ".", {
  "k": 17
}, {
  "out": null
}, {
  "k": 11
}, {
  "out": null
}, {
  "k": 9
}, "If", {
  "id": "partial"
}, "is", "empty", ",", "then", {
  "in": null
}, "Let", {
  "id": "final"
}, "be", {
  "value": "\"{}\""
}, ".", {
  "k": 19
}, {
  "out": null
}, {
  "k": 18
}, "Else", ",", {
  "in": null
}, "If", {
  "id": "state"
}, ".", "[", "[", "Gap", "]", "]", "is", "the", "empty", "String", ",", "then", {
  "in": null
}, "Let", {
  "id": "properties"
}, "be", "the", "String", "value", "formed", "by", "concatenating", "all", "the", "element", "Strings", "of", {
  "id": "partial"
}, "with", "each", "adjacent", "pair", "of", "Strings", "separated", "with", "the", "code", "unit", "0x002C", "(", "COMMA", ")", ".", "A", "comma", "is", "not", "inserted", "either", "before", "the", "first", "String", "or", "after", "the", "last", "String", ".", {
  "k": 22
}, "Let", {
  "id": "final"
}, "be", "the", "string", "-", "concatenation", "of", {
  "value": "\"{\""
}, ",", {
  "id": "properties"
}, ",", "and", {
  "value": "\"}\""
}, ".", {
  "k": 23
}, {
  "out": null
}, {
  "k": 21
}, "Else", ",", {
  "in": null
}, "Let", {
  "id": "separator"
}, "be", "the", "string", "-", "concatenation", "of", "the", "code", "unit", "0x002C", "(", "COMMA", ")", ",", "the", "code", "unit", "0x000A", "(", "LINE", "FEED", ")", ",", "and", {
  "id": "state"
}, ".", "[", "[", "Indent", "]", "]", ".", {
  "k": 25
}, "Let", {
  "id": "properties"
}, "be", "the", "String", "value", "formed", "by", "concatenating", "all", "the", "element", "Strings", "of", {
  "id": "partial"
}, "with", "each", "adjacent", "pair", "of", "Strings", "separated", "with", {
  "id": "separator"
}, ".", "The", {
  "id": "separator"
}, "String", "is", "not", "inserted", "either", "before", "the", "first", "String", "or", "after", "the", "last", "String", ".", {
  "k": 26
}, "Let", {
  "id": "final"
}, "be", "the", "string", "-", "concatenation", "of", {
  "value": "\"{\""
}, ",", "the", "code", "unit", "0x000A", "(", "LINE", "FEED", ")", ",", {
  "id": "state"
}, ".", "[", "[", "Indent", "]", "]", ",", {
  "id": "properties"
}, ",", "the", "code", "unit", "0x000A", "(", "LINE", "FEED", ")", ",", {
  "id": "stepback"
}, ",", "and", {
  "value": "\"}\""
}, ".", {
  "k": 27
}, {
  "out": null
}, {
  "k": 24
}, {
  "out": null
}, {
  "k": 20
}, "Remove", "the", "last", "element", "of", {
  "id": "state"
}, ".", "[", "[", "Stack", "]", "]", ".", {
  "k": 28
}, "Set", {
  "id": "state"
}, ".", "[", "[", "Indent", "]", "]", "to", {
  "id": "stepback"
}, ".", {
  "k": 29
}, "Return", {
  "id": "final"
}, ".", {
  "k": 30
}]