{
  app __x0__ = (ToString string)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let inputString = __x0__
  ??? "Let id:{trimmedString} be a substring of id:{inputString} consisting of the leftmost code unit that is not a nt:{StrWhiteSpaceChar} and all code units to the right of that code unit . ( In other words , remove leading white space . ) If id:{inputString} does not contain any such code units , let id:{trimmedString} be the empty string ."
  ??? "If neither id:{trimmedString} nor any prefix of id:{trimmedString} satisfies the syntax of a nt:{StrDecimalLiteral} ( see link:{} ) , return value:{NaN} ."
  ??? "Let id:{numberString} be the longest prefix of id:{trimmedString} , which might be id:{trimmedString} itself , that satisfies the syntax of a nt:{StrDecimalLiteral} ."
  access __x1__ = (numberString "MV")
  let mathFloat = __x1__
  if (== mathFloat 0i) {
    ??? "If the first code unit of id:{trimmedString} is code:{\"-\"} , return value:{-0} ."
    app __x2__ = (WrapCompletion 0i)
    return __x2__
  } else {}
  app __x3__ = (WrapCompletion mathFloat)
  return __x3__
}