digraph {
  node14844 [shape=diamond, label=<<font color="black">(= S.SetData absent)</font>> color="black" fillcolor="white" style=filled]
  node14847 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node14840 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let S = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14841 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node14848 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x1__[__x2__]</td></tr>
      <tr><td align="left">5:??? &quot;Replace the element of id:{entries} whose value is id:{e} with an element whose value is const:{empty} .&quot;</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14839 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14842 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node14838 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14849 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14845 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14843 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14846 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let entries = S.SetData</td></tr>
      <tr><td align="left">4:let __x1__ = entries</td></tr>
      <tr><td align="left">4:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14845 -> node14846 [ color="black"]
  node14838 -> node14840 [ color="black"]
  node14848 -> node14847 [ color="black"]
  node14844 -> node14845 [label=<<font color="black">true</font>> color="black"]
  node14844 -> node14846 [label=<<font color="black">false</font>> color="black"]
  node14842 -> node14843 [label=<<font color="black">true</font>> color="black"]
  node14842 -> node14844 [label=<<font color="black">false</font>> color="black"]
  node14847 -> node14848 [label=<<font color="black">true</font>> color="black"]
  node14847 -> node14849 [label=<<font color="black">false</font>> color="black"]
  node14840 -> node14841 [ color="black"]
  node14849 -> node14839 [ color="black"]
  node14846 -> node14847 [ color="black"]
  node14843 -> node14844 [ color="black"]
  node14841 -> node14842 [ color="black"]
}
