digraph {
  node7100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return declarations</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7096 [shape=cds, label=<<font color="black">1:access __x0__ = (Statement &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7094 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7098 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node7099 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x3__ = __x1__[__x2__]</td></tr>
      <tr><td align="left">append __x3__ -&gt; declarations</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7093 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7097 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let __x1__ = __x0__</td></tr>
      <tr><td align="left">1:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let declarations = (new [ForBinding])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7098 -> node7099 [label=<<font color="black">true</font>> color="black"]
  node7098 -> node7100 [label=<<font color="black">false</font>> color="black"]
  node7093 -> node7095 [ color="black"]
  node7095 -> node7096 [ color="black"]
  node7100 -> node7094 [ color="black"]
  node7099 -> node7098 [ color="black"]
  node7096 -> node7097 [ color="black"]
  node7097 -> node7098 [ color="black"]
}
