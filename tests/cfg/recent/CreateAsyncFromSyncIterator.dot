digraph {
  node18504 [shape=cds, label=<<font color="black">0:app __x0__ = (OrdinaryObjectCreate INTRINSIC_AsyncFromSyncIteratorPrototype (new [&quot;SyncIteratorRecord&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18507 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let nextMethod = [! __x1__]</td></tr>
      <tr><td align="left">3:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; asyncIterator, &quot;NextMethod&quot; -&gt; nextMethod, &quot;Done&quot; -&gt; false))</td></tr>
      <tr><td align="left">4:return iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18503 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18502 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18505 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let asyncIterator = [! __x0__]</td></tr>
      <tr><td align="left">1:asyncIterator.SyncIteratorRecord = syncIteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18506 [shape=cds, label=<<font color="black">2:app __x1__ = (Get asyncIterator &quot;next&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18505 -> node18506 [ color="black"]
  node18502 -> node18504 [ color="black"]
  node18506 -> node18507 [ color="black"]
  node18504 -> node18505 [ color="black"]
  node18507 -> node18503 [ color="black"]
}
