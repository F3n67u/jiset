digraph {
  node17639 [shape=cds, label=<<font color="black">3:app __x3__ = (Call resolvingFunctions.Reject undefined (new [thenCallResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return thenCallResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17638 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node17631 [shape=cds, label=<<font color="black">app thenable = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17628 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17637 [shape=cds, label=<<font color="black">2:app __x2__ = (IsAbruptCompletion thenCallResult)</font>> color="black" fillcolor="white" style=filled]
  node17632 [shape=cds, label=<<font color="black">app then = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17640 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let status = __x3__</td></tr>
      <tr><td align="left">4:return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17630 [shape=cds, label=<<font color="black">app promiseToResolve = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17635 [shape=cds, label=<<font color="black">1:app __x1__ = (Call then thenable (new [resolvingFunctions.Resolve, resolvingFunctions.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node17633 [shape=cds, label=<<font color="black">0:app __x0__ = (CreateResolvingFunctions promiseToResolve)</font>> color="black" fillcolor="white" style=filled]
  node17629 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17636 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let thenCallResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let resolvingFunctions = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17635 -> node17636 [ color="black"]
  node17631 -> node17632 [ color="black"]
  node17628 -> node17630 [ color="black"]
  node17630 -> node17631 [ color="black"]
  node17640 -> node17641 [ color="black"]
  node17633 -> node17634 [ color="black"]
  node17639 -> node17640 [ color="black"]
  node17638 -> node17639 [label=<<font color="black">true</font>> color="black"]
  node17638 -> node17641 [label=<<font color="black">false</font>> color="black"]
  node17637 -> node17638 [ color="black"]
  node17632 -> node17633 [ color="black"]
  node17636 -> node17637 [ color="black"]
  node17634 -> node17635 [ color="black"]
  node17641 -> node17629 [ color="black"]
}
