{
  if (|| (|| (= year Infinity) (= year -Infinity)) (|| (|| (= month Infinity) (= month -Infinity)) (|| (= date Infinity) (= date -Infinity)))) {
    app __x0__ = (WrapCompletion NaN)
    return __x0__
  } else {}
  app __x1__ = (ToInteger year)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let y = __x1__
  app __x2__ = (ToInteger month)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let m = __x2__
  app __x3__ = (ToInteger date)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let dt = __x3__
  app __x4__ = (floor (/ m 12i))
  let ym = (+ y __x4__)
  let mn = (%% m 12i)
  ??? "Find a value id:{t} such that YearFromTime ( id:{t} ) is id:{ym} and MonthFromTime ( id:{t} ) is id:{mn} and DateFromTime ( id:{t} ) is 1 ; but if this is not possible ( because some argument is out of range ) , return value:{NaN} ."
  app __x5__ = (Day t)
  app __x6__ = (WrapCompletion (- (+ __x5__ dt) 1i))
  return __x6__
}