{
  app __x0__ = (ToObject this)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let O = __x0__
  app __x1__ = (LengthOfArrayLike O)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let sourceLen = __x1__
  let depthNum = 1i
  if (! (= depth undefined)) {
    app __x2__ = (ToIntegerOrInfinity depth)
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
    depthNum = __x2__
    if (< depthNum 0i) depthNum = 0i else {}
  } else {}
  app __x3__ = (ArraySpeciesCreate O 0i)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let A = __x3__
  app __x4__ = (FlattenIntoArray A O sourceLen 0i depthNum)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  __x4__
  app __x5__ = (WrapCompletion A)
  return __x5__
}