{
  [0] if true let strict = true else let strict = false
  [1] let scope = GLOBAL_context.LexicalEnvironment
  [2] app __x0__ = (NewDeclarativeEnvironment scope)
  [2] let funcEnv = __x0__
  [3] let envRec = funcEnv.EnvironmentRecord
  [4] access __x1__ = (BindingIdentifier "StringValue")
  [4] let name = __x1__
  [5] app __x2__ = (envRec.CreateImmutableBinding envRec name false)
  [5] __x2__
  [6] app __x3__ = (GeneratorFunctionCreate CONST_Normal FormalParameters GeneratorBody funcEnv strict)
  [6] let closure = __x3__
  [7] app __x4__ = (ObjectCreate INTRINSIC_GeneratorPrototype)
  [7] let prototype = __x4__
  [8] app __x5__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  [8] __x5__
  [9] app __x6__ = (SetFunctionName closure name)
  [9] __x6__
  [10] app __x7__ = (envRec.InitializeBinding envRec name closure)
  [10] __x7__
  [11] closure.SourceText = (get-syntax GeneratorExpression)
  [12] app __x8__ = (WrapCompletion closure)
  [12] return __x8__
}