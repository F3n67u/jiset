digraph {
  node14506 [shape=cds, label=<<font color="black">7:app __x4__ = (Set O [! __x3__] E true)</font>> color="black" fillcolor="white" style=filled]
  node14501 [shape=diamond, label=<<font color="black">(&lt; (- (** 2.0 53i) 1i) (+ len argCount))</font>> color="black" fillcolor="white" style=filled]
  node14505 [shape=cds, label=<<font color="black">7:app __x3__ = (ToString len)</font>> color="black" fillcolor="white" style=filled]
  node14497 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14493 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14498 [shape=cds, label=<<font color="black">1:app __x1__ = (Get O &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14503 [shape=diamond, label=<<font color="black">(&lt; 0i items.length)</font>> color="black" fillcolor="white" style=filled]
  node14495 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14500 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let len = [? __x2__]</td></tr>
      <tr><td align="left">2:let items = argumentsList</td></tr>
      <tr><td align="left">3:let argCount = items.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14509 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[? __x5__]</td></tr>
      <tr><td align="left">10:return len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14494 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14508 [shape=cds, label=<<font color="black">9:app __x5__ = (Set O &quot;length&quot; len true)</font>> color="black" fillcolor="white" style=filled]
  node14502 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14507 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? __x4__]</td></tr>
      <tr><td align="left">8:let len = (+ len 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14496 [shape=cds, label=<<font color="black">0:app __x0__ = (ToObject this)</font>> color="black" fillcolor="white" style=filled]
  node14499 [shape=cds, label=<<font color="black">1:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node14504 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let E = (pop items 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14500 -> node14501 [ color="black"]
  node14499 -> node14500 [ color="black"]
  node14495 -> node14496 [ color="black"]
  node14493 -> node14495 [ color="black"]
  node14504 -> node14505 [ color="black"]
  node14497 -> node14498 [ color="black"]
  node14506 -> node14507 [ color="black"]
  node14505 -> node14506 [ color="black"]
  node14502 -> node14503 [ color="black"]
  node14503 -> node14504 [label=<<font color="black">true</font>> color="black"]
  node14503 -> node14508 [label=<<font color="black">false</font>> color="black"]
  node14507 -> node14503 [ color="black"]
  node14508 -> node14509 [ color="black"]
  node14501 -> node14502 [label=<<font color="black">true</font>> color="black"]
  node14501 -> node14503 [label=<<font color="black">false</font>> color="black"]
  node14496 -> node14497 [ color="black"]
  node14498 -> node14499 [ color="black"]
  node14509 -> node14494 [ color="black"]
}
