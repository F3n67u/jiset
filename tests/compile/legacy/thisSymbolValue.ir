{
  app __x0__ = (Type value)
  if (= __x0__ Symbol) {
    app __x1__ = (WrapCompletion value)
    return __x1__
  } else {}
  app __x2__ = (Type value)
  if (&& (= __x2__ Object) (! (= value.SymbolData absent))) {
    let s = value.SymbolData
    app __x3__ = (Type s)
    assert (= __x3__ Symbol)
    app __x4__ = (WrapCompletion s)
    return __x4__
  } else {}
  throw INTRINSIC_TypeError
}