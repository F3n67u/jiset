digraph {
  node11090 [shape=diamond, label=<<font color="black">(|| (|| (= num NaN) (= num Infinity)) (= num -Infinity))</font>> color="black" fillcolor="white" style=filled]
  node11087 [shape=cds, label=<<font color="black">app number = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11089 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let num = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11088 [shape=cds, label=<<font color="black">0:app __x0__ = (ToNumber number)</font>> color="black" fillcolor="white" style=filled]
  node11085 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11092 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11091 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11086 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11087 -> node11088 [ color="black"]
  node11088 -> node11089 [ color="black"]
  node11092 -> node11086 [ color="black"]
  node11091 -> node11086 [ color="black"]
  node11089 -> node11090 [ color="black"]
  node11085 -> node11087 [ color="black"]
  node11090 -> node11091 [label=<<font color="black">true</font>> color="black"]
  node11090 -> node11092 [label=<<font color="black">false</font>> color="black"]
}
