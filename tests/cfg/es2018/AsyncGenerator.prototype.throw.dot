digraph {
  node17053 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17058 [shape=cds, label=<<font color="black">2:app __x1__ = (AsyncGeneratorEnqueue generator completion)</font>> color="black" fillcolor="white" style=filled]
  node17054 [shape=cds, label=<<font color="black">app exception = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17055 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let generator = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17057 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let completion = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17056 [shape=cds, label=<<font color="black">1:app __x0__ = (ThrowCompletion exception)</font>> color="black" fillcolor="white" style=filled]
  node17052 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17059 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17056 -> node17057 [ color="black"]
  node17058 -> node17059 [ color="black"]
  node17055 -> node17056 [ color="black"]
  node17057 -> node17058 [ color="black"]
  node17054 -> node17055 [ color="black"]
  node17052 -> node17054 [ color="black"]
  node17059 -> node17053 [ color="black"]
}
