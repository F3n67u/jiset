{
  app __x0__ = (Type tv)
  assert (= __x0__ Number)
  assert (! (= tv NaN))
  app __x1__ = (LocalTZA tv true)
  let offset = __x1__
  if (! (< offset 0i)) {
    let offsetSign = "+"
    let absOffset = offset
  } else {
    let offsetSign = "-"
    let absOffset = (- offset)
  }
  ??? "Let id:{offsetMin} be the String representation of MinFromTime ( id:{absOffset} ) , formatted as a two - digit decimal number , padded to the left with the code unit 0x0030 ( DIGIT ZERO ) if necessary ."
  ??? "Let id:{offsetHour} be the String representation of HourFromTime ( id:{absOffset} ) , formatted as a two - digit decimal number , padded to the left with the code unit 0x0030 ( DIGIT ZERO ) if necessary ."
  ??? "Let id:{tzName} be an implementation - defined string that is either the empty String or the string - concatenation of the code unit 0x0020 ( SPACE ) , the code unit 0x0028 ( LEFT PARENTHESIS ) , an implementation - defined timezone name , and the code unit 0x0029 ( RIGHT PARENTHESIS ) ."
  app __x2__ = (WrapCompletion (+ (+ (+ offsetSign offsetHour) offsetMin) tzName))
  return __x2__
}