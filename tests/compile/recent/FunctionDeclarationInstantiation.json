[{
  "tokens": ["Let", {
    "id": "calleeContext"
  }, "be", "the", "running", "execution", "context", "."]
}, {
  "tokens": ["Let", {
    "id": "code"
  }, "be", {
    "id": "func"
  }, ".", "[", "[", "ECMAScriptCode", "]", "]", "."]
}, {
  "tokens": ["Let", {
    "id": "strict"
  }, "be", {
    "id": "func"
  }, ".", "[", "[", "Strict", "]", "]", "."]
}, {
  "tokens": ["Let", {
    "id": "formals"
  }, "be", {
    "id": "func"
  }, ".", "[", "[", "FormalParameters", "]", "]", "."]
}, {
  "tokens": ["Let", {
    "id": "parameterNames"
  }, "be", "the", "BoundNames", "of", {
    "id": "formals"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "parameterNames"
  }, "has", "any", "duplicate", "entries", ",", "let", {
    "id": "hasDuplicates"
  }, "be", {
    "value": "true"
  }, ".", "Otherwise", ",", "let", {
    "id": "hasDuplicates"
  }, "be", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "simpleParameterList"
  }, "be", "IsSimpleParameterList", "of", {
    "id": "formals"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "hasParameterExpressions"
  }, "be", "ContainsExpression", "of", {
    "id": "formals"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "varNames"
  }, "be", "the", "VarDeclaredNames", "of", {
    "id": "code"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "varDeclarations"
  }, "be", "the", "VarScopedDeclarations", "of", {
    "id": "code"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "lexicalNames"
  }, "be", "the", "LexicallyDeclaredNames", "of", {
    "id": "code"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "functionNames"
  }, "be", "a", "new", "empty", "List", "."]
}, {
  "tokens": ["Let", {
    "id": "functionsToInitialize"
  }, "be", "a", "new", "empty", "List", "."]
}, {
  "tokens": ["For", "each", "element", {
    "id": "d"
  }, "of", {
    "id": "varDeclarations"
  }, ",", "in", "reverse", "List", "order", ",", "do"]
}, {
  "tokens": ["If", {
    "id": "d"
  }, "is", "neither", "a", {
    "nt": "VariableDeclaration"
  }, "nor", "a", {
    "nt": "ForBinding"
  }, "nor", "a", {
    "nt": "BindingIdentifier"
  }, ",", "then"]
}, {
  "tokens": ["Assert", ":", {
    "id": "d"
  }, "is", "either", "a", {
    "nt": "FunctionDeclaration"
  }, ",", "a", {
    "nt": "GeneratorDeclaration"
  }, ",", "an", {
    "nt": "AsyncFunctionDeclaration"
  }, ",", "or", "an", {
    "nt": "AsyncGeneratorDeclaration"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "fn"
  }, "be", "the", "sole", "element", "of", "the", "BoundNames", "of", {
    "id": "d"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "fn"
  }, "is", "not", "an", "element", "of", {
    "id": "functionNames"
  }, ",", "then"]
}, {
  "tokens": ["Insert", {
    "id": "fn"
  }, "as", "the", "first", "element", "of", {
    "id": "functionNames"
  }, "."]
}, {
  "tokens": ["NOTE", ":", "If", "there", "are", "multiple", "function", "declarations", "for", "the", "same", "name", ",", "the", "last", "declaration", "is", "used", "."]
}, {
  "tokens": ["Insert", {
    "id": "d"
  }, "as", "the", "first", "element", "of", {
    "id": "functionsToInitialize"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "argumentsObjectNeeded"
  }, "be", {
    "value": "true"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "func"
  }, ".", "[", "[", "ThisMode", "]", "]", "is", {
    "const": "lexical"
  }, ",", "then"]
}, {
  "tokens": ["NOTE", ":", "Arrow", "functions", "never", "have", "an", "arguments", "objects", "."]
}, {
  "tokens": ["Set", {
    "id": "argumentsObjectNeeded"
  }, "to", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["Else", "if", {
    "value": "\"arguments\""
  }, "is", "an", "element", "of", {
    "id": "parameterNames"
  }, ",", "then"]
}, {
  "tokens": ["Set", {
    "id": "argumentsObjectNeeded"
  }, "to", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["Else", "if", {
    "id": "hasParameterExpressions"
  }, "is", {
    "value": "false"
  }, ",", "then"]
}, {
  "tokens": ["If", {
    "value": "\"arguments\""
  }, "is", "an", "element", "of", {
    "id": "functionNames"
  }, "or", "if", {
    "value": "\"arguments\""
  }, "is", "an", "element", "of", {
    "id": "lexicalNames"
  }, ",", "then"]
}, {
  "tokens": ["Set", {
    "id": "argumentsObjectNeeded"
  }, "to", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "strict"
  }, "is", {
    "value": "true"
  }, "or", "if", {
    "id": "hasParameterExpressions"
  }, "is", {
    "value": "false"
  }, ",", "then"]
}, {
  "tokens": ["NOTE", ":", "Only", "a", "single", "Environment", "Record", "is", "needed", "for", "the", "parameters", "and", "top", "-", "level", "vars", "."]
}, {
  "tokens": ["Let", {
    "id": "env"
  }, "be", "the", "LexicalEnvironment", "of", {
    "id": "calleeContext"
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["NOTE", ":", "A", "separate", "Environment", "Record", "is", "needed", "to", "ensure", "that", "bindings", "created", "by", "direct", "eval", "calls", "in", "the", "formal", "parameter", "list", "are", "outside", "the", "environment", "where", "parameters", "are", "declared", "."]
}, {
  "tokens": ["Let", {
    "id": "calleeEnv"
  }, "be", "the", "LexicalEnvironment", "of", {
    "id": "calleeContext"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "env"
  }, "be", "NewDeclarativeEnvironment", "(", {
    "id": "calleeEnv"
  }, ")", "."]
}, {
  "tokens": ["Assert", ":", "The", "VariableEnvironment", "of", {
    "id": "calleeContext"
  }, "is", {
    "id": "calleeEnv"
  }, "."]
}, {
  "tokens": ["Set", "the", "LexicalEnvironment", "of", {
    "id": "calleeContext"
  }, "to", {
    "id": "env"
  }, "."]
}, {
  "tokens": ["For", "each", "String", {
    "id": "paramName"
  }, "of", {
    "id": "parameterNames"
  }, ",", "do"]
}, {
  "tokens": ["Let", {
    "id": "alreadyDeclared"
  }, "be", {
    "id": "env"
  }, ".", "HasBinding", "(", {
    "id": "paramName"
  }, ")", "."]
}, {
  "tokens": ["NOTE", ":", "Early", "errors", "ensure", "that", "duplicate", "parameter", "names", "can", "only", "occur", "in", "non", "-", "strict", "functions", "that", "do", "not", "have", "parameter", "default", "values", "or", "rest", "parameters", "."]
}, {
  "tokens": ["If", {
    "id": "alreadyDeclared"
  }, "is", {
    "value": "false"
  }, ",", "then"]
}, {
  "tokens": ["Perform", "!", {
    "id": "env"
  }, ".", "CreateMutableBinding", "(", {
    "id": "paramName"
  }, ",", {
    "value": "false"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "hasDuplicates"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Perform", "!", {
    "id": "env"
  }, ".", "InitializeBinding", "(", {
    "id": "paramName"
  }, ",", {
    "value": "undefined"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "argumentsObjectNeeded"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["If", {
    "id": "strict"
  }, "is", {
    "value": "true"
  }, "or", "if", {
    "id": "simpleParameterList"
  }, "is", {
    "value": "false"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "ao"
  }, "be", "CreateUnmappedArgumentsObject", "(", {
    "id": "argumentsList"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["NOTE", ":", "A", "mapped", "argument", "object", "is", "only", "provided", "for", "non", "-", "strict", "functions", "that", "don", "'", "t", "have", "a", "rest", "parameter", ",", "any", "parameter", "default", "value", "initializers", ",", "or", "any", "destructured", "parameters", "."]
}, {
  "tokens": ["Let", {
    "id": "ao"
  }, "be", "CreateMappedArgumentsObject", "(", {
    "id": "func"
  }, ",", {
    "id": "formals"
  }, ",", {
    "id": "argumentsList"
  }, ",", {
    "id": "env"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "strict"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Perform", "!", {
    "id": "env"
  }, ".", "CreateImmutableBinding", "(", {
    "value": "\"arguments\""
  }, ",", {
    "value": "false"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Perform", "!", {
    "id": "env"
  }, ".", "CreateMutableBinding", "(", {
    "value": "\"arguments\""
  }, ",", {
    "value": "false"
  }, ")", "."]
}, {
  "tokens": ["Call", {
    "id": "env"
  }, ".", "InitializeBinding", "(", {
    "value": "\"arguments\""
  }, ",", {
    "id": "ao"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "parameterBindings"
  }, "be", "a", "List", "whose", "elements", "are", "the", "elements", "of", {
    "id": "parameterNames"
  }, ",", "followed", "by", {
    "value": "\"arguments\""
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "parameterBindings"
  }, "be", {
    "id": "parameterNames"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "iteratorRecord"
  }, "be", "CreateListIteratorRecord", "(", {
    "id": "argumentsList"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "hasDuplicates"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Perform", "?", "IteratorBindingInitialization", "for", {
    "id": "formals"
  }, "with", {
    "id": "iteratorRecord"
  }, "and", {
    "value": "undefined"
  }, "as", "arguments", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Perform", "?", "IteratorBindingInitialization", "for", {
    "id": "formals"
  }, "with", {
    "id": "iteratorRecord"
  }, "and", {
    "id": "env"
  }, "as", "arguments", "."]
}, {
  "tokens": ["If", {
    "id": "hasParameterExpressions"
  }, "is", {
    "value": "false"
  }, ",", "then"]
}, {
  "tokens": ["NOTE", ":", "Only", "a", "single", "Environment", "Record", "is", "needed", "for", "the", "parameters", "and", "top", "-", "level", "vars", "."]
}, {
  "tokens": ["Let", {
    "id": "instantiatedVarNames"
  }, "be", "a", "copy", "of", "the", "List", {
    "id": "parameterBindings"
  }, "."]
}, {
  "tokens": ["For", "each", "element", {
    "id": "n"
  }, "of", {
    "id": "varNames"
  }, ",", "do"]
}, {
  "tokens": ["If", {
    "id": "n"
  }, "is", "not", "an", "element", "of", {
    "id": "instantiatedVarNames"
  }, ",", "then"]
}, {
  "tokens": ["Append", {
    "id": "n"
  }, "to", {
    "id": "instantiatedVarNames"
  }, "."]
}, {
  "tokens": ["Perform", "!", {
    "id": "env"
  }, ".", "CreateMutableBinding", "(", {
    "id": "n"
  }, ",", {
    "value": "false"
  }, ")", "."]
}, {
  "tokens": ["Call", {
    "id": "env"
  }, ".", "InitializeBinding", "(", {
    "id": "n"
  }, ",", {
    "value": "undefined"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "varEnv"
  }, "be", {
    "id": "env"
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["NOTE", ":", "A", "separate", "Environment", "Record", "is", "needed", "to", "ensure", "that", "closures", "created", "by", "expressions", "in", "the", "formal", "parameter", "list", "do", "not", "have", "visibility", "of", "declarations", "in", "the", "function", "body", "."]
}, {
  "tokens": ["Let", {
    "id": "varEnv"
  }, "be", "NewDeclarativeEnvironment", "(", {
    "id": "env"
  }, ")", "."]
}, {
  "tokens": ["Set", "the", "VariableEnvironment", "of", {
    "id": "calleeContext"
  }, "to", {
    "id": "varEnv"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "instantiatedVarNames"
  }, "be", "a", "new", "empty", "List", "."]
}, {
  "tokens": ["For", "each", "element", {
    "id": "n"
  }, "of", {
    "id": "varNames"
  }, ",", "do"]
}, {
  "tokens": ["If", {
    "id": "n"
  }, "is", "not", "an", "element", "of", {
    "id": "instantiatedVarNames"
  }, ",", "then"]
}, {
  "tokens": ["Append", {
    "id": "n"
  }, "to", {
    "id": "instantiatedVarNames"
  }, "."]
}, {
  "tokens": ["Perform", "!", {
    "id": "varEnv"
  }, ".", "CreateMutableBinding", "(", {
    "id": "n"
  }, ",", {
    "value": "false"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "n"
  }, "is", "not", "an", "element", "of", {
    "id": "parameterBindings"
  }, "or", "if", {
    "id": "n"
  }, "is", "an", "element", "of", {
    "id": "functionNames"
  }, ",", "let", {
    "id": "initialValue"
  }, "be", {
    "value": "undefined"
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "initialValue"
  }, "be", "!", {
    "id": "env"
  }, ".", "GetBindingValue", "(", {
    "id": "n"
  }, ",", {
    "value": "false"
  }, ")", "."]
}, {
  "tokens": ["Call", {
    "id": "varEnv"
  }, ".", "InitializeBinding", "(", {
    "id": "n"
  }, ",", {
    "id": "initialValue"
  }, ")", "."]
}, {
  "tokens": ["NOTE", ":", "A", "var", "with", "the", "same", "name", "as", "a", "formal", "parameter", "initially", "has", "the", "same", "value", "as", "the", "corresponding", "initialized", "parameter", "."]
}, {
  "tokens": ["NOTE", ":", "Annex", {
    "link": ""
  }, "adds", "additional", "steps", "at", "this", "point", "."]
}, {
  "tokens": ["If", {
    "id": "strict"
  }, "is", {
    "value": "false"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "lexEnv"
  }, "be", "NewDeclarativeEnvironment", "(", {
    "id": "varEnv"
  }, ")", "."]
}, {
  "tokens": ["NOTE", ":", "Non", "-", "strict", "functions", "use", "a", "separate", "Environment", "Record", "for", "top", "-", "level", "lexical", "declarations", "so", "that", "a", "direct", "eval", "can", "determine", "whether", "any", "var", "scoped", "declarations", "introduced", "by", "the", "eval", "code", "conflict", "with", "pre", "-", "existing", "top", "-", "level", "lexically", "scoped", "declarations", ".", "This", "is", "not", "needed", "for", "strict", "functions", "because", "a", "strict", "direct", "eval", "always", "places", "all", "declarations", "into", "a", "new", "Environment", "Record", "."]
}, {
  "tokens": ["Else", ",", "let", {
    "id": "lexEnv"
  }, "be", {
    "id": "varEnv"
  }, "."]
}, {
  "tokens": ["Set", "the", "LexicalEnvironment", "of", {
    "id": "calleeContext"
  }, "to", {
    "id": "lexEnv"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "lexDeclarations"
  }, "be", "the", "LexicallyScopedDeclarations", "of", {
    "id": "code"
  }, "."]
}, {
  "tokens": ["For", "each", "element", {
    "id": "d"
  }, "of", {
    "id": "lexDeclarations"
  }, ",", "do"]
}, {
  "tokens": ["NOTE", ":", "A", "lexically", "declared", "name", "cannot", "be", "the", "same", "as", "a", "function", "/", "generator", "declaration", ",", "formal", "parameter", ",", "or", "a", "var", "name", ".", "Lexically", "declared", "names", "are", "only", "instantiated", "here", "but", "not", "initialized", "."]
}, {
  "tokens": ["For", "each", "element", {
    "id": "dn"
  }, "of", "the", "BoundNames", "of", {
    "id": "d"
  }, ",", "do"]
}, {
  "tokens": ["If", "IsConstantDeclaration", "of", {
    "id": "d"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Perform", "!", {
    "id": "lexEnv"
  }, ".", "CreateImmutableBinding", "(", {
    "id": "dn"
  }, ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Perform", "!", {
    "id": "lexEnv"
  }, ".", "CreateMutableBinding", "(", {
    "id": "dn"
  }, ",", {
    "value": "false"
  }, ")", "."]
}, {
  "tokens": ["For", "each", "Parse", "Node", {
    "id": "f"
  }, "of", {
    "id": "functionsToInitialize"
  }, ",", "do"]
}, {
  "tokens": ["Let", {
    "id": "fn"
  }, "be", "the", "sole", "element", "of", "the", "BoundNames", "of", {
    "id": "f"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "fo"
  }, "be", "InstantiateFunctionObject", "of", {
    "id": "f"
  }, "with", "argument", {
    "id": "lexEnv"
  }, "."]
}, {
  "tokens": ["Perform", "!", {
    "id": "varEnv"
  }, ".", "SetMutableBinding", "(", {
    "id": "fn"
  }, ",", {
    "id": "fo"
  }, ",", {
    "value": "false"
  }, ")", "."]
}, {
  "tokens": ["Return", "NormalCompletion", "(", {
    "const": "empty"
  }, ")", "."]
}]