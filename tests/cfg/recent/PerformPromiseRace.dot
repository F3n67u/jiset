digraph {
  node19274 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19291 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? nextValue]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19294 [shape=cds, label=<<font color="black">13:app __x7__ = (Invoke nextPromise &quot;then&quot; (new [resultCapability.Resolve, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node19282 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19286 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node19280 [shape=cds, label=<<font color="black">4:app __x3__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node19290 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19273 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node19287 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextValue = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19277 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node19283 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19276 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19288 [shape=cds, label=<<font color="black">10:app __x5__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node19293 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let nextPromise = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19284 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node19295 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19292 [shape=cds, label=<<font color="black">12:app __x6__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node19278 [shape=cds, label=<<font color="black">3:app __x2__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node19272 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19289 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node19271 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19285 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">8:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19275 [shape=cds, label=<<font color="black">1:app __x1__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node19279 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let next = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19281 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node19277 -> node19278 [label=<<font color="black">true</font>> color="black"]
  node19277 -> node19272 [label=<<font color="black">false</font>> color="black"]
  node19289 -> node19290 [label=<<font color="black">true</font>> color="black"]
  node19289 -> node19291 [label=<<font color="black">false</font>> color="black"]
  node19291 -> node19292 [ color="black"]
  node19271 -> node19273 [ color="black"]
  node19290 -> node19291 [ color="black"]
  node19280 -> node19281 [ color="black"]
  node19273 -> node19274 [ color="black"]
  node19285 -> node19286 [ color="black"]
  node19282 -> node19283 [ color="black"]
  node19276 -> node19277 [ color="black"]
  node19275 -> node19276 [ color="black"]
  node19281 -> node19282 [label=<<font color="black">true</font>> color="black"]
  node19281 -> node19283 [label=<<font color="black">false</font>> color="black"]
  node19293 -> node19294 [ color="black"]
  node19295 -> node19277 [ color="black"]
  node19283 -> node19284 [ color="black"]
  node19287 -> node19288 [ color="black"]
  node19288 -> node19289 [ color="black"]
  node19294 -> node19295 [ color="black"]
  node19274 -> node19275 [ color="black"]
  node19292 -> node19293 [ color="black"]
  node19284 -> node19285 [label=<<font color="black">true</font>> color="black"]
  node19284 -> node19286 [label=<<font color="black">false</font>> color="black"]
  node19286 -> node19287 [ color="black"]
  node19279 -> node19280 [ color="black"]
  node19278 -> node19279 [ color="black"]
}
