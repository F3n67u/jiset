{
  assert (|| (|| (= op "&") (= op "^")) (= op "|"))
  app __x0__ = (ToInt32 x)
  let lnum = [! __x0__]
  app __x1__ = (ToInt32 y)
  let rnum = [! __x1__]
  ??? "Let id:{lbits} be the 32 - bit two ' s complement bit string representing ℝ ( id:{lnum} ) ."
  ??? "Let id:{rbits} be the 32 - bit two ' s complement bit string representing ℝ ( id:{rnum} ) ."
  if (= op "&") let result = (& lbits rbits) else if (= op "^") let result = (^ lbits rbits) else {}
  ??? "Else , id:{op} is code:{|} . Let id:{result} be the result of applying the bitwise inclusive OR operation to id:{lbits} and id:{rbits} ."
  ??? "Return the Number value for the integer represented by the 32 - bit two ' s complement bit string id:{result} ."
}