digraph {
  node3248 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let extensibleTarget = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3231 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3243 [shape=cds, label=<<font color="black">7:app __x3__ = (Call trap handler (new [target]))</font>> color="black" fillcolor="white" style=filled]
  node3237 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3241 [shape=cds, label=<<font color="black">6:app __x2__ = (target.PreventExtensions target)</font>> color="black" fillcolor="white" style=filled]
  node3246 [shape=diamond, label=<<font color="black">(= booleanTrapResult true)</font>> color="black" fillcolor="white" style=filled]
  node3235 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3232 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3236 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3249 [shape=diamond, label=<<font color="black">(= extensibleTarget true)</font>> color="black" fillcolor="white" style=filled]
  node3239 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3233 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3250 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3242 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3247 [shape=cds, label=<<font color="black">9:app __x5__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node3234 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3240 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3251 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return booleanTrapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3238 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;preventExtensions&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3244 [shape=cds, label=<<font color="black">7:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node3245 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let booleanTrapResult = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3249 -> node3250 [label=<<font color="black">true</font>> color="black"]
  node3249 -> node3251 [label=<<font color="black">false</font>> color="black"]
  node3250 -> node3251 [ color="black"]
  node3245 -> node3246 [ color="black"]
  node3231 -> node3233 [ color="black"]
  node3241 -> node3242 [ color="black"]
  node3238 -> node3239 [ color="black"]
  node3237 -> node3238 [ color="black"]
  node3244 -> node3245 [ color="black"]
  node3240 -> node3241 [label=<<font color="black">true</font>> color="black"]
  node3240 -> node3243 [label=<<font color="black">false</font>> color="black"]
  node3246 -> node3247 [label=<<font color="black">true</font>> color="black"]
  node3246 -> node3251 [label=<<font color="black">false</font>> color="black"]
  node3233 -> node3234 [ color="black"]
  node3247 -> node3248 [ color="black"]
  node3235 -> node3236 [ color="black"]
  node3242 -> node3243 [ color="black"]
  node3234 -> node3235 [label=<<font color="black">true</font>> color="black"]
  node3234 -> node3236 [label=<<font color="black">false</font>> color="black"]
  node3248 -> node3249 [ color="black"]
  node3239 -> node3240 [ color="black"]
  node3236 -> node3237 [ color="black"]
  node3251 -> node3232 [ color="black"]
  node3243 -> node3244 [ color="black"]
}
