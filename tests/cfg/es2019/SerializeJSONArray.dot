digraph {
  node17175 [shape=cds, label=<<font color="black">5:app __x1__ = (ToLength [? __x0__])</font>> color="black" fillcolor="white" style=filled]
  node17181 [shape=diamond, label=<<font color="black">(= strP undefined)</font>> color="black" fillcolor="white" style=filled]
  node17171 [shape=diamond, label=<<font color="black">(contains stack value)</font>> color="black" fillcolor="white" style=filled]
  node17189 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let separator = (+ (+ &quot;,&quot; &quot;\n&quot;) indent)</td></tr>
      <tr><td align="left">22:??? &quot;Let id:{properties} be the String value formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with id:{separator} . The id:{separator} String is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">23:let final = (+ (+ (+ (+ (+ (+ &quot;[&quot; &quot;\n&quot;) indent) properties) &quot;\n&quot;) stepback) &quot;]&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17178 [shape=cds, label=<<font color="black">8:app __x2__ = (ToString index)</font>> color="black" fillcolor="white" style=filled]
  node17174 [shape=cds, label=<<font color="black">5:app __x0__ = (Get value &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17173 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:append value -&gt; stack</td></tr>
      <tr><td align="left">2:let stepback = indent</td></tr>
      <tr><td align="left">3:indent = (+ indent gap)</td></tr>
      <tr><td align="left">4:let partial = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17179 [shape=cds, label=<<font color="black">8:app __x3__ = (SerializeJSONProperty [! __x2__] value)</font>> color="black" fillcolor="white" style=filled]
  node17169 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17183 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append strP -&gt; partial</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17187 [shape=diamond, label=<<font color="black">(= gap &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17170 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17186 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = &quot;[]&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append &quot;null&quot; -&gt; partial</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17190 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">25:indent = stepback</td></tr>
      <tr><td align="left">26:return final</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let len = [? __x1__]</td></tr>
      <tr><td align="left">6:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17188 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:??? &quot;Let id:{properties} be the String value formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with the code unit 0x002C ( COMMA ) . A comma is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">19:let final = (+ (+ &quot;[&quot; properties) &quot;]&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17180 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let strP = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17185 [shape=diamond, label=<<font color="black">(= partial.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node17172 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17177 [shape=diamond, label=<<font color="black">(&lt; index len)</font>> color="black" fillcolor="white" style=filled]
  node17178 -> node17179 [ color="black"]
  node17179 -> node17180 [ color="black"]
  node17183 -> node17184 [ color="black"]
  node17169 -> node17171 [ color="black"]
  node17182 -> node17184 [ color="black"]
  node17176 -> node17177 [ color="black"]
  node17177 -> node17178 [label=<<font color="black">true</font>> color="black"]
  node17177 -> node17185 [label=<<font color="black">false</font>> color="black"]
  node17175 -> node17176 [ color="black"]
  node17181 -> node17182 [label=<<font color="black">true</font>> color="black"]
  node17181 -> node17183 [label=<<font color="black">false</font>> color="black"]
  node17172 -> node17173 [ color="black"]
  node17174 -> node17175 [ color="black"]
  node17188 -> node17190 [ color="black"]
  node17180 -> node17181 [ color="black"]
  node17190 -> node17170 [ color="black"]
  node17173 -> node17174 [ color="black"]
  node17184 -> node17177 [ color="black"]
  node17189 -> node17190 [ color="black"]
  node17186 -> node17190 [ color="black"]
  node17187 -> node17188 [label=<<font color="black">true</font>> color="black"]
  node17187 -> node17189 [label=<<font color="black">false</font>> color="black"]
  node17185 -> node17186 [label=<<font color="black">true</font>> color="black"]
  node17185 -> node17187 [label=<<font color="black">false</font>> color="black"]
  node17171 -> node17172 [label=<<font color="black">true</font>> color="black"]
  node17171 -> node17173 [label=<<font color="black">false</font>> color="black"]
}
