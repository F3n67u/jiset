{
  [0] access __x0__ = (LeftHandSideExpression "Evaluation")
  [0] let lref = __x0__
  [1] app __x1__ = (GetValue lref)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [14] {}
  [1] let lval = __x1__
  [2] app __x2__ = (ToBoolean lval)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [14] {}
  [2] let lbool = __x2__
  [3] if (= lbool true) {
    app __x3__ = (WrapCompletion lval)
    return __x3__
  } else [14] {}
  [6] app __x4__ = (IsAnonymousFunctionDefinition AssignmentExpression)
  [6] let __x5__ = (= __x4__ true)
  [6] if __x5__ {
    access __x6__ = (LeftHandSideExpression "IsIdentifierRef")
    __x5__ = (= __x6__ true)
  } else [14] {}
  [6] if __x5__ {
    [5] access __x7__ = (AssignmentExpression "NamedEvaluation")
    [5] app __x8__ = (__x7__ lref.ReferencedName)
    [5] let rval = __x8__
  } else {
    [7] access __x9__ = (AssignmentExpression "Evaluation")
    [7] let rref = __x9__
    [8] app __x10__ = (GetValue rref)
    [8] if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else [14] {}
    [8] let rval = __x10__
  }
  [9] app __x11__ = (PutValue lref rval)
  [9] if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else [14] {}
  [9] __x11__
  [10] app __x12__ = (WrapCompletion rval)
  [10] return __x12__
}