digraph {
  node16953 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16957 [shape=cds, label=<<font color="black">2:app __x1__ = (FunctionInitialize F kind parameters body Scope)</font>> color="black" fillcolor="white" style=filled]
  node16954 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let functionPrototype = INTRINSIC_AsyncFunctionPrototype</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16958 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16952 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16955 [shape=cds, label=<<font color="black">1:app __x0__ = (FunctionAllocate functionPrototype Strict &quot;async&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16956 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let F = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16952 -> node16954 [ color="black"]
  node16957 -> node16958 [ color="black"]
  node16954 -> node16955 [ color="black"]
  node16955 -> node16956 [ color="black"]
  node16958 -> node16953 [ color="black"]
  node16956 -> node16957 [ color="black"]
}
