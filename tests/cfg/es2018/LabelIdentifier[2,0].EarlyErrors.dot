digraph {
  node17936 [shape=diamond, label=<<font color="black">(= absent (parse-syntax this &quot;Module&quot; (new [])))</font>> color="black" fillcolor="white" style=filled]
  node17939 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17935 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17940 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17934 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17937 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17933 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17938 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node17936 -> node17937 [label=<<font color="black">true</font>> color="black"]
  node17936 -> node17938 [label=<<font color="black">false</font>> color="black"]
  node17938 -> node17939 [label=<<font color="black">true</font>> color="black"]
  node17938 -> node17940 [label=<<font color="black">false</font>> color="black"]
  node17939 -> node17934 [ color="black"]
  node17940 -> node17934 [ color="black"]
  node17937 -> node17938 [ color="black"]
  node17933 -> node17935 [ color="black"]
  node17935 -> node17936 [ color="black"]
}
