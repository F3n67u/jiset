digraph {
  node2921 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let targetDesc = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2908 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2918 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node2916 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node2929 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x9__ true) (= targetDesc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node2925 [shape=cds, label=<<font color="black">13:app __x8__ = (SameValue V targetDesc.Value)</font>> color="black" fillcolor="white" style=filled]
  node2932 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2904 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node2906 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2931 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2930 [shape=diamond, label=<<font color="black">(= targetDesc.Set undefined)</font>> color="black" fillcolor="white" style=filled]
  node2913 [shape=cds, label=<<font color="black">7:app __x3__ = (target.Set target P V Receiver)</font>> color="black" fillcolor="white" style=filled]
  node2922 [shape=diamond, label=<<font color="black">(! (= targetDesc undefined))</font>> color="black" fillcolor="white" style=filled]
  node2910 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2905 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2926 [shape=diamond, label=<<font color="black">(= __x8__ false)</font>> color="black" fillcolor="white" style=filled]
  node2915 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P, V, Receiver]))</font>> color="black" fillcolor="white" style=filled]
  node2909 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2923 [shape=cds, label=<<font color="black">12:app __x7__ = (IsDataDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node2928 [shape=cds, label=<<font color="black">14:app __x9__ = (IsAccessorDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node2911 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2914 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2927 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2920 [shape=cds, label=<<font color="black">10:app __x6__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node2903 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2924 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x7__ true) (&amp;&amp; (= targetDesc.Configurable false) (= targetDesc.Writable false)))</font>> color="black" fillcolor="white" style=filled]
  node2919 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2907 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2912 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2902 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2917 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2925 -> node2926 [ color="black"]
  node2916 -> node2917 [ color="black"]
  node2908 -> node2909 [ color="black"]
  node2917 -> node2918 [ color="black"]
  node2915 -> node2916 [ color="black"]
  node2910 -> node2911 [ color="black"]
  node2931 -> node2932 [ color="black"]
  node2930 -> node2931 [label=<<font color="black">true</font>> color="black"]
  node2930 -> node2932 [label=<<font color="black">false</font>> color="black"]
  node2926 -> node2927 [label=<<font color="black">true</font>> color="black"]
  node2926 -> node2928 [label=<<font color="black">false</font>> color="black"]
  node2902 -> node2904 [ color="black"]
  node2904 -> node2905 [ color="black"]
  node2928 -> node2929 [ color="black"]
  node2913 -> node2914 [ color="black"]
  node2909 -> node2910 [ color="black"]
  node2932 -> node2903 [ color="black"]
  node2911 -> node2912 [ color="black"]
  node2923 -> node2924 [ color="black"]
  node2906 -> node2907 [label=<<font color="black">true</font>> color="black"]
  node2906 -> node2908 [label=<<font color="black">false</font>> color="black"]
  node2912 -> node2913 [label=<<font color="black">true</font>> color="black"]
  node2912 -> node2915 [label=<<font color="black">false</font>> color="black"]
  node2922 -> node2923 [label=<<font color="black">true</font>> color="black"]
  node2922 -> node2932 [label=<<font color="black">false</font>> color="black"]
  node2921 -> node2922 [ color="black"]
  node2919 -> node2920 [ color="black"]
  node2927 -> node2928 [ color="black"]
  node2905 -> node2906 [ color="black"]
  node2920 -> node2921 [ color="black"]
  node2907 -> node2908 [ color="black"]
  node2918 -> node2919 [label=<<font color="black">true</font>> color="black"]
  node2918 -> node2920 [label=<<font color="black">false</font>> color="black"]
  node2924 -> node2925 [label=<<font color="black">true</font>> color="black"]
  node2924 -> node2928 [label=<<font color="black">false</font>> color="black"]
  node2929 -> node2930 [label=<<font color="black">true</font>> color="black"]
  node2929 -> node2932 [label=<<font color="black">false</font>> color="black"]
  node2914 -> node2915 [ color="black"]
}
