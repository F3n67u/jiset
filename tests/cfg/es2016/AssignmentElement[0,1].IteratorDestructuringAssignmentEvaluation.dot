digraph {
  node5028 [shape=cds, label=<<font color="black">14:access __x5__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? value]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5045 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node5031 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let v = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5026 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let value = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5042 [shape=cds, label=<<font color="black">access __x11__ = (DestructuringAssignmentTarget &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5025 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done true)</font>> color="black" fillcolor="white" style=filled]
  node5046 [shape=cds, label=<<font color="black">21:app __x12__ = (HasOwnProperty v &quot;name&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5029 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let defaultValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5037 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let __x8__ = true</td></tr>
      <tr><td align="left">20:__x8__ = (! (= Initializer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5005 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5052 [shape=cds, label=<<font color="black">23:app __x15__ = (PutValue lref v)</font>> color="black" fillcolor="white" style=filled]
  node5020 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let value = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5032 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5027 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= value undefined))</font>> color="black" fillcolor="white" style=filled]
  node5013 [shape=cds, label=<<font color="black">5:app __x2__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node5012 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let next = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5017 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node5034 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:??? &quot;Let id:{nestedAssignmentPattern} be the parse of the source text corresponding to nt:{DestructuringAssignmentTarget} using either nt:{AssignmentPattern} or nt:{AssignmentPattern[Yield]} as the goal symbol depending upon whether this nt:{AssignmentElement} has the sub:{[ Yield ]} parameter .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5049 [shape=cds, label=<<font color="black">app __x13__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5044 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x8__ = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5021 [shape=cds, label=<<font color="black">10:app __x4__ = (IsAbruptCompletion value)</font>> color="black" fillcolor="white" style=filled]
  node5038 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node5053 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:return [? __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5006 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5048 [shape=diamond, label=<<font color="black">(= hasNameProperty false)</font>> color="black" fillcolor="white" style=filled]
  node5016 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5043 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x9__ = (&amp;&amp; (= __x10__ true) (= __x11__ true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5050 [shape=cds, label=<<font color="black">app __x14__ = (SetFunctionName v __x13__)</font>> color="black" fillcolor="white" style=filled]
  node5022 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node5039 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x9__ = true</td></tr>
      <tr><td align="left">__x9__ = (= value undefined)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5033 [shape=diamond, label=<<font color="black">(|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))</font>> color="black" fillcolor="white" style=filled]
  node5011 [shape=cds, label=<<font color="black">4:app __x1__ = (IteratorStep iteratorRecord.Iterator)</font>> color="black" fillcolor="white" style=filled]
  node5035 [shape=cds, label=<<font color="black">19:access __x7__ = (nestedAssignmentPattern &quot;DestructuringAssignmentEvaluation&quot; v)</font>> color="black" fillcolor="white" style=filled]
  node5007 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5047 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let hasNameProperty = [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5018 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5015 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5030 [shape=cds, label=<<font color="black">15:app __x6__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node5008 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5010 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node5040 [shape=diamond, label=<<font color="black">__x9__</font>> color="black" fillcolor="white" style=filled]
  node5023 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5009 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5014 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node5041 [shape=cds, label=<<font color="black">app __x10__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node5019 [shape=cds, label=<<font color="black">9:app __x3__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node5036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5015 -> node5016 [ color="black"]
  node5051 -> node5052 [ color="black"]
  node5025 -> node5026 [label=<<font color="black">true</font>> color="black"]
  node5025 -> node5027 [label=<<font color="black">false</font>> color="black"]
  node5005 -> node5007 [ color="black"]
  node5007 -> node5008 [label=<<font color="black">true</font>> color="black"]
  node5007 -> node5010 [label=<<font color="black">false</font>> color="black"]
  node5018 -> node5025 [ color="black"]
  node5029 -> node5030 [ color="black"]
  node5050 -> node5051 [ color="black"]
  node5012 -> node5013 [ color="black"]
  node5030 -> node5031 [ color="black"]
  node5017 -> node5018 [label=<<font color="black">true</font>> color="black"]
  node5017 -> node5019 [label=<<font color="black">false</font>> color="black"]
  node5041 -> node5042 [ color="black"]
  node5048 -> node5049 [label=<<font color="black">true</font>> color="black"]
  node5048 -> node5052 [label=<<font color="black">false</font>> color="black"]
  node5042 -> node5043 [ color="black"]
  node5044 -> node5045 [ color="black"]
  node5038 -> node5039 [label=<<font color="black">true</font>> color="black"]
  node5038 -> node5045 [label=<<font color="black">false</font>> color="black"]
  node5021 -> node5022 [ color="black"]
  node5046 -> node5047 [ color="black"]
  node5023 -> node5024 [ color="black"]
  node5016 -> node5017 [ color="black"]
  node5036 -> node5037 [ color="black"]
  node5011 -> node5012 [ color="black"]
  node5032 -> node5033 [ color="black"]
  node5008 -> node5009 [ color="black"]
  node5019 -> node5020 [ color="black"]
  node5035 -> node5036 [ color="black"]
  node5031 -> node5033 [ color="black"]
  node5052 -> node5053 [ color="black"]
  node5040 -> node5041 [label=<<font color="black">true</font>> color="black"]
  node5040 -> node5044 [label=<<font color="black">false</font>> color="black"]
  node5014 -> node5015 [label=<<font color="black">true</font>> color="black"]
  node5014 -> node5016 [label=<<font color="black">false</font>> color="black"]
  node5013 -> node5014 [ color="black"]
  node5045 -> node5046 [label=<<font color="black">true</font>> color="black"]
  node5045 -> node5052 [label=<<font color="black">false</font>> color="black"]
  node5009 -> node5010 [ color="black"]
  node5028 -> node5029 [ color="black"]
  node5049 -> node5050 [ color="black"]
  node5037 -> node5038 [ color="black"]
  node5033 -> node5034 [label=<<font color="black">true</font>> color="black"]
  node5033 -> node5037 [label=<<font color="black">false</font>> color="black"]
  node5010 -> node5011 [label=<<font color="black">true</font>> color="black"]
  node5010 -> node5025 [label=<<font color="black">false</font>> color="black"]
  node5024 -> node5025 [ color="black"]
  node5034 -> node5035 [ color="black"]
  node5043 -> node5044 [ color="black"]
  node5026 -> node5027 [ color="black"]
  node5047 -> node5048 [ color="black"]
  node5027 -> node5028 [label=<<font color="black">true</font>> color="black"]
  node5027 -> node5032 [label=<<font color="black">false</font>> color="black"]
  node5039 -> node5040 [ color="black"]
  node5020 -> node5021 [ color="black"]
  node5053 -> node5006 [ color="black"]
  node5022 -> node5023 [label=<<font color="black">true</font>> color="black"]
  node5022 -> node5024 [label=<<font color="black">false</font>> color="black"]
}
