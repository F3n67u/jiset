digraph {
  node16651 [shape=cds, label=<<font color="black">5:app __x1__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node16655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16648 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node16652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promise = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16647 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node16653 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node16650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = (new PromiseCapability(&quot;Promise&quot; -&gt; undefined, &quot;Resolve&quot; -&gt; undefined, &quot;Reject&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:let executor = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">4:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16646 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16645 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16657 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node16656 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node16659 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">9:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16654 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16655 -> node16656 [ color="black"]
  node16653 -> node16654 [ color="black"]
  node16647 -> node16648 [ color="black"]
  node16651 -> node16652 [ color="black"]
  node16648 -> node16649 [label=<<font color="black">true</font>> color="black"]
  node16648 -> node16650 [label=<<font color="black">false</font>> color="black"]
  node16659 -> node16646 [ color="black"]
  node16649 -> node16650 [ color="black"]
  node16654 -> node16655 [label=<<font color="black">true</font>> color="black"]
  node16654 -> node16656 [label=<<font color="black">false</font>> color="black"]
  node16650 -> node16651 [ color="black"]
  node16645 -> node16647 [ color="black"]
  node16658 -> node16659 [ color="black"]
  node16656 -> node16657 [ color="black"]
  node16652 -> node16653 [ color="black"]
  node16657 -> node16658 [label=<<font color="black">true</font>> color="black"]
  node16657 -> node16659 [label=<<font color="black">false</font>> color="black"]
}
