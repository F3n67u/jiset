{
  let R = this
  app __x0__ = (Type R)
  if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  app __x2__ = (ToString S)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let string = __x2__
  app __x3__ = (RegExpExec R string)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let match = __x3__
  if (! (= match null)) {
    app __x4__ = (WrapCompletion true)
    return __x4__
  } else {
    app __x5__ = (WrapCompletion false)
    return __x5__
  }
}