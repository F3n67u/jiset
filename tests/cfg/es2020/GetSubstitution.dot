digraph {
  node14253 [shape=cds, label=<<font color="black">2:app __x1__ = (Type str)</font>> color="black" fillcolor="white" style=filled]
  node14249 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14254 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x1__ String)</td></tr>
      <tr><td align="left">3:let stringLength = str.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= __x3__ String)</td></tr>
      <tr><td align="left">8:let tailPos = (+ position matchLength)</td></tr>
      <tr><td align="left">9:let m = captures.length</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{result} be the String value derived from id:{replacement} by copying code unit elements from id:{replacement} to id:{result} while performing replacements as specified in link:{unhandled: table-45} . These code:{$} replacements are done left - to - right , and , once such a replacement is performed , the new replacement text is not subject to further replacements .&quot;</td></tr>
      <tr><td align="left">11:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14255 [shape=cds, label=<<font color="black">4:app __x2__ = (IsNonNegativeInteger position)</font>> color="black" fillcolor="white" style=filled]
  node14250 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14252 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ String)</td></tr>
      <tr><td align="left">1:let matchLength = matched.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14257 [shape=cds, label=<<font color="black">7:app __x3__ = (Type replacement)</font>> color="black" fillcolor="white" style=filled]
  node14256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (= [! __x2__] true)</td></tr>
      <tr><td align="left">5:assert (! (&lt; stringLength position))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14251 [shape=cds, label=<<font color="black">0:app __x0__ = (Type matched)</font>> color="black" fillcolor="white" style=filled]
  node14255 -> node14256 [ color="black"]
  node14256 -> node14257 [ color="black"]
  node14258 -> node14250 [ color="black"]
  node14257 -> node14258 [ color="black"]
  node14249 -> node14251 [ color="black"]
  node14254 -> node14255 [ color="black"]
  node14252 -> node14253 [ color="black"]
  node14253 -> node14254 [ color="black"]
  node14251 -> node14252 [ color="black"]
}
