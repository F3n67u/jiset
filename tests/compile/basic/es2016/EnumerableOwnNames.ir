{
  assert (= (typeof O) Object)
  app __x0__ = (O.OwnPropertyKeys O)
  let ownKeys = [? __x0__]
  let names = (new [])
  let __x1__ = ownKeys
  let __x2__ = 0i
  while (< __x2__ __x1__.length) {
    let key = __x1__[__x2__]
    if (= (typeof key) String) {
      app __x3__ = (O.GetOwnProperty O key)
      let desc = [? __x3__]
      if (! (= desc undefined)) if (= desc.Enumerable true) append key -> names else {} else {}
    } else {}
    __x2__ = (+ __x2__ 1i)
  }
  return names
}