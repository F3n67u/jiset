digraph {
  node13690 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13692 [shape=cds, label=<<font color="black">0:access __x0__ = (Alternative &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13700 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= direction -1i)</td></tr>
      <tr><td align="left">8:??? &quot;Return an internal Matcher closure that takes two arguments , a State id:{x} and a Continuation id:{c} , and performs the following steps when evaluated : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13696 [shape=cds, label=<<font color="black">1:app __x3__ = (__x2__ direction)</font>> color="black" fillcolor="white" style=filled]
  node13698 [shape=diamond, label=<<font color="black">(= direction 1i)</font>> color="black" fillcolor="white" style=filled]
  node13694 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let m1 = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13691 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13695 [shape=cds, label=<<font color="black">1:access __x2__ = (Term &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13697 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let m2 = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13693 [shape=cds, label=<<font color="black">0:app __x1__ = (__x0__ direction)</font>> color="black" fillcolor="white" style=filled]
  node13699 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return an internal Matcher closure that takes two arguments , a State id:{x} and a Continuation id:{c} , and performs the following steps when evaluated : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13692 -> node13693 [ color="black"]
  node13695 -> node13696 [ color="black"]
  node13698 -> node13699 [label=<<font color="black">true</font>> color="black"]
  node13698 -> node13700 [label=<<font color="black">false</font>> color="black"]
  node13694 -> node13695 [ color="black"]
  node13690 -> node13692 [ color="black"]
  node13693 -> node13694 [ color="black"]
  node13697 -> node13698 [ color="black"]
  node13699 -> node13691 [ color="black"]
  node13700 -> node13691 [ color="black"]
  node13696 -> node13697 [ color="black"]
}
