digraph {
  node3915 [shape=cds, label=<<font color="black">6:access __x2__ = (arguments &quot;ArgumentListEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3919 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3906 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3920 [shape=cds, label=<<font color="black">9:app __x4__ = (Construct constructor argList)</font>> color="black" fillcolor="white" style=filled]
  node3921 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3913 [shape=diamond, label=<<font color="black">(= arguments CONST_empty)</font>> color="black" fillcolor="white" style=filled]
  node3914 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let argList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3911 [shape=cds, label=<<font color="black">3:app __x1__ = (GetValue ref)</font>> color="black" fillcolor="white" style=filled]
  node3907 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3918 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node3912 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let constructor = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3910 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let ref = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3909 [shape=cds, label=<<font color="black">2:access __x0__ = (constructProduction &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3916 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let argList = __x2__</td></tr>
      <tr><td align="left">7:[? argList]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3917 [shape=cds, label=<<font color="black">8:app __x3__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node3908 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (is-instance-of constructProduction NewExpression) (is-instance-of constructProduction MemberExpression))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3906 -> node3908 [ color="black"]
  node3908 -> node3909 [ color="black"]
  node3910 -> node3911 [ color="black"]
  node3915 -> node3916 [ color="black"]
  node3921 -> node3907 [ color="black"]
  node3918 -> node3919 [label=<<font color="black">true</font>> color="black"]
  node3918 -> node3920 [label=<<font color="black">false</font>> color="black"]
  node3920 -> node3921 [ color="black"]
  node3914 -> node3917 [ color="black"]
  node3909 -> node3910 [ color="black"]
  node3911 -> node3912 [ color="black"]
  node3913 -> node3914 [label=<<font color="black">true</font>> color="black"]
  node3913 -> node3915 [label=<<font color="black">false</font>> color="black"]
  node3917 -> node3918 [ color="black"]
  node3919 -> node3920 [ color="black"]
  node3912 -> node3913 [ color="black"]
  node3916 -> node3917 [ color="black"]
}
