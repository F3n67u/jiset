{
  [4] if (= type "Float32") ??? "Let id:{rawBytes} be a List containing the 4 bytes that are the result of converting id:{value} to IEEE 754 - 2008 binary32 format using “ Round to nearest , ties to even ” rounding mode . If id:{isLittleEndian} is value:{false} , the bytes are arranged in big endian order . Otherwise , the bytes are arranged in little endian order . If id:{value} is value:{NaN} , id:{rawBytes} may be set to any implementation chosen IEEE 754 - 2008 binary32 format Not - a - Number encoding . An implementation must always choose the same encoding for each implementation distinguishable value:{NaN} value ." else if (= type "Float64") ??? "Let id:{rawBytes} be a List containing the 8 bytes that are the IEEE 754 - 2008 binary64 format encoding of id:{value} . If id:{isLittleEndian} is value:{false} , the bytes are arranged in big endian order . Otherwise , the bytes are arranged in little endian order . If id:{value} is value:{NaN} , id:{rawBytes} may be set to any implementation chosen IEEE 754 - 2008 binary64 format Not - a - Number encoding . An implementation must always choose the same encoding for each implementation distinguishable value:{NaN} value ." else {
    [5] ??? "Let id:{n} be the Number value of the Element Size specified in link:{} for Element Type id:{type} ."
    [6] ??? "Let id:{convOp} be the abstract operation named in the Conversion Operation column in link:{} for Element Type id:{type} ."
    [7] app __x0__ = (convOp value)
    [7] let intValue = __x0__
    [10] if (! (< intValue 0i)) ??? "Let id:{rawBytes} be a List containing the id:{n} - byte binary encoding of id:{intValue} . If id:{isLittleEndian} is value:{false} , the bytes are ordered in big endian order . Otherwise , the bytes are ordered in little endian order ." else ??? "Let id:{rawBytes} be a List containing the id:{n} - byte binary 2 ' s complement encoding of id:{intValue} . If id:{isLittleEndian} is value:{false} , the bytes are ordered in big endian order . Otherwise , the bytes are ordered in little endian order ."
  }
  [12] app __x1__ = (WrapCompletion rawBytes)
  [12] return __x1__
}