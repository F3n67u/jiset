digraph {
  node15055 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15066 [shape=cds, label=<<font color="black">7:app __x4__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15051 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15072 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15073 [shape=cds, label=<<font color="black">13:app __x5__ = (GetValueFromBuffer buffer bufferIndex type isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15060 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger numberIndex)</font>> color="black" fillcolor="white" style=filled]
  node15061 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15054 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15070 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node15068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15056 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node15067 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node15052 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15064 [shape=cds, label=<<font color="black">5:app __x3__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15059 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let numberIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let isLittleEndian = __x3__</td></tr>
      <tr><td align="left">6:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">9:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15062 [shape=diamond, label=<<font color="black">(|| (! (== numberIndex getIndex)) (&lt; getIndex 0i))</font>> color="black" fillcolor="white" style=filled]
  node15057 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15053 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node15058 [shape=cds, label=<<font color="black">2:app __x1__ = (ToNumber requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node15060 -> node15061 [ color="black"]
  node15065 -> node15066 [ color="black"]
  node15064 -> node15065 [ color="black"]
  node15061 -> node15062 [ color="black"]
  node15066 -> node15067 [ color="black"]
  node15067 -> node15068 [label=<<font color="black">true</font>> color="black"]
  node15067 -> node15069 [label=<<font color="black">false</font>> color="black"]
  node15055 -> node15056 [ color="black"]
  node15068 -> node15069 [ color="black"]
  node15062 -> node15063 [label=<<font color="black">true</font>> color="black"]
  node15062 -> node15064 [label=<<font color="black">false</font>> color="black"]
  node15051 -> node15053 [ color="black"]
  node15071 -> node15072 [ color="black"]
  node15069 -> node15070 [ color="black"]
  node15057 -> node15058 [ color="black"]
  node15058 -> node15059 [ color="black"]
  node15053 -> node15054 [ color="black"]
  node15074 -> node15052 [ color="black"]
  node15056 -> node15057 [label=<<font color="black">true</font>> color="black"]
  node15056 -> node15058 [label=<<font color="black">false</font>> color="black"]
  node15059 -> node15060 [ color="black"]
  node15054 -> node15055 [label=<<font color="black">true</font>> color="black"]
  node15054 -> node15056 [label=<<font color="black">false</font>> color="black"]
  node15063 -> node15064 [ color="black"]
  node15073 -> node15074 [ color="black"]
  node15072 -> node15073 [ color="black"]
  node15070 -> node15071 [label=<<font color="black">true</font>> color="black"]
  node15070 -> node15072 [label=<<font color="black">false</font>> color="black"]
}
