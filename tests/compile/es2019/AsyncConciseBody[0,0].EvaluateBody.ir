{
  [0] app __x0__ = (NewPromiseCapability INTRINSIC_Promise)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [33] {}
  [0] let promiseCapability = __x0__
  [1] app __x1__ = (FunctionDeclarationInstantiation functionObject argumentsList)
  [1] let declResult = __x1__
  [4] app __x2__ = (IsAbruptCompletion declResult)
  [4] if (! __x2__) {
    [3] app __x3__ = (AsyncFunctionStart promiseCapability AssignmentExpression)
    [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [33] {}
    [3] __x3__
  } else {
    [5] app __x4__ = (Call promiseCapability.Reject undefined (new [declResult.Value]))
    [5] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [33] {}
    [5] __x4__
  }
  [6] app __x5__ = (WrapCompletion (new Completion("Type" -> CONST_return, "Value" -> promiseCapability.Promise, "Target" -> CONST_empty)))
  [6] return __x5__
}