{
  if (= (typeof x) (typeof y)) {
    app __x0__ = (StrictEqualityComparison x y)
    return __x0__
  } else {}
  if (&& (= x null) (= y undefined)) return true else {}
  if (&& (= x undefined) (= y null)) return true else {}
  if (&& (= (typeof x) Number) (= (typeof y) String)) {
    app __x1__ = (ToNumber y)
    app __x2__ = (AbstractEqualityComparison x [! __x1__])
    return __x2__
  } else {}
  if (&& (= (typeof x) String) (= (typeof y) Number)) {
    app __x3__ = (ToNumber x)
    app __x4__ = (AbstractEqualityComparison [! __x3__] y)
    return __x4__
  } else {}
  if (&& (= (typeof x) BigInt) (= (typeof y) String)) {
    app __x5__ = (StringToBigInt y)
    let n = [! __x5__]
    if (= n NaN) return false else {}
    app __x6__ = (AbstractEqualityComparison x n)
    return __x6__
  } else {}
  if (&& (= (typeof x) String) (= (typeof y) BigInt)) {
    app __x7__ = (AbstractEqualityComparison y x)
    return __x7__
  } else {}
  if (= (typeof x) Boolean) {
    app __x8__ = (ToNumber x)
    app __x9__ = (AbstractEqualityComparison [! __x8__] y)
    return __x9__
  } else {}
  if (= (typeof y) Boolean) {
    app __x10__ = (ToNumber y)
    app __x11__ = (AbstractEqualityComparison x [! __x10__])
    return __x11__
  } else {}
  if (&& (|| (|| (|| (= (typeof x) String) (= (typeof x) Number)) (= (typeof x) BigInt)) (= (typeof x) Symbol)) (= (typeof y) Object)) {
    app __x12__ = (ToPrimitive y)
    app __x13__ = (AbstractEqualityComparison x __x12__)
    return __x13__
  } else {}
  if (&& (= (typeof x) Object) (|| (|| (|| (= (typeof y) String) (= (typeof y) Number)) (= (typeof y) BigInt)) (= (typeof y) Symbol))) {
    app __x14__ = (ToPrimitive x)
    app __x15__ = (AbstractEqualityComparison __x14__ y)
    return __x15__
  } else {}
  if (&& (= (typeof x) BigInt) (|| (= (typeof y) Number) (&& (= (typeof x) Number) (= (typeof y) BigInt)))) {
    if (|| (|| (|| (= x NaN) (= x Infinity)) (= x -Infinity)) (|| (|| (= y NaN) (= y Infinity)) (= y -Infinity))) return false else {}
    ??? "If the mathematical value of id:{x} is equal to the mathematical value of id:{y} , return value:{true} ; otherwise return value:{false} ."
  } else {}
  return false
}