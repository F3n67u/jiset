digraph {
  node15092 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15110 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node15105 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15114 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15089 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15113 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15094 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakSetPrototype (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15102 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node15095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15116 [shape=cds, label=<<font color="black">14:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node15099 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15120 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node15091 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15096 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node15098 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node15115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15119 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node15104 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15118 [shape=cds, label=<<font color="black">15:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node15097 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15103 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15093 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15101 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15111 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15100 [shape=cds, label=<<font color="black">6:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15107 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node15112 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15090 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15109 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15094 -> node15095 [ color="black"]
  node15119 -> node15120 [label=<<font color="black">true</font>> color="black"]
  node15119 -> node15109 [label=<<font color="black">false</font>> color="black"]
  node15097 -> node15098 [ color="black"]
  node15091 -> node15092 [ color="black"]
  node15092 -> node15093 [label=<<font color="black">true</font>> color="black"]
  node15092 -> node15094 [label=<<font color="black">false</font>> color="black"]
  node15089 -> node15091 [ color="black"]
  node15120 -> node15121 [ color="black"]
  node15096 -> node15097 [label=<<font color="black">true</font>> color="black"]
  node15096 -> node15098 [label=<<font color="black">false</font>> color="black"]
  node15103 -> node15104 [label=<<font color="black">true</font>> color="black"]
  node15103 -> node15105 [label=<<font color="black">false</font>> color="black"]
  node15102 -> node15103 [ color="black"]
  node15100 -> node15101 [ color="black"]
  node15095 -> node15096 [ color="black"]
  node15098 -> node15099 [label=<<font color="black">true</font>> color="black"]
  node15098 -> node15100 [label=<<font color="black">false</font>> color="black"]
  node15105 -> node15106 [ color="black"]
  node15109 -> node15110 [label=<<font color="black">true</font>> color="black"]
  node15109 -> node15090 [label=<<font color="black">false</font>> color="black"]
  node15106 -> node15107 [ color="black"]
  node15117 -> node15118 [ color="black"]
  node15110 -> node15111 [ color="black"]
  node15099 -> node15107 [ color="black"]
  node15093 -> node15094 [ color="black"]
  node15114 -> node15115 [ color="black"]
  node15116 -> node15117 [ color="black"]
  node15121 -> node15109 [ color="black"]
  node15108 -> node15109 [ color="black"]
  node15104 -> node15105 [ color="black"]
  node15107 -> node15108 [label=<<font color="black">true</font>> color="black"]
  node15107 -> node15109 [label=<<font color="black">false</font>> color="black"]
  node15113 -> node15114 [ color="black"]
  node15101 -> node15102 [ color="black"]
  node15118 -> node15119 [ color="black"]
  node15111 -> node15112 [ color="black"]
  node15112 -> node15113 [label=<<font color="black">true</font>> color="black"]
  node15112 -> node15114 [label=<<font color="black">false</font>> color="black"]
  node15115 -> node15116 [ color="black"]
}
