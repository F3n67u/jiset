{
  let S = this
  app __x0__ = (Type S)
  if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  if (= S.SetData absent) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else {}
  let entries = S.SetData
  let __x3__ = entries
  let __x4__ = 0i
  while (< __x4__ __x3__.length) {
    let e = __x3__[__x4__]
    ??? "Replace the element of id:{entries} whose value is id:{e} with an element whose value is const:{empty} ."
    __x4__ = (+ __x4__ 1i)
  }
  app __x5__ = (WrapCompletion undefined)
  return __x5__
}