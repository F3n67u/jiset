{
  app value = (GetArgument argumentsList 0i)
  [0] let S = this
  [1] app __x0__ = (Type S)
  [1] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [0] {}
  [2] if (= S.SetData absent) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [0] {}
  [3] let entries = S.SetData
  [4] let __x3__ = entries
  [4] let __x4__ = 0i
  [4] while (< __x4__ __x3__.length) {
    let e = __x3__[__x4__]
    [5] let __x5__ = (! (= e CONST_empty))
    [5] if __x5__ {
      app __x6__ = (SameValueZero e value)
      __x5__ = (= __x6__ true)
    } else [0] {}
    [5] if __x5__ {
      [6] app __x7__ = (WrapCompletion S)
      [6] return __x7__
    } else [0] {}
    __x4__ = (+ __x4__ 1i)
  }
  [7] if (= value -0.0) let value = 0i else [0] {}
  [8] append value -> entries
  [9] app __x8__ = (WrapCompletion S)
  [9] return __x8__
}