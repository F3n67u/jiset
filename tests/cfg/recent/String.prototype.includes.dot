digraph {
  node14057 [shape=cds, label=<<font color="black">5:app __x4__ = (ToIntegerOrInfinity position)</font>> color="black" fillcolor="white" style=filled]
  node14051 [shape=cds, label=<<font color="black">2:app __x2__ = (IsRegExp searchString)</font>> color="black" fillcolor="white" style=filled]
  node14046 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node14060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let index = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14043 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14052 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isRegExp = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14045 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14044 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14059 [shape=cds, label=<<font color="black">9:app __x5__ = (StringIndexOf S searchStr start)</font>> color="black" fillcolor="white" style=filled]
  node14063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14049 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node14058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let pos = [? __x4__]</td></tr>
      <tr><td align="left">7:let len = S.length</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{start} be the result of clamping id:{pos} between 0 and id:{len} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14050 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let searchStr = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14061 [shape=diamond, label=<<font color="black">(! (= index -1i))</font>> color="black" fillcolor="white" style=filled]
  node14048 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14053 [shape=diamond, label=<<font color="black">(= isRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node14054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14047 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node14062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14055 [shape=cds, label=<<font color="black">4:app __x3__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node14054 -> node14055 [ color="black"]
  node14046 -> node14047 [ color="black"]
  node14057 -> node14058 [ color="black"]
  node14047 -> node14048 [ color="black"]
  node14049 -> node14050 [ color="black"]
  node14045 -> node14046 [ color="black"]
  node14063 -> node14044 [ color="black"]
  node14056 -> node14057 [ color="black"]
  node14052 -> node14053 [ color="black"]
  node14048 -> node14049 [ color="black"]
  node14053 -> node14054 [label=<<font color="black">true</font>> color="black"]
  node14053 -> node14055 [label=<<font color="black">false</font>> color="black"]
  node14055 -> node14056 [ color="black"]
  node14043 -> node14045 [ color="black"]
  node14058 -> node14059 [ color="black"]
  node14060 -> node14061 [ color="black"]
  node14051 -> node14052 [ color="black"]
  node14061 -> node14062 [label=<<font color="black">true</font>> color="black"]
  node14061 -> node14063 [label=<<font color="black">false</font>> color="black"]
  node14059 -> node14060 [ color="black"]
  node14050 -> node14051 [ color="black"]
  node14062 -> node14063 [ color="black"]
}
