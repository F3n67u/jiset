digraph {
  node15859 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15885 [shape=diamond, label=<<font color="black">(! (= __x6__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15907 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15873 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15892 [shape=cds, label=<<font color="black">16:app __x10__ = (IsAbruptCompletion k)</font>> color="black" fillcolor="white" style=filled]
  node15896 [shape=cds, label=<<font color="black">17:app __x12__ = (Get nextItem &quot;1&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15867 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15877 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15862 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15904 [shape=cds, label=<<font color="black">20:app __x16__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node15902 [shape=cds, label=<<font color="black">19:app __x15__ = (Call adder map (new [k.Value, v.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15903 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let status = __x15__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15875 [shape=cds, label=<<font color="black">7:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15865 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let map = [? __x0__]</td></tr>
      <tr><td align="left">2:map.WeakMapData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15894 [shape=cds, label=<<font color="black">app __x11__ = (IteratorClose iteratorRecord k)</font>> color="black" fillcolor="white" style=filled]
  node15874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15863 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15870 [shape=cds, label=<<font color="black">5:app __x1__ = (Get map &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15900 [shape=cds, label=<<font color="black">app __x14__ = (IteratorClose iteratorRecord v)</font>> color="black" fillcolor="white" style=filled]
  node15866 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node15878 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorStep iterRecord)</font>> color="black" fillcolor="white" style=filled]
  node15893 [shape=diamond, label=<<font color="black">__x10__</font>> color="black" fillcolor="white" style=filled]
  node15886 [shape=cds, label=<<font color="black">13:app __x7__ = (ThrowCompletion ??? &quot;TypeError&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15901 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15882 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let v = __x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15887 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let error = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15880 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let k = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15898 [shape=cds, label=<<font color="black">18:app __x13__ = (IsAbruptCompletion v)</font>> color="black" fillcolor="white" style=filled]
  node15868 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node15871 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15861 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15905 [shape=diamond, label=<<font color="black">__x16__</font>> color="black" fillcolor="white" style=filled]
  node15883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextItem = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15888 [shape=cds, label=<<font color="black">14:app __x8__ = (IteratorClose iteratorRecord error)</font>> color="black" fillcolor="white" style=filled]
  node15890 [shape=cds, label=<<font color="black">15:app __x9__ = (Get nextItem &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15860 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15869 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15864 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakMapPrototype (new [&quot;WeakMapData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15884 [shape=cds, label=<<font color="black">12:app __x6__ = (Type nextItem)</font>> color="black" fillcolor="white" style=filled]
  node15879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15906 [shape=cds, label=<<font color="black">app __x17__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node15899 [shape=diamond, label=<<font color="black">__x13__</font>> color="black" fillcolor="white" style=filled]
  node15872 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node15893 -> node15894 [label=<<font color="black">true</font>> color="black"]
  node15893 -> node15896 [label=<<font color="black">false</font>> color="black"]
  node15861 -> node15862 [ color="black"]
  node15880 -> node15881 [label=<<font color="black">true</font>> color="black"]
  node15880 -> node15882 [label=<<font color="black">false</font>> color="black"]
  node15869 -> node15870 [ color="black"]
  node15871 -> node15872 [ color="black"]
  node15865 -> node15866 [ color="black"]
  node15878 -> node15879 [ color="black"]
  node15891 -> node15892 [ color="black"]
  node15884 -> node15885 [ color="black"]
  node15875 -> node15876 [ color="black"]
  node15896 -> node15897 [ color="black"]
  node15898 -> node15899 [ color="black"]
  node15879 -> node15880 [ color="black"]
  node15892 -> node15893 [ color="black"]
  node15872 -> node15873 [ color="black"]
  node15877 -> node15878 [label=<<font color="black">true</font>> color="black"]
  node15877 -> node15860 [label=<<font color="black">false</font>> color="black"]
  node15859 -> node15861 [ color="black"]
  node15897 -> node15898 [ color="black"]
  node15885 -> node15886 [label=<<font color="black">true</font>> color="black"]
  node15885 -> node15890 [label=<<font color="black">false</font>> color="black"]
  node15876 -> node15877 [ color="black"]
  node15866 -> node15867 [label=<<font color="black">true</font>> color="black"]
  node15866 -> node15868 [label=<<font color="black">false</font>> color="black"]
  node15901 -> node15902 [ color="black"]
  node15899 -> node15900 [label=<<font color="black">true</font>> color="black"]
  node15899 -> node15902 [label=<<font color="black">false</font>> color="black"]
  node15900 -> node15901 [ color="black"]
  node15874 -> node15875 [ color="black"]
  node15883 -> node15884 [ color="black"]
  node15864 -> node15865 [ color="black"]
  node15895 -> node15896 [ color="black"]
  node15903 -> node15904 [ color="black"]
  node15902 -> node15903 [ color="black"]
  node15888 -> node15889 [ color="black"]
  node15881 -> node15882 [ color="black"]
  node15890 -> node15891 [ color="black"]
  node15870 -> node15871 [ color="black"]
  node15873 -> node15874 [label=<<font color="black">true</font>> color="black"]
  node15873 -> node15875 [label=<<font color="black">false</font>> color="black"]
  node15894 -> node15895 [ color="black"]
  node15867 -> node15868 [ color="black"]
  node15905 -> node15906 [label=<<font color="black">true</font>> color="black"]
  node15905 -> node15877 [label=<<font color="black">false</font>> color="black"]
  node15906 -> node15907 [ color="black"]
  node15886 -> node15887 [ color="black"]
  node15868 -> node15869 [label=<<font color="black">true</font>> color="black"]
  node15868 -> node15870 [label=<<font color="black">false</font>> color="black"]
  node15907 -> node15877 [ color="black"]
  node15887 -> node15888 [ color="black"]
  node15862 -> node15863 [label=<<font color="black">true</font>> color="black"]
  node15862 -> node15864 [label=<<font color="black">false</font>> color="black"]
  node15882 -> node15883 [ color="black"]
  node15889 -> node15890 [ color="black"]
  node15904 -> node15905 [ color="black"]
  node15863 -> node15864 [ color="black"]
}
