{
  app args = (GetArgument argumentsList 0i)
  [0] let coerced = (new [])
  [1] let __x0__ = args
  [1] let __x1__ = 0i
  [1] while (< __x1__ __x0__.length) {
    let arg = __x0__[__x1__]
    [2] app __x2__ = (ToNumber arg)
    [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [2] {}
    [2] let n = __x2__
    [3] append n -> coerced
    __x1__ = (+ __x1__ 1i)
  }
  [4] let onlyZero = true
  [5] let __x3__ = coerced
  [5] let __x4__ = 0i
  [5] while (< __x4__ __x3__.length) {
    let number = __x3__[__x4__]
    [6] if (|| (= number NaN) (= number Infinity)) {
      app __x5__ = (WrapCompletion number)
      return __x5__
    } else [2] {}
    [7] if (= number -Infinity) {
      app __x6__ = (WrapCompletion Infinity)
      return __x6__
    } else [2] {}
    [8] if (! (|| (= number 0i) (= number -0.0))) onlyZero = false else [2] {}
    __x4__ = (+ __x4__ 1i)
  }
  [9] if (= onlyZero true) {
    app __x7__ = (WrapCompletion 0i)
    return __x7__
  } else [2] {}
  [10] ??? "Return an implementation - approximated value representing the square root of the sum of squares of the mathematical values of the elements of id:{coerced} ."
}