digraph {
  node16604 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16619 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">8:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16613 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16623 [shape=cds, label=<<font color="black">12:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false &quot;Unordered&quot; isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16609 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node16608 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16616 [shape=cds, label=<<font color="black">6:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16620 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node16617 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node16621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16614 [shape=cds, label=<<font color="black">4:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16610 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16622 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16605 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16615 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:isLittleEndian = __x2__</td></tr>
      <tr><td align="left">5:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16612 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node16611 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16606 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node16607 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16618 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16612 -> node16613 [ color="black"]
  node16606 -> node16607 [ color="black"]
  node16624 -> node16605 [ color="black"]
  node16620 -> node16621 [label=<<font color="black">true</font>> color="black"]
  node16620 -> node16622 [label=<<font color="black">false</font>> color="black"]
  node16619 -> node16620 [ color="black"]
  node16604 -> node16606 [ color="black"]
  node16608 -> node16609 [ color="black"]
  node16623 -> node16624 [ color="black"]
  node16618 -> node16619 [ color="black"]
  node16622 -> node16623 [ color="black"]
  node16621 -> node16622 [ color="black"]
  node16610 -> node16611 [ color="black"]
  node16615 -> node16616 [ color="black"]
  node16611 -> node16612 [ color="black"]
  node16614 -> node16615 [ color="black"]
  node16616 -> node16617 [ color="black"]
  node16609 -> node16610 [label=<<font color="black">true</font>> color="black"]
  node16609 -> node16611 [label=<<font color="black">false</font>> color="black"]
  node16607 -> node16608 [label=<<font color="black">true</font>> color="black"]
  node16607 -> node16609 [label=<<font color="black">false</font>> color="black"]
  node16613 -> node16614 [ color="black"]
  node16617 -> node16618 [label=<<font color="black">true</font>> color="black"]
  node16617 -> node16619 [label=<<font color="black">false</font>> color="black"]
}
