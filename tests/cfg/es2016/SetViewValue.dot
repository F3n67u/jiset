digraph {
  node15138 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15158 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15150 [shape=cds, label=<<font color="black">6:app __x4__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15141 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let isLittleEndian = __x4__</td></tr>
      <tr><td align="left">7:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15136 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15147 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15160 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15155 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">10:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15140 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node15152 [shape=cds, label=<<font color="black">8:app __x5__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15148 [shape=cds, label=<<font color="black">5:app __x3__ = (ToNumber value)</font>> color="black" fillcolor="white" style=filled]
  node15144 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger numberIndex)</font>> color="black" fillcolor="white" style=filled]
  node15139 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15143 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let numberIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15153 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node15135 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15146 [shape=diamond, label=<<font color="black">(|| (! (== numberIndex getIndex)) (&lt; getIndex 0i))</font>> color="black" fillcolor="white" style=filled]
  node15137 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node15142 [shape=cds, label=<<font color="black">2:app __x1__ = (ToNumber requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node15156 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node15157 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15149 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let numberValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15154 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15159 [shape=cds, label=<<font color="black">14:app __x6__ = (SetValueInBuffer buffer bufferIndex type numberValue isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15137 -> node15138 [ color="black"]
  node15147 -> node15148 [ color="black"]
  node15160 -> node15136 [ color="black"]
  node15140 -> node15141 [label=<<font color="black">true</font>> color="black"]
  node15140 -> node15142 [label=<<font color="black">false</font>> color="black"]
  node15144 -> node15145 [ color="black"]
  node15150 -> node15151 [ color="black"]
  node15139 -> node15140 [ color="black"]
  node15148 -> node15149 [ color="black"]
  node15159 -> node15160 [ color="black"]
  node15146 -> node15147 [label=<<font color="black">true</font>> color="black"]
  node15146 -> node15148 [label=<<font color="black">false</font>> color="black"]
  node15145 -> node15146 [ color="black"]
  node15156 -> node15157 [label=<<font color="black">true</font>> color="black"]
  node15156 -> node15158 [label=<<font color="black">false</font>> color="black"]
  node15143 -> node15144 [ color="black"]
  node15157 -> node15158 [ color="black"]
  node15142 -> node15143 [ color="black"]
  node15153 -> node15154 [label=<<font color="black">true</font>> color="black"]
  node15153 -> node15155 [label=<<font color="black">false</font>> color="black"]
  node15141 -> node15142 [ color="black"]
  node15155 -> node15156 [ color="black"]
  node15151 -> node15152 [ color="black"]
  node15158 -> node15159 [ color="black"]
  node15154 -> node15155 [ color="black"]
  node15135 -> node15137 [ color="black"]
  node15138 -> node15139 [label=<<font color="black">true</font>> color="black"]
  node15138 -> node15140 [label=<<font color="black">false</font>> color="black"]
  node15149 -> node15150 [ color="black"]
  node15152 -> node15153 [ color="black"]
}
