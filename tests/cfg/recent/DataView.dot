digraph {
  node17759 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset viewByteLength))</font>> color="black" fillcolor="white" style=filled]
  node17751 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17747 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node17752 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17748 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let offset = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17754 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17758 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let viewByteLength = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17745 [shape=cds, label=<<font color="black">1:app __x0__ = (RequireInternalSlot buffer &quot;ArrayBufferData&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17750 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node17746 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17766 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">14:O.ByteLength = viewByteLength</td></tr>
      <tr><td align="left">15:O.ByteOffset = offset</td></tr>
      <tr><td align="left">16:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17756 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let viewByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17739 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17755 [shape=diamond, label=<<font color="black">(= byteLength undefined)</font>> color="black" fillcolor="white" style=filled]
  node17738 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17741 [shape=cds, label=<<font color="black">app byteOffset = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17742 [shape=cds, label=<<font color="black">app byteLength = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17763 [shape=cds, label=<<font color="black">12:app __x5__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17761 [shape=cds, label=<<font color="black">11:app __x4__ = (OrdinaryCreateFromConstructor NewTarget &quot;%DataView.prototype%&quot; (new [&quot;DataView&quot;, &quot;ViewedArrayBuffer&quot;, &quot;ByteLength&quot;, &quot;ByteOffset&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17749 [shape=cds, label=<<font color="black">3:app __x2__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17764 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node17762 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let O = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17760 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17743 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17753 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength offset)</font>> color="black" fillcolor="white" style=filled]
  node17740 [shape=cds, label=<<font color="black">app buffer = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17757 [shape=cds, label=<<font color="black">9:app __x3__ = (ToIndex byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17765 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17743 -> node17744 [label=<<font color="black">true</font>> color="black"]
  node17743 -> node17745 [label=<<font color="black">false</font>> color="black"]
  node17759 -> node17760 [label=<<font color="black">true</font>> color="black"]
  node17759 -> node17761 [label=<<font color="black">false</font>> color="black"]
  node17751 -> node17752 [ color="black"]
  node17756 -> node17761 [ color="black"]
  node17747 -> node17748 [ color="black"]
  node17765 -> node17766 [ color="black"]
  node17740 -> node17741 [ color="black"]
  node17758 -> node17759 [ color="black"]
  node17754 -> node17755 [ color="black"]
  node17744 -> node17745 [ color="black"]
  node17749 -> node17750 [ color="black"]
  node17748 -> node17749 [ color="black"]
  node17750 -> node17751 [label=<<font color="black">true</font>> color="black"]
  node17750 -> node17752 [label=<<font color="black">false</font>> color="black"]
  node17761 -> node17762 [ color="black"]
  node17753 -> node17754 [label=<<font color="black">true</font>> color="black"]
  node17753 -> node17755 [label=<<font color="black">false</font>> color="black"]
  node17755 -> node17756 [label=<<font color="black">true</font>> color="black"]
  node17755 -> node17757 [label=<<font color="black">false</font>> color="black"]
  node17742 -> node17743 [ color="black"]
  node17746 -> node17747 [ color="black"]
  node17738 -> node17740 [ color="black"]
  node17745 -> node17746 [ color="black"]
  node17741 -> node17742 [ color="black"]
  node17766 -> node17739 [ color="black"]
  node17752 -> node17753 [ color="black"]
  node17757 -> node17758 [ color="black"]
  node17763 -> node17764 [ color="black"]
  node17762 -> node17763 [ color="black"]
  node17760 -> node17761 [ color="black"]
  node17764 -> node17765 [label=<<font color="black">true</font>> color="black"]
  node17764 -> node17766 [label=<<font color="black">false</font>> color="black"]
}
