digraph {
  node19172 [shape=cds, label=<<font color="black">5:app __x1__ = (GeneratorStart generator closure)</font>> color="black" fillcolor="white" style=filled]
  node19171 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let generator = [! __x0__]</td></tr>
      <tr><td align="left">3:generator.GeneratorBrand = generatorBrand</td></tr>
      <tr><td align="left">4:generator.GeneratorState = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19170 [shape=cds, label=<<font color="black">2:app __x0__ = (OrdinaryObjectCreate generatorPrototype internalSlotsList)</font>> color="black" fillcolor="white" style=filled]
  node19167 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19169 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let internalSlotsList = (new [&quot;GeneratorState&quot;, &quot;GeneratorContext&quot;, &quot;GeneratorBrand&quot;])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19173 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x1__]</td></tr>
      <tr><td align="left">6:return generator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19168 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19169 -> node19170 [ color="black"]
  node19172 -> node19173 [ color="black"]
  node19171 -> node19172 [ color="black"]
  node19173 -> node19168 [ color="black"]
  node19170 -> node19171 [ color="black"]
  node19167 -> node19169 [ color="black"]
}
