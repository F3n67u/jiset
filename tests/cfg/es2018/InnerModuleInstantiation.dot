digraph {
  node10282 [shape=diamond, label=<<font color="black">(|| (|| (= module.Status &quot;instantiating&quot;) (= module.Status &quot;instantiated&quot;)) (= module.Status &quot;evaluated&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10286 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10292 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:assert (= (typeof requiredModule) &quot;SourceTextModuleRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10303 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10278 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10289 [shape=cds, label=<<font color="black">13:app __x4__ = (InnerModuleInstantiation requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node10284 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (= module.Status &quot;uninstantiated&quot;)</td></tr>
      <tr><td align="left">6:module.Status = &quot;instantiating&quot;</td></tr>
      <tr><td align="left">7:module.DFSIndex = index</td></tr>
      <tr><td align="left">8:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">9:index = (+ index 1i)</td></tr>
      <tr><td align="left">10:append module -&gt; stack</td></tr>
      <tr><td align="left">11:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">11:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10301 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">26:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">27:requiredModule.Status = &quot;instantiated&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10290 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = [? __x4__]</td></tr>
      <tr><td align="left">14:assert (|| (|| (= requiredModule.Status &quot;instantiating&quot;) (= requiredModule.Status &quot;instantiated&quot;)) (= requiredModule.Status &quot;evaluated&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10288 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let requiredModule = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10299 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10277 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10294 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10295 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10281 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10298 [shape=diamond, label=<<font color="black">(= module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node10285 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10302 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node10297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x6__]</td></tr>
      <tr><td align="left">21:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10279 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;SourceTextModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10296 [shape=cds, label=<<font color="black">19:app __x6__ = (ModuleDeclarationEnvironmentSetup module)</font>> color="black" fillcolor="white" style=filled]
  node10293 [shape=cds, label=<<font color="black">18:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node10283 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10300 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node10291 [shape=diamond, label=<<font color="black">(= requiredModule.Status &quot;instantiating&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10280 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Instantiate module)</font>> color="black" fillcolor="white" style=filled]
  node10287 [shape=cds, label=<<font color="black">12:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node10304 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10279 -> node10280 [label=<<font color="black">true</font>> color="black"]
  node10279 -> node10282 [label=<<font color="black">false</font>> color="black"]
  node10292 -> node10293 [ color="black"]
  node10303 -> node10300 [ color="black"]
  node10294 -> node10295 [ color="black"]
  node10298 -> node10299 [label=<<font color="black">true</font>> color="black"]
  node10298 -> node10304 [label=<<font color="black">false</font>> color="black"]
  node10304 -> node10278 [ color="black"]
  node10284 -> node10285 [ color="black"]
  node10287 -> node10288 [ color="black"]
  node10297 -> node10298 [ color="black"]
  node10299 -> node10300 [ color="black"]
  node10295 -> node10285 [ color="black"]
  node10291 -> node10292 [label=<<font color="black">true</font>> color="black"]
  node10291 -> node10295 [label=<<font color="black">false</font>> color="black"]
  node10289 -> node10290 [ color="black"]
  node10302 -> node10303 [label=<<font color="black">true</font>> color="black"]
  node10302 -> node10300 [label=<<font color="black">false</font>> color="black"]
  node10282 -> node10283 [label=<<font color="black">true</font>> color="black"]
  node10282 -> node10284 [label=<<font color="black">false</font>> color="black"]
  node10300 -> node10301 [label=<<font color="black">true</font>> color="black"]
  node10300 -> node10304 [label=<<font color="black">false</font>> color="black"]
  node10283 -> node10284 [ color="black"]
  node10296 -> node10297 [ color="black"]
  node10286 -> node10287 [ color="black"]
  node10290 -> node10291 [ color="black"]
  node10301 -> node10302 [ color="black"]
  node10293 -> node10294 [ color="black"]
  node10277 -> node10279 [ color="black"]
  node10288 -> node10289 [ color="black"]
  node10285 -> node10286 [label=<<font color="black">true</font>> color="black"]
  node10285 -> node10296 [label=<<font color="black">false</font>> color="black"]
  node10280 -> node10281 [ color="black"]
  node10281 -> node10282 [ color="black"]
}
