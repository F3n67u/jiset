{
  [0] if (|| (|| (= year Infinity) (= year -Infinity)) (|| (|| (= month Infinity) (= month -Infinity)) (|| (= date Infinity) (= date -Infinity)))) {
    app __x0__ = (WrapCompletion NaN)
    return __x0__
  } else [2] {}
  [1] app __x1__ = (ToInteger year)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [2] {}
  [1] let y = __x1__
  [2] app __x2__ = (ToInteger month)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [2] {}
  [2] let m = __x2__
  [3] app __x3__ = (ToInteger date)
  [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [2] {}
  [3] let dt = __x3__
  [4] app __x4__ = (floor (/ m 12i))
  [4] let ym = (+ y __x4__)
  [5] let mn = (%% m 12i)
  [6] ??? "Find a value id:{t} such that YearFromTime ( id:{t} ) is id:{ym} and MonthFromTime ( id:{t} ) is id:{mn} and DateFromTime ( id:{t} ) is 1 ; but if this is not possible ( because some argument is out of range ) , return value:{NaN} ."
  [7] app __x5__ = (Day t)
  [7] app __x6__ = (WrapCompletion (- (+ __x5__ dt) 1i))
  [7] return __x6__
}