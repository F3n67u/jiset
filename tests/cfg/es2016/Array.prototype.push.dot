digraph {
  node14038 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[? __x5__]</td></tr>
      <tr><td align="left">10:return len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14025 [shape=cds, label=<<font color="black">0:app __x0__ = (ToObject this)</font>> color="black" fillcolor="white" style=filled]
  node14023 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14029 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let len = [? __x2__]</td></tr>
      <tr><td align="left">2:let items = argumentsList</td></tr>
      <tr><td align="left">3:let argCount = items.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14024 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14034 [shape=cds, label=<<font color="black">7:app __x3__ = (ToString len)</font>> color="black" fillcolor="white" style=filled]
  node14032 [shape=diamond, label=<<font color="black">(&lt; 0i items.length)</font>> color="black" fillcolor="white" style=filled]
  node14028 [shape=cds, label=<<font color="black">1:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node14035 [shape=cds, label=<<font color="black">7:app __x4__ = (Set O [! __x3__] E true)</font>> color="black" fillcolor="white" style=filled]
  node14027 [shape=cds, label=<<font color="black">1:app __x1__ = (Get O &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14022 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14037 [shape=cds, label=<<font color="black">9:app __x5__ = (Set O &quot;length&quot; len true)</font>> color="black" fillcolor="white" style=filled]
  node14026 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14030 [shape=diamond, label=<<font color="black">(&lt; (- (** 2.0 53i) 1i) (+ len argCount))</font>> color="black" fillcolor="white" style=filled]
  node14033 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let E = (pop items 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? __x4__]</td></tr>
      <tr><td align="left">8:let len = (+ len 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14031 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14024 -> node14025 [ color="black"]
  node14035 -> node14036 [ color="black"]
  node14032 -> node14033 [label=<<font color="black">true</font>> color="black"]
  node14032 -> node14037 [label=<<font color="black">false</font>> color="black"]
  node14037 -> node14038 [ color="black"]
  node14027 -> node14028 [ color="black"]
  node14034 -> node14035 [ color="black"]
  node14026 -> node14027 [ color="black"]
  node14036 -> node14032 [ color="black"]
  node14029 -> node14030 [ color="black"]
  node14030 -> node14031 [label=<<font color="black">true</font>> color="black"]
  node14030 -> node14032 [label=<<font color="black">false</font>> color="black"]
  node14022 -> node14024 [ color="black"]
  node14028 -> node14029 [ color="black"]
  node14033 -> node14034 [ color="black"]
  node14025 -> node14026 [ color="black"]
  node14038 -> node14023 [ color="black"]
  node14031 -> node14032 [ color="black"]
}
