digraph {
  node13142 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:namedCaptures = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13144 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ String)</td></tr>
      <tr><td align="left">1:let matchLength = matched.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13149 [shape=diamond, label=<<font color="black">(! (= namedCaptures undefined))</font>> color="black" fillcolor="white" style=filled]
  node13146 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x1__ String)</td></tr>
      <tr><td align="left">3:let stringLength = str.length</td></tr>
      <tr><td align="left">5:assert (! (&lt; stringLength position))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13143 [shape=cds, label=<<font color="black">0:app __x0__ = (Type matched)</font>> color="black" fillcolor="white" style=filled]
  node13150 [shape=cds, label=<<font color="black">11:app __x3__ = (ToObject namedCaptures)</font>> color="black" fillcolor="white" style=filled]
  node13152 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:??? &quot;Let id:{result} be the String value derived from id:{replacement} by copying code unit elements from id:{replacement} to id:{result} while performing replacements as specified in link:{unhandled: table-45} . These code:{$} replacements are done left - to - right , and , once such a replacement is performed , the new replacement text is not subject to further replacements .&quot;</td></tr>
      <tr><td align="left">13:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13145 [shape=cds, label=<<font color="black">2:app __x1__ = (Type str)</font>> color="black" fillcolor="white" style=filled]
  node13147 [shape=cds, label=<<font color="black">7:app __x2__ = (Type replacement)</font>> color="black" fillcolor="white" style=filled]
  node13148 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= __x2__ String)</td></tr>
      <tr><td align="left">8:let tailPos = (+ position matchLength)</td></tr>
      <tr><td align="left">9:let m = captures.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13141 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13145 -> node13146 [ color="black"]
  node13150 -> node13151 [ color="black"]
  node13147 -> node13148 [ color="black"]
  node13143 -> node13144 [ color="black"]
  node13152 -> node13142 [ color="black"]
  node13146 -> node13147 [ color="black"]
  node13144 -> node13145 [ color="black"]
  node13149 -> node13150 [label=<<font color="black">true</font>> color="black"]
  node13149 -> node13152 [label=<<font color="black">false</font>> color="black"]
  node13148 -> node13149 [ color="black"]
  node13151 -> node13152 [ color="black"]
  node13141 -> node13143 [ color="black"]
}
