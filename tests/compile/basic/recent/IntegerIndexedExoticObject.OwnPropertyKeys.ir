{
  let keys = (new [])
  app __x0__ = (IsDetachedBuffer O.ViewedArrayBuffer)
  if (= __x0__ false) {
    let i = (+ 0i 0i)
    let __x1__ = (+ O.ArrayLength 0i)
    while (< i __x1__) {
      app __x2__ = (ToString i)
      append [! __x2__] -> keys
    }
  } else {}
  ??? "For each own property key id:{P} of id:{O} such that Type ( id:{P} ) is String and id:{P} is not an integer index , in ascending chronological order of property creation , do in:{} out:{}"
  ??? "For each own property key id:{P} of id:{O} such that Type ( id:{P} ) is Symbol , in ascending chronological order of property creation , do in:{} out:{}"
  return keys
}