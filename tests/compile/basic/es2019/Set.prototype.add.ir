{
  let S = this
  app __x0__ = (Type S)
  if (! (= __x0__ Object)) throw TypeError else {}
  if (= S.SetData absent) throw TypeError else {}
  let entries = S.SetData
  let __x1__ = entries
  let __x2__ = 0i
  while (< __x2__ __x1__.length) {
    let e = __x1__[__x2__]
    let __x3__ = true
    __x3__ = (! (= e CONST_empty))
    if __x3__ {
      app __x4__ = (SameValueZero e value)
      __x3__ = (= __x4__ true)
    } else {}
    if __x3__ return S else {}
    __x2__ = (+ __x2__ 1i)
  }
  if (= value -0.0) value = 0i else {}
  append value -> entries
  return S
}