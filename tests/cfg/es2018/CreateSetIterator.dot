digraph {
  node15848 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15851 [shape=cds, label=<<font color="black">app kind = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15856 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15858 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = __x1__</td></tr>
      <tr><td align="left">3:iterator.IteratedSet = set</td></tr>
      <tr><td align="left">4:iterator.SetNextIndex = 0i</td></tr>
      <tr><td align="left">5:iterator.SetIterationKind = kind</td></tr>
      <tr><td align="left">6:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15852 [shape=cds, label=<<font color="black">0:app __x0__ = (Type set)</font>> color="black" fillcolor="white" style=filled]
  node15857 [shape=cds, label=<<font color="black">2:app __x1__ = (ObjectCreate INTRINSIC_SetIteratorPrototype (new [&quot;IteratedSet&quot;, &quot;SetNextIndex&quot;, &quot;SetIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15853 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15849 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15854 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15850 [shape=cds, label=<<font color="black">app set = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15855 [shape=diamond, label=<<font color="black">(= set.SetData absent)</font>> color="black" fillcolor="white" style=filled]
  node15852 -> node15853 [ color="black"]
  node15853 -> node15854 [label=<<font color="black">true</font>> color="black"]
  node15853 -> node15855 [label=<<font color="black">false</font>> color="black"]
  node15856 -> node15857 [ color="black"]
  node15851 -> node15852 [ color="black"]
  node15858 -> node15849 [ color="black"]
  node15855 -> node15856 [label=<<font color="black">true</font>> color="black"]
  node15855 -> node15857 [label=<<font color="black">false</font>> color="black"]
  node15857 -> node15858 [ color="black"]
  node15848 -> node15850 [ color="black"]
  node15854 -> node15855 [ color="black"]
  node15850 -> node15851 [ color="black"]
}
