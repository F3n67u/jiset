digraph {
  node12344 [shape=cds, label=<<font color="black">15:app __x7__ = (SetFunctionLength F L)</font>> color="black" fillcolor="white" style=filled]
  node12334 [shape=cds, label=<<font color="black">7:app __x4__ = (Type targetLen)</font>> color="black" fillcolor="white" style=filled]
  node12351 [shape=cds, label=<<font color="black">18:app __x10__ = (SetFunctionName F targetName &quot;bound&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12319 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12347 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let targetName = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let targetHasLength = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12325 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node12322 [shape=cds, label=<<font color="black">app args = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12337 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">L = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12326 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12332 [shape=cds, label=<<font color="black">6:app __x3__ = (Get Target &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12345 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:[! __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12328 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let F = [? __x1__]</td></tr>
      <tr><td align="left">3:let L = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12343 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:L = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12339 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">L = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12324 [shape=cds, label=<<font color="black">1:app __x0__ = (IsCallable Target)</font>> color="black" fillcolor="white" style=filled]
  node12333 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let targetLen = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">targetName = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12340 [shape=cds, label=<<font color="black">11:app __x5__ = (ToIntegerOrInfinity targetLen)</font>> color="black" fillcolor="white" style=filled]
  node12321 [shape=cds, label=<<font color="black">app thisArg = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12329 [shape=cds, label=<<font color="black">4:app __x2__ = (HasOwnProperty Target &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12346 [shape=cds, label=<<font color="black">16:app __x8__ = (Get Target &quot;name&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12349 [shape=diamond, label=<<font color="black">(! (= __x9__ String))</font>> color="black" fillcolor="white" style=filled]
  node12327 [shape=cds, label=<<font color="black">2:app __x1__ = (BoundFunctionCreate Target thisArg args)</font>> color="black" fillcolor="white" style=filled]
  node12336 [shape=diamond, label=<<font color="black">(= targetLen Infinity)</font>> color="black" fillcolor="white" style=filled]
  node12341 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetLenAsInt = [! __x5__]</td></tr>
      <tr><td align="left">12:assert (! (|| (= targetLenAsInt Infinity) (= targetLenAsInt -Infinity)))</td></tr>
      <tr><td align="left">13:let argCount = args.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12338 [shape=diamond, label=<<font color="black">(= targetLen -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node12323 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let Target = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12342 [shape=cds, label=<<font color="black">14:app __x6__ = (max (- targetLenAsInt argCount) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x10__</td></tr>
      <tr><td align="left">19:return F</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12335 [shape=diamond, label=<<font color="black">(= __x4__ Number)</font>> color="black" fillcolor="white" style=filled]
  node12320 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12331 [shape=diamond, label=<<font color="black">(= targetHasLength true)</font>> color="black" fillcolor="white" style=filled]
  node12348 [shape=cds, label=<<font color="black">17:app __x9__ = (Type targetName)</font>> color="black" fillcolor="white" style=filled]
  node12327 -> node12328 [ color="black"]
  node12321 -> node12322 [ color="black"]
  node12333 -> node12334 [ color="black"]
  node12351 -> node12352 [ color="black"]
  node12319 -> node12321 [ color="black"]
  node12335 -> node12336 [label=<<font color="black">true</font>> color="black"]
  node12335 -> node12344 [label=<<font color="black">false</font>> color="black"]
  node12341 -> node12342 [ color="black"]
  node12347 -> node12348 [ color="black"]
  node12345 -> node12346 [ color="black"]
  node12323 -> node12324 [ color="black"]
  node12344 -> node12345 [ color="black"]
  node12338 -> node12339 [label=<<font color="black">true</font>> color="black"]
  node12338 -> node12340 [label=<<font color="black">false</font>> color="black"]
  node12324 -> node12325 [ color="black"]
  node12336 -> node12337 [label=<<font color="black">true</font>> color="black"]
  node12336 -> node12338 [label=<<font color="black">false</font>> color="black"]
  node12348 -> node12349 [ color="black"]
  node12346 -> node12347 [ color="black"]
  node12322 -> node12323 [ color="black"]
  node12329 -> node12330 [ color="black"]
  node12342 -> node12343 [ color="black"]
  node12349 -> node12350 [label=<<font color="black">true</font>> color="black"]
  node12349 -> node12351 [label=<<font color="black">false</font>> color="black"]
  node12339 -> node12344 [ color="black"]
  node12340 -> node12341 [ color="black"]
  node12325 -> node12326 [label=<<font color="black">true</font>> color="black"]
  node12325 -> node12327 [label=<<font color="black">false</font>> color="black"]
  node12328 -> node12329 [ color="black"]
  node12334 -> node12335 [ color="black"]
  node12330 -> node12331 [ color="black"]
  node12326 -> node12327 [ color="black"]
  node12350 -> node12351 [ color="black"]
  node12337 -> node12344 [ color="black"]
  node12343 -> node12344 [ color="black"]
  node12352 -> node12320 [ color="black"]
  node12331 -> node12332 [label=<<font color="black">true</font>> color="black"]
  node12331 -> node12344 [label=<<font color="black">false</font>> color="black"]
  node12332 -> node12333 [ color="black"]
}
