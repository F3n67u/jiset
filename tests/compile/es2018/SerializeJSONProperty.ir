{
  [0] app __x0__ = (Get holder key)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [22] {}
  [0] let value = __x0__
  [1] app __x1__ = (Type value)
  [1] if (= __x1__ Object) {
    [2] app __x2__ = (Get value "toJSON")
    [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [22] {}
    [2] let toJSON = __x2__
    [3] app __x3__ = (IsCallable toJSON)
    [3] if (= __x3__ true) {
      [4] app __x4__ = (Call toJSON value (new [key]))
      [4] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [22] {}
      [4] value = __x4__
    } else [22] {}
  } else [22] {}
  [5] if (! (= ReplacerFunction undefined)) {
    [6] app __x5__ = (Call ReplacerFunction holder (new [key, value]))
    [6] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [22] {}
    [6] value = __x5__
  } else [22] {}
  [7] app __x6__ = (Type value)
  [7] if (= __x6__ Object) if (! (= value.NumberData absent)) {
    [9] app __x7__ = (ToNumber value)
    [9] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [22] {}
    [9] value = __x7__
  } else if (! (= value.StringData absent)) {
    [11] app __x8__ = (ToString value)
    [11] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [22] {}
    [11] value = __x8__
  } else if (! (= value.BooleanData absent)) value = value.BooleanData else [22] {} else [22] {}
  [14] if (= value null) {
    app __x9__ = (WrapCompletion "null")
    return __x9__
  } else [22] {}
  [15] if (= value true) {
    app __x10__ = (WrapCompletion "true")
    return __x10__
  } else [22] {}
  [16] if (= value false) {
    app __x11__ = (WrapCompletion "false")
    return __x11__
  } else [22] {}
  [17] app __x12__ = (Type value)
  [17] if (= __x12__ String) {
    app __x13__ = (QuoteJSONString value)
    app __x14__ = (WrapCompletion __x13__)
    return __x14__
  } else [22] {}
  [18] app __x15__ = (Type value)
  [18] if (= __x15__ Number) {
    [19] if (! (|| (= value Infinity) (= value -Infinity))) {
      app __x16__ = (ToString value)
      if (is-completion __x16__) if (= __x16__.Type CONST_normal) __x16__ = __x16__.Value else return __x16__ else [22] {}
      app __x17__ = (WrapCompletion __x16__)
      return __x17__
    } else [22] {}
    [20] app __x18__ = (WrapCompletion "null")
    [20] return __x18__
  } else [22] {}
  [21] app __x19__ = (Type value)
  [21] let __x20__ = (= __x19__ Object)
  [21] if __x20__ {
    app __x21__ = (IsCallable value)
    __x20__ = (= __x21__ false)
  } else [22] {}
  [21] if __x20__ {
    [22] app __x22__ = (IsArray value)
    [22] if (is-completion __x22__) if (= __x22__.Type CONST_normal) __x22__ = __x22__.Value else return __x22__ else [22] {}
    [22] let isArray = __x22__
    [23] if (= isArray true) {
      app __x23__ = (SerializeJSONArray value)
      if (is-completion __x23__) if (= __x23__.Type CONST_normal) __x23__ = __x23__.Value else return __x23__ else [22] {}
      app __x24__ = (WrapCompletion __x23__)
      return __x24__
    } else [22] {}
    [24] app __x25__ = (SerializeJSONObject value)
    [24] if (is-completion __x25__) if (= __x25__.Type CONST_normal) __x25__ = __x25__.Value else return __x25__ else [22] {}
    [24] app __x26__ = (WrapCompletion __x25__)
    [24] return __x26__
  } else [22] {}
  [25] app __x27__ = (WrapCompletion undefined)
  [25] return __x27__
}