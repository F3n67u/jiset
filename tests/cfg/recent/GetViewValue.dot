digraph {
  node18065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:isLittleEndian = [! __x2__]</td></tr>
      <tr><td align="left">4:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18073 [shape=cds, label=<<font color="black">11:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false CONST_Unordered isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node18059 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18064 [shape=cds, label=<<font color="black">3:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node18067 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node18071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18060 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot view &quot;DataView&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18066 [shape=cds, label=<<font color="black">5:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node18061 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">1:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18070 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node18062 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node18072 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18058 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">7:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18068 -> node18069 [ color="black"]
  node18070 -> node18071 [label=<<font color="black">true</font>> color="black"]
  node18070 -> node18072 [label=<<font color="black">false</font>> color="black"]
  node18062 -> node18063 [ color="black"]
  node18072 -> node18073 [ color="black"]
  node18069 -> node18070 [ color="black"]
  node18064 -> node18065 [ color="black"]
  node18061 -> node18062 [ color="black"]
  node18058 -> node18060 [ color="black"]
  node18063 -> node18064 [ color="black"]
  node18067 -> node18068 [label=<<font color="black">true</font>> color="black"]
  node18067 -> node18069 [label=<<font color="black">false</font>> color="black"]
  node18065 -> node18066 [ color="black"]
  node18074 -> node18059 [ color="black"]
  node18073 -> node18074 [ color="black"]
  node18060 -> node18061 [ color="black"]
  node18066 -> node18067 [ color="black"]
  node18071 -> node18072 [ color="black"]
}
