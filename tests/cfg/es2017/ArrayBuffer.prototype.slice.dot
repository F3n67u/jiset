digraph {
  node15514 [shape=cds, label=<<font color="black">app __x8__ = (min relativeEnd len)</font>> color="black" fillcolor="white" style=filled]
  node15509 [shape=cds, label=<<font color="black">app __x6__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node15513 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15502 [shape=diamond, label=<<font color="black">(&lt; relativeStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node15519 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let ctor = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15483 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15508 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15484 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15537 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15526 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15532 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15490 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15504 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15500 [shape=cds, label=<<font color="black">6:app __x3__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node15515 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15522 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node15536 [shape=diamond, label=<<font color="black">(= __x15__ true)</font>> color="black" fillcolor="white" style=filled]
  node15494 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node15505 [shape=cds, label=<<font color="black">app __x5__ = (min relativeStart len)</font>> color="black" fillcolor="white" style=filled]
  node15503 [shape=cds, label=<<font color="black">app __x4__ = (max (+ len relativeStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node15518 [shape=cds, label=<<font color="black">11:app __x10__ = (SpeciesConstructor O INTRINSIC_ArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node15486 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15488 [shape=cds, label=<<font color="black">1:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node15531 [shape=diamond, label=<<font color="black">(= __x14__ true)</font>> color="black" fillcolor="white" style=filled]
  node15527 [shape=cds, label=<<font color="black">15:app __x13__ = (IsDetachedBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node15491 [shape=diamond, label=<<font color="black">(= O.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node15498 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15523 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15495 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15538 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let fromBuf = O.ArrayBufferData</td></tr>
      <tr><td align="left">21:let toBuf = new.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15499 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let len = O.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15535 [shape=cds, label=<<font color="black">19:app __x15__ = (IsDetachedBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node15506 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15520 [shape=cds, label=<<font color="black">12:app __x11__ = (Construct ctor (new [newLen]))</font>> color="black" fillcolor="white" style=filled]
  node15517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let newLen = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15485 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15530 [shape=cds, label=<<font color="black">16:app __x14__ = (SameValue new O)</font>> color="black" fillcolor="white" style=filled]
  node15492 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15507 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node15497 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node15487 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15528 [shape=diamond, label=<<font color="black">(= __x13__ true)</font>> color="black" fillcolor="white" style=filled]
  node15496 [shape=cds, label=<<font color="black">4:app __x2__ = (IsDetachedBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node15511 [shape=diamond, label=<<font color="black">(&lt; relativeEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node15529 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15534 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15539 [shape=cds, label=<<font color="black">22:app __x16__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)</font>> color="black" fillcolor="white" style=filled]
  node15524 [shape=cds, label=<<font color="black">14:app __x12__ = (IsSharedArrayBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node15501 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let relativeStart = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15525 [shape=diamond, label=<<font color="black">(= __x12__ true)</font>> color="black" fillcolor="white" style=filled]
  node15540 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:__x16__</td></tr>
      <tr><td align="left">23:return new</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15533 [shape=diamond, label=<<font color="black">(&lt; new.ArrayBufferByteLength newLen)</font>> color="black" fillcolor="white" style=filled]
  node15512 [shape=cds, label=<<font color="black">app __x7__ = (max (+ len relativeEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node15493 [shape=cds, label=<<font color="black">3:app __x1__ = (IsSharedArrayBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node15521 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let new = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15489 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15516 [shape=cds, label=<<font color="black">10:app __x9__ = (max (- final first) 0i)</font>> color="black" fillcolor="white" style=filled]
  node15488 -> node15489 [ color="black"]
  node15495 -> node15496 [ color="black"]
  node15501 -> node15502 [ color="black"]
  node15521 -> node15522 [ color="black"]
  node15487 -> node15488 [ color="black"]
  node15483 -> node15485 [ color="black"]
  node15496 -> node15497 [ color="black"]
  node15497 -> node15498 [label=<<font color="black">true</font>> color="black"]
  node15497 -> node15499 [label=<<font color="black">false</font>> color="black"]
  node15486 -> node15487 [ color="black"]
  node15498 -> node15499 [ color="black"]
  node15514 -> node15515 [ color="black"]
  node15504 -> node15507 [ color="black"]
  node15492 -> node15493 [ color="black"]
  node15502 -> node15503 [label=<<font color="black">true</font>> color="black"]
  node15502 -> node15505 [label=<<font color="black">false</font>> color="black"]
  node15529 -> node15530 [ color="black"]
  node15524 -> node15525 [ color="black"]
  node15528 -> node15529 [label=<<font color="black">true</font>> color="black"]
  node15528 -> node15530 [label=<<font color="black">false</font>> color="black"]
  node15519 -> node15520 [ color="black"]
  node15511 -> node15512 [label=<<font color="black">true</font>> color="black"]
  node15511 -> node15514 [label=<<font color="black">false</font>> color="black"]
  node15530 -> node15531 [ color="black"]
  node15526 -> node15527 [ color="black"]
  node15531 -> node15532 [label=<<font color="black">true</font>> color="black"]
  node15531 -> node15533 [label=<<font color="black">false</font>> color="black"]
  node15538 -> node15539 [ color="black"]
  node15516 -> node15517 [ color="black"]
  node15540 -> node15484 [ color="black"]
  node15513 -> node15516 [ color="black"]
  node15518 -> node15519 [ color="black"]
  node15509 -> node15510 [ color="black"]
  node15520 -> node15521 [ color="black"]
  node15499 -> node15500 [ color="black"]
  node15510 -> node15511 [ color="black"]
  node15527 -> node15528 [ color="black"]
  node15523 -> node15524 [ color="black"]
  node15515 -> node15516 [ color="black"]
  node15485 -> node15486 [ color="black"]
  node15500 -> node15501 [ color="black"]
  node15506 -> node15507 [ color="black"]
  node15522 -> node15523 [label=<<font color="black">true</font>> color="black"]
  node15522 -> node15524 [label=<<font color="black">false</font>> color="black"]
  node15517 -> node15518 [ color="black"]
  node15490 -> node15491 [ color="black"]
  node15525 -> node15526 [label=<<font color="black">true</font>> color="black"]
  node15525 -> node15527 [label=<<font color="black">false</font>> color="black"]
  node15512 -> node15513 [ color="black"]
  node15493 -> node15494 [ color="black"]
  node15537 -> node15538 [ color="black"]
  node15539 -> node15540 [ color="black"]
  node15535 -> node15536 [ color="black"]
  node15489 -> node15490 [label=<<font color="black">true</font>> color="black"]
  node15489 -> node15491 [label=<<font color="black">false</font>> color="black"]
  node15491 -> node15492 [label=<<font color="black">true</font>> color="black"]
  node15491 -> node15493 [label=<<font color="black">false</font>> color="black"]
  node15503 -> node15504 [ color="black"]
  node15532 -> node15533 [ color="black"]
  node15534 -> node15535 [ color="black"]
  node15505 -> node15506 [ color="black"]
  node15536 -> node15537 [label=<<font color="black">true</font>> color="black"]
  node15536 -> node15538 [label=<<font color="black">false</font>> color="black"]
  node15508 -> node15511 [ color="black"]
  node15494 -> node15495 [label=<<font color="black">true</font>> color="black"]
  node15494 -> node15496 [label=<<font color="black">false</font>> color="black"]
  node15533 -> node15534 [label=<<font color="black">true</font>> color="black"]
  node15533 -> node15535 [label=<<font color="black">false</font>> color="black"]
  node15507 -> node15508 [label=<<font color="black">true</font>> color="black"]
  node15507 -> node15509 [label=<<font color="black">false</font>> color="black"]
}
