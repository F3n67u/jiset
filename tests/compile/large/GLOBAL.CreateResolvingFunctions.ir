{
  app __x0__ = (GetArgument argumentsList 0i)
  let promise = __x0__
  let alreadyResolved = (new Record("Value" -> false))
  ??? "Let id:{stepsResolve} be the algorithm steps defined in Promise Resolve Functions ."
  app __x1__ = (CreateBuiltinFunction stepsResolve (new ["Promise", "AlreadyResolved"]))
  if (is-completion __x1__) if (= __x1__["Type"] CONST_normal) __x1__ = __x1__["Value"] else return __x1__ else {}
  let resolve = __x1__
  resolve["Promise"] = promise
  resolve["AlreadyResolved"] = alreadyResolved
  ??? "Let id:{stepsReject} be the algorithm steps defined in Promise Reject Functions ."
  app __x2__ = (CreateBuiltinFunction stepsReject (new ["Promise", "AlreadyResolved"]))
  if (is-completion __x2__) if (= __x2__["Type"] CONST_normal) __x2__ = __x2__["Value"] else return __x2__ else {}
  let reject = __x2__
  reject["Promise"] = promise
  reject["AlreadyResolved"] = alreadyResolved
  app __x3__ = (WrapCompletion (new Record("Resolve" -> resolve, "Reject" -> reject)))
  return __x3__
}