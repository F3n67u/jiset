digraph {
  node12864 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x5__]</td></tr>
      <tr><td align="left">8:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12860 [shape=cds, label=<<font color="black">6:app __x3__ = (IterableToList errors)</font>> color="black" fillcolor="white" style=filled]
  node12846 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12849 [shape=cds, label=<<font color="black">app message = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12863 [shape=cds, label=<<font color="black">7:app __x5__ = (DefinePropertyOrThrow O &quot;errors&quot; (new PropertyDescriptor(&quot;Configurable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Writable&quot; -&gt; true, &quot;Value&quot; -&gt; [! __x4__])))</font>> color="black" fillcolor="white" style=filled]
  node12853 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor newTarget &quot;%AggregateError.prototype%&quot; (new [&quot;ErrorData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node12859 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12857 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let msg = [? __x1__]</td></tr>
      <tr><td align="left">4:let msgDesc = (new PropertyDescriptor(&quot;Value&quot; -&gt; msg, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12862 [shape=cds, label=<<font color="black">7:app __x4__ = (CreateArrayFromList errorsList)</font>> color="black" fillcolor="white" style=filled]
  node12850 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node12854 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12858 [shape=cds, label=<<font color="black">5:app __x2__ = (DefinePropertyOrThrow O &quot;message&quot; msgDesc)</font>> color="black" fillcolor="white" style=filled]
  node12851 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12848 [shape=cds, label=<<font color="black">app errors = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12855 [shape=diamond, label=<<font color="black">(! (= message undefined))</font>> color="black" fillcolor="white" style=filled]
  node12852 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12847 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let errorsList = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12856 [shape=cds, label=<<font color="black">3:app __x1__ = (ToString message)</font>> color="black" fillcolor="white" style=filled]
  node12864 -> node12847 [ color="black"]
  node12857 -> node12858 [ color="black"]
  node12850 -> node12851 [label=<<font color="black">true</font>> color="black"]
  node12850 -> node12852 [label=<<font color="black">false</font>> color="black"]
  node12860 -> node12861 [ color="black"]
  node12858 -> node12859 [ color="black"]
  node12849 -> node12850 [ color="black"]
  node12848 -> node12849 [ color="black"]
  node12846 -> node12848 [ color="black"]
  node12856 -> node12857 [ color="black"]
  node12851 -> node12853 [ color="black"]
  node12859 -> node12860 [ color="black"]
  node12862 -> node12863 [ color="black"]
  node12861 -> node12862 [ color="black"]
  node12853 -> node12854 [ color="black"]
  node12855 -> node12856 [label=<<font color="black">true</font>> color="black"]
  node12855 -> node12860 [label=<<font color="black">false</font>> color="black"]
  node12854 -> node12855 [ color="black"]
  node12852 -> node12853 [ color="black"]
  node12863 -> node12864 [ color="black"]
}
