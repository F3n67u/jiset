digraph {
  node12575 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let F = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12568 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let F = pattern.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12578 [shape=cds, label=<<font color="black">19:app __x6__ = (RegExpAlloc newTarget)</font>> color="black" fillcolor="white" style=filled]
  node12571 [shape=cds, label=<<font color="black">12:app __x4__ = (Get pattern &quot;source&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12558 [shape=diamond, label=<<font color="black">(&amp;&amp; (= patternIsRegExp true) (= flags undefined))</font>> color="black" fillcolor="white" style=filled]
  node12566 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let P = pattern.OriginalSource</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12580 [shape=cds, label=<<font color="black">20:app __x7__ = (RegExpInitialize O P F)</font>> color="black" fillcolor="white" style=filled]
  node12567 [shape=diamond, label=<<font color="black">(= flags undefined)</font>> color="black" fillcolor="white" style=filled]
  node12555 [shape=diamond, label=<<font color="black">(! (= NewTarget undefined))</font>> color="black" fillcolor="white" style=filled]
  node12560 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let patternConstructor = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12579 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let O = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12564 [shape=cds, label=<<font color="black">16:app __x3__ = (Type pattern)</font>> color="black" fillcolor="white" style=filled]
  node12570 [shape=diamond, label=<<font color="black">(= patternIsRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node12549 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12554 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let patternIsRegExp = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12559 [shape=cds, label=<<font color="black">5:app __x1__ = (Get pattern &quot;constructor&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12581 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12565 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x3__ Object) (! (= pattern.RegExpMatcher absent)))</font>> color="black" fillcolor="white" style=filled]
  node12561 [shape=cds, label=<<font color="black">6:app __x2__ = (SameValue newTarget patternConstructor)</font>> color="black" fillcolor="white" style=filled]
  node12550 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12576 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let F = flags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12577 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let P = pattern</td></tr>
      <tr><td align="left">18:let F = flags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12553 [shape=cds, label=<<font color="black">0:app __x0__ = (IsRegExp pattern)</font>> color="black" fillcolor="white" style=filled]
  node12572 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let P = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12562 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node12551 [shape=cds, label=<<font color="black">app pattern = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12573 [shape=diamond, label=<<font color="black">(= flags undefined)</font>> color="black" fillcolor="white" style=filled]
  node12556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12557 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12563 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return pattern</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12569 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let F = flags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12552 [shape=cds, label=<<font color="black">app flags = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12574 [shape=cds, label=<<font color="black">14:app __x5__ = (Get pattern &quot;flags&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12580 -> node12581 [ color="black"]
  node12556 -> node12564 [ color="black"]
  node12563 -> node12564 [ color="black"]
  node12554 -> node12555 [ color="black"]
  node12569 -> node12578 [ color="black"]
  node12567 -> node12568 [label=<<font color="black">true</font>> color="black"]
  node12567 -> node12569 [label=<<font color="black">false</font>> color="black"]
  node12551 -> node12552 [ color="black"]
  node12579 -> node12580 [ color="black"]
  node12565 -> node12566 [label=<<font color="black">true</font>> color="black"]
  node12565 -> node12570 [label=<<font color="black">false</font>> color="black"]
  node12560 -> node12561 [ color="black"]
  node12573 -> node12574 [label=<<font color="black">true</font>> color="black"]
  node12573 -> node12576 [label=<<font color="black">false</font>> color="black"]
  node12552 -> node12553 [ color="black"]
  node12576 -> node12578 [ color="black"]
  node12558 -> node12559 [label=<<font color="black">true</font>> color="black"]
  node12558 -> node12564 [label=<<font color="black">false</font>> color="black"]
  node12566 -> node12567 [ color="black"]
  node12571 -> node12572 [ color="black"]
  node12574 -> node12575 [ color="black"]
  node12581 -> node12550 [ color="black"]
  node12555 -> node12556 [label=<<font color="black">true</font>> color="black"]
  node12555 -> node12557 [label=<<font color="black">false</font>> color="black"]
  node12549 -> node12551 [ color="black"]
  node12578 -> node12579 [ color="black"]
  node12562 -> node12563 [label=<<font color="black">true</font>> color="black"]
  node12562 -> node12564 [label=<<font color="black">false</font>> color="black"]
  node12577 -> node12578 [ color="black"]
  node12575 -> node12578 [ color="black"]
  node12557 -> node12558 [ color="black"]
  node12568 -> node12578 [ color="black"]
  node12564 -> node12565 [ color="black"]
  node12561 -> node12562 [ color="black"]
  node12570 -> node12571 [label=<<font color="black">true</font>> color="black"]
  node12570 -> node12577 [label=<<font color="black">false</font>> color="black"]
  node12553 -> node12554 [ color="black"]
  node12559 -> node12560 [ color="black"]
  node12572 -> node12573 [ color="black"]
}
