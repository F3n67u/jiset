digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 3i)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">(&lt; sourceIndex sourceLen)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let exists = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=cds, label=<<font color="black">app depth = (GetArgument argumentsList 4i)</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let targetIndex = start</td></tr>
      <tr><td align="left">1:let sourceIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">4:app __x1__ = (HasProperty source P)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let P = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">app mapperFunction = (GetArgument argumentsList 5i)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=diamond, label=<<font color="black">(! (= mapperFunction absent))</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">3:app __x0__ = (ToString sourceIndex)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">app thisArg = (GetArgument argumentsList 6i)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">app sourceLen = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=diamond, label=<<font color="black">(= exists true)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=cds, label=<<font color="black">12:app __x4__ = (IsArray element)</font>> color="black" fillcolor="white" style=filled]
  node37 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:sourceIndex = (+ sourceIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:shouldFlatten = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=cds, label=<<font color="black">9:app __x3__ = (Call mapperFunction thisArg (new [element, sourceIndex, source]))</font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let elementLen = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:element = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node33 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=cds, label=<<font color="black">14:app __x6__ = (ToLength [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:return targetIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let element = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node32 [shape=diamond, label=<<font color="black">(! (&lt; targetIndex (- (** 2.0 53i) 1i)))</font>> color="black" fillcolor="white" style=filled]
  node34 [shape=cds, label=<<font color="black">18:app __x8__ = (ToString targetIndex)</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let shouldFlatten = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=cds, label=<<font color="black">14:app __x5__ = (Get element &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app source = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node35 [shape=cds, label=<<font color="black">18:app __x9__ = (CreateDataPropertyOrThrow target [! __x8__] element)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=cds, label=<<font color="black">6:app __x2__ = (Get source P)</font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:targetIndex = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=diamond, label=<<font color="black">(= shouldFlatten true)</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=diamond, label=<<font color="black">(&lt; 0i depth)</font>> color="black" fillcolor="white" style=filled]
  node36 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? __x9__]</td></tr>
      <tr><td align="left">19:targetIndex = (+ targetIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=cds, label=<<font color="black">15:app __x7__ = (FlattenIntoArray target element elementLen targetIndex (- depth 1i))</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:assert (! (= thisArg absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 -> node12 [ color="black"]
  node0 -> node2 [ color="black"]
  node9 -> node10 [ color="black"]
  node27 -> node28 [ color="black"]
  node14 -> node15 [ color="black"]
  node4 -> node5 [ color="black"]
  node25 -> node26 [ color="black"]
  node31 -> node37 [ color="black"]
  node16 -> node17 [ color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node38 [label=<<font color="black">false</font>> color="black"]
  node17 -> node18 [ color="black"]
  node33 -> node34 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node28 -> node29 [ color="black"]
  node26 -> node27 [label=<<font color="black">true</font>> color="black"]
  node26 -> node32 [label=<<font color="black">false</font>> color="black"]
  node37 -> node10 [ color="black"]
  node29 -> node30 [ color="black"]
  node38 -> node1 [ color="black"]
  node7 -> node8 [ color="black"]
  node34 -> node35 [ color="black"]
  node2 -> node3 [ color="black"]
  node23 -> node24 [label=<<font color="black">true</font>> color="black"]
  node23 -> node26 [label=<<font color="black">false</font>> color="black"]
  node19 -> node20 [ color="black"]
  node13 -> node14 [ color="black"]
  node35 -> node36 [ color="black"]
  node12 -> node13 [ color="black"]
  node18 -> node19 [label=<<font color="black">true</font>> color="black"]
  node18 -> node22 [label=<<font color="black">false</font>> color="black"]
  node36 -> node37 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node30 -> node31 [ color="black"]
  node32 -> node33 [label=<<font color="black">true</font>> color="black"]
  node32 -> node34 [label=<<font color="black">false</font>> color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [ color="black"]
  node20 -> node21 [ color="black"]
  node24 -> node25 [ color="black"]
  node15 -> node16 [label=<<font color="black">true</font>> color="black"]
  node15 -> node37 [label=<<font color="black">false</font>> color="black"]
}
