{
  [0] let keys = (new [])
  [2] app __x0__ = (IsDetachedBuffer O.ViewedArrayBuffer)
  [2] if (= __x0__ false) {
    [3] let i = (+ 0i 0i)
    [3] let __x1__ = (+ O.ArrayLength 0i)
    [3] while (< i __x1__) ??? "Add ! ToString ( 𝔽 ( id:{i} ) ) as the last element of id:{keys} ."
  } else [1] {}
  [5] ??? "For each own property key id:{P} of id:{O} such that Type ( id:{P} ) is String and id:{P} is not an integer index , in ascending chronological order of property creation , do step-list:{...}"
  [7] ??? "For each own property key id:{P} of id:{O} such that Type ( id:{P} ) is Symbol , in ascending chronological order of property creation , do step-list:{...}"
  [9] app __x2__ = (WrapCompletion keys)
  [9] return __x2__
}