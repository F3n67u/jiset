digraph {
  node12344 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return z</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12334 [shape=cds, label=<<font color="black">app __x0__ = (c x)</font>> color="black" fillcolor="white" style=filled]
  node12339 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12351 [shape=cds, label=<<font color="black">17:app __x5__ = (c x)</font>> color="black" fillcolor="white" style=filled]
  node12347 [shape=cds, label=<<font color="black">15:app __x4__ = (m xr d)</font>> color="black" fillcolor="white" style=filled]
  node12340 [shape=diamond, label=<<font color="black">(= greedy false)</font>> color="black" fillcolor="white" style=filled]
  node12346 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12349 [shape=diamond, label=<<font color="black">(! (= z CONST_failure))</font>> color="black" fillcolor="white" style=filled]
  node12337 [shape=diamond, label=<<font color="black">(! (= min 0i))</font>> color="black" fillcolor="white" style=filled]
  node12332 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12345 [shape=cds, label=<<font color="black">14:app __x3__ = (m xr d)</font>> color="black" fillcolor="white" style=filled]
  node12343 [shape=diamond, label=<<font color="black">(! (= z CONST_failure))</font>> color="black" fillcolor="white" style=filled]
  node12338 [shape=cds, label=<<font color="black">app __x1__ = (m xr d)</font>> color="black" fillcolor="white" style=filled]
  node12333 [shape=diamond, label=<<font color="black">(= max 0i)</font>> color="black" fillcolor="white" style=filled]
  node12350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return z</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12336 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;Create an internal Continuation closure id:{d} that takes one State argument id:{y} and performs the following steps when evaluated : in:{} out:{}&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{cap} be a fresh copy of id:{x} ' s id:{captures} List .&quot;</td></tr>
      <tr><td align="left">7:??? &quot;For every integer id:{k} that satisfies id:{parenIndex} &lt; id:{k} and id:{k} &le; id:{parenIndex} + id:{parenCount} , set id:{cap} [ id:{k} ] to value:{undefined} .&quot;</td></tr>
      <tr><td align="left">8:let e = x.endIndex</td></tr>
      <tr><td align="left">9:let xr = (new [e, cap])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12341 [shape=cds, label=<<font color="black">12:app __x2__ = (c x)</font>> color="black" fillcolor="white" style=filled]
  node12342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let z = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12331 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12348 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let z = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12338 -> node12339 [ color="black"]
  node12346 -> node12347 [ color="black"]
  node12341 -> node12342 [ color="black"]
  node12337 -> node12338 [label=<<font color="black">true</font>> color="black"]
  node12337 -> node12340 [label=<<font color="black">false</font>> color="black"]
  node12345 -> node12346 [ color="black"]
  node12349 -> node12350 [label=<<font color="black">true</font>> color="black"]
  node12349 -> node12351 [label=<<font color="black">false</font>> color="black"]
  node12334 -> node12335 [ color="black"]
  node12350 -> node12351 [ color="black"]
  node12331 -> node12333 [ color="black"]
  node12351 -> node12352 [ color="black"]
  node12340 -> node12341 [label=<<font color="black">true</font>> color="black"]
  node12340 -> node12347 [label=<<font color="black">false</font>> color="black"]
  node12339 -> node12340 [ color="black"]
  node12343 -> node12344 [label=<<font color="black">true</font>> color="black"]
  node12343 -> node12345 [label=<<font color="black">false</font>> color="black"]
  node12352 -> node12332 [ color="black"]
  node12348 -> node12349 [ color="black"]
  node12347 -> node12348 [ color="black"]
  node12333 -> node12334 [label=<<font color="black">true</font>> color="black"]
  node12333 -> node12336 [label=<<font color="black">false</font>> color="black"]
  node12335 -> node12336 [ color="black"]
  node12342 -> node12343 [ color="black"]
  node12336 -> node12337 [ color="black"]
  node12344 -> node12345 [ color="black"]
}
