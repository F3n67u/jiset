{
  let M = this
  app __x0__ = (Type M)
  if (! (= __x0__ Object)) throw INTRINSIC_TypeError else {}
  if (= M.MapData absent) throw INTRINSIC_TypeError else {}
  let entries = M.MapData
  let __x1__ = entries
  let __x2__ = 0i
  while (< __x2__ __x1__.length) {
    let p = __x1__[__x2__]
    let __x3__ = true
    __x3__ = (! (= p.Key CONST_empty))
    if __x3__ {
      app __x4__ = (SameValueZero p.Key key)
      __x3__ = (= __x4__ true)
    } else {}
    if __x3__ {
      p.Key = CONST_empty
      p.Value = CONST_empty
      return true
    } else {}
    __x2__ = (+ __x2__ 1i)
  }
  return false
}