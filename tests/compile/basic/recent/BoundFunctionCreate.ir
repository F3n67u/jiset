{
  assert (= (typeof targetFunction) Object)
  app __x0__ = (targetFunction.GetPrototypeOf targetFunction)
  let proto = [? __x0__]
  let internalSlotsList = (new ["BoundTargetFunction", "BoundThis", "BoundArguments", "Prototype", "Extensible"])
  app __x1__ = (MakeBasicObject internalSlotsList)
  let obj = [! __x1__]
  obj.Prototype = proto
  obj.Call = ALGORITHM["BoundFunctionExoticObject.Call"]
  app __x2__ = (IsConstructor targetFunction)
  if (= __x2__ true) obj.Construct = ALGORITHM["BoundFunctionExoticObject.Construct"] else {}
  obj.BoundTargetFunction = targetFunction
  obj.BoundThis = boundThis
  obj.BoundArguments = boundArgs
  return obj
}