digraph {
  node10609 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10606 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10612 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10614 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10607 [shape=diamond, label=<<font color="black">(! (|| (= NewTarget undefined) (= NewTarget GLOBAL_context.Function)))</font>> color="black" fillcolor="white" style=filled]
  node10611 [shape=cds, label=<<font color="black">app __x1__ = (ObjectCreate INTRINSIC_ObjectPrototype)</font>> color="black" fillcolor="white" style=filled]
  node10604 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10613 [shape=cds, label=<<font color="black">3:app __x2__ = (ToObject value)</font>> color="black" fillcolor="white" style=filled]
  node10608 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_ObjectPrototype)</font>> color="black" fillcolor="white" style=filled]
  node10605 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10610 [shape=diamond, label=<<font color="black">(|| (|| (= value null) (= value undefined)) (= value absent))</font>> color="black" fillcolor="white" style=filled]
  node10614 -> node10605 [ color="black"]
  node10608 -> node10609 [ color="black"]
  node10609 -> node10610 [ color="black"]
  node10613 -> node10614 [ color="black"]
  node10612 -> node10613 [ color="black"]
  node10604 -> node10606 [ color="black"]
  node10610 -> node10611 [label=<<font color="black">true</font>> color="black"]
  node10610 -> node10613 [label=<<font color="black">false</font>> color="black"]
  node10606 -> node10607 [ color="black"]
  node10611 -> node10612 [ color="black"]
  node10607 -> node10608 [label=<<font color="black">true</font>> color="black"]
  node10607 -> node10610 [label=<<font color="black">false</font>> color="black"]
}
