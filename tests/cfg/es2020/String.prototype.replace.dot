digraph {
  node13886 [shape=cds, label=<<font color="black">5:app __x3__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13901 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13874 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let functionalReplace = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13892 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node13883 [shape=diamond, label=<<font color="black">(! (= replacer undefined))</font>> color="black" fillcolor="white" style=filled]
  node13900 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let replStr = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13896 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node13898 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let replValue = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13903 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let replStr = [! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13880 [shape=diamond, label=<<font color="black">(! (|| (= searchValue undefined) (= searchValue null)))</font>> color="black" fillcolor="white" style=filled]
  node13897 [shape=cds, label=<<font color="black">12:app __x7__ = (Call replaceValue undefined (new [matched, pos, string]))</font>> color="black" fillcolor="white" style=filled]
  node13902 [shape=cds, label=<<font color="black">16:app __x9__ = (GetSubstitution matched string pos captures undefined replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13887 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let string = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13890 [shape=cds, label=<<font color="black">7:app __x5__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13877 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:replaceValue = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13881 [shape=cds, label=<<font color="black">2:app __x1__ = (GetMethod searchValue SYMBOL_replace)</font>> color="black" fillcolor="white" style=filled]
  node13878 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:??? &quot;Search id:{string} for the first occurrence of id:{searchString} and let id:{pos} be the index within id:{string} of the first code unit of the matched substring and let id:{matched} be id:{searchString} . If no occurrences of id:{searchString} were found , return id:{string} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13885 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13875 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13904 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let tailPos = (+ pos matched.length)</td></tr>
      <tr><td align="left">18:??? &quot;Let id:{newString} be the string - concatenation of the first id:{pos} code units of id:{string} , id:{replStr} , and the trailing substring of id:{string} starting at index id:{tailPos} . If id:{pos} is 0 , the first element of the concatenation will be the empty String .&quot;</td></tr>
      <tr><td align="left">19:return newString</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13899 [shape=cds, label=<<font color="black">13:app __x8__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node13876 [shape=cds, label=<<font color="black">app searchValue = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13888 [shape=cds, label=<<font color="black">6:app __x4__ = (ToString searchValue)</font>> color="black" fillcolor="white" style=filled]
  node13884 [shape=cds, label=<<font color="black">4:app __x2__ = (Call replacer searchValue (new [O, replaceValue]))</font>> color="black" fillcolor="white" style=filled]
  node13889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let searchString = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13882 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let replacer = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13893 [shape=cds, label=<<font color="black">9:app __x6__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13899 -> node13900 [ color="black"]
  node13889 -> node13890 [ color="black"]
  node13884 -> node13885 [ color="black"]
  node13893 -> node13894 [ color="black"]
  node13904 -> node13875 [ color="black"]
  node13877 -> node13878 [ color="black"]
  node13896 -> node13897 [label=<<font color="black">true</font>> color="black"]
  node13896 -> node13901 [label=<<font color="black">false</font>> color="black"]
  node13886 -> node13887 [ color="black"]
  node13882 -> node13883 [ color="black"]
  node13887 -> node13888 [ color="black"]
  node13876 -> node13877 [ color="black"]
  node13878 -> node13879 [ color="black"]
  node13897 -> node13898 [ color="black"]
  node13883 -> node13884 [label=<<font color="black">true</font>> color="black"]
  node13883 -> node13886 [label=<<font color="black">false</font>> color="black"]
  node13880 -> node13881 [label=<<font color="black">true</font>> color="black"]
  node13880 -> node13886 [label=<<font color="black">false</font>> color="black"]
  node13891 -> node13892 [ color="black"]
  node13900 -> node13904 [ color="black"]
  node13881 -> node13882 [ color="black"]
  node13874 -> node13876 [ color="black"]
  node13898 -> node13899 [ color="black"]
  node13892 -> node13893 [label=<<font color="black">true</font>> color="black"]
  node13892 -> node13895 [label=<<font color="black">false</font>> color="black"]
  node13901 -> node13902 [ color="black"]
  node13894 -> node13895 [ color="black"]
  node13885 -> node13886 [ color="black"]
  node13903 -> node13904 [ color="black"]
  node13879 -> node13880 [ color="black"]
  node13895 -> node13896 [ color="black"]
  node13888 -> node13889 [ color="black"]
  node13902 -> node13903 [ color="black"]
  node13890 -> node13891 [ color="black"]
}
