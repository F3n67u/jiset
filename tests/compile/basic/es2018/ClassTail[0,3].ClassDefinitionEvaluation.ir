{
  access __x0__ = (GLOBAL_context "LexicalEnvironment")
  let lex = __x0__
  app __x1__ = (NewDeclarativeEnvironment lex)
  let classScope = __x1__
  let classScopeEnvRec = classScope.EnvironmentRecord
  if (! (= className undefined)) {
    app __x2__ = (classScopeEnvRec.CreateImmutableBinding classScopeEnvRec className true)
    __x2__
  } else {}
  if (= ClassHeritage absent) {
    let protoParent = INTRINSIC_ObjectPrototype
    let constructorParent = INTRINSIC_FunctionPrototype
  } else {
    GLOBAL_context.LexicalEnvironment = classScope
    access __x3__ = (ClassHeritage "Evaluation")
    let superclass = __x3__
    GLOBAL_context.LexicalEnvironment = lex
    [? superclass]
    if (= superclass null) {
      let protoParent = null
      let constructorParent = INTRINSIC_FunctionPrototype
    } else {
      app __x4__ = (IsConstructor superclass)
      if (= __x4__ false) throw INTRINSIC_TypeError else {
        app __x5__ = (Get superclass "prototype")
        let protoParent = [? __x5__]
        app __x6__ = (Type protoParent)
        if (! (|| (= __x6__ Object) (= __x6__ Null))) throw INTRINSIC_TypeError else {}
        let constructorParent = superclass
      }
    }
  }
  app __x7__ = (ObjectCreate protoParent)
  let proto = __x7__
  if (= ClassBody absent) let constructor = CONST_empty else {
    access __x8__ = (ClassBody "ConstructorMethod")
    let constructor = __x8__
  }
  if (= constructor CONST_empty) if (! (= ClassHeritage absent)) ??? "Set id:{constructor} to the result of parsing the source text in:{} out:{}" else ??? "Set id:{constructor} to the result of parsing the source text in:{} out:{}" else {}
  GLOBAL_context.LexicalEnvironment = classScope
  access __x9__ = (constructor "DefineMethod")
  app __x10__ = (__x9__ proto constructorParent)
  let constructorInfo = __x10__
  app __x11__ = (IsAbruptCompletion constructorInfo)
  assert (! __x11__)
  let F = constructorInfo.Closure
  if (! (= ClassHeritage absent)) F.ConstructorKind = "derived" else {}
  app __x12__ = (MakeConstructor F false proto)
  __x12__
  app __x13__ = (MakeClassConstructor F)
  __x13__
  app __x14__ = (CreateMethodProperty proto "constructor" F)
  __x14__
  if (= ClassBody absent) let methods = (new []) else {
    access __x15__ = (ClassBody "NonConstructorMethodDefinitions")
    let methods = __x15__
  }
  let __x16__ = methods
  let __x17__ = 0i
  while (< __x17__ __x16__.length) {
    let m = __x16__[__x17__]
    access __x18__ = (m "IsStatic")
    if (= __x18__ false) {
      access __x19__ = (m "PropertyDefinitionEvaluation")
      app __x20__ = (__x19__ proto false)
      let status = __x20__
    } else {
      access __x21__ = (m "PropertyDefinitionEvaluation")
      app __x22__ = (__x21__ F false)
      let status = __x22__
    }
    app __x23__ = (IsAbruptCompletion status)
    if __x23__ {
      GLOBAL_context.LexicalEnvironment = lex
      app __x24__ = (Completion status)
      return __x24__
    } else {}
    __x17__ = (+ __x17__ 1i)
  }
  GLOBAL_context.LexicalEnvironment = lex
  if (! (= className undefined)) {
    app __x25__ = (classScopeEnvRec.InitializeBinding classScopeEnvRec className F)
    __x25__
  } else {}
  return F
}