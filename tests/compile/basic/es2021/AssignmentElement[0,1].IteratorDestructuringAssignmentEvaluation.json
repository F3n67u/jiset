["If", {
  "nt": "DestructuringAssignmentTarget"
}, "is", "neither", "an", {
  "nt": "ObjectLiteral"
}, "nor", "an", {
  "nt": "ArrayLiteral"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "lref"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "DestructuringAssignmentTarget"
}, ".", {
  "k": 1
}, "ReturnIfAbrupt", "(", {
  "id": "lref"
}, ")", ".", {
  "k": 2
}, {
  "out": null
}, {
  "k": 0
}, "If", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Done", "]", "]", "is", {
  "value": "false"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "next"
}, "be", "IteratorStep", "(", {
  "id": "iteratorRecord"
}, ")", ".", {
  "k": 4
}, "If", {
  "id": "next"
}, "is", "an", "abrupt", "completion", ",", "set", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Done", "]", "]", "to", {
  "value": "true"
}, ".", {
  "k": 5
}, "ReturnIfAbrupt", "(", {
  "id": "next"
}, ")", ".", {
  "k": 6
}, "If", {
  "id": "next"
}, "is", {
  "value": "false"
}, ",", "set", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Done", "]", "]", "to", {
  "value": "true"
}, ".", {
  "k": 7
}, "Else", ",", {
  "in": null
}, "Let", {
  "id": "value"
}, "be", "IteratorValue", "(", {
  "id": "next"
}, ")", ".", {
  "k": 9
}, "If", {
  "id": "value"
}, "is", "an", "abrupt", "completion", ",", "set", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Done", "]", "]", "to", {
  "value": "true"
}, ".", {
  "k": 10
}, "ReturnIfAbrupt", "(", {
  "id": "value"
}, ")", ".", {
  "k": 11
}, {
  "out": null
}, {
  "k": 8
}, {
  "out": null
}, {
  "k": 3
}, "If", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Done", "]", "]", "is", {
  "value": "true"
}, ",", "let", {
  "id": "value"
}, "be", {
  "value": "undefined"
}, ".", {
  "k": 12
}, "If", {
  "nt": "Initializer"
}, "is", "present", "and", {
  "id": "value"
}, "is", {
  "value": "undefined"
}, ",", "then", {
  "in": null
}, "If", "IsAnonymousFunctionDefinition", "(", {
  "nt": "Initializer"
}, ")", "is", {
  "value": "true"
}, "and", "IsIdentifierRef", "of", {
  "nt": "DestructuringAssignmentTarget"
}, "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "v"
}, "be", "?", "NamedEvaluation", "of", {
  "nt": "Initializer"
}, "with", "argument", {
  "id": "lref"
}, ".", "[", "[", "ReferencedName", "]", "]", ".", {
  "k": 15
}, {
  "out": null
}, {
  "k": 14
}, "Else", ",", {
  "in": null
}, "Let", {
  "id": "defaultValue"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "Initializer"
}, ".", {
  "k": 17
}, "Let", {
  "id": "v"
}, "be", "?", "GetValue", "(", {
  "id": "defaultValue"
}, ")", ".", {
  "k": 18
}, {
  "out": null
}, {
  "k": 16
}, {
  "out": null
}, {
  "k": 13
}, "Else", ",", "let", {
  "id": "v"
}, "be", {
  "id": "value"
}, ".", {
  "k": 19
}, "If", {
  "nt": "DestructuringAssignmentTarget"
}, "is", "an", {
  "nt": "ObjectLiteral"
}, "or", "an", {
  "nt": "ArrayLiteral"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "nestedAssignmentPattern"
}, "be", "the", {
  "nt": "AssignmentPattern"
}, "that", "is", "covered", "by", {
  "nt": "DestructuringAssignmentTarget"
}, ".", {
  "k": 21
}, "Return", "the", "result", "of", "performing", "DestructuringAssignmentEvaluation", "of", {
  "id": "nestedAssignmentPattern"
}, "with", {
  "id": "v"
}, "as", "the", "argument", ".", {
  "k": 22
}, {
  "out": null
}, {
  "k": 20
}, "Return", "?", "PutValue", "(", {
  "id": "lref"
}, ",", {
  "id": "v"
}, ")", ".", {
  "k": 23
}]