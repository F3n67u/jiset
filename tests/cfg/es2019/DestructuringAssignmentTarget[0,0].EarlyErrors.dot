digraph {
  node18360 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18365 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node18356 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18370 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18361 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18367 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (! (= __x3__ CONST_simple))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18354 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18363 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18358 [shape=diamond, label=<<font color="black">(= absent (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new [])))</font>> color="black" fillcolor="white" style=filled]
  node18369 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18353 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18368 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node18364 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let __x2__ = true</td></tr>
      <tr><td align="left">1:__x2__ = (! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18357 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x1__ = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = true</td></tr>
      <tr><td align="left">0:__x0__ = (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18366 [shape=cds, label=<<font color="black">app __x3__ = (AssignmentTargetType LeftHandSideExpression)</font>> color="black" fillcolor="white" style=filled]
  node18359 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x1__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18362 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18362 -> node18364 [ color="black"]
  node18353 -> node18355 [ color="black"]
  node18355 -> node18356 [ color="black"]
  node18365 -> node18366 [label=<<font color="black">true</font>> color="black"]
  node18365 -> node18368 [label=<<font color="black">false</font>> color="black"]
  node18367 -> node18368 [ color="black"]
  node18360 -> node18361 [ color="black"]
  node18368 -> node18369 [label=<<font color="black">true</font>> color="black"]
  node18368 -> node18370 [label=<<font color="black">false</font>> color="black"]
  node18363 -> node18364 [ color="black"]
  node18358 -> node18359 [label=<<font color="black">true</font>> color="black"]
  node18358 -> node18360 [label=<<font color="black">false</font>> color="black"]
  node18356 -> node18357 [label=<<font color="black">true</font>> color="black"]
  node18356 -> node18361 [label=<<font color="black">false</font>> color="black"]
  node18359 -> node18360 [ color="black"]
  node18361 -> node18362 [label=<<font color="black">true</font>> color="black"]
  node18361 -> node18363 [label=<<font color="black">false</font>> color="black"]
  node18370 -> node18354 [ color="black"]
  node18366 -> node18367 [ color="black"]
  node18357 -> node18358 [ color="black"]
  node18369 -> node18354 [ color="black"]
  node18364 -> node18365 [ color="black"]
}
