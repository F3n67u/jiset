{
  [0] assert (= (typeof Desc) "PropertyDescriptor")
  [1] let like = (new Record("Value" -> undefined, "Writable" -> false, "Get" -> undefined, "Set" -> undefined, "Enumerable" -> false, "Configurable" -> false))
  [5] app __x0__ = (IsGenericDescriptor Desc)
  [5] app __x1__ = (IsDataDescriptor Desc)
  [5] if (|| (= __x0__ true) (= __x1__ true)) {
    [3] if (= Desc.Value absent) Desc.Value = like.Value else [15] {}
    [4] if (= Desc.Writable absent) Desc.Writable = like.Writable else [15] {}
  } else {
    [6] if (= Desc.Get absent) Desc.Get = like.Get else [15] {}
    [7] if (= Desc.Set absent) Desc.Set = like.Set else [15] {}
  }
  [8] if (= Desc.Enumerable absent) Desc.Enumerable = like.Enumerable else [15] {}
  [9] if (= Desc.Configurable absent) Desc.Configurable = like.Configurable else [15] {}
  [10] app __x2__ = (WrapCompletion Desc)
  [10] return __x2__
}