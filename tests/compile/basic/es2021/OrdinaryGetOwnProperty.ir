{
  app __x0__ = (IsPropertyKey P)
  assert (= __x0__ true)
  if (= O.SubMap[P] absent) return undefined else {}
  let D = (new PropertyDescriptor())
  let X = O.SubMap[P]
  app __x1__ = (IsDataDescriptor X)
  if __x1__ {
    D.Value = X.Value
    D.Writable = X.Writable
  } else {
    app __x2__ = (IsAccessorDescriptor X)
    assert __x2__
    D.Get = X.Get
    D.Set = X.Set
  }
  D.Enumerable = X.Enumerable
  D.Configurable = X.Configurable
  return D
}