digraph {
  node12559 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12561 [shape=diamond, label=<<font color="black">(&lt; j i)</font>> color="black" fillcolor="white" style=filled]
  node12558 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12562 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12563 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:??? &quot;Return the set containing all characters numbered id:{i} through id:{j} , inclusive .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12560 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;If id:{A} does not contain exactly one character or id:{B} does not contain exactly one character , throw a value:{SyntaxError} exception .&quot;</td></tr>
      <tr><td align="left">1:let a = A[0i]</td></tr>
      <tr><td align="left">2:let b = B[0i]</td></tr>
      <tr><td align="left">3:let i = a</td></tr>
      <tr><td align="left">4:let j = b</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12562 -> node12563 [ color="black"]
  node12563 -> node12559 [ color="black"]
  node12561 -> node12562 [label=<<font color="black">true</font>> color="black"]
  node12561 -> node12563 [label=<<font color="black">false</font>> color="black"]
  node12558 -> node12560 [ color="black"]
  node12560 -> node12561 [ color="black"]
}
