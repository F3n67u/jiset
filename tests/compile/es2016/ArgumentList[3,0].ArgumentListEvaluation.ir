{
  [0] access __x0__ = (ArgumentList "Evaluation")
  [0] let precedingArgs = __x0__
  [1] access __x1__ = (AssignmentExpression "Evaluation")
  [1] let spreadRef = __x1__
  [2] app __x2__ = (GetValue spreadRef)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [6] {}
  [2] app __x3__ = (GetIterator __x2__)
  [2] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [6] {}
  [2] let iterator = __x3__
  [3] while true {
    [4] app __x4__ = (IteratorStep iterator)
    [4] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [6] {}
    [4] let next = __x4__
    [5] if (= next false) {
      app __x5__ = (WrapCompletion precedingArgs)
      return __x5__
    } else [6] {}
    [6] app __x6__ = (IteratorValue next)
    [6] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [6] {}
    [6] let nextArg = __x6__
    [7] append nextArg -> precedingArgs
  }
}