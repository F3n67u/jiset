{
  app __x0__ = (ToObject this)
  let O = [? __x0__]
  app __x1__ = (Get O "length")
  app __x2__ = (ToLength [? __x1__])
  let len = [? __x2__]
  if (= len 0i) return -1i else {}
  if (! (= fromIndex absent)) {
    app __x3__ = (ToInteger fromIndex)
    let n = [? __x3__]
  } else let n = (- len 1i)
  if (! (< n 0i)) if (= n -0.0) let k = 0i else {
    app __x4__ = (min n (- len 1i))
    let k = __x4__
  } else let k = (+ len n)
  while (! (< k 0i)) {
    app __x5__ = (ToString k)
    app __x6__ = (HasProperty O [! __x5__])
    let kPresent = [? __x6__]
    if (= kPresent true) {
      app __x7__ = (ToString k)
      app __x8__ = (Get O [! __x7__])
      let elementK = [? __x8__]
      app __x9__ = (StrictEqualityComparison searchElement elementK)
      let same = __x9__
      if (= same true) return k else {}
    } else {}
    k = (- k 1i)
  }
  return -1i
}