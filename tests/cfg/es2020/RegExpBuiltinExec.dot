digraph {
  node14709 [shape=diamond, label=<<font color="black">(&lt; length lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14716 [shape=diamond, label=<<font color="black">(= r CONST_failure)</font>> color="black" fillcolor="white" style=filled]
  node14751 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">58:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14697 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14733 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14745 [shape=cds, label=<<font color="black">app __x14__ = (UTF16Encode captureI)</font>> color="black" fillcolor="white" style=filled]
  node14735 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:[! __x10__]</td></tr>
      <tr><td align="left">37:??? &quot;Let id:{matchedSubstr} be the matched substring ( i . e . the portion of id:{S} between offset id:{lastIndex} inclusive and offset id:{e} exclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14725 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:??? &quot;id:{e} is an index into the id:{Input} character list , derived from id:{S} , matched by id:{matcher} . Let id:{eUTF} be the smallest index into id:{S} that corresponds to the character at element id:{e} of id:{Input} . If id:{e} is greater than or equal to the number of elements in id:{Input} , then id:{eUTF} is the number of code units in id:{S} .&quot;</td></tr>
      <tr><td align="left">28:e = eUTF</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14719 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x5__]</td></tr>
      <tr><td align="left">20:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14744 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node14739 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:[! __x12__]</td></tr>
      <tr><td align="left">44:let i = (+ 0i 1i)</td></tr>
      <tr><td align="left">44:let __x13__ = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14727 [shape=cds, label=<<font color="black">30:app __x7__ = (Set R &quot;lastIndex&quot; e true)</font>> color="black" fillcolor="white" style=filled]
  node14691 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ String)</td></tr>
      <tr><td align="left">2:let length = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14748 [shape=cds, label=<<font color="black">app __x15__ = (ToString i)</font>> color="black" fillcolor="white" style=filled]
  node14750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[! __x16__]</td></tr>
      <tr><td align="left">??? &quot;If the id:{i} sup:{th} capture of id:{R} was defined with a nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:??? &quot;Let id:{n} be the number of elements in id:{r} ' s id:{captures} List . ( This is the same value as link:{unhandled: sec-notation} ' s id:{NcapturingParens} . )&quot;</td></tr>
      <tr><td align="left">32:assert (&lt; n (- (** 2.0 32i) 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{captureI} be id:{i} sup:{th} element of id:{r} ' s id:{captures} List .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14694 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let lastIndex = [? __x2__]</td></tr>
      <tr><td align="left">4:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14726 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node14689 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14737 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:[! __x11__]</td></tr>
      <tr><td align="left">39:??? &quot;If id:{R} contains any nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">41:??? &quot;Else , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14701 [shape=diamond, label=<<font color="black">(&amp;&amp; (= global false) (= sticky false))</font>> color="black" fillcolor="white" style=filled]
  node14690 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node14718 [shape=cds, label=<<font color="black">19:app __x5__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node14722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">matchSucceeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14730 [shape=cds, label=<<font color="black">33:app __x8__ = (ArrayCreate (+ n 1i))</font>> color="black" fillcolor="white" style=filled]
  node14712 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14698 [shape=diamond, label=<<font color="black">(contains flags &quot;y&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14693 [shape=cds, label=<<font color="black">3:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node14740 [shape=diamond, label=<<font color="black">(&lt; i __x13__)</font>> color="black" fillcolor="white" style=filled]
  node14721 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:lastIndex = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14734 [shape=cds, label=<<font color="black">36:app __x10__ = (CreateDataPropertyOrThrow A &quot;input&quot; S)</font>> color="black" fillcolor="white" style=filled]
  node14713 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14708 [shape=diamond, label=<<font color="black">(= matchSucceeded false)</font>> color="black" fillcolor="white" style=filled]
  node14702 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">lastIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14746 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = [! __x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14714 [shape=cds, label=<<font color="black">16:app __x4__ = (matcher S lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14731 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let A = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14743 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14696 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14711 [shape=cds, label=<<font color="black">14:app __x3__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node14736 [shape=cds, label=<<font color="black">38:app __x11__ = (CreateDataPropertyOrThrow A &quot;0&quot; matchedSubstr)</font>> color="black" fillcolor="white" style=filled]
  node14699 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14706 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14724 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node14688 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14720 [shape=cds, label=<<font color="black">21:app __x6__ = (AdvanceStringIndex S lastIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node14703 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let matcher = R.RegExpMatcher</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14692 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14728 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:[? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14707 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let matchSucceeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14747 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">assert (= fullUnicode false)</td></tr>
      <tr><td align="left">let capturedValue = captureI</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14749 [shape=cds, label=<<font color="black">app __x16__ = (CreateDataPropertyOrThrow A [! __x15__] capturedValue)</font>> color="black" fillcolor="white" style=filled]
  node14732 [shape=cds, label=<<font color="black">35:app __x9__ = (CreateDataPropertyOrThrow A &quot;index&quot; lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14710 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node14695 [shape=diamond, label=<<font color="black">(contains flags &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14742 [shape=diamond, label=<<font color="black">(= captureI undefined)</font>> color="black" fillcolor="white" style=filled]
  node14705 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14715 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let r = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14700 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14738 [shape=cds, label=<<font color="black">43:app __x12__ = (CreateDataPropertyOrThrow A &quot;groups&quot; groups)</font>> color="black" fillcolor="white" style=filled]
  node14723 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let e = r.endIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14704 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14717 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node14724 -> node14725 [label=<<font color="black">true</font>> color="black"]
  node14724 -> node14726 [label=<<font color="black">false</font>> color="black"]
  node14733 -> node14734 [ color="black"]
  node14693 -> node14694 [ color="black"]
  node14747 -> node14748 [ color="black"]
  node14715 -> node14716 [ color="black"]
  node14704 -> node14705 [label=<<font color="black">true</font>> color="black"]
  node14704 -> node14706 [label=<<font color="black">false</font>> color="black"]
  node14740 -> node14741 [label=<<font color="black">true</font>> color="black"]
  node14740 -> node14751 [label=<<font color="black">false</font>> color="black"]
  node14737 -> node14738 [ color="black"]
  node14744 -> node14745 [label=<<font color="black">true</font>> color="black"]
  node14744 -> node14747 [label=<<font color="black">false</font>> color="black"]
  node14700 -> node14701 [ color="black"]
  node14736 -> node14737 [ color="black"]
  node14731 -> node14732 [ color="black"]
  node14745 -> node14746 [ color="black"]
  node14702 -> node14703 [ color="black"]
  node14728 -> node14729 [ color="black"]
  node14719 -> node14720 [ color="black"]
  node14717 -> node14718 [label=<<font color="black">true</font>> color="black"]
  node14717 -> node14720 [label=<<font color="black">false</font>> color="black"]
  node14723 -> node14724 [ color="black"]
  node14732 -> node14733 [ color="black"]
  node14746 -> node14748 [ color="black"]
  node14705 -> node14707 [ color="black"]
  node14749 -> node14750 [ color="black"]
  node14714 -> node14715 [ color="black"]
  node14703 -> node14704 [ color="black"]
  node14750 -> node14740 [ color="black"]
  node14692 -> node14693 [ color="black"]
  node14701 -> node14702 [label=<<font color="black">true</font>> color="black"]
  node14701 -> node14703 [label=<<font color="black">false</font>> color="black"]
  node14721 -> node14708 [ color="black"]
  node14710 -> node14711 [label=<<font color="black">true</font>> color="black"]
  node14710 -> node14713 [label=<<font color="black">false</font>> color="black"]
  node14718 -> node14719 [ color="black"]
  node14696 -> node14698 [ color="black"]
  node14709 -> node14710 [label=<<font color="black">true</font>> color="black"]
  node14709 -> node14714 [label=<<font color="black">false</font>> color="black"]
  node14730 -> node14731 [ color="black"]
  node14734 -> node14735 [ color="black"]
  node14690 -> node14691 [ color="black"]
  node14713 -> node14714 [ color="black"]
  node14711 -> node14712 [ color="black"]
  node14697 -> node14698 [ color="black"]
  node14706 -> node14707 [ color="black"]
  node14738 -> node14739 [ color="black"]
  node14742 -> node14743 [label=<<font color="black">true</font>> color="black"]
  node14742 -> node14744 [label=<<font color="black">false</font>> color="black"]
  node14735 -> node14736 [ color="black"]
  node14716 -> node14717 [label=<<font color="black">true</font>> color="black"]
  node14716 -> node14722 [label=<<font color="black">false</font>> color="black"]
  node14720 -> node14721 [ color="black"]
  node14751 -> node14689 [ color="black"]
  node14722 -> node14708 [ color="black"]
  node14699 -> node14701 [ color="black"]
  node14698 -> node14699 [label=<<font color="black">true</font>> color="black"]
  node14698 -> node14700 [label=<<font color="black">false</font>> color="black"]
  node14691 -> node14692 [ color="black"]
  node14688 -> node14690 [ color="black"]
  node14739 -> node14740 [ color="black"]
  node14694 -> node14695 [ color="black"]
  node14743 -> node14748 [ color="black"]
  node14729 -> node14730 [ color="black"]
  node14695 -> node14696 [label=<<font color="black">true</font>> color="black"]
  node14695 -> node14697 [label=<<font color="black">false</font>> color="black"]
  node14727 -> node14728 [ color="black"]
  node14725 -> node14726 [ color="black"]
  node14712 -> node14713 [ color="black"]
  node14707 -> node14708 [ color="black"]
  node14741 -> node14742 [ color="black"]
  node14726 -> node14727 [label=<<font color="black">true</font>> color="black"]
  node14726 -> node14729 [label=<<font color="black">false</font>> color="black"]
  node14708 -> node14709 [label=<<font color="black">true</font>> color="black"]
  node14708 -> node14723 [label=<<font color="black">false</font>> color="black"]
  node14748 -> node14749 [ color="black"]
}
