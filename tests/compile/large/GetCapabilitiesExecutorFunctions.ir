{
  let F = GLOBAL_context["Function"]
  let promiseCapability = F["Capability"]
  if (! (= promiseCapability["Resolve"] undefined)) {
    app __x0__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x0__
  } else {}
  if (! (= promiseCapability["Reject"] undefined)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  promiseCapability["Resolve"] = resolve
  promiseCapability["Reject"] = reject
  app __x2__ = (WrapCompletion undefined)
  return __x2__
}