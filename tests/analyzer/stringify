AdditiveExpression[1,0].AssignmentTargetType:[☊(AdditiveExpression), ☊(AdditiveExpression), ☊(MultiplicativeExpression)] -> N(~invalid~)
AdditiveExpression[1,0].IsFunctionDefinition:[☊(AdditiveExpression), ☊(AdditiveExpression), ☊(MultiplicativeExpression)] -> N(false)
AdditiveExpression[2,0].AssignmentTargetType:[☊(AdditiveExpression), ☊(AdditiveExpression), ☊(MultiplicativeExpression)] -> N(~invalid~)
AdditiveExpression[2,0].IsFunctionDefinition:[☊(AdditiveExpression), ☊(AdditiveExpression), ☊(MultiplicativeExpression)] -> N(false)
ArrayBindingPattern[0,2].ContainsExpression:[☊(ArrayBindingPattern), ?] -> N(false)
ArrayBindingPattern[0,2].ContainsExpression:[☊(ArrayBindingPattern), ☊(Elision)] -> N(false)
ArrowFunction[0,0].HasName:[☊(ArrowFunction), ☊(ArrowParameters), ☊(ConciseBody)] -> N(false)
ArrowParameters[0,0].ContainsExpression:[☊(ArrowParameters), ☊(BindingIdentifier)] -> N(false)
ArrowParameters[0,0].IsSimpleParameterList:[☊(ArrowParameters), ☊(BindingIdentifier)] -> N(true)
AssignmentExpression[1,0].AssignmentTargetType:[☊(AssignmentExpression), ☊(YieldExpression)] -> N(~invalid~)
AssignmentExpression[1,0].IsFunctionDefinition:[☊(AssignmentExpression), ☊(YieldExpression)] -> N(false)
AssignmentExpression[2,0].AssignmentTargetType:[☊(AssignmentExpression), ☊(ArrowFunction)] -> N(~invalid~)
AssignmentExpression[2,0].IsFunctionDefinition:[☊(AssignmentExpression), ☊(ArrowFunction)] -> N(true)
AssignmentExpression[3,0].AssignmentTargetType:[☊(AssignmentExpression), ☊(AsyncArrowFunction)] -> N(~invalid~)
AssignmentExpression[3,0].IsFunctionDefinition:[☊(AssignmentExpression), ☊(AsyncArrowFunction)] -> N(true)
AssignmentExpression[4,0].AssignmentTargetType:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentExpression)] -> N(~invalid~)
AssignmentExpression[4,0].IsFunctionDefinition:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentExpression)] -> N(false)
AssignmentExpression[5,0].AssignmentTargetType:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentOperator), ☊(AssignmentExpression)] -> N(~invalid~)
AssignmentExpression[5,0].IsFunctionDefinition:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentOperator), ☊(AssignmentExpression)] -> N(false)
AssignmentExpression[6,0].AssignmentTargetType:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentExpression)] -> N(~invalid~)
AssignmentExpression[6,0].IsFunctionDefinition:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentExpression)] -> N(false)
AssignmentExpression[7,0].AssignmentTargetType:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentExpression)] -> N(~invalid~)
AssignmentExpression[7,0].IsFunctionDefinition:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentExpression)] -> N(false)
AssignmentExpression[8,0].AssignmentTargetType:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentExpression)] -> N(~invalid~)
AssignmentExpression[8,0].IsFunctionDefinition:[☊(AssignmentExpression), ☊(LeftHandSideExpression), ☊(AssignmentExpression)] -> N(false)
AsyncArrowBindingIdentifier[0,0].ContainsExpression:[☊(AsyncArrowBindingIdentifier), ☊(BindingIdentifier)] -> N(false)
AsyncArrowBindingIdentifier[0,0].IsSimpleParameterList:[☊(AsyncArrowBindingIdentifier), ☊(BindingIdentifier)] -> N(true)
AsyncArrowFunction[0,0].HasName:[☊(AsyncArrowFunction), ☊(AsyncArrowBindingIdentifier), ☊(AsyncConciseBody)] -> N(false)
AsyncArrowFunction[1,0].HasName:[☊(AsyncArrowFunction), ☊(CoverCallExpressionAndAsyncArrowHead), ☊(AsyncConciseBody)] -> N(false)
AsyncConciseBody[0,0].ContainsUseStrict:[☊(AsyncConciseBody), ☊(ExpressionBody)] -> N(false)
AsyncFunctionDeclaration[0,0].IsConstantDeclaration:[☊(AsyncFunctionDeclaration), ☊(BindingIdentifier), ☊(FormalParameters), ☊(AsyncFunctionBody)] -> N(false)
AsyncFunctionDeclaration[1,0].IsConstantDeclaration:[☊(AsyncFunctionDeclaration), ☊(FormalParameters), ☊(AsyncFunctionBody)] -> N(false)
AsyncFunctionExpression[0,0].HasName:[☊(AsyncFunctionExpression), ☊(FormalParameters), ☊(AsyncFunctionBody)] -> N(false)
AsyncFunctionExpression[0,0].IsFunctionDefinition:[☊(AsyncFunctionExpression), ☊(FormalParameters), ☊(AsyncFunctionBody)] -> N(true)
AsyncFunctionExpression[1,0].HasName:[☊(AsyncFunctionExpression), ☊(BindingIdentifier), ☊(FormalParameters), ☊(AsyncFunctionBody)] -> N(true)
AsyncFunctionExpression[1,0].IsFunctionDefinition:[☊(AsyncFunctionExpression), ☊(BindingIdentifier), ☊(FormalParameters), ☊(AsyncFunctionBody)] -> N(true)
AsyncGeneratorDeclaration[0,0].IsConstantDeclaration:[☊(AsyncGeneratorDeclaration), ☊(BindingIdentifier), ☊(FormalParameters), ☊(AsyncGeneratorBody)] -> N(false)
AsyncGeneratorDeclaration[1,0].IsConstantDeclaration:[☊(AsyncGeneratorDeclaration), ☊(FormalParameters), ☊(AsyncGeneratorBody)] -> N(false)
AsyncGeneratorExpression[0,0].HasName:[☊(AsyncGeneratorExpression), ☊(FormalParameters), ☊(AsyncGeneratorBody)] -> N(false)
AsyncGeneratorExpression[0,1].HasName:[☊(AsyncGeneratorExpression), ☊(BindingIdentifier), ☊(FormalParameters), ☊(AsyncGeneratorBody)] -> N(true)
AsyncGeneratorExpression[0,1].IsFunctionDefinition:[☊(AsyncGeneratorExpression), ?, ☊(FormalParameters), ☊(AsyncGeneratorBody)] -> N(true)
AsyncGeneratorExpression[0,1].IsFunctionDefinition:[☊(AsyncGeneratorExpression), ☊(BindingIdentifier), ☊(FormalParameters), ☊(AsyncGeneratorBody)] -> N(true)
BindingElement[1,0].HasInitializer:[☊(BindingElement), ☊(BindingPattern)] -> N(false)
BindingElement[1,0].IsSimpleParameterList:[☊(BindingElement), ☊(BindingPattern)] -> N(false)
BindingElement[1,1].ContainsExpression:[☊(BindingElement), ☊(BindingPattern), ☊(Initializer)] -> N(true)
BindingElement[1,1].HasInitializer:[☊(BindingElement), ☊(BindingPattern), ☊(Initializer)] -> N(true)
BindingElement[1,1].IsSimpleParameterList:[☊(BindingElement), ☊(BindingPattern), ☊(Initializer)] -> N(false)
BindingIdentifier[1,0].BoundNames:[☊(BindingIdentifier)] -> N(#350) @ {
  #350 -> ["yield"]
}
BindingRestElement[0,0].ContainsExpression:[☊(BindingRestElement), ☊(BindingIdentifier)] -> N(false)
BitwiseANDExpression[1,0].AssignmentTargetType:[☊(BitwiseANDExpression), ☊(BitwiseANDExpression), ☊(EqualityExpression)] -> N(~invalid~)
BitwiseANDExpression[1,0].IsFunctionDefinition:[☊(BitwiseANDExpression), ☊(BitwiseANDExpression), ☊(EqualityExpression)] -> N(false)
BitwiseORExpression[1,0].AssignmentTargetType:[☊(BitwiseORExpression), ☊(BitwiseORExpression), ☊(BitwiseXORExpression)] -> N(~invalid~)
BitwiseORExpression[1,0].IsFunctionDefinition:[☊(BitwiseORExpression), ☊(BitwiseORExpression), ☊(BitwiseXORExpression)] -> N(false)
BitwiseXORExpression[1,0].AssignmentTargetType:[☊(BitwiseXORExpression), ☊(BitwiseXORExpression), ☊(BitwiseANDExpression)] -> N(~invalid~)
BitwiseXORExpression[1,0].IsFunctionDefinition:[☊(BitwiseXORExpression), ☊(BitwiseXORExpression), ☊(BitwiseANDExpression)] -> N(false)
CallExpression[0,0].AssignmentTargetType:[☊(CallExpression), ☊(CoverCallExpressionAndAsyncArrowHead)] -> N(~invalid~)
CallExpression[1,0].AssignmentTargetType:[☊(CallExpression), ☊(SuperCall)] -> N(~invalid~)
CallExpression[2,0].AssignmentTargetType:[☊(CallExpression), ☊(ImportCall)] -> N(~invalid~)
CallExpression[3,0].AssignmentTargetType:[☊(CallExpression), ☊(CallExpression), ☊(Arguments)] -> N(~invalid~)
CallExpression[4,0].AssignmentTargetType:[☊(CallExpression), ☊(CallExpression), ☊(Expression)] -> N(~simple~)
CallExpression[5,0].AssignmentTargetType:[☊(CallExpression), ☊(CallExpression), ☊(IdentifierName)] -> N(~simple~)
CallExpression[6,0].AssignmentTargetType:[☊(CallExpression), ☊(CallExpression), ☊(TemplateLiteral)] -> N(~invalid~)
ClassAtomNoDash[0,0].IsCharacterClass:[☊(ClassAtomNoDash), ☊(SourceCharacter)] -> N(false)
ClassAtom[0,0].IsCharacterClass:[☊(ClassAtom)] -> N(false)
ClassDeclaration[0,0].IsConstantDeclaration:[☊(ClassDeclaration), ☊(BindingIdentifier), ☊(ClassTail)] -> N(false)
ClassDeclaration[1,0].IsConstantDeclaration:[☊(ClassDeclaration), ☊(ClassTail)] -> N(false)
ClassElement[0,0].IsStatic:[☊(ClassElement), ☊(MethodDefinition)] -> N(false)
ClassElement[1,0].IsStatic:[☊(ClassElement), ☊(MethodDefinition)] -> N(true)
ClassElement[2,0].IsStatic:[☊(ClassElement)] -> N(false)
ClassEscape[0,0].IsCharacterClass:[☊(ClassEscape)] -> N(false)
ClassEscape[1,0].IsCharacterClass:[☊(ClassEscape)] -> N(false)
ClassEscape[2,0].IsCharacterClass:[☊(ClassEscape), ☊(CharacterClassEscape)] -> N(true)
ClassEscape[3,0].IsCharacterClass:[☊(ClassEscape), ☊(CharacterEscape)] -> N(false)
ClassExpression[0,0].HasName:[☊(ClassExpression), ☊(ClassTail)] -> N(false)
ClassExpression[0,1].HasName:[☊(ClassExpression), ☊(BindingIdentifier), ☊(ClassTail)] -> N(true)
ClassExpression[0,1].IsFunctionDefinition:[☊(ClassExpression), ?, ☊(ClassTail)] -> N(true)
ClassExpression[0,1].IsFunctionDefinition:[☊(ClassExpression), ☊(BindingIdentifier), ☊(ClassTail)] -> N(true)
CoalesceExpression[0,0].AssignmentTargetType:[☊(CoalesceExpression), ☊(CoalesceExpressionHead), ☊(BitwiseORExpression)] -> N(~invalid~)
CoalesceExpression[0,0].IsFunctionDefinition:[☊(CoalesceExpression), ☊(CoalesceExpressionHead), ☊(BitwiseORExpression)] -> N(false)
ConciseBody[0,0].ContainsUseStrict:[☊(ConciseBody), ☊(ExpressionBody)] -> N(false)
ConditionalExpression[1,0].AssignmentTargetType:[☊(ConditionalExpression), ☊(ShortCircuitExpression), ☊(AssignmentExpression), ☊(AssignmentExpression)] -> N(~invalid~)
ConditionalExpression[1,0].IsFunctionDefinition:[☊(ConditionalExpression), ☊(ShortCircuitExpression), ☊(AssignmentExpression), ☊(AssignmentExpression)] -> N(false)
CoverParenthesizedExpressionAndArrowParameterList[0,0].CoveredParenthesizedExpression:[☊(CoverParenthesizedExpressionAndArrowParameterList), ☊(Expression)] -> N(☊(ParenthesizedExpression))
Declaration[1,0].DeclarationPart:[☊(Declaration), ☊(ClassDeclaration)] -> N(☊(ClassDeclaration))
Declaration[2,0].DeclarationPart:[☊(Declaration), ☊(LexicalDeclaration)] -> N(☊(LexicalDeclaration))
DeclarativeEnvironmentRecord.HasThisBinding:[EnvironmentRecord] -> N(false)
DeclarativeEnvironmentRecord.HasThisBinding:[null] -> N(false)
EqualityExpression[1,0].AssignmentTargetType:[☊(EqualityExpression), ☊(EqualityExpression), ☊(RelationalExpression)] -> N(~invalid~)
EqualityExpression[1,0].IsFunctionDefinition:[☊(EqualityExpression), ☊(EqualityExpression), ☊(RelationalExpression)] -> N(false)
EqualityExpression[2,0].AssignmentTargetType:[☊(EqualityExpression), ☊(EqualityExpression), ☊(RelationalExpression)] -> N(~invalid~)
EqualityExpression[2,0].IsFunctionDefinition:[☊(EqualityExpression), ☊(EqualityExpression), ☊(RelationalExpression)] -> N(false)
EqualityExpression[3,0].AssignmentTargetType:[☊(EqualityExpression), ☊(EqualityExpression), ☊(RelationalExpression)] -> N(~invalid~)
EqualityExpression[3,0].IsFunctionDefinition:[☊(EqualityExpression), ☊(EqualityExpression), ☊(RelationalExpression)] -> N(false)
EqualityExpression[4,0].AssignmentTargetType:[☊(EqualityExpression), ☊(EqualityExpression), ☊(RelationalExpression)] -> N(~invalid~)
EqualityExpression[4,0].IsFunctionDefinition:[☊(EqualityExpression), ☊(EqualityExpression), ☊(RelationalExpression)] -> N(false)
ExponentiationExpression[1,0].AssignmentTargetType:[☊(ExponentiationExpression), ☊(UpdateExpression), ☊(ExponentiationExpression)] -> N(~invalid~)
ExponentiationExpression[1,0].IsFunctionDefinition:[☊(ExponentiationExpression), ☊(UpdateExpression), ☊(ExponentiationExpression)] -> N(false)
ExportDeclaration[0,0].IsConstantDeclaration:[☊(ExportDeclaration), ☊(ExportFromClause), ☊(FromClause)] -> N(false)
ExportDeclaration[1,0].IsConstantDeclaration:[☊(ExportDeclaration), ☊(NamedExports)] -> N(false)
ExportDeclaration[6,0].IsConstantDeclaration:[☊(ExportDeclaration), ☊(AssignmentExpression)] -> N(false)
Expression[1,0].AssignmentTargetType:[☊(Expression), ☊(Expression), ☊(AssignmentExpression)] -> N(~invalid~)
Expression[1,0].IsFunctionDefinition:[☊(Expression), ☊(Expression), ☊(AssignmentExpression)] -> N(false)
ForBinding[0,0].IsDestructuring:[☊(ForBinding), ☊(BindingIdentifier)] -> N(false)
ForBinding[1,0].IsDestructuring:[☊(ForBinding), ☊(BindingPattern)] -> N(true)
ForDeclaration[0,0].IsDestructuring:[☊(ForDeclaration), ☊(LetOrConst), ☊(ForBinding)] -> N(true)
FormalParameters[0,0].ContainsExpression:[☊(FormalParameters)] -> N(false)
FormalParameters[0,0].IsSimpleParameterList:[☊(FormalParameters)] -> N(true)
FormalParameters[1,0].IsSimpleParameterList:[☊(FormalParameters), ☊(FunctionRestParameter)] -> N(false)
FormalParameters[4,0].IsSimpleParameterList:[☊(FormalParameters), ☊(FormalParameterList), ☊(FunctionRestParameter)] -> N(false)
FunctionDeclaration[0,0].IsConstantDeclaration:[☊(FunctionDeclaration), ☊(BindingIdentifier), ☊(FormalParameters), ☊(FunctionBody)] -> N(false)
FunctionDeclaration[1,0].IsConstantDeclaration:[☊(FunctionDeclaration), ☊(FormalParameters), ☊(FunctionBody)] -> N(false)
FunctionEnvironmentRecord.GetThisBinding:[EnvironmentRecord] -> N(Object | num | int | bigint | str | bool | undef | null) | T(#122) @ {
  #122 -> OrdinaryObject {
    Prototype -> ! #Global.ReferenceError.prototype
    ErrorData -> ! undef
  }
}
FunctionEnvironmentRecord.GetThisBinding:[null] -> N(Object | num | int | bigint | str | bool | undef | null) | T(#122) @ {
  #122 -> OrdinaryObject {
    Prototype -> ! #Global.ReferenceError.prototype
    ErrorData -> ! undef
  }
}
FunctionEnvironmentRecord.HasThisBinding:[EnvironmentRecord] -> N(bool)
FunctionEnvironmentRecord.HasThisBinding:[null] -> N(bool)
FunctionExpression[0,0].HasName:[☊(FunctionExpression), ☊(FormalParameters), ☊(FunctionBody)] -> N(false)
FunctionExpression[0,1].HasName:[☊(FunctionExpression), ☊(BindingIdentifier), ☊(FormalParameters), ☊(FunctionBody)] -> N(true)
FunctionExpression[0,1].IsFunctionDefinition:[☊(FunctionExpression), ?, ☊(FormalParameters), ☊(FunctionBody)] -> N(true)
FunctionExpression[0,1].IsFunctionDefinition:[☊(FunctionExpression), ☊(BindingIdentifier), ☊(FormalParameters), ☊(FunctionBody)] -> N(true)
GeneratorDeclaration[0,0].IsConstantDeclaration:[☊(GeneratorDeclaration), ☊(BindingIdentifier), ☊(FormalParameters), ☊(GeneratorBody)] -> N(false)
GeneratorDeclaration[1,0].IsConstantDeclaration:[☊(GeneratorDeclaration), ☊(FormalParameters), ☊(GeneratorBody)] -> N(false)
GeneratorExpression[0,0].HasName:[☊(GeneratorExpression), ☊(FormalParameters), ☊(GeneratorBody)] -> N(false)
GeneratorExpression[0,1].HasName:[☊(GeneratorExpression), ☊(BindingIdentifier), ☊(FormalParameters), ☊(GeneratorBody)] -> N(true)
GeneratorExpression[0,1].IsFunctionDefinition:[☊(GeneratorExpression), ?, ☊(FormalParameters), ☊(GeneratorBody)] -> N(true)
GeneratorExpression[0,1].IsFunctionDefinition:[☊(GeneratorExpression), ☊(BindingIdentifier), ☊(FormalParameters), ☊(GeneratorBody)] -> N(true)
GetThisEnvironment:[] -> N(EnvironmentRecord | null)
GlobalEnvironmentRecord.GetThisBinding:[EnvironmentRecord] -> N(#Global)
GlobalEnvironmentRecord.GetThisBinding:[null] -> N(#Global)
GlobalEnvironmentRecord.HasThisBinding:[EnvironmentRecord] -> N(true)
GlobalEnvironmentRecord.HasThisBinding:[null] -> N(true)
HoistableDeclaration[0,0].DeclarationPart:[☊(HoistableDeclaration), ☊(FunctionDeclaration)] -> N(☊(FunctionDeclaration))
HoistableDeclaration[1,0].DeclarationPart:[☊(HoistableDeclaration), ☊(GeneratorDeclaration)] -> N(☊(GeneratorDeclaration))
HoistableDeclaration[2,0].DeclarationPart:[☊(HoistableDeclaration), ☊(AsyncFunctionDeclaration)] -> N(☊(AsyncFunctionDeclaration))
HoistableDeclaration[3,0].DeclarationPart:[☊(HoistableDeclaration), ☊(AsyncGeneratorDeclaration)] -> N(☊(AsyncGeneratorDeclaration))
IdentifierReference[1,0].AssignmentTargetType:[☊(IdentifierReference)] -> N(~simple~)
IdentifierReference[1,0].EarlyErrors:[☊(IdentifierReference)] -> T(#1605) @ {
  #1605 -> OrdinaryObject {
    Prototype -> ! #Global.SyntaxError.prototype
    ErrorData -> ! undef
  }
}
IdentifierReference[1,0].StringValue:[☊(IdentifierReference)] -> N("yield")
IdentifierReference[2,0].AssignmentTargetType:[☊(IdentifierReference)] -> N(~simple~)
IdentifierReference[2,0].StringValue:[☊(IdentifierReference)] -> N("await")
Identifier[0,0].StringValue:[☊(Identifier), ☊(IdentifierName)] -> N(str)
ImportDeclaration[1,0].ImportEntries:[☊(ImportDeclaration), ☊(ModuleSpecifier)] -> N(#772) @ {
  #772 -> []
}
ImportMeta[0,0].AssignmentTargetType:[☊(ImportMeta)] -> N(~invalid~)
LeftHandSideExpression[1,0].IsDestructuring:[☊(LeftHandSideExpression), ☊(CallExpression)] -> N(false)
LeftHandSideExpression[1,0].IsFunctionDefinition:[☊(LeftHandSideExpression), ☊(CallExpression)] -> N(false)
LeftHandSideExpression[1,0].IsIdentifierRef:[☊(LeftHandSideExpression), ☊(CallExpression)] -> N(false)
LeftHandSideExpression[2,0].AssignmentTargetType:[☊(LeftHandSideExpression), ☊(OptionalExpression)] -> N(~invalid~)
LeftHandSideExpression[2,0].IsDestructuring:[☊(LeftHandSideExpression), ☊(OptionalExpression)] -> N(false)
LeftHandSideExpression[2,0].IsFunctionDefinition:[☊(LeftHandSideExpression), ☊(OptionalExpression)] -> N(false)
LeftHandSideExpression[2,0].IsIdentifierRef:[☊(LeftHandSideExpression), ☊(OptionalExpression)] -> N(false)
LetOrConst[0,0].IsConstantDeclaration:[☊(LetOrConst)] -> N(false)
LetOrConst[1,0].IsConstantDeclaration:[☊(LetOrConst)] -> N(true)
LiteralPropertyName[1,0].Evaluation:[☊(LiteralPropertyName), ☊(StringLiteral)] -> N(str)
LiteralPropertyName[1,0].PropName:[☊(LiteralPropertyName), ☊(StringLiteral)] -> N(str)
Literal[0,0].Evaluation:[☊(Literal), ☊(NullLiteral)] -> N(null)
Literal[1,0].Evaluation:[☊(Literal), ☊(BooleanLiteral)] -> N(bool)
Literal[2,0].Evaluation:[☊(Literal), ☊(NumericLiteral)] -> N(num | int | bigint)
Literal[3,0].Evaluation:[☊(Literal), ☊(StringLiteral)] -> N(str)
LogicalANDExpression[1,0].AssignmentTargetType:[☊(LogicalANDExpression), ☊(LogicalANDExpression), ☊(BitwiseORExpression)] -> N(~invalid~)
LogicalANDExpression[1,0].IsFunctionDefinition:[☊(LogicalANDExpression), ☊(LogicalANDExpression), ☊(BitwiseORExpression)] -> N(false)
LogicalORExpression[1,0].AssignmentTargetType:[☊(LogicalORExpression), ☊(LogicalORExpression), ☊(LogicalANDExpression)] -> N(~invalid~)
LogicalORExpression[1,0].IsFunctionDefinition:[☊(LogicalORExpression), ☊(LogicalORExpression), ☊(LogicalANDExpression)] -> N(false)
MemberExpression[0,0].IsDestructuring:[☊(MemberExpression), ☊(PrimaryExpression)] -> N(bool)
MemberExpression[1,0].AssignmentTargetType:[☊(MemberExpression), ☊(MemberExpression), ☊(Expression)] -> N(~simple~)
MemberExpression[1,0].IsDestructuring:[☊(MemberExpression), ☊(MemberExpression), ☊(Expression)] -> N(false)
MemberExpression[1,0].IsFunctionDefinition:[☊(MemberExpression), ☊(MemberExpression), ☊(Expression)] -> N(false)
MemberExpression[1,0].IsIdentifierRef:[☊(MemberExpression), ☊(MemberExpression), ☊(Expression)] -> N(false)
MemberExpression[2,0].AssignmentTargetType:[☊(MemberExpression), ☊(MemberExpression), ☊(IdentifierName)] -> N(~simple~)
MemberExpression[2,0].IsDestructuring:[☊(MemberExpression), ☊(MemberExpression), ☊(IdentifierName)] -> N(false)
MemberExpression[2,0].IsFunctionDefinition:[☊(MemberExpression), ☊(MemberExpression), ☊(IdentifierName)] -> N(false)
MemberExpression[2,0].IsIdentifierRef:[☊(MemberExpression), ☊(MemberExpression), ☊(IdentifierName)] -> N(false)
MemberExpression[3,0].AssignmentTargetType:[☊(MemberExpression), ☊(MemberExpression), ☊(TemplateLiteral)] -> N(~invalid~)
MemberExpression[3,0].IsDestructuring:[☊(MemberExpression), ☊(MemberExpression), ☊(TemplateLiteral)] -> N(false)
MemberExpression[3,0].IsFunctionDefinition:[☊(MemberExpression), ☊(MemberExpression), ☊(TemplateLiteral)] -> N(false)
MemberExpression[3,0].IsIdentifierRef:[☊(MemberExpression), ☊(MemberExpression), ☊(TemplateLiteral)] -> N(false)
MemberExpression[4,0].AssignmentTargetType:[☊(MemberExpression), ☊(SuperProperty)] -> N(~simple~)
MemberExpression[4,0].IsDestructuring:[☊(MemberExpression), ☊(SuperProperty)] -> N(false)
MemberExpression[4,0].IsFunctionDefinition:[☊(MemberExpression), ☊(SuperProperty)] -> N(false)
MemberExpression[4,0].IsIdentifierRef:[☊(MemberExpression), ☊(SuperProperty)] -> N(false)
MemberExpression[5,0].IsDestructuring:[☊(MemberExpression), ☊(MetaProperty)] -> N(false)
MemberExpression[5,0].IsFunctionDefinition:[☊(MemberExpression), ☊(MetaProperty)] -> N(false)
MemberExpression[5,0].IsIdentifierRef:[☊(MemberExpression), ☊(MetaProperty)] -> N(false)
MemberExpression[6,0].AssignmentTargetType:[☊(MemberExpression), ☊(MemberExpression), ☊(Arguments)] -> N(~invalid~)
MemberExpression[6,0].IsDestructuring:[☊(MemberExpression), ☊(MemberExpression), ☊(Arguments)] -> N(false)
MemberExpression[6,0].IsFunctionDefinition:[☊(MemberExpression), ☊(MemberExpression), ☊(Arguments)] -> N(false)
MemberExpression[6,0].IsIdentifierRef:[☊(MemberExpression), ☊(MemberExpression), ☊(Arguments)] -> N(false)
MethodDefinition[0,0].SpecialMethod:[☊(MethodDefinition), ☊(PropertyName), ☊(UniqueFormalParameters), ☊(FunctionBody)] -> N(false)
MethodDefinition[1,0].SpecialMethod:[☊(MethodDefinition), ☊(GeneratorMethod)] -> N(true)
MethodDefinition[2,0].SpecialMethod:[☊(MethodDefinition), ☊(AsyncMethod)] -> N(true)
MethodDefinition[3,0].SpecialMethod:[☊(MethodDefinition), ☊(AsyncGeneratorMethod)] -> N(true)
MethodDefinition[4,0].SpecialMethod:[☊(MethodDefinition), ☊(PropertyName), ☊(FunctionBody)] -> N(true)
MethodDefinition[5,0].SpecialMethod:[☊(MethodDefinition), ☊(PropertyName), ☊(PropertySetParameterList), ☊(FunctionBody)] -> N(true)
ModuleEnvironmentRecord.GetThisBinding:[EnvironmentRecord] -> N(undef)
ModuleEnvironmentRecord.GetThisBinding:[null] -> N(undef)
ModuleEnvironmentRecord.HasThisBinding:[EnvironmentRecord] -> N(true)
ModuleEnvironmentRecord.HasThisBinding:[null] -> N(true)
ModuleItem[1,0].ImportEntries:[☊(ModuleItem), ☊(ExportDeclaration)] -> N(#725) @ {
  #725 -> []
}
ModuleItem[2,0].ImportEntries:[☊(ModuleItem), ☊(StatementListItem)] -> N(#725) @ {
  #725 -> []
}
Module[0,0].ImportEntries:[☊(Module)] -> N(#723) @ {
  #723 -> []
}
MultiplicativeExpression[1,0].AssignmentTargetType:[☊(MultiplicativeExpression), ☊(MultiplicativeExpression), ☊(MultiplicativeOperator), ☊(ExponentiationExpression)] -> N(~invalid~)
MultiplicativeExpression[1,0].IsFunctionDefinition:[☊(MultiplicativeExpression), ☊(MultiplicativeExpression), ☊(MultiplicativeOperator), ☊(ExponentiationExpression)] -> N(false)
NewExpression[1,0].AssignmentTargetType:[☊(NewExpression), ☊(NewExpression)] -> N(~invalid~)
NewExpression[1,0].IsDestructuring:[☊(NewExpression), ☊(NewExpression)] -> N(false)
NewExpression[1,0].IsFunctionDefinition:[☊(NewExpression), ☊(NewExpression)] -> N(false)
NewExpression[1,0].IsIdentifierRef:[☊(NewExpression), ☊(NewExpression)] -> N(false)
NewTarget[0,0].AssignmentTargetType:[☊(NewTarget)] -> N(~invalid~)
ObjectBindingPattern[0,0].ContainsExpression:[☊(ObjectBindingPattern)] -> N(false)
ObjectBindingPattern[1,0].ContainsExpression:[☊(ObjectBindingPattern), ☊(BindingRestProperty)] -> N(false)
ObjectEnvironmentRecord.HasThisBinding:[EnvironmentRecord] -> N(false)
ObjectEnvironmentRecord.HasThisBinding:[null] -> N(false)
ParenthesizedExpression[0,0].AssignmentTargetType:[☊(ParenthesizedExpression), ☊(Expression)] -> N((~invalid~ | ~simple~))
ParenthesizedExpression[0,0].IsFunctionDefinition:[☊(ParenthesizedExpression), ☊(Expression)] -> N(bool)
PrimaryExpression[0,0].AssignmentTargetType:[☊(PrimaryExpression)] -> N(~invalid~)
PrimaryExpression[0,0].Evaluation:[☊(PrimaryExpression)] -> N(#Global | Object | num | int | bigint | str | bool | undef | null) | T(#122) @ {
  #122 -> OrdinaryObject {
    Prototype -> ! #Global.ReferenceError.prototype
    ErrorData -> ! undef
  }
}
PrimaryExpression[0,0].IsFunctionDefinition:[☊(PrimaryExpression)] -> N(false)
PrimaryExpression[0,0].IsIdentifierRef:[☊(PrimaryExpression)] -> N(false)
PrimaryExpression[1,0].IsFunctionDefinition:[☊(PrimaryExpression), ☊(IdentifierReference)] -> N(false)
PrimaryExpression[1,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(IdentifierReference)] -> N(true)
PrimaryExpression[10,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(RegularExpressionLiteral)] -> N(~invalid~)
PrimaryExpression[10,0].IsFunctionDefinition:[☊(PrimaryExpression), ☊(RegularExpressionLiteral)] -> N(false)
PrimaryExpression[10,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(RegularExpressionLiteral)] -> N(false)
PrimaryExpression[11,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(TemplateLiteral)] -> N(~invalid~)
PrimaryExpression[11,0].IsFunctionDefinition:[☊(PrimaryExpression), ☊(TemplateLiteral)] -> N(false)
PrimaryExpression[11,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(TemplateLiteral)] -> N(false)
PrimaryExpression[12,0].IsFunctionDefinition:[☊(PrimaryExpression), ☊(CoverParenthesizedExpressionAndArrowParameterList)] -> N(bool)
PrimaryExpression[12,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(CoverParenthesizedExpressionAndArrowParameterList)] -> N(false)
PrimaryExpression[2,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(Literal)] -> N(~invalid~)
PrimaryExpression[2,0].IsFunctionDefinition:[☊(PrimaryExpression), ☊(Literal)] -> N(false)
PrimaryExpression[2,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(Literal)] -> N(false)
PrimaryExpression[3,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(ArrayLiteral)] -> N(~invalid~)
PrimaryExpression[3,0].IsFunctionDefinition:[☊(PrimaryExpression), ☊(ArrayLiteral)] -> N(false)
PrimaryExpression[3,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(ArrayLiteral)] -> N(false)
PrimaryExpression[4,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(ObjectLiteral)] -> N(~invalid~)
PrimaryExpression[4,0].IsFunctionDefinition:[☊(PrimaryExpression), ☊(ObjectLiteral)] -> N(false)
PrimaryExpression[4,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(ObjectLiteral)] -> N(false)
PrimaryExpression[5,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(FunctionExpression)] -> N(~invalid~)
PrimaryExpression[5,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(FunctionExpression)] -> N(false)
PrimaryExpression[6,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(ClassExpression)] -> N(~invalid~)
PrimaryExpression[6,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(ClassExpression)] -> N(false)
PrimaryExpression[7,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(GeneratorExpression)] -> N(~invalid~)
PrimaryExpression[7,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(GeneratorExpression)] -> N(false)
PrimaryExpression[8,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(AsyncFunctionExpression)] -> N(~invalid~)
PrimaryExpression[8,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(AsyncFunctionExpression)] -> N(false)
PrimaryExpression[9,0].AssignmentTargetType:[☊(PrimaryExpression), ☊(AsyncGeneratorExpression)] -> N(~invalid~)
PrimaryExpression[9,0].IsIdentifierRef:[☊(PrimaryExpression), ☊(AsyncGeneratorExpression)] -> N(false)
PropertyDefinition[0,0].PropName:[☊(PropertyDefinition), ☊(IdentifierReference)] -> N(str)
PropertyDefinition[1,0].EarlyErrors:[☊(PropertyDefinition), ☊(CoverInitializedName)] -> T(#1625) @ {
  #1625 -> OrdinaryObject {
    Prototype -> ! #Global.SyntaxError.prototype
    ErrorData -> ! undef
  }
}
PropertyName[0,0].IsComputedPropertyKey:[☊(PropertyName), ☊(LiteralPropertyName)] -> N(false)
PropertyName[1,0].IsComputedPropertyKey:[☊(PropertyName), ☊(ComputedPropertyName)] -> N(true)
RelationalExpression[1,0].AssignmentTargetType:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(~invalid~)
RelationalExpression[1,0].IsFunctionDefinition:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(false)
RelationalExpression[2,0].AssignmentTargetType:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(~invalid~)
RelationalExpression[2,0].IsFunctionDefinition:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(false)
RelationalExpression[3,0].AssignmentTargetType:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(~invalid~)
RelationalExpression[3,0].IsFunctionDefinition:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(false)
RelationalExpression[4,0].AssignmentTargetType:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(~invalid~)
RelationalExpression[4,0].IsFunctionDefinition:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(false)
RelationalExpression[5,0].AssignmentTargetType:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(~invalid~)
RelationalExpression[5,0].IsFunctionDefinition:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(false)
RelationalExpression[6,0].AssignmentTargetType:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(~invalid~)
RelationalExpression[6,0].IsFunctionDefinition:[☊(RelationalExpression), ☊(RelationalExpression), ☊(ShiftExpression)] -> N(false)
ResolveThisBinding:[] -> N(#Global | Object | num | int | bigint | str | bool | undef | null) | T(#122) @ {
  #122 -> OrdinaryObject {
    Prototype -> ! #Global.ReferenceError.prototype
    ErrorData -> ! undef
  }
}
ShiftExpression[1,0].AssignmentTargetType:[☊(ShiftExpression), ☊(ShiftExpression), ☊(AdditiveExpression)] -> N(~invalid~)
ShiftExpression[1,0].IsFunctionDefinition:[☊(ShiftExpression), ☊(ShiftExpression), ☊(AdditiveExpression)] -> N(false)
ShiftExpression[2,0].AssignmentTargetType:[☊(ShiftExpression), ☊(ShiftExpression), ☊(AdditiveExpression)] -> N(~invalid~)
ShiftExpression[2,0].IsFunctionDefinition:[☊(ShiftExpression), ☊(ShiftExpression), ☊(AdditiveExpression)] -> N(false)
ShiftExpression[3,0].AssignmentTargetType:[☊(ShiftExpression), ☊(ShiftExpression), ☊(AdditiveExpression)] -> N(~invalid~)
ShiftExpression[3,0].IsFunctionDefinition:[☊(ShiftExpression), ☊(ShiftExpression), ☊(AdditiveExpression)] -> N(false)
SingleNameBinding[0,0].ContainsExpression:[☊(SingleNameBinding), ☊(BindingIdentifier)] -> N(false)
SingleNameBinding[0,0].HasInitializer:[☊(SingleNameBinding), ☊(BindingIdentifier)] -> N(false)
SingleNameBinding[0,0].IsSimpleParameterList:[☊(SingleNameBinding), ☊(BindingIdentifier)] -> N(true)
SingleNameBinding[0,1].ContainsExpression:[☊(SingleNameBinding), ☊(BindingIdentifier), ☊(Initializer)] -> N(true)
SingleNameBinding[0,1].HasInitializer:[☊(SingleNameBinding), ☊(BindingIdentifier), ☊(Initializer)] -> N(true)
SingleNameBinding[0,1].IsSimpleParameterList:[☊(SingleNameBinding), ☊(BindingIdentifier), ☊(Initializer)] -> N(false)
UnaryExpression[1,0].AssignmentTargetType:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(~invalid~)
UnaryExpression[1,0].IsFunctionDefinition:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(false)
UnaryExpression[2,0].AssignmentTargetType:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(~invalid~)
UnaryExpression[2,0].IsFunctionDefinition:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(false)
UnaryExpression[3,0].AssignmentTargetType:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(~invalid~)
UnaryExpression[3,0].IsFunctionDefinition:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(false)
UnaryExpression[4,0].AssignmentTargetType:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(~invalid~)
UnaryExpression[4,0].IsFunctionDefinition:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(false)
UnaryExpression[5,0].AssignmentTargetType:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(~invalid~)
UnaryExpression[5,0].IsFunctionDefinition:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(false)
UnaryExpression[6,0].AssignmentTargetType:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(~invalid~)
UnaryExpression[6,0].IsFunctionDefinition:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(false)
UnaryExpression[7,0].AssignmentTargetType:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(~invalid~)
UnaryExpression[7,0].IsFunctionDefinition:[☊(UnaryExpression), ☊(UnaryExpression)] -> N(false)
UnaryExpression[8,0].AssignmentTargetType:[☊(UnaryExpression), ☊(AwaitExpression)] -> N(~invalid~)
UnaryExpression[8,0].IsFunctionDefinition:[☊(UnaryExpression), ☊(AwaitExpression)] -> N(false)
UpdateExpression[1,0].AssignmentTargetType:[☊(UpdateExpression), ☊(LeftHandSideExpression)] -> N(~invalid~)
UpdateExpression[1,0].IsFunctionDefinition:[☊(UpdateExpression), ☊(LeftHandSideExpression)] -> N(false)
UpdateExpression[2,0].AssignmentTargetType:[☊(UpdateExpression), ☊(LeftHandSideExpression)] -> N(~invalid~)
UpdateExpression[2,0].IsFunctionDefinition:[☊(UpdateExpression), ☊(LeftHandSideExpression)] -> N(false)
UpdateExpression[3,0].AssignmentTargetType:[☊(UpdateExpression), ☊(UnaryExpression)] -> N(~invalid~)
UpdateExpression[3,0].IsFunctionDefinition:[☊(UpdateExpression), ☊(UnaryExpression)] -> N(false)
UpdateExpression[4,0].AssignmentTargetType:[☊(UpdateExpression), ☊(UnaryExpression)] -> N(~invalid~)
UpdateExpression[4,0].IsFunctionDefinition:[☊(UpdateExpression), ☊(UnaryExpression)] -> N(false)