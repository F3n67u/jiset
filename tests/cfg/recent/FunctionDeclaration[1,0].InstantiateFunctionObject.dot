digraph {
  node9120 [shape=cds, label=<<font color="black">3:app __x2__ = (MakeConstructor F)</font>> color="black" fillcolor="white" style=filled]
  node9116 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryFunctionCreate INTRINSIC_Function_prototype sourceText FormalParameters FunctionBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node9113 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let F = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9114 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9118 [shape=cds, label=<<font color="black">2:app __x1__ = (SetFunctionName F &quot;default&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x2__</td></tr>
      <tr><td align="left">4:return F</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:__x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let sourceText = (get-syntax FunctionDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9119 -> node9120 [ color="black"]
  node9116 -> node9117 [ color="black"]
  node9120 -> node9121 [ color="black"]
  node9117 -> node9118 [ color="black"]
  node9115 -> node9116 [ color="black"]
  node9121 -> node9114 [ color="black"]
  node9118 -> node9119 [ color="black"]
  node9113 -> node9115 [ color="black"]
}
