{
  app __x0__ = (ToString string)
  let inputString = [? __x0__]
  ??? "Let id:{trimmedString} be a substring of id:{inputString} consisting of the leftmost code unit that is not a nt:{StrWhiteSpaceChar} and all code units to the right of that code unit . ( In other words , remove leading white space . ) If id:{inputString} does not contain any such code units , let id:{trimmedString} be the empty string ."
  ??? "If neither id:{trimmedString} nor any prefix of id:{trimmedString} satisfies the syntax of a nt:{StrDecimalLiteral} ( see link:{unhandled: sec-tonumber-applied-to-the-string-type} ) , return value:{NaN} ."
  ??? "Let id:{numberString} be the longest prefix of id:{trimmedString} , which might be id:{trimmedString} itself , that satisfies the syntax of a nt:{StrDecimalLiteral} ."
  access __x1__ = (numberString "MV")
  let mathFloat = __x1__
  if (== mathFloat 0i) {
    ??? "If the first code unit of id:{trimmedString} is code:{\"-\"} , return value:{-0} ."
    return 0i
  } else {}
  return mathFloat
}