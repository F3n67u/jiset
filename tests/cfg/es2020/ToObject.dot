digraph {
  node20643 [shape=diamond, label=<<font color="black">(= __x4__ String)</font>> color="black" fillcolor="white" style=filled]
  node20647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return a new Symbol object whose [ [ SymbolData ] ] internal slot is set to id:{argument} . See link:{unhandled: sec-symbol-objects} for a description of Symbol objects .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20636 [shape=cds, label=<<font color="black">5:app __x2__ = (Type argument)</font>> color="black" fillcolor="white" style=filled]
  node20630 [shape=cds, label=<<font color="black">1:app __x0__ = (Type argument)</font>> color="black" fillcolor="white" style=filled]
  node20652 [shape=diamond, label=<<font color="black">(= __x7__ Object)</font>> color="black" fillcolor="white" style=filled]
  node20637 [shape=diamond, label=<<font color="black">(= __x2__ Boolean)</font>> color="black" fillcolor="white" style=filled]
  node20628 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node20649 [shape=diamond, label=<<font color="black">(= __x6__ BigInt)</font>> color="black" fillcolor="white" style=filled]
  node20632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20645 [shape=cds, label=<<font color="black">11:app __x5__ = (Type argument)</font>> color="black" fillcolor="white" style=filled]
  node20639 [shape=cds, label=<<font color="black">7:app __x3__ = (Type argument)</font>> color="black" fillcolor="white" style=filled]
  node20644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return a new String object whose [ [ StringData ] ] internal slot is set to id:{argument} . See link:{unhandled: sec-string-objects} for a description of String objects .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20640 [shape=diamond, label=<<font color="black">(= __x3__ Number)</font>> color="black" fillcolor="white" style=filled]
  node20651 [shape=cds, label=<<font color="black">15:app __x7__ = (Type argument)</font>> color="black" fillcolor="white" style=filled]
  node20646 [shape=diamond, label=<<font color="black">(= __x5__ Symbol)</font>> color="black" fillcolor="white" style=filled]
  node20633 [shape=cds, label=<<font color="black">3:app __x1__ = (Type argument)</font>> color="black" fillcolor="white" style=filled]
  node20642 [shape=cds, label=<<font color="black">9:app __x4__ = (Type argument)</font>> color="black" fillcolor="white" style=filled]
  node20629 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node20638 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return a new Boolean object whose [ [ BooleanData ] ] internal slot is set to id:{argument} . See link:{unhandled: sec-boolean-objects} for a description of Boolean objects .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return a new Number object whose [ [ NumberData ] ] internal slot is set to id:{argument} . See link:{unhandled: sec-number-objects} for a description of Number objects .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return a new BigInt object whose [ [ BigIntData ] ] internal slot is set to id:{argument} . See link:{unhandled: sec-bigint-objects} for a description of BigInt objects .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return argument</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20634 [shape=diamond, label=<<font color="black">(= __x1__ Null)</font>> color="black" fillcolor="white" style=filled]
  node20631 [shape=diamond, label=<<font color="black">(= __x0__ Undefined)</font>> color="black" fillcolor="white" style=filled]
  node20648 [shape=cds, label=<<font color="black">13:app __x6__ = (Type argument)</font>> color="black" fillcolor="white" style=filled]
  node20630 -> node20631 [ color="black"]
  node20631 -> node20632 [label=<<font color="black">true</font>> color="black"]
  node20631 -> node20633 [label=<<font color="black">false</font>> color="black"]
  node20652 -> node20653 [label=<<font color="black">true</font>> color="black"]
  node20652 -> node20629 [label=<<font color="black">false</font>> color="black"]
  node20638 -> node20639 [ color="black"]
  node20645 -> node20646 [ color="black"]
  node20650 -> node20651 [ color="black"]
  node20642 -> node20643 [ color="black"]
  node20649 -> node20650 [label=<<font color="black">true</font>> color="black"]
  node20649 -> node20651 [label=<<font color="black">false</font>> color="black"]
  node20648 -> node20649 [ color="black"]
  node20640 -> node20641 [label=<<font color="black">true</font>> color="black"]
  node20640 -> node20642 [label=<<font color="black">false</font>> color="black"]
  node20647 -> node20648 [ color="black"]
  node20636 -> node20637 [ color="black"]
  node20651 -> node20652 [ color="black"]
  node20644 -> node20645 [ color="black"]
  node20646 -> node20647 [label=<<font color="black">true</font>> color="black"]
  node20646 -> node20648 [label=<<font color="black">false</font>> color="black"]
  node20632 -> node20633 [ color="black"]
  node20633 -> node20634 [ color="black"]
  node20643 -> node20644 [label=<<font color="black">true</font>> color="black"]
  node20643 -> node20645 [label=<<font color="black">false</font>> color="black"]
  node20635 -> node20636 [ color="black"]
  node20628 -> node20630 [ color="black"]
  node20641 -> node20642 [ color="black"]
  node20634 -> node20635 [label=<<font color="black">true</font>> color="black"]
  node20634 -> node20636 [label=<<font color="black">false</font>> color="black"]
  node20637 -> node20638 [label=<<font color="black">true</font>> color="black"]
  node20637 -> node20639 [label=<<font color="black">false</font>> color="black"]
  node20639 -> node20640 [ color="black"]
  node20653 -> node20629 [ color="black"]
}
