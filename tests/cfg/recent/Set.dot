digraph {
  node17175 [shape=cds, label=<<font color="black">10:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node17164 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17158 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17168 [shape=cds, label=<<font color="black">6:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node17157 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17178 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17174 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17165 [shape=cds, label=<<font color="black">5:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node17170 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node17182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17160 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.SetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17179 [shape=cds, label=<<font color="black">12:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node17169 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17163 [shape=cds, label=<<font color="black">4:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17156 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17166 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node17176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17155 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17180 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node17159 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget &quot;%Set.prototype%&quot; (new [&quot;SetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17167 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17154 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17181 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node17171 [shape=cds, label=<<font color="black">8:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17161 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node17162 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17173 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node17172 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17177 [shape=cds, label=<<font color="black">11:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node17167 -> node17168 [ color="black"]
  node17165 -> node17166 [ color="black"]
  node17182 -> node17170 [ color="black"]
  node17156 -> node17157 [ color="black"]
  node17170 -> node17171 [label=<<font color="black">true</font>> color="black"]
  node17170 -> node17155 [label=<<font color="black">false</font>> color="black"]
  node17158 -> node17159 [ color="black"]
  node17176 -> node17177 [ color="black"]
  node17163 -> node17164 [ color="black"]
  node17160 -> node17161 [ color="black"]
  node17172 -> node17173 [ color="black"]
  node17174 -> node17175 [ color="black"]
  node17164 -> node17165 [ color="black"]
  node17178 -> node17179 [ color="black"]
  node17157 -> node17158 [label=<<font color="black">true</font>> color="black"]
  node17157 -> node17159 [label=<<font color="black">false</font>> color="black"]
  node17168 -> node17169 [ color="black"]
  node17179 -> node17180 [ color="black"]
  node17173 -> node17174 [label=<<font color="black">true</font>> color="black"]
  node17173 -> node17175 [label=<<font color="black">false</font>> color="black"]
  node17180 -> node17181 [label=<<font color="black">true</font>> color="black"]
  node17180 -> node17170 [label=<<font color="black">false</font>> color="black"]
  node17169 -> node17170 [ color="black"]
  node17177 -> node17178 [ color="black"]
  node17171 -> node17172 [ color="black"]
  node17175 -> node17176 [ color="black"]
  node17159 -> node17160 [ color="black"]
  node17166 -> node17167 [label=<<font color="black">true</font>> color="black"]
  node17166 -> node17168 [label=<<font color="black">false</font>> color="black"]
  node17161 -> node17162 [label=<<font color="black">true</font>> color="black"]
  node17161 -> node17163 [label=<<font color="black">false</font>> color="black"]
  node17154 -> node17156 [ color="black"]
  node17181 -> node17182 [ color="black"]
  node17162 -> node17163 [ color="black"]
}
