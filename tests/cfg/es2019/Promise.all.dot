digraph {
  node17569 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node17560 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17571 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17555 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17550 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node17563 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17554 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17558 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17553 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iteratorRecord = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17575 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17577 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17566 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node17549 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17545 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17562 [shape=cds, label=<<font color="black">5:app __x4__ = (PerformPromiseAll iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node17574 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17567 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node17546 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17559 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17568 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17573 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17547 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17576 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17564 [shape=cds, label=<<font color="black">6:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node17551 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17570 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17552 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node17543 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17565 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node17544 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17561 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17572 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17548 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17557 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17558 -> node17559 [label=<<font color="black">true</font>> color="black"]
  node17558 -> node17560 [label=<<font color="black">false</font>> color="black"]
  node17575 -> node17576 [ color="black"]
  node17554 -> node17555 [label=<<font color="black">true</font>> color="black"]
  node17554 -> node17561 [label=<<font color="black">false</font>> color="black"]
  node17557 -> node17558 [ color="black"]
  node17563 -> node17564 [ color="black"]
  node17566 -> node17567 [label=<<font color="black">true</font>> color="black"]
  node17566 -> node17569 [label=<<font color="black">false</font>> color="black"]
  node17574 -> node17575 [ color="black"]
  node17549 -> node17550 [ color="black"]
  node17562 -> node17563 [ color="black"]
  node17569 -> node17570 [label=<<font color="black">true</font>> color="black"]
  node17569 -> node17576 [label=<<font color="black">false</font>> color="black"]
  node17546 -> node17547 [ color="black"]
  node17568 -> node17569 [ color="black"]
  node17573 -> node17574 [label=<<font color="black">true</font>> color="black"]
  node17573 -> node17575 [label=<<font color="black">false</font>> color="black"]
  node17565 -> node17566 [label=<<font color="black">true</font>> color="black"]
  node17565 -> node17577 [label=<<font color="black">false</font>> color="black"]
  node17552 -> node17553 [ color="black"]
  node17553 -> node17554 [ color="black"]
  node17576 -> node17577 [ color="black"]
  node17564 -> node17565 [ color="black"]
  node17559 -> node17560 [ color="black"]
  node17547 -> node17548 [ color="black"]
  node17543 -> node17545 [ color="black"]
  node17560 -> node17561 [ color="black"]
  node17571 -> node17576 [ color="black"]
  node17550 -> node17551 [ color="black"]
  node17548 -> node17549 [label=<<font color="black">true</font>> color="black"]
  node17548 -> node17550 [label=<<font color="black">false</font>> color="black"]
  node17556 -> node17561 [ color="black"]
  node17567 -> node17568 [ color="black"]
  node17555 -> node17556 [label=<<font color="black">true</font>> color="black"]
  node17555 -> node17557 [label=<<font color="black">false</font>> color="black"]
  node17561 -> node17562 [ color="black"]
  node17545 -> node17546 [ color="black"]
  node17551 -> node17552 [ color="black"]
  node17570 -> node17571 [label=<<font color="black">true</font>> color="black"]
  node17570 -> node17572 [label=<<font color="black">false</font>> color="black"]
  node17577 -> node17544 [ color="black"]
  node17572 -> node17573 [ color="black"]
}
