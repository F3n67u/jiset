digraph {
  node10507 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let strLen = string.length</td></tr>
      <tr><td align="left">1:let R = &quot;&quot;</td></tr>
      <tr><td align="left">2:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let C = string[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10516 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:??? &quot;Let id:{jOctet} be the value at index id:{j} within id:{Octets} .&quot;</td></tr>
      <tr><td align="left">23:??? &quot;Let id:{S} be a String containing three code units &lt; code &gt; \&quot; % &lt; var &gt; XY &lt; / var &gt; \&quot; &lt; / code &gt; where id:{XY} are two uppercase hexadecimal digits encoding the value of id:{jOctet} .&quot;</td></tr>
      <tr><td align="left">24:let R = (+ R S)</td></tr>
      <tr><td align="left">25:j = (+ j 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10506 [shape=cds, label=<<font color="black">app unescapedSet = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node10513 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{S} be a String containing only the code unit id:{C} .&quot;</td></tr>
      <tr><td align="left">8:let R = (+ R S)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10505 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:??? &quot;If the code unit value of id:{C} is not less than 0xDC00 and not greater than 0xDFFF , throw a value:{URIError} exception .&quot;</td></tr>
      <tr><td align="left">11:??? &quot;If the code unit value of id:{C} is less than 0xD800 or greater than 0xDBFF , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">13:??? &quot;Else , in:{} out:{}&quot;</td></tr>
      <tr><td align="left">19:??? &quot;Let id:{Octets} be the array of octets resulting by applying the UTF - 8 transformation to id:{V} , and let id:{L} be the array size .&quot;</td></tr>
      <tr><td align="left">20:let j = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10508 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node10512 [shape=diamond, label=<<font color="black">(contains unescapedSet C)</font>> color="black" fillcolor="white" style=filled]
  node10515 [shape=diamond, label=<<font color="black">(&lt; j L)</font>> color="black" fillcolor="white" style=filled]
  node10510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return R</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10503 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10504 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10509 [shape=diamond, label=<<font color="black">(= k strLen)</font>> color="black" fillcolor="white" style=filled]
  node10517 -> node10508 [ color="black"]
  node10503 -> node10505 [ color="black"]
  node10516 -> node10515 [ color="black"]
  node10507 -> node10508 [ color="black"]
  node10512 -> node10513 [label=<<font color="black">true</font>> color="black"]
  node10512 -> node10514 [label=<<font color="black">false</font>> color="black"]
  node10510 -> node10511 [ color="black"]
  node10509 -> node10510 [label=<<font color="black">true</font>> color="black"]
  node10509 -> node10511 [label=<<font color="black">false</font>> color="black"]
  node10511 -> node10512 [ color="black"]
  node10508 -> node10509 [label=<<font color="black">true</font>> color="black"]
  node10508 -> node10504 [label=<<font color="black">false</font>> color="black"]
  node10515 -> node10516 [label=<<font color="black">true</font>> color="black"]
  node10515 -> node10517 [label=<<font color="black">false</font>> color="black"]
  node10513 -> node10517 [ color="black"]
  node10505 -> node10506 [ color="black"]
  node10506 -> node10507 [ color="black"]
  node10514 -> node10515 [ color="black"]
}
