digraph {
  node17723 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let alreadyResolved = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">1:??? &quot;Let id:{stepsResolve} be the algorithm steps defined in Promise Resolve Functions ( PromiseResolveFunctions ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17726 [shape=cds, label=<<font color="black">6:app __x1__ = (CreateBuiltinFunction stepsReject (new [&quot;Promise&quot;, &quot;AlreadyResolved&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17720 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17722 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17725 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let resolve = __x0__</td></tr>
      <tr><td align="left">3:resolve.Promise = promise</td></tr>
      <tr><td align="left">4:resolve.AlreadyResolved = alreadyResolved</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{stepsReject} be the algorithm steps defined in Promise Reject Functions ( PromiseRejectFunctions ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17721 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17724 [shape=cds, label=<<font color="black">2:app __x0__ = (CreateBuiltinFunction stepsResolve (new [&quot;Promise&quot;, &quot;AlreadyResolved&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17727 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let reject = __x1__</td></tr>
      <tr><td align="left">7:reject.Promise = promise</td></tr>
      <tr><td align="left">8:reject.AlreadyResolved = alreadyResolved</td></tr>
      <tr><td align="left">9:return (new Record(&quot;Resolve&quot; -&gt; resolve, &quot;Reject&quot; -&gt; reject))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17722 -> node17723 [ color="black"]
  node17720 -> node17722 [ color="black"]
  node17725 -> node17726 [ color="black"]
  node17724 -> node17725 [ color="black"]
  node17723 -> node17724 [ color="black"]
  node17726 -> node17727 [ color="black"]
  node17727 -> node17721 [ color="black"]
}
