digraph {
  node18575 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18585 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18582 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x2__) (! (= __x2__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18571 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18578 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18586 [shape=cds, label=<<font color="black">4:app __x3__ = (PerformPromiseAll iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node18601 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18581 [shape=cds, label=<<font color="black">app __x2__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18570 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18584 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18593 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node18587 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let result = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18592 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18597 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x6__) (! (= __x6__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18595 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18600 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18589 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18576 [shape=cds, label=<<font color="black">2:app __x1__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node18594 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18572 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18577 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iteratorRecord = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18590 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node18573 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18580 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18599 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18588 [shape=cds, label=<<font color="black">5:app __x4__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node18574 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18591 [shape=cds, label=<<font color="black">app __x5__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node18579 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18598 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18596 [shape=cds, label=<<font color="black">app __x6__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18583 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18596 -> node18597 [ color="black"]
  node18573 -> node18574 [ color="black"]
  node18577 -> node18578 [ color="black"]
  node18601 -> node18571 [ color="black"]
  node18598 -> node18599 [ color="black"]
  node18599 -> node18600 [ color="black"]
  node18572 -> node18573 [ color="black"]
  node18570 -> node18572 [ color="black"]
  node18585 -> node18586 [ color="black"]
  node18581 -> node18582 [ color="black"]
  node18582 -> node18583 [label=<<font color="black">true</font>> color="black"]
  node18582 -> node18584 [label=<<font color="black">false</font>> color="black"]
  node18588 -> node18589 [ color="black"]
  node18579 -> node18580 [label=<<font color="black">true</font>> color="black"]
  node18579 -> node18581 [label=<<font color="black">false</font>> color="black"]
  node18589 -> node18590 [label=<<font color="black">true</font>> color="black"]
  node18589 -> node18601 [label=<<font color="black">false</font>> color="black"]
  node18576 -> node18577 [ color="black"]
  node18583 -> node18584 [ color="black"]
  node18600 -> node18601 [ color="black"]
  node18592 -> node18593 [ color="black"]
  node18597 -> node18598 [label=<<font color="black">true</font>> color="black"]
  node18597 -> node18599 [label=<<font color="black">false</font>> color="black"]
  node18587 -> node18588 [ color="black"]
  node18578 -> node18579 [label=<<font color="black">true</font>> color="black"]
  node18578 -> node18585 [label=<<font color="black">false</font>> color="black"]
  node18595 -> node18600 [ color="black"]
  node18594 -> node18595 [label=<<font color="black">true</font>> color="black"]
  node18594 -> node18596 [label=<<font color="black">false</font>> color="black"]
  node18590 -> node18591 [label=<<font color="black">true</font>> color="black"]
  node18590 -> node18593 [label=<<font color="black">false</font>> color="black"]
  node18593 -> node18594 [label=<<font color="black">true</font>> color="black"]
  node18593 -> node18600 [label=<<font color="black">false</font>> color="black"]
  node18584 -> node18585 [ color="black"]
  node18574 -> node18575 [ color="black"]
  node18580 -> node18585 [ color="black"]
  node18575 -> node18576 [ color="black"]
  node18586 -> node18587 [ color="black"]
  node18591 -> node18592 [ color="black"]
}
