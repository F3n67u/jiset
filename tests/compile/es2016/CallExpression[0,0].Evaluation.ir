{
  [0] access __x0__ = (MemberExpression "Evaluation")
  [0] let ref = __x0__
  [1] app __x1__ = (GetValue ref)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [1] {}
  [1] let func = __x1__
  [2] app __x2__ = (Type ref)
  [2] let __x3__ = (= __x2__ Reference)
  [2] if __x3__ {
    app __x4__ = (IsPropertyReference ref)
    let __x5__ = (= __x4__ false)
    if __x5__ {
      app __x6__ = (GetReferencedName ref)
      __x5__ = (= __x6__ "eval")
    } else [1] {}
    __x3__ = __x5__
  } else [1] {}
  [2] if __x3__ {
    [3] app __x7__ = (SameValue func INTRINSIC_eval)
    [3] if (= __x7__ true) {
      [4] app __x8__ = (ArgumentListEvaluation Arguments)
      [4] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [1] {}
      [4] let argList = __x8__
      [5] if (= argList.length 0i) {
        app __x9__ = (WrapCompletion undefined)
        return __x9__
      } else [1] {}
      [6] let evalText = argList[0i]
      [7] ??? "If the source code matching this nt:{CallExpression} is strict code , let id:{strictCaller} be value:{true} . Otherwise let id:{strictCaller} be value:{false} ."
      [8] let evalRealm = REALM
      [9] app __x10__ = (PerformEval evalText evalRealm strictCaller true)
      [9] if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else [1] {}
      [9] app __x11__ = (WrapCompletion __x10__)
      [9] return __x11__
    } else [1] {}
  } else [1] {}
  [16] app __x12__ = (Type ref)
  [16] if (= __x12__ Reference) {
    [11] app __x13__ = (IsPropertyReference ref)
    [11] if (= __x13__ true) {
      [12] app __x14__ = (GetThisValue ref)
      [12] let thisValue = __x14__
    } else [1] {}
    [13] ??? "Else , the base of id:{ref} is an Environment Record step-list:{...}"
  } else let thisValue = undefined
  [18] let thisCall = this
  [19] app __x15__ = (IsInTailPosition thisCall)
  [19] let tailCall = __x15__
  [20] app __x16__ = (EvaluateDirectCall func thisValue Arguments tailCall)
  [20] if (is-completion __x16__) if (= __x16__.Type CONST_normal) __x16__ = __x16__.Value else return __x16__ else [1] {}
  [20] app __x17__ = (WrapCompletion __x16__)
  [20] return __x17__
}