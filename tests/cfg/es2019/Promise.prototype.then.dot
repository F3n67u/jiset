digraph {
  node17766 [shape=cds, label=<<font color="black">app onFulfilled = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17773 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let C = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17770 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node17767 [shape=cds, label=<<font color="black">app onRejected = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17764 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17768 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let promise = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17777 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17772 [shape=cds, label=<<font color="black">2:app __x1__ = (SpeciesConstructor promise INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node17775 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let resultCapability = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17765 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17771 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17774 [shape=cds, label=<<font color="black">3:app __x2__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node17776 [shape=cds, label=<<font color="black">4:app __x3__ = (PerformPromiseThen promise onFulfilled onRejected resultCapability)</font>> color="black" fillcolor="white" style=filled]
  node17769 [shape=cds, label=<<font color="black">1:app __x0__ = (IsPromise promise)</font>> color="black" fillcolor="white" style=filled]
  node17769 -> node17770 [ color="black"]
  node17771 -> node17772 [ color="black"]
  node17774 -> node17775 [ color="black"]
  node17776 -> node17777 [ color="black"]
  node17767 -> node17768 [ color="black"]
  node17775 -> node17776 [ color="black"]
  node17764 -> node17766 [ color="black"]
  node17770 -> node17771 [label=<<font color="black">true</font>> color="black"]
  node17770 -> node17772 [label=<<font color="black">false</font>> color="black"]
  node17772 -> node17773 [ color="black"]
  node17768 -> node17769 [ color="black"]
  node17777 -> node17765 [ color="black"]
  node17766 -> node17767 [ color="black"]
  node17773 -> node17774 [ color="black"]
}
