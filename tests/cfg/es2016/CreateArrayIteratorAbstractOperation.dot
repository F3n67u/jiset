digraph {
  node14228 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14232 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let iterator = __x1__</td></tr>
      <tr><td align="left">2:iterator.IteratedObject = array</td></tr>
      <tr><td align="left">3:iterator.ArrayIteratorNextIndex = 0i</td></tr>
      <tr><td align="left">4:iterator.ArrayIterationKind = kind</td></tr>
      <tr><td align="left">5:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14227 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14231 [shape=cds, label=<<font color="black">1:app __x1__ = (ObjectCreate INTRINSIC_ArrayIteratorPrototype (new [&quot;IteratedObject&quot;, &quot;ArrayIteratorNextIndex&quot;, &quot;ArrayIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node14230 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14229 [shape=cds, label=<<font color="black">0:app __x0__ = (Type array)</font>> color="black" fillcolor="white" style=filled]
  node14232 -> node14228 [ color="black"]
  node14230 -> node14231 [ color="black"]
  node14229 -> node14230 [ color="black"]
  node14227 -> node14229 [ color="black"]
  node14231 -> node14232 [ color="black"]
}
