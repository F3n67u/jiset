["Evaluate", {
  "nt": "Disjunction"
}, "with", "+", "1", "as", "its", {
  "id": "direction"
}, "argument", "to", "obtain", "a", "Matcher", {
  "id": "m"
}, ".", {
  "k": 0
}, "Return", "a", "new", "abstract", "closure", "with", "parameters", "(", {
  "id": "str"
}, ",", {
  "id": "index"
}, ")", "that", "captures", {
  "id": "m"
}, "and", "performs", "the", "following", "steps", "when", "called", ":", {
  "in": null
}, "Assert", ":", "Type", "(", {
  "id": "str"
}, ")", "is", "String", ".", {
  "k": 2
}, "Assert", ":", "!", "IsNonNegativeInteger", "(", {
  "id": "index"
}, ")", "is", {
  "value": "true"
}, "and", {
  "id": "index"
}, "â‰¤", "the", "length", "of", {
  "id": "str"
}, ".", {
  "k": 3
}, "If", {
  "id": "Unicode"
}, "is", {
  "value": "true"
}, ",", "let", {
  "id": "Input"
}, "be", "a", "List", "consisting", "of", "the", "sequence", "of", "code", "points", "of", "!", "UTF16DecodeString", "(", {
  "id": "str"
}, ")", ".", "Otherwise", ",", "let", {
  "id": "Input"
}, "be", "a", "List", "consisting", "of", "the", "sequence", "of", "code", "units", "that", "are", "the", "elements", "of", {
  "id": "str"
}, ".", {
  "id": "Input"
}, "will", "be", "used", "throughout", "the", "algorithms", "in", {
  "link": "unhandled: sec-pattern-semantics"
}, ".", "Each", "element", "of", {
  "id": "Input"
}, "is", "considered", "to", "be", "a", "character", ".", {
  "k": 4
}, "Let", {
  "id": "InputLength"
}, "be", "the", "number", "of", "characters", "contained", "in", {
  "id": "Input"
}, ".", "This", "variable", "will", "be", "used", "throughout", "the", "algorithms", "in", {
  "link": "unhandled: sec-pattern-semantics"
}, ".", {
  "k": 5
}, "Let", {
  "id": "listIndex"
}, "be", "the", "index", "into", {
  "id": "Input"
}, "of", "the", "character", "that", "was", "obtained", "from", "element", {
  "id": "index"
}, "of", {
  "id": "str"
}, ".", {
  "k": 6
}, "Let", {
  "id": "c"
}, "be", "a", "new", "Continuation", "with", "parameters", "(", {
  "id": "y"
}, ")", "that", "captures", "nothing", "and", "performs", "the", "following", "steps", "when", "called", ":", {
  "in": null
}, "Assert", ":", {
  "id": "y"
}, "is", "a", "State", ".", {
  "k": 8
}, "Return", {
  "id": "y"
}, ".", {
  "k": 9
}, {
  "out": null
}, {
  "k": 7
}, "Let", {
  "id": "cap"
}, "be", "a", "List", "of", {
  "id": "NcapturingParens"
}, {
  "value": "undefined"
}, "values", ",", "indexed", "1", "through", {
  "id": "NcapturingParens"
}, ".", {
  "k": 10
}, "Let", {
  "id": "x"
}, "be", "the", "State", "(", {
  "id": "listIndex"
}, ",", {
  "id": "cap"
}, ")", ".", {
  "k": 11
}, "Call", {
  "id": "m"
}, "(", {
  "id": "x"
}, ",", {
  "id": "c"
}, ")", "and", "return", "its", "result", ".", {
  "k": 12
}, {
  "out": null
}, {
  "k": 1
}]