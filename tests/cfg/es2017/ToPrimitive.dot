digraph {
  node269 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">hint = &quot;number&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node257 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let hint = &quot;default&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node261 [shape=diamond, label=<<font color="black">(! (= exoticToPrim undefined))</font>> color="black" fillcolor="white" style=filled]
  node253 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node265 [shape=diamond, label=<<font color="black">(! (= __x3__ Object))</font>> color="black" fillcolor="white" style=filled]
  node270 [shape=cds, label=<<font color="black">11:app __x4__ = (OrdinaryToPrimitive input hint)</font>> color="black" fillcolor="white" style=filled]
  node260 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let exoticToPrim = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node252 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node256 [shape=diamond, label=<<font color="black">(= PreferredType absent)</font>> color="black" fillcolor="white" style=filled]
  node266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node264 [shape=cds, label=<<font color="black">8:app __x3__ = (Type result)</font>> color="black" fillcolor="white" style=filled]
  node259 [shape=cds, label=<<font color="black">5:app __x1__ = (GetMethod input SYMBOL_toPrimitive)</font>> color="black" fillcolor="white" style=filled]
  node271 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node267 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node255 [shape=diamond, label=<<font color="black">(= __x0__ Object)</font>> color="black" fillcolor="white" style=filled]
  node263 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let result = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:??? &quot;Else if id:{PreferredType} is hint String , let id:{hint} be code:{\&quot;string\&quot;} .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;Else id:{PreferredType} is hint Number , let id:{hint} be code:{\&quot;number\&quot;} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node272 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return input</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node262 [shape=cds, label=<<font color="black">7:app __x2__ = (Call exoticToPrim input (new [hint]))</font>> color="black" fillcolor="white" style=filled]
  node268 [shape=diamond, label=<<font color="black">(= hint &quot;default&quot;)</font>> color="black" fillcolor="white" style=filled]
  node254 [shape=cds, label=<<font color="black">1:app __x0__ = (Type input)</font>> color="black" fillcolor="white" style=filled]
  node263 -> node264 [ color="black"]
  node257 -> node258 [ color="black"]
  node259 -> node260 [ color="black"]
  node271 -> node272 [ color="black"]
  node261 -> node262 [label=<<font color="black">true</font>> color="black"]
  node261 -> node268 [label=<<font color="black">false</font>> color="black"]
  node252 -> node254 [ color="black"]
  node270 -> node271 [ color="black"]
  node255 -> node256 [label=<<font color="black">true</font>> color="black"]
  node255 -> node272 [label=<<font color="black">false</font>> color="black"]
  node258 -> node259 [ color="black"]
  node265 -> node266 [label=<<font color="black">true</font>> color="black"]
  node265 -> node267 [label=<<font color="black">false</font>> color="black"]
  node256 -> node257 [label=<<font color="black">true</font>> color="black"]
  node256 -> node258 [label=<<font color="black">false</font>> color="black"]
  node272 -> node253 [ color="black"]
  node267 -> node268 [ color="black"]
  node262 -> node263 [ color="black"]
  node264 -> node265 [ color="black"]
  node269 -> node270 [ color="black"]
  node260 -> node261 [ color="black"]
  node268 -> node269 [label=<<font color="black">true</font>> color="black"]
  node268 -> node270 [label=<<font color="black">false</font>> color="black"]
  node254 -> node255 [ color="black"]
  node266 -> node267 [ color="black"]
}
