digraph {
  node18328 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node18356 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let rejectElement = [! __x11__]</td></tr>
      <tr><td align="left">33:rejectElement.AlreadyCalled = alreadyCalled</td></tr>
      <tr><td align="left">34:rejectElement.Index = index</td></tr>
      <tr><td align="left">35:rejectElement.Values = values</td></tr>
      <tr><td align="left">36:rejectElement.Capability = resultCapability</td></tr>
      <tr><td align="left">37:rejectElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">38:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18333 [shape=cds, label=<<font color="black">9:app __x4__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node18344 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18340 [shape=cds, label=<<font color="black">15:app __x5__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node18351 [shape=cds, label=<<font color="black">22:app __x9__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node18347 [shape=cds, label=<<font color="black">19:app __x8__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node18357 [shape=cds, label=<<font color="black">39:app __x12__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, rejectElement]))</font>> color="black" fillcolor="white" style=filled]
  node18350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:[? nextValue]</td></tr>
      <tr><td align="left">21:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18331 [shape=cds, label=<<font color="black">8:app __x3__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18355 [shape=cds, label=<<font color="black">32:app __x11__ = (CreateBuiltinFunction rejectSteps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18349 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18337 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node18352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let nextPromise = [? __x9__]</td></tr>
      <tr><td align="left">23:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.allsettled-resolve-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18342 [shape=cds, label=<<font color="black">16:app __x6__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node18323 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node18334 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18336 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18321 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18353 [shape=cds, label=<<font color="black">24:app __x10__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18320 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18348 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node18324 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= [! __x0__] true)</td></tr>
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18329 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18343 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:[? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18332 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let next = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18325 [shape=cds, label=<<font color="black">5:app __x1__ = (Get constructor &quot;resolve&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18338 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">13:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18319 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18354 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let resolveElement = [! __x10__]</td></tr>
      <tr><td align="left">25:let alreadyCalled = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">26:resolveElement.AlreadyCalled = alreadyCalled</td></tr>
      <tr><td align="left">27:resolveElement.Index = index</td></tr>
      <tr><td align="left">28:resolveElement.Values = values</td></tr>
      <tr><td align="left">29:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">30:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">31:??? &quot;Let id:{rejectSteps} be the algorithm steps defined in link:{unhandled: sec-promise.allsettled-reject-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18326 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promiseResolve = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:[? __x12__]</td></tr>
      <tr><td align="left">40:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18322 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18341 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let valuesArray = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18339 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node18346 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let nextValue = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18318 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18330 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node18327 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18345 [shape=cds, label=<<font color="black">18:app __x7__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node18339 -> node18340 [label=<<font color="black">true</font>> color="black"]
  node18339 -> node18344 [label=<<font color="black">false</font>> color="black"]
  node18330 -> node18331 [label=<<font color="black">true</font>> color="black"]
  node18330 -> node18319 [label=<<font color="black">false</font>> color="black"]
  node18346 -> node18347 [ color="black"]
  node18334 -> node18335 [label=<<font color="black">true</font>> color="black"]
  node18334 -> node18336 [label=<<font color="black">false</font>> color="black"]
  node18356 -> node18357 [ color="black"]
  node18343 -> node18344 [ color="black"]
  node18353 -> node18354 [ color="black"]
  node18348 -> node18349 [label=<<font color="black">true</font>> color="black"]
  node18348 -> node18350 [label=<<font color="black">false</font>> color="black"]
  node18340 -> node18341 [ color="black"]
  node18328 -> node18329 [label=<<font color="black">true</font>> color="black"]
  node18328 -> node18330 [label=<<font color="black">false</font>> color="black"]
  node18351 -> node18352 [ color="black"]
  node18344 -> node18345 [ color="black"]
  node18350 -> node18351 [ color="black"]
  node18349 -> node18350 [ color="black"]
  node18335 -> node18336 [ color="black"]
  node18329 -> node18330 [ color="black"]
  node18345 -> node18346 [ color="black"]
  node18332 -> node18333 [ color="black"]
  node18354 -> node18355 [ color="black"]
  node18352 -> node18353 [ color="black"]
  node18355 -> node18356 [ color="black"]
  node18333 -> node18334 [ color="black"]
  node18341 -> node18342 [ color="black"]
  node18331 -> node18332 [ color="black"]
  node18358 -> node18330 [ color="black"]
  node18325 -> node18326 [ color="black"]
  node18326 -> node18327 [ color="black"]
  node18342 -> node18343 [ color="black"]
  node18336 -> node18337 [ color="black"]
  node18323 -> node18324 [ color="black"]
  node18318 -> node18320 [ color="black"]
  node18347 -> node18348 [ color="black"]
  node18338 -> node18339 [ color="black"]
  node18324 -> node18325 [ color="black"]
  node18321 -> node18322 [ color="black"]
  node18322 -> node18323 [ color="black"]
  node18357 -> node18358 [ color="black"]
  node18327 -> node18328 [ color="black"]
  node18337 -> node18338 [label=<<font color="black">true</font>> color="black"]
  node18337 -> node18345 [label=<<font color="black">false</font>> color="black"]
  node18320 -> node18321 [ color="black"]
}
