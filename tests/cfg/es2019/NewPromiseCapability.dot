digraph {
  node17495 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17498 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node17509 [shape=diamond, label=<<font color="black">(= __x4__ false)</font>> color="black" fillcolor="white" style=filled]
  node17503 [shape=cds, label=<<font color="black">6:app __x2__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node17499 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17504 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let promise = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17500 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = (new PromiseCapability(&quot;Promise&quot; -&gt; undefined, &quot;Resolve&quot; -&gt; undefined, &quot;Reject&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:let steps = GetCapabilitiesExecutorFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">10:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17497 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node17510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17502 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let executor = __x1__</td></tr>
      <tr><td align="left">5:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17507 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17505 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node17496 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17501 [shape=cds, label=<<font color="black">4:app __x1__ = (CreateBuiltinFunction steps (new [&quot;Capability&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17508 [shape=cds, label=<<font color="black">8:app __x4__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node17506 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node17497 -> node17498 [ color="black"]
  node17495 -> node17497 [ color="black"]
  node17502 -> node17503 [ color="black"]
  node17506 -> node17507 [label=<<font color="black">true</font>> color="black"]
  node17506 -> node17508 [label=<<font color="black">false</font>> color="black"]
  node17511 -> node17496 [ color="black"]
  node17498 -> node17499 [label=<<font color="black">true</font>> color="black"]
  node17498 -> node17500 [label=<<font color="black">false</font>> color="black"]
  node17505 -> node17506 [ color="black"]
  node17507 -> node17508 [ color="black"]
  node17509 -> node17510 [label=<<font color="black">true</font>> color="black"]
  node17509 -> node17511 [label=<<font color="black">false</font>> color="black"]
  node17503 -> node17504 [ color="black"]
  node17508 -> node17509 [ color="black"]
  node17499 -> node17500 [ color="black"]
  node17500 -> node17501 [ color="black"]
  node17510 -> node17511 [ color="black"]
  node17501 -> node17502 [ color="black"]
  node17504 -> node17505 [ color="black"]
}
