digraph {
  node5 [shape=cds, label=<<font color="black">1:app __x0__ = (Type rx)</font>> color="black" fillcolor="white" style=filled]
  node84 [shape=diamond, label=<<font color="black">(! (&lt; position nextSourcePosition))</font>> color="black" fillcolor="white" style=filled]
  node65 [shape=diamond, label=<<font color="black">(! (= capN undefined))</font>> color="black" fillcolor="white" style=filled]
  node77 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append namedCaptures -&gt; replacerArgs</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node66 [shape=cds, label=<<font color="black">39:app __x29__ = (ToString capN)</font>> color="black" fillcolor="white" style=filled]
  node87 [shape=diamond, label=<<font color="black">(! (&lt; nextSourcePosition lengthS))</font>> color="black" fillcolor="white" style=filled]
  node83 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:let replacement = __x36__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node69 [shape=cds, label=<<font color="black">42:app __x30__ = (Get result &quot;groups&quot;)</font>> color="black" fillcolor="white" style=filled]
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node88 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return accumulatedResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node56 [shape=cds, label=<<font color="black">32:app __x24__ = (ToInteger [? __x23__])</font>> color="black" fillcolor="white" style=filled]
  node42 [shape=cds, label=<<font color="black">24:app __x15__ = (Set rx &quot;lastIndex&quot; nextIndex true)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let results = (new [])</td></tr>
      <tr><td align="left">12:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node37 [shape=cds, label=<<font color="black">22:app __x12__ = (Get rx &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node52 [shape=cds, label=<<font color="black">30:app __x21__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let replaceValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=cds, label=<<font color="black">9:app __x7__ = (ToBoolean [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node46 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node57 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let position = [? __x24__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node78 [shape=cds, label=<<font color="black">49:app __x34__ = (Call replaceValue undefined replacerArgs)</font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node61 [shape=diamond, label=<<font color="black">(! (&lt; nCaptures n))</font>> color="black" fillcolor="white" style=filled]
  node89 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">58:??? &quot;Return the string - concatenation of id:{accumulatedResult} and the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up through the final code unit of id:{S} ( inclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node74 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x33__ = __x31__[__x32__]</td></tr>
      <tr><td align="left">append __x33__ -&gt; replacerArgs</td></tr>
      <tr><td align="left">__x32__ = (+ __x32__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node60 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let position = __x26__</td></tr>
      <tr><td align="left">34:let n = 1i</td></tr>
      <tr><td align="left">35:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node85 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">55:??? &quot;Let id:{accumulatedResult} be the string - concatenation of the current value of id:{accumulatedResult} , the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up to id:{position} ( exclusive ) , and id:{replacement} .&quot;</td></tr>
      <tr><td align="left">56:let nextSourcePosition = (+ position matchLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node70 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">42:let namedCaptures = [? __x30__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let fullUnicode = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node33 [shape=cds, label=<<font color="black">20:app __x10__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=diamond, label=<<font color="black">(= result null)</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=cds, label=<<font color="black">22:app __x13__ = (ToLength [? __x12__])</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let S = [? __x1__]</td></tr>
      <tr><td align="left">3:let lengthS = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node53 [shape=cds, label=<<font color="black">30:app __x22__ = (ToString [? __x21__])</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">6:app __x3__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let nextIndex = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node73 [shape=diamond, label=<<font color="black">(&lt; __x32__ __x31__.length)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node45 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node64 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:let capN = [? __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let global = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node34 [shape=cds, label=<<font color="black">20:app __x11__ = (ToString [? __x10__])</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">10:app __x8__ = (Set rx &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let accumulatedResult = &quot;&quot;</td></tr>
      <tr><td align="left">26:let nextSourcePosition = 0i</td></tr>
      <tr><td align="left">27:let __x16__ = results</td></tr>
      <tr><td align="left">27:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node59 [shape=cds, label=<<font color="black">33:app __x26__ = (max __x25__ 0i)</font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let result = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node71 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node54 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let matched = [? __x22__]</td></tr>
      <tr><td align="left">31:let matchLength = matched.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node49 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let nCaptures = [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node86 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node81 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">50:let replacement = [? __x35__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node76 [shape=diamond, label=<<font color="black">(! (= namedCaptures undefined))</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node39 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let thisIndex = [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node80 [shape=cds, label=<<font color="black">50:app __x35__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node35 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let matchStr = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node48 [shape=cds, label=<<font color="black">28:app __x19__ = (ToLength [? __x18__])</font>> color="black" fillcolor="white" style=filled]
  node63 [shape=cds, label=<<font color="black">37:app __x28__ = (Get result [! __x27__])</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white" style=filled]
  node50 [shape=cds, label=<<font color="black">29:app __x20__ = (max (- nCaptures 1i) 0i)</font>> color="black" fillcolor="white" style=filled]
  node67 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let capN = [? __x29__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=cds, label=<<font color="black">7:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node31 [shape=diamond, label=<<font color="black">(= global false)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let functionalReplace = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node72 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">44:let replacerArgs = (new [matched])</td></tr>
      <tr><td align="left">45:let __x31__ = captures</td></tr>
      <tr><td align="left">45:let __x32__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node43 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:[? __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node40 [shape=cds, label=<<font color="black">23:app __x14__ = (AdvanceStringIndex S thisIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=cds, label=<<font color="black">14:app __x9__ = (RegExpExec rx S)</font>> color="black" fillcolor="white" style=filled]
  node55 [shape=cds, label=<<font color="black">32:app __x23__ = (Get result &quot;index&quot;)</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">2:app __x1__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node75 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:append position -&gt; replacerArgs</td></tr>
      <tr><td align="left">46:append S -&gt; replacerArgs</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node58 [shape=cds, label=<<font color="black">33:app __x25__ = (min position lengthS)</font>> color="black" fillcolor="white" style=filled]
  node82 [shape=cds, label=<<font color="black">52:app __x36__ = (GetSubstitution matched S position captures namedCaptures replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node36 [shape=diamond, label=<<font color="black">(= matchStr &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node30 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:append result -&gt; results</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node51 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let nCaptures = __x20__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=cds, label=<<font color="black">9:app __x6__ = (Get rx &quot;unicode&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let rx = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node79 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:let replValue = [? __x34__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node47 [shape=cds, label=<<font color="black">28:app __x18__ = (Get result &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">7:app __x4__ = (Get rx &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node68 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:append capN -&gt; captures</td></tr>
      <tr><td align="left">41:let n = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node62 [shape=cds, label=<<font color="black">37:app __x27__ = (ToString n)</font>> color="black" fillcolor="white" style=filled]
  node43 -> node25 [ color="black"]
  node11 -> node12 [ color="black"]
  node79 -> node80 [ color="black"]
  node82 -> node83 [ color="black"]
  node69 -> node70 [ color="black"]
  node49 -> node50 [ color="black"]
  node38 -> node39 [ color="black"]
  node5 -> node6 [ color="black"]
  node53 -> node54 [ color="black"]
  node3 -> node4 [ color="black"]
  node63 -> node64 [ color="black"]
  node73 -> node74 [label=<<font color="black">true</font>> color="black"]
  node73 -> node75 [label=<<font color="black">false</font>> color="black"]
  node64 -> node65 [ color="black"]
  node29 -> node25 [ color="black"]
  node36 -> node37 [label=<<font color="black">true</font>> color="black"]
  node36 -> node25 [label=<<font color="black">false</font>> color="black"]
  node25 -> node26 [label=<<font color="black">true</font>> color="black"]
  node25 -> node44 [label=<<font color="black">false</font>> color="black"]
  node39 -> node40 [ color="black"]
  node67 -> node68 [ color="black"]
  node6 -> node7 [label=<<font color="black">true</font>> color="black"]
  node6 -> node8 [label=<<font color="black">false</font>> color="black"]
  node7 -> node8 [ color="black"]
  node54 -> node55 [ color="black"]
  node42 -> node43 [ color="black"]
  node34 -> node35 [ color="black"]
  node66 -> node67 [ color="black"]
  node76 -> node77 [label=<<font color="black">true</font>> color="black"]
  node76 -> node78 [label=<<font color="black">false</font>> color="black"]
  node45 -> node46 [label=<<font color="black">true</font>> color="black"]
  node45 -> node87 [label=<<font color="black">false</font>> color="black"]
  node61 -> node62 [label=<<font color="black">true</font>> color="black"]
  node61 -> node69 [label=<<font color="black">false</font>> color="black"]
  node18 -> node19 [label=<<font color="black">true</font>> color="black"]
  node18 -> node24 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node62 -> node63 [ color="black"]
  node15 -> node16 [ color="black"]
  node55 -> node56 [ color="black"]
  node89 -> node1 [ color="black"]
  node83 -> node84 [ color="black"]
  node19 -> node20 [ color="black"]
  node13 -> node14 [ color="black"]
  node35 -> node36 [ color="black"]
  node57 -> node58 [ color="black"]
  node0 -> node2 [ color="black"]
  node68 -> node61 [ color="black"]
  node75 -> node76 [ color="black"]
  node52 -> node53 [ color="black"]
  node22 -> node23 [ color="black"]
  node70 -> node71 [ color="black"]
  node9 -> node10 [ color="black"]
  node12 -> node13 [label=<<font color="black">true</font>> color="black"]
  node12 -> node15 [label=<<font color="black">false</font>> color="black"]
  node65 -> node66 [label=<<font color="black">true</font>> color="black"]
  node65 -> node68 [label=<<font color="black">false</font>> color="black"]
  node44 -> node45 [ color="black"]
  node27 -> node28 [ color="black"]
  node37 -> node38 [ color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
  node40 -> node41 [ color="black"]
  node30 -> node31 [ color="black"]
  node28 -> node29 [label=<<font color="black">true</font>> color="black"]
  node28 -> node30 [label=<<font color="black">false</font>> color="black"]
  node77 -> node78 [ color="black"]
  node86 -> node45 [ color="black"]
  node71 -> node72 [label=<<font color="black">true</font>> color="black"]
  node71 -> node82 [label=<<font color="black">false</font>> color="black"]
  node26 -> node27 [ color="black"]
  node72 -> node73 [ color="black"]
  node78 -> node79 [ color="black"]
  node10 -> node11 [ color="black"]
  node88 -> node89 [ color="black"]
  node47 -> node48 [ color="black"]
  node50 -> node51 [ color="black"]
  node4 -> node5 [ color="black"]
  node51 -> node52 [ color="black"]
  node31 -> node32 [label=<<font color="black">true</font>> color="black"]
  node31 -> node33 [label=<<font color="black">false</font>> color="black"]
  node84 -> node85 [label=<<font color="black">true</font>> color="black"]
  node84 -> node86 [label=<<font color="black">false</font>> color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [ color="black"]
  node59 -> node60 [ color="black"]
  node20 -> node21 [ color="black"]
  node56 -> node57 [ color="black"]
  node60 -> node61 [ color="black"]
  node24 -> node25 [ color="black"]
  node16 -> node17 [ color="black"]
  node74 -> node73 [ color="black"]
  node46 -> node47 [ color="black"]
  node81 -> node84 [ color="black"]
  node87 -> node88 [label=<<font color="black">true</font>> color="black"]
  node87 -> node89 [label=<<font color="black">false</font>> color="black"]
  node58 -> node59 [ color="black"]
  node48 -> node49 [ color="black"]
  node32 -> node25 [ color="black"]
  node85 -> node86 [ color="black"]
  node17 -> node18 [ color="black"]
  node80 -> node81 [ color="black"]
  node33 -> node34 [ color="black"]
  node41 -> node42 [ color="black"]
}
