digraph {
  node7596 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Return the result of appending to id:{declarations} the elements of the LexicallyScopedDeclarations of the second nt:{CaseClauses} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7592 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node7588 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7591 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let __x2__ = __x1__</td></tr>
      <tr><td align="left">2:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7593 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; declarations</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7587 [shape=cds, label=<<font color="black">access __x0__ = (CaseClauses0 &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7590 [shape=cds, label=<<font color="black">2:access __x1__ = (DefaultClause &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7594 [shape=diamond, label=<<font color="black">(= CaseClauses1 absent)</font>> color="black" fillcolor="white" style=filled]
  node7586 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node7589 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7584 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7585 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7595 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return declarations</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7593 -> node7592 [ color="black"]
  node7596 -> node7585 [ color="black"]
  node7592 -> node7593 [label=<<font color="black">true</font>> color="black"]
  node7592 -> node7594 [label=<<font color="black">false</font>> color="black"]
  node7590 -> node7591 [ color="black"]
  node7586 -> node7587 [label=<<font color="black">true</font>> color="black"]
  node7586 -> node7589 [label=<<font color="black">false</font>> color="black"]
  node7584 -> node7586 [ color="black"]
  node7595 -> node7596 [ color="black"]
  node7587 -> node7588 [ color="black"]
  node7588 -> node7590 [ color="black"]
  node7589 -> node7590 [ color="black"]
  node7591 -> node7592 [ color="black"]
  node7594 -> node7595 [label=<<font color="black">true</font>> color="black"]
  node7594 -> node7596 [label=<<font color="black">false</font>> color="black"]
}
