digraph {
  node17639 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node17641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let fulfillReaction = (new PromiseReaction(&quot;Capability&quot; -&gt; resultCapability, &quot;Type&quot; -&gt; &quot;Fulfill&quot;, &quot;Handler&quot; -&gt; onFulfilled))</td></tr>
      <tr><td align="left">7:let rejectReaction = (new PromiseReaction(&quot;Capability&quot; -&gt; resultCapability, &quot;Type&quot; -&gt; &quot;Reject&quot;, &quot;Handler&quot; -&gt; onRejected))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17645 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let value = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17642 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;pending&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17638 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable onRejected)</font>> color="black" fillcolor="white" style=filled]
  node17654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:promise.PromiseIsHandled = true</td></tr>
      <tr><td align="left">20:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:append fulfillReaction -&gt; promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">10:append rejectReaction -&gt; promise.PromiseRejectReactions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:__x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17632 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17640 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onRejected = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17652 [shape=cds, label=<<font color="black">18:app __x5__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [rejectReaction, reason]))</font>> color="black" fillcolor="white" style=filled]
  node17635 [shape=cds, label=<<font color="black">2:app __x1__ = (IsCallable onFulfilled)</font>> color="black" fillcolor="white" style=filled]
  node17633 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPromise promise)</font>> color="black" fillcolor="white" style=filled]
  node17631 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17651 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17646 [shape=cds, label=<<font color="black">13:app __x3__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [fulfillReaction, value]))</font>> color="black" fillcolor="white" style=filled]
  node17637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onFulfilled = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17650 [shape=cds, label=<<font color="black">app __x4__ = (HostPromiseRejectionTracker promise &quot;handle&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17644 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;fulfilled&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17649 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node17648 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:assert (= promise.PromiseState &quot;rejected&quot;)</td></tr>
      <tr><td align="left">16:let reason = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17636 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node17634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17647 -> node17654 [ color="black"]
  node17641 -> node17642 [ color="black"]
  node17637 -> node17638 [ color="black"]
  node17645 -> node17646 [ color="black"]
  node17646 -> node17647 [ color="black"]
  node17648 -> node17649 [ color="black"]
  node17631 -> node17633 [ color="black"]
  node17651 -> node17652 [ color="black"]
  node17653 -> node17654 [ color="black"]
  node17639 -> node17640 [label=<<font color="black">true</font>> color="black"]
  node17639 -> node17641 [label=<<font color="black">false</font>> color="black"]
  node17652 -> node17653 [ color="black"]
  node17633 -> node17634 [ color="black"]
  node17650 -> node17651 [ color="black"]
  node17635 -> node17636 [ color="black"]
  node17642 -> node17643 [label=<<font color="black">true</font>> color="black"]
  node17642 -> node17644 [label=<<font color="black">false</font>> color="black"]
  node17640 -> node17641 [ color="black"]
  node17644 -> node17645 [label=<<font color="black">true</font>> color="black"]
  node17644 -> node17648 [label=<<font color="black">false</font>> color="black"]
  node17638 -> node17639 [ color="black"]
  node17649 -> node17650 [label=<<font color="black">true</font>> color="black"]
  node17649 -> node17652 [label=<<font color="black">false</font>> color="black"]
  node17654 -> node17632 [ color="black"]
  node17634 -> node17635 [ color="black"]
  node17643 -> node17654 [ color="black"]
  node17636 -> node17637 [label=<<font color="black">true</font>> color="black"]
  node17636 -> node17638 [label=<<font color="black">false</font>> color="black"]
}
