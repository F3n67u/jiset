digraph {
  node18062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let __x2__ = true</td></tr>
      <tr><td align="left">1:__x2__ = (! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18058 [shape=cds, label=<<font color="black">app __x3__ = (IsValidSimpleAssignmentTarget LeftHandSideExpression)</font>> color="black" fillcolor="white" style=filled]
  node18047 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = true</td></tr>
      <tr><td align="left">0:__x0__ = (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18055 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18048 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18045 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18057 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node18060 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node18054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18061 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x1__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18046 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18053 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18052 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18050 [shape=diamond, label=<<font color="black">(= absent (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new [])))</font>> color="black" fillcolor="white" style=filled]
  node18049 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x1__ = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18059 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (= __x3__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18060 -> node18061 [label=<<font color="black">true</font>> color="black"]
  node18060 -> node18062 [label=<<font color="black">false</font>> color="black"]
  node18055 -> node18056 [ color="black"]
  node18057 -> node18058 [label=<<font color="black">true</font>> color="black"]
  node18057 -> node18060 [label=<<font color="black">false</font>> color="black"]
  node18059 -> node18060 [ color="black"]
  node18056 -> node18057 [ color="black"]
  node18048 -> node18049 [label=<<font color="black">true</font>> color="black"]
  node18048 -> node18053 [label=<<font color="black">false</font>> color="black"]
  node18051 -> node18052 [ color="black"]
  node18047 -> node18048 [ color="black"]
  node18050 -> node18051 [label=<<font color="black">true</font>> color="black"]
  node18050 -> node18052 [label=<<font color="black">false</font>> color="black"]
  node18054 -> node18056 [ color="black"]
  node18061 -> node18046 [ color="black"]
  node18053 -> node18054 [label=<<font color="black">true</font>> color="black"]
  node18053 -> node18055 [label=<<font color="black">false</font>> color="black"]
  node18058 -> node18059 [ color="black"]
  node18062 -> node18046 [ color="black"]
  node18049 -> node18050 [ color="black"]
  node18052 -> node18053 [ color="black"]
  node18045 -> node18047 [ color="black"]
}
