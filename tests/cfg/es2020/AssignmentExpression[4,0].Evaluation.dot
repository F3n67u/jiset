digraph {
  node5778 [shape=cds, label=<<font color="black">12:app __x10__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5782 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x12__]</td></tr>
      <tr><td align="left">14:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5770 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rref = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5761 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5780 [shape=cds, label=<<font color="black">13:access __x11__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5775 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let assignmentPattern = (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5767 [shape=cds, label=<<font color="black">4:app __x5__ = (__x4__ __x3__)</font>> color="black" fillcolor="white" style=filled]
  node5781 [shape=cds, label=<<font color="black">13:app __x12__ = (__x11__ rval)</font>> color="black" fillcolor="white" style=filled]
  node5765 [shape=cds, label=<<font color="black">4:app __x3__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5759 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5773 [shape=cds, label=<<font color="black">8:app __x8__ = (PutValue lref rval)</font>> color="black" fillcolor="white" style=filled]
  node5772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rval = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5769 [shape=cds, label=<<font color="black">6:access __x6__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5779 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let rval = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5766 [shape=cds, label=<<font color="black">4:access __x4__ = (AssignmentExpression &quot;NamedEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5776 [shape=cds, label=<<font color="black">11:access __x9__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5762 [shape=cds, label=<<font color="black">5:app __x1__ = (IsAnonymousFunctionDefinition AssignmentExpression)</font>> color="black" fillcolor="white" style=filled]
  node5758 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5757 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5763 [shape=cds, label=<<font color="black">5:access __x2__ = (LeftHandSideExpression &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5771 [shape=cds, label=<<font color="black">7:app __x7__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5777 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rref = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5764 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x1__ true) (= __x2__ true))</font>> color="black" fillcolor="white" style=filled]
  node5760 [shape=cds, label=<<font color="black">1:access __x0__ = (LeftHandSideExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5768 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let rval = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5774 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x8__]</td></tr>
      <tr><td align="left">9:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5782 -> node5758 [ color="black"]
  node5763 -> node5764 [ color="black"]
  node5762 -> node5763 [ color="black"]
  node5760 -> node5761 [ color="black"]
  node5766 -> node5767 [ color="black"]
  node5778 -> node5779 [ color="black"]
  node5761 -> node5762 [ color="black"]
  node5757 -> node5759 [ color="black"]
  node5769 -> node5770 [ color="black"]
  node5770 -> node5771 [ color="black"]
  node5776 -> node5777 [ color="black"]
  node5781 -> node5782 [ color="black"]
  node5772 -> node5773 [ color="black"]
  node5765 -> node5766 [ color="black"]
  node5780 -> node5781 [ color="black"]
  node5768 -> node5773 [ color="black"]
  node5775 -> node5776 [ color="black"]
  node5764 -> node5765 [label=<<font color="black">true</font>> color="black"]
  node5764 -> node5769 [label=<<font color="black">false</font>> color="black"]
  node5774 -> node5775 [ color="black"]
  node5759 -> node5760 [label=<<font color="black">true</font>> color="black"]
  node5759 -> node5775 [label=<<font color="black">false</font>> color="black"]
  node5767 -> node5768 [ color="black"]
  node5777 -> node5778 [ color="black"]
  node5773 -> node5774 [ color="black"]
  node5779 -> node5780 [ color="black"]
  node5771 -> node5772 [ color="black"]
}
