digraph {
  node2053 [shape=cds, label=<<font color="black">1:app __x0__ = (FunctionAllocate functionPrototype Strict &quot;async&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2052 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let functionPrototype = INTRINSIC_AsyncFunctionPrototype</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2055 [shape=cds, label=<<font color="black">2:app __x1__ = (FunctionInitialize F kind parameters body Scope)</font>> color="black" fillcolor="white" style=filled]
  node2051 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let F = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2050 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2054 -> node2055 [ color="black"]
  node2055 -> node2056 [ color="black"]
  node2052 -> node2053 [ color="black"]
  node2056 -> node2051 [ color="black"]
  node2050 -> node2052 [ color="black"]
  node2053 -> node2054 [ color="black"]
}
