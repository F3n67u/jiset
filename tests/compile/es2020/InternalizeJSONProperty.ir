{
  app holder = (GetArgument argumentsList 0i)
  app name = (GetArgument argumentsList 1i)
  app reviver = (GetArgument argumentsList 2i)
  [0] app __x0__ = (Get holder name)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [5] {}
  [0] let val = __x0__
  [1] app __x1__ = (Type val)
  [1] if (= __x1__ Object) {
    [2] app __x2__ = (IsArray val)
    [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [5] {}
    [2] let isArray = __x2__
    [13] if (= isArray true) {
      [4] let I = 0i
      [5] app __x3__ = (LengthOfArrayLike val)
      [5] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [5] {}
      [5] let len = __x3__
      [6] while (< I len) {
        [7] app __x4__ = (ToString I)
        [7] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [5] {}
        [7] app __x5__ = (InternalizeJSONProperty val __x4__ reviver)
        [7] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [5] {}
        [7] let newElement = __x5__
        [10] if (= newElement undefined) {
          [9] app __x6__ = (ToString I)
          [9] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [5] {}
          [9] app __x7__ = (val.Delete val __x6__)
          [9] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [5] {}
          [9] __x7__
        } else {
          [11] app __x8__ = (ToString I)
          [11] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [5] {}
          [11] app __x9__ = (CreateDataProperty val __x8__ newElement)
          [11] if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else [5] {}
          [11] __x9__
        }
        [12] I = (+ I 1i)
      }
    } else {
      [14] app __x10__ = (EnumerableOwnPropertyNames val CONST_key)
      [14] if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else [5] {}
      [14] let keys = __x10__
      [15] let __x11__ = keys
      [15] let __x12__ = 0i
      [15] while (< __x12__ __x11__.length) {
        let P = __x11__[__x12__]
        [16] app __x13__ = (InternalizeJSONProperty val P reviver)
        [16] if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else [5] {}
        [16] let newElement = __x13__
        [19] if (= newElement undefined) {
          [18] app __x14__ = (val.Delete val P)
          [18] if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else [5] {}
          [18] __x14__
        } else {
          [20] app __x15__ = (CreateDataProperty val P newElement)
          [20] if (is-completion __x15__) if (= __x15__.Type CONST_normal) __x15__ = __x15__.Value else return __x15__ else [5] {}
          [20] __x15__
        }
        __x12__ = (+ __x12__ 1i)
      }
    }
  } else [5] {}
  [21] app __x16__ = (Call reviver holder (new [name, val]))
  [21] if (is-completion __x16__) if (= __x16__.Type CONST_normal) __x16__ = __x16__.Value else return __x16__ else [5] {}
  [21] app __x17__ = (WrapCompletion __x16__)
  [21] return __x17__
}