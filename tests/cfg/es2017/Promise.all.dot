digraph {
  node16533 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16530 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node16534 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16516 [shape=diamond, label=<<font color="black">(= iterator.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16524 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16509 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16505 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16532 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16535 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterator = iterator.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16531 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iterator = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16507 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16526 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node16511 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16522 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iterator</td></tr>
      <tr><td align="left">5:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; iterator, &quot;Done&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16513 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16520 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16523 [shape=cds, label=<<font color="black">6:app __x4__ = (PerformPromiseAll iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node16508 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node16527 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node16512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16529 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16519 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16504 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16528 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iterator result)</font>> color="black" fillcolor="white" style=filled]
  node16537 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16515 [shape=diamond, label=<<font color="black">(is-completion iterator)</font>> color="black" fillcolor="white" style=filled]
  node16518 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iterator.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16538 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16525 [shape=cds, label=<<font color="black">7:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node16510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16506 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16521 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16515 -> node16516 [label=<<font color="black">true</font>> color="black"]
  node16515 -> node16522 [label=<<font color="black">false</font>> color="black"]
  node16522 -> node16523 [ color="black"]
  node16538 -> node16505 [ color="black"]
  node16532 -> node16537 [ color="black"]
  node16523 -> node16524 [ color="black"]
  node16527 -> node16528 [label=<<font color="black">true</font>> color="black"]
  node16527 -> node16530 [label=<<font color="black">false</font>> color="black"]
  node16507 -> node16508 [ color="black"]
  node16514 -> node16515 [ color="black"]
  node16509 -> node16510 [label=<<font color="black">true</font>> color="black"]
  node16509 -> node16511 [label=<<font color="black">false</font>> color="black"]
  node16512 -> node16513 [ color="black"]
  node16526 -> node16527 [label=<<font color="black">true</font>> color="black"]
  node16526 -> node16538 [label=<<font color="black">false</font>> color="black"]
  node16524 -> node16525 [ color="black"]
  node16506 -> node16507 [ color="black"]
  node16508 -> node16509 [ color="black"]
  node16530 -> node16531 [label=<<font color="black">true</font>> color="black"]
  node16530 -> node16537 [label=<<font color="black">false</font>> color="black"]
  node16510 -> node16511 [ color="black"]
  node16525 -> node16526 [ color="black"]
  node16528 -> node16529 [ color="black"]
  node16520 -> node16521 [ color="black"]
  node16516 -> node16517 [label=<<font color="black">true</font>> color="black"]
  node16516 -> node16518 [label=<<font color="black">false</font>> color="black"]
  node16537 -> node16538 [ color="black"]
  node16519 -> node16520 [label=<<font color="black">true</font>> color="black"]
  node16519 -> node16521 [label=<<font color="black">false</font>> color="black"]
  node16536 -> node16537 [ color="black"]
  node16534 -> node16535 [label=<<font color="black">true</font>> color="black"]
  node16534 -> node16536 [label=<<font color="black">false</font>> color="black"]
  node16511 -> node16512 [ color="black"]
  node16518 -> node16519 [ color="black"]
  node16517 -> node16522 [ color="black"]
  node16533 -> node16534 [ color="black"]
  node16535 -> node16536 [ color="black"]
  node16531 -> node16532 [label=<<font color="black">true</font>> color="black"]
  node16531 -> node16533 [label=<<font color="black">false</font>> color="black"]
  node16513 -> node16514 [ color="black"]
  node16504 -> node16506 [ color="black"]
  node16521 -> node16522 [ color="black"]
  node16529 -> node16530 [ color="black"]
}
