digraph {
  node13672 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextSeg = [? __x6__]</td></tr>
      <tr><td align="left">11:let __x7__ = nextSeg</td></tr>
      <tr><td align="left">11:let __x8__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13671 [shape=cds, label=<<font color="black">10:app __x6__ = (ToString [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node13676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return the String value whose code units are , in order , the elements in the List id:{stringElements} . If id:{stringElements} has no elements , the empty String is returned .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13680 [shape=cds, label=<<font color="black">16:app __x10__ = (ToString next)</font>> color="black" fillcolor="white" style=filled]
  node13667 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node13673 [shape=diamond, label=<<font color="black">(&lt; __x8__ __x7__.length)</font>> color="black" fillcolor="white" style=filled]
  node13670 [shape=cds, label=<<font color="black">10:app __x5__ = (Get raw nextKey)</font>> color="black" fillcolor="white" style=filled]
  node13653 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let stringElements = (new [])</td></tr>
      <tr><td align="left">7:let nextIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13662 [shape=cds, label=<<font color="black">4:app __x3__ = (LengthOfArrayLike raw)</font>> color="black" fillcolor="white" style=filled]
  node13677 [shape=diamond, label=<<font color="black">(&lt; nextIndex numberOfSubstitutions)</font>> color="black" fillcolor="white" style=filled]
  node13674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x9__ = __x7__[__x8__]</td></tr>
      <tr><td align="left">append __x9__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x8__ = (+ __x8__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = substitutions[nextIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13684 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:nextIndex = (+ nextIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13660 [shape=cds, label=<<font color="black">3:app __x2__ = (ToObject [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node13675 [shape=diamond, label=<<font color="black">(== (+ nextIndex 1i) literalSegments)</font>> color="black" fillcolor="white" style=filled]
  node13655 [shape=cds, label=<<font color="black">app substitutions = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13664 [shape=diamond, label=<<font color="black">(! (&lt; 0i literalSegments))</font>> color="black" fillcolor="white" style=filled]
  node13658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let cooked = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13668 [shape=cds, label=<<font color="black">9:app __x4__ = (ToString nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node13683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x13__ = __x11__[__x12__]</td></tr>
      <tr><td align="left">append __x13__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x12__ = (+ __x12__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13654 [shape=cds, label=<<font color="black">app template = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextSub = [? __x10__]</td></tr>
      <tr><td align="left">17:let __x11__ = nextSub</td></tr>
      <tr><td align="left">17:let __x12__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13682 [shape=diamond, label=<<font color="black">(&lt; __x12__ __x11__.length)</font>> color="black" fillcolor="white" style=filled]
  node13661 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let raw = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13656 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{substitutions} be a List consisting of all of the arguments passed to this function , starting with the second argument . If fewer than two arguments were passed , the List is empty .&quot;</td></tr>
      <tr><td align="left">1:let numberOfSubstitutions = substitutions.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13659 [shape=cds, label=<<font color="black">3:app __x1__ = (Get cooked &quot;raw&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13669 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextKey = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13652 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13665 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13663 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let literalSegments = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13657 [shape=cds, label=<<font color="black">2:app __x0__ = (ToObject template)</font>> color="black" fillcolor="white" style=filled]
  node13670 -> node13671 [ color="black"]
  node13659 -> node13660 [ color="black"]
  node13680 -> node13681 [ color="black"]
  node13658 -> node13659 [ color="black"]
  node13676 -> node13677 [ color="black"]
  node13681 -> node13682 [ color="black"]
  node13683 -> node13682 [ color="black"]
  node13684 -> node13667 [ color="black"]
  node13657 -> node13658 [ color="black"]
  node13667 -> node13668 [label=<<font color="black">true</font>> color="black"]
  node13667 -> node13653 [label=<<font color="black">false</font>> color="black"]
  node13674 -> node13673 [ color="black"]
  node13665 -> node13666 [ color="black"]
  node13678 -> node13680 [ color="black"]
  node13679 -> node13680 [ color="black"]
  node13673 -> node13674 [label=<<font color="black">true</font>> color="black"]
  node13673 -> node13675 [label=<<font color="black">false</font>> color="black"]
  node13656 -> node13657 [ color="black"]
  node13677 -> node13678 [label=<<font color="black">true</font>> color="black"]
  node13677 -> node13679 [label=<<font color="black">false</font>> color="black"]
  node13671 -> node13672 [ color="black"]
  node13664 -> node13665 [label=<<font color="black">true</font>> color="black"]
  node13664 -> node13666 [label=<<font color="black">false</font>> color="black"]
  node13652 -> node13654 [ color="black"]
  node13660 -> node13661 [ color="black"]
  node13669 -> node13670 [ color="black"]
  node13668 -> node13669 [ color="black"]
  node13672 -> node13673 [ color="black"]
  node13682 -> node13683 [label=<<font color="black">true</font>> color="black"]
  node13682 -> node13684 [label=<<font color="black">false</font>> color="black"]
  node13655 -> node13656 [ color="black"]
  node13661 -> node13662 [ color="black"]
  node13663 -> node13664 [ color="black"]
  node13675 -> node13676 [label=<<font color="black">true</font>> color="black"]
  node13675 -> node13677 [label=<<font color="black">false</font>> color="black"]
  node13666 -> node13667 [ color="black"]
  node13662 -> node13663 [ color="black"]
  node13654 -> node13655 [ color="black"]
}
