digraph {
  node10790 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10795 [shape=diamond, label=<<font color="black">(|| (|| (= num NaN) (= num Infinity)) (= num -Infinity))</font>> color="black" fillcolor="white" style=filled]
  node10794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let num = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10791 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10792 [shape=cds, label=<<font color="black">app number = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10793 [shape=cds, label=<<font color="black">0:app __x0__ = (ToNumber number)</font>> color="black" fillcolor="white" style=filled]
  node10797 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10796 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10797 -> node10791 [ color="black"]
  node10796 -> node10791 [ color="black"]
  node10793 -> node10794 [ color="black"]
  node10790 -> node10792 [ color="black"]
  node10795 -> node10796 [label=<<font color="black">true</font>> color="black"]
  node10795 -> node10797 [label=<<font color="black">false</font>> color="black"]
  node10792 -> node10793 [ color="black"]
  node10794 -> node10795 [ color="black"]
}
