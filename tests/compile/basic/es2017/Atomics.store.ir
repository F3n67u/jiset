{
  app __x0__ = (ValidateSharedIntegerTypedArray typedArray)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let buffer = __x0__
  app __x1__ = (ValidateAtomicAccess typedArray index)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let i = __x1__
  app __x2__ = (ToInteger value)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let v = __x2__
  let arrayTypeName = typedArray.TypedArrayName
  ??? "Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for id:{arrayTypeName} ."
  ??? "Let id:{elementType} be the String value of the Element Type value in link:{unhandled: table-49} for id:{arrayTypeName} ."
  let offset = typedArray.ByteOffset
  let indexedPosition = (+ (* i elementSize) offset)
  app __x3__ = (SetValueInBuffer buffer indexedPosition elementType v true "SeqCst")
  __x3__
  app __x4__ = (WrapCompletion v)
  return __x4__
}