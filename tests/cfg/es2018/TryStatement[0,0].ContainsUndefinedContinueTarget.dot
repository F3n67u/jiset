digraph {
  node7854 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7850 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7856 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7849 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7853 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node7852 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7855 [shape=cds, label=<<font color="black">2:access __x1__ = (Catch &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7851 [shape=cds, label=<<font color="black">0:access __x0__ = (Block &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7856 -> node7850 [ color="black"]
  node7852 -> node7853 [ color="black"]
  node7855 -> node7856 [ color="black"]
  node7854 -> node7855 [ color="black"]
  node7849 -> node7851 [ color="black"]
  node7851 -> node7852 [ color="black"]
  node7853 -> node7854 [label=<<font color="black">true</font>> color="black"]
  node7853 -> node7855 [label=<<font color="black">false</font>> color="black"]
}
