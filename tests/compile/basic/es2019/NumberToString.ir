{
  if (= m NaN) return "NaN" else {}
  if (|| (= m 0i) (= m -0.0)) return "0" else {}
  if (< m 0i) {
    app __x0__ = (NumberToString (- m))
    return (+ "-" [! __x0__])
  } else {}
  if (= m Infinity) return "Infinity" else {}
  ??? "Otherwise , let id:{n} , id:{k} , and id:{s} be integers such that id:{k} ≥ 1 , 10 sup:{id:{k} - 1} ≤ id:{s} < 10 sup:{id:{k}} , the Number value for id:{s} × 10 sup:{id:{n} - id:{k}} is id:{m} , and id:{k} is as small as possible . Note that id:{k} is the number of digits in the decimal representation of id:{s} , that id:{s} is not divisible by 10 , and that the least significant digit of id:{s} is not necessarily uniquely determined by these criteria ."
  if (&& (! (< n k)) (! (< 21i n))) return (+ ??? "StringOp" ??? "StringOp") else {}
  if (&& (< 0i n) (! (< 21i n))) return (+ (+ ??? "StringOp" ".") ??? "StringOp") else {}
  if (&& (< -6i n) (! (< 0i n))) return (+ (+ (+ "0" ".") ??? "StringOp") ??? "StringOp") else if (== k 1i) return (+ (+ (+ ??? "StringOp" "e") ??? "StringOp") ??? "StringOp") else {}
  return (+ (+ (+ (+ (+ ??? "StringOp" ".") ??? "StringOp") "e") ??? "StringOp") ??? "StringOp")
}