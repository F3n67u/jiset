digraph {
  node1354 [shape=cds, label=<<font color="black">3:app __x0__ = (globalObject.GetOwnProperty globalObject N)</font>> color="black" fillcolor="white" style=filled]
  node1359 [shape=cds, label=<<font color="black">8:app __x1__ = (DefinePropertyOrThrow globalObject N desc)</font>> color="black" fillcolor="white" style=filled]
  node1362 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x2__]</td></tr>
      <tr><td align="left">11:let varDeclaredNames = envRec.VarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1351 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let existingProp = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1365 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1360 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x1__]</td></tr>
      <tr><td align="left">9:??? &quot;Record that the binding for id:{N} in id:{ObjRec} has been initialized .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1361 [shape=cds, label=<<font color="black">10:app __x2__ = (Set globalObject N V false)</font>> color="black" fillcolor="white" style=filled]
  node1356 [shape=diamond, label=<<font color="black">(|| (= existingProp undefined) (= existingProp.Configurable true))</font>> color="black" fillcolor="white" style=filled]
  node1364 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append N -&gt; varDeclaredNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1363 [shape=diamond, label=<<font color="black">(! (contains varDeclaredNames N))</font>> color="black" fillcolor="white" style=filled]
  node1358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let desc = (new PropertyDescriptor(&quot;Value&quot; -&gt; V))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1353 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let ObjRec = envRec.ObjectRecord</td></tr>
      <tr><td align="left">2:let globalObject = ObjRec.BindingObject</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1352 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1357 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let desc = (new PropertyDescriptor(&quot;Value&quot; -&gt; V, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; D))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1363 -> node1364 [label=<<font color="black">true</font>> color="black"]
  node1363 -> node1365 [label=<<font color="black">false</font>> color="black"]
  node1364 -> node1365 [ color="black"]
  node1354 -> node1355 [ color="black"]
  node1361 -> node1362 [ color="black"]
  node1356 -> node1357 [label=<<font color="black">true</font>> color="black"]
  node1356 -> node1358 [label=<<font color="black">false</font>> color="black"]
  node1365 -> node1352 [ color="black"]
  node1351 -> node1353 [ color="black"]
  node1353 -> node1354 [ color="black"]
  node1355 -> node1356 [ color="black"]
  node1358 -> node1359 [ color="black"]
  node1359 -> node1360 [ color="black"]
  node1357 -> node1359 [ color="black"]
  node1362 -> node1363 [ color="black"]
  node1360 -> node1361 [ color="black"]
}
