digraph {
  node16898 [shape=cds, label=<<font color="black">6:app __x5__ = (Call promiseCapability.Resolve undefined (new [x]))</font>> color="black" fillcolor="white" style=filled]
  node16894 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node16890 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node16897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promiseCapability = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16885 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16882 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16899 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[? __x5__]</td></tr>
      <tr><td align="left">7:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16893 [shape=cds, label=<<font color="black">4:app __x3__ = (SameValue xConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node16889 [shape=cds, label=<<font color="black">2:app __x1__ = (IsPromise x)</font>> color="black" fillcolor="white" style=filled]
  node16886 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node16896 [shape=cds, label=<<font color="black">5:app __x4__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16883 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16887 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let xConstructor = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return x</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16884 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16888 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16891 [shape=cds, label=<<font color="black">3:app __x2__ = (Get x &quot;constructor&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16893 -> node16894 [ color="black"]
  node16894 -> node16895 [label=<<font color="black">true</font>> color="black"]
  node16894 -> node16896 [label=<<font color="black">false</font>> color="black"]
  node16887 -> node16888 [label=<<font color="black">true</font>> color="black"]
  node16887 -> node16889 [label=<<font color="black">false</font>> color="black"]
  node16895 -> node16896 [ color="black"]
  node16890 -> node16891 [label=<<font color="black">true</font>> color="black"]
  node16890 -> node16896 [label=<<font color="black">false</font>> color="black"]
  node16889 -> node16890 [ color="black"]
  node16898 -> node16899 [ color="black"]
  node16886 -> node16887 [ color="black"]
  node16899 -> node16883 [ color="black"]
  node16882 -> node16884 [ color="black"]
  node16896 -> node16897 [ color="black"]
  node16885 -> node16886 [ color="black"]
  node16892 -> node16893 [ color="black"]
  node16891 -> node16892 [ color="black"]
  node16888 -> node16889 [ color="black"]
  node16884 -> node16885 [ color="black"]
  node16897 -> node16898 [ color="black"]
}
