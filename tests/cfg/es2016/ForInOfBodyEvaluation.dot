digraph {
  node6828 [shape=cds, label=<<font color="black">21:access __x7__ = (lhs &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let lhsRef = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6824 [shape=cds, label=<<font color="black">17:access __x5__ = (lhs &quot;BindingInstantiation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:__x6__</td></tr>
      <tr><td align="left">18:GLOBAL_context.LexicalEnvironment = iterationEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6854 [shape=cds, label=<<font color="black">40:app __x18__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node6822 [shape=cds, label=<<font color="black">16:app __x4__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node6807 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let destructuring = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6836 [shape=diamond, label=<<font color="black">(= lhsKind CONST_lexicalBinding)</font>> color="black" fillcolor="white" style=filled]
  node6855 [shape=diamond, label=<<font color="black">__x18__</font>> color="black" fillcolor="white" style=filled]
  node6819 [shape=cds, label=<<font color="black">12:access __x3__ = (lhs &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6845 [shape=diamond, label=<<font color="black">(= lhsKind CONST_varBinding)</font>> color="black" fillcolor="white" style=filled]
  node6808 [shape=diamond, label=<<font color="black">(&amp;&amp; (= destructuring true) (= lhsKind CONST_assignment))</font>> color="black" fillcolor="white" style=filled]
  node6813 [shape=diamond, label=<<font color="black">(= nextResult false)</font>> color="black" fillcolor="white" style=filled]
  node6830 [shape=cds, label=<<font color="black">22:app __x8__ = (ResolveBinding lhsName)</font>> color="black" fillcolor="white" style=filled]
  node6851 [shape=cds, label=<<font color="black">39:access __x16__ = (lhs &quot;BindingInitialization&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6804 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6840 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let status = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6841 [shape=diamond, label=<<font color="black">(= lhsKind CONST_assignment)</font>> color="black" fillcolor="white" style=filled]
  node6823 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let iterationEnv = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6809 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (is-instance-of lhs LeftHandSideExpression)</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{assignmentPattern} be the parse of the source text corresponding to id:{lhs} using nt:{AssignmentPattern} as the goal symbol .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6863 [shape=cds, label=<<font color="black">app __x22__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node6860 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let result = __x20__</td></tr>
      <tr><td align="left">44:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6856 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6865 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x23__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6852 [shape=cds, label=<<font color="black">39:app __x17__ = (__x16__ nextValue iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node6848 [shape=cds, label=<<font color="black">35:app __x15__ = (__x14__ nextValue undefined)</font>> color="black" fillcolor="white" style=filled]
  node6833 [shape=cds, label=<<font color="black">28:app __x9__ = (IsAbruptCompletion lhsRef)</font>> color="black" fillcolor="white" style=filled]
  node6862 [shape=diamond, label=<<font color="black">(= __x21__ false)</font>> color="black" fillcolor="white" style=filled]
  node6844 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let status = __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6837 [shape=cds, label=<<font color="black">27:app __x10__ = (InitializeReferencedBinding lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6827 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6805 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">1:let V = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6859 [shape=cds, label=<<font color="black">43:access __x20__ = (stmt &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let nextResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6815 [shape=cds, label=<<font color="black">9:app __x2__ = (IteratorValue nextResult)</font>> color="black" fillcolor="white" style=filled]
  node6866 [shape=diamond, label=<<font color="black">(! (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node6832 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6834 [shape=diamond, label=<<font color="black">__x9__</font>> color="black" fillcolor="white" style=filled]
  node6849 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let status = __x15__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6817 [shape=diamond, label=<<font color="black">(|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding))</font>> color="black" fillcolor="white" style=filled]
  node6847 [shape=cds, label=<<font color="black">35:access __x14__ = (lhs &quot;BindingInitialization&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6811 [shape=cds, label=<<font color="black">7:app __x1__ = (IteratorStep iterator)</font>> color="black" fillcolor="white" style=filled]
  node6816 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextValue = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6838 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let status = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6858 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">42:return [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6853 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let status = __x17__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6806 [shape=cds, label=<<font color="black">2:access __x0__ = (lhs &quot;IsDestructuring&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6843 [shape=cds, label=<<font color="black">32:app __x13__ = (__x12__ nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6821 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">15:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6825 [shape=cds, label=<<font color="black">17:app __x6__ = (__x5__ iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node6803 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6850 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">38:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6846 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:assert (is-instance-of lhs ForBinding)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6861 [shape=cds, label=<<font color="black">45:app __x21__ = (LoopContinues result labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6835 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let status = lhsRef</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6867 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let V = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return V</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let lhsRef = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let lhsName = __x7__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6818 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6864 [shape=cds, label=<<font color="black">app __x23__ = (IteratorClose iterator __x22__)</font>> color="black" fillcolor="white" style=filled]
  node6842 [shape=cds, label=<<font color="black">32:access __x12__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6857 [shape=cds, label=<<font color="black">42:app __x19__ = (IteratorClose iterator status)</font>> color="black" fillcolor="white" style=filled]
  node6810 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node6839 [shape=cds, label=<<font color="black">29:app __x11__ = (PutValue lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6811 -> node6812 [ color="black"]
  node6819 -> node6820 [ color="black"]
  node6809 -> node6810 [ color="black"]
  node6838 -> node6854 [ color="black"]
  node6852 -> node6853 [ color="black"]
  node6821 -> node6822 [ color="black"]
  node6808 -> node6809 [label=<<font color="black">true</font>> color="black"]
  node6808 -> node6810 [label=<<font color="black">false</font>> color="black"]
  node6864 -> node6865 [ color="black"]
  node6823 -> node6824 [ color="black"]
  node6853 -> node6854 [ color="black"]
  node6827 -> node6828 [label=<<font color="black">true</font>> color="black"]
  node6827 -> node6832 [label=<<font color="black">false</font>> color="black"]
  node6805 -> node6806 [ color="black"]
  node6815 -> node6816 [ color="black"]
  node6858 -> node6859 [ color="black"]
  node6816 -> node6817 [ color="black"]
  node6867 -> node6810 [ color="black"]
  node6841 -> node6842 [label=<<font color="black">true</font>> color="black"]
  node6841 -> node6845 [label=<<font color="black">false</font>> color="black"]
  node6826 -> node6827 [ color="black"]
  node6862 -> node6863 [label=<<font color="black">true</font>> color="black"]
  node6862 -> node6866 [label=<<font color="black">false</font>> color="black"]
  node6832 -> node6833 [label=<<font color="black">true</font>> color="black"]
  node6832 -> node6841 [label=<<font color="black">false</font>> color="black"]
  node6814 -> node6815 [ color="black"]
  node6818 -> node6819 [label=<<font color="black">true</font>> color="black"]
  node6818 -> node6832 [label=<<font color="black">false</font>> color="black"]
  node6803 -> node6805 [ color="black"]
  node6850 -> node6851 [ color="black"]
  node6842 -> node6843 [ color="black"]
  node6836 -> node6837 [label=<<font color="black">true</font>> color="black"]
  node6836 -> node6839 [label=<<font color="black">false</font>> color="black"]
  node6860 -> node6861 [ color="black"]
  node6813 -> node6814 [label=<<font color="black">true</font>> color="black"]
  node6813 -> node6815 [label=<<font color="black">false</font>> color="black"]
  node6856 -> node6857 [ color="black"]
  node6829 -> node6830 [ color="black"]
  node6849 -> node6854 [ color="black"]
  node6833 -> node6834 [ color="black"]
  node6844 -> node6854 [ color="black"]
  node6834 -> node6835 [label=<<font color="black">true</font>> color="black"]
  node6834 -> node6836 [label=<<font color="black">false</font>> color="black"]
  node6855 -> node6856 [label=<<font color="black">true</font>> color="black"]
  node6855 -> node6859 [label=<<font color="black">false</font>> color="black"]
  node6845 -> node6846 [label=<<font color="black">true</font>> color="black"]
  node6845 -> node6850 [label=<<font color="black">false</font>> color="black"]
  node6839 -> node6840 [ color="black"]
  node6830 -> node6831 [ color="black"]
  node6854 -> node6855 [ color="black"]
  node6825 -> node6826 [ color="black"]
  node6822 -> node6823 [ color="black"]
  node6831 -> node6832 [ color="black"]
  node6859 -> node6860 [ color="black"]
  node6806 -> node6807 [ color="black"]
  node6861 -> node6862 [ color="black"]
  node6835 -> node6854 [ color="black"]
  node6843 -> node6844 [ color="black"]
  node6817 -> node6818 [label=<<font color="black">true</font>> color="black"]
  node6817 -> node6821 [label=<<font color="black">false</font>> color="black"]
  node6865 -> node6866 [ color="black"]
  node6840 -> node6854 [ color="black"]
  node6866 -> node6867 [label=<<font color="black">true</font>> color="black"]
  node6866 -> node6810 [label=<<font color="black">false</font>> color="black"]
  node6857 -> node6858 [ color="black"]
  node6851 -> node6852 [ color="black"]
  node6828 -> node6829 [ color="black"]
  node6847 -> node6848 [ color="black"]
  node6863 -> node6864 [ color="black"]
  node6812 -> node6813 [ color="black"]
  node6820 -> node6832 [ color="black"]
  node6848 -> node6849 [ color="black"]
  node6810 -> node6811 [label=<<font color="black">true</font>> color="black"]
  node6810 -> node6804 [label=<<font color="black">false</font>> color="black"]
  node6846 -> node6847 [ color="black"]
  node6807 -> node6808 [ color="black"]
  node6837 -> node6838 [ color="black"]
  node6824 -> node6825 [ color="black"]
}
