digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= S true)</td></tr>
      <tr><td align="left">1:let envRec = this</td></tr>
      <tr><td align="left">3:??? &quot;If the binding for id:{N} is an indirect binding , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">9:??? &quot;If the binding for id:{N} in id:{envRec} is an uninitialized binding , throw a value:{ReferenceError} exception .&quot;</td></tr>
      <tr><td align="left">10:return envRec.SubMap[N].BoundValue</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node0 -> node2 [ color="black"]
  node2 -> node1 [ color="black"]
}
