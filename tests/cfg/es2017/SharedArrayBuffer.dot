digraph {
  node15623 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateSharedArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node15618 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15616 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15619 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15620 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15621 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node15622 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15617 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15624 -> node15617 [ color="black"]
  node15622 -> node15623 [ color="black"]
  node15619 -> node15620 [label=<<font color="black">true</font>> color="black"]
  node15619 -> node15621 [label=<<font color="black">false</font>> color="black"]
  node15618 -> node15619 [ color="black"]
  node15620 -> node15621 [ color="black"]
  node15623 -> node15624 [ color="black"]
  node15621 -> node15622 [ color="black"]
  node15616 -> node15618 [ color="black"]
}
