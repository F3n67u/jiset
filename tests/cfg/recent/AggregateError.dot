digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = CONTEXT.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=cds, label=<<font color="black">3:app __x1__ = (ToString message)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=cds, label=<<font color="black">6:app __x3__ = (IterableToList errors)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=diamond, label=<<font color="black">(! (= message undefined))</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app errors = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=cds, label=<<font color="black">7:app __x5__ = (DefinePropertyOrThrow O &quot;errors&quot; (new PropertyDescriptor(&quot;Configurable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Writable&quot; -&gt; true, &quot;Value&quot; -&gt; [! __x4__])))</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=cds, label=<<font color="black">5:app __x2__ = (DefinePropertyOrThrow O &quot;message&quot; msgDesc)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor newTarget &quot;%AggregateError.prototype%&quot; (new [&quot;ErrorData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app message = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x5__]</td></tr>
      <tr><td align="left">8:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=cds, label=<<font color="black">7:app __x4__ = (CreateArrayFromList errorsList)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let msg = [? __x1__]</td></tr>
      <tr><td align="left">4:let msgDesc = (new PropertyDescriptor(&quot;Value&quot; -&gt; msg, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let errorsList = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 -> node4 [ color="black"]
  node7 -> node8 [ color="black"]
  node11 -> node12 [ color="black"]
  node13 -> node14 [ color="black"]
  node12 -> node13 [ color="black"]
  node0 -> node2 [ color="black"]
  node6 -> node7 [ color="black"]
  node14 -> node15 [ color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [label=<<font color="black">true</font>> color="black"]
  node4 -> node6 [label=<<font color="black">false</font>> color="black"]
  node8 -> node9 [ color="black"]
  node16 -> node17 [ color="black"]
  node9 -> node10 [label=<<font color="black">true</font>> color="black"]
  node9 -> node14 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node5 -> node7 [ color="black"]
  node18 -> node1 [ color="black"]
  node17 -> node18 [ color="black"]
}
