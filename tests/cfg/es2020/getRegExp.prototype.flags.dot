digraph {
  node14871 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let ignoreCase = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let dotAll = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14874 [shape=cds, label=<<font color="black">7:app __x5__ = (Get R &quot;multiline&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14879 [shape=cds, label=<<font color="black">9:app __x7__ = (Get R &quot;dotAll&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14870 [shape=cds, label=<<font color="black">5:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node14866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let global = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14875 [shape=cds, label=<<font color="black">7:app __x6__ = (ToBoolean [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node14886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let unicode = [! __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14869 [shape=cds, label=<<font color="black">5:app __x3__ = (Get R &quot;ignoreCase&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14892 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node14887 [shape=diamond, label=<<font color="black">(= unicode true)</font>> color="black" fillcolor="white" style=filled]
  node14857 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;s&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14868 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;g&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14872 [shape=diamond, label=<<font color="black">(= ignoreCase true)</font>> color="black" fillcolor="white" style=filled]
  node14891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let sticky = [! __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14888 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;u&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14873 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;i&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14885 [shape=cds, label=<<font color="black">11:app __x10__ = (ToBoolean [? __x9__])</font>> color="black" fillcolor="white" style=filled]
  node14890 [shape=cds, label=<<font color="black">13:app __x12__ = (ToBoolean [? __x11__])</font>> color="black" fillcolor="white" style=filled]
  node14880 [shape=cds, label=<<font color="black">9:app __x8__ = (ToBoolean [? __x7__])</font>> color="black" fillcolor="white" style=filled]
  node14867 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white" style=filled]
  node14859 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14864 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14889 [shape=cds, label=<<font color="black">13:app __x11__ = (Get R &quot;sticky&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14893 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;y&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14860 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node14861 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node14882 [shape=diamond, label=<<font color="black">(= dotAll true)</font>> color="black" fillcolor="white" style=filled]
  node14878 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;m&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14865 [shape=cds, label=<<font color="black">3:app __x2__ = (ToBoolean [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node14876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let multiline = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14877 [shape=diamond, label=<<font color="black">(= multiline true)</font>> color="black" fillcolor="white" style=filled]
  node14862 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14858 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14863 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let result = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14884 [shape=cds, label=<<font color="black">11:app __x9__ = (Get R &quot;unicode&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14894 -> node14858 [ color="black"]
  node14879 -> node14880 [ color="black"]
  node14857 -> node14859 [ color="black"]
  node14859 -> node14860 [ color="black"]
  node14861 -> node14862 [label=<<font color="black">true</font>> color="black"]
  node14861 -> node14863 [label=<<font color="black">false</font>> color="black"]
  node14878 -> node14879 [ color="black"]
  node14863 -> node14864 [ color="black"]
  node14891 -> node14892 [ color="black"]
  node14862 -> node14863 [ color="black"]
  node14886 -> node14887 [ color="black"]
  node14870 -> node14871 [ color="black"]
  node14884 -> node14885 [ color="black"]
  node14875 -> node14876 [ color="black"]
  node14881 -> node14882 [ color="black"]
  node14880 -> node14881 [ color="black"]
  node14865 -> node14866 [ color="black"]
  node14876 -> node14877 [ color="black"]
  node14893 -> node14894 [ color="black"]
  node14890 -> node14891 [ color="black"]
  node14877 -> node14878 [label=<<font color="black">true</font>> color="black"]
  node14877 -> node14879 [label=<<font color="black">false</font>> color="black"]
  node14868 -> node14869 [ color="black"]
  node14872 -> node14873 [label=<<font color="black">true</font>> color="black"]
  node14872 -> node14874 [label=<<font color="black">false</font>> color="black"]
  node14874 -> node14875 [ color="black"]
  node14864 -> node14865 [ color="black"]
  node14892 -> node14893 [label=<<font color="black">true</font>> color="black"]
  node14892 -> node14894 [label=<<font color="black">false</font>> color="black"]
  node14866 -> node14867 [ color="black"]
  node14869 -> node14870 [ color="black"]
  node14867 -> node14868 [label=<<font color="black">true</font>> color="black"]
  node14867 -> node14869 [label=<<font color="black">false</font>> color="black"]
  node14873 -> node14874 [ color="black"]
  node14889 -> node14890 [ color="black"]
  node14885 -> node14886 [ color="black"]
  node14887 -> node14888 [label=<<font color="black">true</font>> color="black"]
  node14887 -> node14889 [label=<<font color="black">false</font>> color="black"]
  node14888 -> node14889 [ color="black"]
  node14883 -> node14884 [ color="black"]
  node14882 -> node14883 [label=<<font color="black">true</font>> color="black"]
  node14882 -> node14884 [label=<<font color="black">false</font>> color="black"]
  node14871 -> node14872 [ color="black"]
  node14860 -> node14861 [ color="black"]
}
