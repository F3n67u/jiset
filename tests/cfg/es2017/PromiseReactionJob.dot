digraph {
  node16701 [shape=cds, label=<<font color="black">app __x0__ = (NormalCompletion argument)</font>> color="black" fillcolor="white" style=filled]
  node16712 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16697 [shape=cds, label=<<font color="black">app argument = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16704 [shape=cds, label=<<font color="black">app __x1__ = (Call handler undefined (new [argument]))</font>> color="black" fillcolor="white" style=filled]
  node16700 [shape=diamond, label=<<font color="black">(= type &quot;Fulfill&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16705 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16703 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= type &quot;Reject&quot;)</td></tr>
      <tr><td align="left">8:let handlerResult = (new Completion(&quot;Type&quot; -&gt; CONST_throw, &quot;Value&quot; -&gt; argument, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16706 [shape=cds, label=<<font color="black">12:app __x2__ = (IsAbruptCompletion handlerResult)</font>> color="black" fillcolor="white" style=filled]
  node16699 [shape=diamond, label=<<font color="black">(= handler undefined)</font>> color="black" fillcolor="white" style=filled]
  node16707 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node16702 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16708 [shape=cds, label=<<font color="black">11:app __x3__ = (Call promiseCapability.Reject undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16698 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = reaction.Capability</td></tr>
      <tr><td align="left">2:let type = reaction.Type</td></tr>
      <tr><td align="left">3:let handler = reaction.Handler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16694 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16709 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let status = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16695 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16710 [shape=cds, label=<<font color="black">13:app __x4__ = (Call promiseCapability.Resolve undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16696 [shape=cds, label=<<font color="black">app reaction = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16711 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let status = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16709 -> node16712 [ color="black"]
  node16706 -> node16707 [ color="black"]
  node16712 -> node16695 [ color="black"]
  node16707 -> node16708 [label=<<font color="black">true</font>> color="black"]
  node16707 -> node16710 [label=<<font color="black">false</font>> color="black"]
  node16703 -> node16706 [ color="black"]
  node16696 -> node16697 [ color="black"]
  node16711 -> node16712 [ color="black"]
  node16697 -> node16698 [ color="black"]
  node16704 -> node16705 [ color="black"]
  node16700 -> node16701 [label=<<font color="black">true</font>> color="black"]
  node16700 -> node16703 [label=<<font color="black">false</font>> color="black"]
  node16694 -> node16696 [ color="black"]
  node16702 -> node16706 [ color="black"]
  node16710 -> node16711 [ color="black"]
  node16698 -> node16699 [ color="black"]
  node16705 -> node16706 [ color="black"]
  node16708 -> node16709 [ color="black"]
  node16699 -> node16700 [label=<<font color="black">true</font>> color="black"]
  node16699 -> node16704 [label=<<font color="black">false</font>> color="black"]
  node16701 -> node16702 [ color="black"]
}
