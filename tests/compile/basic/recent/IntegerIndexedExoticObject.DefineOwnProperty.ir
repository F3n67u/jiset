{
  app __x0__ = (IsPropertyKey P)
  assert (= __x0__ true)
  if (= (typeof P) String) {
    app __x1__ = (CanonicalNumericIndexString P)
    let numericIndex = [! __x1__]
    if (! (= numericIndex undefined)) {
      app __x2__ = (IsValidIntegerIndex O numericIndex)
      if (= [! __x2__] false) return false else {}
      if (&& (! (= Desc.Configurable absent)) (= Desc.Configurable false)) return false else {}
      if (&& (! (= Desc.Enumerable absent)) (= Desc.Enumerable false)) return false else {}
      app __x3__ = (IsAccessorDescriptor Desc)
      if (= [! __x3__] true) return false else {}
      if (&& (! (= Desc.Writable absent)) (= Desc.Writable false)) return false else {}
      if (! (= Desc.Value absent)) {
        app __x4__ = (IntegerIndexedElementSet O numericIndex Desc.Value)
        [? __x4__]
      } else {}
      return true
    } else {}
  } else {}
  app __x5__ = (OrdinaryDefineOwnProperty O P Desc)
  return [! __x5__]
}