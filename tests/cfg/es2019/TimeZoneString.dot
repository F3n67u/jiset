digraph {
  node13120 [shape=cds, label=<<font color="black">2:app __x1__ = (LocalTZA tv true)</font>> color="black" fillcolor="white" style=filled]
  node13115 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13123 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let offsetSign = &quot;+&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13116 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13122 [shape=diamond, label=<<font color="black">(! (&lt; offset 0i))</font>> color="black" fillcolor="white" style=filled]
  node13125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Let id:{offsetMin} be the String representation of MinFromTime ( abs ( id:{offset} ) ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary .&quot;</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{offsetHour} be the String representation of HourFromTime ( abs ( id:{offset} ) ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{tzName} be an implementation - defined string that is either the empty string or the string - concatenation of the code unit 0x0020 ( SPACE ) , the code unit 0x0028 ( LEFT PARENTHESIS ) , an implementation - dependent timezone name , and the code unit 0x0029 ( RIGHT PARENTHESIS ) .&quot;</td></tr>
      <tr><td align="left">7:return (+ (+ (+ offsetSign offsetHour) offsetMin) tzName)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13117 [shape=cds, label=<<font color="black">app tv = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let offset = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Number)</td></tr>
      <tr><td align="left">1:assert (! (= tv NaN))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13124 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let offsetSign = &quot;-&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13118 [shape=cds, label=<<font color="black">0:app __x0__ = (Type tv)</font>> color="black" fillcolor="white" style=filled]
  node13121 -> node13122 [ color="black"]
  node13120 -> node13121 [ color="black"]
  node13124 -> node13125 [ color="black"]
  node13118 -> node13119 [ color="black"]
  node13123 -> node13125 [ color="black"]
  node13115 -> node13117 [ color="black"]
  node13125 -> node13116 [ color="black"]
  node13122 -> node13123 [label=<<font color="black">true</font>> color="black"]
  node13122 -> node13124 [label=<<font color="black">false</font>> color="black"]
  node13117 -> node13118 [ color="black"]
  node13119 -> node13120 [ color="black"]
}
