digraph {
  node5896 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:__x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5878 [shape=cds, label=<<font color="black">4:access __x3__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5874 [shape=cds, label=<<font color="black">2:access __x0__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5883 [shape=diamond, label=<<font color="black">(= __x6__ true)</font>> color="black" fillcolor="white" style=filled]
  node5897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5875 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let declarations = __x0__</td></tr>
      <tr><td align="left">3:let __x1__ = declarations</td></tr>
      <tr><td align="left">3:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5893 [shape=cds, label=<<font color="black">11:app __x11__ = (__x10__ env)</font>> color="black" fillcolor="white" style=filled]
  node5879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let __x4__ = __x3__</td></tr>
      <tr><td align="left">4:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5889 [shape=diamond, label=<<font color="black">(|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</font>> color="black" fillcolor="white" style=filled]
  node5882 [shape=cds, label=<<font color="black">7:access __x6__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5876 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node5880 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node5871 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5895 [shape=cds, label=<<font color="black">12:app __x12__ = (envRec.InitializeBinding envRec fn fo)</font>> color="black" fillcolor="white" style=filled]
  node5873 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let envRec = env.EnvironmentRecord</td></tr>
      <tr><td align="left">1:assert (= (typeof envRec) &quot;DeclarativeEnvironmentRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5884 [shape=cds, label=<<font color="black">6:app __x7__ = (envRec.CreateImmutableBinding envRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node5891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let fn = __x9__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5877 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5892 [shape=cds, label=<<font color="black">11:access __x10__ = (d &quot;InstantiateFunctionObject&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5888 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5887 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5872 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let fo = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5885 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[! __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5890 [shape=cds, label=<<font color="black">10:access __x9__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5886 [shape=cds, label=<<font color="black">8:app __x8__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node5881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5887 -> node5888 [ color="black"]
  node5897 -> node5876 [ color="black"]
  node5891 -> node5892 [ color="black"]
  node5874 -> node5875 [ color="black"]
  node5888 -> node5880 [ color="black"]
  node5886 -> node5887 [ color="black"]
  node5890 -> node5891 [ color="black"]
  node5892 -> node5893 [ color="black"]
  node5885 -> node5888 [ color="black"]
  node5893 -> node5894 [ color="black"]
  node5879 -> node5880 [ color="black"]
  node5871 -> node5873 [ color="black"]
  node5896 -> node5897 [ color="black"]
  node5881 -> node5882 [ color="black"]
  node5873 -> node5874 [ color="black"]
  node5883 -> node5884 [label=<<font color="black">true</font>> color="black"]
  node5883 -> node5886 [label=<<font color="black">false</font>> color="black"]
  node5877 -> node5878 [ color="black"]
  node5878 -> node5879 [ color="black"]
  node5875 -> node5876 [ color="black"]
  node5876 -> node5877 [label=<<font color="black">true</font>> color="black"]
  node5876 -> node5872 [label=<<font color="black">false</font>> color="black"]
  node5889 -> node5890 [label=<<font color="black">true</font>> color="black"]
  node5889 -> node5897 [label=<<font color="black">false</font>> color="black"]
  node5895 -> node5896 [ color="black"]
  node5894 -> node5895 [ color="black"]
  node5880 -> node5881 [label=<<font color="black">true</font>> color="black"]
  node5880 -> node5889 [label=<<font color="black">false</font>> color="black"]
  node5882 -> node5883 [ color="black"]
  node5884 -> node5885 [ color="black"]
}
