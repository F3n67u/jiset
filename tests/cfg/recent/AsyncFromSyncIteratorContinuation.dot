digraph {
  node18514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = done.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18531 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let valueWrapper = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18539 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:valueWrapper</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-async-from-sync-iterator-value-unwrap-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18529 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18519 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:done</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18516 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x1__) (! (= __x1__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18509 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18533 [shape=diamond, label=<<font color="black">(= valueWrapper.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18536 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x5__) (! (= __x5__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let done = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18528 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18543 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[! __x7__]</td></tr>
      <tr><td align="left">10:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18524 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">value = value.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18520 [shape=cds, label=<<font color="black">2:app __x2__ = (IteratorValue result)</font>> color="black" fillcolor="white" style=filled]
  node18513 [shape=diamond, label=<<font color="black">(= done.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18535 [shape=cds, label=<<font color="black">app __x5__ = (Call promiseCapability.Reject undefined (new [valueWrapper.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18530 [shape=cds, label=<<font color="black">4:app __x4__ = (PromiseResolve INTRINSIC_Promise value)</font>> color="black" fillcolor="white" style=filled]
  node18512 [shape=diamond, label=<<font color="black">(is-completion done)</font>> color="black" fillcolor="white" style=filled]
  node18540 [shape=cds, label=<<font color="black">7:app __x6__ = (CreateBuiltinFunction steps (new [&quot;Done&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18521 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let value = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18508 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18525 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [value.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18522 [shape=diamond, label=<<font color="black">(is-completion value)</font>> color="black" fillcolor="white" style=filled]
  node18541 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let onFulfilled = [! __x6__]</td></tr>
      <tr><td align="left">8:onFulfilled.Done = done</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18537 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18526 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18518 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18515 [shape=cds, label=<<font color="black">app __x1__ = (Call promiseCapability.Reject undefined (new [done.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18532 [shape=diamond, label=<<font color="black">(is-completion valueWrapper)</font>> color="black" fillcolor="white" style=filled]
  node18542 [shape=cds, label=<<font color="black">9:app __x7__ = (PerformPromiseThen valueWrapper onFulfilled undefined promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node18527 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18538 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18510 [shape=cds, label=<<font color="black">0:app __x0__ = (IteratorComplete result)</font>> color="black" fillcolor="white" style=filled]
  node18534 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">valueWrapper = valueWrapper.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18523 [shape=diamond, label=<<font color="black">(= value.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18536 -> node18537 [label=<<font color="black">true</font>> color="black"]
  node18536 -> node18538 [label=<<font color="black">false</font>> color="black"]
  node18516 -> node18517 [label=<<font color="black">true</font>> color="black"]
  node18516 -> node18518 [label=<<font color="black">false</font>> color="black"]
  node18535 -> node18536 [ color="black"]
  node18537 -> node18538 [ color="black"]
  node18538 -> node18539 [ color="black"]
  node18515 -> node18516 [ color="black"]
  node18524 -> node18529 [ color="black"]
  node18519 -> node18520 [ color="black"]
  node18534 -> node18539 [ color="black"]
  node18518 -> node18519 [ color="black"]
  node18508 -> node18510 [ color="black"]
  node18533 -> node18534 [label=<<font color="black">true</font>> color="black"]
  node18533 -> node18535 [label=<<font color="black">false</font>> color="black"]
  node18520 -> node18521 [ color="black"]
  node18522 -> node18523 [label=<<font color="black">true</font>> color="black"]
  node18522 -> node18529 [label=<<font color="black">false</font>> color="black"]
  node18510 -> node18511 [ color="black"]
  node18514 -> node18519 [ color="black"]
  node18525 -> node18526 [ color="black"]
  node18511 -> node18512 [ color="black"]
  node18540 -> node18541 [ color="black"]
  node18521 -> node18522 [ color="black"]
  node18529 -> node18530 [ color="black"]
  node18528 -> node18529 [ color="black"]
  node18512 -> node18513 [label=<<font color="black">true</font>> color="black"]
  node18512 -> node18519 [label=<<font color="black">false</font>> color="black"]
  node18513 -> node18514 [label=<<font color="black">true</font>> color="black"]
  node18513 -> node18515 [label=<<font color="black">false</font>> color="black"]
  node18523 -> node18524 [label=<<font color="black">true</font>> color="black"]
  node18523 -> node18525 [label=<<font color="black">false</font>> color="black"]
  node18527 -> node18528 [ color="black"]
  node18530 -> node18531 [ color="black"]
  node18526 -> node18527 [label=<<font color="black">true</font>> color="black"]
  node18526 -> node18528 [label=<<font color="black">false</font>> color="black"]
  node18517 -> node18518 [ color="black"]
  node18542 -> node18543 [ color="black"]
  node18532 -> node18533 [label=<<font color="black">true</font>> color="black"]
  node18532 -> node18539 [label=<<font color="black">false</font>> color="black"]
  node18541 -> node18542 [ color="black"]
  node18543 -> node18509 [ color="black"]
  node18531 -> node18532 [ color="black"]
  node18539 -> node18540 [ color="black"]
}
