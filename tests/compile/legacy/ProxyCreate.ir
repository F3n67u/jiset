{
  app __x0__ = (Type target)
  if (! (= __x0__ Object)) throw INTRINSIC_TypeError else {}
  if (&& (= (typeof target) "ProxyExoticObject") (= target.ProxyHandler null)) throw INTRINSIC_TypeError else {}
  app __x1__ = (Type handler)
  if (! (= __x1__ Object)) throw INTRINSIC_TypeError else {}
  if (&& (= (typeof handler) "ProxyExoticObject") (= handler.ProxyHandler null)) throw INTRINSIC_TypeError else {}
  app __x2__ = (MakeBasicObject (new ["ProxyHandler", "ProxyTarget"]))
  let P = [! __x2__]
  app __x3__ = (IsCallable target)
  if (= __x3__ true) {
    ??? "Set id:{P} . [ [ Call ] ] as specified in 9 . 5 . 12 ."
    app __x4__ = (IsConstructor target)
    if (= __x4__ true) ??? "Set id:{P} . [ [ Construct ] ] as specified in 9 . 5 . 13 ." else {}
  } else {}
  P.ProxyTarget = target
  P.ProxyHandler = handler
  return P
}