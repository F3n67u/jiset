digraph {
  node15413 [shape=cds, label=<<font color="black">app exception = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15414 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let g = this</td></tr>
      <tr><td align="left">1:let C = (new Completion(&quot;Type&quot; -&gt; CONST_throw, &quot;Value&quot; -&gt; exception, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15415 [shape=cds, label=<<font color="black">2:app __x0__ = (GeneratorResumeAbrupt g C)</font>> color="black" fillcolor="white" style=filled]
  node15411 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15416 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15412 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15416 -> node15412 [ color="black"]
  node15414 -> node15415 [ color="black"]
  node15413 -> node15414 [ color="black"]
  node15411 -> node15413 [ color="black"]
  node15415 -> node15416 [ color="black"]
}
