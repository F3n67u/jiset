{
  app __x0__ = (thisNumberValue this)
  let x = [? __x0__]
  if (= precision undefined) {
    app __x1__ = (ToString x)
    return [! __x1__]
  } else {}
  app __x2__ = (ToInteger precision)
  let p = [? __x2__]
  if (= x NaN) return "NaN" else {}
  let s = ""
  if (< x 0i) {
    s = "-"
    x = (- x)
  } else {}
  if (== x Infinity) return (+ s "Infinity") else {}
  if (|| (< p 1i) (< 100i p)) throw RangeError else {}
  if (== x 0i) {
    ??? "Let id:{m} be the String value consisting of id:{p} occurrences of the code unit 0x0030 ( DIGIT ZERO ) ."
    let e = 0i
  } else {
    ??? "Let id:{e} and id:{n} be integers such that 10 sup:{id:{p} - 1} ≤ id:{n} < 10 sup:{id:{p}} and for which the exact mathematical value of id:{n} × 10 sup:{id:{e} - id:{p} + 1} - id:{x} is as close to zero as possible . If there are two such sets of id:{e} and id:{n} , pick the id:{e} and id:{n} for which id:{n} × 10 sup:{id:{e} - id:{p} + 1} is larger ."
    ??? "Let id:{m} be the String value consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) ."
    if (|| (< e -6i) (! (< e p))) {
      assert (! (== e 0i))
      if (! (== p 1i)) {
        ??? "Let id:{a} be the first code unit of id:{m} , and let id:{b} be the remaining id:{p} - 1 code units of id:{m} ."
        m = (+ (+ a ".") b)
      } else {}
      if (< 0i e) let c = "+" else {
        let c = "-"
        e = (- e)
      }
      ??? "Let id:{d} be the String value consisting of the digits of the decimal representation of id:{e} ( in order , with no leading zeroes ) ."
      return (+ (+ (+ (+ s m) "e") c) d)
    } else {}
  }
  if (== e (- p 1i)) return (+ s m) else {}
  if (! (< e 0i)) ??? "Set id:{m} to the string - concatenation of the first id:{e} + 1 code units of id:{m} , the code unit 0x002E ( FULL STOP ) , and the remaining id:{p} - ( id:{e} + 1 ) code units of id:{m} ." else ??? "Set id:{m} to the string - concatenation of the code unit 0x0030 ( DIGIT ZERO ) , the code unit 0x002E ( FULL STOP ) , - ( id:{e} + 1 ) occurrences of the code unit 0x0030 ( DIGIT ZERO ) , and the String id:{m} ."
  return (+ s m)
}