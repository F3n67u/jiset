digraph {
  node15720 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15735 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15706 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15727 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node15716 [shape=diamond, label=<<font color="black">(= iterator.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node15724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15728 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iterator result)</font>> color="black" fillcolor="white" style=filled]
  node15713 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15725 [shape=cds, label=<<font color="black">7:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node15721 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15705 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15726 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node15722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iterator</td></tr>
      <tr><td align="left">5:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; iterator, &quot;Done&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15723 [shape=cds, label=<<font color="black">6:app __x4__ = (PerformPromiseRace iteratorRecord promiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node15730 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node15712 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15710 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15734 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node15719 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node15714 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iterator = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15707 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15715 [shape=diamond, label=<<font color="black">(is-completion iterator)</font>> color="black" fillcolor="white" style=filled]
  node15718 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iterator.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15733 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15708 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node15704 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15736 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15717 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterator = iterator.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15731 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node15737 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15732 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15711 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node15709 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15704 -> node15706 [ color="black"]
  node15720 -> node15721 [ color="black"]
  node15719 -> node15720 [label=<<font color="black">true</font>> color="black"]
  node15719 -> node15721 [label=<<font color="black">false</font>> color="black"]
  node15726 -> node15727 [label=<<font color="black">true</font>> color="black"]
  node15726 -> node15738 [label=<<font color="black">false</font>> color="black"]
  node15721 -> node15722 [ color="black"]
  node15725 -> node15726 [ color="black"]
  node15738 -> node15705 [ color="black"]
  node15723 -> node15724 [ color="black"]
  node15727 -> node15728 [label=<<font color="black">true</font>> color="black"]
  node15727 -> node15730 [label=<<font color="black">false</font>> color="black"]
  node15717 -> node15722 [ color="black"]
  node15735 -> node15736 [ color="black"]
  node15716 -> node15717 [label=<<font color="black">true</font>> color="black"]
  node15716 -> node15718 [label=<<font color="black">false</font>> color="black"]
  node15711 -> node15712 [ color="black"]
  node15707 -> node15708 [ color="black"]
  node15728 -> node15729 [ color="black"]
  node15715 -> node15716 [label=<<font color="black">true</font>> color="black"]
  node15715 -> node15722 [label=<<font color="black">false</font>> color="black"]
  node15737 -> node15738 [ color="black"]
  node15722 -> node15723 [ color="black"]
  node15706 -> node15707 [ color="black"]
  node15712 -> node15713 [ color="black"]
  node15733 -> node15734 [ color="black"]
  node15708 -> node15709 [ color="black"]
  node15714 -> node15715 [ color="black"]
  node15732 -> node15737 [ color="black"]
  node15713 -> node15714 [ color="black"]
  node15709 -> node15710 [label=<<font color="black">true</font>> color="black"]
  node15709 -> node15711 [label=<<font color="black">false</font>> color="black"]
  node15724 -> node15725 [ color="black"]
  node15729 -> node15730 [ color="black"]
  node15730 -> node15731 [label=<<font color="black">true</font>> color="black"]
  node15730 -> node15737 [label=<<font color="black">false</font>> color="black"]
  node15718 -> node15719 [ color="black"]
  node15731 -> node15732 [label=<<font color="black">true</font>> color="black"]
  node15731 -> node15733 [label=<<font color="black">false</font>> color="black"]
  node15734 -> node15735 [label=<<font color="black">true</font>> color="black"]
  node15734 -> node15736 [label=<<font color="black">false</font>> color="black"]
  node15710 -> node15711 [ color="black"]
  node15736 -> node15737 [ color="black"]
}
