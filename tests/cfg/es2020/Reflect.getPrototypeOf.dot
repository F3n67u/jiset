digraph {
  node18652 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18656 [shape=cds, label=<<font color="black">1:app __x1__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node18651 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18653 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node18650 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18657 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18654 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node18655 -> node18656 [ color="black"]
  node18650 -> node18652 [ color="black"]
  node18652 -> node18653 [ color="black"]
  node18656 -> node18657 [ color="black"]
  node18654 -> node18655 [label=<<font color="black">true</font>> color="black"]
  node18654 -> node18656 [label=<<font color="black">false</font>> color="black"]
  node18653 -> node18654 [ color="black"]
  node18657 -> node18651 [ color="black"]
}
