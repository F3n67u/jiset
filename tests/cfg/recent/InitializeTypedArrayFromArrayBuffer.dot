digraph {
  node16950 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let newByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16940 [shape=diamond, label=<<font color="black">(! (= length undefined))</font>> color="black" fillcolor="white" style=filled]
  node16947 [shape=diamond, label=<<font color="black">(= length undefined)</font>> color="black" fillcolor="white" style=filled]
  node16933 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16953 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let newByteLength = (* newLength elementSize)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16954 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset newByteLength))</font>> color="black" fillcolor="white" style=filled]
  node16937 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let offset = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16941 [shape=cds, label=<<font color="black">7:app __x1__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node16935 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let constructorName = O.TypedArrayName</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{constructorName} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16945 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16938 [shape=diamond, label=<<font color="black">(! (== (%% offset elementSize) 0i))</font>> color="black" fillcolor="white" style=filled]
  node16952 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16948 [shape=diamond, label=<<font color="black">(! (== (%% bufferByteLength elementSize) 0i))</font>> color="black" fillcolor="white" style=filled]
  node16955 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16942 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let newLength = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16956 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">18:O.ByteLength = newByteLength</td></tr>
      <tr><td align="left">19:O.ByteOffset = offset</td></tr>
      <tr><td align="left">20:O.ArrayLength = (/ newByteLength elementSize)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16943 [shape=cds, label=<<font color="black">8:app __x2__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16939 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16944 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node16946 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16949 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16936 [shape=cds, label=<<font color="black">4:app __x0__ = (ToIndex byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node16951 [shape=diamond, label=<<font color="black">(&lt; newByteLength 0i)</font>> color="black" fillcolor="white" style=filled]
  node16934 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16954 -> node16955 [label=<<font color="black">true</font>> color="black"]
  node16954 -> node16956 [label=<<font color="black">false</font>> color="black"]
  node16947 -> node16948 [label=<<font color="black">true</font>> color="black"]
  node16947 -> node16953 [label=<<font color="black">false</font>> color="black"]
  node16950 -> node16951 [ color="black"]
  node16946 -> node16947 [ color="black"]
  node16938 -> node16939 [label=<<font color="black">true</font>> color="black"]
  node16938 -> node16940 [label=<<font color="black">false</font>> color="black"]
  node16936 -> node16937 [ color="black"]
  node16949 -> node16950 [ color="black"]
  node16942 -> node16943 [ color="black"]
  node16951 -> node16952 [label=<<font color="black">true</font>> color="black"]
  node16951 -> node16956 [label=<<font color="black">false</font>> color="black"]
  node16935 -> node16936 [ color="black"]
  node16956 -> node16934 [ color="black"]
  node16945 -> node16946 [ color="black"]
  node16940 -> node16941 [label=<<font color="black">true</font>> color="black"]
  node16940 -> node16943 [label=<<font color="black">false</font>> color="black"]
  node16948 -> node16949 [label=<<font color="black">true</font>> color="black"]
  node16948 -> node16950 [label=<<font color="black">false</font>> color="black"]
  node16939 -> node16940 [ color="black"]
  node16937 -> node16938 [ color="black"]
  node16941 -> node16942 [ color="black"]
  node16944 -> node16945 [label=<<font color="black">true</font>> color="black"]
  node16944 -> node16946 [label=<<font color="black">false</font>> color="black"]
  node16953 -> node16954 [ color="black"]
  node16952 -> node16956 [ color="black"]
  node16943 -> node16944 [ color="black"]
  node16955 -> node16956 [ color="black"]
  node16933 -> node16935 [ color="black"]
}
