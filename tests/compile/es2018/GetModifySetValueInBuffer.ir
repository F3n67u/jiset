{
  [0] app __x0__ = (IsSharedArrayBuffer arrayBuffer)
  [0] assert (= __x0__ true)
  [3] app __x1__ = (Type value)
  [3] assert (= __x1__ Number)
  [4] let block = arrayBuffer.ArrayBufferData
  [5] ??? "Let id:{elementSize} be the Number value of the Element Size value specified in link:{} for Element Type id:{type} ."
  [6] if (= isLittleEndian absent) isLittleEndian = GLOBAL_agent.LittleEndian else [11] {}
  [7] app __x2__ = (NumberToRawBytes type value isLittleEndian)
  [7] let rawBytes = __x2__
  [8] let execution = GLOBAL_agent.CandidateExecution
  [9] ??? "Let id:{eventList} be the [ [ EventList ] ] field of the element in id:{execution} . [ [ EventLists ] ] whose [ [ AgentSignifier ] ] is AgentSignifier ( ) ."
  [10] ??? "Let id:{rawBytesRead} be a List of length id:{elementSize} of nondeterministically chosen byte values ."
  [12] ??? "Let id:{rmwEvent} be ReadModifyWriteSharedMemory { [ [ Order ] ] : code:{\"SeqCst\"} , [ [ NoTear ] ] : value:{true} , [ [ Block ] ] : id:{block} , [ [ ByteIndex ] ] : id:{byteIndex} , [ [ ElementSize ] ] : id:{elementSize} , [ [ Payload ] ] : id:{rawBytes} , [ [ ModifyOp ] ] : id:{op} } ."
  [13] append rmwEvent -> eventList
  [14] append (new ChosenValueRecord("Event" -> rmwEvent, "ChosenValue" -> rawBytesRead)) -> execution.ChosenValues
  [15] app __x3__ = (RawBytesToNumber type rawBytesRead isLittleEndian)
  [15] app __x4__ = (WrapCompletion __x3__)
  [15] return __x4__
}