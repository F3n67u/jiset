{
  access __x0__ = (CoverCallExpressionAndAsyncArrowHead "CoveredCallExpression")
  let expr = __x0__
  access __x1__ = (expr "MemberExpression")
  let memberExpr = __x1__
  access __x2__ = (expr "Arguments")
  let arguments = __x2__
  access __x3__ = (memberExpr "Evaluation")
  let ref = __x3__
  app __x4__ = (GetValue ref)
  let func = [? __x4__]
  let __x5__ = true
  app __x6__ = (Type ref)
  __x5__ = (= __x6__ Reference)
  if __x5__ {
    let __x7__ = true
    app __x8__ = (IsPropertyReference ref)
    __x7__ = (= __x8__ false)
    if __x7__ {
      app __x9__ = (GetReferencedName ref)
      __x7__ = (= __x9__ "eval")
    } else {}
    __x5__ = __x7__
  } else {}
  if __x5__ {
    app __x10__ = (SameValue func INTRINSIC_eval)
    if (= __x10__ true) {
      access __x11__ = (arguments "ArgumentListEvaluation")
      let argList = [? __x11__]
      if (= argList.length 0i) return undefined else {}
      let evalText = argList[0i]
      if true let strictCaller = true else let strictCaller = false
      let evalRealm = REALM
      app __x12__ = (HostEnsureCanCompileStrings evalRealm evalRealm)
      [? __x12__]
      app __x13__ = (PerformEval evalText evalRealm strictCaller true)
      return [? __x13__]
    } else {}
  } else {}
  let thisCall = this
  app __x14__ = (IsInTailPosition thisCall)
  let tailCall = __x14__
  app __x15__ = (EvaluateCall func ref arguments tailCall)
  return [? __x15__]
}