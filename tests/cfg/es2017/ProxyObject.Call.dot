digraph {
  node3021 [shape=cds, label=<<font color="black">6:app __x2__ = (Call target thisArgument argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node3012 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3017 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3014 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3011 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3022 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3018 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;apply&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3023 [shape=cds, label=<<font color="black">7:app __x3__ = (CreateArrayFromList argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node3016 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let argArray = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3015 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3013 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3019 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3026 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3025 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, thisArgument, argArray]))</font>> color="black" fillcolor="white" style=filled]
  node3020 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3019 -> node3020 [ color="black"]
  node3022 -> node3023 [ color="black"]
  node3014 -> node3015 [label=<<font color="black">true</font>> color="black"]
  node3014 -> node3016 [label=<<font color="black">false</font>> color="black"]
  node3020 -> node3021 [label=<<font color="black">true</font>> color="black"]
  node3020 -> node3023 [label=<<font color="black">false</font>> color="black"]
  node3018 -> node3019 [ color="black"]
  node3023 -> node3024 [ color="black"]
  node3024 -> node3025 [ color="black"]
  node3021 -> node3022 [ color="black"]
  node3025 -> node3026 [ color="black"]
  node3015 -> node3016 [ color="black"]
  node3026 -> node3012 [ color="black"]
  node3016 -> node3017 [ color="black"]
  node3011 -> node3013 [ color="black"]
  node3013 -> node3014 [ color="black"]
  node3017 -> node3018 [ color="black"]
}
