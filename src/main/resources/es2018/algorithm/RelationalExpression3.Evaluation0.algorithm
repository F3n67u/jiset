<algorithm>
  <step-list>
    <step>Let <id>lref</id> be the result of evaluating RelationalExpression .</step>
    <step>Let <id>lval</id> be ? GetValue ( <id>lref</id> ).</step>
    <step>Let <id>rref</id> be the result of evaluating ShiftExpression .</step>
    <step>Let <id>rval</id> be ? GetValue ( <id>rref</id> ).</step>
    <step>Let <id>r</id> be the result of performing Abstract Relational Comparison  <id>rval</id> < <id>lval</id> with <id>LeftFirst</id> equal to <value>false</value> .</step>
    <step>ReturnIfAbrupt ( <id>r</id> ).</step>
    <step>If <id>r</id> is <value>true</value> or <value>undefined</value> , return <value>false</value> . Otherwise, return <value>true</value> .</step>
  </step-list>
</algorithm>