["Let", {
  "id": "module"
}, "be", "this", "Source", "Text", "Module", "Record", ".", {
  "k": 0
}, "For", "each", "Record", "{", "[", "[", "Module", "]", "]", ",", "[", "[", "ExportName", "]", "]", "}", {
  "id": "r"
}, "in", {
  "id": "resolveSet"
}, ",", "do", ":", true, "If", {
  "id": "module"
}, "and", {
  "id": "r"
}, ".", "[", "[", "Module", "]", "]", "are", "the", "same", "Module", "Record", "and", "SameValue", "(", {
  "id": "exportName"
}, ",", {
  "id": "r"
}, ".", "[", "[", "ExportName", "]", "]", ")", "is", {
  "value": "true"
}, ",", "then", true, "Assert", ":", "this", "is", "a", "circular", "import", "request", ".", {
  "k": 3
}, "Return", {
  "value": "null"
}, ".", {
  "k": 4
}, false, {
  "k": 2
}, false, {
  "k": 1
}, "Append", "the", "Record", "{", "[", "[", "Module", "]", "]", ":", {
  "id": "module"
}, ",", "[", "[", "ExportName", "]", "]", ":", {
  "id": "exportName"
}, "}", "to", {
  "id": "resolveSet"
}, ".", {
  "k": 5
}, "For", "each", "ExportEntry", "Record", {
  "id": "e"
}, "in", {
  "id": "module"
}, ".", "[", "[", "LocalExportEntries", "]", "]", ",", "do", true, "If", "SameValue", "(", {
  "id": "exportName"
}, ",", {
  "id": "e"
}, ".", "[", "[", "ExportName", "]", "]", ")", "is", {
  "value": "true"
}, ",", "then", true, "Assert", ":", {
  "id": "module"
}, "provides", "the", "direct", "binding", "for", "this", "export", ".", {
  "k": 8
}, "Return", "Record", "{", "[", "[", "Module", "]", "]", ":", {
  "id": "module"
}, ",", "[", "[", "BindingName", "]", "]", ":", {
  "id": "e"
}, ".", "[", "[", "LocalName", "]", "]", "}", ".", {
  "k": 9
}, false, {
  "k": 7
}, false, {
  "k": 6
}, "For", "each", "ExportEntry", "Record", {
  "id": "e"
}, "in", {
  "id": "module"
}, ".", "[", "[", "IndirectExportEntries", "]", "]", ",", "do", true, "If", "SameValue", "(", {
  "id": "exportName"
}, ",", {
  "id": "e"
}, ".", "[", "[", "ExportName", "]", "]", ")", "is", {
  "value": "true"
}, ",", "then", true, "Assert", ":", {
  "id": "module"
}, "imports", "a", "specific", "binding", "for", "this", "export", ".", {
  "k": 12
}, "Let", {
  "id": "importedModule"
}, "be", "?", "HostResolveImportedModule", "(", {
  "id": "module"
}, ",", {
  "id": "e"
}, ".", "[", "[", "ModuleRequest", "]", "]", ")", ".", {
  "k": 13
}, "Let", {
  "id": "indirectResolution"
}, "be", "?", {
  "id": "importedModule"
}, ".", "ResolveExport", "(", {
  "id": "e"
}, ".", "[", "[", "ImportName", "]", "]", ",", {
  "id": "resolveSet"
}, ",", {
  "id": "exportStarSet"
}, ")", ".", {
  "k": 14
}, "If", {
  "id": "indirectResolution"
}, "is", "not", {
  "value": "null"
}, ",", "return", {
  "id": "indirectResolution"
}, ".", {
  "k": 15
}, false, {
  "k": 11
}, false, {
  "k": 10
}, "If", "SameValue", "(", {
  "id": "exportName"
}, ",", {
  "code": "\"default\""
}, ")", "is", {
  "value": "true"
}, ",", "then", true, "Assert", ":", "A", {
  "code": "default"
}, "export", "was", "not", "explicitly", "defined", "by", "this", "module", ".", {
  "k": 17
}, "Throw", "a", {
  "value": "SyntaxError"
}, "exception", ".", {
  "k": 18
}, "NOTE", "A", {
  "code": "default"
}, "export", "cannot", "be", "provided", "by", "an", "`", "export", "*", "`", ".", {
  "k": 19
}, false, {
  "k": 16
}, "If", {
  "id": "exportStarSet"
}, "contains", {
  "id": "module"
}, ",", "return", {
  "value": "null"
}, ".", {
  "k": 20
}, "Append", {
  "id": "module"
}, "to", {
  "id": "exportStarSet"
}, ".", {
  "k": 21
}, "Let", {
  "id": "starResolution"
}, "be", {
  "value": "null"
}, ".", {
  "k": 22
}, "For", "each", "ExportEntry", "Record", {
  "id": "e"
}, "in", {
  "id": "module"
}, ".", "[", "[", "StarExportEntries", "]", "]", ",", "do", true, "Let", {
  "id": "importedModule"
}, "be", "?", "HostResolveImportedModule", "(", {
  "id": "module"
}, ",", {
  "id": "e"
}, ".", "[", "[", "ModuleRequest", "]", "]", ")", ".", {
  "k": 24
}, "Let", {
  "id": "resolution"
}, "be", "?", {
  "id": "importedModule"
}, ".", "ResolveExport", "(", {
  "id": "exportName"
}, ",", {
  "id": "resolveSet"
}, ",", {
  "id": "exportStarSet"
}, ")", ".", {
  "k": 25
}, "If", {
  "id": "resolution"
}, "is", {
  "code": "\"ambiguous\""
}, ",", "return", {
  "code": "\"ambiguous\""
}, ".", {
  "k": 26
}, "If", {
  "id": "resolution"
}, "is", "not", {
  "value": "null"
}, ",", "then", true, "If", {
  "id": "starResolution"
}, "is", {
  "value": "null"
}, ",", "let", {
  "id": "starResolution"
}, "be", {
  "id": "resolution"
}, ".", {
  "k": 28
}, "Else", ",", true, "Assert", ":", "there", "is", "more", "than", "one", {
  "code": "*"
}, "import", "that", "includes", "the", "requested", "name", ".", {
  "k": 30
}, "If", {
  "id": "resolution"
}, ".", "[", "[", "Module", "]", "]", "and", {
  "id": "starResolution"
}, ".", "[", "[", "Module", "]", "]", "are", "not", "the", "same", "Module", "Record", "or", "SameValue", "(", {
  "id": "resolution"
}, ".", "[", "[", "BindingName", "]", "]", ",", {
  "id": "starResolution"
}, ".", "[", "[", "BindingName", "]", "]", ")", "is", {
  "value": "false"
}, ",", "return", {
  "code": "\"ambiguous\""
}, ".", {
  "k": 31
}, false, {
  "k": 29
}, false, {
  "k": 27
}, false, {
  "k": 23
}, "Return", {
  "id": "starResolution"
}, ".", {
  "k": 32
}]