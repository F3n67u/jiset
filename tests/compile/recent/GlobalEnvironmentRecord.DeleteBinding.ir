{
  [0] let DclRec = envRec.DeclarativeRecord
  [1] app __x0__ = (DclRec.HasBinding DclRec N)
  [1] if (= __x0__ true) {
    [2] app __x1__ = (DclRec.DeleteBinding DclRec N)
    [2] app __x2__ = (WrapCompletion __x1__)
    [2] return __x2__
  } else [3] {}
  [3] let ObjRec = envRec.ObjectRecord
  [4] let globalObject = ObjRec.BindingObject
  [5] app __x3__ = (HasOwnProperty globalObject N)
  [5] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [3] {}
  [5] let existingProp = __x3__
  [6] if (= existingProp true) {
    [7] app __x4__ = (ObjRec.DeleteBinding ObjRec N)
    [7] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [3] {}
    [7] let status = __x4__
    [8] if (= status true) {
      [9] let varNames = envRec.VarNames
      [10] ??? "If id:{N} is an element of id:{varNames} , remove that element from the id:{varNames} ."
    } else [3] {}
    [11] app __x5__ = (WrapCompletion status)
    [11] return __x5__
  } else [3] {}
  [12] app __x6__ = (WrapCompletion true)
  [12] return __x6__
}