digraph {
  node18240 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18241 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18239 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18245 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18243 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18246 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18244 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18242 [shape=diamond, label=<<font color="black">(= absent (parse-syntax this &quot;Module&quot; (new [])))</font>> color="black" fillcolor="white" style=filled]
  node18246 -> node18240 [ color="black"]
  node18242 -> node18243 [label=<<font color="black">true</font>> color="black"]
  node18242 -> node18244 [label=<<font color="black">false</font>> color="black"]
  node18241 -> node18242 [ color="black"]
  node18239 -> node18241 [ color="black"]
  node18245 -> node18240 [ color="black"]
  node18244 -> node18245 [label=<<font color="black">true</font>> color="black"]
  node18244 -> node18246 [label=<<font color="black">false</font>> color="black"]
  node18243 -> node18244 [ color="black"]
}
