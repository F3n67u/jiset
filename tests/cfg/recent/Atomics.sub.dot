digraph {
  node18379 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{type} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{typedArray} . [ [ TypedArrayName ] ] .&quot;</td></tr>
      <tr><td align="left">1:let isLittleEndian = GLOBAL_agent.LittleEndian</td></tr>
      <tr><td align="left">2:??? &quot;Let id:{subtract} be a new read - modify - write modification function with parameters ( id:{xBytes} , id:{yBytes} ) that captures id:{type} and id:{isLittleEndian} and performs the following steps atomically when called : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18376 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18378 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18377 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18381 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18374 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18380 [shape=cds, label=<<font color="black">10:app __x0__ = (AtomicReadModifyWrite typedArray index value subtract)</font>> color="black" fillcolor="white" style=filled]
  node18375 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18379 -> node18380 [ color="black"]
  node18374 -> node18376 [ color="black"]
  node18381 -> node18375 [ color="black"]
  node18377 -> node18378 [ color="black"]
  node18378 -> node18379 [ color="black"]
  node18376 -> node18377 [ color="black"]
  node18380 -> node18381 [ color="black"]
}
