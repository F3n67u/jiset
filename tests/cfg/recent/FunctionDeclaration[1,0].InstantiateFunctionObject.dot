digraph {
  node8883 [shape=cds, label=<<font color="black">3:app __x2__ = (MakeConstructor F)</font>> color="black" fillcolor="white" style=filled]
  node8880 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let F = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8878 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let sourceText = (get-syntax FunctionDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8884 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x2__</td></tr>
      <tr><td align="left">4:return F</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8877 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8882 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:__x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8876 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8879 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryFunctionCreate INTRINSIC_Function_prototype sourceText FormalParameters FunctionBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node8881 [shape=cds, label=<<font color="black">2:app __x1__ = (SetFunctionName F &quot;default&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8876 -> node8878 [ color="black"]
  node8882 -> node8883 [ color="black"]
  node8881 -> node8882 [ color="black"]
  node8883 -> node8884 [ color="black"]
  node8878 -> node8879 [ color="black"]
  node8879 -> node8880 [ color="black"]
  node8884 -> node8877 [ color="black"]
  node8880 -> node8881 [ color="black"]
}
