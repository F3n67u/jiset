digraph {
  node9956 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let scope = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9957 [shape=cds, label=<<font color="black">1:app __x1__ = (OrdinaryFunctionCreate INTRINSIC_AsyncFunction_prototype FormalParameters AsyncFunctionBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node9958 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let closure = [! __x1__]</td></tr>
      <tr><td align="left">2:closure.SourceText = (get-syntax AsyncFunctionExpression)</td></tr>
      <tr><td align="left">3:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9953 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9955 [shape=cds, label=<<font color="black">0:access __x0__ = (GLOBAL_context &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9954 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9958 -> node9954 [ color="black"]
  node9956 -> node9957 [ color="black"]
  node9957 -> node9958 [ color="black"]
  node9953 -> node9955 [ color="black"]
  node9955 -> node9956 [ color="black"]
}
