["Let", {
  "id": "ref"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "UnaryExpression"
}, ".", {
  "k": 0
}, "ReturnIfAbrupt", "(", {
  "id": "ref"
}, ")", ".", {
  "k": 1
}, "If", "Type", "(", {
  "id": "ref"
}, ")", "is", "not", "Reference", ",", "return", {
  "value": "true"
}, ".", {
  "k": 2
}, "If", "IsUnresolvableReference", "(", {
  "id": "ref"
}, ")", "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "Assert", ":", "IsStrictReference", "(", {
  "id": "ref"
}, ")", "is", {
  "value": "false"
}, ".", {
  "k": 4
}, "Return", {
  "value": "true"
}, ".", {
  "k": 5
}, {
  "out": null
}, {
  "k": 3
}, "If", "IsPropertyReference", "(", {
  "id": "ref"
}, ")", "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "If", "IsSuperReference", "(", {
  "id": "ref"
}, ")", "is", {
  "value": "true"
}, ",", "throw", "a", {
  "value": "ReferenceError"
}, "exception", ".", {
  "k": 7
}, "Let", {
  "id": "baseObj"
}, "be", "!", "ToObject", "(", "GetBase", "(", {
  "id": "ref"
}, ")", ")", ".", {
  "k": 8
}, "Let", {
  "id": "deleteStatus"
}, "be", "?", {
  "id": "baseObj"
}, ".", "[", "[", "Delete", "]", "]", "(", "GetReferencedName", "(", {
  "id": "ref"
}, ")", ")", ".", {
  "k": 9
}, "If", {
  "id": "deleteStatus"
}, "is", {
  "value": "false"
}, "and", "IsStrictReference", "(", {
  "id": "ref"
}, ")", "is", {
  "value": "true"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 10
}, "Return", {
  "id": "deleteStatus"
}, ".", {
  "k": 11
}, {
  "out": null
}, {
  "k": 6
}, "Else", ",", {
  "in": null
}, "Assert", ":", {
  "id": "ref"
}, "is", "a", "Reference", "to", "an", "Environment", "Record", "binding", ".", {
  "k": 13
}, "Let", {
  "id": "bindings"
}, "be", "GetBase", "(", {
  "id": "ref"
}, ")", ".", {
  "k": 14
}, "Return", "?", {
  "id": "bindings"
}, ".", "DeleteBinding", "(", "GetReferencedName", "(", {
  "id": "ref"
}, ")", ")", ".", {
  "k": 15
}, {
  "out": null
}, {
  "k": 12
}]
