digraph {
  node17920 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17923 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17919 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17922 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node17924 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17925 [shape=cds, label=<<font color="black">1:app __x1__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node17926 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17921 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17921 -> node17922 [ color="black"]
  node17922 -> node17923 [ color="black"]
  node17925 -> node17926 [ color="black"]
  node17923 -> node17924 [label=<<font color="black">true</font>> color="black"]
  node17923 -> node17925 [label=<<font color="black">false</font>> color="black"]
  node17919 -> node17921 [ color="black"]
  node17924 -> node17925 [ color="black"]
  node17926 -> node17920 [ color="black"]
}
