digraph {
  node17226 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17221 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17225 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node17228 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17222 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17223 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17220 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17227 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateSharedArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17224 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17225 -> node17226 [ color="black"]
  node17222 -> node17223 [ color="black"]
  node17228 -> node17221 [ color="black"]
  node17223 -> node17224 [label=<<font color="black">true</font>> color="black"]
  node17223 -> node17225 [label=<<font color="black">false</font>> color="black"]
  node17227 -> node17228 [ color="black"]
  node17226 -> node17227 [ color="black"]
  node17224 -> node17225 [ color="black"]
  node17220 -> node17222 [ color="black"]
}
