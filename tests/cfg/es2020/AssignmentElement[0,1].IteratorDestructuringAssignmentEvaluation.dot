digraph {
  node5950 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node5967 [shape=cds, label=<<font color="black">15:app __x7__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5977 [shape=cds, label=<<font color="black">22:access __x11__ = (nestedAssignmentPattern &quot;DestructuringAssignmentEvaluation&quot; v)</font>> color="black" fillcolor="white" style=filled]
  node5953 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node5970 [shape=cds, label=<<font color="black">17:access __x9__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5956 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let value = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5941 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5964 [shape=cds, label=<<font color="black">16:app __x5__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node5962 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let value = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5965 [shape=cds, label=<<font color="black">16:access __x6__ = (DestructuringAssignmentTarget &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5972 [shape=cds, label=<<font color="black">18:app __x10__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node5976 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let nestedAssignmentPattern = (parse-syntax DestructuringAssignmentTarget &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5949 [shape=cds, label=<<font color="black">5:app __x2__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node5966 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x5__ true) (= __x6__ true))</font>> color="black" fillcolor="white" style=filled]
  node5963 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= value undefined))</font>> color="black" fillcolor="white" style=filled]
  node5943 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5942 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5974 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5957 [shape=cds, label=<<font color="black">10:app __x4__ = (IsAbruptCompletion value)</font>> color="black" fillcolor="white" style=filled]
  node5946 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node5961 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done true)</font>> color="black" fillcolor="white" style=filled]
  node5968 [shape=cds, label=<<font color="black">15:access __x8__ = (Initializer &quot;NamedEvaluation&quot; __x7__)</font>> color="black" fillcolor="white" style=filled]
  node5978 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:return __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5951 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5947 [shape=cds, label=<<font color="black">4:app __x1__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node5973 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let v = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5969 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let v = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5960 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? value]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5979 [shape=cds, label=<<font color="black">23:app __x12__ = (PutValue lref v)</font>> color="black" fillcolor="white" style=filled]
  node5959 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5952 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5944 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5980 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:return [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5955 [shape=cds, label=<<font color="black">9:app __x3__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node5948 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let next = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let defaultValue = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5954 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5945 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5975 [shape=diamond, label=<<font color="black">(|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))</font>> color="black" fillcolor="white" style=filled]
  node5958 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node5948 -> node5949 [ color="black"]
  node5974 -> node5975 [ color="black"]
  node5943 -> node5944 [label=<<font color="black">true</font>> color="black"]
  node5943 -> node5946 [label=<<font color="black">false</font>> color="black"]
  node5978 -> node5979 [ color="black"]
  node5980 -> node5942 [ color="black"]
  node5966 -> node5967 [label=<<font color="black">true</font>> color="black"]
  node5966 -> node5970 [label=<<font color="black">false</font>> color="black"]
  node5976 -> node5977 [ color="black"]
  node5964 -> node5965 [ color="black"]
  node5949 -> node5950 [ color="black"]
  node5962 -> node5963 [ color="black"]
  node5973 -> node5975 [ color="black"]
  node5957 -> node5958 [ color="black"]
  node5965 -> node5966 [ color="black"]
  node5956 -> node5957 [ color="black"]
  node5969 -> node5975 [ color="black"]
  node5945 -> node5946 [ color="black"]
  node5941 -> node5943 [ color="black"]
  node5944 -> node5945 [ color="black"]
  node5960 -> node5961 [ color="black"]
  node5963 -> node5964 [label=<<font color="black">true</font>> color="black"]
  node5963 -> node5974 [label=<<font color="black">false</font>> color="black"]
  node5979 -> node5980 [ color="black"]
  node5971 -> node5972 [ color="black"]
  node5952 -> node5953 [ color="black"]
  node5967 -> node5968 [ color="black"]
  node5977 -> node5978 [ color="black"]
  node5946 -> node5947 [label=<<font color="black">true</font>> color="black"]
  node5946 -> node5961 [label=<<font color="black">false</font>> color="black"]
  node5959 -> node5960 [ color="black"]
  node5958 -> node5959 [label=<<font color="black">true</font>> color="black"]
  node5958 -> node5960 [label=<<font color="black">false</font>> color="black"]
  node5968 -> node5969 [ color="black"]
  node5970 -> node5971 [ color="black"]
  node5951 -> node5952 [ color="black"]
  node5947 -> node5948 [ color="black"]
  node5953 -> node5954 [label=<<font color="black">true</font>> color="black"]
  node5953 -> node5955 [label=<<font color="black">false</font>> color="black"]
  node5955 -> node5956 [ color="black"]
  node5972 -> node5973 [ color="black"]
  node5975 -> node5976 [label=<<font color="black">true</font>> color="black"]
  node5975 -> node5979 [label=<<font color="black">false</font>> color="black"]
  node5961 -> node5962 [label=<<font color="black">true</font>> color="black"]
  node5961 -> node5963 [label=<<font color="black">false</font>> color="black"]
  node5954 -> node5961 [ color="black"]
  node5950 -> node5951 [label=<<font color="black">true</font>> color="black"]
  node5950 -> node5952 [label=<<font color="black">false</font>> color="black"]
}
