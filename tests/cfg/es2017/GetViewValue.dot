digraph {
  node15632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15648 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15633 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node15642 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15644 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node15629 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">8:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15628 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15631 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15638 [shape=cds, label=<<font color="black">4:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:isLittleEndian = __x2__</td></tr>
      <tr><td align="left">5:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15646 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15641 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node15630 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node15645 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15640 [shape=cds, label=<<font color="black">6:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15647 [shape=cds, label=<<font color="black">12:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false &quot;Unordered&quot; isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15636 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node15637 -> node15638 [ color="black"]
  node15636 -> node15637 [ color="black"]
  node15644 -> node15645 [label=<<font color="black">true</font>> color="black"]
  node15644 -> node15646 [label=<<font color="black">false</font>> color="black"]
  node15640 -> node15641 [ color="black"]
  node15643 -> node15644 [ color="black"]
  node15632 -> node15633 [ color="black"]
  node15631 -> node15632 [label=<<font color="black">true</font>> color="black"]
  node15631 -> node15633 [label=<<font color="black">false</font>> color="black"]
  node15635 -> node15636 [ color="black"]
  node15630 -> node15631 [ color="black"]
  node15641 -> node15642 [label=<<font color="black">true</font>> color="black"]
  node15641 -> node15643 [label=<<font color="black">false</font>> color="black"]
  node15647 -> node15648 [ color="black"]
  node15628 -> node15630 [ color="black"]
  node15639 -> node15640 [ color="black"]
  node15642 -> node15643 [ color="black"]
  node15645 -> node15646 [ color="black"]
  node15648 -> node15629 [ color="black"]
  node15638 -> node15639 [ color="black"]
  node15633 -> node15634 [label=<<font color="black">true</font>> color="black"]
  node15633 -> node15635 [label=<<font color="black">false</font>> color="black"]
  node15646 -> node15647 [ color="black"]
  node15634 -> node15635 [ color="black"]
}
