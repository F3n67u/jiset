{
  [0] app __x0__ = (RequireInternalSlot view "DataView")
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [0] {}
  [0] __x0__
  [1] assert (! (= view.ViewedArrayBuffer absent))
  [2] app __x1__ = (ToIndex requestIndex)
  [2] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [0] {}
  [2] let getIndex = __x1__
  [3] app __x2__ = (ToBoolean isLittleEndian)
  [3] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [0] {}
  [3] isLittleEndian = __x2__
  [4] let buffer = view.ViewedArrayBuffer
  [5] app __x3__ = (IsDetachedBuffer buffer)
  [5] if (= __x3__ true) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [0] {}
  [6] let viewOffset = view.ByteOffset
  [7] let viewSize = view.ByteLength
  [8] ??? "Let id:{elementSize} be the Element Size value specified in link:{} for Element Type id:{type} ."
  [9] if (< viewSize (+ getIndex elementSize)) {
    app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x5__
  } else [0] {}
  [10] let bufferIndex = (+ getIndex viewOffset)
  [11] app __x6__ = (GetValueFromBuffer buffer bufferIndex type false CONST_Unordered isLittleEndian)
  [11] app __x7__ = (WrapCompletion __x6__)
  [11] return __x7__
}