{
  access __x0__ = (AsyncFunctionBody "ContainsUseStrict")
  let __x1__ = (= __x0__ true)
  if __x1__ {
    access __x2__ = (UniqueFormalParameters "IsSimpleParameterList")
    __x1__ = (= __x2__ false)
  } else {}
  if __x1__ {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {
    app __x4__ = (NormalCompletion undefined)
    return __x4__
  }
  access __x5__ = (AsyncMethod "HasDirectSuper")
  if (= __x5__ true) {
    app __x6__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x6__
  } else {
    app __x7__ = (NormalCompletion undefined)
    return __x7__
  }
  access __x8__ = (UniqueFormalParameters "Contains")
  app __x9__ = (__x8__ "AwaitExpression")
  if (= __x9__ true) {
    app __x10__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x10__
  } else {
    app __x11__ = (NormalCompletion undefined)
    return __x11__
  }
  access __x12__ = (UniqueFormalParameters "BoundNames")
  access __x13__ = (AsyncFunctionBody "LexicallyDeclaredNames")
  let __x14__ = __x12__
  let __x15__ = __x13__
  let __x16__ = 0i
  let __x17__ = 0i
  let __x18__ = false
  while (< __x16__ __x14__.length) {
    __x17__ = 0i
    while (< __x17__ __x15__.length) if (= __x14__[__x16__] __x15__[__x17__]) __x18__ = true else {}
  }
  if __x18__ {
    app __x19__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x19__
  } else {
    app __x20__ = (NormalCompletion undefined)
    return __x20__
  }
}