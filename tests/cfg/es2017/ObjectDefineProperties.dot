digraph {
  node10647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let descObj = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10662 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let __x8__ = descriptors</td></tr>
      <tr><td align="left">10:let __x9__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let propDesc = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10652 [shape=diamond, label=<<font color="black">(&lt; __x4__ __x3__.length)</font>> color="black" fillcolor="white" style=filled]
  node10657 [shape=cds, label=<<font color="black">7:app __x6__ = (Get props nextKey)</font>> color="black" fillcolor="white" style=filled]
  node10666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x10__]</td></tr>
      <tr><td align="left">__x9__ = (+ __x9__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pair = __x8__[__x9__]</td></tr>
      <tr><td align="left">11:let P = pair[0i]</td></tr>
      <tr><td align="left">12:let desc = pair[1i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10645 [shape=cds, label=<<font color="black">0:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node10660 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let desc = [? __x7__]</td></tr>
      <tr><td align="left">9:append (new [nextKey, desc]) -&gt; descriptors</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10643 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10663 [shape=diamond, label=<<font color="black">(&lt; __x9__ __x8__.length)</font>> color="black" fillcolor="white" style=filled]
  node10649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let props = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10654 [shape=cds, label=<<font color="black">5:app __x5__ = (props.GetOwnProperty props nextKey)</font>> color="black" fillcolor="white" style=filled]
  node10650 [shape=cds, label=<<font color="black">2:app __x2__ = (props.OwnPropertyKeys props)</font>> color="black" fillcolor="white" style=filled]
  node10665 [shape=cds, label=<<font color="black">13:app __x10__ = (DefinePropertyOrThrow O P desc)</font>> color="black" fillcolor="white" style=filled]
  node10644 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10646 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node10661 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__ = (+ __x4__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10651 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let keys = [? __x2__]</td></tr>
      <tr><td align="left">3:let descriptors = (new [])</td></tr>
      <tr><td align="left">4:let __x3__ = keys</td></tr>
      <tr><td align="left">4:let __x4__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10656 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= propDesc undefined)) (= propDesc.Enumerable true))</font>> color="black" fillcolor="white" style=filled]
  node10653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let nextKey = __x3__[__x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10659 [shape=cds, label=<<font color="black">8:app __x7__ = (ToPropertyDescriptor descObj)</font>> color="black" fillcolor="white" style=filled]
  node10648 [shape=cds, label=<<font color="black">1:app __x1__ = (ToObject Properties)</font>> color="black" fillcolor="white" style=filled]
  node10654 -> node10655 [ color="black"]
  node10646 -> node10647 [label=<<font color="black">true</font>> color="black"]
  node10646 -> node10648 [label=<<font color="black">false</font>> color="black"]
  node10658 -> node10659 [ color="black"]
  node10653 -> node10654 [ color="black"]
  node10664 -> node10665 [ color="black"]
  node10662 -> node10663 [ color="black"]
  node10652 -> node10653 [label=<<font color="black">true</font>> color="black"]
  node10652 -> node10662 [label=<<font color="black">false</font>> color="black"]
  node10647 -> node10648 [ color="black"]
  node10649 -> node10650 [ color="black"]
  node10661 -> node10652 [ color="black"]
  node10650 -> node10651 [ color="black"]
  node10645 -> node10646 [ color="black"]
  node10667 -> node10644 [ color="black"]
  node10655 -> node10656 [ color="black"]
  node10663 -> node10664 [label=<<font color="black">true</font>> color="black"]
  node10663 -> node10667 [label=<<font color="black">false</font>> color="black"]
  node10666 -> node10663 [ color="black"]
  node10660 -> node10661 [ color="black"]
  node10665 -> node10666 [ color="black"]
  node10657 -> node10658 [ color="black"]
  node10656 -> node10657 [label=<<font color="black">true</font>> color="black"]
  node10656 -> node10661 [label=<<font color="black">false</font>> color="black"]
  node10659 -> node10660 [ color="black"]
  node10651 -> node10652 [ color="black"]
  node10648 -> node10649 [ color="black"]
  node10643 -> node10645 [ color="black"]
}
