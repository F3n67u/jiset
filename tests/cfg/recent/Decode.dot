digraph {
  node11816 [shape=diamond, label=<<font color="black">(== k strLen)</font>> color="black" fillcolor="white" style=filled]
  node11827 [shape=diamond, label=<<font color="black">(! (contains reservedSet C))</font>> color="black" fillcolor="white" style=filled]
  node11820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let S = C</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11813 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11845 [shape=cds, label=<<font color="black">37:app __x3__ = (UTF16EncodeCodePoint V)</font>> color="black" fillcolor="white" style=filled]
  node11824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:??? &quot;If the code units at index ( id:{k} + 1 ) and ( id:{k} + 2 ) within id:{string} do not represent hexadecimal digits , throw a value:{URIError} exception .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;Let id:{B} be the 8 - bit value represented by the two hexadecimal digits at index ( id:{k} + 1 ) and ( id:{k} + 2 ) .&quot;</td></tr>
      <tr><td align="left">13:k = (+ k 2i)</td></tr>
      <tr><td align="left">14:??? &quot;Let id:{n} be the number of leading 1 bits in id:{B} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11837 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw URIError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11836 [shape=diamond, label=<<font color="black">(! (&lt; (+ k (* 3i (- n 1i))) strLen))</font>> color="black" fillcolor="white" style=filled]
  node11829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let __x0__ = &quot;&quot;</td></tr>
      <tr><td align="left">20:let __x1__ = start</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let strLen = string.length</td></tr>
      <tr><td align="left">1:let R = &quot;&quot;</td></tr>
      <tr><td align="left">2:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11815 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node11843 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:??? &quot;If the code units at index ( id:{k} + 1 ) and ( id:{k} + 2 ) within id:{string} do not represent hexadecimal digits , throw a value:{URIError} exception .&quot;</td></tr>
      <tr><td align="left">30:??? &quot;Let id:{B} be the 8 - bit value represented by the two hexadecimal digits at index ( id:{k} + 1 ) and ( id:{k} + 2 ) .&quot;</td></tr>
      <tr><td align="left">31:k = (+ k 2i)</td></tr>
      <tr><td align="left">32:append B -&gt; Octets</td></tr>
      <tr><td align="left">33:j = (+ j 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let C = string[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11822 [shape=diamond, label=<<font color="black">(! (&lt; (+ k 2i) strLen))</font>> color="black" fillcolor="white" style=filled]
  node11834 [shape=diamond, label=<<font color="black">(|| (== n 1i) (&lt; 4i n))</font>> color="black" fillcolor="white" style=filled]
  node11831 [shape=cds, label=<<font color="black">access __x2__ = (string __x1__)</font>> color="black" fillcolor="white" style=filled]
  node11844 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:assert (= Octets.length n)</td></tr>
      <tr><td align="left">35:??? &quot;If id:{Octets} does not contain a valid UTF - 8 encoding of a Unicode code point , throw a value:{URIError} exception .&quot;</td></tr>
      <tr><td align="left">36:??? &quot;Let id:{V} be the code point obtained by applying the UTF - 8 transformation to id:{Octets} , that is , from a List of octets into a 21 - bit value .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return R</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11812 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11821 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let start = k</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11838 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let Octets = (new [B])</td></tr>
      <tr><td align="left">25:let j = 1i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let S = C</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let S = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11819 [shape=diamond, label=<<font color="black">(! (= C &quot;%&quot;))</font>> color="black" fillcolor="white" style=filled]
  node11846 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:let S = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11841 [shape=diamond, label=<<font color="black">(! (= string[k] &quot;%&quot;))</font>> color="black" fillcolor="white" style=filled]
  node11823 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw URIError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11842 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw URIError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11840 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11835 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw URIError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11830 [shape=diamond, label=<<font color="black">(&lt; __x1__ (+ (+ k 1i) 1i))</font>> color="black" fillcolor="white" style=filled]
  node11825 [shape=diamond, label=<<font color="black">(== n 0i)</font>> color="black" fillcolor="white" style=filled]
  node11832 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = (+ __x0__ __x2__)</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11847 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:R = (+ R S)</td></tr>
      <tr><td align="left">39:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let C = B</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11839 [shape=diamond, label=<<font color="black">(&lt; j n)</font>> color="black" fillcolor="white" style=filled]
  node11817 -> node11818 [ color="black"]
  node11818 -> node11819 [ color="black"]
  node11815 -> node11816 [label=<<font color="black">true</font>> color="black"]
  node11815 -> node11813 [label=<<font color="black">false</font>> color="black"]
  node11812 -> node11814 [ color="black"]
  node11824 -> node11825 [ color="black"]
  node11831 -> node11832 [ color="black"]
  node11839 -> node11840 [label=<<font color="black">true</font>> color="black"]
  node11839 -> node11844 [label=<<font color="black">false</font>> color="black"]
  node11838 -> node11839 [ color="black"]
  node11827 -> node11828 [label=<<font color="black">true</font>> color="black"]
  node11827 -> node11829 [label=<<font color="black">false</font>> color="black"]
  node11828 -> node11847 [ color="black"]
  node11833 -> node11847 [ color="black"]
  node11836 -> node11837 [label=<<font color="black">true</font>> color="black"]
  node11836 -> node11838 [label=<<font color="black">false</font>> color="black"]
  node11837 -> node11838 [ color="black"]
  node11832 -> node11830 [ color="black"]
  node11841 -> node11842 [label=<<font color="black">true</font>> color="black"]
  node11841 -> node11843 [label=<<font color="black">false</font>> color="black"]
  node11845 -> node11846 [ color="black"]
  node11842 -> node11843 [ color="black"]
  node11843 -> node11839 [ color="black"]
  node11847 -> node11815 [ color="black"]
  node11821 -> node11822 [ color="black"]
  node11822 -> node11823 [label=<<font color="black">true</font>> color="black"]
  node11822 -> node11824 [label=<<font color="black">false</font>> color="black"]
  node11844 -> node11845 [ color="black"]
  node11840 -> node11841 [ color="black"]
  node11830 -> node11831 [label=<<font color="black">true</font>> color="black"]
  node11830 -> node11833 [label=<<font color="black">false</font>> color="black"]
  node11819 -> node11820 [label=<<font color="black">true</font>> color="black"]
  node11819 -> node11821 [label=<<font color="black">false</font>> color="black"]
  node11829 -> node11830 [ color="black"]
  node11823 -> node11824 [ color="black"]
  node11814 -> node11815 [ color="black"]
  node11846 -> node11847 [ color="black"]
  node11834 -> node11835 [label=<<font color="black">true</font>> color="black"]
  node11834 -> node11836 [label=<<font color="black">false</font>> color="black"]
  node11825 -> node11826 [label=<<font color="black">true</font>> color="black"]
  node11825 -> node11834 [label=<<font color="black">false</font>> color="black"]
  node11820 -> node11847 [ color="black"]
  node11826 -> node11827 [ color="black"]
  node11835 -> node11836 [ color="black"]
  node11816 -> node11817 [label=<<font color="black">true</font>> color="black"]
  node11816 -> node11818 [label=<<font color="black">false</font>> color="black"]
}
