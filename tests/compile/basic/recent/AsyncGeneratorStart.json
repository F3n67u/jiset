["Assert", ":", {
  "id": "generator"
}, "is", "an", "AsyncGenerator", "instance", ".", {
  "k": 0
}, "Assert", ":", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorState", "]", "]", "is", {
  "value": "undefined"
}, ".", {
  "k": 1
}, "Let", {
  "id": "genContext"
}, "be", "the", "running", "execution", "context", ".", {
  "k": 2
}, "Set", "the", "Generator", "component", "of", {
  "id": "genContext"
}, "to", {
  "id": "generator"
}, ".", {
  "k": 3
}, "Set", "the", "code", "evaluation", "state", "of", {
  "id": "genContext"
}, "such", "that", "when", "evaluation", "is", "resumed", "for", "that", "execution", "context", "the", "following", "steps", "will", "be", "performed", ":", true, "If", {
  "id": "generatorBody"
}, "is", "a", "Parse", "Node", ",", "then", true, "Let", {
  "id": "result"
}, "be", "the", "result", "of", "evaluating", {
  "id": "generatorBody"
}, ".", {
  "k": 6
}, false, {
  "k": 5
}, "Else", ",", true, "Assert", ":", {
  "id": "generatorBody"
}, "is", "an", "Abstract", "Closure", "with", "no", "parameters", ".", {
  "k": 8
}, "Let", {
  "id": "result"
}, "be", {
  "id": "generatorBody"
}, "(", ")", ".", {
  "k": 9
}, false, {
  "k": 7
}, "Assert", ":", "If", "we", "return", "here", ",", "the", "async", "generator", "either", "threw", "an", "exception", "or", "performed", "either", "an", "implicit", "or", "explicit", "return", ".", {
  "k": 10
}, "Remove", {
  "id": "genContext"
}, "from", "the", "execution", "context", "stack", "and", "restore", "the", "execution", "context", "that", "is", "at", "the", "top", "of", "the", "execution", "context", "stack", "as", "the", "running", "execution", "context", ".", {
  "k": 11
}, "Set", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorState", "]", "]", "to", {
  "const": "completed"
}, ".", {
  "k": 12
}, "If", {
  "id": "result"
}, "is", "a", "normal", "completion", ",", "let", {
  "id": "resultValue"
}, "be", {
  "value": "undefined"
}, ".", {
  "k": 13
}, "Else", ",", true, "Let", {
  "id": "resultValue"
}, "be", {
  "id": "result"
}, ".", "[", "[", "Value", "]", "]", ".", {
  "k": 15
}, "If", {
  "id": "result"
}, ".", "[", "[", "Type", "]", "]", "is", "not", {
  "const": "return"
}, ",", "then", true, "Return", "!", "AsyncGeneratorReject", "(", {
  "id": "generator"
}, ",", {
  "id": "resultValue"
}, ")", ".", {
  "k": 17
}, false, {
  "k": 16
}, false, {
  "k": 14
}, "Return", "!", "AsyncGeneratorResolve", "(", {
  "id": "generator"
}, ",", {
  "id": "resultValue"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 18
}, false, {
  "k": 4
}, "Set", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorContext", "]", "]", "to", {
  "id": "genContext"
}, ".", {
  "k": 19
}, "Set", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorState", "]", "]", "to", {
  "const": "suspendedStart"
}, ".", {
  "k": 20
}, "Set", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorQueue", "]", "]", "to", "a", "new", "empty", "List", ".", {
  "k": 21
}, "Return", {
  "value": "undefined"
}, ".", {
  "k": 22
}]