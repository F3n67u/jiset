digraph {
  node13302 [shape=cds, label=<<font color="black">4:app __x3__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node13298 [shape=cds, label=<<font color="black">2:app __x2__ = (IsRegExp searchString)</font>> color="black" fillcolor="white" style=filled]
  node13307 [shape=cds, label=<<font color="black">8:app __x6__ = (min __x5__ len)</font>> color="black" fillcolor="white" style=filled]
  node13305 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let pos = [? __x4__]</td></tr>
      <tr><td align="left">7:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13301 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13296 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13300 [shape=diamond, label=<<font color="black">(= isRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node13304 [shape=cds, label=<<font color="black">5:app __x4__ = (ToInteger position)</font>> color="black" fillcolor="white" style=filled]
  node13299 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isRegExp = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13303 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let searchStr = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13294 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13295 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13290 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13309 [shape=diamond, label=<<font color="black">(&lt; len (+ searchLength start))</font>> color="black" fillcolor="white" style=filled]
  node13291 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13308 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let start = __x6__</td></tr>
      <tr><td align="left">9:let searchLength = searchStr.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13310 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13293 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13292 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13306 [shape=cds, label=<<font color="black">8:app __x5__ = (max pos 0i)</font>> color="black" fillcolor="white" style=filled]
  node13311 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:??? &quot;If the sequence of code units of id:{S} starting at id:{start} of length id:{searchLength} is the same as the full code unit sequence of id:{searchStr} , return value:{true} .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;Otherwise , return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13308 -> node13309 [ color="black"]
  node13310 -> node13311 [ color="black"]
  node13300 -> node13301 [label=<<font color="black">true</font>> color="black"]
  node13300 -> node13302 [label=<<font color="black">false</font>> color="black"]
  node13306 -> node13307 [ color="black"]
  node13311 -> node13291 [ color="black"]
  node13304 -> node13305 [ color="black"]
  node13307 -> node13308 [ color="black"]
  node13296 -> node13297 [ color="black"]
  node13293 -> node13294 [ color="black"]
  node13297 -> node13298 [ color="black"]
  node13309 -> node13310 [label=<<font color="black">true</font>> color="black"]
  node13309 -> node13311 [label=<<font color="black">false</font>> color="black"]
  node13305 -> node13306 [ color="black"]
  node13299 -> node13300 [ color="black"]
  node13302 -> node13303 [ color="black"]
  node13292 -> node13293 [ color="black"]
  node13303 -> node13304 [ color="black"]
  node13295 -> node13296 [ color="black"]
  node13290 -> node13292 [ color="black"]
  node13298 -> node13299 [ color="black"]
  node13294 -> node13295 [ color="black"]
  node13301 -> node13302 [ color="black"]
}
