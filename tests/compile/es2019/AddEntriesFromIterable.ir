{
  [0] app __x0__ = (IsCallable adder)
  [0] if (= __x0__ false) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [1] {}
  [2] app __x2__ = (GetIterator iterable)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [1] {}
  [2] let iteratorRecord = __x2__
  [3] while true {
    [4] app __x3__ = (IteratorStep iteratorRecord)
    [4] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [1] {}
    [4] let next = __x3__
    [5] if (= next false) {
      app __x4__ = (WrapCompletion target)
      return __x4__
    } else [1] {}
    [6] app __x5__ = (IteratorValue next)
    [6] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [1] {}
    [6] let nextItem = __x5__
    [7] app __x6__ = (Type nextItem)
    [7] if (! (= __x6__ Object)) {
      [8] app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      [8] let error = __x7__
      [9] app __x8__ = (IteratorClose iteratorRecord error)
      [9] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [1] {}
      [9] app __x9__ = (WrapCompletion __x8__)
      [9] return __x9__
    } else [1] {}
    [10] app __x10__ = (Get nextItem "0")
    [10] let k = __x10__
    [11] app __x11__ = (IsAbruptCompletion k)
    [11] if __x11__ {
      app __x12__ = (IteratorClose iteratorRecord k)
      if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else [1] {}
      app __x13__ = (WrapCompletion __x12__)
      return __x13__
    } else [1] {}
    [12] app __x14__ = (Get nextItem "1")
    [12] let v = __x14__
    [13] app __x15__ = (IsAbruptCompletion v)
    [13] if __x15__ {
      app __x16__ = (IteratorClose iteratorRecord v)
      if (is-completion __x16__) if (= __x16__.Type CONST_normal) __x16__ = __x16__.Value else return __x16__ else [1] {}
      app __x17__ = (WrapCompletion __x16__)
      return __x17__
    } else [1] {}
    [14] app __x18__ = (Call adder target (new [k.Value, v.Value]))
    [14] let status = __x18__
    [15] app __x19__ = (IsAbruptCompletion status)
    [15] if __x19__ {
      app __x20__ = (IteratorClose iteratorRecord status)
      if (is-completion __x20__) if (= __x20__.Type CONST_normal) __x20__ = __x20__.Value else return __x20__ else [1] {}
      app __x21__ = (WrapCompletion __x20__)
      return __x21__
    } else [1] {}
  }
}