digraph {
  node3891 [shape=cds, label=<<font color="black">3:app __x3__ = (__x2__ array nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node3887 [shape=cds, label=<<font color="black">1:access __x0__ = (Elision &quot;ArrayAccumulation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3885 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3886 [shape=diamond, label=<<font color="black">(! (= Elision absent))</font>> color="black" fillcolor="white" style=filled]
  node3884 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:nextIndex = __x1__</td></tr>
      <tr><td align="left">2:[? nextIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3890 [shape=cds, label=<<font color="black">3:access __x2__ = (SpreadElement &quot;ArrayAccumulation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3888 [shape=cds, label=<<font color="black">1:app __x1__ = (__x0__ array nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node3884 -> node3886 [ color="black"]
  node3892 -> node3885 [ color="black"]
  node3886 -> node3887 [label=<<font color="black">true</font>> color="black"]
  node3886 -> node3890 [label=<<font color="black">false</font>> color="black"]
  node3890 -> node3891 [ color="black"]
  node3889 -> node3890 [ color="black"]
  node3891 -> node3892 [ color="black"]
  node3887 -> node3888 [ color="black"]
  node3888 -> node3889 [ color="black"]
}
