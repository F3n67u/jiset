digraph {
  node16156 [shape=diamond, label=<<font color="black">(|| (= C &quot;\&quot;&quot;) (= C &quot;\\&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16151 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16155 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16159 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:product = (+ product &quot;\\&quot;)</td></tr>
      <tr><td align="left">7:??? &quot;Let id:{abbrev} be the String value corresponding to the value of id:{C} as follows : in:{} out:{}&quot;</td></tr>
      <tr><td align="left">52:product = (+ product abbrev)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16152 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16154 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node16158 [shape=diamond, label=<<font color="black">(|| (|| (|| (|| (= C &quot;\b&quot;) (= C &quot;&quot;)) (= C &quot;\n&quot;)) (= C &quot;&quot;)) (= C &quot;	&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16153 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let product = &quot;\&quot;&quot;</td></tr>
      <tr><td align="left">1:let __x0__ = value</td></tr>
      <tr><td align="left">1:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16161 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">60:product = (+ product &quot;\&quot;&quot;)</td></tr>
      <tr><td align="left">61:return product</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16160 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:??? &quot;Else if id:{C} has a code unit value less than 0x0020 ( SPACE ) , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">58:??? &quot;Else , in:{} out:{}&quot;</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16157 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:product = (+ product &quot;\\&quot;)</td></tr>
      <tr><td align="left">4:product = (+ product C)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16151 -> node16153 [ color="black"]
  node16159 -> node16160 [ color="black"]
  node16160 -> node16154 [ color="black"]
  node16158 -> node16159 [label=<<font color="black">true</font>> color="black"]
  node16158 -> node16160 [label=<<font color="black">false</font>> color="black"]
  node16161 -> node16152 [ color="black"]
  node16155 -> node16156 [ color="black"]
  node16156 -> node16157 [label=<<font color="black">true</font>> color="black"]
  node16156 -> node16158 [label=<<font color="black">false</font>> color="black"]
  node16153 -> node16154 [ color="black"]
  node16157 -> node16160 [ color="black"]
  node16154 -> node16155 [label=<<font color="black">true</font>> color="black"]
  node16154 -> node16161 [label=<<font color="black">false</font>> color="black"]
}
