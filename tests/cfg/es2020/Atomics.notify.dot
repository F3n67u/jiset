digraph {
  node17907 [shape=diamond, label=<<font color="black">(= count undefined)</font>> color="black" fillcolor="white" style=filled]
  node17911 [shape=cds, label=<<font color="black">5:app __x3__ = (max intCount 0i)</font>> color="black" fillcolor="white" style=filled]
  node17923 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x7__</td></tr>
      <tr><td align="left">19:n = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17919 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let S = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17902 [shape=cds, label=<<font color="black">app count = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17908 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let c = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17898 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17912 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let c = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17915 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let WL = __x4__</td></tr>
      <tr><td align="left">12:let n = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17921 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let W = S[0i]</td></tr>
      <tr><td align="left">17:(pop S 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17904 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17917 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17900 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17922 [shape=cds, label=<<font color="black">18:app __x7__ = (NotifyWaiter WL W)</font>> color="black" fillcolor="white" style=filled]
  node17903 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray true)</font>> color="black" fillcolor="white" style=filled]
  node17920 [shape=diamond, label=<<font color="black">(&lt; 0i S.length)</font>> color="black" fillcolor="white" style=filled]
  node17924 [shape=cds, label=<<font color="black">20:app __x8__ = (LeaveCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node17925 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:__x8__</td></tr>
      <tr><td align="left">21:return n</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17899 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17916 [shape=cds, label=<<font color="black">13:app __x5__ = (EnterCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node17905 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node17918 [shape=cds, label=<<font color="black">14:app __x6__ = (RemoveWaiters WL c)</font>> color="black" fillcolor="white" style=filled]
  node17901 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17914 [shape=cds, label=<<font color="black">11:app __x4__ = (GetWaiterList block indexedPosition)</font>> color="black" fillcolor="white" style=filled]
  node17909 [shape=cds, label=<<font color="black">4:app __x2__ = (ToInteger count)</font>> color="black" fillcolor="white" style=filled]
  node17906 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17913 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let block = buffer.ArrayBufferData</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:let arrayTypeName = typedArray.TypedArrayName</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">10:let indexedPosition = (+ (* i elementSize) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17910 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let intCount = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17913 -> node17914 [ color="black"]
  node17920 -> node17921 [label=<<font color="black">true</font>> color="black"]
  node17920 -> node17924 [label=<<font color="black">false</font>> color="black"]
  node17925 -> node17899 [ color="black"]
  node17921 -> node17922 [ color="black"]
  node17903 -> node17904 [ color="black"]
  node17905 -> node17906 [ color="black"]
  node17900 -> node17901 [ color="black"]
  node17907 -> node17908 [label=<<font color="black">true</font>> color="black"]
  node17907 -> node17909 [label=<<font color="black">false</font>> color="black"]
  node17909 -> node17910 [ color="black"]
  node17914 -> node17915 [ color="black"]
  node17916 -> node17917 [ color="black"]
  node17922 -> node17923 [ color="black"]
  node17915 -> node17916 [ color="black"]
  node17923 -> node17920 [ color="black"]
  node17902 -> node17903 [ color="black"]
  node17898 -> node17900 [ color="black"]
  node17906 -> node17907 [ color="black"]
  node17917 -> node17918 [ color="black"]
  node17901 -> node17902 [ color="black"]
  node17924 -> node17925 [ color="black"]
  node17919 -> node17920 [ color="black"]
  node17912 -> node17913 [ color="black"]
  node17911 -> node17912 [ color="black"]
  node17908 -> node17913 [ color="black"]
  node17910 -> node17911 [ color="black"]
  node17918 -> node17919 [ color="black"]
  node17904 -> node17905 [ color="black"]
}
