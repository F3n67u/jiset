{
  if (= env null) {
    app __x0__ = (WrapCompletion (new ReferenceRecord("Base" -> CONST_unresolvable, "ReferencedName" -> name, "Strict" -> strict, "ThisValue" -> CONST_empty)))
    return __x0__
  } else {}
  app __x1__ = (env.HasBinding env name)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let exists = __x1__
  if (= exists true) {
    app __x2__ = (WrapCompletion (new ReferenceRecord("Base" -> env, "ReferencedName" -> name, "Strict" -> strict, "ThisValue" -> CONST_empty)))
    return __x2__
  } else {
    let outer = env.OuterEnv
    app __x3__ = (GetIdentifierReference outer name strict)
    if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
    app __x4__ = (WrapCompletion __x3__)
    return __x4__
  }
}