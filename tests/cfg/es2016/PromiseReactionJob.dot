digraph {
  node15643 [shape=diamond, label=<<font color="black">(= handler &quot;Thrower&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15651 [shape=cds, label=<<font color="black">9:app __x4__ = (Call promiseCapability.Resolve undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15637 [shape=cds, label=<<font color="black">app reaction = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15648 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node15638 [shape=cds, label=<<font color="black">app argument = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15635 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = (new Completion(&quot;Type&quot; -&gt; CONST_throw, &quot;Value&quot; -&gt; argument, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let status = __x4__</td></tr>
      <tr><td align="left">10:??? &quot;NextJob Completion ( id:{status} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15642 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let status = __x3__</td></tr>
      <tr><td align="left">8:??? &quot;NextJob Completion ( id:{status} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = reaction.Capabilities</td></tr>
      <tr><td align="left">2:let handler = reaction.Handler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15646 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15641 [shape=cds, label=<<font color="black">app __x0__ = (NormalCompletion argument)</font>> color="black" fillcolor="white" style=filled]
  node15649 [shape=cds, label=<<font color="black">7:app __x3__ = (Call promiseCapability.Reject undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15645 [shape=cds, label=<<font color="black">app __x1__ = (Call handler undefined (new [argument]))</font>> color="black" fillcolor="white" style=filled]
  node15640 [shape=diamond, label=<<font color="black">(= handler &quot;Identity&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15647 [shape=cds, label=<<font color="black">6:app __x2__ = (IsAbruptCompletion handlerResult)</font>> color="black" fillcolor="white" style=filled]
  node15636 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15644 -> node15647 [ color="black"]
  node15650 -> node15651 [ color="black"]
  node15647 -> node15648 [ color="black"]
  node15640 -> node15641 [label=<<font color="black">true</font>> color="black"]
  node15640 -> node15643 [label=<<font color="black">false</font>> color="black"]
  node15652 -> node15636 [ color="black"]
  node15651 -> node15652 [ color="black"]
  node15639 -> node15640 [ color="black"]
  node15648 -> node15649 [label=<<font color="black">true</font>> color="black"]
  node15648 -> node15651 [label=<<font color="black">false</font>> color="black"]
  node15643 -> node15644 [label=<<font color="black">true</font>> color="black"]
  node15643 -> node15645 [label=<<font color="black">false</font>> color="black"]
  node15646 -> node15647 [ color="black"]
  node15635 -> node15637 [ color="black"]
  node15642 -> node15647 [ color="black"]
  node15637 -> node15638 [ color="black"]
  node15649 -> node15650 [ color="black"]
  node15641 -> node15642 [ color="black"]
  node15645 -> node15646 [ color="black"]
  node15638 -> node15639 [ color="black"]
}
