{
  let C = this
  if (= mapfn undefined) let mapping = false else {
    app __x0__ = (IsCallable mapfn)
    if (= __x0__ false) throw INTRINSIC_TypeError else {}
    if (! (= thisArg absent)) let T = thisArg else let T = undefined
    let mapping = true
  }
  app __x1__ = (GetMethod items SYMBOL_iterator)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let usingIterator = __x1__
  if (! (= usingIterator undefined)) {
    app __x2__ = (IsConstructor C)
    if (= __x2__ true) {
      app __x3__ = (Construct C)
      if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
      let A = __x3__
    } else {
      app __x4__ = (ArrayCreate 0i)
      if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
      let A = __x4__
    }
    app __x5__ = (GetIterator items usingIterator)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
    let iterator = __x5__
    let k = 0i
    while true {
      if (! (< k (- (** 2.0 53i) 1i))) {
        let error = (new Completion("Type" -> CONST_throw, "Value" -> ??? "TypeError", "Target" -> CONST_empty))
        app __x6__ = (IteratorClose iterator error)
        if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
        app __x7__ = (WrapCompletion __x6__)
        return __x7__
      } else {}
      app __x8__ = (ToString k)
      if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
      let Pk = __x8__
      app __x9__ = (IteratorStep iterator)
      if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
      let next = __x9__
      if (= next false) {
        app __x10__ = (Set A "length" k true)
        if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
        __x10__
        app __x11__ = (WrapCompletion A)
        return __x11__
      } else {}
      app __x12__ = (IteratorValue next)
      if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else {}
      let nextValue = __x12__
      if (= mapping true) {
        app __x13__ = (Call mapfn T (new [nextValue, k]))
        let mappedValue = __x13__
        app __x14__ = (IsAbruptCompletion mappedValue)
        if __x14__ {
          app __x15__ = (IteratorClose iterator mappedValue)
          if (is-completion __x15__) if (= __x15__.Type CONST_normal) __x15__ = __x15__.Value else return __x15__ else {}
          app __x16__ = (WrapCompletion __x15__)
          return __x16__
        } else {}
        let mappedValue = mappedValue.Value
      } else let mappedValue = nextValue
      app __x17__ = (CreateDataPropertyOrThrow A Pk mappedValue)
      let defineStatus = __x17__
      app __x18__ = (IsAbruptCompletion defineStatus)
      if __x18__ {
        app __x19__ = (IteratorClose iterator defineStatus)
        if (is-completion __x19__) if (= __x19__.Type CONST_normal) __x19__ = __x19__.Value else return __x19__ else {}
        app __x20__ = (WrapCompletion __x19__)
        return __x20__
      } else {}
      k = (+ k 1i)
    }
  } else {}
  app __x21__ = (ToObject items)
  if (is-completion __x21__) if (= __x21__.Type CONST_normal) __x21__ = __x21__.Value else return __x21__ else {}
  let arrayLike = __x21__
  app __x22__ = (Get arrayLike "length")
  if (is-completion __x22__) if (= __x22__.Type CONST_normal) __x22__ = __x22__.Value else return __x22__ else {}
  app __x23__ = (ToLength __x22__)
  if (is-completion __x23__) if (= __x23__.Type CONST_normal) __x23__ = __x23__.Value else return __x23__ else {}
  let len = __x23__
  app __x24__ = (IsConstructor C)
  if (= __x24__ true) {
    app __x25__ = (Construct C (new [len]))
    if (is-completion __x25__) if (= __x25__.Type CONST_normal) __x25__ = __x25__.Value else return __x25__ else {}
    let A = __x25__
  } else {
    app __x26__ = (ArrayCreate len)
    if (is-completion __x26__) if (= __x26__.Type CONST_normal) __x26__ = __x26__.Value else return __x26__ else {}
    let A = __x26__
  }
  let k = 0i
  while (< k len) {
    app __x27__ = (ToString k)
    if (is-completion __x27__) if (= __x27__.Type CONST_normal) __x27__ = __x27__.Value else return __x27__ else {}
    let Pk = __x27__
    app __x28__ = (Get arrayLike Pk)
    if (is-completion __x28__) if (= __x28__.Type CONST_normal) __x28__ = __x28__.Value else return __x28__ else {}
    let kValue = __x28__
    if (= mapping true) {
      app __x29__ = (Call mapfn T (new [kValue, k]))
      if (is-completion __x29__) if (= __x29__.Type CONST_normal) __x29__ = __x29__.Value else return __x29__ else {}
      let mappedValue = __x29__
    } else let mappedValue = kValue
    app __x30__ = (CreateDataPropertyOrThrow A Pk mappedValue)
    if (is-completion __x30__) if (= __x30__.Type CONST_normal) __x30__ = __x30__.Value else return __x30__ else {}
    __x30__
    k = (+ k 1i)
  }
  app __x31__ = (Set A "length" len true)
  if (is-completion __x31__) if (= __x31__.Type CONST_normal) __x31__ = __x31__.Value else return __x31__ else {}
  __x31__
  app __x32__ = (WrapCompletion A)
  return __x32__
}