{
  assert (= (typeof functionPrototype) Object)
  let internalSlotsList = StrList
  app __x0__ = (OrdinaryObjectCreate functionPrototype internalSlotsList)
  let F = [! __x0__]
  F.Call = ECMAScriptFunctionObjectDOTCall
  F.SourceText = sourceText
  F.FormalParameters = ParameterList
  F.ECMAScriptCode = Body
  if true let Strict = true else let Strict = false
  F.Strict = Strict
  if (= thisMode CONST_lexicalDASHthis) F.ThisMode = CONST_lexical else if (= Strict true) F.ThisMode = CONST_strict else F.ThisMode = CONST_global
  F.IsClassConstructor = false
  F.Environment = Scope
  app __x1__ = (GetActiveScriptOrModule)
  F.ScriptOrModule = __x1__
  F.Realm = REALM
  F.HomeObject = undefined
  access __x2__ = (ParameterList "ExpectedArgumentCount")
  let len = __x2__
  app __x3__ = (SetFunctionLength F len)
  [! __x3__]
  return F
}