digraph {
  node6268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6272 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6267 [shape=cds, label=<<font color="black">0:access __x0__ = (StatementList &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node6271 [shape=cds, label=<<font color="black">2:access __x1__ = (StatementListItem &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node6270 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6266 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6269 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node6265 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6271 -> node6272 [ color="black"]
  node6268 -> node6269 [ color="black"]
  node6269 -> node6270 [label=<<font color="black">true</font>> color="black"]
  node6269 -> node6271 [label=<<font color="black">false</font>> color="black"]
  node6267 -> node6268 [ color="black"]
  node6265 -> node6267 [ color="black"]
  node6270 -> node6271 [ color="black"]
  node6272 -> node6266 [ color="black"]
}
