{
  app key = (GetArgument argumentsList 0i)
  [0] app __x0__ = (ToString key)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [3] {}
  [0] let stringKey = __x0__
  [1] let __x1__ = GLOBAL_symbolRegistry
  [1] let __x2__ = 0i
  [1] while (< __x2__ __x1__.length) {
    let e = __x1__[__x2__]
    [2] app __x3__ = (SameValue e.Key stringKey)
    [2] if (= __x3__ true) {
      app __x4__ = (WrapCompletion e.Symbol)
      return __x4__
    } else [3] {}
    __x2__ = (+ __x2__ 1i)
  }
  [4] ??? "Let id:{newSymbol} be a new unique Symbol value whose [ [ Description ] ] value is id:{stringKey} ."
  [5] append (new Record("Key" -> stringKey, "Symbol" -> newSymbol)) -> GLOBAL_symbolRegistry
  [6] app __x5__ = (WrapCompletion newSymbol)
  [6] return __x5__
}