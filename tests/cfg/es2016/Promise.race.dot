digraph {
  node16022 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16003 [shape=diamond, label=<<font color="black">(= iterator.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16018 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16007 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16004 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterator = iterator.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16023 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16008 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15991 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16012 [shape=cds, label=<<font color="black">7:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node15998 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16001 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iterator = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16014 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node16009 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iterator</td></tr>
      <tr><td align="left">5:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; iterator, &quot;Done&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16006 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16021 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16002 [shape=diamond, label=<<font color="black">(is-completion iterator)</font>> color="black" fillcolor="white" style=filled]
  node16017 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node16013 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node15995 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node16011 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16016 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15994 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15999 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16019 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16000 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16010 [shape=cds, label=<<font color="black">6:app __x4__ = (PerformPromiseRace iteratorRecord promiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16025 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16015 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iterator result)</font>> color="black" fillcolor="white" style=filled]
  node16020 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15993 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16005 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iterator.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15992 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15996 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15997 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16018 -> node16019 [label=<<font color="black">true</font>> color="black"]
  node16018 -> node16020 [label=<<font color="black">false</font>> color="black"]
  node16023 -> node16024 [ color="black"]
  node16008 -> node16009 [ color="black"]
  node16006 -> node16007 [label=<<font color="black">true</font>> color="black"]
  node16006 -> node16008 [label=<<font color="black">false</font>> color="black"]
  node16005 -> node16006 [ color="black"]
  node16014 -> node16015 [label=<<font color="black">true</font>> color="black"]
  node16014 -> node16017 [label=<<font color="black">false</font>> color="black"]
  node16011 -> node16012 [ color="black"]
  node15991 -> node15993 [ color="black"]
  node16000 -> node16001 [ color="black"]
  node16010 -> node16011 [ color="black"]
  node16021 -> node16022 [label=<<font color="black">true</font>> color="black"]
  node16021 -> node16023 [label=<<font color="black">false</font>> color="black"]
  node15996 -> node15997 [label=<<font color="black">true</font>> color="black"]
  node15996 -> node15998 [label=<<font color="black">false</font>> color="black"]
  node15998 -> node15999 [ color="black"]
  node16025 -> node15992 [ color="black"]
  node16002 -> node16003 [label=<<font color="black">true</font>> color="black"]
  node16002 -> node16009 [label=<<font color="black">false</font>> color="black"]
  node16024 -> node16025 [ color="black"]
  node16019 -> node16024 [ color="black"]
  node16012 -> node16013 [ color="black"]
  node16015 -> node16016 [ color="black"]
  node15997 -> node15998 [ color="black"]
  node16020 -> node16021 [ color="black"]
  node15993 -> node15994 [ color="black"]
  node16001 -> node16002 [ color="black"]
  node15995 -> node15996 [ color="black"]
  node16016 -> node16017 [ color="black"]
  node16022 -> node16023 [ color="black"]
  node16007 -> node16008 [ color="black"]
  node16013 -> node16014 [label=<<font color="black">true</font>> color="black"]
  node16013 -> node16025 [label=<<font color="black">false</font>> color="black"]
  node16003 -> node16004 [label=<<font color="black">true</font>> color="black"]
  node16003 -> node16005 [label=<<font color="black">false</font>> color="black"]
  node15999 -> node16000 [ color="black"]
  node16017 -> node16018 [label=<<font color="black">true</font>> color="black"]
  node16017 -> node16024 [label=<<font color="black">false</font>> color="black"]
  node15994 -> node15995 [ color="black"]
  node16004 -> node16009 [ color="black"]
  node16009 -> node16010 [ color="black"]
}
