digraph {
  node15874 [shape=cds, label=<<font color="black">6:app __x2__ = (IsAbruptCompletion handlerResult)</font>> color="black" fillcolor="white" style=filled]
  node15866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = reaction.Capabilities</td></tr>
      <tr><td align="left">2:let handler = reaction.Handler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15878 [shape=cds, label=<<font color="black">9:app __x4__ = (Call promiseCapability.Resolve undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15873 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15867 [shape=diamond, label=<<font color="black">(= handler &quot;Identity&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15877 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let status = __x3__</td></tr>
      <tr><td align="left">8:??? &quot;NextJob Completion ( id:{status} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15862 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15876 [shape=cds, label=<<font color="black">7:app __x3__ = (Call promiseCapability.Reject undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15868 [shape=cds, label=<<font color="black">app __x0__ = (NormalCompletion argument)</font>> color="black" fillcolor="white" style=filled]
  node15871 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = (new Completion(&quot;Type&quot; -&gt; CONST_throw, &quot;Value&quot; -&gt; argument, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15875 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node15865 [shape=cds, label=<<font color="black">app argument = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let status = __x4__</td></tr>
      <tr><td align="left">10:??? &quot;NextJob Completion ( id:{status} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15872 [shape=cds, label=<<font color="black">app __x1__ = (Call handler undefined (new [argument]))</font>> color="black" fillcolor="white" style=filled]
  node15863 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15870 [shape=diamond, label=<<font color="black">(= handler &quot;Thrower&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15869 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15864 [shape=cds, label=<<font color="black">app reaction = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15866 -> node15867 [ color="black"]
  node15873 -> node15874 [ color="black"]
  node15872 -> node15873 [ color="black"]
  node15869 -> node15874 [ color="black"]
  node15876 -> node15877 [ color="black"]
  node15878 -> node15879 [ color="black"]
  node15874 -> node15875 [ color="black"]
  node15879 -> node15863 [ color="black"]
  node15864 -> node15865 [ color="black"]
  node15867 -> node15868 [label=<<font color="black">true</font>> color="black"]
  node15867 -> node15870 [label=<<font color="black">false</font>> color="black"]
  node15875 -> node15876 [label=<<font color="black">true</font>> color="black"]
  node15875 -> node15878 [label=<<font color="black">false</font>> color="black"]
  node15865 -> node15866 [ color="black"]
  node15868 -> node15869 [ color="black"]
  node15862 -> node15864 [ color="black"]
  node15877 -> node15878 [ color="black"]
  node15871 -> node15874 [ color="black"]
  node15870 -> node15871 [label=<<font color="black">true</font>> color="black"]
  node15870 -> node15872 [label=<<font color="black">false</font>> color="black"]
}
