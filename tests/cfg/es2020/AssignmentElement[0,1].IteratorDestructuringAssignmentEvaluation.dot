digraph {
  node6046 [shape=cds, label=<<font color="black">23:app __x14__ = (PutValue lref v)</font>> color="black" fillcolor="white" style=filled]
  node6009 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6021 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let value = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6032 [shape=cds, label=<<font color="black">15:app __x7__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node6043 [shape=cds, label=<<font color="black">22:access __x12__ = (nestedAssignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6028 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= value undefined))</font>> color="black" fillcolor="white" style=filled]
  node6033 [shape=cds, label=<<font color="black">15:access __x8__ = (Initializer &quot;NamedEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6026 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done true)</font>> color="black" fillcolor="white" style=filled]
  node6019 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6016 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6044 [shape=cds, label=<<font color="black">22:app __x13__ = (__x12__ v)</font>> color="black" fillcolor="white" style=filled]
  node6008 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node6012 [shape=cds, label=<<font color="black">4:app __x1__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node6007 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6040 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6035 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let v = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6042 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let nestedAssignmentPattern = (parse-syntax DestructuringAssignmentTarget &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6014 [shape=cds, label=<<font color="black">5:app __x2__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node6022 [shape=cds, label=<<font color="black">10:app __x4__ = (IsAbruptCompletion value)</font>> color="black" fillcolor="white" style=filled]
  node6031 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x5__ true) (= __x6__ true))</font>> color="black" fillcolor="white" style=filled]
  node6017 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6006 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6034 [shape=cds, label=<<font color="black">15:app __x9__ = (__x8__ __x7__)</font>> color="black" fillcolor="white" style=filled]
  node6039 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let v = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6010 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6025 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? value]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6020 [shape=cds, label=<<font color="black">9:app __x3__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node6015 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node6047 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:return [? __x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6011 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node6038 [shape=cds, label=<<font color="black">18:app __x11__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node6027 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let value = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6029 [shape=cds, label=<<font color="black">16:app __x5__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node6036 [shape=cds, label=<<font color="black">17:access __x10__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6037 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let defaultValue = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6041 [shape=diamond, label=<<font color="black">(|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))</font>> color="black" fillcolor="white" style=filled]
  node6013 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let next = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6030 [shape=cds, label=<<font color="black">16:access __x6__ = (DestructuringAssignmentTarget &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6023 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node6018 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node6045 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:return __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6014 -> node6015 [ color="black"]
  node6046 -> node6047 [ color="black"]
  node6031 -> node6032 [label=<<font color="black">true</font>> color="black"]
  node6031 -> node6036 [label=<<font color="black">false</font>> color="black"]
  node6016 -> node6017 [ color="black"]
  node6035 -> node6041 [ color="black"]
  node6008 -> node6009 [label=<<font color="black">true</font>> color="black"]
  node6008 -> node6011 [label=<<font color="black">false</font>> color="black"]
  node6033 -> node6034 [ color="black"]
  node6013 -> node6014 [ color="black"]
  node6032 -> node6033 [ color="black"]
  node6037 -> node6038 [ color="black"]
  node6034 -> node6035 [ color="black"]
  node6025 -> node6026 [ color="black"]
  node6036 -> node6037 [ color="black"]
  node6009 -> node6010 [ color="black"]
  node6010 -> node6011 [ color="black"]
  node6022 -> node6023 [ color="black"]
  node6019 -> node6026 [ color="black"]
  node6011 -> node6012 [label=<<font color="black">true</font>> color="black"]
  node6011 -> node6026 [label=<<font color="black">false</font>> color="black"]
  node6015 -> node6016 [label=<<font color="black">true</font>> color="black"]
  node6015 -> node6017 [label=<<font color="black">false</font>> color="black"]
  node6027 -> node6028 [ color="black"]
  node6038 -> node6039 [ color="black"]
  node6040 -> node6041 [ color="black"]
  node6042 -> node6043 [ color="black"]
  node6030 -> node6031 [ color="black"]
  node6012 -> node6013 [ color="black"]
  node6028 -> node6029 [label=<<font color="black">true</font>> color="black"]
  node6028 -> node6040 [label=<<font color="black">false</font>> color="black"]
  node6021 -> node6022 [ color="black"]
  node6039 -> node6041 [ color="black"]
  node6017 -> node6018 [ color="black"]
  node6024 -> node6025 [ color="black"]
  node6044 -> node6045 [ color="black"]
  node6041 -> node6042 [label=<<font color="black">true</font>> color="black"]
  node6041 -> node6046 [label=<<font color="black">false</font>> color="black"]
  node6023 -> node6024 [label=<<font color="black">true</font>> color="black"]
  node6023 -> node6025 [label=<<font color="black">false</font>> color="black"]
  node6006 -> node6008 [ color="black"]
  node6043 -> node6044 [ color="black"]
  node6018 -> node6019 [label=<<font color="black">true</font>> color="black"]
  node6018 -> node6020 [label=<<font color="black">false</font>> color="black"]
  node6045 -> node6046 [ color="black"]
  node6029 -> node6030 [ color="black"]
  node6026 -> node6027 [label=<<font color="black">true</font>> color="black"]
  node6026 -> node6028 [label=<<font color="black">false</font>> color="black"]
  node6020 -> node6021 [ color="black"]
  node6047 -> node6007 [ color="black"]
}
