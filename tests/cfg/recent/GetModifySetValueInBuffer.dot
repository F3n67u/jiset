digraph {
  node17594 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:??? &quot;Let id:{rawBytesRead} be a List of length id:{elementSize} whose elements are the sequence of id:{elementSize} bytes starting with id:{block} [ id:{byteIndex} ] .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17598 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17595 [shape=cds, label=<<font color="black">17:app __x3__ = (op rawBytesRead rawBytes)</font>> color="black" fillcolor="white" style=filled]
  node17587 [shape=diamond, label=<<font color="black">(= isLittleEndian absent)</font>> color="black" fillcolor="white" style=filled]
  node17586 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ false)</td></tr>
      <tr><td align="left">3:let block = arrayBuffer.ArrayBufferData</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17593 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let execution = GLOBAL_agent.CandidateExecution</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{eventList} be the [ [ EventList ] ] field of the element in id:{execution} . [ [ EventsRecords ] ] whose [ [ AgentSignifier ] ] is AgentSignifier ( ) .&quot;</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{rawBytesRead} be a List of length id:{elementSize} whose elements are nondeterministically chosen byte values .&quot;</td></tr>
      <tr><td align="left">12:let rmwEvent = (new ReadModifyWriteSharedMemory(&quot;Order&quot; -&gt; CONST_SeqCst, &quot;NoTear&quot; -&gt; true, &quot;Block&quot; -&gt; block, &quot;ByteIndex&quot; -&gt; byteIndex, &quot;ElementSize&quot; -&gt; elementSize, &quot;Payload&quot; -&gt; rawBytes, &quot;ModifyOp&quot; -&gt; op))</td></tr>
      <tr><td align="left">13:append rmwEvent -&gt; eventList</td></tr>
      <tr><td align="left">14:append (new ChosenValueRecord(&quot;Event&quot; -&gt; rmwEvent, &quot;ChosenValue&quot; -&gt; rawBytesRead)) -&gt; execution.ChosenValues</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17585 [shape=cds, label=<<font color="black">0:app __x0__ = (IsDetachedBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17588 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">isLittleEndian = GLOBAL_agent.LittleEndian</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17591 [shape=cds, label=<<font color="black">15:app __x2__ = (IsSharedArrayBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17596 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let rawBytesModified = __x3__</td></tr>
      <tr><td align="left">18:??? &quot;Store the individual bytes of id:{rawBytesModified} into id:{block} , starting at id:{block} [ id:{byteIndex} ] .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17590 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rawBytes = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17583 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17584 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17589 [shape=cds, label=<<font color="black">6:app __x1__ = (NumericToRawBytes type value isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17592 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node17597 [shape=cds, label=<<font color="black">19:app __x4__ = (RawBytesToNumeric type rawBytesRead isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17597 -> node17598 [ color="black"]
  node17595 -> node17596 [ color="black"]
  node17586 -> node17587 [ color="black"]
  node17585 -> node17586 [ color="black"]
  node17588 -> node17589 [ color="black"]
  node17589 -> node17590 [ color="black"]
  node17598 -> node17584 [ color="black"]
  node17593 -> node17597 [ color="black"]
  node17594 -> node17595 [ color="black"]
  node17587 -> node17588 [label=<<font color="black">true</font>> color="black"]
  node17587 -> node17589 [label=<<font color="black">false</font>> color="black"]
  node17596 -> node17597 [ color="black"]
  node17583 -> node17585 [ color="black"]
  node17590 -> node17591 [ color="black"]
  node17591 -> node17592 [ color="black"]
  node17592 -> node17593 [label=<<font color="black">true</font>> color="black"]
  node17592 -> node17594 [label=<<font color="black">false</font>> color="black"]
}
