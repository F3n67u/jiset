digraph {
  node5 [shape=cds, label=<<font color="black">3:access __x1__ = (script &quot;VarDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node84 [shape=diamond, label=<<font color="black">(&lt; __x36__ __x35__.length)</font>> color="black" fillcolor="white" style=filled]
  node65 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x25__[__x26__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node77 [shape=cds, label=<<font color="black">44:access __x32__ = (f &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node66 [shape=cds, label=<<font color="black">41:access __x27__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node87 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">48:[? __x37__]</td></tr>
      <tr><td align="left">__x36__ = (+ __x36__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node83 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:let __x35__ = declaredVarNames</td></tr>
      <tr><td align="left">47:let __x36__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node69 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:[? __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node88 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node56 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x19__ = (+ __x19__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node42 [shape=diamond, label=<<font color="black">(&lt; __x16__ __x15__.length)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=diamond, label=<<font color="black">(= __x9__ true)</font>> color="black" fillcolor="white" style=filled]
  node37 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let fnDefinable = [? __x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node52 [shape=diamond, label=<<font color="black">(= vnDefinable false)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let __x7__ = varNames</td></tr>
      <tr><td align="left">9:let __x8__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node46 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let __x18__ = __x17__</td></tr>
      <tr><td align="left">27:let __x19__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node57 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x16__ = (+ __x16__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node78 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">44:let fn = __x32__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=diamond, label=<<font color="black">(&lt; 0i __x12__)</font>> color="black" fillcolor="white" style=filled]
  node61 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x22__[__x23__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node74 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let __x30__ = functionsToInitialize</td></tr>
      <tr><td align="left">43:let __x31__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let varNames = __x1__</td></tr>
      <tr><td align="left">4:let __x2__ = lexNames</td></tr>
      <tr><td align="left">4:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node60 [shape=diamond, label=<<font color="black">(&lt; __x23__ __x22__.length)</font>> color="black" fillcolor="white" style=filled]
  node85 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let vn = __x35__[__x36__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node70 [shape=cds, label=<<font color="black">42:app __x29__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node21 [shape=diamond, label=<<font color="black">(&lt; __x8__ __x7__.length)</font>> color="black" fillcolor="white" style=filled]
  node33 [shape=cds, label=<<font color="black">18:access __x13__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let varDeclarations = __x10__</td></tr>
      <tr><td align="left">12:let functionsToInitialize = (new [])</td></tr>
      <tr><td align="left">13:let declaredFunctionNames = (new [])</td></tr>
      <tr><td align="left">14:let __x11__ = varDeclarations</td></tr>
      <tr><td align="left">14:let __x12__ = __x11__.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node38 [shape=diamond, label=<<font color="black">(= fnDefinable false)</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=cds, label=<<font color="black">5:app __x4__ = (envRec.HasVarDeclaration envRec name)</font>> color="black" fillcolor="white" style=filled]
  node53 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">25:let __x15__ = varDeclarations</td></tr>
      <tr><td align="left">25:let __x16__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node73 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x23__ = (+ __x23__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let envRec = env.EnvironmentRecord</td></tr>
      <tr><td align="left">1:assert (is-instance-of envRec GlobalEnvironmentRecord)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node45 [shape=cds, label=<<font color="black">27:access __x17__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node64 [shape=diamond, label=<<font color="black">(&lt; __x26__ __x25__.length)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=diamond, label=<<font color="black">(= hasRestrictedGlobal true)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:assert (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node34 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let fn = __x13__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x7__[__x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node44 [shape=diamond, label=<<font color="black">(|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier))</font>> color="black" fillcolor="white" style=filled]
  node59 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let lexDeclarations = __x21__</td></tr>
      <tr><td align="left">36:let __x22__ = lexDeclarations</td></tr>
      <tr><td align="left">36:let __x23__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=cds, label=<<font color="black">11:access __x10__ = (script &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node71 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">42:[? __x29__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=cds, label=<<font color="black">6:app __x5__ = (envRec.HasLexicalDeclaration envRec name)</font>> color="black" fillcolor="white" style=filled]
  node54 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames vn))</font>> color="black" fillcolor="white" style=filled]
  node49 [shape=diamond, label=<<font color="black">(! (contains declaredFunctionNames vn))</font>> color="black" fillcolor="white" style=filled]
  node86 [shape=cds, label=<<font color="black">48:app __x37__ = (envRec.CreateGlobalVarBinding envRec vn false)</font>> color="black" fillcolor="white" style=filled]
  node81 [shape=cds, label=<<font color="black">46:app __x34__ = (envRec.CreateGlobalFunctionBinding envRec fn fo false)</font>> color="black" fillcolor="white" style=filled]
  node76 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let f = __x30__[__x31__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node39 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">2:access __x0__ = (script &quot;LexicallyDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node80 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:let fo = __x33__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node35 [shape=diamond, label=<<font color="black">(! (contains declaredFunctionNames fn))</font>> color="black" fillcolor="white" style=filled]
  node48 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let vn = __x18__[__x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node63 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:let __x25__ = __x24__</td></tr>
      <tr><td align="left">38:let __x26__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node50 [shape=cds, label=<<font color="black">29:app __x20__ = (envRec.CanDeclareGlobalVar envRec vn)</font>> color="black" fillcolor="white" style=filled]
  node67 [shape=diamond, label=<<font color="black">(= __x27__ true)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let hasRestrictedGlobal = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node31 [shape=diamond, label=<<font color="black">(! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier)))</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node72 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x26__ = (+ __x26__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node43 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x15__[__x16__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node40 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:append fn -&gt; declaredFunctionNames</td></tr>
      <tr><td align="left">23:prepend d -&gt; functionsToInitialize</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x8__ = (+ __x8__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node55 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append vn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=cds, label=<<font color="black">10:app __x9__ = (envRec.HasLexicalDeclaration envRec name)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x2__[__x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node75 [shape=diamond, label=<<font color="black">(&lt; __x31__ __x30__.length)</font>> color="black" fillcolor="white" style=filled]
  node58 [shape=cds, label=<<font color="black">35:access __x21__ = (script &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node82 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:[? __x34__]</td></tr>
      <tr><td align="left">__x31__ = (+ __x31__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node36 [shape=cds, label=<<font color="black">20:app __x14__ = (envRec.CanDeclareGlobalFunction envRec fn)</font>> color="black" fillcolor="white" style=filled]
  node30 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x12__ = (- __x12__ 1i)</td></tr>
      <tr><td align="left">let d = __x11__[__x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node51 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let vnDefinable = [? __x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let lexNames = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node79 [shape=cds, label=<<font color="black">45:access __x33__ = (f &quot;InstantiateFunctionObject&quot; env)</font>> color="black" fillcolor="white" style=filled]
  node47 [shape=diamond, label=<<font color="black">(&lt; __x19__ __x18__.length)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">7:app __x6__ = (envRec.HasRestrictedGlobalProperty envRec name)</font>> color="black" fillcolor="white" style=filled]
  node68 [shape=cds, label=<<font color="black">40:app __x28__ = (envRec.CreateImmutableBinding envRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node62 [shape=cds, label=<<font color="black">38:access __x24__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node71 -> node72 [ color="black"]
  node83 -> node84 [ color="black"]
  node81 -> node82 [ color="black"]
  node74 -> node75 [ color="black"]
  node5 -> node6 [ color="black"]
  node53 -> node54 [ color="black"]
  node3 -> node4 [ color="black"]
  node42 -> node43 [label=<<font color="black">true</font>> color="black"]
  node42 -> node58 [label=<<font color="black">false</font>> color="black"]
  node63 -> node64 [ color="black"]
  node28 -> node29 [ color="black"]
  node31 -> node32 [label=<<font color="black">true</font>> color="black"]
  node31 -> node29 [label=<<font color="black">false</font>> color="black"]
  node61 -> node62 [ color="black"]
  node38 -> node39 [label=<<font color="black">true</font>> color="black"]
  node38 -> node40 [label=<<font color="black">false</font>> color="black"]
  node39 -> node40 [ color="black"]
  node34 -> node35 [ color="black"]
  node18 -> node19 [ color="black"]
  node66 -> node67 [ color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node12 [label=<<font color="black">false</font>> color="black"]
  node56 -> node47 [ color="black"]
  node13 -> node14 [label=<<font color="black">true</font>> color="black"]
  node13 -> node15 [label=<<font color="black">false</font>> color="black"]
  node57 -> node42 [ color="black"]
  node47 -> node48 [label=<<font color="black">true</font>> color="black"]
  node47 -> node57 [label=<<font color="black">false</font>> color="black"]
  node54 -> node55 [label=<<font color="black">true</font>> color="black"]
  node54 -> node56 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node62 -> node63 [ color="black"]
  node15 -> node16 [ color="black"]
  node55 -> node56 [ color="black"]
  node11 -> node12 [ color="black"]
  node52 -> node53 [label=<<font color="black">true</font>> color="black"]
  node52 -> node54 [label=<<font color="black">false</font>> color="black"]
  node79 -> node80 [ color="black"]
  node12 -> node13 [ color="black"]
  node19 -> node7 [ color="black"]
  node45 -> node46 [ color="black"]
  node0 -> node2 [ color="black"]
  node36 -> node37 [ color="black"]
  node22 -> node23 [ color="black"]
  node70 -> node71 [ color="black"]
  node6 -> node7 [ color="black"]
  node76 -> node77 [ color="black"]
  node43 -> node44 [ color="black"]
  node9 -> node10 [ color="black"]
  node26 -> node21 [ color="black"]
  node27 -> node28 [ color="black"]
  node37 -> node38 [ color="black"]
  node68 -> node69 [ color="black"]
  node49 -> node50 [label=<<font color="black">true</font>> color="black"]
  node49 -> node56 [label=<<font color="black">false</font>> color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
  node60 -> node61 [label=<<font color="black">true</font>> color="black"]
  node60 -> node74 [label=<<font color="black">false</font>> color="black"]
  node40 -> node29 [ color="black"]
  node86 -> node87 [ color="black"]
  node30 -> node31 [ color="black"]
  node82 -> node75 [ color="black"]
  node7 -> node8 [label=<<font color="black">true</font>> color="black"]
  node7 -> node20 [label=<<font color="black">false</font>> color="black"]
  node77 -> node78 [ color="black"]
  node69 -> node72 [ color="black"]
  node44 -> node45 [label=<<font color="black">true</font>> color="black"]
  node44 -> node57 [label=<<font color="black">false</font>> color="black"]
  node78 -> node79 [ color="black"]
  node73 -> node60 [ color="black"]
  node35 -> node36 [label=<<font color="black">true</font>> color="black"]
  node35 -> node29 [label=<<font color="black">false</font>> color="black"]
  node29 -> node30 [label=<<font color="black">true</font>> color="black"]
  node29 -> node41 [label=<<font color="black">false</font>> color="black"]
  node88 -> node1 [ color="black"]
  node72 -> node64 [ color="black"]
  node50 -> node51 [ color="black"]
  node4 -> node5 [ color="black"]
  node51 -> node52 [ color="black"]
  node25 -> node26 [ color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [label=<<font color="black">true</font>> color="black"]
  node21 -> node27 [label=<<font color="black">false</font>> color="black"]
  node59 -> node60 [ color="black"]
  node67 -> node68 [label=<<font color="black">true</font>> color="black"]
  node67 -> node70 [label=<<font color="black">false</font>> color="black"]
  node20 -> node21 [ color="black"]
  node87 -> node84 [ color="black"]
  node75 -> node76 [label=<<font color="black">true</font>> color="black"]
  node75 -> node83 [label=<<font color="black">false</font>> color="black"]
  node84 -> node85 [label=<<font color="black">true</font>> color="black"]
  node84 -> node88 [label=<<font color="black">false</font>> color="black"]
  node24 -> node25 [label=<<font color="black">true</font>> color="black"]
  node24 -> node26 [label=<<font color="black">false</font>> color="black"]
  node16 -> node17 [ color="black"]
  node46 -> node47 [ color="black"]
  node58 -> node59 [ color="black"]
  node65 -> node66 [ color="black"]
  node48 -> node49 [ color="black"]
  node32 -> node33 [ color="black"]
  node85 -> node86 [ color="black"]
  node80 -> node81 [ color="black"]
  node33 -> node34 [ color="black"]
  node17 -> node18 [label=<<font color="black">true</font>> color="black"]
  node17 -> node19 [label=<<font color="black">false</font>> color="black"]
  node64 -> node65 [label=<<font color="black">true</font>> color="black"]
  node64 -> node73 [label=<<font color="black">false</font>> color="black"]
  node41 -> node42 [ color="black"]
}
