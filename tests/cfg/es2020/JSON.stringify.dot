digraph {
  node17715 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node17751 [shape=cds, label=<<font color="black">app __x16__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node17723 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white" style=filled]
  node17747 [shape=diamond, label=<<font color="black">(= __x13__ Number)</font>> color="black" fillcolor="white" style=filled]
  node17719 [shape=diamond, label=<<font color="black">(= isArray true)</font>> color="black" fillcolor="white" style=filled]
  node17706 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17731 [shape=diamond, label=<<font color="black">(= __x7__ Number)</font>> color="black" fillcolor="white" style=filled]
  node17736 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If id:{v} has a [ [ StringData ] ] or [ [ NumberData ] ] internal slot , set id:{item} to ? ToString ( id:{v} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17717 [shape=cds, label=<<font color="black">7:app __x2__ = (IsArray replacer)</font>> color="black" fillcolor="white" style=filled]
  node17714 [shape=cds, label=<<font color="black">6:app __x1__ = (IsCallable replacer)</font>> color="black" fillcolor="white" style=filled]
  node17759 [shape=cds, label=<<font color="black">37:app __x19__ = (SerializeJSONProperty state &quot;&quot; wrapper)</font>> color="black" fillcolor="white" style=filled]
  node17734 [shape=cds, label=<<font color="black">app __x9__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node17710 [shape=cds, label=<<font color="black">app space = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17724 [shape=cds, label=<<font color="black">13:app __x4__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node17756 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:let wrapper = __x17__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17739 [shape=diamond, label=<<font color="black">(= __x10__ Object)</font>> color="black" fillcolor="white" style=filled]
  node17727 [shape=cds, label=<<font color="black">17:app __x6__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node17755 [shape=cds, label=<<font color="black">34:app __x17__ = (OrdinaryObjectCreate INTRINSIC_Object_prototype)</font>> color="black" fillcolor="white" style=filled]
  node17738 [shape=cds, label=<<font color="black">22:app __x10__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node17726 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let v = [? __x5__]</td></tr>
      <tr><td align="left">14:let item = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17741 [shape=cds, label=<<font color="black">24:app __x11__ = (ToNumber space)</font>> color="black" fillcolor="white" style=filled]
  node17709 [shape=cds, label=<<font color="black">app replacer = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17742 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:space = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17735 [shape=diamond, label=<<font color="black">(= __x9__ Object)</font>> color="black" fillcolor="white" style=filled]
  node17720 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:PropertyList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">item = v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17752 [shape=diamond, label=<<font color="black">(= __x16__ String)</font>> color="black" fillcolor="white" style=filled]
  node17716 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">ReplacerFunction = replacer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17748 [shape=cds, label=<<font color="black">28:app __x14__ = (ToInteger space)</font>> color="black" fillcolor="white" style=filled]
  node17722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let len = [? __x3__]</td></tr>
      <tr><td align="left">11:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17737 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;If id:{item} is not value:{undefined} and id:{item} is not currently an element of id:{PropertyList} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">21:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17744 [shape=cds, label=<<font color="black">26:app __x12__ = (ToString space)</font>> color="black" fillcolor="white" style=filled]
  node17749 [shape=cds, label=<<font color="black">28:app __x15__ = (min 10i [! __x14__])</font>> color="black" fillcolor="white" style=filled]
  node17712 [shape=cds, label=<<font color="black">3:app __x0__ = (Type replacer)</font>> color="black" fillcolor="white" style=filled]
  node17754 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let gap = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17725 [shape=cds, label=<<font color="black">13:app __x5__ = (Get replacer [! __x4__])</font>> color="black" fillcolor="white" style=filled]
  node17708 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17758 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x18__]</td></tr>
      <tr><td align="left">36:let state = (new Record(&quot;ReplacerFunction&quot; -&gt; ReplacerFunction, &quot;Stack&quot; -&gt; stack, &quot;Indent&quot; -&gt; indent, &quot;Gap&quot; -&gt; gap, &quot;PropertyList&quot; -&gt; PropertyList))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17713 [shape=diamond, label=<<font color="black">(= __x0__ Object)</font>> color="black" fillcolor="white" style=filled]
  node17745 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:space = [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17730 [shape=cds, label=<<font color="black">app __x7__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node17732 [shape=cds, label=<<font color="black">app __x8__ = (ToString v)</font>> color="black" fillcolor="white" style=filled]
  node17750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:space = __x15__</td></tr>
      <tr><td align="left">29:??? &quot;If id:{space} &lt; 1 , let id:{gap} be the empty String ; otherwise let id:{gap} be the String value containing id:{space} occurrences of the code unit 0x0020 ( SPACE ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17721 [shape=cds, label=<<font color="black">10:app __x3__ = (LengthOfArrayLike replacer)</font>> color="black" fillcolor="white" style=filled]
  node17760 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:return [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17743 [shape=diamond, label=<<font color="black">(! (= space.StringData absent))</font>> color="black" fillcolor="white" style=filled]
  node17733 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">item = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17728 [shape=diamond, label=<<font color="black">(= __x6__ String)</font>> color="black" fillcolor="white" style=filled]
  node17753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If the length of id:{space} is 10 or less , let id:{gap} be id:{space} ; otherwise let id:{gap} be the String value consisting of the first 10 code units of id:{space} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17740 [shape=diamond, label=<<font color="black">(! (= space.NumberData absent))</font>> color="black" fillcolor="white" style=filled]
  node17711 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let stack = (new [])</td></tr>
      <tr><td align="left">1:let indent = &quot;&quot;</td></tr>
      <tr><td align="left">2:let PropertyList = undefined</td></tr>
      <tr><td align="left">2:let ReplacerFunction = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17757 [shape=cds, label=<<font color="black">35:app __x18__ = (CreateDataPropertyOrThrow wrapper &quot;&quot; value)</font>> color="black" fillcolor="white" style=filled]
  node17707 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17718 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let isArray = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17746 [shape=cds, label=<<font color="black">32:app __x13__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node17746 -> node17747 [ color="black"]
  node17759 -> node17760 [ color="black"]
  node17731 -> node17732 [label=<<font color="black">true</font>> color="black"]
  node17731 -> node17734 [label=<<font color="black">false</font>> color="black"]
  node17734 -> node17735 [ color="black"]
  node17733 -> node17737 [ color="black"]
  node17714 -> node17715 [ color="black"]
  node17708 -> node17709 [ color="black"]
  node17757 -> node17758 [ color="black"]
  node17730 -> node17731 [ color="black"]
  node17727 -> node17728 [ color="black"]
  node17728 -> node17729 [label=<<font color="black">true</font>> color="black"]
  node17728 -> node17730 [label=<<font color="black">false</font>> color="black"]
  node17726 -> node17727 [ color="black"]
  node17738 -> node17739 [ color="black"]
  node17742 -> node17746 [ color="black"]
  node17716 -> node17738 [ color="black"]
  node17748 -> node17749 [ color="black"]
  node17722 -> node17723 [ color="black"]
  node17718 -> node17719 [ color="black"]
  node17711 -> node17712 [ color="black"]
  node17709 -> node17710 [ color="black"]
  node17751 -> node17752 [ color="black"]
  node17719 -> node17720 [label=<<font color="black">true</font>> color="black"]
  node17719 -> node17738 [label=<<font color="black">false</font>> color="black"]
  node17743 -> node17744 [label=<<font color="black">true</font>> color="black"]
  node17743 -> node17746 [label=<<font color="black">false</font>> color="black"]
  node17750 -> node17755 [ color="black"]
  node17752 -> node17753 [label=<<font color="black">true</font>> color="black"]
  node17752 -> node17754 [label=<<font color="black">false</font>> color="black"]
  node17755 -> node17756 [ color="black"]
  node17756 -> node17757 [ color="black"]
  node17745 -> node17746 [ color="black"]
  node17741 -> node17742 [ color="black"]
  node17753 -> node17755 [ color="black"]
  node17758 -> node17759 [ color="black"]
  node17717 -> node17718 [ color="black"]
  node17754 -> node17755 [ color="black"]
  node17725 -> node17726 [ color="black"]
  node17744 -> node17745 [ color="black"]
  node17712 -> node17713 [ color="black"]
  node17740 -> node17741 [label=<<font color="black">true</font>> color="black"]
  node17740 -> node17743 [label=<<font color="black">false</font>> color="black"]
  node17724 -> node17725 [ color="black"]
  node17715 -> node17716 [label=<<font color="black">true</font>> color="black"]
  node17715 -> node17717 [label=<<font color="black">false</font>> color="black"]
  node17749 -> node17750 [ color="black"]
  node17706 -> node17708 [ color="black"]
  node17729 -> node17737 [ color="black"]
  node17721 -> node17722 [ color="black"]
  node17723 -> node17724 [label=<<font color="black">true</font>> color="black"]
  node17723 -> node17738 [label=<<font color="black">false</font>> color="black"]
  node17747 -> node17748 [label=<<font color="black">true</font>> color="black"]
  node17747 -> node17751 [label=<<font color="black">false</font>> color="black"]
  node17732 -> node17733 [ color="black"]
  node17760 -> node17707 [ color="black"]
  node17713 -> node17714 [label=<<font color="black">true</font>> color="black"]
  node17713 -> node17738 [label=<<font color="black">false</font>> color="black"]
  node17710 -> node17711 [ color="black"]
  node17736 -> node17737 [ color="black"]
  node17720 -> node17721 [ color="black"]
  node17737 -> node17723 [ color="black"]
  node17739 -> node17740 [label=<<font color="black">true</font>> color="black"]
  node17739 -> node17746 [label=<<font color="black">false</font>> color="black"]
  node17735 -> node17736 [label=<<font color="black">true</font>> color="black"]
  node17735 -> node17737 [label=<<font color="black">false</font>> color="black"]
}
