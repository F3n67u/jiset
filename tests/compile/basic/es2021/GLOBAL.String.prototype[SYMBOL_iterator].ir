{
  app __x0__ = (RequireObjectCoercible this)
  let O = [? __x0__]
  app __x1__ = (ToString O)
  let s = [? __x1__]
  let closure = ()[s] => {
    let position = 0i
    let len = s.length
    while (< position len) {
      app __x2__ = (CodePointAt s position)
      let cp = [! __x2__]
      let nextIndex = (+ position cp.CodeUnitCount)
      let __x3__ = ""
      let __x4__ = position
      while (< __x4__ (+ nextIndex 1i)) {
        access __x5__ = (s __x4__)
        __x3__ = (+ __x3__ __x5__)
        __x4__ = (+ __x4__ 1i)
      }
      let resultString = __x3__
      position = nextIndex
      app __x6__ = (Yield resultString)
      [? __x6__]
    }
    return undefined
  }
  app __x7__ = (CreateIteratorFromClosure closure "%StringIteratorPrototype%" INTRINSIC_StringIteratorPrototype)
  return [! __x7__]
}