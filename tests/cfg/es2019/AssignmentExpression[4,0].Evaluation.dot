digraph {
  node5120 [shape=cds, label=<<font color="black">4:app __x3__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5123 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let rval = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5130 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let assignmentPattern = (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5127 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rval = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5135 [shape=cds, label=<<font color="black">13:access __x11__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5137 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x12__]</td></tr>
      <tr><td align="left">14:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5113 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5134 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let rval = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5121 [shape=cds, label=<<font color="black">4:access __x4__ = (AssignmentExpression &quot;NamedEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5118 [shape=cds, label=<<font color="black">5:access __x2__ = (LeftHandSideExpression &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5114 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5133 [shape=cds, label=<<font color="black">12:app __x10__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rref = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5132 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rref = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5129 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x8__]</td></tr>
      <tr><td align="left">9:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5116 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5136 [shape=cds, label=<<font color="black">13:app __x12__ = (__x11__ rval)</font>> color="black" fillcolor="white" style=filled]
  node5131 [shape=cds, label=<<font color="black">11:access __x9__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5117 [shape=cds, label=<<font color="black">5:app __x1__ = (IsAnonymousFunctionDefinition AssignmentExpression)</font>> color="black" fillcolor="white" style=filled]
  node5122 [shape=cds, label=<<font color="black">4:app __x5__ = (__x4__ __x3__)</font>> color="black" fillcolor="white" style=filled]
  node5112 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5126 [shape=cds, label=<<font color="black">7:app __x7__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5115 [shape=cds, label=<<font color="black">1:access __x0__ = (LeftHandSideExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5124 [shape=cds, label=<<font color="black">6:access __x6__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5119 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x1__ true) (= __x2__ true))</font>> color="black" fillcolor="white" style=filled]
  node5128 [shape=cds, label=<<font color="black">8:app __x8__ = (PutValue lref rval)</font>> color="black" fillcolor="white" style=filled]
  node5123 -> node5128 [ color="black"]
  node5131 -> node5132 [ color="black"]
  node5130 -> node5131 [ color="black"]
  node5120 -> node5121 [ color="black"]
  node5135 -> node5136 [ color="black"]
  node5125 -> node5126 [ color="black"]
  node5116 -> node5117 [ color="black"]
  node5112 -> node5114 [ color="black"]
  node5133 -> node5134 [ color="black"]
  node5127 -> node5128 [ color="black"]
  node5136 -> node5137 [ color="black"]
  node5134 -> node5135 [ color="black"]
  node5124 -> node5125 [ color="black"]
  node5121 -> node5122 [ color="black"]
  node5132 -> node5133 [ color="black"]
  node5118 -> node5119 [ color="black"]
  node5128 -> node5129 [ color="black"]
  node5114 -> node5115 [label=<<font color="black">true</font>> color="black"]
  node5114 -> node5130 [label=<<font color="black">false</font>> color="black"]
  node5122 -> node5123 [ color="black"]
  node5126 -> node5127 [ color="black"]
  node5119 -> node5120 [label=<<font color="black">true</font>> color="black"]
  node5119 -> node5124 [label=<<font color="black">false</font>> color="black"]
  node5137 -> node5113 [ color="black"]
  node5117 -> node5118 [ color="black"]
  node5129 -> node5130 [ color="black"]
  node5115 -> node5116 [ color="black"]
}
