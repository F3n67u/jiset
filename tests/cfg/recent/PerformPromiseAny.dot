digraph {
  node19204 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node19213 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19226 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let rejectElement = [! __x10__]</td></tr>
      <tr><td align="left">24:rejectElement.AlreadyCalled = false</td></tr>
      <tr><td align="left">25:rejectElement.Index = index</td></tr>
      <tr><td align="left">26:rejectElement.Errors = errors</td></tr>
      <tr><td align="left">27:rejectElement.Capability = resultCapability</td></tr>
      <tr><td align="left">28:rejectElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">29:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19216 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19214 [shape=cds, label=<<font color="black">15:app __x6__ = (ThrowCompletion error)</font>> color="black" fillcolor="white" style=filled]
  node19203 [shape=cds, label=<<font color="black">7:app __x3__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node19202 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19208 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19228 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:[? __x11__]</td></tr>
      <tr><td align="left">31:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19220 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node19219 [shape=cds, label=<<font color="black">18:app __x8__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node19209 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node19223 [shape=cds, label=<<font color="black">21:app __x9__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node19197 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= [! __x0__] true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19206 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19201 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node19194 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19218 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let nextValue = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19210 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:??? &quot;Let id:{error} be a newly created code:{AggregateError} object .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19195 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19222 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? nextValue]</td></tr>
      <tr><td align="left">20:append undefined -&gt; errors</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19198 [shape=cds, label=<<font color="black">1:app __x1__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node19227 [shape=cds, label=<<font color="black">30:app __x11__ = (Invoke nextPromise &quot;then&quot; (new [resultCapability.Resolve, rejectElement]))</font>> color="black" fillcolor="white" style=filled]
  node19217 [shape=cds, label=<<font color="black">17:app __x7__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node19215 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19221 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19211 [shape=cds, label=<<font color="black">14:app __x4__ = (CreateArrayFromList errors)</font>> color="black" fillcolor="white" style=filled]
  node19199 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= [! __x1__] true)</td></tr>
      <tr><td align="left">2:let errors = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19224 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let nextPromise = [? __x9__]</td></tr>
      <tr><td align="left">22:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.any-reject-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19196 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node19225 [shape=cds, label=<<font color="black">23:app __x10__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Errors&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node19205 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19207 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node19212 [shape=cds, label=<<font color="black">14:app __x5__ = (DefinePropertyOrThrow error &quot;errors&quot; (new PropertyDescriptor(&quot;Configurable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Writable&quot; -&gt; true, &quot;Value&quot; -&gt; [! __x4__])))</font>> color="black" fillcolor="white" style=filled]
  node19200 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node19219 -> node19220 [ color="black"]
  node19223 -> node19224 [ color="black"]
  node19199 -> node19200 [ color="black"]
  node19209 -> node19210 [label=<<font color="black">true</font>> color="black"]
  node19209 -> node19216 [label=<<font color="black">false</font>> color="black"]
  node19203 -> node19204 [ color="black"]
  node19215 -> node19216 [ color="black"]
  node19227 -> node19228 [ color="black"]
  node19226 -> node19227 [ color="black"]
  node19194 -> node19196 [ color="black"]
  node19225 -> node19226 [ color="black"]
  node19210 -> node19211 [ color="black"]
  node19221 -> node19222 [ color="black"]
  node19220 -> node19221 [label=<<font color="black">true</font>> color="black"]
  node19220 -> node19222 [label=<<font color="black">false</font>> color="black"]
  node19196 -> node19197 [ color="black"]
  node19206 -> node19207 [ color="black"]
  node19202 -> node19203 [ color="black"]
  node19228 -> node19200 [ color="black"]
  node19212 -> node19213 [ color="black"]
  node19217 -> node19218 [ color="black"]
  node19207 -> node19208 [label=<<font color="black">true</font>> color="black"]
  node19207 -> node19217 [label=<<font color="black">false</font>> color="black"]
  node19218 -> node19219 [ color="black"]
  node19224 -> node19225 [ color="black"]
  node19213 -> node19214 [ color="black"]
  node19200 -> node19201 [label=<<font color="black">true</font>> color="black"]
  node19200 -> node19195 [label=<<font color="black">false</font>> color="black"]
  node19205 -> node19206 [ color="black"]
  node19208 -> node19209 [ color="black"]
  node19204 -> node19205 [label=<<font color="black">true</font>> color="black"]
  node19204 -> node19206 [label=<<font color="black">false</font>> color="black"]
  node19198 -> node19199 [ color="black"]
  node19211 -> node19212 [ color="black"]
  node19216 -> node19217 [ color="black"]
  node19214 -> node19215 [ color="black"]
  node19197 -> node19198 [ color="black"]
  node19222 -> node19223 [ color="black"]
  node19201 -> node19202 [ color="black"]
}
