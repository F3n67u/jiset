digraph {
  node17788 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17791 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17798 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? __x2__]</td></tr>
      <tr><td align="left">4:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17793 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17795 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node17789 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17796 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17790 [shape=cds, label=<<font color="black">app r = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17797 [shape=cds, label=<<font color="black">3:app __x2__ = (Call promiseCapability.Reject undefined (new [r]))</font>> color="black" fillcolor="white" style=filled]
  node17792 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17793 -> node17794 [label=<<font color="black">true</font>> color="black"]
  node17793 -> node17795 [label=<<font color="black">false</font>> color="black"]
  node17797 -> node17798 [ color="black"]
  node17791 -> node17792 [ color="black"]
  node17790 -> node17791 [ color="black"]
  node17796 -> node17797 [ color="black"]
  node17798 -> node17789 [ color="black"]
  node17788 -> node17790 [ color="black"]
  node17792 -> node17793 [ color="black"]
  node17794 -> node17795 [ color="black"]
  node17795 -> node17796 [ color="black"]
}
