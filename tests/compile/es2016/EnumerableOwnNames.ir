{
  [0] app __x0__ = (Type O)
  [0] assert (= __x0__ Object)
  [1] app __x1__ = (O.OwnPropertyKeys O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [8] {}
  [1] let ownKeys = __x1__
  [2] let names = (new [])
  [3] let __x2__ = ownKeys
  [3] let __x3__ = 0i
  [3] while (< __x3__ __x2__.length) {
    let key = __x2__[__x3__]
    [4] app __x4__ = (Type key)
    [4] if (= __x4__ String) {
      [5] app __x5__ = (O.GetOwnProperty O key)
      [5] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [8] {}
      [5] let desc = __x5__
      [6] if (! (= desc undefined)) if (= desc.Enumerable true) append key -> names else [8] {} else [8] {}
    } else [8] {}
    __x3__ = (+ __x3__ 1i)
  }
  [9] app __x6__ = (WrapCompletion names)
  [9] return __x6__
}