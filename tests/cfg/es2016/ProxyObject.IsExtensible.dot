digraph {
  node2676 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2686 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2682 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;isExtensible&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2691 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let targetResult = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2695 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return booleanTrapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2693 [shape=diamond, label=<<font color="black">(= __x6__ false)</font>> color="black" fillcolor="white" style=filled]
  node2684 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2688 [shape=cds, label=<<font color="black">7:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node2675 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2680 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2687 [shape=cds, label=<<font color="black">7:app __x3__ = (Call trap handler (new [target]))</font>> color="black" fillcolor="white" style=filled]
  node2690 [shape=cds, label=<<font color="black">8:app __x5__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node2685 [shape=cds, label=<<font color="black">6:app __x2__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node2692 [shape=cds, label=<<font color="black">9:app __x6__ = (SameValue booleanTrapResult targetResult)</font>> color="black" fillcolor="white" style=filled]
  node2694 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2678 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2689 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let booleanTrapResult = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2694 -> node2695 [ color="black"]
  node2679 -> node2680 [ color="black"]
  node2688 -> node2689 [ color="black"]
  node2680 -> node2681 [ color="black"]
  node2687 -> node2688 [ color="black"]
  node2692 -> node2693 [ color="black"]
  node2690 -> node2691 [ color="black"]
  node2675 -> node2677 [ color="black"]
  node2681 -> node2682 [ color="black"]
  node2683 -> node2684 [ color="black"]
  node2677 -> node2678 [ color="black"]
  node2691 -> node2692 [ color="black"]
  node2686 -> node2687 [ color="black"]
  node2695 -> node2676 [ color="black"]
  node2678 -> node2679 [label=<<font color="black">true</font>> color="black"]
  node2678 -> node2680 [label=<<font color="black">false</font>> color="black"]
  node2693 -> node2694 [label=<<font color="black">true</font>> color="black"]
  node2693 -> node2695 [label=<<font color="black">false</font>> color="black"]
  node2682 -> node2683 [ color="black"]
  node2685 -> node2686 [ color="black"]
  node2684 -> node2685 [label=<<font color="black">true</font>> color="black"]
  node2684 -> node2687 [label=<<font color="black">false</font>> color="black"]
  node2689 -> node2690 [ color="black"]
}
