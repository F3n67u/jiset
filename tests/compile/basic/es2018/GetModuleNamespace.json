["Assert", ":", {
  "id": "module"
}, "is", "an", "instance", "of", "a", "concrete", "subclass", "of", "Module", "Record", ".", {
  "k": 0
}, "Assert", ":", {
  "id": "module"
}, ".", "[", "[", "Status", "]", "]", "is", "not", {
  "code": "\"uninstantiated\""
}, ".", {
  "k": 1
}, "Assert", ":", "If", {
  "id": "module"
}, ".", "[", "[", "Status", "]", "]", "is", {
  "code": "\"evaluated\""
}, ",", {
  "id": "module"
}, ".", "[", "[", "EvaluationError", "]", "]", "is", {
  "value": "undefined"
}, ".", {
  "k": 2
}, "Let", {
  "id": "namespace"
}, "be", {
  "id": "module"
}, ".", "[", "[", "Namespace", "]", "]", ".", {
  "k": 3
}, "If", {
  "id": "namespace"
}, "is", {
  "value": "undefined"
}, ",", "then", true, "Let", {
  "id": "exportedNames"
}, "be", "?", {
  "id": "module"
}, ".", "GetExportedNames", "(", "«", "»", ")", ".", {
  "k": 5
}, "Let", {
  "id": "unambiguousNames"
}, "be", "a", "new", "empty", "List", ".", {
  "k": 6
}, "For", "each", {
  "id": "name"
}, "that", "is", "an", "element", "of", {
  "id": "exportedNames"
}, ",", "do", true, "Let", {
  "id": "resolution"
}, "be", "?", {
  "id": "module"
}, ".", "ResolveExport", "(", {
  "id": "name"
}, ",", "«", "»", ")", ".", {
  "k": 8
}, "If", {
  "id": "resolution"
}, "is", "a", "ResolvedBinding", "Record", ",", "append", {
  "id": "name"
}, "to", {
  "id": "unambiguousNames"
}, ".", {
  "k": 9
}, false, {
  "k": 7
}, "Set", {
  "id": "namespace"
}, "to", "ModuleNamespaceCreate", "(", {
  "id": "module"
}, ",", {
  "id": "unambiguousNames"
}, ")", ".", {
  "k": 10
}, false, {
  "k": 4
}, "Return", {
  "id": "namespace"
}, ".", {
  "k": 11
}]