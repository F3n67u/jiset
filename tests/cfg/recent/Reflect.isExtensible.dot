digraph {
  node19414 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node19411 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19415 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node19418 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19412 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19417 [shape=cds, label=<<font color="black">1:app __x1__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node19416 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19413 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node19413 -> node19414 [ color="black"]
  node19414 -> node19415 [ color="black"]
  node19417 -> node19418 [ color="black"]
  node19416 -> node19417 [ color="black"]
  node19415 -> node19416 [label=<<font color="black">true</font>> color="black"]
  node19415 -> node19417 [label=<<font color="black">false</font>> color="black"]
  node19411 -> node19413 [ color="black"]
  node19418 -> node19412 [ color="black"]
}
