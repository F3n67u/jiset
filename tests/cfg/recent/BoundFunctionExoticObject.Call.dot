digraph {
  node2565 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let target = F.BoundTargetFunction</td></tr>
      <tr><td align="left">1:let boundThis = F.BoundThis</td></tr>
      <tr><td align="left">2:let boundArgs = F.BoundArguments</td></tr>
      <tr><td align="left">3:let __x0__ = (copy-obj boundArgs)</td></tr>
      <tr><td align="left">3:append argumentsList -&gt; __x0__</td></tr>
      <tr><td align="left">3:let args = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2566 [shape=cds, label=<<font color="black">4:app __x1__ = (Call target boundThis args)</font>> color="black" fillcolor="white" style=filled]
  node2564 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2567 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2563 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2563 -> node2565 [ color="black"]
  node2565 -> node2566 [ color="black"]
  node2566 -> node2567 [ color="black"]
  node2567 -> node2564 [ color="black"]
}
