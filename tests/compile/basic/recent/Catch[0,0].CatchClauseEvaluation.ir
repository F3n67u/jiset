{
  let oldEnv = GLOBAL_context.LexicalEnvironment
  app __x0__ = (NewDeclarativeEnvironment oldEnv)
  let catchEnv = __x0__
  access __x1__ = (CatchParameter "BoundNames")
  let __x2__ = __x1__
  let __x3__ = 0i
  while (< __x3__ __x2__.length) {
    let argName = __x2__[__x3__]
    app __x4__ = (catchEnv.CreateMutableBinding catchEnv argName false)
    [! __x4__]
    __x3__ = (+ __x3__ 1i)
  }
  GLOBAL_context.LexicalEnvironment = catchEnv
  access __x5__ = (CatchParameter "BindingInitialization")
  app __x6__ = (__x5__ thrownValue catchEnv)
  let status = __x6__
  app __x7__ = (IsAbruptCompletion status)
  if __x7__ {
    GLOBAL_context.LexicalEnvironment = oldEnv
    return status
  } else {}
  access __x8__ = (Block "Evaluation")
  let B = __x8__
  GLOBAL_context.LexicalEnvironment = oldEnv
  return B
}