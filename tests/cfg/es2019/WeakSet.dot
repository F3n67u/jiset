digraph {
  node16184 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node16179 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16176 [shape=cds, label=<<font color="black">5:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16191 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16172 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node16187 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16183 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node16195 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16169 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16188 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node16189 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16166 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16185 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16190 [shape=cds, label=<<font color="black">12:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node16171 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16173 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16178 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node16168 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16194 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node16167 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16174 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node16182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16177 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16170 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakSetPrototype (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16181 [shape=cds, label=<<font color="black">7:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16180 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16193 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node16186 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node16192 [shape=cds, label=<<font color="black">13:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node16165 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16167 -> node16168 [ color="black"]
  node16176 -> node16177 [ color="black"]
  node16189 -> node16190 [ color="black"]
  node16195 -> node16183 [ color="black"]
  node16190 -> node16191 [ color="black"]
  node16194 -> node16195 [ color="black"]
  node16169 -> node16170 [ color="black"]
  node16192 -> node16193 [ color="black"]
  node16173 -> node16174 [ color="black"]
  node16187 -> node16188 [ color="black"]
  node16188 -> node16189 [ color="black"]
  node16193 -> node16194 [label=<<font color="black">true</font>> color="black"]
  node16193 -> node16183 [label=<<font color="black">false</font>> color="black"]
  node16178 -> node16179 [ color="black"]
  node16181 -> node16182 [ color="black"]
  node16177 -> node16178 [ color="black"]
  node16191 -> node16192 [ color="black"]
  node16165 -> node16167 [ color="black"]
  node16184 -> node16185 [ color="black"]
  node16171 -> node16172 [ color="black"]
  node16175 -> node16176 [ color="black"]
  node16182 -> node16183 [ color="black"]
  node16174 -> node16175 [label=<<font color="black">true</font>> color="black"]
  node16174 -> node16176 [label=<<font color="black">false</font>> color="black"]
  node16180 -> node16181 [ color="black"]
  node16179 -> node16180 [label=<<font color="black">true</font>> color="black"]
  node16179 -> node16181 [label=<<font color="black">false</font>> color="black"]
  node16172 -> node16173 [label=<<font color="black">true</font>> color="black"]
  node16172 -> node16174 [label=<<font color="black">false</font>> color="black"]
  node16183 -> node16184 [label=<<font color="black">true</font>> color="black"]
  node16183 -> node16166 [label=<<font color="black">false</font>> color="black"]
  node16170 -> node16171 [ color="black"]
  node16185 -> node16186 [ color="black"]
  node16186 -> node16187 [label=<<font color="black">true</font>> color="black"]
  node16186 -> node16188 [label=<<font color="black">false</font>> color="black"]
  node16168 -> node16169 [label=<<font color="black">true</font>> color="black"]
  node16168 -> node16170 [label=<<font color="black">false</font>> color="black"]
}
