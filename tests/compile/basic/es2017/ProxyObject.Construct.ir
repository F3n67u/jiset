{
  let handler = O.ProxyHandler
  if (= handler null) throw INTRINSIC_TypeError else {}
  app __x0__ = (Type handler)
  assert (= __x0__ Object)
  let target = O.ProxyTarget
  app __x1__ = (GetMethod handler "construct")
  let trap = [? __x1__]
  if (= trap undefined) {
    assert (! (= target.Construct absent))
    app __x2__ = (Construct target argumentsList newTarget)
    return [? __x2__]
  } else {}
  app __x3__ = (CreateArrayFromList argumentsList)
  let argArray = __x3__
  app __x4__ = (Call trap handler (new [target, argArray, newTarget]))
  let newObj = [? __x4__]
  app __x5__ = (Type newObj)
  if (! (= __x5__ Object)) throw INTRINSIC_TypeError else {}
  return newObj
}