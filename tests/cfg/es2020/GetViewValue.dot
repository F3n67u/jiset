digraph {
  node17221 [shape=cds, label=<<font color="black">5:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17218 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17222 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node17216 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">1:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17223 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17215 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot view &quot;DataView&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17220 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:isLittleEndian = [! __x2__]</td></tr>
      <tr><td align="left">4:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17227 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17224 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">7:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17226 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17214 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17225 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node17213 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17229 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17228 [shape=cds, label=<<font color="black">11:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false CONST_Unordered isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17217 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node17219 [shape=cds, label=<<font color="black">3:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17221 -> node17222 [ color="black"]
  node17215 -> node17216 [ color="black"]
  node17218 -> node17219 [ color="black"]
  node17216 -> node17217 [ color="black"]
  node17224 -> node17225 [ color="black"]
  node17225 -> node17226 [label=<<font color="black">true</font>> color="black"]
  node17225 -> node17227 [label=<<font color="black">false</font>> color="black"]
  node17223 -> node17224 [ color="black"]
  node17228 -> node17229 [ color="black"]
  node17229 -> node17214 [ color="black"]
  node17217 -> node17218 [ color="black"]
  node17220 -> node17221 [ color="black"]
  node17219 -> node17220 [ color="black"]
  node17213 -> node17215 [ color="black"]
  node17227 -> node17228 [ color="black"]
  node17226 -> node17227 [ color="black"]
  node17222 -> node17223 [label=<<font color="black">true</font>> color="black"]
  node17222 -> node17224 [label=<<font color="black">false</font>> color="black"]
}
