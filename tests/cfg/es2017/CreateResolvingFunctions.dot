digraph {
  node16598 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16600 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16601 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let alreadyResolved = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">1:let resolve = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">2:resolve.Promise = promise</td></tr>
      <tr><td align="left">3:resolve.AlreadyResolved = alreadyResolved</td></tr>
      <tr><td align="left">4:let reject = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">5:reject.Promise = promise</td></tr>
      <tr><td align="left">6:reject.AlreadyResolved = alreadyResolved</td></tr>
      <tr><td align="left">7:return (new Record(&quot;Resolve&quot; -&gt; resolve, &quot;Reject&quot; -&gt; reject))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16599 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16598 -> node16600 [ color="black"]
  node16600 -> node16601 [ color="black"]
  node16601 -> node16599 [ color="black"]
}
