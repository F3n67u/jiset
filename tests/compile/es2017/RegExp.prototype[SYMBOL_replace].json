[{
  "tokens": ["Let", {
    "id": "rx"
  }, "be", "the", {
    "value": "this"
  }, "value", "."]
}, {
  "tokens": ["If", "Type", "(", {
    "id": "rx"
  }, ")", "is", "not", "Object", ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Let", {
    "id": "S"
  }, "be", "?", "ToString", "(", {
    "id": "string"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "lengthS"
  }, "be", "the", "number", "of", "code", "unit", "elements", "in", {
    "id": "S"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "functionalReplace"
  }, "be", "IsCallable", "(", {
    "id": "replaceValue"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "functionalReplace"
  }, "is", {
    "value": "false"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "replaceValue"
  }, "be", "?", "ToString", "(", {
    "id": "replaceValue"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "global"
  }, "be", "ToBoolean", "(", "?", "Get", "(", {
    "id": "rx"
  }, ",", {
    "code": "\"global\""
  }, ")", ")", "."]
}, {
  "tokens": ["If", {
    "id": "global"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "fullUnicode"
  }, "be", "ToBoolean", "(", "?", "Get", "(", {
    "id": "rx"
  }, ",", {
    "code": "\"unicode\""
  }, ")", ")", "."]
}, {
  "tokens": ["Perform", "?", "Set", "(", {
    "id": "rx"
  }, ",", {
    "code": "\"lastIndex\""
  }, ",", "0", ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "results"
  }, "be", "a", "new", "empty", "List", "."]
}, {
  "tokens": ["Let", {
    "id": "done"
  }, "be", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["Repeat", ",", "while", {
    "id": "done"
  }, "is", {
    "value": "false"
  }]
}, {
  "tokens": ["Let", {
    "id": "result"
  }, "be", "?", "RegExpExec", "(", {
    "id": "rx"
  }, ",", {
    "id": "S"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "result"
  }, "is", {
    "value": "null"
  }, ",", "set", {
    "id": "done"
  }, "to", {
    "value": "true"
  }, "."]
}, {
  "tokens": ["Else", {
    "id": "result"
  }, "is", "not", {
    "value": "null"
  }, ","]
}, {
  "tokens": ["Append", {
    "id": "result"
  }, "to", "the", "end", "of", {
    "id": "results"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "global"
  }, "is", {
    "value": "false"
  }, ",", "set", {
    "id": "done"
  }, "to", {
    "value": "true"
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "matchStr"
  }, "be", "?", "ToString", "(", "?", "Get", "(", {
    "id": "result"
  }, ",", {
    "code": "\"0\""
  }, ")", ")", "."]
}, {
  "tokens": ["If", {
    "id": "matchStr"
  }, "is", "the", "empty", "String", ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "thisIndex"
  }, "be", "?", "ToLength", "(", "?", "Get", "(", {
    "id": "rx"
  }, ",", {
    "code": "\"lastIndex\""
  }, ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "nextIndex"
  }, "be", "AdvanceStringIndex", "(", {
    "id": "S"
  }, ",", {
    "id": "thisIndex"
  }, ",", {
    "id": "fullUnicode"
  }, ")", "."]
}, {
  "tokens": ["Perform", "?", "Set", "(", {
    "id": "rx"
  }, ",", {
    "code": "\"lastIndex\""
  }, ",", {
    "id": "nextIndex"
  }, ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "accumulatedResult"
  }, "be", "the", "empty", "String", "value", "."]
}, {
  "tokens": ["Let", {
    "id": "nextSourcePosition"
  }, "be", "0", "."]
}, {
  "tokens": ["For", "each", {
    "id": "result"
  }, "in", {
    "id": "results"
  }, ",", "do"]
}, {
  "tokens": ["Let", {
    "id": "nCaptures"
  }, "be", "?", "ToLength", "(", "?", "Get", "(", {
    "id": "result"
  }, ",", {
    "code": "\"length\""
  }, ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "nCaptures"
  }, "be", "max", "(", {
    "id": "nCaptures"
  }, "-", "1", ",", "0", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "matched"
  }, "be", "?", "ToString", "(", "?", "Get", "(", {
    "id": "result"
  }, ",", {
    "code": "\"0\""
  }, ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "matchLength"
  }, "be", "the", "number", "of", "code", "units", "in", {
    "id": "matched"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "position"
  }, "be", "?", "ToInteger", "(", "?", "Get", "(", {
    "id": "result"
  }, ",", {
    "code": "\"index\""
  }, ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "position"
  }, "be", "max", "(", "min", "(", {
    "id": "position"
  }, ",", {
    "id": "lengthS"
  }, ")", ",", "0", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "n"
  }, "be", "1", "."]
}, {
  "tokens": ["Let", {
    "id": "captures"
  }, "be", "a", "new", "empty", "List", "."]
}, {
  "tokens": ["Repeat", ",", "while", {
    "id": "n"
  }, "≤", {
    "id": "nCaptures"
  }]
}, {
  "tokens": ["Let", {
    "id": "capN"
  }, "be", "?", "Get", "(", {
    "id": "result"
  }, ",", "!", "ToString", "(", {
    "id": "n"
  }, ")", ")", "."]
}, {
  "tokens": ["If", {
    "id": "capN"
  }, "is", "not", {
    "value": "undefined"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "capN"
  }, "be", "?", "ToString", "(", {
    "id": "capN"
  }, ")", "."]
}, {
  "tokens": ["Append", {
    "id": "capN"
  }, "as", "the", "last", "element", "of", {
    "id": "captures"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "n"
  }, "be", {
    "id": "n"
  }, "+", "1", "."]
}, {
  "tokens": ["If", {
    "id": "functionalReplace"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "replacerArgs"
  }, "be", "«", {
    "id": "matched"
  }, "»", "."]
}, {
  "tokens": ["Append", "in", "list", "order", "the", "elements", "of", {
    "id": "captures"
  }, "to", "the", "end", "of", "the", "List", {
    "id": "replacerArgs"
  }, "."]
}, {
  "tokens": ["Append", {
    "id": "position"
  }, "and", {
    "id": "S"
  }, "as", "the", "last", "two", "elements", "of", {
    "id": "replacerArgs"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "replValue"
  }, "be", "?", "Call", "(", {
    "id": "replaceValue"
  }, ",", {
    "value": "undefined"
  }, ",", {
    "id": "replacerArgs"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "replacement"
  }, "be", "?", "ToString", "(", {
    "id": "replValue"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "replacement"
  }, "be", "GetSubstitution", "(", {
    "id": "matched"
  }, ",", {
    "id": "S"
  }, ",", {
    "id": "position"
  }, ",", {
    "id": "captures"
  }, ",", {
    "id": "replaceValue"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "position"
  }, "≥", {
    "id": "nextSourcePosition"
  }, ",", "then"]
}, {
  "tokens": ["NOTE", ":", {
    "id": "position"
  }, "should", "not", "normally", "move", "backwards", ".", "If", "it", "does", ",", "it", "is", "an", "indication", "of", "an", "ill", "-", "behaving", "RegExp", "subclass", "or", "use", "of", "an", "access", "triggered", "side", "-", "effect", "to", "change", "the", "global", "flag", "or", "other", "characteristics", "of", {
    "id": "rx"
  }, ".", "In", "such", "cases", ",", "the", "corresponding", "substitution", "is", "ignored", "."]
}, {
  "tokens": ["Let", {
    "id": "accumulatedResult"
  }, "be", "the", "String", "formed", "by", "concatenating", "the", "code", "units", "of", "the", "current", "value", "of", {
    "id": "accumulatedResult"
  }, "with", "the", "substring", "of", {
    "id": "S"
  }, "consisting", "of", "the", "code", "units", "from", {
    "id": "nextSourcePosition"
  }, "(", "inclusive", ")", "up", "to", {
    "id": "position"
  }, "(", "exclusive", ")", "and", "with", "the", "code", "units", "of", {
    "id": "replacement"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "nextSourcePosition"
  }, "be", {
    "id": "position"
  }, "+", {
    "id": "matchLength"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "nextSourcePosition"
  }, "≥", {
    "id": "lengthS"
  }, ",", "return", {
    "id": "accumulatedResult"
  }, "."]
}, {
  "tokens": ["Return", "the", "String", "formed", "by", "concatenating", "the", "code", "units", "of", {
    "id": "accumulatedResult"
  }, "with", "the", "substring", "of", {
    "id": "S"
  }, "consisting", "of", "the", "code", "units", "from", {
    "id": "nextSourcePosition"
  }, "(", "inclusive", ")", "up", "through", "the", "final", "code", "unit", "of", {
    "id": "S"
  }, "(", "inclusive", ")", "."]
}]