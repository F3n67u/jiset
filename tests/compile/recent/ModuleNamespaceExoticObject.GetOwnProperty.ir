{
  [0] app __x0__ = (Type P)
  [0] if (= __x0__ Symbol) {
    app __x1__ = (OrdinaryGetOwnProperty O P)
    app __x2__ = (WrapCompletion __x1__)
    return __x2__
  } else [0] {}
  [1] let exports = O.Exports
  [2] if (! (contains exports P)) {
    app __x3__ = (WrapCompletion undefined)
    return __x3__
  } else [0] {}
  [3] app __x4__ = (O.Get O P O)
  [3] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [0] {}
  [3] let value = __x4__
  [4] app __x5__ = (WrapCompletion (new PropertyDescriptor("Value" -> value, "Writable" -> true, "Enumerable" -> true, "Configurable" -> false)))
  [4] return __x5__
}