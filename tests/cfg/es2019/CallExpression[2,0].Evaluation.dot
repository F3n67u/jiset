digraph {
  node4266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let ref = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4263 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4269 [shape=cds, label=<<font color="black">3:app __x2__ = (IsInTailPosition thisCall)</font>> color="black" fillcolor="white" style=filled]
  node4268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let func = [? __x1__]</td></tr>
      <tr><td align="left">2:let thisCall = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4264 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4272 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4267 [shape=cds, label=<<font color="black">1:app __x1__ = (GetValue ref)</font>> color="black" fillcolor="white" style=filled]
  node4271 [shape=cds, label=<<font color="black">4:app __x3__ = (EvaluateCall func ref Arguments tailCall)</font>> color="black" fillcolor="white" style=filled]
  node4270 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let tailCall = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4265 [shape=cds, label=<<font color="black">0:access __x0__ = (CallExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4271 -> node4272 [ color="black"]
  node4270 -> node4271 [ color="black"]
  node4266 -> node4267 [ color="black"]
  node4269 -> node4270 [ color="black"]
  node4268 -> node4269 [ color="black"]
  node4272 -> node4264 [ color="black"]
  node4265 -> node4266 [ color="black"]
  node4267 -> node4268 [ color="black"]
  node4263 -> node4265 [ color="black"]
}
