digraph {
  node4682 [shape=cds, label=<<font color="black">3:access __x3__ = (Arguments &quot;ArgumentListEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4692 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4675 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4686 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4680 [shape=cds, label=<<font color="black">2:app __x2__ = (GetSuperConstructor)</font>> color="black" fillcolor="white" style=filled]
  node4676 [shape=cds, label=<<font color="black">0:app __x0__ = (GetNewTarget)</font>> color="black" fillcolor="white" style=filled]
  node4689 [shape=cds, label=<<font color="black">6:app __x6__ = (GetThisEnvironment)</font>> color="black" fillcolor="white" style=filled]
  node4685 [shape=diamond, label=<<font color="black">(= __x4__ false)</font>> color="black" fillcolor="white" style=filled]
  node4677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let newTarget = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4684 [shape=cds, label=<<font color="black">4:app __x4__ = (IsConstructor func)</font>> color="black" fillcolor="white" style=filled]
  node4678 [shape=cds, label=<<font color="black">1:app __x1__ = (Type newTarget)</font>> color="black" fillcolor="white" style=filled]
  node4687 [shape=cds, label=<<font color="black">5:app __x5__ = (Construct func argList newTarget)</font>> color="black" fillcolor="white" style=filled]
  node4690 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let thisER = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let result = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let func = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let argList = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4691 [shape=cds, label=<<font color="black">7:app __x7__ = (thisER.BindThisValue thisER result)</font>> color="black" fillcolor="white" style=filled]
  node4674 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4685 -> node4686 [label=<<font color="black">true</font>> color="black"]
  node4685 -> node4687 [label=<<font color="black">false</font>> color="black"]
  node4684 -> node4685 [ color="black"]
  node4691 -> node4692 [ color="black"]
  node4692 -> node4675 [ color="black"]
  node4687 -> node4688 [ color="black"]
  node4689 -> node4690 [ color="black"]
  node4683 -> node4684 [ color="black"]
  node4674 -> node4676 [ color="black"]
  node4676 -> node4677 [ color="black"]
  node4680 -> node4681 [ color="black"]
  node4682 -> node4683 [ color="black"]
  node4686 -> node4687 [ color="black"]
  node4677 -> node4678 [ color="black"]
  node4678 -> node4679 [ color="black"]
  node4681 -> node4682 [ color="black"]
  node4679 -> node4680 [ color="black"]
  node4688 -> node4689 [ color="black"]
  node4690 -> node4691 [ color="black"]
}
