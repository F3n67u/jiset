def [SYNTAX] BindingPattern[1,0].BindingInitialization<(ArrayBindingPattern),true>(value, environment) = {
  0:app __x0__ = (GetIterator value)
  0:let iteratorRecord = [? __x0__]
  1:access __x1__ = (ArrayBindingPattern "IteratorBindingInitialization" iteratorRecord environment)
  1:let result = __x1__
  2:if (= iteratorRecord.Done false) {
    app __x2__ = (IteratorClose iteratorRecord result)
    return [? __x2__]
  } else 1:{}
  3:return result
}
- id: "sec-runtime-semantics-bindinginitialization"
- code:
        1. Let _iteratorRecord_ be ? GetIterator(_value_).
        1. Let _result_ be IteratorBindingInitialization of |ArrayBindingPattern| with arguments _iteratorRecord_ and _environment_.
        1. If _iteratorRecord_.[[Done]] is *false*, return ? IteratorClose(_iteratorRecord_, _result_).
        1. Return _result_.