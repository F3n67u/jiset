digraph {
  node6828 [shape=cds, label=<<font color="black">11:access __x7__ = (LexicalDeclaration &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6823 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x3__[__x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6833 [shape=diamond, label=<<font color="black">(= isConst false)</font>> color="black" fillcolor="white" style=filled]
  node6837 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let bodyResult = __x9__</td></tr>
      <tr><td align="left">17:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
      <tr><td align="left">18:return bodyResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:GLOBAL_context.LexicalEnvironment = loopEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6824 [shape=cds, label=<<font color="black">9:app __x6__ = (loopEnvRec.CreateMutableBinding loopEnvRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node6821 [shape=diamond, label=<<font color="black">(= isConst true)</font>> color="black" fillcolor="white" style=filled]
  node6826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__ = (+ __x4__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6825 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6822 [shape=cds, label=<<font color="black">7:app __x5__ = (loopEnvRec.CreateImmutableBinding loopEnvRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node6810 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6836 [shape=cds, label=<<font color="black">16:app __x9__ = (ForBodyEvaluation Expression0 Expression1 Statement perIterationLets labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6819 [shape=diamond, label=<<font color="black">(&lt; __x4__ __x3__.length)</font>> color="black" fillcolor="white" style=filled]
  node6813 [shape=cds, label=<<font color="black">1:app __x0__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node6830 [shape=cds, label=<<font color="black">12:app __x8__ = (IsAbruptCompletion forDcl)</font>> color="black" fillcolor="white" style=filled]
  node6815 [shape=cds, label=<<font color="black">3:access __x1__ = (LexicalDeclaration &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6832 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
      <tr><td align="left">14:return forDcl</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6834 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let perIterationLets = boundNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6817 [shape=cds, label=<<font color="black">4:access __x2__ = (LexicalDeclaration &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6811 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6816 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let isConst = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6835 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let perIterationLets = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let loopEnv = __x0__</td></tr>
      <tr><td align="left">2:let loopEnvRec = loopEnv.EnvironmentRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6831 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node6829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let forDcl = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let boundNames = __x2__</td></tr>
      <tr><td align="left">5:let __x3__ = boundNames</td></tr>
      <tr><td align="left">5:let __x4__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6833 -> node6834 [label=<<font color="black">true</font>> color="black"]
  node6833 -> node6835 [label=<<font color="black">false</font>> color="black"]
  node6837 -> node6811 [ color="black"]
  node6820 -> node6821 [ color="black"]
  node6829 -> node6830 [ color="black"]
  node6823 -> node6826 [ color="black"]
  node6822 -> node6823 [ color="black"]
  node6817 -> node6818 [ color="black"]
  node6827 -> node6828 [ color="black"]
  node6831 -> node6832 [label=<<font color="black">true</font>> color="black"]
  node6831 -> node6833 [label=<<font color="black">false</font>> color="black"]
  node6818 -> node6819 [ color="black"]
  node6832 -> node6833 [ color="black"]
  node6834 -> node6836 [ color="black"]
  node6815 -> node6816 [ color="black"]
  node6810 -> node6812 [ color="black"]
  node6816 -> node6817 [ color="black"]
  node6819 -> node6820 [label=<<font color="black">true</font>> color="black"]
  node6819 -> node6827 [label=<<font color="black">false</font>> color="black"]
  node6814 -> node6815 [ color="black"]
  node6821 -> node6822 [label=<<font color="black">true</font>> color="black"]
  node6821 -> node6824 [label=<<font color="black">false</font>> color="black"]
  node6835 -> node6836 [ color="black"]
  node6830 -> node6831 [ color="black"]
  node6826 -> node6819 [ color="black"]
  node6825 -> node6826 [ color="black"]
  node6813 -> node6814 [ color="black"]
  node6828 -> node6829 [ color="black"]
  node6812 -> node6813 [ color="black"]
  node6836 -> node6837 [ color="black"]
  node6824 -> node6825 [ color="black"]
}
