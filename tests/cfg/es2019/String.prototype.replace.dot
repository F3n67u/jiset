digraph {
  node13162 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13179 [shape=cds, label=<<font color="black">16:app __x9__ = (GetSubstitution matched string pos captures undefined replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13166 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let searchString = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13155 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13154 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13157 [shape=diamond, label=<<font color="black">(! (|| (= searchValue undefined) (= searchValue null)))</font>> color="black" fillcolor="white" style=filled]
  node13176 [shape=cds, label=<<font color="black">13:app __x8__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node13164 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let string = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13168 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let functionalReplace = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13181 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let tailPos = (+ pos matched.length)</td></tr>
      <tr><td align="left">18:??? &quot;Let id:{newString} be the string - concatenation of the first id:{pos} code units of id:{string} , id:{replStr} , and the trailing substring of id:{string} starting at index id:{tailPos} . If id:{pos} is 0 , the first element of the concatenation will be the empty String .&quot;</td></tr>
      <tr><td align="left">19:return newString</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13172 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:??? &quot;Search id:{string} for the first occurrence of id:{searchString} and let id:{pos} be the index within id:{string} of the first code unit of the matched substring and let id:{matched} be id:{searchString} . If no occurrences of id:{searchString} were found , return id:{string} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let replValue = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13165 [shape=cds, label=<<font color="black">6:app __x4__ = (ToString searchValue)</font>> color="black" fillcolor="white" style=filled]
  node13156 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13177 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let replStr = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13159 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let replacer = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13152 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13174 [shape=cds, label=<<font color="black">12:app __x7__ = (Call replaceValue undefined (new [matched, pos, string]))</font>> color="black" fillcolor="white" style=filled]
  node13151 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13170 [shape=cds, label=<<font color="black">9:app __x6__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13158 [shape=cds, label=<<font color="black">2:app __x1__ = (GetMethod searchValue SYMBOL_replace)</font>> color="black" fillcolor="white" style=filled]
  node13180 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let replStr = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13153 [shape=cds, label=<<font color="black">app searchValue = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13173 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node13163 [shape=cds, label=<<font color="black">5:app __x3__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13169 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node13167 [shape=cds, label=<<font color="black">7:app __x5__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13160 [shape=diamond, label=<<font color="black">(! (= replacer undefined))</font>> color="black" fillcolor="white" style=filled]
  node13178 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13171 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:replaceValue = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13161 [shape=cds, label=<<font color="black">4:app __x2__ = (Call replacer searchValue (new [O, replaceValue]))</font>> color="black" fillcolor="white" style=filled]
  node13156 -> node13157 [ color="black"]
  node13172 -> node13173 [ color="black"]
  node13176 -> node13177 [ color="black"]
  node13163 -> node13164 [ color="black"]
  node13154 -> node13155 [ color="black"]
  node13159 -> node13160 [ color="black"]
  node13178 -> node13179 [ color="black"]
  node13160 -> node13161 [label=<<font color="black">true</font>> color="black"]
  node13160 -> node13163 [label=<<font color="black">false</font>> color="black"]
  node13157 -> node13158 [label=<<font color="black">true</font>> color="black"]
  node13157 -> node13163 [label=<<font color="black">false</font>> color="black"]
  node13155 -> node13156 [ color="black"]
  node13174 -> node13175 [ color="black"]
  node13167 -> node13168 [ color="black"]
  node13168 -> node13169 [ color="black"]
  node13170 -> node13171 [ color="black"]
  node13162 -> node13163 [ color="black"]
  node13164 -> node13165 [ color="black"]
  node13151 -> node13153 [ color="black"]
  node13173 -> node13174 [label=<<font color="black">true</font>> color="black"]
  node13173 -> node13178 [label=<<font color="black">false</font>> color="black"]
  node13179 -> node13180 [ color="black"]
  node13166 -> node13167 [ color="black"]
  node13161 -> node13162 [ color="black"]
  node13169 -> node13170 [label=<<font color="black">true</font>> color="black"]
  node13169 -> node13172 [label=<<font color="black">false</font>> color="black"]
  node13175 -> node13176 [ color="black"]
  node13171 -> node13172 [ color="black"]
  node13158 -> node13159 [ color="black"]
  node13180 -> node13181 [ color="black"]
  node13181 -> node13152 [ color="black"]
  node13153 -> node13154 [ color="black"]
  node13165 -> node13166 [ color="black"]
  node13177 -> node13181 [ color="black"]
}
