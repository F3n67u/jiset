digraph {
  node18360 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18365 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18356 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18368 [shape=cds, label=<<font color="black">5:app __x4__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node18370 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18361 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node18372 [shape=cds, label=<<font color="black">8:app __x5__ = (SetValueInBuffer buffer indexedPosition elementType v true CONST_SeqCst)</font>> color="black" fillcolor="white" style=filled]
  node18367 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18354 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18363 [shape=diamond, label=<<font color="black">(|| (= arrayTypeName &quot;BigUint64Array&quot;) (= arrayTypeName &quot;BigInt64Array&quot;))</font>> color="black" fillcolor="white" style=filled]
  node18358 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:__x5__</td></tr>
      <tr><td align="left">9:return v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18369 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node18364 [shape=cds, label=<<font color="black">app __x2__ = (ToBigInt value)</font>> color="black" fillcolor="white" style=filled]
  node18371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18357 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18355 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18366 [shape=cds, label=<<font color="black">app __x3__ = (ToIntegerOrInfinity value)</font>> color="black" fillcolor="white" style=filled]
  node18359 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateIntegerTypedArray typedArray)</font>> color="black" fillcolor="white" style=filled]
  node18362 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let indexedPosition = [? __x1__]</td></tr>
      <tr><td align="left">2:let arrayTypeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18369 -> node18370 [label=<<font color="black">true</font>> color="black"]
  node18369 -> node18371 [label=<<font color="black">false</font>> color="black"]
  node18365 -> node18368 [ color="black"]
  node18372 -> node18373 [ color="black"]
  node18371 -> node18372 [ color="black"]
  node18367 -> node18368 [ color="black"]
  node18360 -> node18361 [ color="black"]
  node18356 -> node18357 [ color="black"]
  node18373 -> node18355 [ color="black"]
  node18368 -> node18369 [ color="black"]
  node18364 -> node18365 [ color="black"]
  node18354 -> node18356 [ color="black"]
  node18359 -> node18360 [ color="black"]
  node18362 -> node18363 [ color="black"]
  node18366 -> node18367 [ color="black"]
  node18357 -> node18358 [ color="black"]
  node18361 -> node18362 [ color="black"]
  node18370 -> node18371 [ color="black"]
  node18363 -> node18364 [label=<<font color="black">true</font>> color="black"]
  node18363 -> node18366 [label=<<font color="black">false</font>> color="black"]
  node18358 -> node18359 [ color="black"]
}
