digraph {
  node14786 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_SetPrototype (new [&quot;SetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node14805 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14790 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node14793 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14812 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node14798 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14783 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14809 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14792 [shape=cds, label=<<font color="black">6:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14807 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14800 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14795 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node14781 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14811 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node14782 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14801 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node14785 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14808 [shape=cds, label=<<font color="black">14:app __x6__ = (Call adder set (new [nextValue.Value]))</font>> color="black" fillcolor="white" style=filled]
  node14789 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14804 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node14784 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node14799 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node14794 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node14788 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node14803 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14813 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14810 [shape=cds, label=<<font color="black">15:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node14791 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14802 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node14787 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.SetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14806 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node14797 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node14796 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14791 -> node14799 [ color="black"]
  node14792 -> node14793 [ color="black"]
  node14807 -> node14808 [ color="black"]
  node14811 -> node14812 [label=<<font color="black">true</font>> color="black"]
  node14811 -> node14801 [label=<<font color="black">false</font>> color="black"]
  node14793 -> node14794 [ color="black"]
  node14813 -> node14801 [ color="black"]
  node14805 -> node14806 [ color="black"]
  node14785 -> node14786 [ color="black"]
  node14783 -> node14784 [ color="black"]
  node14786 -> node14787 [ color="black"]
  node14789 -> node14790 [ color="black"]
  node14797 -> node14798 [ color="black"]
  node14809 -> node14810 [ color="black"]
  node14796 -> node14797 [ color="black"]
  node14812 -> node14813 [ color="black"]
  node14788 -> node14789 [label=<<font color="black">true</font>> color="black"]
  node14788 -> node14790 [label=<<font color="black">false</font>> color="black"]
  node14806 -> node14807 [ color="black"]
  node14781 -> node14783 [ color="black"]
  node14799 -> node14800 [label=<<font color="black">true</font>> color="black"]
  node14799 -> node14801 [label=<<font color="black">false</font>> color="black"]
  node14795 -> node14796 [label=<<font color="black">true</font>> color="black"]
  node14795 -> node14797 [label=<<font color="black">false</font>> color="black"]
  node14794 -> node14795 [ color="black"]
  node14808 -> node14809 [ color="black"]
  node14802 -> node14803 [ color="black"]
  node14784 -> node14785 [label=<<font color="black">true</font>> color="black"]
  node14784 -> node14786 [label=<<font color="black">false</font>> color="black"]
  node14804 -> node14805 [label=<<font color="black">true</font>> color="black"]
  node14804 -> node14806 [label=<<font color="black">false</font>> color="black"]
  node14800 -> node14801 [ color="black"]
  node14803 -> node14804 [ color="black"]
  node14801 -> node14802 [label=<<font color="black">true</font>> color="black"]
  node14801 -> node14782 [label=<<font color="black">false</font>> color="black"]
  node14790 -> node14791 [label=<<font color="black">true</font>> color="black"]
  node14790 -> node14792 [label=<<font color="black">false</font>> color="black"]
  node14787 -> node14788 [ color="black"]
  node14798 -> node14799 [ color="black"]
  node14810 -> node14811 [ color="black"]
}
