digraph {
  node9769 [shape=cds, label=<<font color="black">4:app __x3__ = (OrdinaryObjectCreate INTRINSIC_AsyncGeneratorFunction_prototype_prototype)</font>> color="black" fillcolor="white" style=filled]
  node9768 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9764 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let scope = __x0__</td></tr>
      <tr><td align="left">1:let sourceText = (get-syntax AsyncGeneratorExpression)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x4__]</td></tr>
      <tr><td align="left">6:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9761 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9765 [shape=cds, label=<<font color="black">2:app __x1__ = (OrdinaryFunctionCreate INTRINSIC_AsyncGeneratorFunction_prototype sourceText FormalParameters AsyncGeneratorBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node9771 [shape=cds, label=<<font color="black">5:app __x4__ = (DefinePropertyOrThrow closure &quot;prototype&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; prototype, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node9762 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9766 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let closure = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9770 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let prototype = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9767 [shape=cds, label=<<font color="black">3:app __x2__ = (SetFunctionName closure name)</font>> color="black" fillcolor="white" style=filled]
  node9763 [shape=cds, label=<<font color="black">0:access __x0__ = (GLOBAL_context &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9766 -> node9767 [ color="black"]
  node9770 -> node9771 [ color="black"]
  node9772 -> node9762 [ color="black"]
  node9765 -> node9766 [ color="black"]
  node9768 -> node9769 [ color="black"]
  node9767 -> node9768 [ color="black"]
  node9769 -> node9770 [ color="black"]
  node9764 -> node9765 [ color="black"]
  node9771 -> node9772 [ color="black"]
  node9763 -> node9764 [ color="black"]
  node9761 -> node9763 [ color="black"]
}
