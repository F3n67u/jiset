digraph {
  node4595 [shape=diamond, label=<<font color="black">(= arguments CONST_empty)</font>> color="black" fillcolor="white" style=filled]
  node4600 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node4588 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4589 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4590 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (is-instance-of constructExpr NewExpression) (is-instance-of constructExpr MemberExpression))</td></tr>
      <tr><td align="left">1:assert (|| (= arguments CONST_empty) (is-instance-of arguments Arguments))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4601 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4598 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let argList = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4593 [shape=cds, label=<<font color="black">3:app __x1__ = (GetValue ref)</font>> color="black" fillcolor="white" style=filled]
  node4603 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4592 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let ref = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4594 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let constructor = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4599 [shape=cds, label=<<font color="black">7:app __x3__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node4602 [shape=cds, label=<<font color="black">8:app __x4__ = (Construct constructor argList)</font>> color="black" fillcolor="white" style=filled]
  node4591 [shape=cds, label=<<font color="black">2:access __x0__ = (constructExpr &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4596 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let argList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4597 [shape=cds, label=<<font color="black">6:access __x2__ = (arguments &quot;ArgumentListEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4601 -> node4602 [ color="black"]
  node4590 -> node4591 [ color="black"]
  node4592 -> node4593 [ color="black"]
  node4599 -> node4600 [ color="black"]
  node4598 -> node4599 [ color="black"]
  node4591 -> node4592 [ color="black"]
  node4603 -> node4589 [ color="black"]
  node4596 -> node4599 [ color="black"]
  node4593 -> node4594 [ color="black"]
  node4588 -> node4590 [ color="black"]
  node4597 -> node4598 [ color="black"]
  node4600 -> node4601 [label=<<font color="black">true</font>> color="black"]
  node4600 -> node4602 [label=<<font color="black">false</font>> color="black"]
  node4602 -> node4603 [ color="black"]
  node4595 -> node4596 [label=<<font color="black">true</font>> color="black"]
  node4595 -> node4597 [label=<<font color="black">false</font>> color="black"]
  node4594 -> node4595 [ color="black"]
}
