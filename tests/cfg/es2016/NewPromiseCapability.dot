digraph {
  node15823 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15821 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node15825 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node15814 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15822 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15813 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = (new PromiseCapability(&quot;Promise&quot; -&gt; undefined, &quot;Resolve&quot; -&gt; undefined, &quot;Reject&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:let executor = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">4:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15816 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node15827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">9:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15819 [shape=cds, label=<<font color="black">5:app __x1__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node15824 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node15815 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node15820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promise = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15825 -> node15826 [label=<<font color="black">true</font>> color="black"]
  node15825 -> node15827 [label=<<font color="black">false</font>> color="black"]
  node15823 -> node15824 [ color="black"]
  node15827 -> node15814 [ color="black"]
  node15821 -> node15822 [ color="black"]
  node15820 -> node15821 [ color="black"]
  node15815 -> node15816 [ color="black"]
  node15818 -> node15819 [ color="black"]
  node15824 -> node15825 [ color="black"]
  node15817 -> node15818 [ color="black"]
  node15819 -> node15820 [ color="black"]
  node15816 -> node15817 [label=<<font color="black">true</font>> color="black"]
  node15816 -> node15818 [label=<<font color="black">false</font>> color="black"]
  node15826 -> node15827 [ color="black"]
  node15822 -> node15823 [label=<<font color="black">true</font>> color="black"]
  node15822 -> node15824 [label=<<font color="black">false</font>> color="black"]
  node15813 -> node15815 [ color="black"]
}
