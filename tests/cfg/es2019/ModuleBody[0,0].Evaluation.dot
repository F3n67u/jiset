digraph {
  node10814 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let result = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10818 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type CONST_normal) (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node10816 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10815 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10820 -> node10815 [ color="black"]
  node10818 -> node10819 [label=<<font color="black">true</font>> color="black"]
  node10818 -> node10820 [label=<<font color="black">false</font>> color="black"]
  node10817 -> node10818 [ color="black"]
  node10819 -> node10820 [ color="black"]
  node10814 -> node10816 [ color="black"]
  node10816 -> node10817 [ color="black"]
}
