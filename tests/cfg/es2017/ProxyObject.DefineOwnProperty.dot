digraph {
  node2822 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let booleanTrapResult = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2829 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Desc.Configurable absent)) (= Desc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node2805 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2830 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let settingConfigFalse = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2839 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2835 [shape=diamond, label=<<font color="black">(= settingConfigFalse true)</font>> color="black" fillcolor="white" style=filled]
  node2816 [shape=cds, label=<<font color="black">7:app __x3__ = (target.DefineOwnProperty target P Desc)</font>> color="black" fillcolor="white" style=filled]
  node2815 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2808 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2837 [shape=cds, label=<<font color="black">20:app __x9__ = (IsCompatiblePropertyDescriptor extensibleTarget Desc targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node2825 [shape=cds, label=<<font color="black">11:app __x7__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node2819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let descObj = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2833 [shape=diamond, label=<<font color="black">(= extensibleTarget false)</font>> color="black" fillcolor="white" style=filled]
  node2809 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetDesc = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2820 [shape=cds, label=<<font color="black">9:app __x5__ = (Call trap handler (new [target, P, descObj]))</font>> color="black" fillcolor="white" style=filled]
  node2840 [shape=diamond, label=<<font color="black">(&amp;&amp; (= settingConfigFalse true) (= targetDesc.Configurable true))</font>> color="black" fillcolor="white" style=filled]
  node2841 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2836 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2813 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;defineProperty&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2806 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2827 [shape=cds, label=<<font color="black">12:app __x8__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node2824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2842 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2821 [shape=cds, label=<<font color="black">9:app __x6__ = (ToBoolean [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node2831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let settingConfigFalse = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2838 [shape=diamond, label=<<font color="black">(= __x9__ false)</font>> color="black" fillcolor="white" style=filled]
  node2807 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node2818 [shape=cds, label=<<font color="black">8:app __x4__ = (FromPropertyDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node2828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let extensibleTarget = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2823 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node2811 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2832 [shape=diamond, label=<<font color="black">(= targetDesc undefined)</font>> color="black" fillcolor="white" style=filled]
  node2834 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2828 -> node2829 [ color="black"]
  node2829 -> node2830 [label=<<font color="black">true</font>> color="black"]
  node2829 -> node2831 [label=<<font color="black">false</font>> color="black"]
  node2815 -> node2816 [label=<<font color="black">true</font>> color="black"]
  node2815 -> node2818 [label=<<font color="black">false</font>> color="black"]
  node2840 -> node2841 [label=<<font color="black">true</font>> color="black"]
  node2840 -> node2842 [label=<<font color="black">false</font>> color="black"]
  node2836 -> node2842 [ color="black"]
  node2808 -> node2809 [ color="black"]
  node2817 -> node2818 [ color="black"]
  node2818 -> node2819 [ color="black"]
  node2830 -> node2832 [ color="black"]
  node2807 -> node2808 [ color="black"]
  node2809 -> node2810 [label=<<font color="black">true</font>> color="black"]
  node2809 -> node2811 [label=<<font color="black">false</font>> color="black"]
  node2842 -> node2806 [ color="black"]
  node2819 -> node2820 [ color="black"]
  node2835 -> node2836 [label=<<font color="black">true</font>> color="black"]
  node2835 -> node2842 [label=<<font color="black">false</font>> color="black"]
  node2839 -> node2840 [ color="black"]
  node2812 -> node2813 [ color="black"]
  node2813 -> node2814 [ color="black"]
  node2832 -> node2833 [label=<<font color="black">true</font>> color="black"]
  node2832 -> node2837 [label=<<font color="black">false</font>> color="black"]
  node2825 -> node2826 [ color="black"]
  node2810 -> node2811 [ color="black"]
  node2822 -> node2823 [ color="black"]
  node2827 -> node2828 [ color="black"]
  node2821 -> node2822 [ color="black"]
  node2841 -> node2842 [ color="black"]
  node2824 -> node2825 [ color="black"]
  node2826 -> node2827 [ color="black"]
  node2837 -> node2838 [ color="black"]
  node2811 -> node2812 [ color="black"]
  node2838 -> node2839 [label=<<font color="black">true</font>> color="black"]
  node2838 -> node2840 [label=<<font color="black">false</font>> color="black"]
  node2831 -> node2832 [ color="black"]
  node2820 -> node2821 [ color="black"]
  node2805 -> node2807 [ color="black"]
  node2816 -> node2817 [ color="black"]
  node2833 -> node2834 [label=<<font color="black">true</font>> color="black"]
  node2833 -> node2835 [label=<<font color="black">false</font>> color="black"]
  node2823 -> node2824 [label=<<font color="black">true</font>> color="black"]
  node2823 -> node2825 [label=<<font color="black">false</font>> color="black"]
  node2814 -> node2815 [ color="black"]
  node2834 -> node2835 [ color="black"]
}
