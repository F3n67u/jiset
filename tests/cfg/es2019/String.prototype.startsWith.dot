digraph {
  node13351 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13361 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13360 [shape=diamond, label=<<font color="black">(= isRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node13356 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13352 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13359 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isRegExp = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13362 [shape=cds, label=<<font color="black">4:app __x3__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node13355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13366 [shape=cds, label=<<font color="black">8:app __x5__ = (max pos 0i)</font>> color="black" fillcolor="white" style=filled]
  node13370 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13358 [shape=cds, label=<<font color="black">2:app __x2__ = (IsRegExp searchString)</font>> color="black" fillcolor="white" style=filled]
  node13371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:??? &quot;If the sequence of code units of id:{S} starting at id:{start} of length id:{searchLength} is the same as the full code unit sequence of id:{searchStr} , return value:{true} .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;Otherwise , return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13367 [shape=cds, label=<<font color="black">8:app __x6__ = (min __x5__ len)</font>> color="black" fillcolor="white" style=filled]
  node13357 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13364 [shape=cds, label=<<font color="black">5:app __x4__ = (ToInteger position)</font>> color="black" fillcolor="white" style=filled]
  node13353 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13365 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let pos = [? __x4__]</td></tr>
      <tr><td align="left">7:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13350 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13368 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let start = __x6__</td></tr>
      <tr><td align="left">9:let searchLength = searchStr.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13363 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let searchStr = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13354 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13369 [shape=diamond, label=<<font color="black">(&lt; len (+ searchLength start))</font>> color="black" fillcolor="white" style=filled]
  node13353 -> node13354 [ color="black"]
  node13368 -> node13369 [ color="black"]
  node13367 -> node13368 [ color="black"]
  node13357 -> node13358 [ color="black"]
  node13356 -> node13357 [ color="black"]
  node13359 -> node13360 [ color="black"]
  node13352 -> node13353 [ color="black"]
  node13363 -> node13364 [ color="black"]
  node13371 -> node13351 [ color="black"]
  node13370 -> node13371 [ color="black"]
  node13361 -> node13362 [ color="black"]
  node13369 -> node13370 [label=<<font color="black">true</font>> color="black"]
  node13369 -> node13371 [label=<<font color="black">false</font>> color="black"]
  node13360 -> node13361 [label=<<font color="black">true</font>> color="black"]
  node13360 -> node13362 [label=<<font color="black">false</font>> color="black"]
  node13354 -> node13355 [ color="black"]
  node13365 -> node13366 [ color="black"]
  node13362 -> node13363 [ color="black"]
  node13364 -> node13365 [ color="black"]
  node13350 -> node13352 [ color="black"]
  node13355 -> node13356 [ color="black"]
  node13366 -> node13367 [ color="black"]
  node13358 -> node13359 [ color="black"]
}
