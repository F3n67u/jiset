digraph {
  node17164 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let entries = S.SetData</td></tr>
      <tr><td align="left">4:let __x2__ = entries</td></tr>
      <tr><td align="left">4:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17158 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let S = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17168 [shape=cds, label=<<font color="black">6:app __x4__ = (Call callbackfn thisArg (new [e, e, S]))</font>> color="black" fillcolor="white" style=filled]
  node17154 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17157 [shape=cds, label=<<font color="black">app thisArg = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17165 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node17170 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17160 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17162 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node17169 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17163 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17156 [shape=cds, label=<<font color="black">app callbackfn = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17166 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x2__[__x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17155 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17159 [shape=cds, label=<<font color="black">1:app __x0__ = (RequireInternalSlot S &quot;SetData&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17167 [shape=diamond, label=<<font color="black">(! (= e CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node17171 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17161 [shape=cds, label=<<font color="black">2:app __x1__ = (IsCallable callbackfn)</font>> color="black" fillcolor="white" style=filled]
  node17156 -> node17157 [ color="black"]
  node17158 -> node17159 [ color="black"]
  node17157 -> node17158 [ color="black"]
  node17163 -> node17164 [ color="black"]
  node17169 -> node17170 [ color="black"]
  node17159 -> node17160 [ color="black"]
  node17165 -> node17166 [label=<<font color="black">true</font>> color="black"]
  node17165 -> node17171 [label=<<font color="black">false</font>> color="black"]
  node17160 -> node17161 [ color="black"]
  node17154 -> node17156 [ color="black"]
  node17164 -> node17165 [ color="black"]
  node17168 -> node17169 [ color="black"]
  node17167 -> node17168 [label=<<font color="black">true</font>> color="black"]
  node17167 -> node17170 [label=<<font color="black">false</font>> color="black"]
  node17162 -> node17163 [label=<<font color="black">true</font>> color="black"]
  node17162 -> node17164 [label=<<font color="black">false</font>> color="black"]
  node17161 -> node17162 [ color="black"]
  node17171 -> node17155 [ color="black"]
  node17166 -> node17167 [ color="black"]
  node17170 -> node17165 [ color="black"]
}
