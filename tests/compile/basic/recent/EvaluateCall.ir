{
  if (= (typeof ref) "ReferenceRecord") {
    app __x0__ = (IsPropertyReference ref)
    if (= __x0__ true) {
      app __x1__ = (GetThisValue ref)
      let thisValue = __x1__
    } else {
      let refEnv = ref.Base
      app __x2__ = (refEnv.WithBaseObject refEnv)
      let thisValue = __x2__
    }
  } else let thisValue = undefined
  access __x3__ = (arguments "ArgumentListEvaluation")
  let argList = [? __x3__]
  app __x4__ = (Type func)
  if (! (= __x4__ Object)) throw TypeError else {}
  app __x5__ = (IsCallable func)
  if (= __x5__ false) throw TypeError else {}
  if (= tailPosition true) {
    app __x6__ = (PrepareForTailCall)
    __x6__
  } else {}
  app __x7__ = (Call func thisValue argList)
  let result = __x7__
  return result
}