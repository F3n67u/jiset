digraph {
  node17375 [shape=cds, label=<<font color="black">8:app __x3__ = (IsSharedArrayBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17385 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:??? &quot;Else , store the individual bytes of id:{rawBytes} into id:{block} , in order , starting at id:{block} [ id:{byteIndex} ] .&quot;</td></tr>
      <tr><td align="left">14:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17377 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let execution = GLOBAL_agent.CandidateExecution</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{eventList} be the [ [ EventList ] ] field of the element in id:{execution} . [ [ EventsRecords ] ] whose [ [ AgentSignifier ] ] is AgentSignifier ( ) .&quot;</td></tr>
      <tr><td align="left">11:let __x4__ = true</td></tr>
      <tr><td align="left">11:__x4__ = (= isTypedArray true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17373 [shape=cds, label=<<font color="black">7:app __x2__ = (NumericToRawBytes type value isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17379 [shape=cds, label=<<font color="black">app __x5__ = (IsNoTearConfiguration type order)</font>> color="black" fillcolor="white" style=filled]
  node17380 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__ = (= __x5__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17384 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:append (new WriteSharedMemory(&quot;Order&quot; -&gt; order, &quot;NoTear&quot; -&gt; noTear, &quot;Block&quot; -&gt; block, &quot;ByteIndex&quot; -&gt; byteIndex, &quot;ElementSize&quot; -&gt; elementSize, &quot;Payload&quot; -&gt; rawBytes)) -&gt; eventList</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17381 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node17366 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17371 [shape=diamond, label=<<font color="black">(= isLittleEndian absent)</font>> color="black" fillcolor="white" style=filled]
  node17374 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rawBytes = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17378 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node17370 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= [! __x1__] true)</td></tr>
      <tr><td align="left">4:let block = arrayBuffer.ArrayBufferData</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17367 [shape=cds, label=<<font color="black">0:app __x0__ = (IsDetachedBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17382 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17368 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17369 [shape=cds, label=<<font color="black">2:app __x1__ = (IsNonNegativeInteger byteIndex)</font>> color="black" fillcolor="white" style=filled]
  node17383 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17376 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node17372 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">isLittleEndian = GLOBAL_agent.LittleEndian</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17365 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17382 -> node17384 [ color="black"]
  node17368 -> node17369 [ color="black"]
  node17381 -> node17382 [label=<<font color="black">true</font>> color="black"]
  node17381 -> node17383 [label=<<font color="black">false</font>> color="black"]
  node17371 -> node17372 [label=<<font color="black">true</font>> color="black"]
  node17371 -> node17373 [label=<<font color="black">false</font>> color="black"]
  node17374 -> node17375 [ color="black"]
  node17365 -> node17367 [ color="black"]
  node17370 -> node17371 [ color="black"]
  node17379 -> node17380 [ color="black"]
  node17369 -> node17370 [ color="black"]
  node17367 -> node17368 [ color="black"]
  node17384 -> node17385 [ color="black"]
  node17380 -> node17381 [ color="black"]
  node17377 -> node17378 [ color="black"]
  node17383 -> node17384 [ color="black"]
  node17372 -> node17373 [ color="black"]
  node17378 -> node17379 [label=<<font color="black">true</font>> color="black"]
  node17378 -> node17381 [label=<<font color="black">false</font>> color="black"]
  node17385 -> node17366 [ color="black"]
  node17373 -> node17374 [ color="black"]
  node17376 -> node17377 [label=<<font color="black">true</font>> color="black"]
  node17376 -> node17385 [label=<<font color="black">false</font>> color="black"]
  node17375 -> node17376 [ color="black"]
}
