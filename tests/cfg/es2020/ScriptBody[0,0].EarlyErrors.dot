digraph {
  node20345 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node20340 [shape=cds, label=<<font color="black">3:access __x1__ = (StatementList &quot;ContainsUndefinedBreakTarget&quot; (new []))</font>> color="black" fillcolor="white" style=filled]
  node20344 [shape=cds, label=<<font color="black">4:access __x2__ = (StatementList &quot;ContainsUndefinedContinueTarget&quot; (new []) (new []))</font>> color="black" fillcolor="white" style=filled]
  node20341 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node20347 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20338 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20334 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node20343 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20346 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20336 [shape=cds, label=<<font color="black">2:access __x0__ = (StatementList &quot;ContainsDuplicateLabels&quot; (new []))</font>> color="black" fillcolor="white" style=filled]
  node20333 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node20339 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;It is a Syntax Error if nt:{StatementList} Contains code:{super} unless the source code containing code:{super} is eval code that is being processed by a direct eval . Additional early error rules for code:{super} within direct eval are defined in PerformEval .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;It is a Syntax Error if nt:{StatementList} Contains nt:{NewTarget} unless the source code containing nt:{NewTarget} is eval code that is being processed by a direct eval . Additional early error rules for nt:{NewTarget} in direct eval are defined in PerformEval .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20337 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node20333 -> node20335 [ color="black"]
  node20342 -> node20344 [ color="black"]
  node20337 -> node20338 [label=<<font color="black">true</font>> color="black"]
  node20337 -> node20339 [label=<<font color="black">false</font>> color="black"]
  node20335 -> node20336 [ color="black"]
  node20345 -> node20346 [label=<<font color="black">true</font>> color="black"]
  node20345 -> node20347 [label=<<font color="black">false</font>> color="black"]
  node20344 -> node20345 [ color="black"]
  node20346 -> node20334 [ color="black"]
  node20340 -> node20341 [ color="black"]
  node20343 -> node20344 [ color="black"]
  node20336 -> node20337 [ color="black"]
  node20339 -> node20340 [ color="black"]
  node20341 -> node20342 [label=<<font color="black">true</font>> color="black"]
  node20341 -> node20343 [label=<<font color="black">false</font>> color="black"]
  node20338 -> node20340 [ color="black"]
  node20347 -> node20334 [ color="black"]
}
