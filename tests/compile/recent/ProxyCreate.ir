{
  [0] app __x0__ = (Type target)
  [0] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [13] {}
  [1] app __x2__ = (Type handler)
  [1] if (! (= __x2__ Object)) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else [13] {}
  [2] app __x4__ = (MakeBasicObject (new ["ProxyHandler", "ProxyTarget"]))
  [2] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [13] {}
  [2] let P = __x4__
  [4] app __x5__ = (IsCallable target)
  [4] if (= __x5__ true) {
    [5] ??? "Set id:{P} . [ [ Call ] ] as specified in link:{} ."
    [6] app __x6__ = (IsConstructor target)
    [6] if (= __x6__ true) ??? "Set id:{P} . [ [ Construct ] ] as specified in link:{} ." else [13] {}
  } else [13] {}
  [8] P.ProxyTarget = target
  [9] P.ProxyHandler = handler
  [10] app __x7__ = (WrapCompletion P)
  [10] return __x7__
}