digraph {
  node3481 [shape=diamond, label=<<font color="black">(&lt; __x12__ __x11__.length)</font>> color="black" fillcolor="white" style=filled]
  node3471 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let key = __x8__[__x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3499 [shape=diamond, label=<<font color="black">(&lt; __x16__ uncheckedResultKeys.length)</font>> color="black" fillcolor="white" style=filled]
  node3486 [shape=diamond, label=<<font color="black">(&lt; __x13__ uncheckedResultKeys.length)</font>> color="black" fillcolor="white" style=filled]
  node3491 [shape=diamond, label=<<font color="black">(= extensibleTarget true)</font>> color="black" fillcolor="white" style=filled]
  node3487 [shape=diamond, label=<<font color="black">(= uncheckedResultKeys[__x13__] key)</font>> color="black" fillcolor="white" style=filled]
  node3455 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3462 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let trapResult = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3497 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3477 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x9__ = (+ __x9__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3449 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3460 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let trapResultArray = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3498 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let __x16__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3502 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x16__ = (+ __x16__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3466 [shape=cds, label=<<font color="black">10:app __x6__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node3495 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let key = __x14__[__x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let __x13__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3463 [shape=cds, label=<<font color="black">9:app __x5__ = (IsDuplicate trapResult)</font>> color="black" fillcolor="white" style=filled]
  node3470 [shape=diamond, label=<<font color="black">(&lt; __x9__ __x8__.length)</font>> color="black" fillcolor="white" style=filled]
  node3453 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3473 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let desc = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3505 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3492 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return trapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3450 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3503 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x15__ = (+ __x15__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3459 [shape=cds, label=<<font color="black">7:app __x3__ = (Call trap handler (new [target]))</font>> color="black" fillcolor="white" style=filled]
  node3467 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let extensibleTarget = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3482 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let key = __x11__[__x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3454 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;ownKeys&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3476 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append key -&gt; targetConfigurableKeys</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3504 [shape=diamond, label=<<font color="black">(&lt; 0i uncheckedResultKeys.length)</font>> color="black" fillcolor="white" style=filled]
  node3472 [shape=cds, label=<<font color="black">17:app __x10__ = (target.GetOwnProperty target key)</font>> color="black" fillcolor="white" style=filled]
  node3458 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3468 [shape=cds, label=<<font color="black">11:app __x7__ = (target.OwnPropertyKeys target)</font>> color="black" fillcolor="white" style=filled]
  node3500 [shape=diamond, label=<<font color="black">(= uncheckedResultKeys[__x16__] key)</font>> color="black" fillcolor="white" style=filled]
  node3456 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3483 [shape=diamond, label=<<font color="black">(! (contains uncheckedResultKeys key))</font>> color="black" fillcolor="white" style=filled]
  node3480 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let uncheckedResultKeys = (copy-obj trapResult)</td></tr>
      <tr><td align="left">25:let __x11__ = targetNonconfigurableKeys</td></tr>
      <tr><td align="left">25:let __x12__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3490 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x12__ = (+ __x12__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3448 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3475 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append key -&gt; targetNonconfigurableKeys</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3488 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">(pop uncheckedResultKeys __x13__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3493 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let __x14__ = targetConfigurableKeys</td></tr>
      <tr><td align="left">29:let __x15__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3478 [shape=diamond, label=<<font color="black">(&amp;&amp; (= extensibleTarget true) (= targetNonconfigurableKeys.length 0i))</font>> color="black" fillcolor="white" style=filled]
  node3452 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3457 [shape=cds, label=<<font color="black">6:app __x2__ = (target.OwnPropertyKeys target)</font>> color="black" fillcolor="white" style=filled]
  node3447 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3465 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3484 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3501 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">(pop uncheckedResultKeys __x16__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3464 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node3496 [shape=diamond, label=<<font color="black">(! (contains uncheckedResultKeys key))</font>> color="black" fillcolor="white" style=filled]
  node3469 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetKeys = [? __x7__]</td></tr>
      <tr><td align="left">14:let targetConfigurableKeys = (new [])</td></tr>
      <tr><td align="left">15:let targetNonconfigurableKeys = (new [])</td></tr>
      <tr><td align="left">16:let __x8__ = targetKeys</td></tr>
      <tr><td align="left">16:let __x9__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3479 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return trapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3506 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:return trapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3489 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x13__ = (+ __x13__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3494 [shape=diamond, label=<<font color="black">(&lt; __x15__ __x14__.length)</font>> color="black" fillcolor="white" style=filled]
  node3474 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= desc undefined)) (= desc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node3461 [shape=cds, label=<<font color="black">8:app __x4__ = (CreateListFromArrayLike trapResultArray (new [String, Symbol]))</font>> color="black" fillcolor="white" style=filled]
  node3461 -> node3462 [ color="black"]
  node3449 -> node3450 [ color="black"]
  node3468 -> node3469 [ color="black"]
  node3484 -> node3485 [ color="black"]
  node3497 -> node3498 [ color="black"]
  node3457 -> node3458 [ color="black"]
  node3471 -> node3472 [ color="black"]
  node3472 -> node3473 [ color="black"]
  node3502 -> node3499 [ color="black"]
  node3456 -> node3457 [label=<<font color="black">true</font>> color="black"]
  node3456 -> node3459 [label=<<font color="black">false</font>> color="black"]
  node3476 -> node3477 [ color="black"]
  node3501 -> node3499 [ color="black"]
  node3477 -> node3470 [ color="black"]
  node3486 -> node3487 [label=<<font color="black">true</font>> color="black"]
  node3486 -> node3490 [label=<<font color="black">false</font>> color="black"]
  node3504 -> node3505 [label=<<font color="black">true</font>> color="black"]
  node3504 -> node3506 [label=<<font color="black">false</font>> color="black"]
  node3452 -> node3453 [ color="black"]
  node3495 -> node3496 [ color="black"]
  node3467 -> node3468 [ color="black"]
  node3462 -> node3463 [ color="black"]
  node3473 -> node3474 [ color="black"]
  node3460 -> node3461 [ color="black"]
  node3470 -> node3471 [label=<<font color="black">true</font>> color="black"]
  node3470 -> node3478 [label=<<font color="black">false</font>> color="black"]
  node3482 -> node3483 [ color="black"]
  node3463 -> node3464 [ color="black"]
  node3478 -> node3479 [label=<<font color="black">true</font>> color="black"]
  node3478 -> node3480 [label=<<font color="black">false</font>> color="black"]
  node3475 -> node3477 [ color="black"]
  node3455 -> node3456 [ color="black"]
  node3488 -> node3486 [ color="black"]
  node3450 -> node3451 [label=<<font color="black">true</font>> color="black"]
  node3450 -> node3452 [label=<<font color="black">false</font>> color="black"]
  node3499 -> node3500 [label=<<font color="black">true</font>> color="black"]
  node3499 -> node3503 [label=<<font color="black">false</font>> color="black"]
  node3485 -> node3486 [ color="black"]
  node3454 -> node3455 [ color="black"]
  node3479 -> node3480 [ color="black"]
  node3464 -> node3465 [label=<<font color="black">true</font>> color="black"]
  node3464 -> node3466 [label=<<font color="black">false</font>> color="black"]
  node3465 -> node3466 [ color="black"]
  node3493 -> node3494 [ color="black"]
  node3503 -> node3494 [ color="black"]
  node3487 -> node3488 [label=<<font color="black">true</font>> color="black"]
  node3487 -> node3489 [label=<<font color="black">false</font>> color="black"]
  node3492 -> node3493 [ color="black"]
  node3474 -> node3475 [label=<<font color="black">true</font>> color="black"]
  node3474 -> node3476 [label=<<font color="black">false</font>> color="black"]
  node3469 -> node3470 [ color="black"]
  node3498 -> node3499 [ color="black"]
  node3459 -> node3460 [ color="black"]
  node3466 -> node3467 [ color="black"]
  node3491 -> node3492 [label=<<font color="black">true</font>> color="black"]
  node3491 -> node3493 [label=<<font color="black">false</font>> color="black"]
  node3453 -> node3454 [ color="black"]
  node3500 -> node3501 [label=<<font color="black">true</font>> color="black"]
  node3500 -> node3502 [label=<<font color="black">false</font>> color="black"]
  node3447 -> node3449 [ color="black"]
  node3480 -> node3481 [ color="black"]
  node3494 -> node3495 [label=<<font color="black">true</font>> color="black"]
  node3494 -> node3504 [label=<<font color="black">false</font>> color="black"]
  node3489 -> node3486 [ color="black"]
  node3505 -> node3506 [ color="black"]
  node3506 -> node3448 [ color="black"]
  node3496 -> node3497 [label=<<font color="black">true</font>> color="black"]
  node3496 -> node3498 [label=<<font color="black">false</font>> color="black"]
  node3483 -> node3484 [label=<<font color="black">true</font>> color="black"]
  node3483 -> node3485 [label=<<font color="black">false</font>> color="black"]
  node3490 -> node3481 [ color="black"]
  node3458 -> node3459 [ color="black"]
  node3481 -> node3482 [label=<<font color="black">true</font>> color="black"]
  node3481 -> node3491 [label=<<font color="black">false</font>> color="black"]
  node3451 -> node3452 [ color="black"]
}
