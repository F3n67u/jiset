{
  app __x0__ = (ToObject this)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let O = __x0__
  app __x1__ = (LengthOfArrayLike O)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let len = __x1__
  let argCount = argumentsList.length
  if (< 0i argCount) {
    if (< (- (** 2.0 53i) 1i) (+ len argCount)) throw INTRINSIC_TypeError else {}
    let k = len
    while (< 0i k) {
      app __x2__ = (ToString (- k 1i))
      if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
      let from = __x2__
      app __x3__ = (ToString (- (+ k argCount) 1i))
      if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
      let to = __x3__
      app __x4__ = (HasProperty O from)
      if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
      let fromPresent = __x4__
      if (= fromPresent true) {
        app __x5__ = (Get O from)
        if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
        let fromValue = __x5__
        app __x6__ = (Set O to fromValue true)
        if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
        __x6__
      } else {
        assert (= fromPresent false)
        app __x7__ = (DeletePropertyOrThrow O to)
        if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
        __x7__
      }
      k = (- k 1i)
    }
    let j = 0i
    let items = argumentsList
    while (< 0i items.length) {
      let E = (pop items 0i)
      app __x8__ = (ToString j)
      if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
      app __x9__ = (Set O __x8__ E true)
      if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
      __x9__
      j = (+ j 1i)
    }
  } else {}
  app __x10__ = (Set O "length" (+ len argCount) true)
  if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
  __x10__
  app __x11__ = (WrapCompletion (+ len argCount))
  return __x11__
}