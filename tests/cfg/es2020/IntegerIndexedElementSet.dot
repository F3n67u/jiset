digraph {
  node3021 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let numValue = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3017 [shape=cds, label=<<font color="black">1:app __x0__ = (Type index)</font>> color="black" fillcolor="white" style=filled]
  node3029 [shape=diamond, label=<<font color="black">(= [! __x4__] false)</font>> color="black" fillcolor="white" style=filled]
  node3022 [shape=cds, label=<<font color="black">app __x2__ = (ToNumber value)</font>> color="black" fillcolor="white" style=filled]
  node3018 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ Number)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3032 [shape=cds, label=<<font color="black">12:app __x5__ = (SetValueInBuffer buffer indexedPosition elementType numValue true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node3023 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let numValue = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3027 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3016 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3031 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let offset = O.ByteOffset</td></tr>
      <tr><td align="left">8:let arrayTypeName = O.TypedArrayName</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">10:let indexedPosition = (+ (* index elementSize) offset)</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let buffer = O.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3028 [shape=cds, label=<<font color="black">6:app __x4__ = (IsValidIntegerIndex O index)</font>> color="black" fillcolor="white" style=filled]
  node3033 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:__x5__</td></tr>
      <tr><td align="left">13:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3019 [shape=diamond, label=<<font color="black">(= O.ContentType CONST_BigInt)</font>> color="black" fillcolor="white" style=filled]
  node3026 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node3015 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3030 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3025 [shape=cds, label=<<font color="black">5:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node3020 [shape=cds, label=<<font color="black">app __x1__ = (ToBigInt value)</font>> color="black" fillcolor="white" style=filled]
  node3019 -> node3020 [label=<<font color="black">true</font>> color="black"]
  node3019 -> node3022 [label=<<font color="black">false</font>> color="black"]
  node3030 -> node3031 [ color="black"]
  node3022 -> node3023 [ color="black"]
  node3017 -> node3018 [ color="black"]
  node3029 -> node3030 [label=<<font color="black">true</font>> color="black"]
  node3029 -> node3031 [label=<<font color="black">false</font>> color="black"]
  node3021 -> node3024 [ color="black"]
  node3020 -> node3021 [ color="black"]
  node3031 -> node3032 [ color="black"]
  node3033 -> node3016 [ color="black"]
  node3018 -> node3019 [ color="black"]
  node3023 -> node3024 [ color="black"]
  node3025 -> node3026 [ color="black"]
  node3032 -> node3033 [ color="black"]
  node3027 -> node3028 [ color="black"]
  node3026 -> node3027 [label=<<font color="black">true</font>> color="black"]
  node3026 -> node3028 [label=<<font color="black">false</font>> color="black"]
  node3028 -> node3029 [ color="black"]
  node3024 -> node3025 [ color="black"]
  node3015 -> node3017 [ color="black"]
}
