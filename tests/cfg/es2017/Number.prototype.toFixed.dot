digraph {
  node11318 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let x = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11320 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let f = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:??? &quot;Let id:{z} be the String consisting of id:{f} + 1 - id:{k} occurrences of the code unit 0x0030 ( DIGIT ZERO ) .&quot;</td></tr>
      <tr><td align="left">17:let m = (+ z m)</td></tr>
      <tr><td align="left">18:let k = (+ f 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11314 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11325 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let s = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11324 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;NaN&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11328 [shape=diamond, label=<<font color="black">(! (&lt; x (** 10.0 21i)))</font>> color="black" fillcolor="white" style=filled]
  node11332 [shape=diamond, label=<<font color="black">(! (== f 0i))</font>> color="black" fillcolor="white" style=filled]
  node11316 [shape=cds, label=<<font color="black">app fractionDigits = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11334 [shape=diamond, label=<<font color="black">(! (&lt; f k))</font>> color="black" fillcolor="white" style=filled]
  node11322 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11326 [shape=diamond, label=<<font color="black">(&lt; x 0i)</font>> color="black" fillcolor="white" style=filled]
  node11330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let m = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11331 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:??? &quot;Let id:{n} be an integer for which the exact mathematical value of id:{n} &divide; 10 sup:{id:{f}} - id:{x} is as close to zero as possible . If there are two such id:{n} , pick the larger id:{n} .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;If id:{n} = 0 , let id:{m} be the String code:{\&quot;0\&quot;} . Otherwise , let id:{m} be the String consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11321 [shape=diamond, label=<<font color="black">(|| (&lt; f 0i) (&lt; 20i f))</font>> color="black" fillcolor="white" style=filled]
  node11315 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11336 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;Let id:{a} be the first id:{k} - id:{f} elements of id:{m} , and let id:{b} be the remaining id:{f} elements of id:{m} .&quot;</td></tr>
      <tr><td align="left">20:??? &quot;Let id:{m} be the concatenation of the three Strings id:{a} , code:{\&quot;.\&quot;} , and id:{b} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11323 [shape=diamond, label=<<font color="black">(= x NaN)</font>> color="black" fillcolor="white" style=filled]
  node11333 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let k = m.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11329 [shape=cds, label=<<font color="black">9:app __x2__ = (ToString x)</font>> color="black" fillcolor="white" style=filled]
  node11327 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let s = &quot;-&quot;</td></tr>
      <tr><td align="left">7:let x = (- x)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11337 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:return (+ s m)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11319 [shape=cds, label=<<font color="black">1:app __x1__ = (ToInteger fractionDigits)</font>> color="black" fillcolor="white" style=filled]
  node11317 [shape=cds, label=<<font color="black">0:app __x0__ = (thisNumberValue this)</font>> color="black" fillcolor="white" style=filled]
  node11314 -> node11316 [ color="black"]
  node11324 -> node11325 [ color="black"]
  node11325 -> node11326 [ color="black"]
  node11326 -> node11327 [label=<<font color="black">true</font>> color="black"]
  node11326 -> node11328 [label=<<font color="black">false</font>> color="black"]
  node11316 -> node11317 [ color="black"]
  node11332 -> node11333 [label=<<font color="black">true</font>> color="black"]
  node11332 -> node11337 [label=<<font color="black">false</font>> color="black"]
  node11333 -> node11334 [ color="black"]
  node11317 -> node11318 [ color="black"]
  node11319 -> node11320 [ color="black"]
  node11321 -> node11322 [label=<<font color="black">true</font>> color="black"]
  node11321 -> node11323 [label=<<font color="black">false</font>> color="black"]
  node11334 -> node11335 [label=<<font color="black">true</font>> color="black"]
  node11334 -> node11336 [label=<<font color="black">false</font>> color="black"]
  node11336 -> node11337 [ color="black"]
  node11327 -> node11328 [ color="black"]
  node11337 -> node11315 [ color="black"]
  node11331 -> node11332 [ color="black"]
  node11328 -> node11329 [label=<<font color="black">true</font>> color="black"]
  node11328 -> node11331 [label=<<font color="black">false</font>> color="black"]
  node11322 -> node11323 [ color="black"]
  node11320 -> node11321 [ color="black"]
  node11329 -> node11330 [ color="black"]
  node11335 -> node11336 [ color="black"]
  node11323 -> node11324 [label=<<font color="black">true</font>> color="black"]
  node11323 -> node11325 [label=<<font color="black">false</font>> color="black"]
  node11318 -> node11319 [ color="black"]
  node11330 -> node11337 [ color="black"]
}
