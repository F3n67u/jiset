["If", "the", {
  "id": "LeftFirst"
}, "flag", "is", {
  "value": "true"
}, ",", "then", true, "Let", {
  "id": "px"
}, "be", "?", "ToPrimitive", "(", {
  "id": "x"
}, ",", "hint", "Number", ")", ".", {
  "k": 1
}, "Let", {
  "id": "py"
}, "be", "?", "ToPrimitive", "(", {
  "id": "y"
}, ",", "hint", "Number", ")", ".", {
  "k": 2
}, false, {
  "k": 0
}, "Else", ",", true, "NOTE", ":", "The", "order", "of", "evaluation", "needs", "to", "be", "reversed", "to", "preserve", "left", "to", "right", "evaluation", ".", {
  "k": 4
}, "Let", {
  "id": "py"
}, "be", "?", "ToPrimitive", "(", {
  "id": "y"
}, ",", "hint", "Number", ")", ".", {
  "k": 5
}, "Let", {
  "id": "px"
}, "be", "?", "ToPrimitive", "(", {
  "id": "x"
}, ",", "hint", "Number", ")", ".", {
  "k": 6
}, false, {
  "k": 3
}, "If", "Type", "(", {
  "id": "px"
}, ")", "is", "String", "and", "Type", "(", {
  "id": "py"
}, ")", "is", "String", ",", "then", true, "If", "IsStringPrefix", "(", {
  "id": "py"
}, ",", {
  "id": "px"
}, ")", "is", {
  "value": "true"
}, ",", "return", {
  "value": "false"
}, ".", {
  "k": 8
}, "If", "IsStringPrefix", "(", {
  "id": "px"
}, ",", {
  "id": "py"
}, ")", "is", {
  "value": "true"
}, ",", "return", {
  "value": "true"
}, ".", {
  "k": 9
}, "Let", {
  "id": "k"
}, "be", "the", "smallest", "nonnegative", "integer", "such", "that", "the", "code", "unit", "at", "index", {
  "id": "k"
}, "within", {
  "id": "px"
}, "is", "different", "from", "the", "code", "unit", "at", "index", {
  "id": "k"
}, "within", {
  "id": "py"
}, ".", "(", "There", "must", "be", "such", "a", {
  "id": "k"
}, ",", "for", "neither", "String", "is", "a", "prefix", "of", "the", "other", ".", ")", {
  "k": 10
}, "Let", {
  "id": "m"
}, "be", "the", "integer", "that", "is", "the", "numeric", "value", "of", "the", "code", "unit", "at", "index", {
  "id": "k"
}, "within", {
  "id": "px"
}, ".", {
  "k": 11
}, "Let", {
  "id": "n"
}, "be", "the", "integer", "that", "is", "the", "numeric", "value", "of", "the", "code", "unit", "at", "index", {
  "id": "k"
}, "within", {
  "id": "py"
}, ".", {
  "k": 12
}, "If", {
  "id": "m"
}, "<", {
  "id": "n"
}, ",", "return", {
  "value": "true"
}, ".", "Otherwise", ",", "return", {
  "value": "false"
}, ".", {
  "k": 13
}, false, {
  "k": 7
}, "Else", ",", true, "If", "Type", "(", {
  "id": "px"
}, ")", "is", "BigInt", "and", "Type", "(", {
  "id": "py"
}, ")", "is", "String", ",", "then", true, "Let", {
  "id": "ny"
}, "be", "!", "StringToBigInt", "(", {
  "id": "py"
}, ")", ".", {
  "k": 16
}, "If", {
  "id": "ny"
}, "is", {
  "value": "NaN"
}, ",", "return", {
  "value": "undefined"
}, ".", {
  "k": 17
}, "Return", "BigInt", ":", ":", "lessThan", "(", {
  "id": "px"
}, ",", {
  "id": "ny"
}, ")", ".", {
  "k": 18
}, false, {
  "k": 15
}, "If", "Type", "(", {
  "id": "px"
}, ")", "is", "String", "and", "Type", "(", {
  "id": "py"
}, ")", "is", "BigInt", ",", "then", true, "Let", {
  "id": "nx"
}, "be", "!", "StringToBigInt", "(", {
  "id": "px"
}, ")", ".", {
  "k": 20
}, "If", {
  "id": "nx"
}, "is", {
  "value": "NaN"
}, ",", "return", {
  "value": "undefined"
}, ".", {
  "k": 21
}, "Return", "BigInt", ":", ":", "lessThan", "(", {
  "id": "nx"
}, ",", {
  "id": "py"
}, ")", ".", {
  "k": 22
}, false, {
  "k": 19
}, "NOTE", ":", "Because", {
  "id": "px"
}, "and", {
  "id": "py"
}, "are", "primitive", "values", ",", "evaluation", "order", "is", "not", "important", ".", {
  "k": 23
}, "Let", {
  "id": "nx"
}, "be", "?", "ToNumeric", "(", {
  "id": "px"
}, ")", ".", {
  "k": 24
}, "Let", {
  "id": "ny"
}, "be", "?", "ToNumeric", "(", {
  "id": "py"
}, ")", ".", {
  "k": 25
}, "If", "Type", "(", {
  "id": "nx"
}, ")", "is", "the", "same", "as", "Type", "(", {
  "id": "ny"
}, ")", ",", "return", "Type", "(", {
  "id": "nx"
}, ")", ":", ":", "lessThan", "(", {
  "id": "nx"
}, ",", {
  "id": "ny"
}, ")", ".", {
  "k": 26
}, "Assert", ":", "Type", "(", {
  "id": "nx"
}, ")", "is", "BigInt", "and", "Type", "(", {
  "id": "ny"
}, ")", "is", "Number", ",", "or", "Type", "(", {
  "id": "nx"
}, ")", "is", "Number", "and", "Type", "(", {
  "id": "ny"
}, ")", "is", "BigInt", ".", {
  "k": 27
}, "If", {
  "id": "nx"
}, "or", {
  "id": "ny"
}, "is", {
  "value": "NaN"
}, ",", "return", {
  "value": "undefined"
}, ".", {
  "k": 28
}, "If", {
  "id": "nx"
}, "is", {
  "value": "-∞"
}, "or", {
  "id": "ny"
}, "is", {
  "value": "+∞"
}, ",", "return", {
  "value": "true"
}, ".", {
  "k": 29
}, "If", {
  "id": "nx"
}, "is", {
  "value": "+∞"
}, "or", {
  "id": "ny"
}, "is", {
  "value": "-∞"
}, ",", "return", {
  "value": "false"
}, ".", {
  "k": 30
}, "If", "the", "mathematical", "value", "of", {
  "id": "nx"
}, "is", "less", "than", "the", "mathematical", "value", "of", {
  "id": "ny"
}, ",", "return", {
  "value": "true"
}, ";", "otherwise", "return", {
  "value": "false"
}, ".", {
  "k": 31
}, false, {
  "k": 14
}]