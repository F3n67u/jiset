["Let", {
  "id": "env"
}, "be", "the", "LexicalEnvironment", "of", "the", "running", "execution", "context", ".", {
  "k": 0
}, "Let", {
  "id": "classScope"
}, "be", "NewDeclarativeEnvironment", "(", {
  "id": "env"
}, ")", ".", {
  "k": 1
}, "If", {
  "id": "classBinding"
}, "is", "not", {
  "value": "undefined"
}, ",", "then", true, "Perform", {
  "id": "classScope"
}, ".", "CreateImmutableBinding", "(", {
  "id": "classBinding"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 3
}, false, {
  "k": 2
}, "If", {
  "nt": "ClassHeritage"
}, "is", "not", "present", ",", "then", true, "Let", {
  "id": "protoParent"
}, "be", "%", "Object", ".", "prototype", "%", ".", {
  "k": 5
}, "Let", {
  "id": "constructorParent"
}, "be", "%", "Function", ".", "prototype", "%", ".", {
  "k": 6
}, false, {
  "k": 4
}, "Else", ",", true, "Set", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", "to", {
  "id": "classScope"
}, ".", {
  "k": 8
}, "Let", {
  "id": "superclassRef"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "ClassHeritage"
}, ".", {
  "k": 9
}, "Set", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", "to", {
  "id": "env"
}, ".", {
  "k": 10
}, "Let", {
  "id": "superclass"
}, "be", "?", "GetValue", "(", {
  "id": "superclassRef"
}, ")", ".", {
  "k": 11
}, "If", {
  "id": "superclass"
}, "is", {
  "value": "null"
}, ",", "then", true, "Let", {
  "id": "protoParent"
}, "be", {
  "value": "null"
}, ".", {
  "k": 13
}, "Let", {
  "id": "constructorParent"
}, "be", "%", "Function", ".", "prototype", "%", ".", {
  "k": 14
}, false, {
  "k": 12
}, "Else", "if", "IsConstructor", "(", {
  "id": "superclass"
}, ")", "is", {
  "value": "false"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 15
}, "Else", ",", true, "Let", {
  "id": "protoParent"
}, "be", "?", "Get", "(", {
  "id": "superclass"
}, ",", {
  "value": "\"prototype\""
}, ")", ".", {
  "k": 17
}, "If", "Type", "(", {
  "id": "protoParent"
}, ")", "is", "neither", "Object", "nor", "Null", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 18
}, "Let", {
  "id": "constructorParent"
}, "be", {
  "id": "superclass"
}, ".", {
  "k": 19
}, false, {
  "k": 16
}, false, {
  "k": 7
}, "Let", {
  "id": "proto"
}, "be", "!", "OrdinaryObjectCreate", "(", {
  "id": "protoParent"
}, ")", ".", {
  "k": 20
}, "If", {
  "nt": "ClassBody"
}, "is", "not", "present", ",", "let", {
  "id": "constructor"
}, "be", {
  "const": "empty"
}, ".", {
  "k": 21
}, "Else", ",", "let", {
  "id": "constructor"
}, "be", "ConstructorMethod", "of", {
  "nt": "ClassBody"
}, ".", {
  "k": 22
}, "If", {
  "id": "constructor"
}, "is", {
  "const": "empty"
}, ",", "then", true, "If", {
  "nt": "ClassHeritage"
}, "is", "present", ",", "then", true, "Let", {
  "id": "constructorText"
}, "be", "the", "source", "text", true, {
  "k": 26
}, false, {
  "k": 25
}, false, {
  "k": 24
}, "Else", ",", true, "Let", {
  "id": "constructorText"
}, "be", "the", "source", "text", true, {
  "k": 29
}, false, {
  "k": 28
}, false, {
  "k": 27
}, "Set", {
  "id": "constructor"
}, "to", "ParseText", "(", {
  "id": "constructorText"
}, ",", "|", "MethodDefinition", "[", "~", "Yield", ",", "~", "Await", "]", "|", ")", ".", {
  "k": 30
}, "Assert", ":", {
  "id": "constructor"
}, "is", "a", "Parse", "Node", ".", {
  "k": 31
}, false, {
  "k": 23
}, "Set", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", "to", {
  "id": "classScope"
}, ".", {
  "k": 32
}, "Let", {
  "id": "constructorInfo"
}, "be", "!", "DefineMethod", "of", {
  "id": "constructor"
}, "with", "arguments", {
  "id": "proto"
}, "and", {
  "id": "constructorParent"
}, ".", {
  "k": 33
}, "Let", {
  "id": "F"
}, "be", {
  "id": "constructorInfo"
}, ".", "[", "[", "Closure", "]", "]", ".", {
  "k": 34
}, "Perform", "SetFunctionName", "(", {
  "id": "F"
}, ",", {
  "id": "className"
}, ")", ".", {
  "k": 35
}, "Perform", "MakeConstructor", "(", {
  "id": "F"
}, ",", {
  "value": "false"
}, ",", {
  "id": "proto"
}, ")", ".", {
  "k": 36
}, "If", {
  "nt": "ClassHeritage"
}, "is", "present", ",", "set", {
  "id": "F"
}, ".", "[", "[", "ConstructorKind", "]", "]", "to", {
  "const": "derived"
}, ".", {
  "k": 37
}, "Perform", "MakeClassConstructor", "(", {
  "id": "F"
}, ")", ".", {
  "k": 38
}, "Perform", "CreateMethodProperty", "(", {
  "id": "proto"
}, ",", {
  "value": "\"constructor\""
}, ",", {
  "id": "F"
}, ")", ".", {
  "k": 39
}, "If", {
  "nt": "ClassBody"
}, "is", "not", "present", ",", "let", {
  "id": "methods"
}, "be", "a", "new", "empty", "List", ".", {
  "k": 40
}, "Else", ",", "let", {
  "id": "methods"
}, "be", "NonConstructorMethodDefinitions", "of", {
  "nt": "ClassBody"
}, ".", {
  "k": 41
}, "For", "each", {
  "nt": "ClassElement"
}, {
  "id": "m"
}, "of", {
  "id": "methods"
}, ",", "do", true, "If", "IsStatic", "of", {
  "id": "m"
}, "is", {
  "value": "false"
}, ",", "then", true, "Let", {
  "id": "status"
}, "be", "PropertyDefinitionEvaluation", "of", {
  "id": "m"
}, "with", "arguments", {
  "id": "proto"
}, "and", {
  "value": "false"
}, ".", {
  "k": 44
}, false, {
  "k": 43
}, "Else", ",", true, "Let", {
  "id": "status"
}, "be", "PropertyDefinitionEvaluation", "of", {
  "id": "m"
}, "with", "arguments", {
  "id": "F"
}, "and", {
  "value": "false"
}, ".", {
  "k": 46
}, false, {
  "k": 45
}, "If", {
  "id": "status"
}, "is", "an", "abrupt", "completion", ",", "then", true, "Set", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", "to", {
  "id": "env"
}, ".", {
  "k": 48
}, "Return", "Completion", "(", {
  "id": "status"
}, ")", ".", {
  "k": 49
}, false, {
  "k": 47
}, false, {
  "k": 42
}, "Set", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", "to", {
  "id": "env"
}, ".", {
  "k": 50
}, "If", {
  "id": "classBinding"
}, "is", "not", {
  "value": "undefined"
}, ",", "then", true, "Perform", {
  "id": "classScope"
}, ".", "InitializeBinding", "(", {
  "id": "classBinding"
}, ",", {
  "id": "F"
}, ")", ".", {
  "k": 52
}, false, {
  "k": 51
}, "Return", {
  "id": "F"
}, ".", {
  "k": 53
}]