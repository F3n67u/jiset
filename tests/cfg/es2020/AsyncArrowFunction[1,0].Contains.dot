digraph {
  node10277 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10282 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node10286 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10278 [shape=cds, label=<<font color="black">1:access __x0__ = (CoverCallExpressionAndAsyncArrowHead &quot;CoveredAsyncArrowHead&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10281 [shape=cds, label=<<font color="black">2:app __x2__ = (__x1__ symbol)</font>> color="black" fillcolor="white" style=filled]
  node10285 [shape=cds, label=<<font color="black">3:app __x4__ = (__x3__ symbol)</font>> color="black" fillcolor="white" style=filled]
  node10274 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10284 [shape=cds, label=<<font color="black">3:access __x3__ = (AsyncConciseBody &quot;Contains&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10279 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let head = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10275 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10283 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10280 [shape=cds, label=<<font color="black">2:access __x1__ = (head &quot;Contains&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10276 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (|| (is-instance-of symbol NewTarget) (is-instance-of symbol SuperProperty)) (is-instance-of symbol SuperCall)) (= symbol &quot;super&quot;)) (= symbol &quot;this&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node10276 -> node10277 [label=<<font color="black">true</font>> color="black"]
  node10276 -> node10278 [label=<<font color="black">false</font>> color="black"]
  node10282 -> node10283 [label=<<font color="black">true</font>> color="black"]
  node10282 -> node10284 [label=<<font color="black">false</font>> color="black"]
  node10283 -> node10284 [ color="black"]
  node10285 -> node10286 [ color="black"]
  node10274 -> node10276 [ color="black"]
  node10279 -> node10280 [ color="black"]
  node10286 -> node10275 [ color="black"]
  node10278 -> node10279 [ color="black"]
  node10277 -> node10278 [ color="black"]
  node10284 -> node10285 [ color="black"]
  node10280 -> node10281 [ color="black"]
  node10281 -> node10282 [ color="black"]
}
