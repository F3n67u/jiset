digraph {
  node16413 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16409 [shape=cds, label=<<font color="black">5:app __x1__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node16406 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node16414 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node16410 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promise = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16405 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node16415 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node16404 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16408 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = (new PromiseCapability(&quot;Promise&quot; -&gt; undefined, &quot;Resolve&quot; -&gt; undefined, &quot;Reject&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:let executor = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">4:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16403 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16407 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16412 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">9:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16416 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16411 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node16407 -> node16408 [ color="black"]
  node16408 -> node16409 [ color="black"]
  node16405 -> node16406 [ color="black"]
  node16412 -> node16413 [label=<<font color="black">true</font>> color="black"]
  node16412 -> node16414 [label=<<font color="black">false</font>> color="black"]
  node16414 -> node16415 [ color="black"]
  node16417 -> node16404 [ color="black"]
  node16413 -> node16414 [ color="black"]
  node16403 -> node16405 [ color="black"]
  node16415 -> node16416 [label=<<font color="black">true</font>> color="black"]
  node16415 -> node16417 [label=<<font color="black">false</font>> color="black"]
  node16410 -> node16411 [ color="black"]
  node16411 -> node16412 [ color="black"]
  node16416 -> node16417 [ color="black"]
  node16409 -> node16410 [ color="black"]
  node16406 -> node16407 [label=<<font color="black">true</font>> color="black"]
  node16406 -> node16408 [label=<<font color="black">false</font>> color="black"]
}
