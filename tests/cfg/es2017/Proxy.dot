digraph {
  node16898 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16902 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16899 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16903 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16900 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16905 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16904 [shape=cds, label=<<font color="black">1:app __x0__ = (ProxyCreate target handler)</font>> color="black" fillcolor="white" style=filled]
  node16901 [shape=cds, label=<<font color="black">app handler = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16901 -> node16902 [ color="black"]
  node16903 -> node16904 [ color="black"]
  node16904 -> node16905 [ color="black"]
  node16905 -> node16899 [ color="black"]
  node16900 -> node16901 [ color="black"]
  node16898 -> node16900 [ color="black"]
  node16902 -> node16903 [label=<<font color="black">true</font>> color="black"]
  node16902 -> node16904 [label=<<font color="black">false</font>> color="black"]
}
