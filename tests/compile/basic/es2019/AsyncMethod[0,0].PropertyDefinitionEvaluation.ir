{
  access __x0__ = (PropertyName "Evaluation")
  let propKey = __x0__
  [? propKey]
  if true let strict = true else let strict = false
  access __x1__ = (GLOBAL_context "LexicalEnvironment")
  let scope = __x1__
  app __x2__ = (AsyncFunctionCreate CONST_Method UniqueFormalParameters AsyncFunctionBody scope strict)
  let closure = [! __x2__]
  app __x3__ = (MakeMethod closure object)
  [! __x3__]
  app __x4__ = (SetFunctionName closure propKey)
  [! __x4__]
  closure.SourceText = (get-syntax AsyncMethod)
  let desc = (new PropertyDescriptor("Value" -> closure, "Writable" -> true, "Enumerable" -> enumerable, "Configurable" -> true))
  app __x5__ = (DefinePropertyOrThrow object propKey desc)
  return [? __x5__]
}