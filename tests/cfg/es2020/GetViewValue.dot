digraph {
  node17290 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node17302 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17298 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node17289 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">1:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17296 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17286 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17293 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:isLittleEndian = [! __x2__]</td></tr>
      <tr><td align="left">4:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17299 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17292 [shape=cds, label=<<font color="black">3:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17287 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17300 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17294 [shape=cds, label=<<font color="black">5:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17301 [shape=cds, label=<<font color="black">11:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false CONST_Unordered isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17291 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">7:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17295 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node17288 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot view &quot;DataView&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17297 -> node17298 [ color="black"]
  node17290 -> node17291 [ color="black"]
  node17300 -> node17301 [ color="black"]
  node17296 -> node17297 [ color="black"]
  node17286 -> node17288 [ color="black"]
  node17295 -> node17296 [label=<<font color="black">true</font>> color="black"]
  node17295 -> node17297 [label=<<font color="black">false</font>> color="black"]
  node17302 -> node17287 [ color="black"]
  node17289 -> node17290 [ color="black"]
  node17294 -> node17295 [ color="black"]
  node17293 -> node17294 [ color="black"]
  node17299 -> node17300 [ color="black"]
  node17288 -> node17289 [ color="black"]
  node17298 -> node17299 [label=<<font color="black">true</font>> color="black"]
  node17298 -> node17300 [label=<<font color="black">false</font>> color="black"]
  node17292 -> node17293 [ color="black"]
  node17291 -> node17292 [ color="black"]
  node17301 -> node17302 [ color="black"]
}
