digraph {
  node16994 [shape=cds, label=<<font color="black">4:app __x1__ = (Get map &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16985 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16989 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16986 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16991 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let map = [? __x0__]</td></tr>
      <tr><td align="left">2:map.MapData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16987 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16993 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16992 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node16996 [shape=cds, label=<<font color="black">5:app __x2__ = (AddEntriesFromIterable map iterable adder)</font>> color="black" fillcolor="white" style=filled]
  node16997 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16990 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget &quot;%Map.prototype%&quot; (new [&quot;MapData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16988 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16995 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16997 -> node16986 [ color="black"]
  node16985 -> node16987 [ color="black"]
  node16988 -> node16989 [label=<<font color="black">true</font>> color="black"]
  node16988 -> node16990 [label=<<font color="black">false</font>> color="black"]
  node16990 -> node16991 [ color="black"]
  node16992 -> node16993 [label=<<font color="black">true</font>> color="black"]
  node16992 -> node16994 [label=<<font color="black">false</font>> color="black"]
  node16989 -> node16990 [ color="black"]
  node16996 -> node16997 [ color="black"]
  node16991 -> node16992 [ color="black"]
  node16994 -> node16995 [ color="black"]
  node16995 -> node16996 [ color="black"]
  node16993 -> node16994 [ color="black"]
  node16987 -> node16988 [ color="black"]
}
