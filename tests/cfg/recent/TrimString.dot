digraph {
  node14515 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let str = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14516 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString str)</font>> color="black" fillcolor="white" style=filled]
  node14517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
      <tr><td align="left">2:??? &quot;If id:{where} is const:{start} , let id:{T} be the String value that is a copy of id:{S} with leading white space removed .&quot;</td></tr>
      <tr><td align="left">3:??? &quot;Else if id:{where} is const:{end} , let id:{T} be the String value that is a copy of id:{S} with trailing white space removed .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;Else , in:{} out:{}&quot;</td></tr>
      <tr><td align="left">7:return T</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14514 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible string)</font>> color="black" fillcolor="white" style=filled]
  node14512 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14513 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14514 -> node14515 [ color="black"]
  node14517 -> node14513 [ color="black"]
  node14512 -> node14514 [ color="black"]
  node14516 -> node14517 [ color="black"]
  node14515 -> node14516 [ color="black"]
}
