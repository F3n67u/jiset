digraph {
  node6707 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let keyResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6705 [shape=cds, label=<<font color="black">0:access __x0__ = (ForDeclaration &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6704 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6706 [shape=cds, label=<<font color="black">0:app __x1__ = (ForInOfHeadEvaluation __x0__ AssignmentExpression CONST_iterate)</font>> color="black" fillcolor="white" style=filled]
  node6703 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6708 [shape=cds, label=<<font color="black">1:app __x2__ = (ForInOfBodyEvaluation ForDeclaration Statement keyResult CONST_iterate CONST_lexicalBinding labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6709 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6709 -> node6704 [ color="black"]
  node6708 -> node6709 [ color="black"]
  node6703 -> node6705 [ color="black"]
  node6707 -> node6708 [ color="black"]
  node6705 -> node6706 [ color="black"]
  node6706 -> node6707 [ color="black"]
}
