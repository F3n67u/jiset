digraph {
  node16223 [shape=cds, label=<<font color="black">0:app __x0__ = (Type map)</font>> color="black" fillcolor="white" style=filled]
  node16219 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16227 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16220 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16226 [shape=diamond, label=<<font color="black">(= map.MapData absent)</font>> color="black" fillcolor="white" style=filled]
  node16221 [shape=cds, label=<<font color="black">app map = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16225 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16228 [shape=cds, label=<<font color="black">2:app __x1__ = (ObjectCreate INTRINSIC_MapIteratorPrototype (new [&quot;Map&quot;, &quot;MapNextIndex&quot;, &quot;MapIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16229 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = __x1__</td></tr>
      <tr><td align="left">3:iterator.Map = map</td></tr>
      <tr><td align="left">4:iterator.MapNextIndex = 0i</td></tr>
      <tr><td align="left">5:iterator.MapIterationKind = kind</td></tr>
      <tr><td align="left">6:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16224 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16222 [shape=cds, label=<<font color="black">app kind = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16221 -> node16222 [ color="black"]
  node16219 -> node16221 [ color="black"]
  node16228 -> node16229 [ color="black"]
  node16222 -> node16223 [ color="black"]
  node16225 -> node16226 [ color="black"]
  node16226 -> node16227 [label=<<font color="black">true</font>> color="black"]
  node16226 -> node16228 [label=<<font color="black">false</font>> color="black"]
  node16227 -> node16228 [ color="black"]
  node16224 -> node16225 [label=<<font color="black">true</font>> color="black"]
  node16224 -> node16226 [label=<<font color="black">false</font>> color="black"]
  node16229 -> node16220 [ color="black"]
  node16223 -> node16224 [ color="black"]
}
