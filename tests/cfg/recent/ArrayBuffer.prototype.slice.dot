digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">1:app __x0__ = (RequireInternalSlot O &quot;ArrayBufferData&quot;)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=cds, label=<<font color="black">3:app __x2__ = (IsDetachedBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node56 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let fromBuf = O.ArrayBufferData</td></tr>
      <tr><td align="left">24:let toBuf = new.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node42 [shape=cds, label=<<font color="black">17:app __x13__ = (IsSharedArrayBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node37 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let ctor = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=cds, label=<<font color="black">app __x6__ = (ToIntegerOrInfinity end)</font>> color="black" fillcolor="white" style=filled]
  node52 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=cds, label=<<font color="black">5:app __x3__ = (ToIntegerOrInfinity start)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node46 [shape=diamond, label=<<font color="black">(= __x14__ true)</font>> color="black" fillcolor="white" style=filled]
  node57 [shape=cds, label=<<font color="black">25:app __x17__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)</font>> color="black" fillcolor="white" style=filled]
  node29 [shape=diamond, label=<<font color="black">(&lt; relativeEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node21 [shape=cds, label=<<font color="black">app __x5__ = (min relativeStart len)</font>> color="black" fillcolor="white" style=filled]
  node33 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node38 [shape=cds, label=<<font color="black">15:app __x11__ = (Construct ctor (new [newLen]))</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node53 [shape=cds, label=<<font color="black">22:app __x16__ = (IsDetachedBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let len = O.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node41 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:[? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node45 [shape=cds, label=<<font color="black">18:app __x14__ = (IsDetachedBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node32 [shape=cds, label=<<font color="black">app __x8__ = (min relativeEnd len)</font>> color="black" fillcolor="white" style=filled]
  node34 [shape=cds, label=<<font color="black">13:app __x9__ = (max (- final first) 0i)</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=diamond, label=<<font color="black">(= relativeEnd -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node54 [shape=diamond, label=<<font color="black">(= __x16__ true)</font>> color="black" fillcolor="white" style=filled]
  node49 [shape=diamond, label=<<font color="black">(= __x15__ true)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">2:app __x1__ = (IsSharedArrayBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node39 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let new = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node35 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let newLen = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node48 [shape=cds, label=<<font color="black">19:app __x15__ = (SameValue new O)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=diamond, label=<<font color="black">(&lt; relativeStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node50 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=diamond, label=<<font color="black">(= relativeStart -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node43 [shape=diamond, label=<<font color="black">(= __x13__ true)</font>> color="black" fillcolor="white" style=filled]
  node40 [shape=cds, label=<<font color="black">16:app __x12__ = (RequireInternalSlot new &quot;ArrayBufferData&quot;)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node55 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node58 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:__x17__</td></tr>
      <tr><td align="left">26:return new</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node36 [shape=cds, label=<<font color="black">14:app __x10__ = (SpeciesConstructor O INTRINSIC_ArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node30 [shape=cds, label=<<font color="black">app __x7__ = (max (+ len relativeEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node51 [shape=diamond, label=<<font color="black">(&lt; new.ArrayBufferByteLength newLen)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=cds, label=<<font color="black">app __x4__ = (max (+ len relativeStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node47 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let relativeStart = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 -> node12 [label=<<font color="black">true</font>> color="black"]
  node11 -> node13 [label=<<font color="black">false</font>> color="black"]
  node12 -> node13 [ color="black"]
  node14 -> node15 [ color="black"]
  node25 -> node26 [ color="black"]
  node21 -> node22 [ color="black"]
  node23 -> node24 [label=<<font color="black">true</font>> color="black"]
  node23 -> node25 [label=<<font color="black">false</font>> color="black"]
  node24 -> node27 [ color="black"]
  node48 -> node49 [ color="black"]
  node8 -> node9 [label=<<font color="black">true</font>> color="black"]
  node8 -> node10 [label=<<font color="black">false</font>> color="black"]
  node38 -> node39 [ color="black"]
  node5 -> node6 [ color="black"]
  node53 -> node54 [ color="black"]
  node3 -> node4 [ color="black"]
  node39 -> node40 [ color="black"]
  node7 -> node8 [ color="black"]
  node42 -> node43 [ color="black"]
  node34 -> node35 [ color="black"]
  node49 -> node50 [label=<<font color="black">true</font>> color="black"]
  node49 -> node51 [label=<<font color="black">false</font>> color="black"]
  node58 -> node1 [ color="black"]
  node51 -> node52 [label=<<font color="black">true</font>> color="black"]
  node51 -> node53 [label=<<font color="black">false</font>> color="black"]
  node54 -> node55 [label=<<font color="black">true</font>> color="black"]
  node54 -> node56 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node55 -> node56 [ color="black"]
  node19 -> node20 [ color="black"]
  node13 -> node14 [ color="black"]
  node35 -> node36 [ color="black"]
  node57 -> node58 [ color="black"]
  node46 -> node47 [label=<<font color="black">true</font>> color="black"]
  node46 -> node48 [label=<<font color="black">false</font>> color="black"]
  node45 -> node46 [ color="black"]
  node0 -> node2 [ color="black"]
  node36 -> node37 [ color="black"]
  node52 -> node53 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node9 -> node10 [ color="black"]
  node31 -> node34 [ color="black"]
  node28 -> node34 [ color="black"]
  node20 -> node23 [ color="black"]
  node44 -> node45 [ color="black"]
  node37 -> node38 [ color="black"]
  node40 -> node41 [ color="black"]
  node30 -> node31 [ color="black"]
  node26 -> node27 [ color="black"]
  node27 -> node28 [label=<<font color="black">true</font>> color="black"]
  node27 -> node29 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [ color="black"]
  node29 -> node30 [label=<<font color="black">true</font>> color="black"]
  node29 -> node32 [label=<<font color="black">false</font>> color="black"]
  node16 -> node17 [label=<<font color="black">true</font>> color="black"]
  node16 -> node18 [label=<<font color="black">false</font>> color="black"]
  node47 -> node48 [ color="black"]
  node50 -> node51 [ color="black"]
  node43 -> node44 [label=<<font color="black">true</font>> color="black"]
  node43 -> node45 [label=<<font color="black">false</font>> color="black"]
  node4 -> node5 [ color="black"]
  node17 -> node23 [ color="black"]
  node56 -> node57 [ color="black"]
  node18 -> node19 [label=<<font color="black">true</font>> color="black"]
  node18 -> node21 [label=<<font color="black">false</font>> color="black"]
  node32 -> node33 [ color="black"]
  node33 -> node34 [ color="black"]
  node41 -> node42 [ color="black"]
}
