digraph {
  node18336 [shape=diamond, label=<<font color="black">(&lt; index len)</font>> color="black" fillcolor="white" style=filled]
  node18333 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:append value -&gt; state.Stack</td></tr>
      <tr><td align="left">2:let stepback = state.Indent</td></tr>
      <tr><td align="left">3:state.Indent = (+ state.Indent state.Gap)</td></tr>
      <tr><td align="left">4:let partial = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18348 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let separator = (+ (+ &quot;,&quot; &quot;\n&quot;) state.Indent)</td></tr>
      <tr><td align="left">22:??? &quot;Let id:{properties} be the String value formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with id:{separator} . The id:{separator} String is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">23:let final = (+ (+ (+ (+ (+ (+ &quot;[&quot; &quot;\n&quot;) state.Indent) properties) &quot;\n&quot;) stepback) &quot;]&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18344 [shape=diamond, label=<<font color="black">(= partial.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node18332 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18340 [shape=diamond, label=<<font color="black">(= strP undefined)</font>> color="black" fillcolor="white" style=filled]
  node18338 [shape=cds, label=<<font color="black">8:app __x2__ = (SerializeJSONProperty state [! __x1__] value)</font>> color="black" fillcolor="white" style=filled]
  node18347 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:??? &quot;Let id:{properties} be the String value formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with the code unit 0x002C ( COMMA ) . A comma is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">19:let final = (+ (+ &quot;[&quot; properties) &quot;]&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18331 [shape=diamond, label=<<font color="black">(contains state.Stack value)</font>> color="black" fillcolor="white" style=filled]
  node18335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let len = [? __x0__]</td></tr>
      <tr><td align="left">6:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18346 [shape=diamond, label=<<font color="black">(= state.Gap &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18349 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:??? &quot;Remove the last element of id:{state} . [ [ Stack ] ] .&quot;</td></tr>
      <tr><td align="left">25:state.Indent = stepback</td></tr>
      <tr><td align="left">26:return final</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18337 [shape=cds, label=<<font color="black">8:app __x1__ = (ToString index)</font>> color="black" fillcolor="white" style=filled]
  node18342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append strP -&gt; partial</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18334 [shape=cds, label=<<font color="black">5:app __x0__ = (LengthOfArrayLike value)</font>> color="black" fillcolor="white" style=filled]
  node18329 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18343 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18341 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append &quot;null&quot; -&gt; partial</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18339 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let strP = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18330 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18345 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = &quot;[]&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18335 -> node18336 [ color="black"]
  node18332 -> node18333 [ color="black"]
  node18349 -> node18330 [ color="black"]
  node18333 -> node18334 [ color="black"]
  node18337 -> node18338 [ color="black"]
  node18342 -> node18343 [ color="black"]
  node18341 -> node18343 [ color="black"]
  node18344 -> node18345 [label=<<font color="black">true</font>> color="black"]
  node18344 -> node18346 [label=<<font color="black">false</font>> color="black"]
  node18331 -> node18332 [label=<<font color="black">true</font>> color="black"]
  node18331 -> node18333 [label=<<font color="black">false</font>> color="black"]
  node18329 -> node18331 [ color="black"]
  node18343 -> node18336 [ color="black"]
  node18339 -> node18340 [ color="black"]
  node18345 -> node18349 [ color="black"]
  node18348 -> node18349 [ color="black"]
  node18346 -> node18347 [label=<<font color="black">true</font>> color="black"]
  node18346 -> node18348 [label=<<font color="black">false</font>> color="black"]
  node18336 -> node18337 [label=<<font color="black">true</font>> color="black"]
  node18336 -> node18344 [label=<<font color="black">false</font>> color="black"]
  node18347 -> node18349 [ color="black"]
  node18338 -> node18339 [ color="black"]
  node18340 -> node18341 [label=<<font color="black">true</font>> color="black"]
  node18340 -> node18342 [label=<<font color="black">false</font>> color="black"]
  node18334 -> node18335 [ color="black"]
}
