digraph {
  node8911 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8919 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8910 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8916 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8917 [shape=cds, label=<<font color="black">app __x2__ = (CreateIterResultObject undefined false)</font>> color="black" fillcolor="white" style=filled]
  node8914 [shape=diamond, label=<<font color="black">(= generatorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node8912 [shape=cds, label=<<font color="black">0:app __x0__ = (GetGeneratorKind )</font>> color="black" fillcolor="white" style=filled]
  node8918 [shape=cds, label=<<font color="black">app __x3__ = (GeneratorYield __x2__)</font>> color="black" fillcolor="white" style=filled]
  node8913 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let generatorKind = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8915 [shape=cds, label=<<font color="black">app __x1__ = (AsyncGeneratorYield undefined)</font>> color="black" fillcolor="white" style=filled]
  node8914 -> node8915 [label=<<font color="black">true</font>> color="black"]
  node8914 -> node8917 [label=<<font color="black">false</font>> color="black"]
  node8917 -> node8918 [ color="black"]
  node8912 -> node8913 [ color="black"]
  node8913 -> node8914 [ color="black"]
  node8915 -> node8916 [ color="black"]
  node8910 -> node8912 [ color="black"]
  node8916 -> node8911 [ color="black"]
  node8918 -> node8919 [ color="black"]
  node8919 -> node8911 [ color="black"]
}
