<algorithm>
  <param>O</param>
  <param>hint</param>
  <step-list>
    <step>Assert : Type ( <id>O</id> ) is Object.</step>
    <step>Assert : Type ( <id>hint</id> ) is String and its value is either <value>"string"</value> or <value>"number"</value> .</step>
    <step>If <id>hint</id> is <value>"string"</value> , then     <step-list>
      <step>Let <id>methodNames</id> be « <value>"toString"</value> , <value>"valueOf"</value> ».</step>
    </step-list></step>
    <step>Else,     <step-list>
      <step>Let <id>methodNames</id> be « <value>"valueOf"</value> , <value>"toString"</value> ».</step>
    </step-list></step>
    <step>For each <id>name</id> in <id>methodNames</id> in List order, do     <step-list>
      <step>Let <id>method</id> be ? Get ( <id>O</id> , <id>name</id> ).</step>
      <step>If IsCallable ( <id>method</id> ) is <value>true</value> , then       <step-list>
        <step>Let <id>result</id> be ? Call ( <id>method</id> , <id>O</id> ).</step>
        <step>If Type ( <id>result</id> ) is not Object, return <id>result</id> .</step>
      </step-list></step>
    </step-list></step>
    <step>Throw a <value>TypeError</value> exception.</step>
  </step-list>
</algorithm>