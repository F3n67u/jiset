{
  app __x0__ = (GetArgument argumentsList 0i)
  let regexp = __x0__
  app __x1__ = (RequireObjectCoercible this)
  let O = [? __x1__]
  if (! (|| (= regexp undefined) (= regexp null))) {
    app __x2__ = (IsRegExp regexp)
    let isRegExp = [? __x2__]
    if (= isRegExp true) {
      app __x3__ = (Get regexp "flags")
      let flags = [? __x3__]
      app __x4__ = (RequireObjectCoercible flags)
      [? __x4__]
      app __x5__ = (ToString flags)
      if (! (contains [? __x5__] "g")) throw INTRINSIC_TypeError else {}
    } else {}
    app __x6__ = (GetMethod regexp SYMBOL_matchAll)
    let matcher = [? __x6__]
    if (! (= matcher undefined)) {
      app __x7__ = (Call matcher regexp (new [O]))
      return [? __x7__]
    } else {}
  } else {}
  app __x8__ = (ToString O)
  let S = [? __x8__]
  app __x9__ = (RegExpCreate regexp "g")
  let rx = [? __x9__]
  app __x10__ = (Invoke rx SYMBOL_matchAll (new [S]))
  return [? __x10__]
}