digraph {
  node18773 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? nextValue]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18767 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">10:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18764 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18749 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18748 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18775 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let nextPromise = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18747 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18762 [shape=cds, label=<<font color="black">6:app __x4__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node18765 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18751 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18768 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node18761 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let next = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18754 [shape=cds, label=<<font color="black">2:app __x1__ = (Get constructor &quot;resolve&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18769 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18760 [shape=cds, label=<<font color="black">5:app __x3__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18750 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18777 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18774 [shape=cds, label=<<font color="black">14:app __x7__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node18757 [shape=diamond, label=<<font color="black">(= [! __x2__] false)</font>> color="black" fillcolor="white" style=filled]
  node18755 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseResolve = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18770 [shape=cds, label=<<font color="black">12:app __x6__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node18766 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node18763 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18771 [shape=diamond, label=<<font color="black">__x6__</font>> color="black" fillcolor="white" style=filled]
  node18752 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node18756 [shape=cds, label=<<font color="black">3:app __x2__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18758 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18759 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node18753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18776 [shape=cds, label=<<font color="black">15:app __x8__ = (Invoke nextPromise &quot;then&quot; (new [resultCapability.Resolve, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node18751 -> node18752 [ color="black"]
  node18747 -> node18749 [ color="black"]
  node18761 -> node18762 [ color="black"]
  node18757 -> node18758 [label=<<font color="black">true</font>> color="black"]
  node18757 -> node18759 [label=<<font color="black">false</font>> color="black"]
  node18750 -> node18751 [ color="black"]
  node18777 -> node18759 [ color="black"]
  node18764 -> node18765 [ color="black"]
  node18755 -> node18756 [ color="black"]
  node18758 -> node18759 [ color="black"]
  node18756 -> node18757 [ color="black"]
  node18766 -> node18767 [label=<<font color="black">true</font>> color="black"]
  node18766 -> node18768 [label=<<font color="black">false</font>> color="black"]
  node18771 -> node18772 [label=<<font color="black">true</font>> color="black"]
  node18771 -> node18773 [label=<<font color="black">false</font>> color="black"]
  node18749 -> node18750 [ color="black"]
  node18767 -> node18768 [ color="black"]
  node18753 -> node18754 [ color="black"]
  node18770 -> node18771 [ color="black"]
  node18776 -> node18777 [ color="black"]
  node18769 -> node18770 [ color="black"]
  node18774 -> node18775 [ color="black"]
  node18754 -> node18755 [ color="black"]
  node18760 -> node18761 [ color="black"]
  node18762 -> node18763 [ color="black"]
  node18763 -> node18764 [label=<<font color="black">true</font>> color="black"]
  node18763 -> node18765 [label=<<font color="black">false</font>> color="black"]
  node18765 -> node18766 [ color="black"]
  node18775 -> node18776 [ color="black"]
  node18768 -> node18769 [ color="black"]
  node18759 -> node18760 [label=<<font color="black">true</font>> color="black"]
  node18759 -> node18748 [label=<<font color="black">false</font>> color="black"]
  node18773 -> node18774 [ color="black"]
  node18752 -> node18753 [ color="black"]
  node18772 -> node18773 [ color="black"]
}
