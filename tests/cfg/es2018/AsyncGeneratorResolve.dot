digraph {
  node17072 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let iteratorResult = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17068 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17075 [shape=cds, label=<<font color="black">7:app __x2__ = (AsyncGeneratorResumeNext generator)</font>> color="black" fillcolor="white" style=filled]
  node17065 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17069 [shape=cds, label=<<font color="black">app done = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17066 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let queue = generator.AsyncGeneratorQueue</td></tr>
      <tr><td align="left">2:assert (&lt; 0i queue.length)</td></tr>
      <tr><td align="left">3:let next = (pop queue 0i)</td></tr>
      <tr><td align="left">4:let promiseCapability = next.Capability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17073 [shape=cds, label=<<font color="black">6:app __x1__ = (Call promiseCapability.Resolve undefined (new [iteratorResult]))</font>> color="black" fillcolor="white" style=filled]
  node17067 [shape=cds, label=<<font color="black">app generator = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17071 [shape=cds, label=<<font color="black">5:app __x0__ = (CreateIterResultObject value done)</font>> color="black" fillcolor="white" style=filled]
  node17076 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x2__]</td></tr>
      <tr><td align="left">8:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17074 -> node17075 [ color="black"]
  node17071 -> node17072 [ color="black"]
  node17068 -> node17069 [ color="black"]
  node17067 -> node17068 [ color="black"]
  node17070 -> node17071 [ color="black"]
  node17073 -> node17074 [ color="black"]
  node17069 -> node17070 [ color="black"]
  node17072 -> node17073 [ color="black"]
  node17065 -> node17067 [ color="black"]
  node17075 -> node17076 [ color="black"]
  node17076 -> node17066 [ color="black"]
}
