while true {
  app __x0__ = (IteratorStep iteratorRecord.Iterator)
  let next = __x0__
  app __x1__ = (IsAbruptCompletion next)
  if __x1__ iteratorRecord.Done = true else {}
  [? next]
  if (= next false) {
    iteratorRecord.Done = true
    return promiseCapability.Promise
  } else {}
  app __x2__ = (IteratorValue next)
  let nextValue = __x2__
  app __x3__ = (IsAbruptCompletion nextValue)
  if __x3__ iteratorRecord.Done = true else {}
  [? nextValue]
  app __x4__ = (Invoke C "resolve" (new [nextValue]))
  let nextPromise = [? __x4__]
  app __x5__ = (Invoke nextPromise "then" (new [promiseCapability.Resolve, promiseCapability.Reject]))
  [? __x5__]
}