digraph {
  node17815 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let arrayTypeName = typedArray.TypedArrayName</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:return (+ (* accessIndex elementSize) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17811 [shape=cds, label=<<font color="black">2:app __x0__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node17812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let accessIndex = [? __x0__]</td></tr>
      <tr><td align="left">3:assert (! (&lt; accessIndex 0i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17813 [shape=diamond, label=<<font color="black">(! (&lt; accessIndex length))</font>> color="black" fillcolor="white" style=filled]
  node17809 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17808 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let length = typedArray.ArrayLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17815 -> node17809 [ color="black"]
  node17808 -> node17810 [ color="black"]
  node17811 -> node17812 [ color="black"]
  node17814 -> node17815 [ color="black"]
  node17813 -> node17814 [label=<<font color="black">true</font>> color="black"]
  node17813 -> node17815 [label=<<font color="black">false</font>> color="black"]
  node17812 -> node17813 [ color="black"]
  node17810 -> node17811 [ color="black"]
}
