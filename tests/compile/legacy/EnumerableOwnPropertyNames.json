["Assert", ":", "Type", "(", {
  "id": "O"
}, ")", "is", "Object", ".", {
  "k": 0
}, "Let", {
  "id": "ownKeys"
}, "be", "?", {
  "id": "O"
}, ".", "[", "[", "OwnPropertyKeys", "]", "]", "(", ")", ".", {
  "k": 1
}, "Let", {
  "id": "properties"
}, "be", "a", "new", "empty", "List", ".", {
  "k": 2
}, "For", "each", "element", {
  "id": "key"
}, "of", {
  "id": "ownKeys"
}, "in", "List", "order", ",", "do", {
  "in": null
}, "If", "Type", "(", {
  "id": "key"
}, ")", "is", "String", ",", "then", {
  "in": null
}, "Let", {
  "id": "desc"
}, "be", "?", {
  "id": "O"
}, ".", "[", "[", "GetOwnProperty", "]", "]", "(", {
  "id": "key"
}, ")", ".", "If", {
  "id": "desc"
}, "is", "not", {
  "value": "undefined"
}, "and", {
  "id": "desc"
}, ".", "[", "[", "Enumerable", "]", "]", "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "If", {
  "id": "kind"
}, "is", {
  "const": "key"
}, ",", "append", {
  "id": "key"
}, "to", {
  "id": "properties"
}, ".", "Else", ",", {
  "in": null
}, "Let", {
  "id": "value"
}, "be", "?", "Get", "(", {
  "id": "O"
}, ",", {
  "id": "key"
}, ")", ".", "If", {
  "id": "kind"
}, "is", {
  "const": "value"
}, ",", "append", {
  "id": "value"
}, "to", {
  "id": "properties"
}, ".", "Else", ",", {
  "in": null
}, "Assert", ":", {
  "id": "kind"
}, "is", {
  "const": "key+value"
}, ".", "Let", {
  "id": "entry"
}, "be", "!", "CreateArrayFromList", "(", "«", {
  "id": "key"
}, ",", {
  "id": "value"
}, "»", ")", ".", "Append", {
  "id": "entry"
}, "to", {
  "id": "properties"
}, ".", {
  "out": null
}, {
  "out": null
}, {
  "out": null
}, {
  "out": null
}, {
  "out": null
}, {
  "k": 3
}, "Return", {
  "id": "properties"
}, ".", {
  "k": 4
}]