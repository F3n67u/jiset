digraph {
  node14149 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14209 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[! __x15__]</td></tr>
      <tr><td align="left">??? &quot;If the id:{i} th capture of id:{R} was defined with a nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14199 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:[! __x12__]</td></tr>
      <tr><td align="left">44:let i = (+ 0i 1i)</td></tr>
      <tr><td align="left">44:let __x13__ = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14167 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let matchSucceeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14152 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14178 [shape=cds, label=<<font color="black">19:app __x5__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node14182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">matchSucceeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14171 [shape=cds, label=<<font color="black">14:app __x3__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node14181 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:lastIndex = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14156 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14200 [shape=diamond, label=<<font color="black">(&lt; i __x13__)</font>> color="black" fillcolor="white" style=filled]
  node14203 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14168 [shape=diamond, label=<<font color="black">(= matchSucceeded false)</font>> color="black" fillcolor="white" style=filled]
  node14188 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:[? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14192 [shape=cds, label=<<font color="black">35:app __x9__ = (CreateDataProperty A &quot;index&quot; lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14173 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14164 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14205 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{capturedValue} be the String value whose code units are the UTF16Encoding of the code points of id:{captureI} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14160 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14196 [shape=cds, label=<<font color="black">38:app __x11__ = (CreateDataProperty A &quot;0&quot; matchedSubstr)</font>> color="black" fillcolor="white" style=filled]
  node14184 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node14162 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">lastIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14153 [shape=cds, label=<<font color="black">3:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node14163 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let matcher = R.RegExpMatcher</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14189 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:??? &quot;Let id:{n} be the number of elements in id:{r} ' s id:{captures} List . ( This is the same value as link:{unhandled: sec-notation} ' s id:{NcapturingParens} . )&quot;</td></tr>
      <tr><td align="left">32:assert (&lt; n (- (** 2.0 32i) 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14174 [shape=cds, label=<<font color="black">16:app __x4__ = (matcher S lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14148 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14180 [shape=cds, label=<<font color="black">21:app __x6__ = (AdvanceStringIndex S lastIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node14157 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14185 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:??? &quot;id:{e} is an index into the id:{Input} character list , derived from id:{S} , matched by id:{matcher} . Let id:{eUTF} be the smallest index into id:{S} that corresponds to the character at element id:{e} of id:{Input} . If id:{e} is greater than or equal to the number of elements in id:{Input} , then id:{eUTF} is the number of code units in id:{S} .&quot;</td></tr>
      <tr><td align="left">28:e = eUTF</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14195 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:[! __x10__]</td></tr>
      <tr><td align="left">37:??? &quot;Let id:{matchedSubstr} be the matched substring ( i . e . the portion of id:{S} between offset id:{lastIndex} inclusive and offset id:{e} exclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14206 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = captureI</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14161 [shape=diamond, label=<<font color="black">(&amp;&amp; (= global false) (= sticky false))</font>> color="black" fillcolor="white" style=filled]
  node14183 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let e = r.endIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ String)</td></tr>
      <tr><td align="left">2:let length = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14166 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14193 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14198 [shape=cds, label=<<font color="black">43:app __x12__ = (CreateDataProperty A &quot;groups&quot; groups)</font>> color="black" fillcolor="white" style=filled]
  node14207 [shape=cds, label=<<font color="black">app __x14__ = (ToString i)</font>> color="black" fillcolor="white" style=filled]
  node14194 [shape=cds, label=<<font color="black">36:app __x10__ = (CreateDataProperty A &quot;input&quot; S)</font>> color="black" fillcolor="white" style=filled]
  node14154 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let lastIndex = [? __x2__]</td></tr>
      <tr><td align="left">4:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14190 [shape=cds, label=<<font color="black">33:app __x8__ = (ArrayCreate (+ n 1i))</font>> color="black" fillcolor="white" style=filled]
  node14169 [shape=diamond, label=<<font color="black">(&lt; length lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let r = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14201 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{captureI} be id:{i} sup:{th} element of id:{r} ' s id:{captures} List .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14158 [shape=diamond, label=<<font color="black">(contains flags &quot;y&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14186 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node14179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x5__]</td></tr>
      <tr><td align="left">20:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14197 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:[! __x11__]</td></tr>
      <tr><td align="left">39:??? &quot;If id:{R} contains any nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">41:??? &quot;Else , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14202 [shape=diamond, label=<<font color="black">(= captureI undefined)</font>> color="black" fillcolor="white" style=filled]
  node14172 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14150 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node14204 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node14177 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node14187 [shape=cds, label=<<font color="black">30:app __x7__ = (Set R &quot;lastIndex&quot; e true)</font>> color="black" fillcolor="white" style=filled]
  node14165 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14176 [shape=diamond, label=<<font color="black">(= r CONST_failure)</font>> color="black" fillcolor="white" style=filled]
  node14170 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node14208 [shape=cds, label=<<font color="black">app __x15__ = (CreateDataProperty A [! __x14__] capturedValue)</font>> color="black" fillcolor="white" style=filled]
  node14159 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14191 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let A = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14155 [shape=diamond, label=<<font color="black">(contains flags &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14210 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">57:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14180 -> node14181 [ color="black"]
  node14162 -> node14163 [ color="black"]
  node14165 -> node14167 [ color="black"]
  node14164 -> node14165 [label=<<font color="black">true</font>> color="black"]
  node14164 -> node14166 [label=<<font color="black">false</font>> color="black"]
  node14186 -> node14187 [label=<<font color="black">true</font>> color="black"]
  node14186 -> node14189 [label=<<font color="black">false</font>> color="black"]
  node14151 -> node14152 [ color="black"]
  node14166 -> node14167 [ color="black"]
  node14196 -> node14197 [ color="black"]
  node14172 -> node14173 [ color="black"]
  node14205 -> node14207 [ color="black"]
  node14169 -> node14170 [label=<<font color="black">true</font>> color="black"]
  node14169 -> node14174 [label=<<font color="black">false</font>> color="black"]
  node14208 -> node14209 [ color="black"]
  node14181 -> node14168 [ color="black"]
  node14176 -> node14177 [label=<<font color="black">true</font>> color="black"]
  node14176 -> node14182 [label=<<font color="black">false</font>> color="black"]
  node14161 -> node14162 [label=<<font color="black">true</font>> color="black"]
  node14161 -> node14163 [label=<<font color="black">false</font>> color="black"]
  node14167 -> node14168 [ color="black"]
  node14188 -> node14189 [ color="black"]
  node14179 -> node14180 [ color="black"]
  node14153 -> node14154 [ color="black"]
  node14203 -> node14207 [ color="black"]
  node14204 -> node14205 [label=<<font color="black">true</font>> color="black"]
  node14204 -> node14206 [label=<<font color="black">false</font>> color="black"]
  node14209 -> node14200 [ color="black"]
  node14187 -> node14188 [ color="black"]
  node14199 -> node14200 [ color="black"]
  node14195 -> node14196 [ color="black"]
  node14175 -> node14176 [ color="black"]
  node14152 -> node14153 [ color="black"]
  node14171 -> node14172 [ color="black"]
  node14191 -> node14192 [ color="black"]
  node14173 -> node14174 [ color="black"]
  node14170 -> node14171 [label=<<font color="black">true</font>> color="black"]
  node14170 -> node14173 [label=<<font color="black">false</font>> color="black"]
  node14155 -> node14156 [label=<<font color="black">true</font>> color="black"]
  node14155 -> node14157 [label=<<font color="black">false</font>> color="black"]
  node14150 -> node14151 [ color="black"]
  node14198 -> node14199 [ color="black"]
  node14163 -> node14164 [ color="black"]
  node14184 -> node14185 [label=<<font color="black">true</font>> color="black"]
  node14184 -> node14186 [label=<<font color="black">false</font>> color="black"]
  node14182 -> node14168 [ color="black"]
  node14183 -> node14184 [ color="black"]
  node14185 -> node14186 [ color="black"]
  node14207 -> node14208 [ color="black"]
  node14190 -> node14191 [ color="black"]
  node14194 -> node14195 [ color="black"]
  node14168 -> node14169 [label=<<font color="black">true</font>> color="black"]
  node14168 -> node14183 [label=<<font color="black">false</font>> color="black"]
  node14148 -> node14150 [ color="black"]
  node14159 -> node14161 [ color="black"]
  node14160 -> node14161 [ color="black"]
  node14200 -> node14201 [label=<<font color="black">true</font>> color="black"]
  node14200 -> node14210 [label=<<font color="black">false</font>> color="black"]
  node14174 -> node14175 [ color="black"]
  node14189 -> node14190 [ color="black"]
  node14202 -> node14203 [label=<<font color="black">true</font>> color="black"]
  node14202 -> node14204 [label=<<font color="black">false</font>> color="black"]
  node14192 -> node14193 [ color="black"]
  node14154 -> node14155 [ color="black"]
  node14156 -> node14158 [ color="black"]
  node14158 -> node14159 [label=<<font color="black">true</font>> color="black"]
  node14158 -> node14160 [label=<<font color="black">false</font>> color="black"]
  node14210 -> node14149 [ color="black"]
  node14193 -> node14194 [ color="black"]
  node14177 -> node14178 [label=<<font color="black">true</font>> color="black"]
  node14177 -> node14180 [label=<<font color="black">false</font>> color="black"]
  node14157 -> node14158 [ color="black"]
  node14197 -> node14198 [ color="black"]
  node14201 -> node14202 [ color="black"]
  node14178 -> node14179 [ color="black"]
  node14206 -> node14207 [ color="black"]
}
