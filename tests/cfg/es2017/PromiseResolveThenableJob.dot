digraph {
  node16420 [shape=cds, label=<<font color="black">2:app __x2__ = (IsAbruptCompletion thenCallResult)</font>> color="black" fillcolor="white" style=filled]
  node16423 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let status = __x3__</td></tr>
      <tr><td align="left">4:return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16414 [shape=cds, label=<<font color="black">app thenable = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16419 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let thenCallResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16415 [shape=cds, label=<<font color="black">app then = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16422 [shape=cds, label=<<font color="black">3:app __x3__ = (Call resolvingFunctions.Reject undefined (new [thenCallResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16412 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let resolvingFunctions = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16424 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return thenCallResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16413 [shape=cds, label=<<font color="black">app promiseToResolve = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16416 [shape=cds, label=<<font color="black">0:app __x0__ = (CreateResolvingFunctions promiseToResolve)</font>> color="black" fillcolor="white" style=filled]
  node16411 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16418 [shape=cds, label=<<font color="black">1:app __x1__ = (Call then thenable (new [resolvingFunctions.Resolve, resolvingFunctions.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node16421 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node16418 -> node16419 [ color="black"]
  node16421 -> node16422 [label=<<font color="black">true</font>> color="black"]
  node16421 -> node16424 [label=<<font color="black">false</font>> color="black"]
  node16420 -> node16421 [ color="black"]
  node16414 -> node16415 [ color="black"]
  node16415 -> node16416 [ color="black"]
  node16413 -> node16414 [ color="black"]
  node16417 -> node16418 [ color="black"]
  node16411 -> node16413 [ color="black"]
  node16419 -> node16420 [ color="black"]
  node16423 -> node16424 [ color="black"]
  node16424 -> node16412 [ color="black"]
  node16422 -> node16423 [ color="black"]
  node16416 -> node16417 [ color="black"]
}
