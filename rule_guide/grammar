$S => $Stmt
$Stmt => Let $Var be $Expr .
$Stmt => If $Condition , $Stmt
$Stmt => Return $Expr
$Stmt => Return $Expr .
$Stmt => return $Expr
$Stmt => return $Expr .
$Stmt => Assert : $Condition .
$Stmt => throw a $Value exception .
$Stmt => Perform $Var . $AMERName ( ) .
$Stmt => Perform $Var . $AMERName ( $Arguments ) .
$Stmt => Set $Settable to $Expr .
$Settable => $Var . [ [ $Field ] ]
$Settable => $Var ' s $Field
$Settable => $Var
$Settable => the $Field of $Var
$Field => CanBlock
$Field => Signifier
$Field => VarNames
$Field => EnvironmentRecord
$Field => Function
$Field => Realm
$Field => ScriptOrModule
$Field => ThisBindingStatus
$Field => ThisValue
$Field => HomeObject
$Field => FunctionObject
$Field => NewTarget
$Field => ObjectRecord
$Field => GlobalThisValue
$Field => DeclarativeRecord
$Field => VarNames
$Field => GlobalObject
$Field => GlobalEnv
$Field => TemplateMap
$Field => % ObjectPrototype %
$Field => % ThrowTypeError %
$Field => % FunctionPrototype %
$Field => SetPrototypeOf
$Expr => NormalCompletion ( $Const )
$Expr => $Settable
$Expr => $Value
$Expr => $RecordV
$Expr => $ExecContextV
$Expr => $EnvironmentV
$AMERName => CreateMutableBinding
$AMERName => InitializeBinding
$AMERName => AddRestrictedFunctionProperties
$AMERName => SetRealmGlobalObject
$Arguments => $Expr , $Arguments
$Arguments => $Expr
$RecordV => the declarative Environment Record for which the method was invoked
$RecordV => the object Environment Record for which the method was invoked
$RecordV => the Agent Record of the surrounding agent
$RecordV => a new Record
$RecordV => a new Realm Record
$ExecContextV => a new execution context
$EnvironmentV => a new Lexical Environment
$Condition => $Var has a binding for the name that is the value of $Var
$Condition => $Var does not already have a binding for $Var
$Condition => $Var must have an uninitialized binding for $Var
$Condition => $Var is $Value
$Condition => $Binding is a strict binding
$Condition => $Binding has not yet been initialized
$Condition => $Binding is a mutable binding
$Condition => This is an attempt to change the value of an immutable binding .
$Condition => $Var has a binding for $Var
$Binding => the binding for $Var in $Var