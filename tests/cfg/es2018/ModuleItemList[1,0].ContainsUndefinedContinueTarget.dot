digraph {
  node9982 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9985 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9984 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node9986 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node9983 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9987 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9989 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9988 [shape=cds, label=<<font color="black">2:access __x1__ = (ModuleItem &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node9984 -> node9985 [ color="black"]
  node9987 -> node9988 [ color="black"]
  node9982 -> node9984 [ color="black"]
  node9989 -> node9983 [ color="black"]
  node9985 -> node9986 [ color="black"]
  node9986 -> node9987 [label=<<font color="black">true</font>> color="black"]
  node9986 -> node9988 [label=<<font color="black">false</font>> color="black"]
  node9988 -> node9989 [ color="black"]
}
