digraph {
  node9754 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9759 [shape=cds, label=<<font color="black">10:app __x6__ = (DefinePropertyOrThrow object propKey desc)</font>> color="black" fillcolor="white" style=filled]
  node9746 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9749 [shape=cds, label=<<font color="black">4:app __x1__ = (OrdinaryFunctionCreate INTRINSIC_AsyncGeneratorFunction_prototype sourceText UniqueFormalParameters AsyncGeneratorBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node9758 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[! __x5__]</td></tr>
      <tr><td align="left">9:let desc = (new PropertyDescriptor(&quot;Value&quot; -&gt; closure, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; enumerable, &quot;Configurable&quot; -&gt; true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let closure = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9751 [shape=cds, label=<<font color="black">5:app __x2__ = (MakeMethod closure object)</font>> color="black" fillcolor="white" style=filled]
  node9747 [shape=cds, label=<<font color="black">0:access __x0__ = (PropertyName &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9760 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9755 [shape=cds, label=<<font color="black">7:app __x4__ = (OrdinaryObjectCreate INTRINSIC_AsyncGeneratorFunction_prototype_prototype)</font>> color="black" fillcolor="white" style=filled]
  node9752 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9748 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let propKey = __x0__</td></tr>
      <tr><td align="left">1:[? propKey]</td></tr>
      <tr><td align="left">2:let scope = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">3:let sourceText = (get-syntax AsyncGeneratorMethod)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9753 [shape=cds, label=<<font color="black">6:app __x3__ = (SetFunctionName closure propKey)</font>> color="black" fillcolor="white" style=filled]
  node9745 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9757 [shape=cds, label=<<font color="black">8:app __x5__ = (DefinePropertyOrThrow closure &quot;prototype&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; prototype, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node9756 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let prototype = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9748 -> node9749 [ color="black"]
  node9755 -> node9756 [ color="black"]
  node9754 -> node9755 [ color="black"]
  node9751 -> node9752 [ color="black"]
  node9745 -> node9747 [ color="black"]
  node9756 -> node9757 [ color="black"]
  node9750 -> node9751 [ color="black"]
  node9758 -> node9759 [ color="black"]
  node9747 -> node9748 [ color="black"]
  node9753 -> node9754 [ color="black"]
  node9752 -> node9753 [ color="black"]
  node9759 -> node9760 [ color="black"]
  node9749 -> node9750 [ color="black"]
  node9757 -> node9758 [ color="black"]
  node9760 -> node9746 [ color="black"]
}
