digraph {
  node17556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17549 [shape=cds, label=<<font color="black">2:app __x1__ = (Call onFinally undefined)</font>> color="black" fillcolor="white" style=filled]
  node17545 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17555 [shape=cds, label=<<font color="black">7:app __x4__ = (Invoke promise &quot;then&quot; (new [thrower]))</font>> color="black" fillcolor="white" style=filled]
  node17550 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let result = [? __x1__]</td></tr>
      <tr><td align="left">3:let C = F.Constructor</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17546 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let onFinally = F.OnFinally</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17554 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promise = [? __x3__]</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{thrower} be equivalent to a function that throws id:{reason} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17547 [shape=cds, label=<<font color="black">1:app __x0__ = (IsCallable onFinally)</font>> color="black" fillcolor="white" style=filled]
  node17551 [shape=cds, label=<<font color="black">4:app __x2__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node17552 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (= __x2__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17553 [shape=cds, label=<<font color="black">5:app __x3__ = (PromiseResolve C result)</font>> color="black" fillcolor="white" style=filled]
  node17544 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17548 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17546 -> node17547 [ color="black"]
  node17554 -> node17555 [ color="black"]
  node17556 -> node17545 [ color="black"]
  node17549 -> node17550 [ color="black"]
  node17552 -> node17553 [ color="black"]
  node17553 -> node17554 [ color="black"]
  node17547 -> node17548 [ color="black"]
  node17544 -> node17546 [ color="black"]
  node17550 -> node17551 [ color="black"]
  node17548 -> node17549 [ color="black"]
  node17555 -> node17556 [ color="black"]
  node17551 -> node17552 [ color="black"]
}
