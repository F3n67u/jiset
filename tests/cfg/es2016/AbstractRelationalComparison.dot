digraph {
  node555 [shape=diamond, label=<<font color="black">(= ny NaN)</font>> color="black" fillcolor="white" style=filled]
  node565 [shape=diamond, label=<<font color="black">(= ny Infinity)</font>> color="black" fillcolor="white" style=filled]
  node559 [shape=diamond, label=<<font color="black">(&amp;&amp; (= nx 0i) (= ny -0.0))</font>> color="black" fillcolor="white" style=filled]
  node561 [shape=diamond, label=<<font color="black">(&amp;&amp; (= nx -0.0) (= ny 0i))</font>> color="black" fillcolor="white" style=filled]
  node569 [shape=diamond, label=<<font color="black">(= nx -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node540 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let py = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node567 [shape=diamond, label=<<font color="black">(= ny -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node563 [shape=diamond, label=<<font color="black">(= nx Infinity)</font>> color="black" fillcolor="white" style=filled]
  node557 [shape=diamond, label=<<font color="black">(= nx ny)</font>> color="black" fillcolor="white" style=filled]
  node544 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let px = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node571 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:??? &quot;If the mathematical value of id:{nx} is less than the mathematical value of id:{ny} &mdash; note that these mathematical values are both finite and not both zero &mdash; return value:{true} . Otherwise , return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node564 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node550 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:??? &quot;Let id:{nx} be ? ToNumber ( id:{px} ) . Because id:{px} and id:{py} are primitive values evaluation order is not important .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node538 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let px = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node570 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node542 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let py = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node546 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;If id:{py} is a prefix of id:{px} , return value:{false} . ( A String value id:{p} is a prefix of String value id:{q} if id:{q} can be the result of concatenating id:{p} and some other String id:{r} . Note that any String is a prefix of itself , because id:{r} may be the empty String . )&quot;</td></tr>
      <tr><td align="left">8:??? &quot;If id:{px} is a prefix of id:{py} , return value:{true} .&quot;</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{k} be the smallest nonnegative integer such that the code unit at index id:{k} within id:{px} is different from the code unit at index id:{k} within id:{py} . ( There must be such a id:{k} , for neither String is a prefix of the other . )&quot;</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{m} be the integer that is the code unit value at index id:{k} within id:{px} .&quot;</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{n} be the integer that is the code unit value at index id:{k} within id:{py} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node534 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node566 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node551 [shape=cds, label=<<font color="black">15:app __x4__ = (ToNumber py)</font>> color="black" fillcolor="white" style=filled]
  node554 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node537 [shape=cds, label=<<font color="black">1:app __x0__ = (ToPrimitive x Number)</font>> color="black" fillcolor="white" style=filled]
  node547 [shape=diamond, label=<<font color="black">(&lt; m n)</font>> color="black" fillcolor="white" style=filled]
  node541 [shape=cds, label=<<font color="black">4:app __x2__ = (ToPrimitive y Number)</font>> color="black" fillcolor="white" style=filled]
  node558 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node562 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node545 [shape=diamond, label=<<font color="black">(&amp;&amp; (= px Strings) (= py Strings))</font>> color="black" fillcolor="white" style=filled]
  node552 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let ny = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node535 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node548 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node553 [shape=diamond, label=<<font color="black">(= nx NaN)</font>> color="black" fillcolor="white" style=filled]
  node556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node539 [shape=cds, label=<<font color="black">2:app __x1__ = (ToPrimitive y Number)</font>> color="black" fillcolor="white" style=filled]
  node568 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node549 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node536 [shape=diamond, label=<<font color="black">(= LeftFirst true)</font>> color="black" fillcolor="white" style=filled]
  node543 [shape=cds, label=<<font color="black">5:app __x3__ = (ToPrimitive x Number)</font>> color="black" fillcolor="white" style=filled]
  node560 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node547 -> node548 [label=<<font color="black">true</font>> color="black"]
  node547 -> node549 [label=<<font color="black">false</font>> color="black"]
  node559 -> node560 [label=<<font color="black">true</font>> color="black"]
  node559 -> node561 [label=<<font color="black">false</font>> color="black"]
  node562 -> node563 [ color="black"]
  node538 -> node539 [ color="black"]
  node564 -> node565 [ color="black"]
  node536 -> node537 [label=<<font color="black">true</font>> color="black"]
  node536 -> node541 [label=<<font color="black">false</font>> color="black"]
  node558 -> node559 [ color="black"]
  node548 -> node535 [ color="black"]
  node560 -> node561 [ color="black"]
  node554 -> node555 [ color="black"]
  node570 -> node571 [ color="black"]
  node534 -> node536 [ color="black"]
  node566 -> node567 [ color="black"]
  node568 -> node569 [ color="black"]
  node555 -> node556 [label=<<font color="black">true</font>> color="black"]
  node555 -> node557 [label=<<font color="black">false</font>> color="black"]
  node544 -> node545 [ color="black"]
  node552 -> node553 [ color="black"]
  node571 -> node535 [ color="black"]
  node545 -> node546 [label=<<font color="black">true</font>> color="black"]
  node545 -> node550 [label=<<font color="black">false</font>> color="black"]
  node549 -> node535 [ color="black"]
  node567 -> node568 [label=<<font color="black">true</font>> color="black"]
  node567 -> node569 [label=<<font color="black">false</font>> color="black"]
  node540 -> node545 [ color="black"]
  node556 -> node557 [ color="black"]
  node557 -> node558 [label=<<font color="black">true</font>> color="black"]
  node557 -> node559 [label=<<font color="black">false</font>> color="black"]
  node543 -> node544 [ color="black"]
  node569 -> node570 [label=<<font color="black">true</font>> color="black"]
  node569 -> node571 [label=<<font color="black">false</font>> color="black"]
  node539 -> node540 [ color="black"]
  node561 -> node562 [label=<<font color="black">true</font>> color="black"]
  node561 -> node563 [label=<<font color="black">false</font>> color="black"]
  node537 -> node538 [ color="black"]
  node565 -> node566 [label=<<font color="black">true</font>> color="black"]
  node565 -> node567 [label=<<font color="black">false</font>> color="black"]
  node563 -> node564 [label=<<font color="black">true</font>> color="black"]
  node563 -> node565 [label=<<font color="black">false</font>> color="black"]
  node550 -> node551 [ color="black"]
  node553 -> node554 [label=<<font color="black">true</font>> color="black"]
  node553 -> node555 [label=<<font color="black">false</font>> color="black"]
  node542 -> node543 [ color="black"]
  node551 -> node552 [ color="black"]
  node546 -> node547 [ color="black"]
  node541 -> node542 [ color="black"]
}
