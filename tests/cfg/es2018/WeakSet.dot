digraph {
  node16086 [shape=cds, label=<<font color="black">12:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node16071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16067 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16072 [shape=cds, label=<<font color="black">5:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16087 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16068 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node16083 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16080 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node16063 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16075 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16088 [shape=cds, label=<<font color="black">13:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node16089 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node16085 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16070 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node16074 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node16066 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakSetPrototype (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16077 [shape=cds, label=<<font color="black">7:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16082 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node16076 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16091 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16090 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node16069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16062 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16084 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node16064 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16079 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node16078 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16061 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16088 -> node16089 [ color="black"]
  node16063 -> node16064 [ color="black"]
  node16091 -> node16079 [ color="black"]
  node16071 -> node16072 [ color="black"]
  node16076 -> node16077 [ color="black"]
  node16084 -> node16085 [ color="black"]
  node16066 -> node16067 [ color="black"]
  node16068 -> node16069 [label=<<font color="black">true</font>> color="black"]
  node16068 -> node16070 [label=<<font color="black">false</font>> color="black"]
  node16082 -> node16083 [label=<<font color="black">true</font>> color="black"]
  node16082 -> node16084 [label=<<font color="black">false</font>> color="black"]
  node16085 -> node16086 [ color="black"]
  node16090 -> node16091 [ color="black"]
  node16061 -> node16063 [ color="black"]
  node16070 -> node16071 [label=<<font color="black">true</font>> color="black"]
  node16070 -> node16072 [label=<<font color="black">false</font>> color="black"]
  node16073 -> node16074 [ color="black"]
  node16078 -> node16079 [ color="black"]
  node16069 -> node16070 [ color="black"]
  node16064 -> node16065 [label=<<font color="black">true</font>> color="black"]
  node16064 -> node16066 [label=<<font color="black">false</font>> color="black"]
  node16081 -> node16082 [ color="black"]
  node16089 -> node16090 [label=<<font color="black">true</font>> color="black"]
  node16089 -> node16079 [label=<<font color="black">false</font>> color="black"]
  node16087 -> node16088 [ color="black"]
  node16083 -> node16084 [ color="black"]
  node16075 -> node16076 [label=<<font color="black">true</font>> color="black"]
  node16075 -> node16077 [label=<<font color="black">false</font>> color="black"]
  node16067 -> node16068 [ color="black"]
  node16077 -> node16078 [ color="black"]
  node16072 -> node16073 [ color="black"]
  node16074 -> node16075 [ color="black"]
  node16086 -> node16087 [ color="black"]
  node16065 -> node16066 [ color="black"]
  node16079 -> node16080 [label=<<font color="black">true</font>> color="black"]
  node16079 -> node16062 [label=<<font color="black">false</font>> color="black"]
  node16080 -> node16081 [ color="black"]
}
