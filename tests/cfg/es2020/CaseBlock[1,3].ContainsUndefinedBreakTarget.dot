digraph {
  node8005 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let hasUndefinedLabels = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7997 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8001 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7999 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node8009 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8004 [shape=cds, label=<<font color="black">3:access __x1__ = (DefaultClause &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node8007 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8003 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8011 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8002 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node8006 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node7998 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8008 [shape=diamond, label=<<font color="black">(= CaseClauses1 absent)</font>> color="black" fillcolor="white" style=filled]
  node8000 [shape=cds, label=<<font color="black">1:access __x0__ = (CaseClauses0 &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node8010 [shape=cds, label=<<font color="black">6:access __x2__ = (CaseClauses1 &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node8009 -> node8010 [ color="black"]
  node8004 -> node8005 [ color="black"]
  node7997 -> node7999 [ color="black"]
  node8007 -> node8008 [ color="black"]
  node8002 -> node8003 [label=<<font color="black">true</font>> color="black"]
  node8002 -> node8004 [label=<<font color="black">false</font>> color="black"]
  node8008 -> node8009 [label=<<font color="black">true</font>> color="black"]
  node8008 -> node8010 [label=<<font color="black">false</font>> color="black"]
  node8001 -> node8002 [ color="black"]
  node8011 -> node7998 [ color="black"]
  node8003 -> node8004 [ color="black"]
  node8000 -> node8001 [ color="black"]
  node8006 -> node8007 [label=<<font color="black">true</font>> color="black"]
  node8006 -> node8008 [label=<<font color="black">false</font>> color="black"]
  node8005 -> node8006 [ color="black"]
  node8010 -> node8011 [ color="black"]
  node7999 -> node8000 [label=<<font color="black">true</font>> color="black"]
  node7999 -> node8004 [label=<<font color="black">false</font>> color="black"]
}
