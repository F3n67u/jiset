digraph {
  node17946 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17949 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17935 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateIntegerTypedArray typedArray)</font>> color="black" fillcolor="white" style=filled]
  node17940 [shape=cds, label=<<font color="black">app __x2__ = (ToBigInt value)</font>> color="black" fillcolor="white" style=filled]
  node17943 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17948 [shape=cds, label=<<font color="black">8:app __x5__ = (GetModifySetValueInBuffer buffer indexedPosition elementType v op)</font>> color="black" fillcolor="white" style=filled]
  node17941 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17933 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17938 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let indexedPosition = [? __x1__]</td></tr>
      <tr><td align="left">2:let arrayTypeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17936 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17945 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node17939 [shape=diamond, label=<<font color="black">(= typedArray.ContentType CONST_BigInt)</font>> color="black" fillcolor="white" style=filled]
  node17942 [shape=cds, label=<<font color="black">app __x3__ = (ToIntegerOrInfinity value)</font>> color="black" fillcolor="white" style=filled]
  node17934 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17947 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17937 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node17944 [shape=cds, label=<<font color="black">5:app __x4__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17945 -> node17946 [label=<<font color="black">true</font>> color="black"]
  node17945 -> node17947 [label=<<font color="black">false</font>> color="black"]
  node17947 -> node17948 [ color="black"]
  node17948 -> node17949 [ color="black"]
  node17941 -> node17944 [ color="black"]
  node17943 -> node17944 [ color="black"]
  node17936 -> node17937 [ color="black"]
  node17944 -> node17945 [ color="black"]
  node17933 -> node17935 [ color="black"]
  node17939 -> node17940 [label=<<font color="black">true</font>> color="black"]
  node17939 -> node17942 [label=<<font color="black">false</font>> color="black"]
  node17935 -> node17936 [ color="black"]
  node17949 -> node17934 [ color="black"]
  node17938 -> node17939 [ color="black"]
  node17946 -> node17947 [ color="black"]
  node17942 -> node17943 [ color="black"]
  node17940 -> node17941 [ color="black"]
  node17937 -> node17938 [ color="black"]
}
