digraph {
  node16972 [shape=cds, label=<<font color="black">7:app __x2__ = (NewPromiseCapability INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node16965 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16976 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] asyncContext)</font>> color="black" fillcolor="white" style=filled]
  node16978 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">11:??? &quot;Set the code evaluation state of id:{asyncContext} such that when evaluation is resumed with a Completion id:{resumptionValue} the following steps will be performed : in:{} out:{}&quot;</td></tr>
      <tr><td align="left">13:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16973 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let throwawayCapability = [! __x2__]</td></tr>
      <tr><td align="left">8:throwawayCapability.Promise.PromiseIsHandled = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16968 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node16969 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16964 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16977 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = (- GLOBAL_executionStack.length 1i)</td></tr>
      <tr><td align="left">(pop GLOBAL_executionStack __x4__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16967 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let asyncContext = GLOBAL_context</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16970 [shape=cds, label=<<font color="black">2:app __x1__ = (Call promiseCapability.Resolve undefined (new [value]))</font>> color="black" fillcolor="white" style=filled]
  node16974 [shape=cds, label=<<font color="black">9:app __x3__ = (PerformPromiseThen promiseCapability.Promise onFulfilled onRejected throwawayCapability)</font>> color="black" fillcolor="white" style=filled]
  node16966 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16975 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let resolveResult = [! __x1__]</td></tr>
      <tr><td align="left">3:let onFulfilled = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">4:let onRejected = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">5:onFulfilled.AsyncContext = asyncContext</td></tr>
      <tr><td align="left">6:onRejected.AsyncContext = asyncContext</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16974 -> node16975 [ color="black"]
  node16968 -> node16969 [ color="black"]
  node16978 -> node16965 [ color="black"]
  node16967 -> node16968 [ color="black"]
  node16976 -> node16977 [label=<<font color="black">true</font>> color="black"]
  node16976 -> node16978 [label=<<font color="black">false</font>> color="black"]
  node16972 -> node16973 [ color="black"]
  node16964 -> node16966 [ color="black"]
  node16973 -> node16974 [ color="black"]
  node16966 -> node16967 [ color="black"]
  node16971 -> node16972 [ color="black"]
  node16970 -> node16971 [ color="black"]
  node16969 -> node16970 [ color="black"]
  node16975 -> node16976 [ color="black"]
  node16977 -> node16978 [ color="black"]
}
