{
  if (= NewTarget undefined) {
    app __x0__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x0__
  } else {}
  app __x1__ = (Type buffer)
  if (! (= __x1__ Object)) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else {}
  if (= buffer.ArrayBufferData absent) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
  app __x4__ = (ToNumber byteOffset)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  let numberOffset = __x4__
  app __x5__ = (ToInteger numberOffset)
  let offset = __x5__
  if (|| (! (== numberOffset offset)) (< offset 0i)) {
    app __x6__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x6__
  } else {}
  app __x7__ = (IsDetachedBuffer buffer)
  if (= __x7__ true) {
    app __x8__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x8__
  } else {}
  let bufferByteLength = buffer.ArrayBufferByteLength
  if (< bufferByteLength offset) {
    app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x9__
  } else {}
  if (= byteLength undefined) let viewByteLength = (- bufferByteLength offset) else {
    app __x10__ = (ToLength byteLength)
    if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
    let viewByteLength = __x10__
    if (< bufferByteLength (+ offset viewByteLength)) {
      app __x11__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x11__
    } else {}
  }
  app __x12__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_DataViewPrototype (new ["DataView", "ViewedArrayBuffer", "ByteLength", "ByteOffset"]))
  if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else {}
  let O = __x12__
  O.DataView = true
  O.ViewedArrayBuffer = buffer
  O.ByteLength = viewByteLength
  O.ByteOffset = offset
  app __x13__ = (WrapCompletion O)
  return __x13__
}