{
  [0] let oldEnv = GLOBAL_context.LexicalEnvironment
  [1] app __x0__ = (NewDeclarativeEnvironment oldEnv)
  [1] let catchEnv = __x0__
  [2] access __x1__ = (CatchParameter "BoundNames")
  [2] let __x2__ = __x1__
  [2] let __x3__ = 0i
  [2] while (< __x3__ __x2__.length) {
    let argName = __x2__[__x3__]
    [3] app __x4__ = (catchEnv.CreateMutableBinding catchEnv argName false)
    [3] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [0] {}
    [3] __x4__
    __x3__ = (+ __x3__ 1i)
  }
  [4] GLOBAL_context.LexicalEnvironment = catchEnv
  [5] access __x5__ = (CatchParameter "BindingInitialization")
  [5] app __x6__ = (__x5__ thrownValue catchEnv)
  [5] let status = __x6__
  [6] app __x7__ = (IsAbruptCompletion status)
  [6] if __x7__ {
    [7] GLOBAL_context.LexicalEnvironment = oldEnv
    [8] app __x8__ = (Completion status)
    [8] app __x9__ = (WrapCompletion __x8__)
    [8] return __x9__
  } else [0] {}
  [9] access __x10__ = (Block "Evaluation")
  [9] let B = __x10__
  [10] GLOBAL_context.LexicalEnvironment = oldEnv
  [11] app __x11__ = (Completion B)
  [11] app __x12__ = (WrapCompletion __x11__)
  [11] return __x12__
}