{
  app __x0__ = (GeneratorValidate generator generatorBrand)
  let state = [? __x0__]
  if (= state CONST_completed) {
    app __x1__ = (CreateIterResultObject undefined true)
    return __x1__
  } else {}
  assert (|| (= state CONST_suspendedStart) (= state CONST_suspendedYield))
  let genContext = generator.GeneratorContext
  let methodContext = CONTEXT
  CONTEXT = null
  generator.GeneratorState = CONST_executing
  append genContext -> EXECUTION_STACK
  CONTEXT = EXECUTION_STACK[(- EXECUTION_STACK.length 1i)]
  app __x2__ = (NormalCompletion value)
  withcont __x3__ (result) = {
    if (= genContext.ReturnCont absent) genContext.ReturnCont = (new []) else {}
    append __x3__ -> genContext.ReturnCont
    app _ = (genContext.ResumeCont __x2__)
  }
  return result
}