digraph {
  node11742 [shape=diamond, label=<<font color="black">(|| (|| (= num NaN) (= num Infinity)) (= num -Infinity))</font>> color="black" fillcolor="white" style=filled]
  node11737 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let num = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11740 [shape=cds, label=<<font color="black">0:app __x0__ = (ToNumber number)</font>> color="black" fillcolor="white" style=filled]
  node11738 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11743 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11739 [shape=cds, label=<<font color="black">app number = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11744 -> node11738 [ color="black"]
  node11740 -> node11741 [ color="black"]
  node11737 -> node11739 [ color="black"]
  node11743 -> node11738 [ color="black"]
  node11742 -> node11743 [label=<<font color="black">true</font>> color="black"]
  node11742 -> node11744 [label=<<font color="black">false</font>> color="black"]
  node11741 -> node11742 [ color="black"]
  node11739 -> node11740 [ color="black"]
}
