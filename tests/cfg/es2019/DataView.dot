digraph {
  node16658 [shape=diamond, label=<<font color="black">(= buffer.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node16673 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16677 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node16649 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16670 [shape=cds, label=<<font color="black">10:app __x3__ = (ToIndex byteLength)</font>> color="black" fillcolor="white" style=filled]
  node16674 [shape=cds, label=<<font color="black">12:app __x4__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_DataViewPrototype (new [&quot;DataView&quot;, &quot;ViewedArrayBuffer&quot;, &quot;ByteLength&quot;, &quot;ByteOffset&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16653 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16675 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let O = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let viewByteLength = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16662 [shape=cds, label=<<font color="black">4:app __x2__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16676 [shape=cds, label=<<font color="black">13:app __x5__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16668 [shape=diamond, label=<<font color="black">(|| (= byteLength absent) (= byteLength undefined))</font>> color="black" fillcolor="white" style=filled]
  node16651 [shape=cds, label=<<font color="black">app byteOffset = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16672 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset viewByteLength))</font>> color="black" fillcolor="white" style=filled]
  node16655 [shape=cds, label=<<font color="black">1:app __x0__ = (Type buffer)</font>> color="black" fillcolor="white" style=filled]
  node16648 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16665 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16661 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let offset = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16652 [shape=cds, label=<<font color="black">app byteLength = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16657 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16656 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16666 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength offset)</font>> color="black" fillcolor="white" style=filled]
  node16669 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let viewByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16660 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIndex byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node16678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16650 [shape=cds, label=<<font color="black">app buffer = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16663 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node16679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">15:O.ByteLength = viewByteLength</td></tr>
      <tr><td align="left">16:O.ByteOffset = offset</td></tr>
      <tr><td align="left">17:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16659 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16661 -> node16662 [ color="black"]
  node16663 -> node16664 [label=<<font color="black">true</font>> color="black"]
  node16663 -> node16665 [label=<<font color="black">false</font>> color="black"]
  node16659 -> node16660 [ color="black"]
  node16669 -> node16674 [ color="black"]
  node16676 -> node16677 [ color="black"]
  node16671 -> node16672 [ color="black"]
  node16660 -> node16661 [ color="black"]
  node16674 -> node16675 [ color="black"]
  node16673 -> node16674 [ color="black"]
  node16654 -> node16655 [ color="black"]
  node16670 -> node16671 [ color="black"]
  node16677 -> node16678 [label=<<font color="black">true</font>> color="black"]
  node16677 -> node16679 [label=<<font color="black">false</font>> color="black"]
  node16655 -> node16656 [ color="black"]
  node16665 -> node16666 [ color="black"]
  node16678 -> node16679 [ color="black"]
  node16679 -> node16649 [ color="black"]
  node16667 -> node16668 [ color="black"]
  node16666 -> node16667 [label=<<font color="black">true</font>> color="black"]
  node16666 -> node16668 [label=<<font color="black">false</font>> color="black"]
  node16653 -> node16654 [label=<<font color="black">true</font>> color="black"]
  node16653 -> node16655 [label=<<font color="black">false</font>> color="black"]
  node16648 -> node16650 [ color="black"]
  node16672 -> node16673 [label=<<font color="black">true</font>> color="black"]
  node16672 -> node16674 [label=<<font color="black">false</font>> color="black"]
  node16668 -> node16669 [label=<<font color="black">true</font>> color="black"]
  node16668 -> node16670 [label=<<font color="black">false</font>> color="black"]
  node16664 -> node16665 [ color="black"]
  node16651 -> node16652 [ color="black"]
  node16657 -> node16658 [ color="black"]
  node16652 -> node16653 [ color="black"]
  node16656 -> node16657 [label=<<font color="black">true</font>> color="black"]
  node16656 -> node16658 [label=<<font color="black">false</font>> color="black"]
  node16675 -> node16676 [ color="black"]
  node16662 -> node16663 [ color="black"]
  node16658 -> node16659 [label=<<font color="black">true</font>> color="black"]
  node16658 -> node16660 [label=<<font color="black">false</font>> color="black"]
  node16650 -> node16651 [ color="black"]
}
