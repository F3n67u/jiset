{
  [? V]
  [? W]
  if (! (= (typeof V) "ReferenceRecord")) throw ReferenceError else {}
  app __x0__ = (IsUnresolvableReference V)
  if (= __x0__ true) {
    if (= V.Strict true) throw ReferenceError else {}
    app __x1__ = (GetGlobalObject)
    let globalObj = __x1__
    app __x2__ = (Set globalObj V.ReferencedName W false)
    return [? __x2__]
  } else {}
  app __x3__ = (IsPropertyReference V)
  if (= __x3__ true) {
    app __x4__ = (ToObject V.Base)
    let baseObj = [! __x4__]
    app __x5__ = (GetThisValue V)
    app __x6__ = (baseObj.Set baseObj V.ReferencedName W __x5__)
    let succeeded = [? __x6__]
    if (&& (= succeeded false) (= V.Strict true)) throw TypeError else {}
    return undefined
  } else {
    let base = V.Base
    app __x7__ = (base.SetMutableBinding base V.ReferencedName W V.Strict)
    return [? __x7__]
  }
}