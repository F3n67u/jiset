digraph {
  node17492 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= promise.PromiseState &quot;pending&quot;)</td></tr>
      <tr><td align="left">1:let reactions = promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">2:promise.PromiseResult = value</td></tr>
      <tr><td align="left">3:promise.PromiseFulfillReactions = undefined</td></tr>
      <tr><td align="left">4:promise.PromiseRejectReactions = undefined</td></tr>
      <tr><td align="left">5:promise.PromiseState = &quot;fulfilled&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17491 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17494 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17489 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17488 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17490 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17493 [shape=cds, label=<<font color="black">6:app __x0__ = (TriggerPromiseReactions reactions value)</font>> color="black" fillcolor="white" style=filled]
  node17494 -> node17489 [ color="black"]
  node17488 -> node17490 [ color="black"]
  node17490 -> node17491 [ color="black"]
  node17492 -> node17493 [ color="black"]
  node17491 -> node17492 [ color="black"]
  node17493 -> node17494 [ color="black"]
}
