digraph {
  node2822 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2808 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2814 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P]))</font>> color="black" fillcolor="white" style=filled]
  node2805 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2801 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2813 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2802 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2816 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2821 [shape=diamond, label=<<font color="black">(= targetDesc.Configurable false)</font>> color="black" fillcolor="white" style=filled]
  node2807 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2818 [shape=cds, label=<<font color="black">10:app __x6__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node2815 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node2825 [shape=diamond, label=<<font color="black">(= extensibleTarget false)</font>> color="black" fillcolor="white" style=filled]
  node2819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let targetDesc = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2809 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;has&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2804 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2820 [shape=diamond, label=<<font color="black">(! (= targetDesc undefined))</font>> color="black" fillcolor="white" style=filled]
  node2806 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2817 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node2827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return booleanTrapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let extensibleTarget = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2812 [shape=cds, label=<<font color="black">7:app __x3__ = (target.HasProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node2823 [shape=cds, label=<<font color="black">13:app __x7__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node2811 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2803 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node2827 -> node2802 [ color="black"]
  node2819 -> node2820 [ color="black"]
  node2812 -> node2813 [ color="black"]
  node2820 -> node2821 [label=<<font color="black">true</font>> color="black"]
  node2820 -> node2827 [label=<<font color="black">false</font>> color="black"]
  node2813 -> node2814 [ color="black"]
  node2801 -> node2803 [ color="black"]
  node2805 -> node2806 [label=<<font color="black">true</font>> color="black"]
  node2805 -> node2807 [label=<<font color="black">false</font>> color="black"]
  node2825 -> node2826 [label=<<font color="black">true</font>> color="black"]
  node2825 -> node2827 [label=<<font color="black">false</font>> color="black"]
  node2808 -> node2809 [ color="black"]
  node2816 -> node2817 [ color="black"]
  node2814 -> node2815 [ color="black"]
  node2817 -> node2818 [label=<<font color="black">true</font>> color="black"]
  node2817 -> node2827 [label=<<font color="black">false</font>> color="black"]
  node2807 -> node2808 [ color="black"]
  node2809 -> node2810 [ color="black"]
  node2810 -> node2811 [ color="black"]
  node2822 -> node2823 [ color="black"]
  node2811 -> node2812 [label=<<font color="black">true</font>> color="black"]
  node2811 -> node2814 [label=<<font color="black">false</font>> color="black"]
  node2815 -> node2816 [ color="black"]
  node2824 -> node2825 [ color="black"]
  node2826 -> node2827 [ color="black"]
  node2804 -> node2805 [ color="black"]
  node2823 -> node2824 [ color="black"]
  node2806 -> node2807 [ color="black"]
  node2821 -> node2822 [label=<<font color="black">true</font>> color="black"]
  node2821 -> node2823 [label=<<font color="black">false</font>> color="black"]
  node2818 -> node2819 [ color="black"]
  node2803 -> node2804 [ color="black"]
}
