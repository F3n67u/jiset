digraph {
  node13676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:append position -&gt; replacerArgs</td></tr>
      <tr><td align="left">45:append S -&gt; replacerArgs</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13685 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13653 [shape=cds, label=<<font color="black">29:app __x20__ = (max (- nCaptures 1i) 0i)</font>> color="black" fillcolor="white" style=filled]
  node13624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let fullUnicode = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13650 [shape=cds, label=<<font color="black">28:app __x18__ = (Get result &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13616 [shape=cds, label=<<font color="black">6:app __x3__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13643 [shape=cds, label=<<font color="black">23:app __x14__ = (AdvanceStringIndex S thisIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node13672 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node13687 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return accumulatedResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13660 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let position = [? __x24__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13655 [shape=cds, label=<<font color="black">30:app __x21__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13640 [shape=cds, label=<<font color="black">22:app __x12__ = (Get rx &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13623 [shape=cds, label=<<font color="black">9:app __x7__ = (ToBoolean [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node13675 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x32__ = __x30__[__x31__]</td></tr>
      <tr><td align="left">append __x32__ -&gt; replacerArgs</td></tr>
      <tr><td align="left">__x31__ = (+ __x31__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13628 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node13626 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13611 [shape=cds, label=<<font color="black">2:app __x1__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node13679 [shape=cds, label=<<font color="black">47:app __x34__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node13619 [shape=cds, label=<<font color="black">7:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node13651 [shape=cds, label=<<font color="black">28:app __x19__ = (ToLength [? __x18__])</font>> color="black" fillcolor="white" style=filled]
  node13636 [shape=cds, label=<<font color="black">20:app __x10__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13608 [shape=cds, label=<<font color="black">1:app __x0__ = (Type rx)</font>> color="black" fillcolor="white" style=filled]
  node13664 [shape=diamond, label=<<font color="black">(! (&lt; nCaptures n))</font>> color="black" fillcolor="white" style=filled]
  node13658 [shape=cds, label=<<font color="black">32:app __x23__ = (Get result &quot;index&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let accumulatedResult = &quot;&quot;</td></tr>
      <tr><td align="left">26:let nextSourcePosition = 0i</td></tr>
      <tr><td align="left">27:let __x16__ = results</td></tr>
      <tr><td align="left">27:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13604 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13668 [shape=diamond, label=<<font color="black">(! (= capN undefined))</font>> color="black" fillcolor="white" style=filled]
  node13683 [shape=diamond, label=<<font color="black">(! (&lt; position nextSourcePosition))</font>> color="black" fillcolor="white" style=filled]
  node13671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:append capN -&gt; captures</td></tr>
      <tr><td align="left">41:let n = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let nextIndex = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13622 [shape=cds, label=<<font color="black">9:app __x6__ = (Get rx &quot;unicode&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let nCaptures = __x20__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13639 [shape=diamond, label=<<font color="black">(= matchStr &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13612 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let S = [? __x1__]</td></tr>
      <tr><td align="left">3:let lengthS = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13686 [shape=diamond, label=<<font color="black">(! (&lt; nextSourcePosition lengthS))</font>> color="black" fillcolor="white" style=filled]
  node13681 [shape=cds, label=<<font color="black">49:app __x35__ = (GetSubstitution matched S position captures replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13682 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:let replacement = __x35__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13661 [shape=cds, label=<<font color="black">33:app __x25__ = (min position lengthS)</font>> color="black" fillcolor="white" style=filled]
  node13607 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let rx = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13680 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:let replacement = [? __x34__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13629 [shape=cds, label=<<font color="black">14:app __x9__ = (RegExpExec rx S)</font>> color="black" fillcolor="white" style=filled]
  node13667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:let capN = [? __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13648 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node13603 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13618 [shape=cds, label=<<font color="black">7:app __x4__ = (Get rx &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13633 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:append result -&gt; results</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13673 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let replacerArgs = (new [matched])</td></tr>
      <tr><td align="left">44:let __x30__ = captures</td></tr>
      <tr><td align="left">44:let __x31__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13621 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white" style=filled]
  node13638 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let matchStr = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13606 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13609 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node13670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let capN = [? __x29__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13630 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let result = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13666 [shape=cds, label=<<font color="black">37:app __x28__ = (Get result [! __x27__])</font>> color="black" fillcolor="white" style=filled]
  node13613 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13662 [shape=cds, label=<<font color="black">33:app __x26__ = (max __x25__ 0i)</font>> color="black" fillcolor="white" style=filled]
  node13641 [shape=cds, label=<<font color="black">22:app __x13__ = (ToLength [? __x12__])</font>> color="black" fillcolor="white" style=filled]
  node13677 [shape=cds, label=<<font color="black">46:app __x33__ = (Call replaceValue undefined replacerArgs)</font>> color="black" fillcolor="white" style=filled]
  node13634 [shape=diamond, label=<<font color="black">(= global false)</font>> color="black" fillcolor="white" style=filled]
  node13645 [shape=cds, label=<<font color="black">24:app __x15__ = (Set rx &quot;lastIndex&quot; nextIndex true)</font>> color="black" fillcolor="white" style=filled]
  node13617 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let replaceValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13605 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13674 [shape=diamond, label=<<font color="black">(&lt; __x31__ __x30__.length)</font>> color="black" fillcolor="white" style=filled]
  node13688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">55:??? &quot;Return the String formed by concatenating the code units of id:{accumulatedResult} with the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up through the final code unit of id:{S} ( inclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13615 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node13627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let results = (new [])</td></tr>
      <tr><td align="left">12:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13625 [shape=cds, label=<<font color="black">10:app __x8__ = (Set rx &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node13656 [shape=cds, label=<<font color="black">30:app __x22__ = (ToString [? __x21__])</font>> color="black" fillcolor="white" style=filled]
  node13637 [shape=cds, label=<<font color="black">20:app __x11__ = (ToString [? __x10__])</font>> color="black" fillcolor="white" style=filled]
  node13610 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13642 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let thisIndex = [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13659 [shape=cds, label=<<font color="black">32:app __x24__ = (ToInteger [? __x23__])</font>> color="black" fillcolor="white" style=filled]
  node13669 [shape=cds, label=<<font color="black">39:app __x29__ = (ToString capN)</font>> color="black" fillcolor="white" style=filled]
  node13652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let nCaptures = [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13614 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let functionalReplace = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13665 [shape=cds, label=<<font color="black">37:app __x27__ = (ToString n)</font>> color="black" fillcolor="white" style=filled]
  node13646 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:[? __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13663 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let position = __x26__</td></tr>
      <tr><td align="left">34:let n = 1i</td></tr>
      <tr><td align="left">35:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13657 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let matched = [? __x22__]</td></tr>
      <tr><td align="left">31:let matchLength = matched.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:let replValue = [? __x33__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13620 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let global = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13631 [shape=diamond, label=<<font color="black">(= result null)</font>> color="black" fillcolor="white" style=filled]
  node13684 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:??? &quot;Let id:{accumulatedResult} be the String formed by concatenating the code units of the current value of id:{accumulatedResult} with the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up to id:{position} ( exclusive ) and with the code units of id:{replacement} .&quot;</td></tr>
      <tr><td align="left">53:let nextSourcePosition = (+ position matchLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13632 -> node13628 [ color="black"]
  node13658 -> node13659 [ color="black"]
  node13610 -> node13611 [ color="black"]
  node13670 -> node13671 [ color="black"]
  node13622 -> node13623 [ color="black"]
  node13620 -> node13621 [ color="black"]
  node13640 -> node13641 [ color="black"]
  node13637 -> node13638 [ color="black"]
  node13627 -> node13628 [ color="black"]
  node13603 -> node13605 [ color="black"]
  node13665 -> node13666 [ color="black"]
  node13674 -> node13675 [label=<<font color="black">true</font>> color="black"]
  node13674 -> node13676 [label=<<font color="black">false</font>> color="black"]
  node13639 -> node13640 [label=<<font color="black">true</font>> color="black"]
  node13639 -> node13628 [label=<<font color="black">false</font>> color="black"]
  node13680 -> node13683 [ color="black"]
  node13677 -> node13678 [ color="black"]
  node13679 -> node13680 [ color="black"]
  node13647 -> node13648 [ color="black"]
  node13625 -> node13626 [ color="black"]
  node13626 -> node13627 [ color="black"]
  node13687 -> node13688 [ color="black"]
  node13659 -> node13660 [ color="black"]
  node13641 -> node13642 [ color="black"]
  node13685 -> node13648 [ color="black"]
  node13683 -> node13684 [label=<<font color="black">true</font>> color="black"]
  node13683 -> node13685 [label=<<font color="black">false</font>> color="black"]
  node13635 -> node13628 [ color="black"]
  node13649 -> node13650 [ color="black"]
  node13614 -> node13615 [ color="black"]
  node13656 -> node13657 [ color="black"]
  node13616 -> node13617 [ color="black"]
  node13673 -> node13674 [ color="black"]
  node13638 -> node13639 [ color="black"]
  node13676 -> node13677 [ color="black"]
  node13615 -> node13616 [label=<<font color="black">true</font>> color="black"]
  node13615 -> node13618 [label=<<font color="black">false</font>> color="black"]
  node13608 -> node13609 [ color="black"]
  node13668 -> node13669 [label=<<font color="black">true</font>> color="black"]
  node13668 -> node13671 [label=<<font color="black">false</font>> color="black"]
  node13628 -> node13629 [label=<<font color="black">true</font>> color="black"]
  node13628 -> node13647 [label=<<font color="black">false</font>> color="black"]
  node13611 -> node13612 [ color="black"]
  node13681 -> node13682 [ color="black"]
  node13645 -> node13646 [ color="black"]
  node13643 -> node13644 [ color="black"]
  node13653 -> node13654 [ color="black"]
  node13648 -> node13649 [label=<<font color="black">true</font>> color="black"]
  node13648 -> node13686 [label=<<font color="black">false</font>> color="black"]
  node13621 -> node13622 [label=<<font color="black">true</font>> color="black"]
  node13621 -> node13627 [label=<<font color="black">false</font>> color="black"]
  node13605 -> node13606 [ color="black"]
  node13619 -> node13620 [ color="black"]
  node13660 -> node13661 [ color="black"]
  node13606 -> node13607 [ color="black"]
  node13650 -> node13651 [ color="black"]
  node13669 -> node13670 [ color="black"]
  node13678 -> node13679 [ color="black"]
  node13618 -> node13619 [ color="black"]
  node13644 -> node13645 [ color="black"]
  node13675 -> node13674 [ color="black"]
  node13624 -> node13625 [ color="black"]
  node13672 -> node13673 [label=<<font color="black">true</font>> color="black"]
  node13672 -> node13681 [label=<<font color="black">false</font>> color="black"]
  node13631 -> node13632 [label=<<font color="black">true</font>> color="black"]
  node13631 -> node13633 [label=<<font color="black">false</font>> color="black"]
  node13657 -> node13658 [ color="black"]
  node13629 -> node13630 [ color="black"]
  node13623 -> node13624 [ color="black"]
  node13652 -> node13653 [ color="black"]
  node13671 -> node13664 [ color="black"]
  node13607 -> node13608 [ color="black"]
  node13682 -> node13683 [ color="black"]
  node13646 -> node13628 [ color="black"]
  node13617 -> node13618 [ color="black"]
  node13613 -> node13614 [ color="black"]
  node13651 -> node13652 [ color="black"]
  node13684 -> node13685 [ color="black"]
  node13630 -> node13631 [ color="black"]
  node13688 -> node13604 [ color="black"]
  node13655 -> node13656 [ color="black"]
  node13661 -> node13662 [ color="black"]
  node13663 -> node13664 [ color="black"]
  node13664 -> node13665 [label=<<font color="black">true</font>> color="black"]
  node13664 -> node13672 [label=<<font color="black">false</font>> color="black"]
  node13666 -> node13667 [ color="black"]
  node13612 -> node13613 [ color="black"]
  node13686 -> node13687 [label=<<font color="black">true</font>> color="black"]
  node13686 -> node13688 [label=<<font color="black">false</font>> color="black"]
  node13636 -> node13637 [ color="black"]
  node13633 -> node13634 [ color="black"]
  node13662 -> node13663 [ color="black"]
  node13634 -> node13635 [label=<<font color="black">true</font>> color="black"]
  node13634 -> node13636 [label=<<font color="black">false</font>> color="black"]
  node13609 -> node13610 [label=<<font color="black">true</font>> color="black"]
  node13609 -> node13611 [label=<<font color="black">false</font>> color="black"]
  node13667 -> node13668 [ color="black"]
  node13654 -> node13655 [ color="black"]
  node13642 -> node13643 [ color="black"]
}
