digraph {
  node2880 [shape=cds, label=<<font color="black">12:app __x7__ = (IsDataDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node2862 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2883 [shape=diamond, label=<<font color="black">(= __x8__ false)</font>> color="black" fillcolor="white" style=filled]
  node2859 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2871 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2867 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2878 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let targetDesc = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2860 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2864 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2886 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x9__ true) (= targetDesc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node2869 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2861 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node2884 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2873 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node2872 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P, V, Receiver]))</font>> color="black" fillcolor="white" style=filled]
  node2877 [shape=cds, label=<<font color="black">10:app __x6__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node2868 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2863 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2888 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2882 [shape=cds, label=<<font color="black">13:app __x8__ = (SameValue V targetDesc.Value)</font>> color="black" fillcolor="white" style=filled]
  node2885 [shape=cds, label=<<font color="black">14:app __x9__ = (IsAccessorDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node2870 [shape=cds, label=<<font color="black">7:app __x3__ = (target.Set target P V Receiver)</font>> color="black" fillcolor="white" style=filled]
  node2865 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2875 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node2879 [shape=diamond, label=<<font color="black">(! (= targetDesc undefined))</font>> color="black" fillcolor="white" style=filled]
  node2881 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x7__ true) (&amp;&amp; (= targetDesc.Configurable false) (= targetDesc.Writable false)))</font>> color="black" fillcolor="white" style=filled]
  node2887 [shape=diamond, label=<<font color="black">(= targetDesc.Set undefined)</font>> color="black" fillcolor="white" style=filled]
  node2866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2876 -> node2877 [ color="black"]
  node2868 -> node2869 [ color="black"]
  node2888 -> node2889 [ color="black"]
  node2887 -> node2888 [label=<<font color="black">true</font>> color="black"]
  node2887 -> node2889 [label=<<font color="black">false</font>> color="black"]
  node2875 -> node2876 [label=<<font color="black">true</font>> color="black"]
  node2875 -> node2877 [label=<<font color="black">false</font>> color="black"]
  node2867 -> node2868 [ color="black"]
  node2881 -> node2882 [label=<<font color="black">true</font>> color="black"]
  node2881 -> node2885 [label=<<font color="black">false</font>> color="black"]
  node2883 -> node2884 [label=<<font color="black">true</font>> color="black"]
  node2883 -> node2885 [label=<<font color="black">false</font>> color="black"]
  node2862 -> node2863 [ color="black"]
  node2874 -> node2875 [ color="black"]
  node2873 -> node2874 [ color="black"]
  node2871 -> node2872 [ color="black"]
  node2872 -> node2873 [ color="black"]
  node2863 -> node2864 [label=<<font color="black">true</font>> color="black"]
  node2863 -> node2865 [label=<<font color="black">false</font>> color="black"]
  node2865 -> node2866 [ color="black"]
  node2861 -> node2862 [ color="black"]
  node2882 -> node2883 [ color="black"]
  node2870 -> node2871 [ color="black"]
  node2866 -> node2867 [ color="black"]
  node2878 -> node2879 [ color="black"]
  node2880 -> node2881 [ color="black"]
  node2889 -> node2860 [ color="black"]
  node2864 -> node2865 [ color="black"]
  node2877 -> node2878 [ color="black"]
  node2886 -> node2887 [label=<<font color="black">true</font>> color="black"]
  node2886 -> node2889 [label=<<font color="black">false</font>> color="black"]
  node2885 -> node2886 [ color="black"]
  node2884 -> node2885 [ color="black"]
  node2879 -> node2880 [label=<<font color="black">true</font>> color="black"]
  node2879 -> node2889 [label=<<font color="black">false</font>> color="black"]
  node2869 -> node2870 [label=<<font color="black">true</font>> color="black"]
  node2869 -> node2872 [label=<<font color="black">false</font>> color="black"]
  node2859 -> node2861 [ color="black"]
}
