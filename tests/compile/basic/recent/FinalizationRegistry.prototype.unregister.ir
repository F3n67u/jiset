{
  let finalizationRegistry = this
  app __x0__ = (RequireInternalSlot finalizationRegistry "Cells")
  [? __x0__]
  app __x1__ = (Type unregisterToken)
  if (! (= __x1__ Object)) throw TypeError else {}
  let removed = false
  let __x2__ = finalizationRegistry.Cells
  let __x3__ = 0i
  while (< __x3__ __x2__.length) {
    let cell = __x2__[__x3__]
    let __x4__ = true
    __x4__ = (! (= cell.UnregisterToken CONST_empty))
    if __x4__ {
      app __x5__ = (SameValue cell.UnregisterToken unregisterToken)
      __x4__ = (= __x5__ true)
    } else {}
    if __x4__ {
      ??? "Remove id:{cell} from id:{finalizationRegistry} . [ [ Cells ] ] ."
      removed = true
    } else {}
    __x3__ = (+ __x3__ 1i)
  }
  return removed
}