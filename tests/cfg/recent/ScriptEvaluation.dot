digraph {
  node10520 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node10519 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let result = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10523 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type CONST_normal) (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node10529 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:assert (&lt; 0i GLOBAL_executionStack.length)</td></tr>
      <tr><td align="left">17:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">18:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10528 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">(pop GLOBAL_executionStack (- GLOBAL_executionStack.length 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10518 [shape=cds, label=<<font color="black">10:app __x0__ = (GlobalDeclarationInstantiation scriptBody globalEnv)</font>> color="black" fillcolor="white" style=filled]
  node10524 [shape=cds, label=<<font color="black">14:app __x2__ = (NormalCompletion undefined)</font>> color="black" fillcolor="white" style=filled]
  node10525 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:result = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let globalEnv = scriptRecord.Realm.GlobalEnv</td></tr>
      <tr><td align="left">1:let scriptContext = (new ExecutionContext(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">2:scriptContext.Function = null</td></tr>
      <tr><td align="left">3:scriptContext.Realm = scriptRecord.Realm</td></tr>
      <tr><td align="left">4:scriptContext.ScriptOrModule = scriptRecord</td></tr>
      <tr><td align="left">5:scriptContext.VariableEnvironment = globalEnv</td></tr>
      <tr><td align="left">6:scriptContext.LexicalEnvironment = globalEnv</td></tr>
      <tr><td align="left">7:GLOBAL_context = null</td></tr>
      <tr><td align="left">8:append scriptContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">8:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">9:let scriptBody = scriptRecord.ECMAScriptCode</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10521 [shape=cds, label=<<font color="black">12:access __x1__ = (scriptBody &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10526 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:GLOBAL_context = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10515 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10522 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:result = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10516 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10527 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] scriptContext)</font>> color="black" fillcolor="white" style=filled]
  node10528 -> node10529 [ color="black"]
  node10518 -> node10519 [ color="black"]
  node10527 -> node10528 [label=<<font color="black">true</font>> color="black"]
  node10527 -> node10529 [label=<<font color="black">false</font>> color="black"]
  node10526 -> node10527 [ color="black"]
  node10522 -> node10523 [ color="black"]
  node10515 -> node10517 [ color="black"]
  node10520 -> node10521 [label=<<font color="black">true</font>> color="black"]
  node10520 -> node10523 [label=<<font color="black">false</font>> color="black"]
  node10523 -> node10524 [label=<<font color="black">true</font>> color="black"]
  node10523 -> node10526 [label=<<font color="black">false</font>> color="black"]
  node10521 -> node10522 [ color="black"]
  node10525 -> node10526 [ color="black"]
  node10517 -> node10518 [ color="black"]
  node10529 -> node10516 [ color="black"]
  node10524 -> node10525 [ color="black"]
  node10519 -> node10520 [ color="black"]
}
