digraph {
  node11024 [shape=cds, label=<<font color="black">0:access __x0__ = (body &quot;VarDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11090 [shape=diamond, label=<<font color="black">(= __x24__ true)</font>> color="black" fillcolor="white" style=filled]
  node11122 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">69:[? __x38__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11080 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x13__ = (+ __x13__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11043 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x5__[__x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11107 [shape=cds, label=<<font color="black">60:app __x32__ = (varEnvRec.HasBinding varEnvRec fn)</font>> color="black" fillcolor="white" style=filled]
  node11112 [shape=cds, label=<<font color="black">64:app __x34__ = (varEnvRec.InitializeBinding varEnvRec fn fo)</font>> color="black" fillcolor="white" style=filled]
  node11072 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11029 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11058 [shape=cds, label=<<font color="black">30:app __x11__ = (varEnvRec.CanDeclareGlobalFunction varEnvRec fn)</font>> color="black" fillcolor="white" style=filled]
  node11020 [shape=cds, label=<<font color="black">app body = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11075 [shape=diamond, label=<<font color="black">(= vnDefinable false)</font>> color="black" fillcolor="white" style=filled]
  node11055 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let fn = __x10__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:let __x15__ = __x14__</td></tr>
      <tr><td align="left">38:let __x16__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11025 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let varNames = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11087 [shape=diamond, label=<<font color="black">(&lt; __x23__ __x22__.length)</font>> color="black" fillcolor="white" style=filled]
  node11111 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">62:let status = [! __x33__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x9__ = (- __x9__ 1i)</td></tr>
      <tr><td align="left">let d = __x8__[__x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11040 [shape=diamond, label=<<font color="black">(! (= (typeof thisEnvRec) &quot;ObjectEnvironmentRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node11100 [shape=cds, label=<<font color="black">55:access __x29__ = (f &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">66:[! __x35__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11064 [shape=diamond, label=<<font color="black">(&lt; __x13__ __x12__.length)</font>> color="black" fillcolor="white" style=filled]
  node11083 [shape=diamond, label=<<font color="black">(&lt; __x20__ __x19__.length)</font>> color="black" fillcolor="white" style=filled]
  node11036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11047 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x6__ = (+ __x6__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let vn = __x36__[__x37__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11104 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11121 [shape=cds, label=<<font color="black">69:app __x38__ = (varEnvRec.CreateGlobalVarBinding varEnvRec vn true)</font>> color="black" fillcolor="white" style=filled]
  node11079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x16__ = (+ __x16__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11032 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x2__[__x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11069 [shape=diamond, label=<<font color="black">(&lt; __x16__ __x15__.length)</font>> color="black" fillcolor="white" style=filled]
  node11037 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let thisLex = lexEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">58:[? __x31__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:let vnDefinable = [? __x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11042 [shape=diamond, label=<<font color="black">(&lt; __x6__ __x5__.length)</font>> color="black" fillcolor="white" style=filled]
  node11101 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">55:let fn = __x29__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11056 [shape=diamond, label=<<font color="black">(! (contains declaredFunctionNames fn))</font>> color="black" fillcolor="white" style=filled]
  node11096 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x20__ = (+ __x20__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11057 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11128 [shape=cds, label=<<font color="black">75:app __x41__ = (varEnvRec.InitializeBinding varEnvRec vn undefined)</font>> color="black" fillcolor="white" style=filled]
  node11089 [shape=cds, label=<<font color="black">52:access __x24__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11019 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11088 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x22__[__x23__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11097 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">54:let __x27__ = functionsToInitialize</td></tr>
      <tr><td align="left">54:let __x28__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11026 [shape=cds, label=<<font color="black">1:access __x1__ = (body &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11116 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x28__ = (+ __x28__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11052 [shape=diamond, label=<<font color="black">(! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier)))</font>> color="black" fillcolor="white" style=filled]
  node11061 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11093 [shape=cds, label=<<font color="black">53:app __x26__ = (lexEnvRec.CreateMutableBinding lexEnvRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node11023 [shape=cds, label=<<font color="black">app strict = (GetArgument argumentsList 3i)</font>> color="black" fillcolor="white" style=filled]
  node11129 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">75:[! __x41__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11031 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node11084 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x19__[__x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11125 [shape=diamond, label=<<font color="black">(= bindingExists false)</font>> color="black" fillcolor="white" style=filled]
  node11065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x12__[__x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11120 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11110 [shape=cds, label=<<font color="black">62:app __x33__ = (varEnvRec.CreateMutableBinding varEnvRec fn true)</font>> color="black" fillcolor="white" style=filled]
  node11033 [shape=cds, label=<<font color="black">7:app __x4__ = (varEnvRec.HasLexicalDeclaration varEnvRec name)</font>> color="black" fillcolor="white" style=filled]
  node11063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">36:let __x12__ = varDeclarations</td></tr>
      <tr><td align="left">36:let __x13__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11105 [shape=cds, label=<<font color="black">58:app __x31__ = (varEnvRec.CreateGlobalFunctionBinding varEnvRec fn fo true)</font>> color="black" fillcolor="white" style=filled]
  node11124 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">71:let bindingExists = __x39__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let vn = __x15__[__x16__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11060 [shape=diamond, label=<<font color="black">(= fnDefinable false)</font>> color="black" fillcolor="white" style=filled]
  node11018 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11085 [shape=cds, label=<<font color="black">49:access __x21__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11053 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:assert (|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11038 [shape=diamond, label=<<font color="black">(! (= thisLex varEnv))</font>> color="black" fillcolor="white" style=filled]
  node11092 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:[? __x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11127 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">73:let status = [! __x40__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">67:let __x36__ = declaredVarNames</td></tr>
      <tr><td align="left">67:let __x37__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11078 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append vn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11073 [shape=cds, label=<<font color="black">41:app __x17__ = (varEnvRec.CanDeclareGlobalVar varEnvRec vn)</font>> color="black" fillcolor="white" style=filled]
  node11095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x23__ = (+ __x23__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11041 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let __x5__ = varNames</td></tr>
      <tr><td align="left">15:let __x6__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11102 [shape=cds, label=<<font color="black">56:access __x30__ = (f &quot;InstantiateFunctionObject&quot; lexEnv)</font>> color="black" fillcolor="white" style=filled]
  node11113 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">64:[! __x34__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11130 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x37__ = (+ __x37__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:append fn -&gt; declaredFunctionNames</td></tr>
      <tr><td align="left">33:prepend d -&gt; functionsToInitialize</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11077 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames vn))</font>> color="black" fillcolor="white" style=filled]
  node11030 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let __x2__ = varNames</td></tr>
      <tr><td align="left">6:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11045 [shape=diamond, label=<<font color="black">(= __x7__ true)</font>> color="black" fillcolor="white" style=filled]
  node11098 [shape=diamond, label=<<font color="black">(&lt; __x28__ __x27__.length)</font>> color="black" fillcolor="white" style=filled]
  node11126 [shape=cds, label=<<font color="black">73:app __x40__ = (varEnvRec.CreateMutableBinding varEnvRec vn true)</font>> color="black" fillcolor="white" style=filled]
  node11066 [shape=diamond, label=<<font color="black">(|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier))</font>> color="black" fillcolor="white" style=filled]
  node11027 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let varDeclarations = __x1__</td></tr>
      <tr><td align="left">2:let lexEnvRec = lexEnv.EnvironmentRecord</td></tr>
      <tr><td align="left">3:let varEnvRec = varEnv.EnvironmentRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11022 [shape=cds, label=<<font color="black">app lexEnv = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node11034 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node11049 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let functionsToInitialize = (new [])</td></tr>
      <tr><td align="left">22:let declaredFunctionNames = (new [])</td></tr>
      <tr><td align="left">23:let __x8__ = varDeclarations</td></tr>
      <tr><td align="left">23:let __x9__ = __x8__.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11109 [shape=diamond, label=<<font color="black">(= bindingExists false)</font>> color="black" fillcolor="white" style=filled]
  node11081 [shape=cds, label=<<font color="black">46:access __x18__ = (body &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11094 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:[? __x26__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11054 [shape=cds, label=<<font color="black">27:access __x10__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">60:let bindingExists = __x32__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11059 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let fnDefinable = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11123 [shape=cds, label=<<font color="black">71:app __x39__ = (varEnvRec.HasBinding varEnvRec vn)</font>> color="black" fillcolor="white" style=filled]
  node11044 [shape=cds, label=<<font color="black">16:app __x7__ = (thisEnvRec.HasBinding thisEnvRec name)</font>> color="black" fillcolor="white" style=filled]
  node11076 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11039 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let thisEnvRec = thisLex.EnvironmentRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11091 [shape=cds, label=<<font color="black">51:app __x25__ = (lexEnvRec.CreateImmutableBinding lexEnvRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node11071 [shape=diamond, label=<<font color="black">(! (contains declaredFunctionNames vn))</font>> color="black" fillcolor="white" style=filled]
  node11118 [shape=diamond, label=<<font color="black">(&lt; __x37__ __x36__.length)</font>> color="black" fillcolor="white" style=filled]
  node11131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">76:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11035 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11082 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:let lexDeclarations = __x18__</td></tr>
      <tr><td align="left">47:let __x19__ = lexDeclarations</td></tr>
      <tr><td align="left">47:let __x20__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11067 [shape=cds, label=<<font color="black">38:access __x14__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11028 [shape=diamond, label=<<font color="black">(= strict false)</font>> color="black" fillcolor="white" style=filled]
  node11099 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let f = __x27__[__x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11114 [shape=cds, label=<<font color="black">66:app __x35__ = (varEnvRec.SetMutableBinding varEnvRec fn fo false)</font>> color="black" fillcolor="white" style=filled]
  node11050 [shape=diamond, label=<<font color="black">(&lt; 0i __x9__)</font>> color="black" fillcolor="white" style=filled]
  node11021 [shape=cds, label=<<font color="black">app varEnv = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node11086 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:let __x22__ = __x21__</td></tr>
      <tr><td align="left">49:let __x23__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11048 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:thisLex = thisLex.Outer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11103 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">56:let fo = __x30__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11075 -> node11076 [label=<<font color="black">true</font>> color="black"]
  node11075 -> node11077 [label=<<font color="black">false</font>> color="black"]
  node11024 -> node11025 [ color="black"]
  node11050 -> node11051 [label=<<font color="black">true</font>> color="black"]
  node11050 -> node11063 [label=<<font color="black">false</font>> color="black"]
  node11097 -> node11098 [ color="black"]
  node11021 -> node11022 [ color="black"]
  node11073 -> node11074 [ color="black"]
  node11103 -> node11104 [ color="black"]
  node11129 -> node11130 [ color="black"]
  node11110 -> node11111 [ color="black"]
  node11094 -> node11095 [ color="black"]
  node11035 -> node11036 [ color="black"]
  node11125 -> node11126 [label=<<font color="black">true</font>> color="black"]
  node11125 -> node11130 [label=<<font color="black">false</font>> color="black"]
  node11054 -> node11055 [ color="black"]
  node11131 -> node11019 [ color="black"]
  node11090 -> node11091 [label=<<font color="black">true</font>> color="black"]
  node11090 -> node11093 [label=<<font color="black">false</font>> color="black"]
  node11060 -> node11061 [label=<<font color="black">true</font>> color="black"]
  node11060 -> node11062 [label=<<font color="black">false</font>> color="black"]
  node11056 -> node11057 [label=<<font color="black">true</font>> color="black"]
  node11056 -> node11050 [label=<<font color="black">false</font>> color="black"]
  node11085 -> node11086 [ color="black"]
  node11028 -> node11029 [label=<<font color="black">true</font>> color="black"]
  node11028 -> node11049 [label=<<font color="black">false</font>> color="black"]
  node11063 -> node11064 [ color="black"]
  node11086 -> node11087 [ color="black"]
  node11116 -> node11098 [ color="black"]
  node11095 -> node11087 [ color="black"]
  node11029 -> node11030 [label=<<font color="black">true</font>> color="black"]
  node11029 -> node11037 [label=<<font color="black">false</font>> color="black"]
  node11052 -> node11053 [label=<<font color="black">true</font>> color="black"]
  node11052 -> node11050 [label=<<font color="black">false</font>> color="black"]
  node11130 -> node11118 [ color="black"]
  node11113 -> node11116 [ color="black"]
  node11049 -> node11050 [ color="black"]
  node11044 -> node11045 [ color="black"]
  node11031 -> node11032 [label=<<font color="black">true</font>> color="black"]
  node11031 -> node11037 [label=<<font color="black">false</font>> color="black"]
  node11106 -> node11116 [ color="black"]
  node11101 -> node11102 [ color="black"]
  node11022 -> node11023 [ color="black"]
  node11057 -> node11058 [label=<<font color="black">true</font>> color="black"]
  node11057 -> node11062 [label=<<font color="black">false</font>> color="black"]
  node11083 -> node11084 [label=<<font color="black">true</font>> color="black"]
  node11083 -> node11097 [label=<<font color="black">false</font>> color="black"]
  node11108 -> node11109 [ color="black"]
  node11074 -> node11075 [ color="black"]
  node11064 -> node11065 [label=<<font color="black">true</font>> color="black"]
  node11064 -> node11081 [label=<<font color="black">false</font>> color="black"]
  node11088 -> node11089 [ color="black"]
  node11122 -> node11130 [ color="black"]
  node11093 -> node11094 [ color="black"]
  node11040 -> node11041 [label=<<font color="black">true</font>> color="black"]
  node11040 -> node11048 [label=<<font color="black">false</font>> color="black"]
  node11081 -> node11082 [ color="black"]
  node11041 -> node11042 [ color="black"]
  node11045 -> node11046 [label=<<font color="black">true</font>> color="black"]
  node11045 -> node11047 [label=<<font color="black">false</font>> color="black"]
  node11119 -> node11120 [ color="black"]
  node11096 -> node11083 [ color="black"]
  node11069 -> node11070 [label=<<font color="black">true</font>> color="black"]
  node11069 -> node11080 [label=<<font color="black">false</font>> color="black"]
  node11107 -> node11108 [ color="black"]
  node11111 -> node11112 [ color="black"]
  node11077 -> node11078 [label=<<font color="black">true</font>> color="black"]
  node11077 -> node11079 [label=<<font color="black">false</font>> color="black"]
  node11072 -> node11073 [label=<<font color="black">true</font>> color="black"]
  node11072 -> node11077 [label=<<font color="black">false</font>> color="black"]
  node11066 -> node11067 [label=<<font color="black">true</font>> color="black"]
  node11066 -> node11080 [label=<<font color="black">false</font>> color="black"]
  node11032 -> node11033 [ color="black"]
  node11067 -> node11068 [ color="black"]
  node11047 -> node11042 [ color="black"]
  node11109 -> node11110 [label=<<font color="black">true</font>> color="black"]
  node11109 -> node11114 [label=<<font color="black">false</font>> color="black"]
  node11117 -> node11118 [ color="black"]
  node11105 -> node11106 [ color="black"]
  node11061 -> node11062 [ color="black"]
  node11121 -> node11122 [ color="black"]
  node11065 -> node11066 [ color="black"]
  node11025 -> node11026 [ color="black"]
  node11076 -> node11077 [ color="black"]
  node11055 -> node11056 [ color="black"]
  node11033 -> node11034 [ color="black"]
  node11084 -> node11085 [ color="black"]
  node11114 -> node11115 [ color="black"]
  node11020 -> node11021 [ color="black"]
  node11058 -> node11059 [ color="black"]
  node11079 -> node11069 [ color="black"]
  node11046 -> node11047 [ color="black"]
  node11062 -> node11050 [ color="black"]
  node11128 -> node11129 [ color="black"]
  node11100 -> node11101 [ color="black"]
  node11080 -> node11064 [ color="black"]
  node11068 -> node11069 [ color="black"]
  node11038 -> node11039 [label=<<font color="black">true</font>> color="black"]
  node11038 -> node11049 [label=<<font color="black">false</font>> color="black"]
  node11059 -> node11060 [ color="black"]
  node11027 -> node11028 [ color="black"]
  node11102 -> node11103 [ color="black"]
  node11030 -> node11031 [ color="black"]
  node11078 -> node11079 [ color="black"]
  node11043 -> node11044 [ color="black"]
  node11051 -> node11052 [ color="black"]
  node11115 -> node11116 [ color="black"]
  node11123 -> node11124 [ color="black"]
  node11099 -> node11100 [ color="black"]
  node11104 -> node11105 [label=<<font color="black">true</font>> color="black"]
  node11104 -> node11107 [label=<<font color="black">false</font>> color="black"]
  node11089 -> node11090 [ color="black"]
  node11120 -> node11121 [label=<<font color="black">true</font>> color="black"]
  node11120 -> node11123 [label=<<font color="black">false</font>> color="black"]
  node11082 -> node11083 [ color="black"]
  node11053 -> node11054 [ color="black"]
  node11026 -> node11027 [ color="black"]
  node11018 -> node11020 [ color="black"]
  node11126 -> node11127 [ color="black"]
  node11037 -> node11038 [ color="black"]
  node11042 -> node11043 [label=<<font color="black">true</font>> color="black"]
  node11042 -> node11048 [label=<<font color="black">false</font>> color="black"]
  node11034 -> node11035 [label=<<font color="black">true</font>> color="black"]
  node11034 -> node11036 [label=<<font color="black">false</font>> color="black"]
  node11023 -> node11024 [ color="black"]
  node11048 -> node11038 [ color="black"]
  node11124 -> node11125 [ color="black"]
  node11087 -> node11088 [label=<<font color="black">true</font>> color="black"]
  node11087 -> node11096 [label=<<font color="black">false</font>> color="black"]
  node11118 -> node11119 [label=<<font color="black">true</font>> color="black"]
  node11118 -> node11131 [label=<<font color="black">false</font>> color="black"]
  node11039 -> node11040 [ color="black"]
  node11091 -> node11092 [ color="black"]
  node11036 -> node11031 [ color="black"]
  node11071 -> node11072 [label=<<font color="black">true</font>> color="black"]
  node11071 -> node11079 [label=<<font color="black">false</font>> color="black"]
  node11092 -> node11095 [ color="black"]
  node11112 -> node11113 [ color="black"]
  node11127 -> node11128 [ color="black"]
  node11070 -> node11071 [ color="black"]
  node11098 -> node11099 [label=<<font color="black">true</font>> color="black"]
  node11098 -> node11117 [label=<<font color="black">false</font>> color="black"]
}
