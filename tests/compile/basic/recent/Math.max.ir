{
  let coerced = (new [])
  let __x0__ = args
  let __x1__ = 0i
  while (< __x1__ __x0__.length) {
    let arg = __x0__[__x1__]
    app __x2__ = (ToNumber arg)
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
    let n = __x2__
    append n -> coerced
    __x1__ = (+ __x1__ 1i)
  }
  let highest = -Infinity
  let __x3__ = coerced
  let __x4__ = 0i
  while (< __x4__ __x3__.length) {
    let number = __x3__[__x4__]
    if (= number NaN) {
      app __x5__ = (WrapCompletion NaN)
      return __x5__
    } else {}
    if (&& (= number 0i) (= highest -0.0)) highest = 0i else {}
    if (< highest number) highest = number else {}
    __x4__ = (+ __x4__ 1i)
  }
  app __x6__ = (WrapCompletion highest)
  return __x6__
}