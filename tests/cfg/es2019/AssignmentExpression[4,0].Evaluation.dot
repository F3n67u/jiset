digraph {
  node5088 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5108 [shape=cds, label=<<font color="black">13:access __x10__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; rval)</font>> color="black" fillcolor="white" style=filled]
  node5091 [shape=cds, label=<<font color="black">5:app __x1__ = (IsAnonymousFunctionDefinition AssignmentExpression)</font>> color="black" fillcolor="white" style=filled]
  node5102 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x7__]</td></tr>
      <tr><td align="left">9:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5098 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rref = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5107 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let rval = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5090 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5095 [shape=cds, label=<<font color="black">4:access __x4__ = (AssignmentExpression &quot;NamedEvaluation&quot; __x3__)</font>> color="black" fillcolor="white" style=filled]
  node5086 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5106 [shape=cds, label=<<font color="black">12:app __x9__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rval = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5109 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x10__]</td></tr>
      <tr><td align="left">14:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5096 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let rval = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5101 [shape=cds, label=<<font color="black">8:app __x7__ = (PutValue lref rval)</font>> color="black" fillcolor="white" style=filled]
  node5099 [shape=cds, label=<<font color="black">7:app __x6__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5097 [shape=cds, label=<<font color="black">6:access __x5__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5103 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let assignmentPattern = (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5093 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x1__ true) (= __x2__ true))</font>> color="black" fillcolor="white" style=filled]
  node5094 [shape=cds, label=<<font color="black">4:app __x3__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5089 [shape=cds, label=<<font color="black">1:access __x0__ = (LeftHandSideExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5087 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5104 [shape=cds, label=<<font color="black">11:access __x8__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5092 [shape=cds, label=<<font color="black">5:access __x2__ = (LeftHandSideExpression &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5105 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rref = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5099 -> node5100 [ color="black"]
  node5105 -> node5106 [ color="black"]
  node5091 -> node5092 [ color="black"]
  node5098 -> node5099 [ color="black"]
  node5088 -> node5089 [label=<<font color="black">true</font>> color="black"]
  node5088 -> node5103 [label=<<font color="black">false</font>> color="black"]
  node5094 -> node5095 [ color="black"]
  node5107 -> node5108 [ color="black"]
  node5089 -> node5090 [ color="black"]
  node5106 -> node5107 [ color="black"]
  node5104 -> node5105 [ color="black"]
  node5100 -> node5101 [ color="black"]
  node5101 -> node5102 [ color="black"]
  node5108 -> node5109 [ color="black"]
  node5090 -> node5091 [ color="black"]
  node5093 -> node5094 [label=<<font color="black">true</font>> color="black"]
  node5093 -> node5097 [label=<<font color="black">false</font>> color="black"]
  node5097 -> node5098 [ color="black"]
  node5109 -> node5087 [ color="black"]
  node5103 -> node5104 [ color="black"]
  node5092 -> node5093 [ color="black"]
  node5086 -> node5088 [ color="black"]
  node5096 -> node5101 [ color="black"]
  node5095 -> node5096 [ color="black"]
  node5102 -> node5103 [ color="black"]
}
