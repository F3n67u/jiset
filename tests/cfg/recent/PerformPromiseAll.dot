digraph {
  node18770 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18787 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let nextPromise = [? __x8__]</td></tr>
      <tr><td align="left">21:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.all-resolve-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18783 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node18775 [shape=cds, label=<<font color="black">13:app __x4__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node18762 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18765 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node18779 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18785 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? nextValue]</td></tr>
      <tr><td align="left">19:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18791 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:[? __x10__]</td></tr>
      <tr><td align="left">30:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18772 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node18768 [shape=cds, label=<<font color="black">7:app __x3__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node18761 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node18781 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextValue = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18778 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18769 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node18760 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18782 [shape=cds, label=<<font color="black">17:app __x7__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node18773 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18786 [shape=cds, label=<<font color="black">20:app __x8__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node18777 [shape=cds, label=<<font color="black">14:app __x5__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node18774 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node18784 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18767 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18764 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ true)</td></tr>
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18789 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let resolveElement = [! __x9__]</td></tr>
      <tr><td align="left">23:resolveElement.AlreadyCalled = false</td></tr>
      <tr><td align="left">24:resolveElement.Index = index</td></tr>
      <tr><td align="left">25:resolveElement.Values = values</td></tr>
      <tr><td align="left">26:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">27:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">28:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18763 [shape=cds, label=<<font color="black">1:app __x1__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18780 [shape=cds, label=<<font color="black">16:app __x6__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node18790 [shape=cds, label=<<font color="black">29:app __x10__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node18766 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18771 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18788 [shape=cds, label=<<font color="black">22:app __x9__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18759 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18776 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let valuesArray = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18788 -> node18789 [ color="black"]
  node18782 -> node18783 [ color="black"]
  node18791 -> node18765 [ color="black"]
  node18770 -> node18771 [ color="black"]
  node18776 -> node18777 [ color="black"]
  node18761 -> node18762 [ color="black"]
  node18784 -> node18785 [ color="black"]
  node18762 -> node18763 [ color="black"]
  node18778 -> node18779 [ color="black"]
  node18789 -> node18790 [ color="black"]
  node18763 -> node18764 [ color="black"]
  node18767 -> node18768 [ color="black"]
  node18774 -> node18775 [label=<<font color="black">true</font>> color="black"]
  node18774 -> node18779 [label=<<font color="black">false</font>> color="black"]
  node18771 -> node18772 [ color="black"]
  node18779 -> node18780 [ color="black"]
  node18780 -> node18781 [ color="black"]
  node18766 -> node18767 [ color="black"]
  node18764 -> node18765 [ color="black"]
  node18759 -> node18761 [ color="black"]
  node18790 -> node18791 [ color="black"]
  node18769 -> node18770 [label=<<font color="black">true</font>> color="black"]
  node18769 -> node18771 [label=<<font color="black">false</font>> color="black"]
  node18787 -> node18788 [ color="black"]
  node18765 -> node18766 [label=<<font color="black">true</font>> color="black"]
  node18765 -> node18760 [label=<<font color="black">false</font>> color="black"]
  node18775 -> node18776 [ color="black"]
  node18785 -> node18786 [ color="black"]
  node18768 -> node18769 [ color="black"]
  node18786 -> node18787 [ color="black"]
  node18777 -> node18778 [ color="black"]
  node18773 -> node18774 [ color="black"]
  node18783 -> node18784 [label=<<font color="black">true</font>> color="black"]
  node18783 -> node18785 [label=<<font color="black">false</font>> color="black"]
  node18781 -> node18782 [ color="black"]
  node18772 -> node18773 [label=<<font color="black">true</font>> color="black"]
  node18772 -> node18780 [label=<<font color="black">false</font>> color="black"]
}
