digraph {
  node18001 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node18005 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18011 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17994 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18004 [shape=cds, label=<<font color="black">app __x2__ = (ToBigInt value)</font>> color="black" fillcolor="white" style=filled]
  node17999 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateIntegerTypedArray typedArray)</font>> color="black" fillcolor="white" style=filled]
  node17995 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18012 [shape=cds, label=<<font color="black">8:app __x5__ = (SetValueInBuffer buffer indexedPosition elementType v true CONST_SeqCst)</font>> color="black" fillcolor="white" style=filled]
  node18013 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:__x5__</td></tr>
      <tr><td align="left">9:return v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18003 [shape=diamond, label=<<font color="black">(|| (= arrayTypeName &quot;BigUint64Array&quot;) (= arrayTypeName &quot;BigInt64Array&quot;))</font>> color="black" fillcolor="white" style=filled]
  node18006 [shape=cds, label=<<font color="black">app __x3__ = (ToIntegerOrInfinity value)</font>> color="black" fillcolor="white" style=filled]
  node18000 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18009 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node17997 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18002 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let indexedPosition = [? __x1__]</td></tr>
      <tr><td align="left">2:let arrayTypeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18010 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18008 [shape=cds, label=<<font color="black">5:app __x4__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17998 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17996 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18007 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18009 -> node18010 [label=<<font color="black">true</font>> color="black"]
  node18009 -> node18011 [label=<<font color="black">false</font>> color="black"]
  node18010 -> node18011 [ color="black"]
  node18013 -> node17995 [ color="black"]
  node18011 -> node18012 [ color="black"]
  node17998 -> node17999 [ color="black"]
  node17994 -> node17996 [ color="black"]
  node18004 -> node18005 [ color="black"]
  node17997 -> node17998 [ color="black"]
  node17999 -> node18000 [ color="black"]
  node18012 -> node18013 [ color="black"]
  node18001 -> node18002 [ color="black"]
  node18008 -> node18009 [ color="black"]
  node17996 -> node17997 [ color="black"]
  node18007 -> node18008 [ color="black"]
  node18006 -> node18007 [ color="black"]
  node18002 -> node18003 [ color="black"]
  node18003 -> node18004 [label=<<font color="black">true</font>> color="black"]
  node18003 -> node18006 [label=<<font color="black">false</font>> color="black"]
  node18000 -> node18001 [ color="black"]
  node18005 -> node18008 [ color="black"]
}
