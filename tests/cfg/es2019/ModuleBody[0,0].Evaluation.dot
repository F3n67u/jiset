digraph {
  node10511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let result = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10513 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10510 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10509 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10508 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10512 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type CONST_normal) (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node10508 -> node10510 [ color="black"]
  node10513 -> node10514 [ color="black"]
  node10514 -> node10509 [ color="black"]
  node10512 -> node10513 [label=<<font color="black">true</font>> color="black"]
  node10512 -> node10514 [label=<<font color="black">false</font>> color="black"]
  node10510 -> node10511 [ color="black"]
  node10511 -> node10512 [ color="black"]
}
