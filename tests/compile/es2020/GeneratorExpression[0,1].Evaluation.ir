{
  [0] let scope = GLOBAL_context.LexicalEnvironment
  [1] app __x0__ = (NewDeclarativeEnvironment scope)
  [1] let funcEnv = __x0__
  [2] let envRec = funcEnv.EnvironmentRecord
  [3] access __x1__ = (BindingIdentifier "StringValue")
  [3] let name = __x1__
  [4] app __x2__ = (envRec.CreateImmutableBinding envRec name false)
  [4] __x2__
  [5] app __x3__ = (OrdinaryFunctionCreate INTRINSIC_Generator FormalParameters GeneratorBody CONST_nonDASHlexicalDASHthis funcEnv)
  [5] let closure = __x3__
  [6] ??? "Let id:{prototype} be OrdinaryObjectCreate ( % Generator . prototype % ) ."
  [7] app __x4__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  [7] __x4__
  [8] app __x5__ = (SetFunctionName closure name)
  [8] __x5__
  [9] app __x6__ = (envRec.InitializeBinding envRec name closure)
  [9] __x6__
  [10] closure.SourceText = (get-syntax GeneratorExpression)
  [11] app __x7__ = (WrapCompletion closure)
  [11] return __x7__
}