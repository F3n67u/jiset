{
  app promise = (GetArgument argumentsList 0i)
  [0] let alreadyResolved = (new Record("Value" -> false))
  [1] ??? "Let id:{stepsResolve} be the algorithm steps defined in Promise Resolve Functions ( link:{} ) ."
  [2] app __x0__ = (CreateBuiltinFunction stepsResolve (new ["Promise", "AlreadyResolved"]))
  [2] let resolve = __x0__
  [3] resolve.Promise = promise
  [4] resolve.AlreadyResolved = alreadyResolved
  [5] ??? "Let id:{stepsReject} be the algorithm steps defined in Promise Reject Functions ( link:{} ) ."
  [6] app __x1__ = (CreateBuiltinFunction stepsReject (new ["Promise", "AlreadyResolved"]))
  [6] let reject = __x1__
  [7] reject.Promise = promise
  [8] reject.AlreadyResolved = alreadyResolved
  [9] app __x2__ = (WrapCompletion (new Record("Resolve" -> resolve, "Reject" -> reject)))
  [9] return __x2__
}