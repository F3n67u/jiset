digraph {
  node14171 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14168 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14173 [shape=cds, label=<<font color="black">4:app __x1__ = (SameValue R INTRINSIC_RegExpPrototype)</font>> color="black" fillcolor="white" style=filled]
  node14167 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14174 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node14166 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14178 [shape=cds, label=<<font color="black">8:app __x2__ = (EscapeRegExpPattern src flags)</font>> color="black" fillcolor="white" style=filled]
  node14179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14169 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node14175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;(?:)&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14172 [shape=diamond, label=<<font color="black">(= R.OriginalSource absent)</font>> color="black" fillcolor="white" style=filled]
  node14177 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (! (= R.OriginalFlags absent))</td></tr>
      <tr><td align="left">6:let src = R.OriginalSource</td></tr>
      <tr><td align="left">7:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14170 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node14174 -> node14175 [label=<<font color="black">true</font>> color="black"]
  node14174 -> node14176 [label=<<font color="black">false</font>> color="black"]
  node14172 -> node14173 [label=<<font color="black">true</font>> color="black"]
  node14172 -> node14177 [label=<<font color="black">false</font>> color="black"]
  node14175 -> node14177 [ color="black"]
  node14169 -> node14170 [ color="black"]
  node14179 -> node14167 [ color="black"]
  node14170 -> node14171 [label=<<font color="black">true</font>> color="black"]
  node14170 -> node14172 [label=<<font color="black">false</font>> color="black"]
  node14178 -> node14179 [ color="black"]
  node14166 -> node14168 [ color="black"]
  node14176 -> node14177 [ color="black"]
  node14168 -> node14169 [ color="black"]
  node14177 -> node14178 [ color="black"]
  node14171 -> node14172 [ color="black"]
  node14173 -> node14174 [ color="black"]
}
