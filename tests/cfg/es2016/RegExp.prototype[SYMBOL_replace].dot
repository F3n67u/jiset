digraph {
  node12878 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let result = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12890 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let thisIndex = [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12876 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node12928 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:let replacement = [? __x34__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12934 [shape=diamond, label=<<font color="black">(! (&lt; nextSourcePosition lengthS))</font>> color="black" fillcolor="white" style=filled]
  node12911 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let position = __x26__</td></tr>
      <tr><td align="left">34:let n = 1i</td></tr>
      <tr><td align="left">35:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12896 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node12852 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12921 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let replacerArgs = (new [matched])</td></tr>
      <tr><td align="left">44:let __x30__ = captures</td></tr>
      <tr><td align="left">44:let __x31__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12865 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let replaceValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12929 [shape=cds, label=<<font color="black">49:app __x35__ = (GetSubstitution matched S position captures replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12916 [shape=diamond, label=<<font color="black">(! (= capN undefined))</font>> color="black" fillcolor="white" style=filled]
  node12879 [shape=diamond, label=<<font color="black">(= result null)</font>> color="black" fillcolor="white" style=filled]
  node12884 [shape=cds, label=<<font color="black">20:app __x10__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12901 [shape=cds, label=<<font color="black">29:app __x20__ = (max (- nCaptures 1i) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12869 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white" style=filled]
  node12920 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node12864 [shape=cds, label=<<font color="black">6:app __x3__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12875 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let results = (new [])</td></tr>
      <tr><td align="left">12:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12924 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:append position -&gt; replacerArgs</td></tr>
      <tr><td align="left">45:append S -&gt; replacerArgs</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12888 [shape=cds, label=<<font color="black">22:app __x12__ = (Get rx &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12860 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let S = [? __x1__]</td></tr>
      <tr><td align="left">3:let lengthS = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12907 [shape=cds, label=<<font color="black">32:app __x24__ = (ToInteger [? __x23__])</font>> color="black" fillcolor="white" style=filled]
  node12892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let nextIndex = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12935 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return accumulatedResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12898 [shape=cds, label=<<font color="black">28:app __x18__ = (Get result &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let accumulatedResult = &quot;&quot;</td></tr>
      <tr><td align="left">26:let nextSourcePosition = 0i</td></tr>
      <tr><td align="left">27:let __x16__ = results</td></tr>
      <tr><td align="left">27:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12927 [shape=cds, label=<<font color="black">47:app __x34__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node12910 [shape=cds, label=<<font color="black">33:app __x26__ = (max __x25__ 0i)</font>> color="black" fillcolor="white" style=filled]
  node12881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:append result -&gt; results</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12930 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:let replacement = __x35__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12905 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let matched = [? __x22__]</td></tr>
      <tr><td align="left">31:let matchLength = matched.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12866 [shape=cds, label=<<font color="black">7:app __x4__ = (Get rx &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12863 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node12906 [shape=cds, label=<<font color="black">32:app __x23__ = (Get result &quot;index&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12885 [shape=cds, label=<<font color="black">20:app __x11__ = (ToString [? __x10__])</font>> color="black" fillcolor="white" style=filled]
  node12917 [shape=cds, label=<<font color="black">39:app __x29__ = (ToString capN)</font>> color="black" fillcolor="white" style=filled]
  node12853 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12859 [shape=cds, label=<<font color="black">2:app __x1__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node12870 [shape=cds, label=<<font color="black">9:app __x6__ = (Get rx &quot;unicode&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12902 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let nCaptures = __x20__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12931 [shape=diamond, label=<<font color="black">(! (&lt; position nextSourcePosition))</font>> color="black" fillcolor="white" style=filled]
  node12923 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x32__ = __x30__[__x31__]</td></tr>
      <tr><td align="left">append __x32__ -&gt; replacerArgs</td></tr>
      <tr><td align="left">__x31__ = (+ __x31__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12913 [shape=cds, label=<<font color="black">37:app __x27__ = (ToString n)</font>> color="black" fillcolor="white" style=filled]
  node12889 [shape=cds, label=<<font color="black">22:app __x13__ = (ToLength [? __x12__])</font>> color="black" fillcolor="white" style=filled]
  node12891 [shape=cds, label=<<font color="black">23:app __x14__ = (AdvanceStringIndex S thisIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node12857 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node12874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12914 [shape=cds, label=<<font color="black">37:app __x28__ = (Get result [! __x27__])</font>> color="black" fillcolor="white" style=filled]
  node12862 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let functionalReplace = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12909 [shape=cds, label=<<font color="black">33:app __x25__ = (min position lengthS)</font>> color="black" fillcolor="white" style=filled]
  node12877 [shape=cds, label=<<font color="black">14:app __x9__ = (RegExpExec rx S)</font>> color="black" fillcolor="white" style=filled]
  node12936 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">55:??? &quot;Return the String formed by concatenating the code units of id:{accumulatedResult} with the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up through the final code unit of id:{S} ( inclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12867 [shape=cds, label=<<font color="black">7:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node12894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:[? __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12882 [shape=diamond, label=<<font color="black">(= global false)</font>> color="black" fillcolor="white" style=filled]
  node12926 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:let replValue = [? __x33__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12899 [shape=cds, label=<<font color="black">28:app __x19__ = (ToLength [? __x18__])</font>> color="black" fillcolor="white" style=filled]
  node12886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let matchStr = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12922 [shape=diamond, label=<<font color="black">(&lt; __x31__ __x30__.length)</font>> color="black" fillcolor="white" style=filled]
  node12903 [shape=cds, label=<<font color="black">30:app __x21__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12854 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12918 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let capN = [? __x29__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12858 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12873 [shape=cds, label=<<font color="black">10:app __x8__ = (Set rx &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node12932 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:??? &quot;Let id:{accumulatedResult} be the String formed by concatenating the code units of the current value of id:{accumulatedResult} with the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up to id:{position} ( exclusive ) and with the code units of id:{replacement} .&quot;</td></tr>
      <tr><td align="left">53:let nextSourcePosition = (+ position matchLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12871 [shape=cds, label=<<font color="black">9:app __x7__ = (ToBoolean [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node12861 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12868 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let global = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12856 [shape=cds, label=<<font color="black">1:app __x0__ = (Type rx)</font>> color="black" fillcolor="white" style=filled]
  node12883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12925 [shape=cds, label=<<font color="black">46:app __x33__ = (Call replaceValue undefined replacerArgs)</font>> color="black" fillcolor="white" style=filled]
  node12933 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12912 [shape=diamond, label=<<font color="black">(! (&lt; nCaptures n))</font>> color="black" fillcolor="white" style=filled]
  node12915 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:let capN = [? __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12880 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12900 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let nCaptures = [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12893 [shape=cds, label=<<font color="black">24:app __x15__ = (Set rx &quot;lastIndex&quot; nextIndex true)</font>> color="black" fillcolor="white" style=filled]
  node12851 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12904 [shape=cds, label=<<font color="black">30:app __x22__ = (ToString [? __x21__])</font>> color="black" fillcolor="white" style=filled]
  node12919 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:append capN -&gt; captures</td></tr>
      <tr><td align="left">41:let n = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12855 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let rx = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let fullUnicode = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12908 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let position = [? __x24__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12887 [shape=diamond, label=<<font color="black">(= matchStr &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12909 -> node12910 [ color="black"]
  node12906 -> node12907 [ color="black"]
  node12930 -> node12931 [ color="black"]
  node12894 -> node12876 [ color="black"]
  node12857 -> node12858 [label=<<font color="black">true</font>> color="black"]
  node12857 -> node12859 [label=<<font color="black">false</font>> color="black"]
  node12855 -> node12856 [ color="black"]
  node12935 -> node12936 [ color="black"]
  node12931 -> node12932 [label=<<font color="black">true</font>> color="black"]
  node12931 -> node12933 [label=<<font color="black">false</font>> color="black"]
  node12917 -> node12918 [ color="black"]
  node12876 -> node12877 [label=<<font color="black">true</font>> color="black"]
  node12876 -> node12895 [label=<<font color="black">false</font>> color="black"]
  node12870 -> node12871 [ color="black"]
  node12921 -> node12922 [ color="black"]
  node12871 -> node12872 [ color="black"]
  node12867 -> node12868 [ color="black"]
  node12914 -> node12915 [ color="black"]
  node12922 -> node12923 [label=<<font color="black">true</font>> color="black"]
  node12922 -> node12924 [label=<<font color="black">false</font>> color="black"]
  node12866 -> node12867 [ color="black"]
  node12901 -> node12902 [ color="black"]
  node12865 -> node12866 [ color="black"]
  node12933 -> node12896 [ color="black"]
  node12860 -> node12861 [ color="black"]
  node12886 -> node12887 [ color="black"]
  node12902 -> node12903 [ color="black"]
  node12899 -> node12900 [ color="black"]
  node12926 -> node12927 [ color="black"]
  node12891 -> node12892 [ color="black"]
  node12910 -> node12911 [ color="black"]
  node12932 -> node12933 [ color="black"]
  node12888 -> node12889 [ color="black"]
  node12924 -> node12925 [ color="black"]
  node12903 -> node12904 [ color="black"]
  node12856 -> node12857 [ color="black"]
  node12912 -> node12913 [label=<<font color="black">true</font>> color="black"]
  node12912 -> node12920 [label=<<font color="black">false</font>> color="black"]
  node12880 -> node12876 [ color="black"]
  node12851 -> node12853 [ color="black"]
  node12859 -> node12860 [ color="black"]
  node12862 -> node12863 [ color="black"]
  node12887 -> node12888 [label=<<font color="black">true</font>> color="black"]
  node12887 -> node12876 [label=<<font color="black">false</font>> color="black"]
  node12864 -> node12865 [ color="black"]
  node12919 -> node12912 [ color="black"]
  node12858 -> node12859 [ color="black"]
  node12936 -> node12852 [ color="black"]
  node12885 -> node12886 [ color="black"]
  node12869 -> node12870 [label=<<font color="black">true</font>> color="black"]
  node12869 -> node12875 [label=<<font color="black">false</font>> color="black"]
  node12908 -> node12909 [ color="black"]
  node12913 -> node12914 [ color="black"]
  node12929 -> node12930 [ color="black"]
  node12915 -> node12916 [ color="black"]
  node12878 -> node12879 [ color="black"]
  node12898 -> node12899 [ color="black"]
  node12923 -> node12922 [ color="black"]
  node12918 -> node12919 [ color="black"]
  node12925 -> node12926 [ color="black"]
  node12877 -> node12878 [ color="black"]
  node12873 -> node12874 [ color="black"]
  node12911 -> node12912 [ color="black"]
  node12861 -> node12862 [ color="black"]
  node12893 -> node12894 [ color="black"]
  node12853 -> node12854 [ color="black"]
  node12879 -> node12880 [label=<<font color="black">true</font>> color="black"]
  node12879 -> node12881 [label=<<font color="black">false</font>> color="black"]
  node12916 -> node12917 [label=<<font color="black">true</font>> color="black"]
  node12916 -> node12919 [label=<<font color="black">false</font>> color="black"]
  node12892 -> node12893 [ color="black"]
  node12905 -> node12906 [ color="black"]
  node12872 -> node12873 [ color="black"]
  node12895 -> node12896 [ color="black"]
  node12863 -> node12864 [label=<<font color="black">true</font>> color="black"]
  node12863 -> node12866 [label=<<font color="black">false</font>> color="black"]
  node12868 -> node12869 [ color="black"]
  node12920 -> node12921 [label=<<font color="black">true</font>> color="black"]
  node12920 -> node12929 [label=<<font color="black">false</font>> color="black"]
  node12854 -> node12855 [ color="black"]
  node12928 -> node12931 [ color="black"]
  node12882 -> node12883 [label=<<font color="black">true</font>> color="black"]
  node12882 -> node12884 [label=<<font color="black">false</font>> color="black"]
  node12874 -> node12875 [ color="black"]
  node12883 -> node12876 [ color="black"]
  node12900 -> node12901 [ color="black"]
  node12889 -> node12890 [ color="black"]
  node12884 -> node12885 [ color="black"]
  node12875 -> node12876 [ color="black"]
  node12896 -> node12897 [label=<<font color="black">true</font>> color="black"]
  node12896 -> node12934 [label=<<font color="black">false</font>> color="black"]
  node12904 -> node12905 [ color="black"]
  node12927 -> node12928 [ color="black"]
  node12890 -> node12891 [ color="black"]
  node12881 -> node12882 [ color="black"]
  node12934 -> node12935 [label=<<font color="black">true</font>> color="black"]
  node12934 -> node12936 [label=<<font color="black">false</font>> color="black"]
  node12897 -> node12898 [ color="black"]
  node12907 -> node12908 [ color="black"]
}
