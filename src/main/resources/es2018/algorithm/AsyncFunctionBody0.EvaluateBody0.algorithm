<algorithm>
  <param>FunctionBody</param>
  <step-list>
    <step>Let <id>promiseCapability</id> be ! NewPromiseCapability ( %Promise% ).</step>
    <step>Let <id>declResult</id> be FunctionDeclarationInstantiation ( <id>functionObject</id> , <id>argumentsList</id> ).</step>
    <step>If <id>declResult</id> is not an abrupt completion , then     <step-list>
      <step>Perform ! AsyncFunctionStart ( <id>promiseCapability</id> , FunctionBody ).</step>
    </step-list></step>
    <step>Else <id>declResult</id> is an abrupt completion ,     <step-list>
      <step>Perform ! Call ( <id>promiseCapability</id> .[[Reject]], <value>undefined</value> , « <id>declResult</id> .[[Value]] »).</step>
    </step-list></step>
    <step>Return Completion { [[Type]]: <value>return</value> , [[Value]]: <id>promiseCapability</id> .[[Promise]], [[Target]]: <value>empty</value> }.</step>
  </step-list>
</algorithm>