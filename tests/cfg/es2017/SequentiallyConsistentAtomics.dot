digraph {
  node17004 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17008 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node17005 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let happens - before be id:{execution} . [ [ HappensBefore ] ] .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;Let synchronizes - with be id:{execution} . [ [ SynchronizesWith ] ] .&quot;</td></tr>
      <tr><td align="left">2:??? &quot;For each pair of events id:{E} and id:{D} in EventSet ( id:{execution} ) , do in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17009 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let W = __x1__[__x2__]</td></tr>
      <tr><td align="left">9:??? &quot;If id:{W} . [ [ Order ] ] is code:{\&quot;SeqCst\&quot;} , then it is not the case that there is an infinite number of ReadSharedMemory or ReadModifyWriteSharedMemory events in SharedDataBlockEventSet ( id:{execution} ) with equal range that is memory - order before id:{W} .&quot;</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17006 [shape=cds, label=<<font color="black">8:app __x0__ = (SharedDataBlockEventSet execution)</font>> color="black" fillcolor="white" style=filled]
  node17003 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17007 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let __x1__ = __x0__</td></tr>
      <tr><td align="left">8:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17006 -> node17007 [ color="black"]
  node17003 -> node17005 [ color="black"]
  node17008 -> node17009 [label=<<font color="black">true</font>> color="black"]
  node17008 -> node17004 [label=<<font color="black">false</font>> color="black"]
  node17007 -> node17008 [ color="black"]
  node17009 -> node17008 [ color="black"]
  node17005 -> node17006 [ color="black"]
}
