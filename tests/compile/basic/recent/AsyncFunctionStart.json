["Let", {
  "id": "runningContext"
}, "be", "the", "running", "execution", "context", ".", {
  "k": 0
}, "Let", {
  "id": "asyncContext"
}, "be", "a", "copy", "of", {
  "id": "runningContext"
}, ".", {
  "k": 1
}, "NOTE", ":", "Copying", "the", "execution", "state", "is", "required", "for", "the", "step", "below", "to", "resume", "its", "execution", ".", "It", "is", "ill", "-", "defined", "to", "resume", "a", "currently", "executing", "context", ".", {
  "k": 2
}, "Set", "the", "code", "evaluation", "state", "of", {
  "id": "asyncContext"
}, "such", "that", "when", "evaluation", "is", "resumed", "for", "that", "execution", "context", "the", "following", "steps", "will", "be", "performed", ":", {
  "in": null
}, "Let", {
  "id": "result"
}, "be", "the", "result", "of", "evaluating", {
  "id": "asyncFunctionBody"
}, ".", {
  "k": 4
}, "Assert", ":", "If", "we", "return", "here", ",", "the", "async", "function", "either", "threw", "an", "exception", "or", "performed", "an", "implicit", "or", "explicit", "return", ";", "all", "awaiting", "is", "done", ".", {
  "k": 5
}, "Remove", {
  "id": "asyncContext"
}, "from", "the", "execution", "context", "stack", "and", "restore", "the", "execution", "context", "that", "is", "at", "the", "top", "of", "the", "execution", "context", "stack", "as", "the", "running", "execution", "context", ".", {
  "k": 6
}, "If", {
  "id": "result"
}, ".", "[", "[", "Type", "]", "]", "is", {
  "const": "normal"
}, ",", "then", {
  "in": null
}, "Perform", "!", "Call", "(", {
  "id": "promiseCapability"
}, ".", "[", "[", "Resolve", "]", "]", ",", {
  "value": "undefined"
}, ",", "«", {
  "value": "undefined"
}, "»", ")", ".", {
  "k": 8
}, {
  "out": null
}, {
  "k": 7
}, "Else", "if", {
  "id": "result"
}, ".", "[", "[", "Type", "]", "]", "is", {
  "const": "return"
}, ",", "then", {
  "in": null
}, "Perform", "!", "Call", "(", {
  "id": "promiseCapability"
}, ".", "[", "[", "Resolve", "]", "]", ",", {
  "value": "undefined"
}, ",", "«", {
  "id": "result"
}, ".", "[", "[", "Value", "]", "]", "»", ")", ".", {
  "k": 10
}, {
  "out": null
}, {
  "k": 9
}, "Else", ",", {
  "in": null
}, "Assert", ":", {
  "id": "result"
}, ".", "[", "[", "Type", "]", "]", "is", {
  "const": "throw"
}, ".", {
  "k": 12
}, "Perform", "!", "Call", "(", {
  "id": "promiseCapability"
}, ".", "[", "[", "Reject", "]", "]", ",", {
  "value": "undefined"
}, ",", "«", {
  "id": "result"
}, ".", "[", "[", "Value", "]", "]", "»", ")", ".", {
  "k": 13
}, {
  "out": null
}, {
  "k": 11
}, "Return", ".", {
  "k": 14
}, {
  "out": null
}, {
  "k": 3
}, "Push", {
  "id": "asyncContext"
}, "onto", "the", "execution", "context", "stack", ";", {
  "id": "asyncContext"
}, "is", "now", "the", "running", "execution", "context", ".", {
  "k": 15
}, "Resume", "the", "suspended", "evaluation", "of", {
  "id": "asyncContext"
}, ".", "Let", {
  "id": "result"
}, "be", "the", "value", "returned", "by", "the", "resumed", "computation", ".", {
  "k": 16
}, "Assert", ":", "When", "we", "return", "here", ",", {
  "id": "asyncContext"
}, "has", "already", "been", "removed", "from", "the", "execution", "context", "stack", "and", {
  "id": "runningContext"
}, "is", "the", "currently", "running", "execution", "context", ".", {
  "k": 17
}, "Assert", ":", {
  "id": "result"
}, "is", "a", "normal", "completion", "with", "a", "value", "of", {
  "value": "undefined"
}, ".", "The", "possible", "sources", "of", "completion", "values", "are", "Await", "or", ",", "if", "the", "async", "function", "doesn", "'", "t", "await", "anything", ",", "step", {
  "link": "unhandled: step-asyncfunctionstart-return-undefined"
}, "above", ".", {
  "k": 18
}, "Return", ".", {
  "k": 19
}]