{
  [0] let len = argumentsList.length
  [1] ??? "Let id:{obj} be OrdinaryObjectCreate ( % Object . prototype % , « [ [ ParameterMap ] ] » ) ."
  [2] obj.ParameterMap = undefined
  [3] app __x0__ = (DefinePropertyOrThrow obj "length" (new PropertyDescriptor("Value" -> len, "Writable" -> true, "Enumerable" -> false, "Configurable" -> true)))
  [3] __x0__
  [4] let index = 0i
  [5] while (< index len) {
    [6] let val = argumentsList[index]
    [7] app __x1__ = (ToString index)
    [7] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [8] {}
    [7] app __x2__ = (CreateDataPropertyOrThrow obj __x1__ val)
    [7] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [8] {}
    [7] __x2__
    [8] index = (+ index 1i)
  }
  [9] ??? "Perform ! DefinePropertyOrThrow ( id:{obj} , @ @ iterator , PropertyDescriptor { [ [ Value ] ] : % Array . prototype . values % , [ [ Writable ] ] : value:{true} , [ [ Enumerable ] ] : value:{false} , [ [ Configurable ] ] : value:{true} } ) ."
  [10] app __x3__ = (DefinePropertyOrThrow obj "callee" (new PropertyDescriptor("Get" -> INTRINSIC_ThrowTypeError, "Set" -> INTRINSIC_ThrowTypeError, "Enumerable" -> false, "Configurable" -> false)))
  [10] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [8] {}
  [10] __x3__
  [11] app __x4__ = (WrapCompletion obj)
  [11] return __x4__
}