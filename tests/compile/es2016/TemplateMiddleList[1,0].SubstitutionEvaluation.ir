{
  [0] access __x0__ = (TemplateMiddleList "SubstitutionEvaluation")
  [0] let preceding = __x0__
  [1] if (is-completion preceding) if (= preceding.Type CONST_normal) preceding = preceding.Value else return preceding else [6] {}
  [1] preceding
  [2] access __x1__ = (Expression "Evaluation")
  [2] let next = __x1__
  [3] if (is-completion next) if (= next.Type CONST_normal) next = next.Value else return next else [6] {}
  [3] next
  [4] append next -> preceding
  [5] app __x2__ = (WrapCompletion preceding)
  [5] return __x2__
}