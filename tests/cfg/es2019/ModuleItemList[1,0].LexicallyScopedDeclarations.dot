digraph {
  node10478 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node10474 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10477 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let __x2__ = __x1__</td></tr>
      <tr><td align="left">1:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10473 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10480 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return declarations</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10476 [shape=cds, label=<<font color="black">1:access __x1__ = (ModuleItem &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10479 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; declarations</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10472 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10475 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let declarations = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10480 -> node10473 [ color="black"]
  node10479 -> node10478 [ color="black"]
  node10475 -> node10476 [ color="black"]
  node10476 -> node10477 [ color="black"]
  node10474 -> node10475 [ color="black"]
  node10472 -> node10474 [ color="black"]
  node10478 -> node10479 [label=<<font color="black">true</font>> color="black"]
  node10478 -> node10480 [label=<<font color="black">false</font>> color="black"]
  node10477 -> node10478 [ color="black"]
}
