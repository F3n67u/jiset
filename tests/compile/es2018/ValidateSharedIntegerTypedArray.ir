{
  [0] if (= onlyInt32 absent) onlyInt32 = false else [0] {}
  [1] app __x0__ = (Type typedArray)
  [1] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [0] {}
  [2] if (= typedArray.TypedArrayName absent) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [0] {}
  [3] let typeName = typedArray.TypedArrayName
  [6] if (= onlyInt32 true) if (! (= typeName "Int32Array")) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else [0] {} else if (! (|| (|| (|| (|| (|| (= typeName "Int8Array") (= typeName "Uint8Array")) (= typeName "Int16Array")) (= typeName "Uint16Array")) (= typeName "Int32Array")) (= typeName "Uint32Array"))) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [0] {}
  [8] assert (! (= typedArray.ViewedArrayBuffer absent))
  [9] let buffer = typedArray.ViewedArrayBuffer
  [10] app __x5__ = (IsSharedArrayBuffer buffer)
  [10] if (= __x5__ false) {
    app __x6__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x6__
  } else [0] {}
  [11] app __x7__ = (WrapCompletion buffer)
  [11] return __x7__
}