{
  app x = (GetArgument argumentsList 0i)
  [0] app __x0__ = (ToNumber x)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [2] {}
  [0] let n = __x0__
  [1] ??? "If id:{n} is value:{NaN} , value:{+∞} , value:{-∞} , or an integral Number , return id:{n} ."
  [2] if (&& (< n 0.5) (< 0i n)) {
    app __x1__ = (WrapCompletion 0i)
    return __x1__
  } else [2] {}
  [3] if (&& (< n 0i) (! (< n -0.5))) {
    app __x2__ = (WrapCompletion -0.0)
    return __x2__
  } else [2] {}
  [4] ??? "Return the integral Number closest to id:{n} , preferring the Number closer to + ∞ in the case of a tie ."
}