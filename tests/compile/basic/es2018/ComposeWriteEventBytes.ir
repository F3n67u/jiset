{
  let byteLocation = byteIndex
  let bytesRead = (new [])
  let __x0__ = Ws
  let __x1__ = 0i
  while (< __x1__ __x0__.length) {
    let W = __x0__[__x1__]
    let payloadIndex = (- byteLocation W.ByteIndex)
    if (= (typeof W) "WriteSharedMemory") let byte = W.Payload[payloadIndex] else {
      app __x2__ = (ValueOfReadEvent execution W)
      let bytes = __x2__
      app __x3__ = (W.ModifyOp W bytes W.Payload)
      let bytesModified = __x3__
      let byte = bytesModified[payloadIndex]
    }
    append byte -> bytesRead
    byteLocation = (+ byteLocation 1i)
    __x1__ = (+ __x1__ 1i)
  }
  app __x4__ = (WrapCompletion bytesRead)
  return __x4__
}