{
  app __x0__ = (ToObject this)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let O = __x0__
  app __x1__ = (LengthOfArrayLike O)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let len = __x1__
  let argCount = items.length
  if (< (- (** 2.0 53i) 1i) (+ len argCount)) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else {}
  let __x3__ = items
  let __x4__ = 0i
  while (< __x4__ __x3__.length) {
    let E = __x3__[__x4__]
    app __x5__ = (ToString len)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
    app __x6__ = (Set O __x5__ E true)
    if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
    __x6__
    len = (+ len 1i)
    __x4__ = (+ __x4__ 1i)
  }
  app __x7__ = (Set O "length" len true)
  if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
  __x7__
  app __x8__ = (WrapCompletion len)
  return __x8__
}