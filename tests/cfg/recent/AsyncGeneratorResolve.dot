digraph {
  node19213 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let iteratorResult = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19209 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19216 [shape=cds, label=<<font color="black">8:app __x3__ = (AsyncGeneratorResumeNext generator)</font>> color="black" fillcolor="white" style=filled]
  node19214 [shape=cds, label=<<font color="black">7:app __x2__ = (Call promiseCapability.Resolve undefined (new [iteratorResult]))</font>> color="black" fillcolor="white" style=filled]
  node19210 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19211 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let queue = generator.AsyncGeneratorQueue</td></tr>
      <tr><td align="left">2:assert (&lt; 0i queue.length)</td></tr>
      <tr><td align="left">3:let next = queue[0i]</td></tr>
      <tr><td align="left">4:let __x0__ = (pop queue 0i)</td></tr>
      <tr><td align="left">5:let promiseCapability = next.Capability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19212 [shape=cds, label=<<font color="black">6:app __x1__ = (CreateIterResultObject value done)</font>> color="black" fillcolor="white" style=filled]
  node19217 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[! __x3__]</td></tr>
      <tr><td align="left">9:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19215 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19213 -> node19214 [ color="black"]
  node19215 -> node19216 [ color="black"]
  node19209 -> node19211 [ color="black"]
  node19212 -> node19213 [ color="black"]
  node19217 -> node19210 [ color="black"]
  node19211 -> node19212 [ color="black"]
  node19216 -> node19217 [ color="black"]
  node19214 -> node19215 [ color="black"]
}
