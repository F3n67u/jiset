digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">4:app __x1__ = (OrdinaryObjectCreate null)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let p = __x3__[__x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[! __x6__]</td></tr>
      <tr><td align="left">9:module.ImportMeta = importMeta</td></tr>
      <tr><td align="left">10:return importMeta</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:importMeta = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=diamond, label=<<font color="black">(&lt; __x4__ __x3__.length)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">8:app __x6__ = (HostFinalizeImportMeta importMeta module)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">0:app __x0__ = (GetActiveScriptOrModule)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x5__]</td></tr>
      <tr><td align="left">__x4__ = (+ __x4__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">5:app __x2__ = (HostGetImportMetaProperties module)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let module = [! __x0__]</td></tr>
      <tr><td align="left">1:assert (= (typeof module) &quot;SourceTextModuleRecord&quot;)</td></tr>
      <tr><td align="left">2:let importMeta = module.ImportMeta</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:assert (= __x7__ Object)</td></tr>
      <tr><td align="left">13:return importMeta</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">7:app __x5__ = (CreateDataPropertyOrThrow importMeta p.Key p.Value)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let importMetaValues = [! __x2__]</td></tr>
      <tr><td align="left">6:let __x3__ = importMetaValues</td></tr>
      <tr><td align="left">6:let __x4__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=diamond, label=<<font color="black">(= importMeta CONST_empty)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">12:app __x7__ = (Type importMeta)</font>> color="black" fillcolor="white" style=filled]
  node7 -> node8 [ color="black"]
  node13 -> node14 [ color="black"]
  node0 -> node2 [ color="black"]
  node6 -> node7 [ color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [label=<<font color="black">true</font>> color="black"]
  node4 -> node15 [label=<<font color="black">false</font>> color="black"]
  node8 -> node9 [ color="black"]
  node12 -> node9 [ color="black"]
  node14 -> node1 [ color="black"]
  node5 -> node6 [ color="black"]
  node16 -> node1 [ color="black"]
  node3 -> node4 [ color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node11 -> node12 [ color="black"]
  node9 -> node10 [label=<<font color="black">true</font>> color="black"]
  node9 -> node13 [label=<<font color="black">false</font>> color="black"]
}
