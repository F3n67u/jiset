{
  [0] app __x0__ = (Type argument)
  [0] if (= __x0__ Undefined) {
    [1] app __x1__ = (WrapCompletion "undefined")
    [1] return __x1__
  } else [9] {}
  [2] app __x2__ = (Type argument)
  [2] if (= __x2__ Null) {
    [3] app __x3__ = (WrapCompletion "null")
    [3] return __x3__
  } else [9] {}
  [4] app __x4__ = (Type argument)
  [4] if (= __x4__ Boolean) ??? "If id:{argument} is value:{true} , return value:{\"true\"} . If id:{argument} is value:{false} , return value:{\"false\"} ." else [9] {}
  [6] app __x5__ = (Type argument)
  [6] if (= __x5__ Number) ??? "Return ! Number : : toString ( id:{argument} ) ." else [9] {}
  [8] app __x6__ = (Type argument)
  [8] if (= __x6__ String) {
    [9] app __x7__ = (WrapCompletion argument)
    [9] return __x7__
  } else [9] {}
  [10] app __x8__ = (Type argument)
  [10] if (= __x8__ Symbol) {
    [11] app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    [11] return __x9__
  } else [9] {}
  [12] app __x10__ = (Type argument)
  [12] if (= __x10__ BigInt) ??? "Return ! BigInt : : toString ( id:{argument} ) ." else [9] {}
  [14] app __x11__ = (Type argument)
  [14] if (= __x11__ Object) {
    [15] app __x12__ = (ToPrimitive argument String)
    [15] if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else [9] {}
    [15] let primValue = __x12__
    [16] app __x13__ = (ToString primValue)
    [16] if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else [9] {}
    [16] app __x14__ = (WrapCompletion __x13__)
    [16] return __x14__
  } else [9] {}
}