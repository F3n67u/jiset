digraph {
  node7516 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7509 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7513 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node7512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7511 [shape=cds, label=<<font color="black">0:access __x0__ = (Block &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7515 [shape=cds, label=<<font color="black">2:access __x1__ = (Catch &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7510 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7513 -> node7514 [label=<<font color="black">true</font>> color="black"]
  node7513 -> node7515 [label=<<font color="black">false</font>> color="black"]
  node7514 -> node7515 [ color="black"]
  node7511 -> node7512 [ color="black"]
  node7512 -> node7513 [ color="black"]
  node7509 -> node7511 [ color="black"]
  node7515 -> node7516 [ color="black"]
  node7516 -> node7510 [ color="black"]
}
