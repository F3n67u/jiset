digraph {
  node15963 [shape=cds, label=<<font color="black">5:app __x3__ = (max intCount 0i)</font>> color="black" fillcolor="white" style=filled]
  node15971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let S = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15954 [shape=cds, label=<<font color="black">app count = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node15975 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:__x7__</td></tr>
      <tr><td align="left">17:append 1i -&gt; n</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15958 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15962 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let intCount = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15959 [shape=diamond, label=<<font color="black">(= count undefined)</font>> color="black" fillcolor="white" style=filled]
  node15972 [shape=diamond, label=<<font color="black">(&lt; 0i S.length)</font>> color="black" fillcolor="white" style=filled]
  node15951 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15960 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let c = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15956 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15969 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15957 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node15964 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let c = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15970 [shape=cds, label=<<font color="black">12:app __x6__ = (RemoveWaiters WL c)</font>> color="black" fillcolor="white" style=filled]
  node15967 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let WL = __x4__</td></tr>
      <tr><td align="left">10:let n = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15952 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15976 [shape=cds, label=<<font color="black">18:app __x8__ = (LeaveCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node15955 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray true)</font>> color="black" fillcolor="white" style=filled]
  node15961 [shape=cds, label=<<font color="black">4:app __x2__ = (ToInteger count)</font>> color="black" fillcolor="white" style=filled]
  node15968 [shape=cds, label=<<font color="black">11:app __x5__ = (EnterCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node15966 [shape=cds, label=<<font color="black">9:app __x4__ = (GetWaiterList block indexedPosition)</font>> color="black" fillcolor="white" style=filled]
  node15965 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let block = buffer.ArrayBufferData</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:let indexedPosition = (+ (* i 4i) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15973 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let W = S[0i]</td></tr>
      <tr><td align="left">15:(pop S 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15950 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15977 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x8__</td></tr>
      <tr><td align="left">19:return n</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15974 [shape=cds, label=<<font color="black">16:app __x7__ = (WakeWaiter WL W)</font>> color="black" fillcolor="white" style=filled]
  node15953 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15972 -> node15973 [label=<<font color="black">true</font>> color="black"]
  node15972 -> node15976 [label=<<font color="black">false</font>> color="black"]
  node15976 -> node15977 [ color="black"]
  node15954 -> node15955 [ color="black"]
  node15973 -> node15974 [ color="black"]
  node15952 -> node15953 [ color="black"]
  node15963 -> node15964 [ color="black"]
  node15977 -> node15951 [ color="black"]
  node15965 -> node15966 [ color="black"]
  node15974 -> node15975 [ color="black"]
  node15950 -> node15952 [ color="black"]
  node15968 -> node15969 [ color="black"]
  node15967 -> node15968 [ color="black"]
  node15962 -> node15963 [ color="black"]
  node15958 -> node15959 [ color="black"]
  node15955 -> node15956 [ color="black"]
  node15964 -> node15965 [ color="black"]
  node15966 -> node15967 [ color="black"]
  node15975 -> node15972 [ color="black"]
  node15960 -> node15965 [ color="black"]
  node15971 -> node15972 [ color="black"]
  node15970 -> node15971 [ color="black"]
  node15953 -> node15954 [ color="black"]
  node15959 -> node15960 [label=<<font color="black">true</font>> color="black"]
  node15959 -> node15961 [label=<<font color="black">false</font>> color="black"]
  node15956 -> node15957 [ color="black"]
  node15969 -> node15970 [ color="black"]
  node15957 -> node15958 [ color="black"]
  node15961 -> node15962 [ color="black"]
}
