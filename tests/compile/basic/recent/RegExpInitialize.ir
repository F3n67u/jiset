{
  if (= pattern undefined) let P = "" else {
    app __x0__ = (ToString pattern)
    let P = [? __x0__]
  }
  if (= flags undefined) let F = "" else {
    app __x1__ = (ToString flags)
    let F = [? __x1__]
  }
  ??? "If id:{F} contains any code unit other than value:{\"g\"} , value:{\"i\"} , value:{\"m\"} , value:{\"s\"} , value:{\"u\"} , or value:{\"y\"} or if it contains the same code unit more than once , throw a value:{SyntaxError} exception ."
  if (contains F "u") let u = true else let u = false
  if (= u true) {
    app __x2__ = (StringToCodePoints P)
    let patternText = [! __x2__]
    let patternCharacters = StrList
  } else {
    ??? "Let id:{patternText} be the result of interpreting each of id:{P} ' s 16 - bit elements as a Unicode BMP code point . UTF - 16 decoding is not applied to the elements ."
    let patternCharacters = StrList
  }
  app __x3__ = (ParsePattern patternText u)
  let parseResult = __x3__
  ??? "If id:{parseResult} is a non - empty List of value:{SyntaxError} objects , throw a value:{SyntaxError} exception ."
  obj.OriginalSource = P
  obj.OriginalFlags = F
  obj.RegExpMatcher = null
  app __x4__ = (Set obj "lastIndex" 0i true)
  [? __x4__]
  return obj
}