digraph {
  node15806 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15808 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15811 [shape=cds, label=<<font color="black">8:app __x3__ = (GetModifySetValueInBuffer buffer indexedPosition elementType v op)</font>> color="black" fillcolor="white" style=filled]
  node15803 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let v = [? __x2__]</td></tr>
      <tr><td align="left">3:let arrayTypeName = typedArray.TypedArrayName</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{elementType} be the String value of the Element Type value in link:{unhandled: table-49} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">6:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">7:let indexedPosition = (+ (* i elementSize) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15804 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15805 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray)</font>> color="black" fillcolor="white" style=filled]
  node15809 [shape=cds, label=<<font color="black">2:app __x2__ = (ToInteger value)</font>> color="black" fillcolor="white" style=filled]
  node15807 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node15806 -> node15807 [ color="black"]
  node15809 -> node15810 [ color="black"]
  node15807 -> node15808 [ color="black"]
  node15808 -> node15809 [ color="black"]
  node15805 -> node15806 [ color="black"]
  node15812 -> node15804 [ color="black"]
  node15803 -> node15805 [ color="black"]
  node15810 -> node15811 [ color="black"]
  node15811 -> node15812 [ color="black"]
}
