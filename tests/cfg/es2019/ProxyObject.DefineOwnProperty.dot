digraph {
  node3021 [shape=cds, label=<<font color="black">7:app __x3__ = (target.DefineOwnProperty target P Desc)</font>> color="black" fillcolor="white" style=filled]
  node3014 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let settingConfigFalse = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3022 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3018 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;defineProperty&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3042 [shape=cds, label=<<font color="black">20:app __x9__ = (IsCompatiblePropertyDescriptor extensibleTarget Desc targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3023 [shape=cds, label=<<font color="black">8:app __x4__ = (FromPropertyDescriptor Desc)</font>> color="black" fillcolor="white" style=filled]
  node3038 [shape=diamond, label=<<font color="black">(= extensibleTarget false)</font>> color="black" fillcolor="white" style=filled]
  node3016 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3031 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetDesc = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let descObj = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3039 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3040 [shape=diamond, label=<<font color="black">(= settingConfigFalse true)</font>> color="black" fillcolor="white" style=filled]
  node3012 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node3017 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3044 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3029 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3043 [shape=diamond, label=<<font color="black">(= __x9__ false)</font>> color="black" fillcolor="white" style=filled]
  node3011 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3037 [shape=diamond, label=<<font color="black">(= targetDesc undefined)</font>> color="black" fillcolor="white" style=filled]
  node3028 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node3033 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let extensibleTarget = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3010 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3032 [shape=cds, label=<<font color="black">12:app __x8__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node3027 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let booleanTrapResult = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3034 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Desc.Configurable absent)) (= Desc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node3019 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3026 [shape=cds, label=<<font color="black">9:app __x6__ = (ToBoolean [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node3041 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3015 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3030 [shape=cds, label=<<font color="black">11:app __x7__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3045 [shape=diamond, label=<<font color="black">(&amp;&amp; (= settingConfigFalse true) (= targetDesc.Configurable true))</font>> color="black" fillcolor="white" style=filled]
  node3025 [shape=cds, label=<<font color="black">9:app __x5__ = (Call trap handler (new [target, P, descObj]))</font>> color="black" fillcolor="white" style=filled]
  node3020 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3013 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3047 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3035 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let settingConfigFalse = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3045 -> node3046 [label=<<font color="black">true</font>> color="black"]
  node3045 -> node3047 [label=<<font color="black">false</font>> color="black"]
  node3014 -> node3015 [label=<<font color="black">true</font>> color="black"]
  node3014 -> node3016 [label=<<font color="black">false</font>> color="black"]
  node3044 -> node3045 [ color="black"]
  node3040 -> node3041 [label=<<font color="black">true</font>> color="black"]
  node3040 -> node3047 [label=<<font color="black">false</font>> color="black"]
  node3031 -> node3032 [ color="black"]
  node3035 -> node3037 [ color="black"]
  node3023 -> node3024 [ color="black"]
  node3024 -> node3025 [ color="black"]
  node3034 -> node3035 [label=<<font color="black">true</font>> color="black"]
  node3034 -> node3036 [label=<<font color="black">false</font>> color="black"]
  node3043 -> node3044 [label=<<font color="black">true</font>> color="black"]
  node3043 -> node3045 [label=<<font color="black">false</font>> color="black"]
  node3025 -> node3026 [ color="black"]
  node3016 -> node3017 [ color="black"]
  node3038 -> node3039 [label=<<font color="black">true</font>> color="black"]
  node3038 -> node3040 [label=<<font color="black">false</font>> color="black"]
  node3046 -> node3047 [ color="black"]
  node3030 -> node3031 [ color="black"]
  node3037 -> node3038 [label=<<font color="black">true</font>> color="black"]
  node3037 -> node3042 [label=<<font color="black">false</font>> color="black"]
  node3042 -> node3043 [ color="black"]
  node3010 -> node3012 [ color="black"]
  node3019 -> node3020 [ color="black"]
  node3022 -> node3023 [ color="black"]
  node3033 -> node3034 [ color="black"]
  node3013 -> node3014 [ color="black"]
  node3017 -> node3018 [ color="black"]
  node3026 -> node3027 [ color="black"]
  node3028 -> node3029 [label=<<font color="black">true</font>> color="black"]
  node3028 -> node3030 [label=<<font color="black">false</font>> color="black"]
  node3041 -> node3047 [ color="black"]
  node3029 -> node3030 [ color="black"]
  node3020 -> node3021 [label=<<font color="black">true</font>> color="black"]
  node3020 -> node3023 [label=<<font color="black">false</font>> color="black"]
  node3012 -> node3013 [ color="black"]
  node3018 -> node3019 [ color="black"]
  node3021 -> node3022 [ color="black"]
  node3039 -> node3040 [ color="black"]
  node3032 -> node3033 [ color="black"]
  node3036 -> node3037 [ color="black"]
  node3015 -> node3016 [ color="black"]
  node3027 -> node3028 [ color="black"]
  node3047 -> node3011 [ color="black"]
}
