digraph {
  node16994 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onlyInt32 = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17004 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (|| (|| (= typeName &quot;Int8Array&quot;) (= typeName &quot;Uint8Array&quot;)) (= typeName &quot;Int16Array&quot;)) (= typeName &quot;Uint16Array&quot;)) (= typeName &quot;Int32Array&quot;)) (= typeName &quot;Uint32Array&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node17008 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node17000 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let typeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17005 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17010 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return buffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17001 [shape=diamond, label=<<font color="black">(= onlyInt32 true)</font>> color="black" fillcolor="white" style=filled]
  node17009 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16999 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17006 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:assert (! (= typedArray.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">9:let buffer = typedArray.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16991 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17002 [shape=diamond, label=<<font color="black">(! (= typeName &quot;Int32Array&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16993 [shape=diamond, label=<<font color="black">(= onlyInt32 absent)</font>> color="black" fillcolor="white" style=filled]
  node17003 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16996 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16997 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16998 [shape=diamond, label=<<font color="black">(= typedArray.TypedArrayName absent)</font>> color="black" fillcolor="white" style=filled]
  node16995 [shape=cds, label=<<font color="black">1:app __x0__ = (Type typedArray)</font>> color="black" fillcolor="white" style=filled]
  node17007 [shape=cds, label=<<font color="black">10:app __x1__ = (IsSharedArrayBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16992 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17009 -> node17010 [ color="black"]
  node17002 -> node17003 [label=<<font color="black">true</font>> color="black"]
  node17002 -> node17006 [label=<<font color="black">false</font>> color="black"]
  node17010 -> node16992 [ color="black"]
  node16991 -> node16993 [ color="black"]
  node17001 -> node17002 [label=<<font color="black">true</font>> color="black"]
  node17001 -> node17004 [label=<<font color="black">false</font>> color="black"]
  node16996 -> node16997 [label=<<font color="black">true</font>> color="black"]
  node16996 -> node16998 [label=<<font color="black">false</font>> color="black"]
  node17005 -> node17006 [ color="black"]
  node16997 -> node16998 [ color="black"]
  node17003 -> node17006 [ color="black"]
  node17008 -> node17009 [label=<<font color="black">true</font>> color="black"]
  node17008 -> node17010 [label=<<font color="black">false</font>> color="black"]
  node17006 -> node17007 [ color="black"]
  node16994 -> node16995 [ color="black"]
  node16995 -> node16996 [ color="black"]
  node16993 -> node16994 [label=<<font color="black">true</font>> color="black"]
  node16993 -> node16995 [label=<<font color="black">false</font>> color="black"]
  node17000 -> node17001 [ color="black"]
  node17004 -> node17005 [label=<<font color="black">true</font>> color="black"]
  node17004 -> node17006 [label=<<font color="black">false</font>> color="black"]
  node16998 -> node16999 [label=<<font color="black">true</font>> color="black"]
  node16998 -> node17000 [label=<<font color="black">false</font>> color="black"]
  node16999 -> node17000 [ color="black"]
  node17007 -> node17008 [ color="black"]
}
