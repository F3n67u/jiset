{
  [0] app __x0__ = (ToNumber argument)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [0] {}
  [0] let number = __x0__
  [1] if (= number NaN) {
    app __x1__ = (WrapCompletion 0i)
    return __x1__
  } else [0] {}
  [2] ??? "If ‚Ñù ( id:{number} ) ‚â§ 0 , return value:{+0} ."
  [3] ??? "If ‚Ñù ( id:{number} ) ‚â• 255 , return value:{255} ."
  [4] ??? "Let id:{f} be floor ( ‚Ñù ( id:{number} ) ) ."
  [5] ??? "If id:{f} + 0 . 5 < ‚Ñù ( id:{number} ) , return ùîΩ ( id:{f} + 1 ) ."
  [6] ??? "If ‚Ñù ( id:{number} ) < id:{f} + 0 . 5 , return ùîΩ ( id:{f} ) ."
  [7] ??? "If id:{f} is odd , return ùîΩ ( id:{f} + 1 ) ."
  [8] ??? "Return ùîΩ ( id:{f} ) ."
}