{
  let R = this
  app __x0__ = (Type R)
  if (! (= __x0__ Object)) throw INTRINSIC_TypeError else {}
  app __x1__ = (Get R "source")
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  app __x2__ = (ToString __x1__)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let pattern = __x2__
  app __x3__ = (Get R "flags")
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  app __x4__ = (ToString __x3__)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  let flags = __x4__
  let result = (+ (+ (+ "/" pattern) "/") flags)
  app __x5__ = (WrapCompletion result)
  return __x5__
}