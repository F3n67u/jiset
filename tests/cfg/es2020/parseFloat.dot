digraph {
  node12180 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12185 [shape=cds, label=<<font color="black">4:access __x2__ = (numberString &quot;MV&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12179 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12183 [shape=cds, label=<<font color="black">1:app __x1__ = (TrimString inputString CONST_start)</font>> color="black" fillcolor="white" style=filled]
  node12186 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let mathFloat = __x2__</td></tr>
      <tr><td align="left">5:??? &quot;If id:{mathFloat} = 0 sub:{‚Ñù} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">8:return mathFloat</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let trimmedString = [! __x1__]</td></tr>
      <tr><td align="left">2:??? &quot;If neither id:{trimmedString} nor any prefix of id:{trimmedString} satisfies the syntax of a nt:{StrDecimalLiteral} ( see link:{unhandled: sec-tonumber-applied-to-the-string-type} ) , return value:{NaN} .&quot;</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{numberString} be the longest prefix of id:{trimmedString} , which might be id:{trimmedString} itself , that satisfies the syntax of a nt:{StrDecimalLiteral} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let inputString = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12178 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12181 [shape=cds, label=<<font color="black">0:app __x0__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node12178 -> node12180 [ color="black"]
  node12182 -> node12183 [ color="black"]
  node12184 -> node12185 [ color="black"]
  node12185 -> node12186 [ color="black"]
  node12183 -> node12184 [ color="black"]
  node12181 -> node12182 [ color="black"]
  node12180 -> node12181 [ color="black"]
  node12186 -> node12179 [ color="black"]
}
