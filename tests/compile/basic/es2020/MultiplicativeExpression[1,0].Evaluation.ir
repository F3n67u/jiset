{
  access __x0__ = (MultiplicativeExpression "Evaluation")
  let left = __x0__
  app __x1__ = (GetValue left)
  let leftValue = [? __x1__]
  access __x2__ = (ExponentiationExpression "Evaluation")
  let right = __x2__
  app __x3__ = (GetValue right)
  let rightValue = [? __x3__]
  app __x4__ = (ToNumeric leftValue)
  let lnum = [? __x4__]
  app __x5__ = (ToNumeric rightValue)
  let rnum = [? __x5__]
  if (! (= (typeof lnum) (typeof rnum))) throw TypeError else {}
  let T = (typeof lnum)
  if (= MultiplicativeOperator ??? "*") {
    app __x6__ = (PRIMITIVE[T].multiply lnum rnum)
    return __x6__
  } else {}
  if (= MultiplicativeOperator ??? "/") {
    app __x7__ = (PRIMITIVE[T].divide lnum rnum)
    return __x7__
  } else {
    assert (= MultiplicativeOperator ??? "%")
    app __x8__ = (PRIMITIVE[T].remainder lnum rnum)
    return __x8__
  }
}