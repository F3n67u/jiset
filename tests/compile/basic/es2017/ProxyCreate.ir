{
  app __x0__ = (Type target)
  if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  if (&& (= (typeof target) "ProxyExoticObject") (= target.ProxyHandler null)) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else {}
  app __x3__ = (Type handler)
  if (! (= __x3__ Object)) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else {}
  if (&& (= (typeof handler) "ProxyExoticObject") (= handler.ProxyHandler null)) {
    app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x5__
  } else {}
  let P = (new OrdinaryObject("SubMap" -> (new SubMap())))
  app __x6__ = (IsCallable target)
  if (= __x6__ true) {
    ??? "Set id:{P} . [ [ Call ] ] as specified in link:{} ."
    if (! (= target.Construct absent)) ??? "Set id:{P} . [ [ Construct ] ] as specified in link:{} ." else {}
  } else {}
  P.ProxyTarget = target
  P.ProxyHandler = handler
  app __x7__ = (WrapCompletion P)
  return __x7__
}