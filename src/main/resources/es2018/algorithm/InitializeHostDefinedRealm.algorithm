<algorithm>
  <step-list>
    <step>Let <id>realm</id> be CreateRealm ().</step>
    <step>Let <id>newContext</id> be a new execution context .</step>
    <step>Set the Function of <id>newContext</id> to <value>null</value> .</step>
    <step>Set the Realm of <id>newContext</id> to <id>realm</id> .</step>
    <step>Set the ScriptOrModule of <id>newContext</id> to <value>null</value> .</step>
    <step>Push <id>newContext</id> onto the execution context stack ; <id>newContext</id> is now the running execution context .</step>
    <step>If the host requires use of an exotic object to serve as <id>realm</id> 's global object , let <id>global</id> be such an object created in an implementation-defined manner. Otherwise, let <id>global</id> be <value>undefined</value> , indicating that an ordinary object should be created as the global object .</step>
    <step>If the host requires that the <value>this</value> binding in <id>realm</id> 's global scope return an object other than the global object , let <id>thisValue</id> be such an object created in an implementation-defined manner. Otherwise, let <id>thisValue</id> be <value>undefined</value> , indicating that <id>realm</id> 's global <value>this</value> binding should be the global object .</step>
    <step>Perform SetRealmGlobalObject ( <id>realm</id> , <id>global</id> , <id>thisValue</id> ).</step>
    <step>Let <id>globalObj</id> be ? SetDefaultGlobalBindings ( <id>realm</id> ).</step>
    <step>Create any implementation-defined global object properties on <id>globalObj</id> .</step>
    <step>Return NormalCompletion ( <value>empty</value> ).</step>
  </step-list>
</algorithm>