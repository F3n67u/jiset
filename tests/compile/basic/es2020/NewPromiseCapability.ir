{
  app __x0__ = (IsConstructor C)
  if (= __x0__ false) throw INTRINSIC_TypeError else {}
  let promiseCapability = (new PromiseCapability("Promise" -> undefined, "Resolve" -> undefined, "Reject" -> undefined))
  let steps = GetCapabilitiesExecutorFunctions
  app __x1__ = (CreateBuiltinFunction steps (new ["Capability"]))
  let executor = [! __x1__]
  executor.Capability = promiseCapability
  app __x2__ = (Construct C (new [executor]))
  let promise = [? __x2__]
  app __x3__ = (IsCallable promiseCapability.Resolve)
  if (= __x3__ false) throw INTRINSIC_TypeError else {}
  app __x4__ = (IsCallable promiseCapability.Reject)
  if (= __x4__ false) throw INTRINSIC_TypeError else {}
  promiseCapability.Promise = promise
  return promiseCapability
}