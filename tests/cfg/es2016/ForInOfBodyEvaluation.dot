digraph {
  node6707 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node6717 [shape=diamond, label=<<font color="black">(= lhsKind CONST_varBinding)</font>> color="black" fillcolor="white" style=filled]
  node6696 [shape=cds, label=<<font color="black">16:app __x4__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node6699 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:__x5__</td></tr>
      <tr><td align="left">18:GLOBAL_context.LexicalEnvironment = iterationEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6705 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6737 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let V = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6719 [shape=cds, label=<<font color="black">35:access __x12__ = (lhs &quot;BindingInitialization&quot; nextValue undefined)</font>> color="black" fillcolor="white" style=filled]
  node6683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (is-instance-of lhs LeftHandSideExpression)</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{assignmentPattern} be the parse of the source text corresponding to id:{lhs} using nt:{AssignmentPattern} as the goal symbol .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6715 [shape=cds, label=<<font color="black">32:access __x11__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6697 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let iterationEnv = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6712 [shape=cds, label=<<font color="black">29:app __x10__ = (PutValue lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6690 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextValue = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6695 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">15:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6732 [shape=diamond, label=<<font color="black">(= __x17__ false)</font>> color="black" fillcolor="white" style=filled]
  node6727 [shape=cds, label=<<font color="black">42:app __x15__ = (IteratorClose iterator status)</font>> color="black" fillcolor="white" style=filled]
  node6680 [shape=cds, label=<<font color="black">2:access __x0__ = (lhs &quot;IsDestructuring&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6723 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let status = __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6713 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let status = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let destructuring = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6734 [shape=cds, label=<<font color="black">app __x19__ = (IteratorClose iterator __x18__)</font>> color="black" fillcolor="white" style=filled]
  node6685 [shape=cds, label=<<font color="black">7:app __x1__ = (IteratorStep iterator)</font>> color="black" fillcolor="white" style=filled]
  node6702 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let lhsName = __x6__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6700 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6731 [shape=cds, label=<<font color="black">45:app __x17__ = (LoopContinues result labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6684 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node6708 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let status = lhsRef</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6709 [shape=diamond, label=<<font color="black">(= lhsKind CONST_lexicalBinding)</font>> color="black" fillcolor="white" style=filled]
  node6728 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">42:return [? __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6677 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6691 [shape=diamond, label=<<font color="black">(|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding))</font>> color="black" fillcolor="white" style=filled]
  node6720 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let status = __x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6724 [shape=cds, label=<<font color="black">40:app __x14__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node6716 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let status = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return V</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6710 [shape=cds, label=<<font color="black">27:app __x9__ = (InitializeReferencedBinding lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6725 [shape=diamond, label=<<font color="black">__x14__</font>> color="black" fillcolor="white" style=filled]
  node6678 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6692 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6687 [shape=diamond, label=<<font color="black">(= nextResult false)</font>> color="black" fillcolor="white" style=filled]
  node6704 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let lhsRef = [! __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6698 [shape=cds, label=<<font color="black">17:access __x5__ = (lhs &quot;BindingInstantiation&quot; iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node6736 [shape=diamond, label=<<font color="black">(! (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node6730 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let result = __x16__</td></tr>
      <tr><td align="left">44:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6701 [shape=cds, label=<<font color="black">21:access __x6__ = (lhs &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">1:let V = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6706 [shape=cds, label=<<font color="black">28:app __x8__ = (IsAbruptCompletion lhsRef)</font>> color="black" fillcolor="white" style=filled]
  node6721 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">38:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6711 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let status = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6726 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6689 [shape=cds, label=<<font color="black">9:app __x2__ = (IteratorValue nextResult)</font>> color="black" fillcolor="white" style=filled]
  node6694 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let lhsRef = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6703 [shape=cds, label=<<font color="black">22:app __x7__ = (ResolveBinding lhsName)</font>> color="black" fillcolor="white" style=filled]
  node6693 [shape=cds, label=<<font color="black">12:access __x3__ = (lhs &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6735 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6714 [shape=diamond, label=<<font color="black">(= lhsKind CONST_assignment)</font>> color="black" fillcolor="white" style=filled]
  node6729 [shape=cds, label=<<font color="black">43:access __x16__ = (stmt &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6682 [shape=diamond, label=<<font color="black">(&amp;&amp; (= destructuring true) (= lhsKind CONST_assignment))</font>> color="black" fillcolor="white" style=filled]
  node6733 [shape=cds, label=<<font color="black">app __x18__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node6718 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:assert (is-instance-of lhs ForBinding)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6686 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let nextResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6722 [shape=cds, label=<<font color="black">39:access __x13__ = (lhs &quot;BindingInitialization&quot; nextValue iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node6718 -> node6719 [ color="black"]
  node6691 -> node6692 [label=<<font color="black">true</font>> color="black"]
  node6691 -> node6695 [label=<<font color="black">false</font>> color="black"]
  node6680 -> node6681 [ color="black"]
  node6706 -> node6707 [ color="black"]
  node6695 -> node6696 [ color="black"]
  node6727 -> node6728 [ color="black"]
  node6685 -> node6686 [ color="black"]
  node6681 -> node6682 [ color="black"]
  node6699 -> node6700 [ color="black"]
  node6722 -> node6723 [ color="black"]
  node6679 -> node6680 [ color="black"]
  node6690 -> node6691 [ color="black"]
  node6697 -> node6698 [ color="black"]
  node6720 -> node6724 [ color="black"]
  node6694 -> node6705 [ color="black"]
  node6701 -> node6702 [ color="black"]
  node6707 -> node6708 [label=<<font color="black">true</font>> color="black"]
  node6707 -> node6709 [label=<<font color="black">false</font>> color="black"]
  node6687 -> node6688 [label=<<font color="black">true</font>> color="black"]
  node6687 -> node6689 [label=<<font color="black">false</font>> color="black"]
  node6717 -> node6718 [label=<<font color="black">true</font>> color="black"]
  node6717 -> node6721 [label=<<font color="black">false</font>> color="black"]
  node6677 -> node6679 [ color="black"]
  node6709 -> node6710 [label=<<font color="black">true</font>> color="black"]
  node6709 -> node6712 [label=<<font color="black">false</font>> color="black"]
  node6708 -> node6724 [ color="black"]
  node6692 -> node6693 [label=<<font color="black">true</font>> color="black"]
  node6692 -> node6705 [label=<<font color="black">false</font>> color="black"]
  node6684 -> node6685 [label=<<font color="black">true</font>> color="black"]
  node6684 -> node6678 [label=<<font color="black">false</font>> color="black"]
  node6688 -> node6689 [ color="black"]
  node6726 -> node6727 [ color="black"]
  node6704 -> node6705 [ color="black"]
  node6711 -> node6724 [ color="black"]
  node6729 -> node6730 [ color="black"]
  node6683 -> node6684 [ color="black"]
  node6705 -> node6706 [label=<<font color="black">true</font>> color="black"]
  node6705 -> node6714 [label=<<font color="black">false</font>> color="black"]
  node6713 -> node6724 [ color="black"]
  node6730 -> node6731 [ color="black"]
  node6714 -> node6715 [label=<<font color="black">true</font>> color="black"]
  node6714 -> node6717 [label=<<font color="black">false</font>> color="black"]
  node6721 -> node6722 [ color="black"]
  node6698 -> node6699 [ color="black"]
  node6693 -> node6694 [ color="black"]
  node6703 -> node6704 [ color="black"]
  node6725 -> node6726 [label=<<font color="black">true</font>> color="black"]
  node6725 -> node6729 [label=<<font color="black">false</font>> color="black"]
  node6732 -> node6733 [label=<<font color="black">true</font>> color="black"]
  node6732 -> node6736 [label=<<font color="black">false</font>> color="black"]
  node6735 -> node6736 [ color="black"]
  node6737 -> node6684 [ color="black"]
  node6724 -> node6725 [ color="black"]
  node6689 -> node6690 [ color="black"]
  node6731 -> node6732 [ color="black"]
  node6712 -> node6713 [ color="black"]
  node6710 -> node6711 [ color="black"]
  node6736 -> node6737 [label=<<font color="black">true</font>> color="black"]
  node6736 -> node6684 [label=<<font color="black">false</font>> color="black"]
  node6696 -> node6697 [ color="black"]
  node6715 -> node6716 [ color="black"]
  node6702 -> node6703 [ color="black"]
  node6700 -> node6701 [label=<<font color="black">true</font>> color="black"]
  node6700 -> node6705 [label=<<font color="black">false</font>> color="black"]
  node6719 -> node6720 [ color="black"]
  node6728 -> node6729 [ color="black"]
  node6686 -> node6687 [ color="black"]
  node6734 -> node6735 [ color="black"]
  node6682 -> node6683 [label=<<font color="black">true</font>> color="black"]
  node6682 -> node6684 [label=<<font color="black">false</font>> color="black"]
  node6733 -> node6734 [ color="black"]
  node6716 -> node6724 [ color="black"]
  node6723 -> node6724 [ color="black"]
}
