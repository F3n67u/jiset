[{
  "tokens": ["Assert", ":", "Type", "(", {
    "id": "S"
  }, ")", "is", "String", "."]
}, {
  "tokens": ["Assert", ":", "Type", "(", {
    "id": "global"
  }, ")", "is", "Boolean", "."]
}, {
  "tokens": ["Assert", ":", "Type", "(", {
    "id": "fullUnicode"
  }, ")", "is", "Boolean", "."]
}, {
  "tokens": ["Let", {
    "id": "closure"
  }, "be", "a", "new", "Abstract", "Closure", "with", "no", "parameters", "that", "captures", {
    "id": "R"
  }, ",", {
    "id": "S"
  }, ",", {
    "id": "global"
  }, ",", "and", {
    "id": "fullUnicode"
  }, "and", "performs", "the", "following", "steps", "when", "called", ":"]
}, {
  "tokens": ["Repeat", ","]
}, {
  "tokens": ["Let", {
    "id": "match"
  }, "be", "?", "RegExpExec", "(", {
    "id": "R"
  }, ",", {
    "id": "S"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "match"
  }, "is", {
    "value": "null"
  }, ",", "return", {
    "value": "undefined"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "global"
  }, "is", {
    "value": "false"
  }, ",", "then"]
}, {
  "tokens": ["Perform", "?", "Yield", "(", {
    "id": "match"
  }, ")", "."]
}, {
  "tokens": ["Return", {
    "value": "undefined"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "matchStr"
  }, "be", "?", "ToString", "(", "?", "Get", "(", {
    "id": "match"
  }, ",", {
    "value": "\"0\""
  }, ")", ")", "."]
}, {
  "tokens": ["If", {
    "id": "matchStr"
  }, "is", "the", "empty", "String", ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "thisIndex"
  }, "be", "‚Ñù", "(", "?", "ToLength", "(", "?", "Get", "(", {
    "id": "R"
  }, ",", {
    "value": "\"lastIndex\""
  }, ")", ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "nextIndex"
  }, "be", "!", "AdvanceStringIndex", "(", {
    "id": "S"
  }, ",", {
    "id": "thisIndex"
  }, ",", {
    "id": "fullUnicode"
  }, ")", "."]
}, {
  "tokens": ["Perform", "?", "Set", "(", {
    "id": "R"
  }, ",", {
    "value": "\"lastIndex\""
  }, ",", "ùîΩ", "(", {
    "id": "nextIndex"
  }, ")", ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Perform", "?", "Yield", "(", {
    "id": "match"
  }, ")", "."]
}, {
  "tokens": ["Return", "!", "CreateIteratorFromClosure", "(", {
    "id": "closure"
  }, ",", {
    "value": "\"%RegExpStringIteratorPrototype%\""
  }, ",", "%", "RegExpStringIteratorPrototype", "%", ")", "."]
}]