digraph {
  node14852 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14867 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14856 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14851 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14854 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node14865 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node14850 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14862 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node14857 [shape=diamond, label=<<font color="black">(= S.SetData absent)</font>> color="black" fillcolor="white" style=filled]
  node14859 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let entries = S.SetData</td></tr>
      <tr><td align="left">4:let __x1__ = entries</td></tr>
      <tr><td align="left">4:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14864 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__ = (= __x4__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:??? &quot;Replace the element of id:{entries} whose value is id:{e} with an element whose value is const:{empty} .&quot;</td></tr>
      <tr><td align="left">7:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14855 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node14860 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node14861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x1__[__x2__]</td></tr>
      <tr><td align="left">5:let __x3__ = true</td></tr>
      <tr><td align="left">5:__x3__ = (! (= e CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14868 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14853 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let S = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14858 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14863 [shape=cds, label=<<font color="black">app __x4__ = (SameValueZero e value)</font>> color="black" fillcolor="white" style=filled]
  node14862 -> node14863 [label=<<font color="black">true</font>> color="black"]
  node14862 -> node14865 [label=<<font color="black">false</font>> color="black"]
  node14850 -> node14852 [ color="black"]
  node14865 -> node14866 [label=<<font color="black">true</font>> color="black"]
  node14865 -> node14867 [label=<<font color="black">false</font>> color="black"]
  node14858 -> node14859 [ color="black"]
  node14859 -> node14860 [ color="black"]
  node14857 -> node14858 [label=<<font color="black">true</font>> color="black"]
  node14857 -> node14859 [label=<<font color="black">false</font>> color="black"]
  node14861 -> node14862 [ color="black"]
  node14868 -> node14851 [ color="black"]
  node14852 -> node14853 [ color="black"]
  node14853 -> node14854 [ color="black"]
  node14854 -> node14855 [ color="black"]
  node14855 -> node14856 [label=<<font color="black">true</font>> color="black"]
  node14855 -> node14857 [label=<<font color="black">false</font>> color="black"]
  node14867 -> node14860 [ color="black"]
  node14864 -> node14865 [ color="black"]
  node14856 -> node14857 [ color="black"]
  node14866 -> node14867 [ color="black"]
  node14863 -> node14864 [ color="black"]
  node14860 -> node14861 [label=<<font color="black">true</font>> color="black"]
  node14860 -> node14868 [label=<<font color="black">false</font>> color="black"]
}
