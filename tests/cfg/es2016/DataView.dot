digraph {
  node15408 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15403 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let offset = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15394 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15407 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node15417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15399 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15391 [shape=cds, label=<<font color="black">app byteOffset = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15389 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15405 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15397 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15412 [shape=diamond, label=<<font color="black">(= byteLength undefined)</font>> color="black" fillcolor="white" style=filled]
  node15418 [shape=cds, label=<<font color="black">14:app __x5__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_DataViewPrototype (new [&quot;DataView&quot;, &quot;ViewedArrayBuffer&quot;, &quot;ByteLength&quot;, &quot;ByteOffset&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15413 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let viewByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15398 [shape=diamond, label=<<font color="black">(= buffer.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node15409 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15402 [shape=cds, label=<<font color="black">4:app __x2__ = (ToInteger numberOffset)</font>> color="black" fillcolor="white" style=filled]
  node15392 [shape=cds, label=<<font color="black">app byteLength = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node15410 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength offset)</font>> color="black" fillcolor="white" style=filled]
  node15388 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15414 [shape=cds, label=<<font color="black">12:app __x4__ = (ToLength byteLength)</font>> color="black" fillcolor="white" style=filled]
  node15395 [shape=cds, label=<<font color="black">1:app __x0__ = (Type buffer)</font>> color="black" fillcolor="white" style=filled]
  node15406 [shape=cds, label=<<font color="black">6:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15401 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let numberOffset = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15415 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let viewByteLength = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15400 [shape=cds, label=<<font color="black">3:app __x1__ = (ToNumber byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node15390 [shape=cds, label=<<font color="black">app buffer = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15396 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15411 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15404 [shape=diamond, label=<<font color="black">(|| (! (== numberOffset offset)) (&lt; offset 0i))</font>> color="black" fillcolor="white" style=filled]
  node15419 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let O = [? __x5__]</td></tr>
      <tr><td align="left">15:O.DataView = true</td></tr>
      <tr><td align="left">16:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">17:O.ByteLength = viewByteLength</td></tr>
      <tr><td align="left">18:O.ByteOffset = offset</td></tr>
      <tr><td align="left">19:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15393 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15416 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset viewByteLength))</font>> color="black" fillcolor="white" style=filled]
  node15391 -> node15392 [ color="black"]
  node15407 -> node15408 [label=<<font color="black">true</font>> color="black"]
  node15407 -> node15409 [label=<<font color="black">false</font>> color="black"]
  node15408 -> node15409 [ color="black"]
  node15419 -> node15389 [ color="black"]
  node15392 -> node15393 [ color="black"]
  node15396 -> node15397 [label=<<font color="black">true</font>> color="black"]
  node15396 -> node15398 [label=<<font color="black">false</font>> color="black"]
  node15394 -> node15395 [ color="black"]
  node15415 -> node15416 [ color="black"]
  node15410 -> node15411 [label=<<font color="black">true</font>> color="black"]
  node15410 -> node15412 [label=<<font color="black">false</font>> color="black"]
  node15390 -> node15391 [ color="black"]
  node15395 -> node15396 [ color="black"]
  node15416 -> node15417 [label=<<font color="black">true</font>> color="black"]
  node15416 -> node15418 [label=<<font color="black">false</font>> color="black"]
  node15409 -> node15410 [ color="black"]
  node15401 -> node15402 [ color="black"]
  node15404 -> node15405 [label=<<font color="black">true</font>> color="black"]
  node15404 -> node15406 [label=<<font color="black">false</font>> color="black"]
  node15398 -> node15399 [label=<<font color="black">true</font>> color="black"]
  node15398 -> node15400 [label=<<font color="black">false</font>> color="black"]
  node15399 -> node15400 [ color="black"]
  node15412 -> node15413 [label=<<font color="black">true</font>> color="black"]
  node15412 -> node15414 [label=<<font color="black">false</font>> color="black"]
  node15405 -> node15406 [ color="black"]
  node15406 -> node15407 [ color="black"]
  node15411 -> node15412 [ color="black"]
  node15413 -> node15418 [ color="black"]
  node15402 -> node15403 [ color="black"]
  node15400 -> node15401 [ color="black"]
  node15388 -> node15390 [ color="black"]
  node15393 -> node15394 [label=<<font color="black">true</font>> color="black"]
  node15393 -> node15395 [label=<<font color="black">false</font>> color="black"]
  node15417 -> node15418 [ color="black"]
  node15403 -> node15404 [ color="black"]
  node15418 -> node15419 [ color="black"]
  node15397 -> node15398 [ color="black"]
  node15414 -> node15415 [ color="black"]
}
