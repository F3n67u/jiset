digraph {
  node10987 [shape=cds, label=<<font color="black">2:app __x3__ = (__x2__ iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node10982 [shape=cds, label=<<font color="black">0:app __x1__ = (__x0__ iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node10986 [shape=cds, label=<<font color="black">2:access __x2__ = (ModuleItem &quot;ContainsUndefinedContinueTarget&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10983 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10980 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10985 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10981 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;ContainsUndefinedContinueTarget&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10988 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10984 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node10979 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10981 -> node10982 [ color="black"]
  node10986 -> node10987 [ color="black"]
  node10984 -> node10985 [label=<<font color="black">true</font>> color="black"]
  node10984 -> node10986 [label=<<font color="black">false</font>> color="black"]
  node10988 -> node10980 [ color="black"]
  node10983 -> node10984 [ color="black"]
  node10987 -> node10988 [ color="black"]
  node10982 -> node10983 [ color="black"]
  node10985 -> node10986 [ color="black"]
  node10979 -> node10981 [ color="black"]
}
