{
  app __x0__ = (GetArgument argumentsList 0i)
  let items = __x0__
  app __x1__ = (GetArgument argumentsList 1i)
  let mapfn = __x1__
  app __x2__ = (GetArgument argumentsList 2i)
  let thisArg = __x2__
  let C = this
  if (= mapfn undefined) let mapping = false else {
    app __x3__ = (IsCallable mapfn)
    if (= __x3__ false) throw INTRINSIC_TypeError else {}
    let mapping = true
  }
  app __x4__ = (GetMethod items SYMBOL_iterator)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  let usingIterator = __x4__
  if (! (= usingIterator undefined)) {
    app __x5__ = (IsConstructor C)
    if (= __x5__ true) {
      app __x6__ = (Construct C)
      if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
      let A = __x6__
    } else {
      app __x7__ = (ArrayCreate 0i)
      if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
      let A = __x7__
    }
    app __x8__ = (GetIterator items CONST_sync usingIterator)
    if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
    let iteratorRecord = __x8__
    let k = 0i
    while true {
      if (! (< k (- (** 2.0 53i) 1i))) {
        app __x9__ = (ThrowCompletion ??? "TypeError")
        let error = __x9__
        app __x10__ = (IteratorClose iteratorRecord error)
        if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
        app __x11__ = (WrapCompletion __x10__)
        return __x11__
      } else {}
      app __x12__ = (ToString k)
      if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else {}
      let Pk = __x12__
      app __x13__ = (IteratorStep iteratorRecord)
      if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else {}
      let next = __x13__
      if (= next false) {
        app __x14__ = (Set A "length" k true)
        if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else {}
        __x14__
        app __x15__ = (WrapCompletion A)
        return __x15__
      } else {}
      app __x16__ = (IteratorValue next)
      if (is-completion __x16__) if (= __x16__.Type CONST_normal) __x16__ = __x16__.Value else return __x16__ else {}
      let nextValue = __x16__
      if (= mapping true) {
        app __x17__ = (Call mapfn thisArg (new [nextValue, k]))
        let mappedValue = __x17__
        app __x18__ = (IsAbruptCompletion mappedValue)
        if __x18__ {
          app __x19__ = (IteratorClose iteratorRecord mappedValue)
          if (is-completion __x19__) if (= __x19__.Type CONST_normal) __x19__ = __x19__.Value else return __x19__ else {}
          app __x20__ = (WrapCompletion __x19__)
          return __x20__
        } else {}
      } else let mappedValue = nextValue
      app __x21__ = (CreateDataPropertyOrThrow A Pk mappedValue)
      let defineStatus = __x21__
      app __x22__ = (IsAbruptCompletion defineStatus)
      if __x22__ {
        app __x23__ = (IteratorClose iteratorRecord defineStatus)
        if (is-completion __x23__) if (= __x23__.Type CONST_normal) __x23__ = __x23__.Value else return __x23__ else {}
        app __x24__ = (WrapCompletion __x23__)
        return __x24__
      } else {}
      k = (+ k 1i)
    }
  } else {}
  app __x25__ = (ToObject items)
  if (is-completion __x25__) if (= __x25__.Type CONST_normal) __x25__ = __x25__.Value else return __x25__ else {}
  let arrayLike = __x25__
  app __x26__ = (LengthOfArrayLike arrayLike)
  if (is-completion __x26__) if (= __x26__.Type CONST_normal) __x26__ = __x26__.Value else return __x26__ else {}
  let len = __x26__
  app __x27__ = (IsConstructor C)
  if (= __x27__ true) {
    app __x28__ = (Construct C (new [len]))
    if (is-completion __x28__) if (= __x28__.Type CONST_normal) __x28__ = __x28__.Value else return __x28__ else {}
    let A = __x28__
  } else {
    app __x29__ = (ArrayCreate len)
    if (is-completion __x29__) if (= __x29__.Type CONST_normal) __x29__ = __x29__.Value else return __x29__ else {}
    let A = __x29__
  }
  let k = 0i
  while (< k len) {
    app __x30__ = (ToString k)
    if (is-completion __x30__) if (= __x30__.Type CONST_normal) __x30__ = __x30__.Value else return __x30__ else {}
    let Pk = __x30__
    app __x31__ = (Get arrayLike Pk)
    if (is-completion __x31__) if (= __x31__.Type CONST_normal) __x31__ = __x31__.Value else return __x31__ else {}
    let kValue = __x31__
    if (= mapping true) {
      app __x32__ = (Call mapfn thisArg (new [kValue, k]))
      if (is-completion __x32__) if (= __x32__.Type CONST_normal) __x32__ = __x32__.Value else return __x32__ else {}
      let mappedValue = __x32__
    } else let mappedValue = kValue
    app __x33__ = (CreateDataPropertyOrThrow A Pk mappedValue)
    if (is-completion __x33__) if (= __x33__.Type CONST_normal) __x33__ = __x33__.Value else return __x33__ else {}
    __x33__
    k = (+ k 1i)
  }
  app __x34__ = (Set A "length" len true)
  if (is-completion __x34__) if (= __x34__.Type CONST_normal) __x34__ = __x34__.Value else return __x34__ else {}
  __x34__
  app __x35__ = (WrapCompletion A)
  return __x35__
}