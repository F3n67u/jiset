{
  [1] assert (! (= module.Status "uninstantiated"))
  [3] let namespace = module.Namespace
  [4] if (= namespace undefined) {
    [5] app __x0__ = (module.GetExportedNames module (new []))
    [5] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [2] {}
    [5] let exportedNames = __x0__
    [6] let unambiguousNames = (new [])
    [7] let __x1__ = exportedNames
    [7] let __x2__ = 0i
    [7] while (< __x2__ __x1__.length) {
      let name = __x1__[__x2__]
      [8] app __x3__ = (module.ResolveExport module name (new []))
      [8] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [2] {}
      [8] let resolution = __x3__
      [9] if (= (typeof resolution) "ResolvedBindingRecord") append name -> unambiguousNames else [2] {}
      __x2__ = (+ __x2__ 1i)
    }
    [10] app __x4__ = (ModuleNamespaceCreate module unambiguousNames)
    [10] namespace = __x4__
  } else [2] {}
  [11] app __x5__ = (WrapCompletion namespace)
  [11] return __x5__
}