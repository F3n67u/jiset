digraph {
  node3545 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3542 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3537 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3550 [shape=cds, label=<<font color="black">10:app __x6__ = (Type newObj)</font>> color="black" fillcolor="white" style=filled]
  node3532 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3551 [shape=diamond, label=<<font color="black">(! (= __x6__ Object))</font>> color="black" fillcolor="white" style=filled]
  node3539 [shape=cds, label=<<font color="black">4:app __x1__ = (IsConstructor target)</font>> color="black" fillcolor="white" style=filled]
  node3544 [shape=cds, label=<<font color="black">7:app __x3__ = (Construct target argumentsList newTarget)</font>> color="black" fillcolor="white" style=filled]
  node3552 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3553 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return newObj</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3534 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3549 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let newObj = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3546 [shape=cds, label=<<font color="black">8:app __x4__ = (CreateArrayFromList argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node3535 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3541 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;construct&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3540 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (= __x1__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3547 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let argArray = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3533 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3548 [shape=cds, label=<<font color="black">9:app __x5__ = (Call trap handler (new [target, argArray, newTarget]))</font>> color="black" fillcolor="white" style=filled]
  node3543 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3538 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3553 -> node3533 [ color="black"]
  node3552 -> node3553 [ color="black"]
  node3541 -> node3542 [ color="black"]
  node3537 -> node3538 [ color="black"]
  node3534 -> node3535 [ color="black"]
  node3551 -> node3552 [label=<<font color="black">true</font>> color="black"]
  node3551 -> node3553 [label=<<font color="black">false</font>> color="black"]
  node3535 -> node3536 [label=<<font color="black">true</font>> color="black"]
  node3535 -> node3537 [label=<<font color="black">false</font>> color="black"]
  node3540 -> node3541 [ color="black"]
  node3536 -> node3537 [ color="black"]
  node3538 -> node3539 [ color="black"]
  node3539 -> node3540 [ color="black"]
  node3549 -> node3550 [ color="black"]
  node3545 -> node3546 [ color="black"]
  node3544 -> node3545 [ color="black"]
  node3532 -> node3534 [ color="black"]
  node3547 -> node3548 [ color="black"]
  node3550 -> node3551 [ color="black"]
  node3546 -> node3547 [ color="black"]
  node3542 -> node3543 [ color="black"]
  node3543 -> node3544 [label=<<font color="black">true</font>> color="black"]
  node3543 -> node3546 [label=<<font color="black">false</font>> color="black"]
  node3548 -> node3549 [ color="black"]
}
