{
  app __x0__ = (Type target)
  if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  app __x2__ = (ToPropertyKey propertyKey)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let key = __x2__
  if (= receiver absent) let receiver = target else {}
  app __x3__ = (target.Set target key V receiver)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  app __x4__ = (WrapCompletion __x3__)
  return __x4__
}