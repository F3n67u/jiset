digraph {
  node69 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let parameterBindings = parameterNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node101 [shape=cds, label=<<font color="black">86:app __x37__ = (varEnv.InitializeBinding varEnv n initialValue)</font>> color="black" fillcolor="white" style=filled]
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node88 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">73:let varEnv = env</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node115 [shape=diamond, label=<<font color="black">(&lt; __x44__ __x43__.length)</font>> color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">5:app __x1__ = (IsDuplicate parameterNames)</font>> color="black" fillcolor="white" style=filled]
  node120 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">99:[! __x46__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let simpleParameterList = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node56 [shape=diamond, label=<<font color="black">(= argumentsObjectNeeded true)</font>> color="black" fillcolor="white" style=filled]
  node42 [shape=cds, label=<<font color="black">37:access __x13__ = (calleeContext &quot;VariableEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let fn = __x9__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node37 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let env = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=diamond, label=<<font color="black">(! (contains functionNames fn))</font>> color="black" fillcolor="white" style=filled]
  node52 [shape=diamond, label=<<font color="black">(= hasDuplicates true)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let varNames = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node110 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">94:let lexDeclarations = __x39__</td></tr>
      <tr><td align="left">95:let __x40__ = lexDeclarations</td></tr>
      <tr><td align="left">95:let __x41__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">102:let __x48__ = functionsToInitialize</td></tr>
      <tr><td align="left">102:let __x49__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x8__ = (- __x8__ 1i)</td></tr>
      <tr><td align="left">let d = __x7__[__x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node46 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let paramName = __x14__[__x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node93 [shape=diamond, label=<<font color="black">(! (contains instantiatedVarNames n))</font>> color="black" fillcolor="white" style=filled]
  node57 [shape=diamond, label=<<font color="black">(|| (= strict true) (= simpleParameterList false))</font>> color="black" fillcolor="white" style=filled]
  node78 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">67:let instantiatedVarNames = (copy-obj parameterBindings)</td></tr>
      <tr><td align="left">68:let __x28__ = varNames</td></tr>
      <tr><td align="left">68:let __x29__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">argumentsObjectNeeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">90:let lexEnv = __x38__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node121 [shape=cds, label=<<font color="black">101:app __x47__ = (lexEnv.CreateMutableBinding lexEnv dn false)</font>> color="black" fillcolor="white" style=filled]
  node84 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">71:[! __x30__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node61 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:let ao = __x20__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node132 [shape=cds, label=<<font color="black">105:app __x52__ = (varEnv.SetMutableBinding varEnv fn fo false)</font>> color="black" fillcolor="white" style=filled]
  node116 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x43__[__x44__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node74 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">62:[? __x26__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node89 [shape=cds, label=<<font color="black">76:app __x32__ = (NewDeclarativeEnvironment env)</font>> color="black" fillcolor="white" style=filled]
  node133 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">105:[! __x52__]</td></tr>
      <tr><td align="left">__x49__ = (+ __x49__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6 [shape=diamond, label=<<font color="black">__x1__</font>> color="black" fillcolor="white" style=filled]
  node85 [shape=cds, label=<<font color="black">72:app __x31__ = (env.InitializeBinding env n undefined)</font>> color="black" fillcolor="white" style=filled]
  node102 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">86:__x37__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node60 [shape=cds, label=<<font color="black">51:app __x20__ = (CreateMappedArgumentsObject func formals argumentsList env)</font>> color="black" fillcolor="white" style=filled]
  node117 [shape=cds, label=<<font color="black">100:access __x45__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node70 [shape=cds, label=<<font color="black">60:app __x25__ = (CreateListIteratorRecord argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node21 [shape=diamond, label=<<font color="black">(! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier)))</font>> color="black" fillcolor="white" style=filled]
  node33 [shape=diamond, label=<<font color="black">(|| (contains functionNames &quot;arguments&quot;) (contains lexicalNames &quot;arguments&quot;))</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=diamond, label=<<font color="black">(= func.ThisMode CONST_lexical)</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=cds, label=<<font color="black">35:access __x11__ = (calleeContext &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node92 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let n = __x33__[__x34__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node65 [shape=cds, label=<<font color="black">55:app __x22__ = (env.CreateMutableBinding env &quot;arguments&quot; false)</font>> color="black" fillcolor="white" style=filled]
  node97 [shape=diamond, label=<<font color="black">(|| (! (contains parameterBindings n)) (contains functionNames n))</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=cds, label=<<font color="black">6:access __x2__ = (formals &quot;IsSimpleParameterList&quot;)</font>> color="black" fillcolor="white" style=filled]
  node53 [shape=cds, label=<<font color="black">45:app __x18__ = (env.InitializeBinding env paramName undefined)</font>> color="black" fillcolor="white" style=filled]
  node109 [shape=cds, label=<<font color="black">94:access __x39__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node124 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x41__ = (+ __x41__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node77 [shape=diamond, label=<<font color="black">(= hasParameterExpressions false)</font>> color="black" fillcolor="white" style=filled]
  node96 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">82:[! __x35__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">8:access __x4__ = (code &quot;VarDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node129 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">103:let fn = __x50__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node41 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:let env = __x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node134 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">106:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node73 [shape=cds, label=<<font color="black">62:access __x26__ = (formals &quot;IteratorBindingInitialization&quot; iteratorRecord undefined)</font>> color="black" fillcolor="white" style=filled]
  node128 [shape=cds, label=<<font color="black">103:access __x50__ = (f &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node105 [shape=cds, label=<<font color="black">90:app __x38__ = (NewDeclarativeEnvironment varEnv)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let calleeContext = CONTEXT</td></tr>
      <tr><td align="left">1:let code = func.ECMAScriptCode</td></tr>
      <tr><td align="left">2:let strict = func.Strict</td></tr>
      <tr><td align="left">3:let formals = func.FormalParameters</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node45 [shape=diamond, label=<<font color="black">(&lt; __x15__ __x14__.length)</font>> color="black" fillcolor="white" style=filled]
  node64 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:[! __x21__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=cds, label=<<font color="black">10:access __x6__ = (code &quot;LexicallyDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=diamond, label=<<font color="black">(= hasParameterExpressions false)</font>> color="black" fillcolor="white" style=filled]
  node34 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">argumentsObjectNeeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:assert (|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let __x14__ = parameterNames</td></tr>
      <tr><td align="left">39:let __x15__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let argumentsObjectNeeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node59 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">48:let ao = __x19__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node118 [shape=diamond, label=<<font color="black">(= __x45__ true)</font>> color="black" fillcolor="white" style=filled]
  node71 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">60:let iteratorRecord = __x25__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let hasParameterExpressions = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node54 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:[! __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node49 [shape=diamond, label=<<font color="black">(= alreadyDeclared false)</font>> color="black" fillcolor="white" style=filled]
  node86 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">72:__x31__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node113 [shape=cds, label=<<font color="black">97:access __x42__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node81 [shape=diamond, label=<<font color="black">(! (contains instantiatedVarNames n))</font>> color="black" fillcolor="white" style=filled]
  node76 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">64:[? __x27__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let hasDuplicates = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node39 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let calleeEnv = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node98 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let initialValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node103 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x34__ = (+ __x34__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node91 [shape=diamond, label=<<font color="black">(&lt; __x34__ __x33__.length)</font>> color="black" fillcolor="white" style=filled]
  node66 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">55:[! __x22__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">93:calleeContext.LexicalEnvironment = lexEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node130 [shape=cds, label=<<font color="black">104:access __x51__ = (f &quot;InstantiateFunctionObject&quot; lexEnv)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">4:access __x0__ = (formals &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node80 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let n = __x28__[__x29__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node35 [shape=diamond, label=<<font color="black">(|| (= strict true) (= hasParameterExpressions false))</font>> color="black" fillcolor="white" style=filled]
  node112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x40__[__x41__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node123 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x44__ = (+ __x44__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node48 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:let alreadyDeclared = __x16__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node63 [shape=cds, label=<<font color="black">53:app __x21__ = (env.CreateImmutableBinding env &quot;arguments&quot; false)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let lexicalNames = __x6__</td></tr>
      <tr><td align="left">11:let functionNames = (new [])</td></tr>
      <tr><td align="left">12:let functionsToInitialize = (new [])</td></tr>
      <tr><td align="left">13:let __x7__ = varDeclarations</td></tr>
      <tr><td align="left">13:let __x8__ = __x7__.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node95 [shape=cds, label=<<font color="black">82:app __x35__ = (varEnv.CreateMutableBinding varEnv n false)</font>> color="black" fillcolor="white" style=filled]
  node50 [shape=cds, label=<<font color="black">43:app __x17__ = (env.CreateMutableBinding env paramName false)</font>> color="black" fillcolor="white" style=filled]
  node67 [shape=cds, label=<<font color="black">56:app __x23__ = (env.InitializeBinding env &quot;arguments&quot; ao)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let varDeclarations = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node127 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let f = __x48__[__x49__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">argumentsObjectNeeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">7:access __x3__ = (formals &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node72 [shape=diamond, label=<<font color="black">(= hasDuplicates true)</font>> color="black" fillcolor="white" style=filled]
  node43 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:assert (= __x13__ calleeEnv)</td></tr>
      <tr><td align="left">38:calleeContext.LexicalEnvironment = env</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node99 [shape=cds, label=<<font color="black">85:app __x36__ = (env.GetBindingValue env n false)</font>> color="black" fillcolor="white" style=filled]
  node87 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x29__ = (+ __x29__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node104 [shape=diamond, label=<<font color="black">(= strict false)</font>> color="black" fillcolor="white" style=filled]
  node40 [shape=cds, label=<<font color="black">36:app __x12__ = (NewDeclarativeEnvironment calleeEnv)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:prepend fn -&gt; functionNames</td></tr>
      <tr><td align="left">20:prepend d -&gt; functionsToInitialize</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=cds, label=<<font color="black">16:access __x9__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node55 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x15__ = (+ __x15__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">97:let __x43__ = __x42__</td></tr>
      <tr><td align="left">97:let __x44__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let hasDuplicates = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node75 [shape=cds, label=<<font color="black">64:access __x27__ = (formals &quot;IteratorBindingInitialization&quot; iteratorRecord env)</font>> color="black" fillcolor="white" style=filled]
  node82 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">70:append n -&gt; instantiatedVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node119 [shape=cds, label=<<font color="black">99:app __x46__ = (lexEnv.CreateImmutableBinding lexEnv dn true)</font>> color="black" fillcolor="white" style=filled]
  node58 [shape=cds, label=<<font color="black">48:app __x19__ = (CreateUnmappedArgumentsObject argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node36 [shape=cds, label=<<font color="black">32:access __x10__ = (calleeContext &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node30 [shape=diamond, label=<<font color="black">(contains parameterNames &quot;arguments&quot;)</font>> color="black" fillcolor="white" style=filled]
  node51 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:[! __x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=diamond, label=<<font color="black">(&lt; 0i __x8__)</font>> color="black" fillcolor="white" style=filled]
  node107 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let lexEnv = varEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let parameterNames = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node126 [shape=diamond, label=<<font color="black">(&lt; __x49__ __x48__.length)</font>> color="black" fillcolor="white" style=filled]
  node79 [shape=diamond, label=<<font color="black">(&lt; __x29__ __x28__.length)</font>> color="black" fillcolor="white" style=filled]
  node94 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">81:append n -&gt; instantiatedVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">9:access __x5__ = (code &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node68 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">56:__x23__</td></tr>
      <tr><td align="left">57:let __x24__ = (copy-obj parameterNames)</td></tr>
      <tr><td align="left">57:append &quot;arguments&quot; -&gt; __x24__</td></tr>
      <tr><td align="left">57:let parameterBindings = __x24__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node62 [shape=diamond, label=<<font color="black">(= strict true)</font>> color="black" fillcolor="white" style=filled]
  node131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">104:let fo = __x51__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node47 [shape=cds, label=<<font color="black">40:app __x16__ = (env.HasBinding env paramName)</font>> color="black" fillcolor="white" style=filled]
  node122 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">101:[! __x47__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node83 [shape=cds, label=<<font color="black">71:app __x30__ = (env.CreateMutableBinding env n false)</font>> color="black" fillcolor="white" style=filled]
  node100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">85:let initialValue = [! __x36__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node90 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">76:let varEnv = __x32__</td></tr>
      <tr><td align="left">77:calleeContext.VariableEnvironment = varEnv</td></tr>
      <tr><td align="left">78:let instantiatedVarNames = (new [])</td></tr>
      <tr><td align="left">79:let __x33__ = varNames</td></tr>
      <tr><td align="left">79:let __x34__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node111 [shape=diamond, label=<<font color="black">(&lt; __x41__ __x40__.length)</font>> color="black" fillcolor="white" style=filled]
  node11 -> node12 [ color="black"]
  node62 -> node63 [label=<<font color="black">true</font>> color="black"]
  node62 -> node65 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [ color="black"]
  node53 -> node54 [ color="black"]
  node127 -> node128 [ color="black"]
  node3 -> node4 [ color="black"]
  node118 -> node119 [label=<<font color="black">true</font>> color="black"]
  node118 -> node121 [label=<<font color="black">false</font>> color="black"]
  node63 -> node64 [ color="black"]
  node61 -> node62 [ color="black"]
  node91 -> node92 [label=<<font color="black">true</font>> color="black"]
  node91 -> node104 [label=<<font color="black">false</font>> color="black"]
  node72 -> node73 [label=<<font color="black">true</font>> color="black"]
  node72 -> node75 [label=<<font color="black">false</font>> color="black"]
  node107 -> node108 [ color="black"]
  node39 -> node40 [ color="black"]
  node67 -> node68 [ color="black"]
  node6 -> node7 [label=<<font color="black">true</font>> color="black"]
  node6 -> node8 [label=<<font color="black">false</font>> color="black"]
  node97 -> node98 [label=<<font color="black">true</font>> color="black"]
  node97 -> node99 [label=<<font color="black">false</font>> color="black"]
  node54 -> node55 [ color="black"]
  node18 -> node19 [ color="black"]
  node42 -> node43 [ color="black"]
  node29 -> node35 [ color="black"]
  node34 -> node35 [ color="black"]
  node66 -> node67 [ color="black"]
  node57 -> node58 [label=<<font color="black">true</font>> color="black"]
  node57 -> node60 [label=<<font color="black">false</font>> color="black"]
  node71 -> node72 [ color="black"]
  node98 -> node101 [ color="black"]
  node25 -> node26 [label=<<font color="black">true</font>> color="black"]
  node25 -> node19 [label=<<font color="black">false</font>> color="black"]
  node21 -> node22 [label=<<font color="black">true</font>> color="black"]
  node21 -> node19 [label=<<font color="black">false</font>> color="black"]
  node108 -> node109 [ color="black"]
  node2 -> node3 [ color="black"]
  node115 -> node116 [label=<<font color="black">true</font>> color="black"]
  node115 -> node124 [label=<<font color="black">false</font>> color="black"]
  node119 -> node120 [ color="black"]
  node15 -> node16 [ color="black"]
  node129 -> node130 [ color="black"]
  node109 -> node110 [ color="black"]
  node83 -> node84 [ color="black"]
  node52 -> node53 [label=<<font color="black">true</font>> color="black"]
  node52 -> node55 [label=<<font color="black">false</font>> color="black"]
  node96 -> node97 [ color="black"]
  node124 -> node111 [ color="black"]
  node33 -> node34 [label=<<font color="black">true</font>> color="black"]
  node33 -> node35 [label=<<font color="black">false</font>> color="black"]
  node37 -> node44 [ color="black"]
  node79 -> node80 [label=<<font color="black">true</font>> color="black"]
  node79 -> node88 [label=<<font color="black">false</font>> color="black"]
  node13 -> node14 [ color="black"]
  node122 -> node123 [ color="black"]
  node12 -> node13 [ color="black"]
  node104 -> node105 [label=<<font color="black">true</font>> color="black"]
  node104 -> node107 [label=<<font color="black">false</font>> color="black"]
  node45 -> node46 [label=<<font color="black">true</font>> color="black"]
  node45 -> node56 [label=<<font color="black">false</font>> color="black"]
  node101 -> node102 [ color="black"]
  node120 -> node123 [ color="black"]
  node0 -> node2 [ color="black"]
  node117 -> node118 [ color="black"]
  node116 -> node117 [ color="black"]
  node75 -> node76 [ color="black"]
  node99 -> node100 [ color="black"]
  node36 -> node37 [ color="black"]
  node84 -> node85 [ color="black"]
  node125 -> node126 [ color="black"]
  node88 -> node104 [ color="black"]
  node22 -> node23 [ color="black"]
  node70 -> node71 [ color="black"]
  node76 -> node77 [ color="black"]
  node133 -> node126 [ color="black"]
  node43 -> node44 [ color="black"]
  node68 -> node70 [ color="black"]
  node9 -> node10 [ color="black"]
  node44 -> node45 [ color="black"]
  node27 -> node28 [ color="black"]
  node126 -> node127 [label=<<font color="black">true</font>> color="black"]
  node126 -> node134 [label=<<font color="black">false</font>> color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
  node40 -> node41 [ color="black"]
  node28 -> node29 [label=<<font color="black">true</font>> color="black"]
  node28 -> node30 [label=<<font color="black">false</font>> color="black"]
  node130 -> node131 [ color="black"]
  node86 -> node87 [ color="black"]
  node30 -> node31 [label=<<font color="black">true</font>> color="black"]
  node30 -> node32 [label=<<font color="black">false</font>> color="black"]
  node94 -> node95 [ color="black"]
  node78 -> node79 [ color="black"]
  node102 -> node103 [ color="black"]
  node10 -> node11 [ color="black"]
  node31 -> node35 [ color="black"]
  node55 -> node45 [ color="black"]
  node106 -> node108 [ color="black"]
  node59 -> node62 [ color="black"]
  node47 -> node48 [ color="black"]
  node105 -> node106 [ color="black"]
  node131 -> node132 [ color="black"]
  node4 -> node5 [ color="black"]
  node132 -> node133 [ color="black"]
  node134 -> node1 [ color="black"]
  node50 -> node51 [ color="black"]
  node51 -> node52 [ color="black"]
  node114 -> node115 [ color="black"]
  node74 -> node77 [ color="black"]
  node7 -> node9 [ color="black"]
  node8 -> node9 [ color="black"]
  node73 -> node74 [ color="black"]
  node81 -> node82 [label=<<font color="black">true</font>> color="black"]
  node81 -> node87 [label=<<font color="black">false</font>> color="black"]
  node128 -> node129 [ color="black"]
  node20 -> node21 [ color="black"]
  node113 -> node114 [ color="black"]
  node60 -> node61 [ color="black"]
  node24 -> node25 [ color="black"]
  node103 -> node91 [ color="black"]
  node112 -> node113 [ color="black"]
  node92 -> node93 [ color="black"]
  node82 -> node83 [ color="black"]
  node69 -> node70 [ color="black"]
  node77 -> node78 [label=<<font color="black">true</font>> color="black"]
  node77 -> node89 [label=<<font color="black">false</font>> color="black"]
  node16 -> node17 [ color="black"]
  node89 -> node90 [ color="black"]
  node95 -> node96 [ color="black"]
  node46 -> node47 [ color="black"]
  node58 -> node59 [ color="black"]
  node56 -> node57 [label=<<font color="black">true</font>> color="black"]
  node56 -> node69 [label=<<font color="black">false</font>> color="black"]
  node65 -> node66 [ color="black"]
  node48 -> node49 [ color="black"]
  node111 -> node112 [label=<<font color="black">true</font>> color="black"]
  node111 -> node125 [label=<<font color="black">false</font>> color="black"]
  node100 -> node101 [ color="black"]
  node121 -> node122 [ color="black"]
  node26 -> node19 [ color="black"]
  node93 -> node94 [label=<<font color="black">true</font>> color="black"]
  node93 -> node103 [label=<<font color="black">false</font>> color="black"]
  node19 -> node20 [label=<<font color="black">true</font>> color="black"]
  node19 -> node27 [label=<<font color="black">false</font>> color="black"]
  node123 -> node115 [ color="black"]
  node38 -> node39 [ color="black"]
  node35 -> node36 [label=<<font color="black">true</font>> color="black"]
  node35 -> node38 [label=<<font color="black">false</font>> color="black"]
  node32 -> node33 [label=<<font color="black">true</font>> color="black"]
  node32 -> node35 [label=<<font color="black">false</font>> color="black"]
  node64 -> node67 [ color="black"]
  node85 -> node86 [ color="black"]
  node110 -> node111 [ color="black"]
  node17 -> node18 [ color="black"]
  node80 -> node81 [ color="black"]
  node49 -> node50 [label=<<font color="black">true</font>> color="black"]
  node49 -> node55 [label=<<font color="black">false</font>> color="black"]
  node87 -> node79 [ color="black"]
  node90 -> node91 [ color="black"]
  node41 -> node42 [ color="black"]
}
