digraph {
  node5088 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let assignmentPattern = (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5069 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5084 [shape=cds, label=<<font color="black">app __x7__ = (SetFunctionName rval __x6__)</font>> color="black" fillcolor="white" style=filled]
  node5070 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5085 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let hasNameProperty = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5090 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rref = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x12__]</td></tr>
      <tr><td align="left">14:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5086 [shape=cds, label=<<font color="black">8:app __x8__ = (PutValue lref rval)</font>> color="black" fillcolor="white" style=filled]
  node5082 [shape=diamond, label=<<font color="black">(= hasNameProperty false)</font>> color="black" fillcolor="white" style=filled]
  node5083 [shape=cds, label=<<font color="black">app __x6__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5068 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5087 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x8__]</td></tr>
      <tr><td align="left">9:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5072 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5078 [shape=cds, label=<<font color="black">5:access __x4__ = (LeftHandSideExpression &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5092 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let rval = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5073 [shape=cds, label=<<font color="black">3:access __x1__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5076 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let rval = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5091 [shape=cds, label=<<font color="black">12:app __x10__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5077 [shape=cds, label=<<font color="black">5:app __x3__ = (IsAnonymousFunctionDefinition AssignmentExpression)</font>> color="black" fillcolor="white" style=filled]
  node5075 [shape=cds, label=<<font color="black">4:app __x2__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5080 [shape=cds, label=<<font color="black">6:app __x5__ = (HasOwnProperty rval &quot;name&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5071 [shape=cds, label=<<font color="black">1:access __x0__ = (LeftHandSideExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5093 [shape=cds, label=<<font color="black">13:access __x11__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5094 [shape=cds, label=<<font color="black">13:app __x12__ = (__x11__ rval)</font>> color="black" fillcolor="white" style=filled]
  node5089 [shape=cds, label=<<font color="black">11:access __x9__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let rref = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5079 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x3__ true) (= __x4__ true))</font>> color="black" fillcolor="white" style=filled]
  node5074 -> node5075 [ color="black"]
  node5080 -> node5081 [ color="black"]
  node5079 -> node5080 [label=<<font color="black">true</font>> color="black"]
  node5079 -> node5086 [label=<<font color="black">false</font>> color="black"]
  node5087 -> node5088 [ color="black"]
  node5075 -> node5076 [ color="black"]
  node5082 -> node5083 [label=<<font color="black">true</font>> color="black"]
  node5082 -> node5086 [label=<<font color="black">false</font>> color="black"]
  node5092 -> node5093 [ color="black"]
  node5094 -> node5095 [ color="black"]
  node5086 -> node5087 [ color="black"]
  node5072 -> node5073 [ color="black"]
  node5089 -> node5090 [ color="black"]
  node5068 -> node5070 [ color="black"]
  node5076 -> node5077 [ color="black"]
  node5083 -> node5084 [ color="black"]
  node5077 -> node5078 [ color="black"]
  node5070 -> node5071 [label=<<font color="black">true</font>> color="black"]
  node5070 -> node5088 [label=<<font color="black">false</font>> color="black"]
  node5090 -> node5091 [ color="black"]
  node5081 -> node5082 [ color="black"]
  node5091 -> node5092 [ color="black"]
  node5071 -> node5072 [ color="black"]
  node5084 -> node5085 [ color="black"]
  node5088 -> node5089 [ color="black"]
  node5095 -> node5069 [ color="black"]
  node5085 -> node5086 [ color="black"]
  node5093 -> node5094 [ color="black"]
  node5073 -> node5074 [ color="black"]
  node5078 -> node5079 [ color="black"]
}
