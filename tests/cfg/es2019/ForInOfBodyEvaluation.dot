digraph {
  node7092 [shape=cds, label=<<font color="black">16:access __x6__ = (lhs &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7084 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorComplete nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7067 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7076 [shape=cds, label=<<font color="black">8:app __x1__ = (Call iteratorRecord.NextMethod iteratorRecord.Iterator (new []))</font>> color="black" fillcolor="white" style=filled]
  node7100 [shape=cds, label=<<font color="black">25:access __x9__ = (lhs &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7143 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">59:status = __x23__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7072 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let destructuring = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7083 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7132 [shape=cds, label=<<font color="black">51:app __x19__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:let status = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7096 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let iterationEnv = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7147 [shape=cds, label=<<font color="black">61:app __x25__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7068 [shape=diamond, label=<<font color="black">(= iteratorKind absent)</font>> color="black" fillcolor="white" style=filled]
  node7079 [shape=cds, label=<<font color="black">app __x2__ = (Await nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7136 [shape=cds, label=<<font color="black">54:app __x21__ = (LoopContinues result labelSet)</font>> color="black" fillcolor="white" style=filled]
  node7124 [shape=diamond, label=<<font color="black">__x17__</font>> color="black" fillcolor="white" style=filled]
  node7075 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node7112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let status = __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7107 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let status = lhsRef</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7144 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7104 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7139 [shape=cds, label=<<font color="black">56:app __x22__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node7148 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">61:return [? __x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7078 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7129 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7110 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let status = __x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7097 [shape=cds, label=<<font color="black">21:access __x8__ = (lhs &quot;BindingInstantiation&quot; iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node7095 [shape=cds, label=<<font color="black">20:app __x7__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node7142 [shape=cds, label=<<font color="black">59:app __x23__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node7116 [shape=diamond, label=<<font color="black">(= lhsKind CONST_varBinding)</font>> color="black" fillcolor="white" style=filled]
  node7101 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let lhsName = __x9__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7091 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7111 [shape=cds, label=<<font color="black">33:app __x13__ = (PutValue lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7138 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorKind = CONST_sync</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7086 [shape=diamond, label=<<font color="black">(= done true)</font>> color="black" fillcolor="white" style=filled]
  node7123 [shape=cds, label=<<font color="black">44:app __x17__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node7150 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">V = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7106 [shape=diamond, label=<<font color="black">__x11__</font>> color="black" fillcolor="white" style=filled]
  node7133 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:return [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (is-instance-of lhs LeftHandSideExpression)</td></tr>
      <tr><td align="left">6:let assignmentPattern = (parse-syntax lhs &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7128 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7118 [shape=cds, label=<<font color="black">39:access __x15__ = (lhs &quot;BindingInitialization&quot; nextValue undefined)</font>> color="black" fillcolor="white" style=filled]
  node7073 [shape=diamond, label=<<font color="black">(&amp;&amp; (= destructuring true) (= lhsKind CONST_assignment))</font>> color="black" fillcolor="white" style=filled]
  node7134 [shape=cds, label=<<font color="black">52:access __x20__ = (stmt &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7109 [shape=cds, label=<<font color="black">31:app __x12__ = (InitializeReferencedBinding lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7094 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">19:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7145 [shape=cds, label=<<font color="black">app __x24__ = (AsyncIteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7130 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7077 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let nextResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7098 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:__x8__</td></tr>
      <tr><td align="left">22:GLOBAL_context.LexicalEnvironment = iterationEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7141 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">58:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7066 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let status = __x15__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7113 [shape=diamond, label=<<font color="black">(= lhsKind CONST_assignment)</font>> color="black" fillcolor="white" style=filled]
  node7117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:assert (is-instance-of lhs ForBinding)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7102 [shape=cds, label=<<font color="black">26:app __x10__ = (ResolveBinding lhsName)</font>> color="black" fillcolor="white" style=filled]
  node7122 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let status = __x16__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7137 [shape=diamond, label=<<font color="black">(= __x21__ false)</font>> color="black" fillcolor="white" style=filled]
  node7070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">2:let V = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7087 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return V</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7085 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let done = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7105 [shape=cds, label=<<font color="black">32:app __x11__ = (IsAbruptCompletion lhsRef)</font>> color="black" fillcolor="white" style=filled]
  node7090 [shape=diamond, label=<<font color="black">(|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding))</font>> color="black" fillcolor="white" style=filled]
  node7149 [shape=diamond, label=<<font color="black">(! (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node7127 [shape=cds, label=<<font color="black">app __x18__ = (AsyncIteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7146 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x24__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">50:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7099 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7089 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7082 [shape=diamond, label=<<font color="black">(! (= __x3__ Object))</font>> color="black" fillcolor="white" style=filled]
  node7120 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">42:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7114 [shape=cds, label=<<font color="black">36:access __x14__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7080 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">nextResult = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7135 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:let result = __x20__</td></tr>
      <tr><td align="left">53:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7093 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let lhsRef = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7081 [shape=cds, label=<<font color="black">10:app __x3__ = (Type nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7126 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7140 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">56:return __x22__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7121 [shape=cds, label=<<font color="black">43:access __x16__ = (lhs &quot;BindingInitialization&quot; nextValue iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node7071 [shape=cds, label=<<font color="black">3:access __x0__ = (lhs &quot;IsDestructuring&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7088 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7103 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let lhsRef = [! __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7108 [shape=diamond, label=<<font color="black">(= lhsKind CONST_lexicalBinding)</font>> color="black" fillcolor="white" style=filled]
  node7094 -> node7095 [ color="black"]
  node7138 -> node7139 [label=<<font color="black">true</font>> color="black"]
  node7138 -> node7141 [label=<<font color="black">false</font>> color="black"]
  node7090 -> node7091 [label=<<font color="black">true</font>> color="black"]
  node7090 -> node7094 [label=<<font color="black">false</font>> color="black"]
  node7126 -> node7127 [label=<<font color="black">true</font>> color="black"]
  node7126 -> node7129 [label=<<font color="black">false</font>> color="black"]
  node7109 -> node7110 [ color="black"]
  node7082 -> node7083 [label=<<font color="black">true</font>> color="black"]
  node7082 -> node7084 [label=<<font color="black">false</font>> color="black"]
  node7116 -> node7117 [label=<<font color="black">true</font>> color="black"]
  node7116 -> node7120 [label=<<font color="black">false</font>> color="black"]
  node7085 -> node7086 [ color="black"]
  node7092 -> node7093 [ color="black"]
  node7086 -> node7087 [label=<<font color="black">true</font>> color="black"]
  node7086 -> node7088 [label=<<font color="black">false</font>> color="black"]
  node7115 -> node7123 [ color="black"]
  node7147 -> node7148 [ color="black"]
  node7074 -> node7075 [ color="black"]
  node7134 -> node7135 [ color="black"]
  node7117 -> node7118 [ color="black"]
  node7097 -> node7098 [ color="black"]
  node7118 -> node7119 [ color="black"]
  node7096 -> node7097 [ color="black"]
  node7073 -> node7074 [label=<<font color="black">true</font>> color="black"]
  node7073 -> node7075 [label=<<font color="black">false</font>> color="black"]
  node7136 -> node7137 [ color="black"]
  node7087 -> node7088 [ color="black"]
  node7112 -> node7123 [ color="black"]
  node7101 -> node7102 [ color="black"]
  node7084 -> node7085 [ color="black"]
  node7121 -> node7122 [ color="black"]
  node7099 -> node7100 [label=<<font color="black">true</font>> color="black"]
  node7099 -> node7104 [label=<<font color="black">false</font>> color="black"]
  node7113 -> node7114 [label=<<font color="black">true</font>> color="black"]
  node7113 -> node7116 [label=<<font color="black">false</font>> color="black"]
  node7071 -> node7072 [ color="black"]
  node7128 -> node7129 [ color="black"]
  node7139 -> node7140 [ color="black"]
  node7083 -> node7084 [ color="black"]
  node7137 -> node7138 [label=<<font color="black">true</font>> color="black"]
  node7137 -> node7149 [label=<<font color="black">false</font>> color="black"]
  node7148 -> node7149 [ color="black"]
  node7132 -> node7133 [ color="black"]
  node7120 -> node7121 [ color="black"]
  node7091 -> node7092 [label=<<font color="black">true</font>> color="black"]
  node7091 -> node7104 [label=<<font color="black">false</font>> color="black"]
  node7068 -> node7069 [label=<<font color="black">true</font>> color="black"]
  node7068 -> node7070 [label=<<font color="black">false</font>> color="black"]
  node7105 -> node7106 [ color="black"]
  node7088 -> node7089 [ color="black"]
  node7075 -> node7076 [label=<<font color="black">true</font>> color="black"]
  node7075 -> node7067 [label=<<font color="black">false</font>> color="black"]
  node7144 -> node7145 [label=<<font color="black">true</font>> color="black"]
  node7144 -> node7147 [label=<<font color="black">false</font>> color="black"]
  node7127 -> node7128 [ color="black"]
  node7100 -> node7101 [ color="black"]
  node7106 -> node7107 [label=<<font color="black">true</font>> color="black"]
  node7106 -> node7108 [label=<<font color="black">false</font>> color="black"]
  node7125 -> node7126 [ color="black"]
  node7133 -> node7134 [ color="black"]
  node7150 -> node7075 [ color="black"]
  node7107 -> node7123 [ color="black"]
  node7141 -> node7142 [ color="black"]
  node7081 -> node7082 [ color="black"]
  node7119 -> node7123 [ color="black"]
  node7103 -> node7104 [ color="black"]
  node7076 -> node7077 [ color="black"]
  node7129 -> node7130 [label=<<font color="black">true</font>> color="black"]
  node7129 -> node7131 [label=<<font color="black">false</font>> color="black"]
  node7077 -> node7078 [ color="black"]
  node7146 -> node7147 [ color="black"]
  node7078 -> node7079 [label=<<font color="black">true</font>> color="black"]
  node7078 -> node7081 [label=<<font color="black">false</font>> color="black"]
  node7123 -> node7124 [ color="black"]
  node7111 -> node7112 [ color="black"]
  node7131 -> node7132 [ color="black"]
  node7110 -> node7123 [ color="black"]
  node7143 -> node7144 [ color="black"]
  node7135 -> node7136 [ color="black"]
  node7145 -> node7146 [ color="black"]
  node7130 -> node7134 [ color="black"]
  node7070 -> node7071 [ color="black"]
  node7108 -> node7109 [label=<<font color="black">true</font>> color="black"]
  node7108 -> node7111 [label=<<font color="black">false</font>> color="black"]
  node7104 -> node7105 [label=<<font color="black">true</font>> color="black"]
  node7104 -> node7113 [label=<<font color="black">false</font>> color="black"]
  node7102 -> node7103 [ color="black"]
  node7142 -> node7143 [ color="black"]
  node7095 -> node7096 [ color="black"]
  node7066 -> node7068 [ color="black"]
  node7098 -> node7099 [ color="black"]
  node7072 -> node7073 [ color="black"]
  node7124 -> node7125 [label=<<font color="black">true</font>> color="black"]
  node7124 -> node7134 [label=<<font color="black">false</font>> color="black"]
  node7149 -> node7150 [label=<<font color="black">true</font>> color="black"]
  node7149 -> node7075 [label=<<font color="black">false</font>> color="black"]
  node7080 -> node7081 [ color="black"]
  node7069 -> node7070 [ color="black"]
  node7089 -> node7090 [ color="black"]
  node7122 -> node7123 [ color="black"]
  node7114 -> node7115 [ color="black"]
  node7140 -> node7149 [ color="black"]
  node7079 -> node7080 [ color="black"]
  node7093 -> node7104 [ color="black"]
}
