digraph {
  node16300 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16293 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16297 [shape=diamond, label=<<font color="black">(= bufferData null)</font>> color="black" fillcolor="white" style=filled]
  node16301 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (= (typeof bufferData) &quot;SharedDataBlock&quot;)</td></tr>
      <tr><td align="left">5:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16296 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let bufferData = obj.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16298 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16295 [shape=cds, label=<<font color="black">app obj = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16294 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16299 [shape=diamond, label=<<font color="black">(= (typeof bufferData) &quot;DataBlock&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16298 -> node16299 [ color="black"]
  node16296 -> node16297 [ color="black"]
  node16293 -> node16295 [ color="black"]
  node16301 -> node16294 [ color="black"]
  node16297 -> node16298 [label=<<font color="black">true</font>> color="black"]
  node16297 -> node16299 [label=<<font color="black">false</font>> color="black"]
  node16295 -> node16296 [ color="black"]
  node16300 -> node16301 [ color="black"]
  node16299 -> node16300 [label=<<font color="black">true</font>> color="black"]
  node16299 -> node16301 [label=<<font color="black">false</font>> color="black"]
}
