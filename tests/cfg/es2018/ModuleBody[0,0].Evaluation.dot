digraph {
  node10454 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10459 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10458 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10455 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10457 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type CONST_normal) (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node10456 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let result = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10453 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10457 -> node10458 [label=<<font color="black">true</font>> color="black"]
  node10457 -> node10459 [label=<<font color="black">false</font>> color="black"]
  node10453 -> node10455 [ color="black"]
  node10455 -> node10456 [ color="black"]
  node10458 -> node10459 [ color="black"]
  node10456 -> node10457 [ color="black"]
  node10459 -> node10454 [ color="black"]
}
