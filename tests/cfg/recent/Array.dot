digraph {
  node15632 [shape=cds, label=<<font color="black">11:app __x3__ = (Type len)</font>> color="black" fillcolor="white" style=filled]
  node15637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let intLen = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15648 [shape=cds, label=<<font color="black">23:app __x9__ = (CreateDataPropertyOrThrow array Pk itemK)</font>> color="black" fillcolor="white" style=filled]
  node15633 [shape=diamond, label=<<font color="black">(! (= __x3__ Number))</font>> color="black" fillcolor="white" style=filled]
  node15623 [shape=cds, label=<<font color="black">1:app __x0__ = (GetPrototypeFromConstructor newTarget &quot;%Array.prototype%&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15618 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15626 [shape=cds, label=<<font color="black">4:app __x1__ = (ArrayCreate 0i proto)</font>> color="black" fillcolor="white" style=filled]
  node15621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15629 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let len = values[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15643 [shape=cds, label=<<font color="black">18:app __x7__ = (ArrayCreate numberOfArgs proto)</font>> color="black" fillcolor="white" style=filled]
  node15628 [shape=diamond, label=<<font color="black">(== numberOfArgs 1i)</font>> color="black" fillcolor="white" style=filled]
  node15642 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:assert (! (&lt; numberOfArgs 2i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15631 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let array = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15638 [shape=diamond, label=<<font color="black">(! (= intLen len))</font>> color="black" fillcolor="white" style=filled]
  node15619 [shape=cds, label=<<font color="black">app values = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15634 [shape=cds, label=<<font color="black">9:app __x4__ = (CreateDataPropertyOrThrow array &quot;0&quot; len)</font>> color="black" fillcolor="white" style=filled]
  node15639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let proto = [? __x0__]</td></tr>
      <tr><td align="left">2:let numberOfArgs = values.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15646 [shape=cds, label=<<font color="black">21:app __x8__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node15641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[! __x6__]</td></tr>
      <tr><td align="left">15:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15630 [shape=cds, label=<<font color="black">7:app __x2__ = (ArrayCreate 0i proto)</font>> color="black" fillcolor="white" style=filled]
  node15649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:[! __x9__]</td></tr>
      <tr><td align="left">24:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15620 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[! __x4__]</td></tr>
      <tr><td align="left">10:let intLen = 1i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15645 [shape=diamond, label=<<font color="black">(&lt; k numberOfArgs)</font>> color="black" fillcolor="white" style=filled]
  node15640 [shape=cds, label=<<font color="black">14:app __x6__ = (Set array &quot;length&quot; intLen true)</font>> color="black" fillcolor="white" style=filled]
  node15644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let array = [? __x7__]</td></tr>
      <tr><td align="left">19:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15625 [shape=diamond, label=<<font color="black">(== numberOfArgs 0i)</font>> color="black" fillcolor="white" style=filled]
  node15647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let Pk = [! __x8__]</td></tr>
      <tr><td align="left">22:let itemK = values[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15622 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15617 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15636 [shape=cds, label=<<font color="black">12:app __x5__ = (ToUint32 len)</font>> color="black" fillcolor="white" style=filled]
  node15645 -> node15646 [label=<<font color="black">true</font>> color="black"]
  node15645 -> node15650 [label=<<font color="black">false</font>> color="black"]
  node15647 -> node15648 [ color="black"]
  node15636 -> node15637 [ color="black"]
  node15640 -> node15641 [ color="black"]
  node15643 -> node15644 [ color="black"]
  node15631 -> node15632 [ color="black"]
  node15624 -> node15625 [ color="black"]
  node15621 -> node15623 [ color="black"]
  node15650 -> node15618 [ color="black"]
  node15629 -> node15630 [ color="black"]
  node15626 -> node15627 [ color="black"]
  node15648 -> node15649 [ color="black"]
  node15627 -> node15618 [ color="black"]
  node15622 -> node15623 [ color="black"]
  node15628 -> node15629 [label=<<font color="black">true</font>> color="black"]
  node15628 -> node15642 [label=<<font color="black">false</font>> color="black"]
  node15637 -> node15638 [ color="black"]
  node15617 -> node15619 [ color="black"]
  node15649 -> node15645 [ color="black"]
  node15639 -> node15640 [ color="black"]
  node15642 -> node15643 [ color="black"]
  node15632 -> node15633 [ color="black"]
  node15635 -> node15640 [ color="black"]
  node15644 -> node15645 [ color="black"]
  node15620 -> node15621 [label=<<font color="black">true</font>> color="black"]
  node15620 -> node15622 [label=<<font color="black">false</font>> color="black"]
  node15625 -> node15626 [label=<<font color="black">true</font>> color="black"]
  node15625 -> node15628 [label=<<font color="black">false</font>> color="black"]
  node15633 -> node15634 [label=<<font color="black">true</font>> color="black"]
  node15633 -> node15636 [label=<<font color="black">false</font>> color="black"]
  node15623 -> node15624 [ color="black"]
  node15646 -> node15647 [ color="black"]
  node15634 -> node15635 [ color="black"]
  node15630 -> node15631 [ color="black"]
  node15619 -> node15620 [ color="black"]
  node15638 -> node15639 [label=<<font color="black">true</font>> color="black"]
  node15638 -> node15640 [label=<<font color="black">false</font>> color="black"]
  node15641 -> node15618 [ color="black"]
}
