["If", "NewTarget", "is", {
  "value": "undefined"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 0
}, "Let", {
  "id": "F"
}, "be", "the", "active", "function", "object", ".", {
  "k": 1
}, "If", {
  "id": "F"
}, ".", "[", "[", "ConstructorKind", "]", "]", "is", {
  "const": "derived"
}, ",", "then", {
  "in": null
}, "NOTE", ":", "This", "branch", "behaves", "similarly", "to", "`", "constructor", "(", ".", ".", ".", "args", ")", "{", "super", "(", ".", ".", ".", "args", ")", ";", "}", "`", ".", "The", "most", "notable", "distinction", "is", "that", "while", "the", "aforementioned", "ECMAScript", "source", "text", "observably", "calls", "the", "@", "@", "iterator", "method", "on", {
  "code": "%Array.prototype%"
}, ",", "a", "Default", "Constructor", "Function", "does", "not", ".", {
  "k": 3
}, "Let", {
  "id": "func"
}, "be", "!", {
  "id": "F"
}, ".", "[", "[", "GetPrototypeOf", "]", "]", "(", ")", ".", {
  "k": 4
}, "If", "IsConstructor", "(", {
  "id": "func"
}, ")", "is", {
  "value": "false"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 5
}, "Return", "?", "Construct", "(", {
  "id": "func"
}, ",", {
  "id": "args"
}, ",", "NewTarget", ")", ".", {
  "k": 6
}, {
  "out": null
}, {
  "k": 2
}, "Else", ",", {
  "in": null
}, "NOTE", ":", "This", "branch", "behaves", "similarly", "to", "`", "constructor", "(", ")", "{", "}", "`", ".", {
  "k": 8
}, "Return", "?", "OrdinaryCreateFromConstructor", "(", "NewTarget", ",", {
  "value": "\"%Object.prototype%\""
}, ")", ".", {
  "k": 9
}, {
  "out": null
}, {
  "k": 7
}]