digraph {
  node12674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12686 [shape=diamond, label=<<font color="black">(= targetLen -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node12673 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node12692 [shape=cds, label=<<font color="black">15:app __x7__ = (SetFunctionLength F L)</font>> color="black" fillcolor="white" style=filled]
  node12667 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12696 [shape=cds, label=<<font color="black">17:app __x9__ = (Type targetName)</font>> color="black" fillcolor="white" style=filled]
  node12671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let Target = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12677 [shape=cds, label=<<font color="black">4:app __x2__ = (HasOwnProperty Target &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12683 [shape=diamond, label=<<font color="black">(= __x4__ Number)</font>> color="black" fillcolor="white" style=filled]
  node12688 [shape=cds, label=<<font color="black">11:app __x5__ = (ToIntegerOrInfinity targetLen)</font>> color="black" fillcolor="white" style=filled]
  node12695 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let targetName = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12684 [shape=diamond, label=<<font color="black">(= targetLen Infinity)</font>> color="black" fillcolor="white" style=filled]
  node12690 [shape=cds, label=<<font color="black">14:app __x6__ = (max (- targetLenAsInt argCount) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12675 [shape=cds, label=<<font color="black">2:app __x1__ = (BoundFunctionCreate Target thisArg args)</font>> color="black" fillcolor="white" style=filled]
  node12681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let targetLen = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12679 [shape=diamond, label=<<font color="black">(= targetHasLength true)</font>> color="black" fillcolor="white" style=filled]
  node12669 [shape=cds, label=<<font color="black">app thisArg = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12694 [shape=cds, label=<<font color="black">16:app __x8__ = (Get Target &quot;name&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12699 [shape=cds, label=<<font color="black">18:app __x10__ = (SetFunctionName F targetName &quot;bound&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12689 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetLenAsInt = [! __x5__]</td></tr>
      <tr><td align="left">12:assert (! (|| (= targetLenAsInt Infinity) (= targetLenAsInt -Infinity)))</td></tr>
      <tr><td align="left">13:let argCount = args.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12693 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:[! __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12682 [shape=cds, label=<<font color="black">7:app __x4__ = (Type targetLen)</font>> color="black" fillcolor="white" style=filled]
  node12678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let targetHasLength = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12670 [shape=cds, label=<<font color="black">app args = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12700 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x10__</td></tr>
      <tr><td align="left">19:return F</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12687 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">L = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let F = [? __x1__]</td></tr>
      <tr><td align="left">3:let L = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12668 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12697 [shape=diamond, label=<<font color="black">(! (= __x9__ String))</font>> color="black" fillcolor="white" style=filled]
  node12691 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:L = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12680 [shape=cds, label=<<font color="black">6:app __x3__ = (Get Target &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12672 [shape=cds, label=<<font color="black">1:app __x0__ = (IsCallable Target)</font>> color="black" fillcolor="white" style=filled]
  node12698 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">targetName = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12685 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">L = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12667 -> node12669 [ color="black"]
  node12669 -> node12670 [ color="black"]
  node12677 -> node12678 [ color="black"]
  node12698 -> node12699 [ color="black"]
  node12671 -> node12672 [ color="black"]
  node12697 -> node12698 [label=<<font color="black">true</font>> color="black"]
  node12697 -> node12699 [label=<<font color="black">false</font>> color="black"]
  node12692 -> node12693 [ color="black"]
  node12682 -> node12683 [ color="black"]
  node12670 -> node12671 [ color="black"]
  node12681 -> node12682 [ color="black"]
  node12679 -> node12680 [label=<<font color="black">true</font>> color="black"]
  node12679 -> node12692 [label=<<font color="black">false</font>> color="black"]
  node12678 -> node12679 [ color="black"]
  node12694 -> node12695 [ color="black"]
  node12688 -> node12689 [ color="black"]
  node12690 -> node12691 [ color="black"]
  node12683 -> node12684 [label=<<font color="black">true</font>> color="black"]
  node12683 -> node12692 [label=<<font color="black">false</font>> color="black"]
  node12700 -> node12668 [ color="black"]
  node12689 -> node12690 [ color="black"]
  node12686 -> node12687 [label=<<font color="black">true</font>> color="black"]
  node12686 -> node12688 [label=<<font color="black">false</font>> color="black"]
  node12674 -> node12675 [ color="black"]
  node12699 -> node12700 [ color="black"]
  node12695 -> node12696 [ color="black"]
  node12680 -> node12681 [ color="black"]
  node12691 -> node12692 [ color="black"]
  node12684 -> node12685 [label=<<font color="black">true</font>> color="black"]
  node12684 -> node12686 [label=<<font color="black">false</font>> color="black"]
  node12676 -> node12677 [ color="black"]
  node12696 -> node12697 [ color="black"]
  node12693 -> node12694 [ color="black"]
  node12672 -> node12673 [ color="black"]
  node12675 -> node12676 [ color="black"]
  node12673 -> node12674 [label=<<font color="black">true</font>> color="black"]
  node12673 -> node12675 [label=<<font color="black">false</font>> color="black"]
  node12685 -> node12692 [ color="black"]
  node12687 -> node12692 [ color="black"]
}
