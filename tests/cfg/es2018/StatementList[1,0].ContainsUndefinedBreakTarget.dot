digraph {
  node5603 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5600 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5605 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5604 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node5607 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5602 [shape=cds, label=<<font color="black">0:access __x0__ = (StatementList &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node5606 [shape=cds, label=<<font color="black">2:access __x1__ = (StatementListItem &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node5601 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5606 -> node5607 [ color="black"]
  node5602 -> node5603 [ color="black"]
  node5607 -> node5601 [ color="black"]
  node5600 -> node5602 [ color="black"]
  node5604 -> node5605 [label=<<font color="black">true</font>> color="black"]
  node5604 -> node5606 [label=<<font color="black">false</font>> color="black"]
  node5603 -> node5604 [ color="black"]
  node5605 -> node5606 [ color="black"]
}
