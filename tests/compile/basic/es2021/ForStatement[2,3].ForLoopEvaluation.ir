{
  let oldEnv = CONTEXT.LexicalEnvironment
  app __x0__ = (NewDeclarativeEnvironment oldEnv)
  let loopEnv = __x0__
  access __x1__ = (LexicalDeclaration "IsConstantDeclaration")
  let isConst = __x1__
  access __x2__ = (LexicalDeclaration "BoundNames")
  let boundNames = __x2__
  let __x3__ = boundNames
  let __x4__ = 0i
  while (< __x4__ __x3__.length) {
    let dn = __x3__[__x4__]
    if (= isConst true) {
      app __x5__ = (loopEnv.CreateImmutableBinding loopEnv dn true)
      [! __x5__]
    } else {
      app __x6__ = (loopEnv.CreateMutableBinding loopEnv dn false)
      [! __x6__]
    }
    __x4__ = (+ __x4__ 1i)
  }
  CONTEXT.LexicalEnvironment = loopEnv
  access __x7__ = (LexicalDeclaration "Evaluation")
  let forDcl = __x7__
  app __x8__ = (IsAbruptCompletion forDcl)
  if __x8__ {
    CONTEXT.LexicalEnvironment = oldEnv
    return forDcl
  } else {}
  if (= isConst false) let perIterationLets = boundNames else let perIterationLets = (new [])
  app __x9__ = (ForBodyEvaluation Expression0 Expression1 Statement perIterationLets labelSet)
  let bodyResult = __x9__
  CONTEXT.LexicalEnvironment = oldEnv
  return bodyResult
}