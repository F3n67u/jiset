{
  app __x0__ = (Type S)
  assert (= __x0__ String)
  app __x1__ = (Type unicode)
  assert (= __x1__ Boolean)
  if (= unicode false) {
    app __x2__ = (WrapCompletion (+ index 1i))
    return __x2__
  } else {}
  let length = S.length
  if (! (< (+ index 1i) length)) {
    app __x3__ = (WrapCompletion (+ index 1i))
    return __x3__
  } else {}
  app __x4__ = (CodePointAt S index)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  let cp = __x4__
  app __x5__ = (WrapCompletion (+ index cp.CodeUnitCount))
  return __x5__
}