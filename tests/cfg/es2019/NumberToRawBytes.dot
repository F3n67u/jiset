digraph {
  node16324 [shape=diamond, label=<<font color="black">(= type &quot;Float64&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16323 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List containing the 4 bytes that are the result of converting id:{value} to IEEE 754 - 2008 binary32 format using &ldquo; Round to nearest , ties to even &rdquo; rounding mode . If id:{isLittleEndian} is value:{false} , the bytes are arranged in big endian order . Otherwise , the bytes are arranged in little endian order . If id:{value} is value:{NaN} , id:{rawBytes} may be set to any implementation chosen IEEE 754 - 2008 binary32 format Not - a - Number encoding . An implementation must always choose the same encoding for each implementation distinguishable value:{NaN} value .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16320 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16322 [shape=diamond, label=<<font color="black">(= type &quot;Float32&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16332 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return rawBytes</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16325 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List containing the 8 bytes that are the IEEE 754 - 2008 binary64 format encoding of id:{value} . If id:{isLittleEndian} is value:{false} , the bytes are arranged in big endian order . Otherwise , the bytes are arranged in little endian order . If id:{value} is value:{NaN} , id:{rawBytes} may be set to any implementation chosen IEEE 754 - 2008 binary64 format Not - a - Number encoding . An implementation must always choose the same encoding for each implementation distinguishable value:{NaN} value .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16328 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let intValue = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16329 [shape=diamond, label=<<font color="black">(! (&lt; intValue 0i))</font>> color="black" fillcolor="white" style=filled]
  node16330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List containing the id:{n} - byte binary encoding of id:{intValue} . If id:{isLittleEndian} is value:{false} , the bytes are ordered in big endian order . Otherwise , the bytes are ordered in little endian order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16327 [shape=cds, label=<<font color="black">7:app __x0__ = (convOp value)</font>> color="black" fillcolor="white" style=filled]
  node16326 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{n} be the Number value of the Element Size specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{convOp} be the abstract operation named in the Conversion Operation column in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16321 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16331 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List containing the id:{n} - byte binary 2 ' s complement encoding of id:{intValue} . If id:{isLittleEndian} is value:{false} , the bytes are ordered in big endian order . Otherwise , the bytes are ordered in little endian order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16329 -> node16330 [label=<<font color="black">true</font>> color="black"]
  node16329 -> node16331 [label=<<font color="black">false</font>> color="black"]
  node16327 -> node16328 [ color="black"]
  node16320 -> node16322 [ color="black"]
  node16332 -> node16321 [ color="black"]
  node16331 -> node16332 [ color="black"]
  node16323 -> node16332 [ color="black"]
  node16330 -> node16332 [ color="black"]
  node16325 -> node16332 [ color="black"]
  node16326 -> node16327 [ color="black"]
  node16328 -> node16329 [ color="black"]
  node16324 -> node16325 [label=<<font color="black">true</font>> color="black"]
  node16324 -> node16326 [label=<<font color="black">false</font>> color="black"]
  node16322 -> node16323 [label=<<font color="black">true</font>> color="black"]
  node16322 -> node16324 [label=<<font color="black">false</font>> color="black"]
}
