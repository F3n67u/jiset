{
  assert (= (typeof targetFunction) Object)
  app __x0__ = (targetFunction.GetPrototypeOf targetFunction)
  let proto = [? __x0__]
  ??? "Let id:{internalSlotsList} be the internal slots listed in Table 28 , plus [ [ Prototype ] ] and [ [ Extensible ] ] ."
  app __x1__ = (MakeBasicObject internalSlotsList)
  let obj = [! __x1__]
  obj.Prototype = proto
  ??? "Set id:{obj} . [ [ Call ] ] as described in 9 . 4 . 1 . 1 ."
  app __x2__ = (IsConstructor targetFunction)
  if (= __x2__ true) ??? "Set id:{obj} . [ [ Construct ] ] as described in 9 . 4 . 1 . 2 ." else {}
  obj.BoundTargetFunction = targetFunction
  obj.BoundThis = boundThis
  obj.BoundArguments = boundArgs
  return obj
}