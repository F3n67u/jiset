digraph {
  node18482 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18475 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18481 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18480 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18485 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node18476 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node18465 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18466 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18488 [shape=diamond, label=<<font color="black">__x6__</font>> color="black" fillcolor="white" style=filled]
  node18478 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let next = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18467 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18474 [shape=diamond, label=<<font color="black">(= [! __x2__] false)</font>> color="black" fillcolor="white" style=filled]
  node18468 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18486 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18469 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node18492 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let nextPromise = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18479 [shape=cds, label=<<font color="black">6:app __x4__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node18493 [shape=cds, label=<<font color="black">15:app __x8__ = (Invoke nextPromise &quot;then&quot; (new [resultCapability.Resolve, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node18471 [shape=cds, label=<<font color="black">2:app __x1__ = (Get constructor &quot;resolve&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18472 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseResolve = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18489 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18494 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18477 [shape=cds, label=<<font color="black">5:app __x3__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18484 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">10:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18487 [shape=cds, label=<<font color="black">12:app __x6__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node18473 [shape=cds, label=<<font color="black">3:app __x2__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18490 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? nextValue]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18464 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18483 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node18491 [shape=cds, label=<<font color="black">14:app __x7__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node18470 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18486 -> node18487 [ color="black"]
  node18468 -> node18469 [ color="black"]
  node18487 -> node18488 [ color="black"]
  node18470 -> node18471 [ color="black"]
  node18476 -> node18477 [label=<<font color="black">true</font>> color="black"]
  node18476 -> node18465 [label=<<font color="black">false</font>> color="black"]
  node18491 -> node18492 [ color="black"]
  node18472 -> node18473 [ color="black"]
  node18471 -> node18472 [ color="black"]
  node18474 -> node18475 [label=<<font color="black">true</font>> color="black"]
  node18474 -> node18476 [label=<<font color="black">false</font>> color="black"]
  node18492 -> node18493 [ color="black"]
  node18467 -> node18468 [ color="black"]
  node18477 -> node18478 [ color="black"]
  node18494 -> node18476 [ color="black"]
  node18488 -> node18489 [label=<<font color="black">true</font>> color="black"]
  node18488 -> node18490 [label=<<font color="black">false</font>> color="black"]
  node18484 -> node18485 [ color="black"]
  node18493 -> node18494 [ color="black"]
  node18485 -> node18486 [ color="black"]
  node18481 -> node18482 [ color="black"]
  node18469 -> node18470 [ color="black"]
  node18482 -> node18483 [ color="black"]
  node18480 -> node18481 [label=<<font color="black">true</font>> color="black"]
  node18480 -> node18482 [label=<<font color="black">false</font>> color="black"]
  node18475 -> node18476 [ color="black"]
  node18490 -> node18491 [ color="black"]
  node18473 -> node18474 [ color="black"]
  node18479 -> node18480 [ color="black"]
  node18489 -> node18490 [ color="black"]
  node18483 -> node18484 [label=<<font color="black">true</font>> color="black"]
  node18483 -> node18485 [label=<<font color="black">false</font>> color="black"]
  node18464 -> node18466 [ color="black"]
  node18478 -> node18479 [ color="black"]
  node18466 -> node18467 [ color="black"]
}
