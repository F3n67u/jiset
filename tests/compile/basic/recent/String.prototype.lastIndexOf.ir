{
  app __x0__ = (RequireObjectCoercible this)
  let O = [? __x0__]
  app __x1__ = (ToString O)
  let S = [? __x1__]
  app __x2__ = (ToString searchString)
  let searchStr = [? __x2__]
  app __x3__ = (ToNumber position)
  let numPos = [? __x3__]
  if (= numPos NaN) let pos = Infinity else {
    app __x4__ = (ToIntegerOrInfinity numPos)
    let pos = [! __x4__]
  }
  let len = S.length
  ??? "Let id:{start} be the result of clamping id:{pos} between 0 and id:{len} ."
  let searchLen = searchStr.length
  ??? "Let id:{k} be the largest possible non - negative integer not larger than id:{start} such that id:{k} + id:{searchLen} â‰¤ id:{len} , and for all non - negative integers id:{j} such that id:{j} < id:{searchLen} , the code unit at index id:{k} + id:{j} within id:{S} is the same as the code unit at index id:{j} within id:{searchStr} ; but if there is no such integer , let id:{k} be - 1 ."
  return k
}