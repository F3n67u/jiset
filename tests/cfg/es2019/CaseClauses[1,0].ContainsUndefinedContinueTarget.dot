digraph {
  node7349 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7353 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7346 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7350 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node7347 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7351 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7348 [shape=cds, label=<<font color="black">0:access __x0__ = (CaseClauses &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7352 [shape=cds, label=<<font color="black">2:access __x1__ = (CaseClause &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7348 -> node7349 [ color="black"]
  node7352 -> node7353 [ color="black"]
  node7353 -> node7347 [ color="black"]
  node7349 -> node7350 [ color="black"]
  node7351 -> node7352 [ color="black"]
  node7346 -> node7348 [ color="black"]
  node7350 -> node7351 [label=<<font color="black">true</font>> color="black"]
  node7350 -> node7352 [label=<<font color="black">false</font>> color="black"]
}
