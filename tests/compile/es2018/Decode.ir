{
  app string = (GetArgument argumentsList 0i)
  app reservedSet = (GetArgument argumentsList 1i)
  [0] let strLen = string.length
  [1] let R = ""
  [2] let k = 0i
  [3] while true {
    [4] if (= k strLen) {
      app __x0__ = (WrapCompletion R)
      return __x0__
    } else [74] {}
    [5] let C = string[k]
    [8] if (! (= C "%")) let S = C else {
      [9] let start = k
      [10] if (! (< (+ k 2i) strLen)) {
        app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_URIError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
        return __x1__
      } else [74] {}
      [11] ??? "If the code units at index ( id:{k} + 1 ) and ( id:{k} + 2 ) within id:{string} do not represent hexadecimal digits , throw a value:{URIError} exception ."
      [12] ??? "Let id:{B} be the 8 - bit value represented by the two hexadecimal digits at index ( id:{k} + 1 ) and ( id:{k} + 2 ) ."
      [13] k = (+ k 2i)
      [14] ??? "If the most significant bit in id:{B} is 0 , then step-list:{...}"
      [20] ??? "Else the most significant bit in id:{B} is 1 , step-list:{...}"
    }
    [39] R = (+ R S)
    [40] k = (+ k 1i)
  }
}