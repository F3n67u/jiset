digraph {
  node6431 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6438 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6442 [shape=cds, label=<<font color="black">10:access __x10__ = (d &quot;InstantiateFunctionObject&quot; env)</font>> color="black" fillcolor="white" style=filled]
  node6428 [shape=cds, label=<<font color="black">3:access __x3__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6433 [shape=diamond, label=<<font color="black">(= __x6__ true)</font>> color="black" fillcolor="white" style=filled]
  node6443 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let fo = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6440 [shape=cds, label=<<font color="black">9:access __x9__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6425 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let declarations = __x0__</td></tr>
      <tr><td align="left">2:let __x1__ = declarations</td></tr>
      <tr><td align="left">2:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6439 [shape=diamond, label=<<font color="black">(|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</font>> color="black" fillcolor="white" style=filled]
  node6441 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let fn = __x9__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6426 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node6423 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= (typeof env) &quot;DeclarativeEnvironmentRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6434 [shape=cds, label=<<font color="black">5:app __x7__ = (env.CreateImmutableBinding env dn true)</font>> color="black" fillcolor="white" style=filled]
  node6432 [shape=cds, label=<<font color="black">6:access __x6__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6427 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6445 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:__x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6437 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6422 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6429 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let __x4__ = __x3__</td></tr>
      <tr><td align="left">3:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6446 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6421 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6436 [shape=cds, label=<<font color="black">7:app __x8__ = (env.CreateMutableBinding env dn false)</font>> color="black" fillcolor="white" style=filled]
  node6430 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node6444 [shape=cds, label=<<font color="black">11:app __x11__ = (env.InitializeBinding env fn fo)</font>> color="black" fillcolor="white" style=filled]
  node6435 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6424 [shape=cds, label=<<font color="black">1:access __x0__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6427 -> node6428 [ color="black"]
  node6433 -> node6434 [label=<<font color="black">true</font>> color="black"]
  node6433 -> node6436 [label=<<font color="black">false</font>> color="black"]
  node6441 -> node6442 [ color="black"]
  node6434 -> node6435 [ color="black"]
  node6439 -> node6440 [label=<<font color="black">true</font>> color="black"]
  node6439 -> node6446 [label=<<font color="black">false</font>> color="black"]
  node6421 -> node6423 [ color="black"]
  node6444 -> node6445 [ color="black"]
  node6437 -> node6438 [ color="black"]
  node6440 -> node6441 [ color="black"]
  node6442 -> node6443 [ color="black"]
  node6425 -> node6426 [ color="black"]
  node6432 -> node6433 [ color="black"]
  node6435 -> node6438 [ color="black"]
  node6431 -> node6432 [ color="black"]
  node6429 -> node6430 [ color="black"]
  node6446 -> node6426 [ color="black"]
  node6423 -> node6424 [ color="black"]
  node6445 -> node6446 [ color="black"]
  node6428 -> node6429 [ color="black"]
  node6430 -> node6431 [label=<<font color="black">true</font>> color="black"]
  node6430 -> node6439 [label=<<font color="black">false</font>> color="black"]
  node6438 -> node6430 [ color="black"]
  node6443 -> node6444 [ color="black"]
  node6436 -> node6437 [ color="black"]
  node6426 -> node6427 [label=<<font color="black">true</font>> color="black"]
  node6426 -> node6422 [label=<<font color="black">false</font>> color="black"]
  node6424 -> node6425 [ color="black"]
}
