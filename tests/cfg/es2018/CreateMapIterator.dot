digraph {
  node15752 [shape=cds, label=<<font color="black">2:app __x1__ = (ObjectCreate INTRINSIC_MapIteratorPrototype (new [&quot;Map&quot;, &quot;MapNextIndex&quot;, &quot;MapIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15744 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15748 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15751 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15747 [shape=cds, label=<<font color="black">0:app __x0__ = (Type map)</font>> color="black" fillcolor="white" style=filled]
  node15746 [shape=cds, label=<<font color="black">app kind = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = __x1__</td></tr>
      <tr><td align="left">3:iterator.Map = map</td></tr>
      <tr><td align="left">4:iterator.MapNextIndex = 0i</td></tr>
      <tr><td align="left">5:iterator.MapIterationKind = kind</td></tr>
      <tr><td align="left">6:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15749 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15743 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15750 [shape=diamond, label=<<font color="black">(= map.MapData absent)</font>> color="black" fillcolor="white" style=filled]
  node15745 [shape=cds, label=<<font color="black">app map = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15753 -> node15744 [ color="black"]
  node15751 -> node15752 [ color="black"]
  node15750 -> node15751 [label=<<font color="black">true</font>> color="black"]
  node15750 -> node15752 [label=<<font color="black">false</font>> color="black"]
  node15748 -> node15749 [label=<<font color="black">true</font>> color="black"]
  node15748 -> node15750 [label=<<font color="black">false</font>> color="black"]
  node15743 -> node15745 [ color="black"]
  node15749 -> node15750 [ color="black"]
  node15745 -> node15746 [ color="black"]
  node15752 -> node15753 [ color="black"]
  node15746 -> node15747 [ color="black"]
  node15747 -> node15748 [ color="black"]
}
