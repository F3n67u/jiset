{
  if (= LeftFirst true) {
    app __x0__ = (ToPrimitive x Number)
    let px = [? __x0__]
    app __x1__ = (ToPrimitive y Number)
    let py = [? __x1__]
  } else {
    app __x2__ = (ToPrimitive y Number)
    let py = [? __x2__]
    app __x3__ = (ToPrimitive x Number)
    let px = [? __x3__]
  }
  if (&& (= (typeof px) String) (= (typeof py) String)) {
    app __x4__ = (IsStringPrefix py px)
    if (= __x4__ true) return false else {}
    app __x5__ = (IsStringPrefix px py)
    if (= __x5__ true) return true else {}
    ??? "Let id:{k} be the smallest nonnegative integer such that the code unit at index id:{k} within id:{px} is different from the code unit at index id:{k} within id:{py} . ( There must be such a id:{k} , for neither String is a prefix of the other . )"
    ??? "Let id:{m} be the integer that is the numeric value of the code unit at index id:{k} within id:{px} ."
    ??? "Let id:{n} be the integer that is the numeric value of the code unit at index id:{k} within id:{py} ."
    if (< m n) return true else return false
  } else {
    app __x6__ = (ToNumber px)
    let nx = [? __x6__]
    app __x7__ = (ToNumber py)
    let ny = [? __x7__]
    if (= nx NaN) return undefined else {}
    if (= ny NaN) return undefined else {}
    if (= nx ny) return false else {}
    if (&& (= nx 0i) (= ny -0.0)) return false else {}
    if (&& (= nx -0.0) (= ny 0i)) return false else {}
    if (= nx Infinity) return false else {}
    if (= ny Infinity) return true else {}
    if (= ny -Infinity) return false else {}
    if (= nx -Infinity) return true else {}
    ??? "If the mathematical value of id:{nx} is less than the mathematical value of id:{ny} — note that these mathematical values are both finite and not both zero — return value:{true} . Otherwise , return value:{false} ."
  }
}