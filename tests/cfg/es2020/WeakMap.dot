digraph {
  node16808 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16817 [shape=cds, label=<<font color="black">5:app __x2__ = (AddEntriesFromIterable map iterable adder)</font>> color="black" fillcolor="white" style=filled]
  node16816 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16809 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16815 [shape=cds, label=<<font color="black">4:app __x1__ = (Get map &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let map = [? __x0__]</td></tr>
      <tr><td align="left">2:map.WeakMapData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16806 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16811 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget &quot;%WeakMap.prototype%&quot; (new [&quot;WeakMapData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16807 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16813 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node16810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16813 -> node16814 [label=<<font color="black">true</font>> color="black"]
  node16813 -> node16815 [label=<<font color="black">false</font>> color="black"]
  node16811 -> node16812 [ color="black"]
  node16816 -> node16817 [ color="black"]
  node16818 -> node16807 [ color="black"]
  node16806 -> node16808 [ color="black"]
  node16815 -> node16816 [ color="black"]
  node16817 -> node16818 [ color="black"]
  node16814 -> node16815 [ color="black"]
  node16810 -> node16811 [ color="black"]
  node16808 -> node16809 [ color="black"]
  node16809 -> node16810 [label=<<font color="black">true</font>> color="black"]
  node16809 -> node16811 [label=<<font color="black">false</font>> color="black"]
  node16812 -> node16813 [ color="black"]
}
