digraph {
  node7549 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7556 [shape=cds, label=<<font color="black">3:app __x2__ = (UpdateEmpty C undefined)</font>> color="black" fillcolor="white" style=filled]
  node7550 [shape=cds, label=<<font color="black">0:access __x0__ = (Block &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7555 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = B</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7551 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let B = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7554 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7552 [shape=diamond, label=<<font color="black">(= B.Type CONST_throw)</font>> color="black" fillcolor="white" style=filled]
  node7557 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7548 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7553 [shape=cds, label=<<font color="black">access __x1__ = (Catch &quot;CatchClauseEvaluation&quot; B.Value)</font>> color="black" fillcolor="white" style=filled]
  node7552 -> node7553 [label=<<font color="black">true</font>> color="black"]
  node7552 -> node7555 [label=<<font color="black">false</font>> color="black"]
  node7550 -> node7551 [ color="black"]
  node7556 -> node7557 [ color="black"]
  node7553 -> node7554 [ color="black"]
  node7557 -> node7549 [ color="black"]
  node7548 -> node7550 [ color="black"]
  node7554 -> node7556 [ color="black"]
  node7555 -> node7556 [ color="black"]
  node7551 -> node7552 [ color="black"]
}
