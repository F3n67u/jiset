digraph {
  node10427 [shape=cds, label=<<font color="black">19:app __x10__ = (importedModule.ResolveExport importedModule in.ImportName (new []))</font>> color="black" fillcolor="white" style=filled]
  node10462 [shape=cds, label=<<font color="black">37:app __x28__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10458 [shape=cds, label=<<font color="black">36:access __x26__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10420 [shape=diamond, label=<<font color="black">(= in.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10416 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node10464 [shape=diamond, label=<<font color="black">(|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</font>> color="black" fillcolor="white" style=filled]
  node10408 [shape=cds, label=<<font color="black">2:app __x2__ = (module.ResolveExport module e.ExportName (new []))</font>> color="black" fillcolor="white" style=filled]
  node10460 [shape=cds, label=<<font color="black">35:app __x27__ = (envRec.CreateImmutableBinding envRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node10410 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10452 [shape=diamond, label=<<font color="black">(&lt; __x22__ __x21__.length)</font>> color="black" fillcolor="white" style=filled]
  node10446 [shape=cds, label=<<font color="black">29:app __x19__ = (envRec.InitializeBinding envRec dn undefined)</font>> color="black" fillcolor="white" style=filled]
  node10431 [shape=cds, label=<<font color="black">21:app __x11__ = (envRec.CreateImportBinding envRec in.LocalName resolution.Module resolution.BindingName)</font>> color="black" fillcolor="white" style=filled]
  node10463 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:[! __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10433 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10414 [shape=cds, label=<<font color="black">8:app __x3__ = (NewModuleEnvironment realm.GlobalEnv)</font>> color="black" fillcolor="white" style=filled]
  node10437 [shape=diamond, label=<<font color="black">(&lt; __x14__ __x13__.length)</font>> color="black" fillcolor="white" style=filled]
  node10469 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x25__ = (+ __x25__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10454 [shape=cds, label=<<font color="black">33:access __x23__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10419 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let importedModule = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10404 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10442 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10405 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let module = this</td></tr>
      <tr><td align="left">1:let __x0__ = module.IndirectExportEntries</td></tr>
      <tr><td align="left">1:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10422 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let namespace = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10459 [shape=diamond, label=<<font color="black">(= __x26__ true)</font>> color="black" fillcolor="white" style=filled]
  node10426 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:__x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10409 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let resolution = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10441 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node10413 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let realm = module.Realm</td></tr>
      <tr><td align="left">7:assert (! (= realm undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10445 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:[! __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10434 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let code = module.ECMAScriptCode</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10430 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10423 [shape=cds, label=<<font color="black">16:app __x8__ = (envRec.CreateImmutableBinding envRec in.LocalName true)</font>> color="black" fillcolor="white" style=filled]
  node10455 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let __x24__ = __x23__</td></tr>
      <tr><td align="left">33:let __x25__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10438 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x13__[__x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10470 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x22__ = (+ __x22__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10465 [shape=cds, label=<<font color="black">39:access __x29__ = (d &quot;InstantiateFunctionObject&quot; env)</font>> color="black" fillcolor="white" style=filled]
  node10406 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node10425 [shape=cds, label=<<font color="black">17:app __x9__ = (envRec.InitializeBinding envRec in.LocalName namespace)</font>> color="black" fillcolor="white" style=filled]
  node10461 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x27__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10435 [shape=cds, label=<<font color="black">23:access __x12__ = (code &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10457 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x24__[__x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10429 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10448 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10450 [shape=cds, label=<<font color="black">31:access __x20__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10412 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (= (typeof resolution) &quot;ResolvedBindingRecord&quot;)</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10467 [shape=cds, label=<<font color="black">40:app __x30__ = (envRec.InitializeBinding envRec dn fo)</font>> color="black" fillcolor="white" style=filled]
  node10444 [shape=cds, label=<<font color="black">28:app __x18__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10407 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10424 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:[! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10456 [shape=diamond, label=<<font color="black">(&lt; __x25__ __x24__.length)</font>> color="black" fillcolor="white" style=filled]
  node10417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let in = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10449 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x14__ = (+ __x14__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10471 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10439 [shape=cds, label=<<font color="black">26:access __x15__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10466 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let fo = __x29__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10415 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let env = __x3__</td></tr>
      <tr><td align="left">9:module.Environment = env</td></tr>
      <tr><td align="left">10:let envRec = env.EnvironmentRecord</td></tr>
      <tr><td align="left">11:let __x4__ = module.ImportEntries</td></tr>
      <tr><td align="left">11:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10436 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let varDeclarations = __x12__</td></tr>
      <tr><td align="left">24:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">25:let __x13__ = varDeclarations</td></tr>
      <tr><td align="left">25:let __x14__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10432 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:__x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let lexDeclarations = __x20__</td></tr>
      <tr><td align="left">32:let __x21__ = lexDeclarations</td></tr>
      <tr><td align="left">32:let __x22__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10468 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:__x30__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10411 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10428 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let resolution = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10447 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:__x19__</td></tr>
      <tr><td align="left">30:append dn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10453 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x21__[__x22__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10443 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames dn))</font>> color="black" fillcolor="white" style=filled]
  node10418 [shape=cds, label=<<font color="black">12:app __x6__ = (HostResolveImportedModule module in.ModuleRequest)</font>> color="black" fillcolor="white" style=filled]
  node10421 [shape=cds, label=<<font color="black">15:app __x7__ = (GetModuleNamespace importedModule)</font>> color="black" fillcolor="white" style=filled]
  node10403 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10440 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let __x16__ = __x15__</td></tr>
      <tr><td align="left">26:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10424 -> node10425 [ color="black"]
  node10408 -> node10409 [ color="black"]
  node10433 -> node10416 [ color="black"]
  node10411 -> node10412 [ color="black"]
  node10444 -> node10445 [ color="black"]
  node10439 -> node10440 [ color="black"]
  node10403 -> node10405 [ color="black"]
  node10442 -> node10443 [ color="black"]
  node10440 -> node10441 [ color="black"]
  node10462 -> node10463 [ color="black"]
  node10452 -> node10453 [label=<<font color="black">true</font>> color="black"]
  node10452 -> node10471 [label=<<font color="black">false</font>> color="black"]
  node10438 -> node10439 [ color="black"]
  node10448 -> node10441 [ color="black"]
  node10406 -> node10407 [label=<<font color="black">true</font>> color="black"]
  node10406 -> node10413 [label=<<font color="black">false</font>> color="black"]
  node10470 -> node10452 [ color="black"]
  node10415 -> node10416 [ color="black"]
  node10449 -> node10437 [ color="black"]
  node10453 -> node10454 [ color="black"]
  node10455 -> node10456 [ color="black"]
  node10465 -> node10466 [ color="black"]
  node10441 -> node10442 [label=<<font color="black">true</font>> color="black"]
  node10441 -> node10449 [label=<<font color="black">false</font>> color="black"]
  node10456 -> node10457 [label=<<font color="black">true</font>> color="black"]
  node10456 -> node10470 [label=<<font color="black">false</font>> color="black"]
  node10443 -> node10444 [label=<<font color="black">true</font>> color="black"]
  node10443 -> node10448 [label=<<font color="black">false</font>> color="black"]
  node10467 -> node10468 [ color="black"]
  node10454 -> node10455 [ color="black"]
  node10407 -> node10408 [ color="black"]
  node10458 -> node10459 [ color="black"]
  node10413 -> node10414 [ color="black"]
  node10468 -> node10469 [ color="black"]
  node10464 -> node10465 [label=<<font color="black">true</font>> color="black"]
  node10464 -> node10469 [label=<<font color="black">false</font>> color="black"]
  node10418 -> node10419 [ color="black"]
  node10427 -> node10428 [ color="black"]
  node10447 -> node10448 [ color="black"]
  node10430 -> node10431 [ color="black"]
  node10446 -> node10447 [ color="black"]
  node10416 -> node10417 [label=<<font color="black">true</font>> color="black"]
  node10416 -> node10434 [label=<<font color="black">false</font>> color="black"]
  node10417 -> node10418 [ color="black"]
  node10420 -> node10421 [label=<<font color="black">true</font>> color="black"]
  node10420 -> node10427 [label=<<font color="black">false</font>> color="black"]
  node10461 -> node10464 [ color="black"]
  node10419 -> node10420 [ color="black"]
  node10409 -> node10410 [ color="black"]
  node10425 -> node10426 [ color="black"]
  node10460 -> node10461 [ color="black"]
  node10405 -> node10406 [ color="black"]
  node10410 -> node10411 [label=<<font color="black">true</font>> color="black"]
  node10410 -> node10412 [label=<<font color="black">false</font>> color="black"]
  node10422 -> node10423 [ color="black"]
  node10450 -> node10451 [ color="black"]
  node10466 -> node10467 [ color="black"]
  node10435 -> node10436 [ color="black"]
  node10423 -> node10424 [ color="black"]
  node10429 -> node10430 [label=<<font color="black">true</font>> color="black"]
  node10429 -> node10431 [label=<<font color="black">false</font>> color="black"]
  node10437 -> node10438 [label=<<font color="black">true</font>> color="black"]
  node10437 -> node10450 [label=<<font color="black">false</font>> color="black"]
  node10412 -> node10406 [ color="black"]
  node10428 -> node10429 [ color="black"]
  node10414 -> node10415 [ color="black"]
  node10457 -> node10458 [ color="black"]
  node10463 -> node10464 [ color="black"]
  node10451 -> node10452 [ color="black"]
  node10469 -> node10456 [ color="black"]
  node10445 -> node10446 [ color="black"]
  node10421 -> node10422 [ color="black"]
  node10471 -> node10404 [ color="black"]
  node10434 -> node10435 [ color="black"]
  node10432 -> node10433 [ color="black"]
  node10431 -> node10432 [ color="black"]
  node10436 -> node10437 [ color="black"]
  node10426 -> node10433 [ color="black"]
  node10459 -> node10460 [label=<<font color="black">true</font>> color="black"]
  node10459 -> node10462 [label=<<font color="black">false</font>> color="black"]
}
