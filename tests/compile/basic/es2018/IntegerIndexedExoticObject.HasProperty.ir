{
  app __x0__ = (IsPropertyKey P)
  assert (= __x0__ true)
  app __x1__ = (Type P)
  if (= __x1__ String) {
    app __x2__ = (CanonicalNumericIndexString P)
    let numericIndex = [! __x2__]
    if (! (= numericIndex undefined)) {
      let buffer = O.ViewedArrayBuffer
      app __x3__ = (IsDetachedBuffer buffer)
      if (= __x3__ true) throw TypeError else {}
      app __x4__ = (IsInteger numericIndex)
      if (= __x4__ false) return false else {}
      if (== numericIndex -0.0) return false else {}
      if (< numericIndex 0i) return false else {}
      if (! (< numericIndex O.ArrayLength)) return false else {}
      return true
    } else {}
  } else {}
  app __x5__ = (OrdinaryHasProperty O P)
  return [? __x5__]
}