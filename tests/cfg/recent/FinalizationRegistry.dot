digraph {
  node18459 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node18458 [shape=cds, label=<<font color="black">1:app __x0__ = (IsCallable cleanupCallback)</font>> color="black" fillcolor="white" style=filled]
  node18462 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let finalizationRegistry = [? __x1__]</td></tr>
      <tr><td align="left">3:let fn = GLOBAL_context.Function</td></tr>
      <tr><td align="left">4:finalizationRegistry.Realm = fn.Realm</td></tr>
      <tr><td align="left">5:finalizationRegistry.CleanupCallback = cleanupCallback</td></tr>
      <tr><td align="left">6:finalizationRegistry.Cells = (new [])</td></tr>
      <tr><td align="left">7:return finalizationRegistry</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18455 [shape=cds, label=<<font color="black">app cleanupCallback = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18461 [shape=cds, label=<<font color="black">2:app __x1__ = (OrdinaryCreateFromConstructor NewTarget &quot;%FinalizationRegistry.prototype%&quot; (new [&quot;Realm&quot;, &quot;CleanupCallback&quot;, &quot;Cells&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18457 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18456 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node18460 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18454 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18453 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18462 -> node18454 [ color="black"]
  node18455 -> node18456 [ color="black"]
  node18460 -> node18461 [ color="black"]
  node18453 -> node18455 [ color="black"]
  node18461 -> node18462 [ color="black"]
  node18456 -> node18457 [label=<<font color="black">true</font>> color="black"]
  node18456 -> node18458 [label=<<font color="black">false</font>> color="black"]
  node18458 -> node18459 [ color="black"]
  node18459 -> node18460 [label=<<font color="black">true</font>> color="black"]
  node18459 -> node18461 [label=<<font color="black">false</font>> color="black"]
  node18457 -> node18458 [ color="black"]
}
