digraph {
  node16376 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let selfResolutionError = ??? &quot;TypeError&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16387 [shape=cds, label=<<font color="black">12:app __x6__ = (RejectPromise promise then.Value)</font>> color="black" fillcolor="white" style=filled]
  node16379 [shape=cds, label=<<font color="black">8:app __x2__ = (Type resolution)</font>> color="black" fillcolor="white" style=filled]
  node16386 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node16371 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node16385 [shape=cds, label=<<font color="black">11:app __x5__ = (IsAbruptCompletion then)</font>> color="black" fillcolor="white" style=filled]
  node16370 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promise = F.Promise</td></tr>
      <tr><td align="left">2:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16381 [shape=cds, label=<<font color="black">9:app __x3__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node16377 [shape=cds, label=<<font color="black">7:app __x1__ = (RejectPromise promise selfResolutionError)</font>> color="black" fillcolor="white" style=filled]
  node16389 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let thenAction = then.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16369 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16388 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16382 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16378 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16368 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16383 [shape=cds, label=<<font color="black">10:app __x4__ = (Get resolution &quot;then&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16372 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16391 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node16394 [shape=cds, label=<<font color="black">16:app __x9__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseResolveThenableJob (new [promise, resolution, thenAction]))</font>> color="black" fillcolor="white" style=filled]
  node16375 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node16380 [shape=diamond, label=<<font color="black">(! (= __x2__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16395 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:__x9__</td></tr>
      <tr><td align="left">17:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16390 [shape=cds, label=<<font color="black">14:app __x7__ = (IsCallable thenAction)</font>> color="black" fillcolor="white" style=filled]
  node16384 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let then = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16374 [shape=cds, label=<<font color="black">5:app __x0__ = (SameValue resolution promise)</font>> color="black" fillcolor="white" style=filled]
  node16393 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16392 [shape=cds, label=<<font color="black">15:app __x8__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node16386 -> node16387 [label=<<font color="black">true</font>> color="black"]
  node16386 -> node16389 [label=<<font color="black">false</font>> color="black"]
  node16394 -> node16395 [ color="black"]
  node16375 -> node16376 [label=<<font color="black">true</font>> color="black"]
  node16375 -> node16379 [label=<<font color="black">false</font>> color="black"]
  node16377 -> node16378 [ color="black"]
  node16387 -> node16388 [ color="black"]
  node16388 -> node16389 [ color="black"]
  node16380 -> node16381 [label=<<font color="black">true</font>> color="black"]
  node16380 -> node16383 [label=<<font color="black">false</font>> color="black"]
  node16392 -> node16393 [ color="black"]
  node16372 -> node16373 [ color="black"]
  node16381 -> node16382 [ color="black"]
  node16390 -> node16391 [ color="black"]
  node16378 -> node16379 [ color="black"]
  node16379 -> node16380 [ color="black"]
  node16368 -> node16370 [ color="black"]
  node16376 -> node16377 [ color="black"]
  node16391 -> node16392 [label=<<font color="black">true</font>> color="black"]
  node16391 -> node16394 [label=<<font color="black">false</font>> color="black"]
  node16384 -> node16385 [ color="black"]
  node16385 -> node16386 [ color="black"]
  node16373 -> node16374 [ color="black"]
  node16393 -> node16394 [ color="black"]
  node16370 -> node16371 [ color="black"]
  node16371 -> node16372 [label=<<font color="black">true</font>> color="black"]
  node16371 -> node16373 [label=<<font color="black">false</font>> color="black"]
  node16389 -> node16390 [ color="black"]
  node16383 -> node16384 [ color="black"]
  node16395 -> node16369 [ color="black"]
  node16382 -> node16383 [ color="black"]
  node16374 -> node16375 [ color="black"]
}
