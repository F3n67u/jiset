{
  [0] if (! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))) {
    [1] access __x0__ = (DestructuringAssignmentTarget "Evaluation")
    [1] let lref = __x0__
    [2] if (is-completion lref) if (= lref.Type CONST_normal) lref = lref.Value else return lref else [8] {}
    [2] lref
  } else [8] {}
  [3] app __x1__ = (GetV value propertyName)
  [3] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [8] {}
  [3] let v = __x1__
  [7] if (&& (! (= Initializer absent)) (= v undefined)) {
    [5] access __x2__ = (Initializer "Evaluation")
    [5] let defaultValue = __x2__
    [6] app __x3__ = (GetValue defaultValue)
    [6] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [8] {}
    [6] let rhsValue = __x3__
  } else let rhsValue = v
  [8] if (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)) {
    [9] ??? "Let id:{assignmentPattern} be the parse of the source text corresponding to nt:{DestructuringAssignmentTarget} using nt:{AssignmentPattern} as the goal symbol with its sub:{[ Yield ] } and sub:{[ Await ] } parameters set to the values used when parsing this nt:{DestructuringAssignmentTarget} ."
    [10] access __x4__ = (assignmentPattern "DestructuringAssignmentEvaluation")
    [10] app __x5__ = (__x4__ rhsValue)
    [10] app __x6__ = (WrapCompletion __x5__)
    [10] return __x6__
  } else [8] {}
  [11] let __x7__ = (! (= Initializer absent))
  [11] if __x7__ {
    let __x8__ = (= v undefined)
    if __x8__ {
      app __x9__ = (IsAnonymousFunctionDefinition Initializer)
      access __x10__ = (DestructuringAssignmentTarget "IsIdentifierRef")
      __x8__ = (&& (= __x9__ true) (= __x10__ true))
    } else [8] {}
    __x7__ = __x8__
  } else [8] {}
  [11] if __x7__ {
    [12] app __x11__ = (HasOwnProperty rhsValue "name")
    [12] if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else [8] {}
    [12] let hasNameProperty = __x11__
    [13] if (= hasNameProperty false) {
      app __x12__ = (GetReferencedName lref)
      app __x13__ = (SetFunctionName rhsValue __x12__)
      __x13__
    } else [8] {}
  } else [8] {}
  [14] app __x14__ = (PutValue lref rhsValue)
  [14] if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else [8] {}
  [14] app __x15__ = (WrapCompletion __x14__)
  [14] return __x15__
}