digraph {
  node14358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ String)</td></tr>
      <tr><td align="left">1:let r = R.length</td></tr>
      <tr><td align="left">2:let s = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14361 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;If there exists an integer id:{i} between 0 ( inclusive ) and id:{r} ( exclusive ) such that the code unit at index id:{q} + id:{i} within id:{S} is different from the code unit at index id:{i} within id:{R} , return const:{not-matched} .&quot;</td></tr>
      <tr><td align="left">5:return (+ q r)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14357 [shape=cds, label=<<font color="black">0:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node14360 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return CONST_notDASHmatched</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14356 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14359 [shape=diamond, label=<<font color="black">(&lt; s (+ q r))</font>> color="black" fillcolor="white" style=filled]
  node14355 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14358 -> node14359 [ color="black"]
  node14361 -> node14356 [ color="black"]
  node14355 -> node14357 [ color="black"]
  node14360 -> node14361 [ color="black"]
  node14357 -> node14358 [ color="black"]
  node14359 -> node14360 [label=<<font color="black">true</font>> color="black"]
  node14359 -> node14361 [label=<<font color="black">false</font>> color="black"]
}
