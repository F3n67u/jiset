def [BUILTIN] Math.round(x) = 0:{
  0:app __x0__ = (ToNumber x)
  0:let n = [? __x0__]
  1:??? "If id:{n} is value:{NaN} , value:{+∞} , value:{-∞} , or an integral Number , return id:{n} ."
  2:if (&& (< x 0.5) (< 0i x)) 2:return 0i else 2:{}
  3:if (&& (< x 0i) (! (< x (- 0.5)))) 3:return -0.0 else 3:{}
  4:??? "Return the integral Number closest to id:{n} , preferring the Number closer to + ∞ in the case of a tie ."
}
- id: "sec-math.round"
- code:
          1. Let _n_ be ? ToNumber(_x_).
          1. If _n_ is *NaN*, *+∞*<sub>𝔽</sub>, *-∞*<sub>𝔽</sub>, or an integral Number, return _n_.
          1. If _x_ < 0.5 and _x_ > 0, return *+0*.
          1. If _x_ < 0 and _x_ ≥ -0.5, return *-0*.
          1. Return the integral Number closest to _n_, preferring the Number closer to +∞ in the case of a tie.