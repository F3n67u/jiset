{
  [0] if (is-completion V) if (= V.Type CONST_normal) V = V.Value else return V else [8] {}
  [0] V
  [1] ??? "If id:{V} is not a Reference Record , return id:{V} ."
  [2] app __x0__ = (IsUnresolvableReference V)
  [2] if (= __x0__ true) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_ReferenceError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [8] {}
  [6] app __x2__ = (IsPropertyReference V)
  [6] if (= __x2__ true) {
    [4] app __x3__ = (ToObject V.Base)
    [4] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [8] {}
    [4] let baseObj = __x3__
    [5] app __x4__ = (GetThisValue V)
    [5] app __x5__ = (baseObj.Get baseObj V.ReferencedName __x4__)
    [5] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [8] {}
    [5] app __x6__ = (WrapCompletion __x5__)
    [5] return __x6__
  } else {
    [7] let base = V.Base
    [9] app __x7__ = (base.GetBindingValue base V.ReferencedName V.Strict)
    [9] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [8] {}
    [9] app __x8__ = (WrapCompletion __x7__)
    [9] return __x8__
  }
}