digraph {
  node17307 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node17310 [shape=diamond, label=<<font color="black">(= [! __x2__] true)</font>> color="black" fillcolor="white" style=filled]
  node17317 [shape=cds, label=<<font color="black">7:app __x6__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17322 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17318 [shape=diamond, label=<<font color="black">(= __x6__ true)</font>> color="black" fillcolor="white" style=filled]
  node17321 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node17315 [shape=cds, label=<<font color="black">5:app __x5__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17305 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot view &quot;DataView&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17312 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let numberValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17313 [shape=cds, label=<<font color="black">app __x4__ = (ToNumber value)</font>> color="black" fillcolor="white" style=filled]
  node17323 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17303 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17325 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17314 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let numberValue = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17306 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">1:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17309 [shape=cds, label=<<font color="black">4:app __x2__ = (IsBigIntElementType type)</font>> color="black" fillcolor="white" style=filled]
  node17324 [shape=cds, label=<<font color="black">13:app __x7__ = (SetValueInBuffer buffer bufferIndex type numberValue false CONST_Unordered isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17319 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17304 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17320 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">9:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17308 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17316 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:isLittleEndian = [! __x5__]</td></tr>
      <tr><td align="left">6:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17311 [shape=cds, label=<<font color="black">app __x3__ = (ToBigInt value)</font>> color="black" fillcolor="white" style=filled]
  node17313 -> node17314 [ color="black"]
  node17305 -> node17306 [ color="black"]
  node17303 -> node17305 [ color="black"]
  node17317 -> node17318 [ color="black"]
  node17319 -> node17320 [ color="black"]
  node17309 -> node17310 [ color="black"]
  node17325 -> node17304 [ color="black"]
  node17312 -> node17315 [ color="black"]
  node17324 -> node17325 [ color="black"]
  node17306 -> node17307 [ color="black"]
  node17307 -> node17308 [ color="black"]
  node17321 -> node17322 [label=<<font color="black">true</font>> color="black"]
  node17321 -> node17323 [label=<<font color="black">false</font>> color="black"]
  node17310 -> node17311 [label=<<font color="black">true</font>> color="black"]
  node17310 -> node17313 [label=<<font color="black">false</font>> color="black"]
  node17322 -> node17323 [ color="black"]
  node17318 -> node17319 [label=<<font color="black">true</font>> color="black"]
  node17318 -> node17320 [label=<<font color="black">false</font>> color="black"]
  node17314 -> node17315 [ color="black"]
  node17320 -> node17321 [ color="black"]
  node17323 -> node17324 [ color="black"]
  node17311 -> node17312 [ color="black"]
  node17315 -> node17316 [ color="black"]
  node17316 -> node17317 [ color="black"]
  node17308 -> node17309 [ color="black"]
}
