{
  let rx = this
  app __x0__ = (Type rx)
  if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  app __x2__ = (ToString string)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let S = __x2__
  app __x3__ = (Get rx "lastIndex")
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let previousLastIndex = __x3__
  app __x4__ = (Set rx "lastIndex" 0i true)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  __x4__
  app __x5__ = (RegExpExec rx S)
  if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
  let result = __x5__
  app __x6__ = (Set rx "lastIndex" previousLastIndex true)
  if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
  __x6__
  if (= result null) {
    app __x7__ = (WrapCompletion -1i)
    return __x7__
  } else {}
  app __x8__ = (Get result "index")
  if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
  app __x9__ = (WrapCompletion __x8__)
  return __x9__
}