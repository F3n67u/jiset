{
  let rx = this
  app __x0__ = (Type rx)
  if (! (= __x0__ Object)) throw INTRINSIC_TypeError else {}
  app __x1__ = (ToString string)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let S = __x1__
  app __x2__ = (Get rx "global")
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  app __x3__ = (ToBoolean __x2__)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let global = __x3__
  if (= global false) {
    app __x4__ = (RegExpExec rx S)
    if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
    app __x5__ = (WrapCompletion __x4__)
    return __x5__
  } else {
    assert (= global true)
    app __x6__ = (Get rx "unicode")
    if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
    app __x7__ = (ToBoolean __x6__)
    if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
    let fullUnicode = __x7__
    app __x8__ = (Set rx "lastIndex" 0i true)
    if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
    __x8__
    app __x9__ = (ArrayCreate 0i)
    if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
    let A = __x9__
    let n = 0i
    while true {
      app __x10__ = (RegExpExec rx S)
      if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
      let result = __x10__
      if (= result null) {
        if (== n 0i) {
          app __x11__ = (WrapCompletion null)
          return __x11__
        } else {}
        app __x12__ = (WrapCompletion A)
        return __x12__
      } else {
        app __x13__ = (Get result "0")
        if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else {}
        app __x14__ = (ToString __x13__)
        if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else {}
        let matchStr = __x14__
        app __x15__ = (ToString n)
        if (is-completion __x15__) if (= __x15__.Type CONST_normal) __x15__ = __x15__.Value else return __x15__ else {}
        app __x16__ = (CreateDataPropertyOrThrow A __x15__ matchStr)
        if (is-completion __x16__) if (= __x16__.Type CONST_normal) __x16__ = __x16__.Value else return __x16__ else {}
        __x16__
        if (= matchStr "") {
          app __x17__ = (Get rx "lastIndex")
          if (is-completion __x17__) if (= __x17__.Type CONST_normal) __x17__ = __x17__.Value else return __x17__ else {}
          app __x18__ = (ToLength __x17__)
          if (is-completion __x18__) if (= __x18__.Type CONST_normal) __x18__ = __x18__.Value else return __x18__ else {}
          let thisIndex = __x18__
          app __x19__ = (AdvanceStringIndex S thisIndex fullUnicode)
          let nextIndex = __x19__
          app __x20__ = (Set rx "lastIndex" nextIndex true)
          if (is-completion __x20__) if (= __x20__.Type CONST_normal) __x20__ = __x20__.Value else return __x20__ else {}
          __x20__
        } else {}
        n = (+ n 1i)
      }
    }
  }
}