digraph {
  node19772 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19776 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19771 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19778 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19774 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node19773 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node19777 [shape=cds, label=<<font color="black">1:app __x1__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node19775 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node19777 -> node19778 [ color="black"]
  node19778 -> node19772 [ color="black"]
  node19774 -> node19775 [ color="black"]
  node19773 -> node19774 [ color="black"]
  node19771 -> node19773 [ color="black"]
  node19776 -> node19777 [ color="black"]
  node19775 -> node19776 [label=<<font color="black">true</font>> color="black"]
  node19775 -> node19777 [label=<<font color="black">false</font>> color="black"]
}
