{
  let result = ""
  let __x0__ = codePoints
  let __x1__ = 0i
  while (< __x1__ __x0__.length) {
    let next = __x0__[__x1__]
    app __x2__ = (ToNumber next)
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
    let nextCP = __x2__
    app __x3__ = (IsIntegralNumber nextCP)
    if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
    if (= __x3__ false) {
      app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x4__
    } else {}
    if (|| (< nextCP 0i) (< 1114111i nextCP)) {
      app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x5__
    } else {}
    app __x6__ = (UTF16EncodeCodePoint nextCP)
    if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
    result = (+ result __x6__)
    __x1__ = (+ __x1__ 1i)
  }
  app __x7__ = (WrapCompletion result)
  return __x7__
}