{
  if (= NewTarget undefined) throw INTRINSIC_TypeError else {}
  app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_MapPrototype (new ["MapData"]))
  let map = [? __x0__]
  map.MapData = (new [])
  if (= iterable absent) let iterable = undefined else {}
  if (|| (= iterable undefined) (= iterable null)) return map else {}
  app __x1__ = (Get map "set")
  let adder = [? __x1__]
  app __x2__ = (IsCallable adder)
  if (= __x2__ false) throw INTRINSIC_TypeError else {}
  app __x3__ = (GetIterator iterable)
  let iteratorRecord = [? __x3__]
  while true {
    app __x4__ = (IteratorStep iteratorRecord)
    let next = [? __x4__]
    if (= next false) return map else {}
    app __x5__ = (IteratorValue next)
    let nextItem = [? __x5__]
    app __x6__ = (Type nextItem)
    if (! (= __x6__ Object)) {
      app __x7__ = (ThrowCompletion ??? "TypeError")
      let error = __x7__
      app __x8__ = (IteratorClose iteratorRecord error)
      return [? __x8__]
    } else {}
    app __x9__ = (Get nextItem "0")
    let k = __x9__
    app __x10__ = (IsAbruptCompletion k)
    if __x10__ {
      app __x11__ = (IteratorClose iteratorRecord k)
      return [? __x11__]
    } else {}
    app __x12__ = (Get nextItem "1")
    let v = __x12__
    app __x13__ = (IsAbruptCompletion v)
    if __x13__ {
      app __x14__ = (IteratorClose iteratorRecord v)
      return [? __x14__]
    } else {}
    app __x15__ = (Call adder map (new [k.Value, v.Value]))
    let status = __x15__
    app __x16__ = (IsAbruptCompletion status)
    if __x16__ {
      app __x17__ = (IteratorClose iteratorRecord status)
      return [? __x17__]
    } else {}
  }
}