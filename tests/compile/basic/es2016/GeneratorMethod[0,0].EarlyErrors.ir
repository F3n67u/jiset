{
  access __x0__ = (GeneratorMethod "HasDirectSuper")
  if (= __x0__ true) throw INTRINSIC_SyntaxError else {
    app __x1__ = (NormalCompletion undefined)
    return __x1__
  }
  access __x2__ = (StrictFormalParameters "Contains")
  app __x3__ = (__x2__ "YieldExpression")
  if (= __x3__ true) throw INTRINSIC_SyntaxError else {
    app __x4__ = (NormalCompletion undefined)
    return __x4__
  }
  let __x5__ = true
  access __x6__ = (GeneratorBody "ContainsUseStrict")
  __x5__ = (= __x6__ true)
  if __x5__ {
    access __x7__ = (StrictFormalParameters "IsSimpleParameterList")
    __x5__ = (= __x7__ false)
  } else {}
  if __x5__ throw INTRINSIC_SyntaxError else {
    app __x8__ = (NormalCompletion undefined)
    return __x8__
  }
  access __x9__ = (StrictFormalParameters "BoundNames")
  access __x10__ = (GeneratorBody "LexicallyDeclaredNames")
  let __x11__ = __x9__
  let __x12__ = __x10__
  let __x13__ = 0i
  let __x14__ = 0i
  let __x15__ = false
  while (< __x13__ __x11__.length) {
    __x14__ = 0i
    while (< __x14__ __x12__.length) if (= __x11__[__x13__] __x12__[__x14__]) __x15__ = true else {}
  }
  if __x15__ throw INTRINSIC_SyntaxError else {
    app __x16__ = (NormalCompletion undefined)
    return __x16__
  }
}