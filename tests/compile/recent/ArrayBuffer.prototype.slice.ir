{
  app start = (GetArgument argumentsList 0i)
  app end = (GetArgument argumentsList 1i)
  [0] let O = this
  [1] app __x0__ = (RequireInternalSlot O "ArrayBufferData")
  [1] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [21] {}
  [1] __x0__
  [2] app __x1__ = (IsSharedArrayBuffer O)
  [2] if (= __x1__ true) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [21] {}
  [3] app __x3__ = (IsDetachedBuffer O)
  [3] if (= __x3__ true) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [21] {}
  [4] let len = O.ArrayBufferByteLength
  [5] app __x5__ = (ToIntegerOrInfinity start)
  [5] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [21] {}
  [5] let relativeStart = __x5__
  [6] ??? "If id:{relativeStart} is - ∞ , let id:{first} be 0 ."
  [7] ??? "Else if id:{relativeStart} < 0 , let id:{first} be max ( id:{len} + id:{relativeStart} , 0 ) ."
  [8] ??? "Else , let id:{first} be min ( id:{relativeStart} , id:{len} ) ."
  [9] if (= end undefined) let relativeEnd = len else {
    app __x6__ = (ToIntegerOrInfinity end)
    if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [21] {}
    let relativeEnd = __x6__
  }
  [10] ??? "If id:{relativeEnd} is - ∞ , let id:{final} be 0 ."
  [11] ??? "Else if id:{relativeEnd} < 0 , let id:{final} be max ( id:{len} + id:{relativeEnd} , 0 ) ."
  [12] ??? "Else , let id:{final} be min ( id:{relativeEnd} , id:{len} ) ."
  [13] app __x7__ = (max (- final first) 0i)
  [13] let newLen = __x7__
  [14] app __x8__ = (SpeciesConstructor O INTRINSIC_ArrayBuffer)
  [14] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [21] {}
  [14] let ctor = __x8__
  [15] ??? "Let id:{new} be ? Construct ( id:{ctor} , « 𝔽 ( id:{newLen} ) » ) ."
  [16] app __x9__ = (RequireInternalSlot new "ArrayBufferData")
  [16] if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else [21] {}
  [16] __x9__
  [17] app __x10__ = (IsSharedArrayBuffer new)
  [17] if (= __x10__ true) {
    app __x11__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x11__
  } else [21] {}
  [18] app __x12__ = (IsDetachedBuffer new)
  [18] if (= __x12__ true) {
    app __x13__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x13__
  } else [21] {}
  [19] app __x14__ = (SameValue new O)
  [19] if (= __x14__ true) {
    app __x15__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x15__
  } else [21] {}
  [20] if (< new.ArrayBufferByteLength newLen) {
    app __x16__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x16__
  } else [21] {}
  [22] app __x17__ = (IsDetachedBuffer O)
  [22] if (= __x17__ true) {
    app __x18__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x18__
  } else [21] {}
  [23] let fromBuf = O.ArrayBufferData
  [24] let toBuf = new.ArrayBufferData
  [25] app __x19__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)
  [25] __x19__
  [26] app __x20__ = (WrapCompletion new)
  [26] return __x20__
}