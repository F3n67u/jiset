digraph {
  node15611 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let numberOfArgs = argumentsList.length</td></tr>
      <tr><td align="left">1:assert (! (&lt; numberOfArgs 2i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15623 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[! __x3__]</td></tr>
      <tr><td align="left">11:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15618 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let array = [? __x1__]</td></tr>
      <tr><td align="left">5:let k = 0i</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{items} be a zero - origined List containing the argument items in order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15610 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15616 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let proto = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15619 [shape=diamond, label=<<font color="black">(&lt; k numberOfArgs)</font>> color="black" fillcolor="white" style=filled]
  node15624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15614 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15609 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15620 [shape=cds, label=<<font color="black">8:app __x2__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node15615 [shape=cds, label=<<font color="black">3:app __x0__ = (GetPrototypeFromConstructor newTarget &quot;%Array.prototype%&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15608 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15613 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15612 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let Pk = [! __x2__]</td></tr>
      <tr><td align="left">9:let itemK = items[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15622 [shape=cds, label=<<font color="black">10:app __x3__ = (CreateDataPropertyOrThrow array Pk itemK)</font>> color="black" fillcolor="white" style=filled]
  node15617 [shape=cds, label=<<font color="black">4:app __x1__ = (ArrayCreate numberOfArgs proto)</font>> color="black" fillcolor="white" style=filled]
  node15622 -> node15623 [ color="black"]
  node15614 -> node15615 [ color="black"]
  node15619 -> node15620 [label=<<font color="black">true</font>> color="black"]
  node15619 -> node15624 [label=<<font color="black">false</font>> color="black"]
  node15615 -> node15616 [ color="black"]
  node15624 -> node15609 [ color="black"]
  node15618 -> node15619 [ color="black"]
  node15617 -> node15618 [ color="black"]
  node15623 -> node15619 [ color="black"]
  node15616 -> node15617 [ color="black"]
  node15608 -> node15610 [ color="black"]
  node15612 -> node15613 [label=<<font color="black">true</font>> color="black"]
  node15612 -> node15614 [label=<<font color="black">false</font>> color="black"]
  node15610 -> node15611 [ color="black"]
  node15611 -> node15612 [ color="black"]
  node15620 -> node15621 [ color="black"]
  node15621 -> node15622 [ color="black"]
  node15613 -> node15615 [ color="black"]
}
