{
  app searchString = (GetArgument argumentsList 0i)
  app position = (GetArgument argumentsList 1i)
  [0] app __x0__ = (RequireObjectCoercible this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [2] {}
  [0] let O = __x0__
  [1] app __x1__ = (ToString O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [2] {}
  [1] let S = __x1__
  [2] app __x2__ = (ToString searchString)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [2] {}
  [2] let searchStr = __x2__
  [3] app __x3__ = (ToNumber position)
  [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [2] {}
  [3] let numPos = __x3__
  [4] if (= numPos NaN) let pos = Infinity else {
    app __x4__ = (ToInteger numPos)
    let pos = __x4__
  }
  [5] let len = S.length
  [6] app __x5__ = (max pos 0i)
  [6] app __x6__ = (min __x5__ len)
  [6] let start = __x6__
  [7] let searchLen = searchStr.length
  [8] ??? "Return the largest possible nonnegative integer id:{k} not larger than id:{start} such that id:{k} + id:{searchLen} is not greater than id:{len} , and for all nonnegative integers id:{j} less than id:{searchLen} , the code unit at index id:{k} + id:{j} of id:{S} is the same as the code unit at index id:{j} of id:{searchStr} ; but if there is no such integer id:{k} , return the value code:{-1} ."
}