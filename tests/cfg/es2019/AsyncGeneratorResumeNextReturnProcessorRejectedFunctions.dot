digraph {
  node17665 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17667 [shape=cds, label=<<font color="black">2:app __x0__ = (AsyncGeneratorReject F.Generator reason)</font>> color="black" fillcolor="white" style=filled]
  node17664 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17668 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let F = GLOBAL_context.Function</td></tr>
      <tr><td align="left">1:F.Generator.AsyncGeneratorState = &quot;completed&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17664 -> node17666 [ color="black"]
  node17666 -> node17667 [ color="black"]
  node17667 -> node17668 [ color="black"]
  node17668 -> node17665 [ color="black"]
}
