digraph {
  node16022 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node16023 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16025 [shape=cds, label=<<font color="black">1:app __x1__ = (target.PreventExtensions target)</font>> color="black" fillcolor="white" style=filled]
  node16020 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16021 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16026 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16019 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16024 -> node16025 [ color="black"]
  node16021 -> node16022 [ color="black"]
  node16022 -> node16023 [ color="black"]
  node16025 -> node16026 [ color="black"]
  node16026 -> node16020 [ color="black"]
  node16019 -> node16021 [ color="black"]
  node16023 -> node16024 [label=<<font color="black">true</font>> color="black"]
  node16023 -> node16025 [label=<<font color="black">false</font>> color="black"]
}
