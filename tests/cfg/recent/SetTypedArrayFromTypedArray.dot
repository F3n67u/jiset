digraph {
  node16789 [shape=cds, label=<<font color="black">app __x4__ = (SameValue srcBuffer targetBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let targetLength = target.ArrayLength</td></tr>
      <tr><td align="left">4:let srcBuffer = source.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16776 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let targetName = target.TypedArrayName</td></tr>
      <tr><td align="left">7:??? &quot;Let id:{targetType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{targetName} .&quot;</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{targetElementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{targetName} .&quot;</td></tr>
      <tr><td align="left">9:let targetByteOffset = target.ByteOffset</td></tr>
      <tr><td align="left">10:let srcName = source.TypedArrayName</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{srcType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{srcName} .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;Let id:{srcElementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{srcName} .&quot;</td></tr>
      <tr><td align="left">13:let srcLength = source.ArrayLength</td></tr>
      <tr><td align="left">14:let srcByteOffset = source.ByteOffset</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16780 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16769 [shape=cds, label=<<font color="black">2:app __x0__ = (IsDetachedBuffer targetBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16770 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node16791 [shape=diamond, label=<<font color="black">(= same true)</font>> color="black" fillcolor="white" style=filled]
  node16794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:srcBuffer = [? __x5__]</td></tr>
      <tr><td align="left">25:let srcByteIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16797 [shape=diamond, label=<<font color="black">(= srcType targetType)</font>> color="black" fillcolor="white" style=filled]
  node16777 [shape=diamond, label=<<font color="black">(= targetOffset Infinity)</font>> color="black" fillcolor="white" style=filled]
  node16804 [shape=cds, label=<<font color="black">38:app __x8__ = (GetValueFromBuffer srcBuffer srcByteIndex srcType true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node16784 [shape=cds, label=<<font color="black">20:app __x3__ = (IsSharedArrayBuffer targetBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16798 [shape=diamond, label=<<font color="black">(&lt; targetByteIndex limit)</font>> color="black" fillcolor="white" style=filled]
  node16785 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x2__ true) (= __x3__ true))</font>> color="black" fillcolor="white" style=filled]
  node16801 [shape=cds, label=<<font color="black">33:app __x7__ = (SetValueInBuffer targetBuffer targetByteIndex CONST_Uint8 value true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node16790 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let same = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16793 [shape=cds, label=<<font color="black">23:app __x5__ = (CloneArrayBuffer srcBuffer srcByteOffset srcByteLength INTRINSIC_ArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16800 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let value = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16783 [shape=cds, label=<<font color="black">20:app __x2__ = (IsSharedArrayBuffer srcBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16768 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let targetBuffer = target.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16805 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:let value = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16786 [shape=diamond, label=<<font color="black">(= srcBuffer.ArrayBufferData targetBuffer.ArrayBufferData)</font>> color="black" fillcolor="white" style=filled]
  node16773 [shape=cds, label=<<font color="black">5:app __x1__ = (IsDetachedBuffer srcBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16796 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let targetByteIndex = (+ (* targetOffset targetElementSize) targetByteOffset)</td></tr>
      <tr><td align="left">28:let limit = (* (+ targetByteIndex targetElementSize) srcLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16779 [shape=diamond, label=<<font color="black">(&lt; targetLength (+ srcLength targetOffset))</font>> color="black" fillcolor="white" style=filled]
  node16782 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16774 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node16767 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16799 [shape=cds, label=<<font color="black">32:app __x6__ = (GetValueFromBuffer srcBuffer srcByteIndex CONST_Uint8 true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node16802 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:__x7__</td></tr>
      <tr><td align="left">34:srcByteIndex = (+ srcByteIndex 1i)</td></tr>
      <tr><td align="left">35:targetByteIndex = (+ targetByteIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16806 [shape=cds, label=<<font color="black">39:app __x9__ = (SetValueInBuffer targetBuffer targetByteIndex targetType value true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node16787 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let same = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16781 [shape=diamond, label=<<font color="black">(! (== target.ContentType source.ContentType))</font>> color="black" fillcolor="white" style=filled]
  node16766 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16807 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:__x9__</td></tr>
      <tr><td align="left">40:srcByteIndex = (+ srcByteIndex srcElementSize)</td></tr>
      <tr><td align="left">41:targetByteIndex = (+ targetByteIndex targetElementSize)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16795 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let srcByteIndex = srcByteOffset</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16803 [shape=diamond, label=<<font color="black">(&lt; targetByteIndex limit)</font>> color="black" fillcolor="white" style=filled]
  node16778 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16788 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let same = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16771 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16792 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let srcByteLength = source.ByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16775 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16771 -> node16772 [ color="black"]
  node16770 -> node16771 [label=<<font color="black">true</font>> color="black"]
  node16770 -> node16772 [label=<<font color="black">false</font>> color="black"]
  node16769 -> node16770 [ color="black"]
  node16773 -> node16774 [ color="black"]
  node16794 -> node16796 [ color="black"]
  node16791 -> node16792 [label=<<font color="black">true</font>> color="black"]
  node16791 -> node16795 [label=<<font color="black">false</font>> color="black"]
  node16797 -> node16798 [label=<<font color="black">true</font>> color="black"]
  node16797 -> node16803 [label=<<font color="black">false</font>> color="black"]
  node16772 -> node16773 [ color="black"]
  node16787 -> node16791 [ color="black"]
  node16775 -> node16776 [ color="black"]
  node16768 -> node16769 [ color="black"]
  node16789 -> node16790 [ color="black"]
  node16788 -> node16791 [ color="black"]
  node16802 -> node16798 [ color="black"]
  node16790 -> node16791 [ color="black"]
  node16806 -> node16807 [ color="black"]
  node16784 -> node16785 [ color="black"]
  node16796 -> node16797 [ color="black"]
  node16800 -> node16801 [ color="black"]
  node16783 -> node16784 [ color="black"]
  node16776 -> node16777 [ color="black"]
  node16785 -> node16786 [label=<<font color="black">true</font>> color="black"]
  node16785 -> node16789 [label=<<font color="black">false</font>> color="black"]
  node16774 -> node16775 [label=<<font color="black">true</font>> color="black"]
  node16774 -> node16776 [label=<<font color="black">false</font>> color="black"]
  node16786 -> node16787 [label=<<font color="black">true</font>> color="black"]
  node16786 -> node16788 [label=<<font color="black">false</font>> color="black"]
  node16793 -> node16794 [ color="black"]
  node16777 -> node16778 [label=<<font color="black">true</font>> color="black"]
  node16777 -> node16779 [label=<<font color="black">false</font>> color="black"]
  node16807 -> node16803 [ color="black"]
  node16799 -> node16800 [ color="black"]
  node16798 -> node16799 [label=<<font color="black">true</font>> color="black"]
  node16798 -> node16767 [label=<<font color="black">false</font>> color="black"]
  node16795 -> node16796 [ color="black"]
  node16766 -> node16768 [ color="black"]
  node16781 -> node16782 [label=<<font color="black">true</font>> color="black"]
  node16781 -> node16783 [label=<<font color="black">false</font>> color="black"]
  node16804 -> node16805 [ color="black"]
  node16803 -> node16804 [label=<<font color="black">true</font>> color="black"]
  node16803 -> node16767 [label=<<font color="black">false</font>> color="black"]
  node16778 -> node16779 [ color="black"]
  node16782 -> node16783 [ color="black"]
  node16780 -> node16781 [ color="black"]
  node16801 -> node16802 [ color="black"]
  node16779 -> node16780 [label=<<font color="black">true</font>> color="black"]
  node16779 -> node16781 [label=<<font color="black">false</font>> color="black"]
  node16805 -> node16806 [ color="black"]
  node16792 -> node16793 [ color="black"]
}
