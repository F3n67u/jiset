digraph {
  node18107 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18090 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node18104 [shape=cds, label=<<font color="black">12:app __x5__ = (IsAbruptCompletion then)</font>> color="black" fillcolor="white" style=filled]
  node18111 [shape=cds, label=<<font color="black">16:app __x8__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node18097 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18100 [shape=cds, label=<<font color="black">10:app __x3__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node18095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let selfResolutionError = ??? &quot;TypeError&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18096 [shape=cds, label=<<font color="black">8:app __x1__ = (RejectPromise promise selfResolutionError)</font>> color="black" fillcolor="white" style=filled]
  node18105 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node18109 [shape=cds, label=<<font color="black">15:app __x7__ = (IsCallable thenAction)</font>> color="black" fillcolor="white" style=filled]
  node18102 [shape=cds, label=<<font color="black">11:app __x4__ = (Get resolution &quot;then&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18115 [shape=cds, label=<<font color="black">18:app __x10__ = (HostEnqueuePromiseJob job.Job job.Realm)</font>> color="black" fillcolor="white" style=filled]
  node18106 [shape=cds, label=<<font color="black">13:app __x6__ = (RejectPromise promise then.Value)</font>> color="black" fillcolor="white" style=filled]
  node18088 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18110 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node18093 [shape=cds, label=<<font color="black">6:app __x0__ = (SameValue resolution promise)</font>> color="black" fillcolor="white" style=filled]
  node18098 [shape=cds, label=<<font color="black">9:app __x2__ = (Type resolution)</font>> color="black" fillcolor="white" style=filled]
  node18101 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let job = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18094 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node18116 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x10__</td></tr>
      <tr><td align="left">19:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18113 [shape=cds, label=<<font color="black">17:app __x9__ = (NewPromiseResolveThenableJob promise resolution thenAction)</font>> color="black" fillcolor="white" style=filled]
  node18091 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18087 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let thenAction = then.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18103 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let then = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18092 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18099 [shape=diamond, label=<<font color="black">(! (= __x2__ Object))</font>> color="black" fillcolor="white" style=filled]
  node18089 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let F = GLOBAL_context.Function</td></tr>
      <tr><td align="left">2:let promise = F.Promise</td></tr>
      <tr><td align="left">3:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18099 -> node18100 [label=<<font color="black">true</font>> color="black"]
  node18099 -> node18102 [label=<<font color="black">false</font>> color="black"]
  node18114 -> node18115 [ color="black"]
  node18111 -> node18112 [ color="black"]
  node18094 -> node18095 [label=<<font color="black">true</font>> color="black"]
  node18094 -> node18098 [label=<<font color="black">false</font>> color="black"]
  node18108 -> node18109 [ color="black"]
  node18113 -> node18114 [ color="black"]
  node18104 -> node18105 [ color="black"]
  node18105 -> node18106 [label=<<font color="black">true</font>> color="black"]
  node18105 -> node18108 [label=<<font color="black">false</font>> color="black"]
  node18115 -> node18116 [ color="black"]
  node18107 -> node18108 [ color="black"]
  node18112 -> node18113 [ color="black"]
  node18092 -> node18093 [ color="black"]
  node18090 -> node18091 [label=<<font color="black">true</font>> color="black"]
  node18090 -> node18092 [label=<<font color="black">false</font>> color="black"]
  node18097 -> node18098 [ color="black"]
  node18116 -> node18088 [ color="black"]
  node18093 -> node18094 [ color="black"]
  node18106 -> node18107 [ color="black"]
  node18095 -> node18096 [ color="black"]
  node18110 -> node18111 [label=<<font color="black">true</font>> color="black"]
  node18110 -> node18113 [label=<<font color="black">false</font>> color="black"]
  node18100 -> node18101 [ color="black"]
  node18096 -> node18097 [ color="black"]
  node18087 -> node18089 [ color="black"]
  node18101 -> node18102 [ color="black"]
  node18089 -> node18090 [ color="black"]
  node18098 -> node18099 [ color="black"]
  node18109 -> node18110 [ color="black"]
  node18091 -> node18092 [ color="black"]
  node18103 -> node18104 [ color="black"]
  node18102 -> node18103 [ color="black"]
}
