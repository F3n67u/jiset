digraph {
  node18861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18834 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let rejectElement = [! __x10__]</td></tr>
      <tr><td align="left">24:rejectElement.AlreadyCalled = false</td></tr>
      <tr><td align="left">25:rejectElement.Index = index</td></tr>
      <tr><td align="left">26:rejectElement.Errors = errors</td></tr>
      <tr><td align="left">27:rejectElement.Capability = resultCapability</td></tr>
      <tr><td align="left">28:rejectElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">29:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18842 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18852 [shape=cds, label=<<font color="black">14:app __x5__ = (DefinePropertyOrThrow error &quot;errors&quot; (new PropertyDescriptor(&quot;Configurable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Writable&quot; -&gt; true, &quot;Value&quot; -&gt; [! __x4__])))</font>> color="black" fillcolor="white" style=filled]
  node18860 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node18845 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18867 [shape=cds, label=<<font color="black">30:app __x11__ = (Invoke nextPromise &quot;then&quot; (new [resultCapability.Resolve, rejectElement]))</font>> color="black" fillcolor="white" style=filled]
  node18844 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node18868 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:[? __x11__]</td></tr>
      <tr><td align="left">31:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18858 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let nextValue = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18850 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:??? &quot;Let id:{error} be a newly created code:{AggregateError} object .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18865 [shape=cds, label=<<font color="black">23:app __x10__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Errors&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18857 [shape=cds, label=<<font color="black">17:app __x7__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node18851 [shape=cds, label=<<font color="black">14:app __x4__ = (CreateArrayFromList errors)</font>> color="black" fillcolor="white" style=filled]
  node18837 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= [! __x0__] true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18846 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18856 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18838 [shape=cds, label=<<font color="black">1:app __x1__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18864 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let nextPromise = [? __x9__]</td></tr>
      <tr><td align="left">22:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.any-reject-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18853 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18841 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18836 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node18839 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= [! __x1__] true)</td></tr>
      <tr><td align="left">2:let errors = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18863 [shape=cds, label=<<font color="black">21:app __x9__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node18859 [shape=cds, label=<<font color="black">18:app __x8__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node18849 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node18848 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18854 [shape=cds, label=<<font color="black">15:app __x6__ = (ThrowCompletion error)</font>> color="black" fillcolor="white" style=filled]
  node18835 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18840 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node18862 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? nextValue]</td></tr>
      <tr><td align="left">20:append undefined -&gt; errors</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18843 [shape=cds, label=<<font color="black">7:app __x3__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node18855 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18847 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node18839 -> node18840 [ color="black"]
  node18848 -> node18849 [ color="black"]
  node18858 -> node18859 [ color="black"]
  node18837 -> node18838 [ color="black"]
  node18854 -> node18855 [ color="black"]
  node18842 -> node18843 [ color="black"]
  node18838 -> node18839 [ color="black"]
  node18855 -> node18856 [ color="black"]
  node18861 -> node18862 [ color="black"]
  node18856 -> node18857 [ color="black"]
  node18857 -> node18858 [ color="black"]
  node18852 -> node18853 [ color="black"]
  node18863 -> node18864 [ color="black"]
  node18840 -> node18841 [label=<<font color="black">true</font>> color="black"]
  node18840 -> node18835 [label=<<font color="black">false</font>> color="black"]
  node18834 -> node18836 [ color="black"]
  node18846 -> node18847 [ color="black"]
  node18866 -> node18867 [ color="black"]
  node18860 -> node18861 [label=<<font color="black">true</font>> color="black"]
  node18860 -> node18862 [label=<<font color="black">false</font>> color="black"]
  node18845 -> node18846 [ color="black"]
  node18867 -> node18868 [ color="black"]
  node18847 -> node18848 [label=<<font color="black">true</font>> color="black"]
  node18847 -> node18857 [label=<<font color="black">false</font>> color="black"]
  node18843 -> node18844 [ color="black"]
  node18853 -> node18854 [ color="black"]
  node18849 -> node18850 [label=<<font color="black">true</font>> color="black"]
  node18849 -> node18856 [label=<<font color="black">false</font>> color="black"]
  node18850 -> node18851 [ color="black"]
  node18868 -> node18840 [ color="black"]
  node18844 -> node18845 [label=<<font color="black">true</font>> color="black"]
  node18844 -> node18846 [label=<<font color="black">false</font>> color="black"]
  node18862 -> node18863 [ color="black"]
  node18865 -> node18866 [ color="black"]
  node18836 -> node18837 [ color="black"]
  node18864 -> node18865 [ color="black"]
  node18859 -> node18860 [ color="black"]
  node18841 -> node18842 [ color="black"]
  node18851 -> node18852 [ color="black"]
}
