digraph {
  node15752 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15755 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15751 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15756 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node15750 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15757 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15754 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node15749 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15755 -> node15756 [ color="black"]
  node15751 -> node15752 [ color="black"]
  node15753 -> node15754 [ color="black"]
  node15756 -> node15757 [ color="black"]
  node15749 -> node15751 [ color="black"]
  node15754 -> node15755 [ color="black"]
  node15752 -> node15753 [label=<<font color="black">true</font>> color="black"]
  node15752 -> node15754 [label=<<font color="black">false</font>> color="black"]
  node15757 -> node15750 [ color="black"]
}
