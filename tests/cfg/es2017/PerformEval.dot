digraph {
  node10670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:result = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10657 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let lexEnv = __x8__</td></tr>
      <tr><td align="left">24:let varEnv = evalRealm.GlobalEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let F = thisEnvRec.FunctionObject</td></tr>
      <tr><td align="left">5:let inFunction = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:GLOBAL_context = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10668 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type CONST_normal) (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node10640 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let inFunction = false</td></tr>
      <tr><td align="left">10:let inMethod = false</td></tr>
      <tr><td align="left">11:let inDerivedConstructor = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:let result = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10660 [shape=diamond, label=<<font color="black">(= ctx null)</font>> color="black" fillcolor="white" style=filled]
  node10636 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let inMethod = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10637 [shape=diamond, label=<<font color="black">(= F.ConstructorKind &quot;derived&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10631 [shape=cds, label=<<font color="black">2:app __x1__ = (GetThisEnvironment )</font>> color="black" fillcolor="white" style=filled]
  node10649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strictEval = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10642 [shape=cds, label=<<font color="black">13:access __x3__ = (script &quot;Contains&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let body = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10638 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let inDerivedConstructor = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10658 [shape=diamond, label=<<font color="black">(= strictEval true)</font>> color="black" fillcolor="white" style=filled]
  node10673 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">(pop GLOBAL_executionStack (- GLOBAL_executionStack.length 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10662 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let evalCxt = (new ExecutionContext(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">28:evalCxt.Function = null</td></tr>
      <tr><td align="left">29:evalCxt.Realm = evalRealm</td></tr>
      <tr><td align="left">30:evalCxt.ScriptOrModule = ctx.ScriptOrModule</td></tr>
      <tr><td align="left">31:evalCxt.VariableEnvironment = varEnv</td></tr>
      <tr><td align="left">32:evalCxt.LexicalEnvironment = lexEnv</td></tr>
      <tr><td align="left">33:append evalCxt -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">33:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10633 [shape=diamond, label=<<font color="black">(= (typeof thisEnvRec) &quot;FunctionEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10630 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return x</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let lexEnv = __x7__</td></tr>
      <tr><td align="left">21:let varEnv = ctx.VariableEnvironment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10650 [shape=cds, label=<<font color="black">access __x6__ = (script &quot;IsStrict&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10665 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node10641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:??? &quot;Let id:{script} be the ECMAScript code that is the result of parsing id:{x} , interpreted as UTF - 16 encoded Unicode text as described in link:{unhandled: sec-ecmascript-language-types-string-type} , for the goal symbol nt:{Script} . If id:{inFunction} is value:{false} , additional early error rules from link:{unhandled: sec-performeval-rules-outside-functions} are applied . If id:{inMethod} is value:{false} , additional early error rules from link:{unhandled: sec-performeval-rules-outside-methods} are applied . If id:{inDerivedConstructor} is value:{false} , additional early error rules from link:{unhandled: sec-performeval-rules-outside-constructors} are applied . If the parse fails , throw a value:{SyntaxError} exception . If any early errors are detected , throw a value:{SyntaxError} or a value:{ReferenceError} exception , depending on the type of the error ( but see also clause link:{unhandled: sec-error-handling-and-language-extensions} ) . Parsing and early error detection may be interweaved in an implementation - dependent manner .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10626 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let ctx = GLOBAL_context</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let inDerivedConstructor = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10644 [shape=diamond, label=<<font color="black">(= __x4__ false)</font>> color="black" fillcolor="white" style=filled]
  node10646 [shape=cds, label=<<font color="black">14:access __x5__ = (script &quot;ScriptBody&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10661 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">GLOBAL_context = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10666 [shape=cds, label=<<font color="black">36:access __x10__ = (body &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10629 [shape=diamond, label=<<font color="black">(! (= __x0__ String))</font>> color="black" fillcolor="white" style=filled]
  node10651 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strictEval = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10656 [shape=cds, label=<<font color="black">23:app __x8__ = (NewDeclarativeEnvironment evalRealm.GlobalEnv)</font>> color="black" fillcolor="white" style=filled]
  node10635 [shape=cds, label=<<font color="black">6:app __x2__ = (thisEnvRec.HasSuperBinding thisEnvRec)</font>> color="black" fillcolor="white" style=filled]
  node10645 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10628 [shape=cds, label=<<font color="black">1:app __x0__ = (Type x)</font>> color="black" fillcolor="white" style=filled]
  node10643 [shape=cds, label=<<font color="black">13:app __x4__ = (__x3__ &quot;ScriptBody&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let thisEnvRec = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10653 [shape=diamond, label=<<font color="black">(= direct true)</font>> color="black" fillcolor="white" style=filled]
  node10672 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] evalCxt)</font>> color="black" fillcolor="white" style=filled]
  node10667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:result = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10663 [shape=cds, label=<<font color="black">34:app __x9__ = (EvalDeclarationInstantiation body varEnv lexEnv strictEval)</font>> color="black" fillcolor="white" style=filled]
  node10674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">41:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10659 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">varEnv = lexEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10648 [shape=diamond, label=<<font color="black">(= strictCaller true)</font>> color="black" fillcolor="white" style=filled]
  node10627 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10654 [shape=cds, label=<<font color="black">20:app __x7__ = (NewDeclarativeEnvironment ctx.LexicalEnvironment)</font>> color="black" fillcolor="white" style=filled]
  node10669 [shape=cds, label=<<font color="black">38:app __x11__ = (NormalCompletion undefined)</font>> color="black" fillcolor="white" style=filled]
  node10662 -> node10663 [ color="black"]
  node10671 -> node10672 [ color="black"]
  node10629 -> node10630 [label=<<font color="black">true</font>> color="black"]
  node10629 -> node10631 [label=<<font color="black">false</font>> color="black"]
  node10648 -> node10649 [label=<<font color="black">true</font>> color="black"]
  node10648 -> node10650 [label=<<font color="black">false</font>> color="black"]
  node10635 -> node10636 [ color="black"]
  node10672 -> node10673 [label=<<font color="black">true</font>> color="black"]
  node10672 -> node10674 [label=<<font color="black">false</font>> color="black"]
  node10645 -> node10646 [ color="black"]
  node10666 -> node10667 [ color="black"]
  node10631 -> node10632 [ color="black"]
  node10638 -> node10641 [ color="black"]
  node10669 -> node10670 [ color="black"]
  node10634 -> node10635 [ color="black"]
  node10658 -> node10659 [label=<<font color="black">true</font>> color="black"]
  node10658 -> node10660 [label=<<font color="black">false</font>> color="black"]
  node10661 -> node10662 [ color="black"]
  node10652 -> node10653 [ color="black"]
  node10646 -> node10647 [ color="black"]
  node10654 -> node10655 [ color="black"]
  node10641 -> node10642 [ color="black"]
  node10643 -> node10644 [ color="black"]
  node10663 -> node10664 [ color="black"]
  node10637 -> node10638 [label=<<font color="black">true</font>> color="black"]
  node10637 -> node10639 [label=<<font color="black">false</font>> color="black"]
  node10656 -> node10657 [ color="black"]
  node10664 -> node10665 [ color="black"]
  node10630 -> node10631 [ color="black"]
  node10649 -> node10652 [ color="black"]
  node10674 -> node10627 [ color="black"]
  node10653 -> node10654 [label=<<font color="black">true</font>> color="black"]
  node10653 -> node10656 [label=<<font color="black">false</font>> color="black"]
  node10633 -> node10634 [label=<<font color="black">true</font>> color="black"]
  node10633 -> node10640 [label=<<font color="black">false</font>> color="black"]
  node10632 -> node10633 [ color="black"]
  node10636 -> node10637 [ color="black"]
  node10639 -> node10641 [ color="black"]
  node10655 -> node10658 [ color="black"]
  node10647 -> node10648 [ color="black"]
  node10657 -> node10658 [ color="black"]
  node10644 -> node10645 [label=<<font color="black">true</font>> color="black"]
  node10644 -> node10646 [label=<<font color="black">false</font>> color="black"]
  node10667 -> node10668 [ color="black"]
  node10659 -> node10660 [ color="black"]
  node10651 -> node10652 [ color="black"]
  node10670 -> node10671 [ color="black"]
  node10660 -> node10661 [label=<<font color="black">true</font>> color="black"]
  node10660 -> node10662 [label=<<font color="black">false</font>> color="black"]
  node10626 -> node10628 [ color="black"]
  node10668 -> node10669 [label=<<font color="black">true</font>> color="black"]
  node10668 -> node10671 [label=<<font color="black">false</font>> color="black"]
  node10642 -> node10643 [ color="black"]
  node10650 -> node10651 [ color="black"]
  node10640 -> node10641 [ color="black"]
  node10665 -> node10666 [label=<<font color="black">true</font>> color="black"]
  node10665 -> node10668 [label=<<font color="black">false</font>> color="black"]
  node10673 -> node10674 [ color="black"]
  node10628 -> node10629 [ color="black"]
}
