digraph {
  node5782 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5787 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5783 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5786 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white" style=filled]
  node5784 [shape=cds, label=<<font color="black">0:access __x0__ = (BindingElementList &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5785 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let has = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5789 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5788 [shape=cds, label=<<font color="black">2:access __x1__ = (BindingElisionElement &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5788 -> node5789 [ color="black"]
  node5786 -> node5787 [label=<<font color="black">true</font>> color="black"]
  node5786 -> node5788 [label=<<font color="black">false</font>> color="black"]
  node5785 -> node5786 [ color="black"]
  node5784 -> node5785 [ color="black"]
  node5787 -> node5788 [ color="black"]
  node5782 -> node5784 [ color="black"]
  node5789 -> node5783 [ color="black"]
}
