digraph {
  node15214 [shape=cds, label=<<font color="black">9:app __x3__ = (AllocateArrayBuffer cloneConstructor cloneLength)</font>> color="black" fillcolor="white" style=filled]
  node15210 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15221 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:__x5__</td></tr>
      <tr><td align="left">13:return targetBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15206 [shape=cds, label=<<font color="black">2:app __x0__ = (SpeciesConstructor srcBuffer INTRINSIC_ArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node15211 [shape=cds, label=<<font color="black">app __x2__ = (IsConstructor cloneConstructor)</font>> color="black" fillcolor="white" style=filled]
  node15215 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let targetBuffer = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15205 [shape=diamond, label=<<font color="black">(= cloneConstructor absent)</font>> color="black" fillcolor="white" style=filled]
  node15212 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">assert (= __x2__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15216 [shape=cds, label=<<font color="black">10:app __x4__ = (IsDetachedBuffer srcBuffer)</font>> color="black" fillcolor="white" style=filled]
  node15220 [shape=cds, label=<<font color="black">12:app __x5__ = (CopyDataBlockBytes targetBlock 0i srcBlock srcByteOffset cloneLength)</font>> color="black" fillcolor="white" style=filled]
  node15218 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15213 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let srcLength = srcBuffer.ArrayBufferByteLength</td></tr>
      <tr><td align="left">6:assert (! (&lt; srcLength srcByteOffset))</td></tr>
      <tr><td align="left">7:let cloneLength = (- srcLength srcByteOffset)</td></tr>
      <tr><td align="left">8:let srcBlock = srcBuffer.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15219 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetBlock = targetBuffer.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15217 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node15207 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let cloneConstructor = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15208 [shape=cds, label=<<font color="black">3:app __x1__ = (IsDetachedBuffer srcBuffer)</font>> color="black" fillcolor="white" style=filled]
  node15203 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15209 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node15204 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15206 -> node15207 [ color="black"]
  node15209 -> node15210 [label=<<font color="black">true</font>> color="black"]
  node15209 -> node15213 [label=<<font color="black">false</font>> color="black"]
  node15205 -> node15206 [label=<<font color="black">true</font>> color="black"]
  node15205 -> node15211 [label=<<font color="black">false</font>> color="black"]
  node15208 -> node15209 [ color="black"]
  node15212 -> node15213 [ color="black"]
  node15210 -> node15213 [ color="black"]
  node15207 -> node15208 [ color="black"]
  node15217 -> node15218 [label=<<font color="black">true</font>> color="black"]
  node15217 -> node15219 [label=<<font color="black">false</font>> color="black"]
  node15218 -> node15219 [ color="black"]
  node15213 -> node15214 [ color="black"]
  node15216 -> node15217 [ color="black"]
  node15221 -> node15204 [ color="black"]
  node15211 -> node15212 [ color="black"]
  node15203 -> node15205 [ color="black"]
  node15215 -> node15216 [ color="black"]
  node15220 -> node15221 [ color="black"]
  node15219 -> node15220 [ color="black"]
  node15214 -> node15215 [ color="black"]
}
