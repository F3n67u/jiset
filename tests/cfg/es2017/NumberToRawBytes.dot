digraph {
  node15468 [shape=diamond, label=<<font color="black">(= type &quot;Float64&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15473 [shape=diamond, label=<<font color="black">(! (&lt; intValue 0i))</font>> color="black" fillcolor="white" style=filled]
  node15471 [shape=cds, label=<<font color="black">7:app __x0__ = (convOp value)</font>> color="black" fillcolor="white" style=filled]
  node15466 [shape=diamond, label=<<font color="black">(= type &quot;Float32&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15474 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List containing the id:{n} - byte binary encoding of id:{intValue} . If id:{isLittleEndian} is value:{false} , the bytes are ordered in big endian order . Otherwise , the bytes are ordered in little endian order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15470 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{n} be the Number value of the Element Size specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{convOp} be the abstract operation named in the Conversion Operation column in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15465 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15469 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List containing the 8 bytes that are the IEEE 754 - 2008 binary64 format encoding of id:{value} . If id:{isLittleEndian} is value:{false} , the bytes are arranged in big endian order . Otherwise , the bytes are arranged in little endian order . If id:{value} is value:{NaN} , id:{rawBytes} may be set to any implementation chosen IEEE 754 - 2008 binary64 format Not - a - Number encoding . An implementation must always choose the same encoding for each implementation distinguishable value:{NaN} value .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15476 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return rawBytes</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15467 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List containing the 4 bytes that are the result of converting id:{value} to IEEE 754 - 2008 binary32 format using &ldquo; Round to nearest , ties to even &rdquo; rounding mode . If id:{isLittleEndian} is value:{false} , the bytes are arranged in big endian order . Otherwise , the bytes are arranged in little endian order . If id:{value} is value:{NaN} , id:{rawBytes} may be set to any implementation chosen IEEE 754 - 2008 binary32 format Not - a - Number encoding . An implementation must always choose the same encoding for each implementation distinguishable value:{NaN} value .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15472 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let intValue = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15475 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List containing the id:{n} - byte binary 2 ' s complement encoding of id:{intValue} . If id:{isLittleEndian} is value:{false} , the bytes are ordered in big endian order . Otherwise , the bytes are ordered in little endian order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15464 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15468 -> node15469 [label=<<font color="black">true</font>> color="black"]
  node15468 -> node15470 [label=<<font color="black">false</font>> color="black"]
  node15473 -> node15474 [label=<<font color="black">true</font>> color="black"]
  node15473 -> node15475 [label=<<font color="black">false</font>> color="black"]
  node15472 -> node15473 [ color="black"]
  node15475 -> node15476 [ color="black"]
  node15476 -> node15465 [ color="black"]
  node15474 -> node15476 [ color="black"]
  node15467 -> node15476 [ color="black"]
  node15471 -> node15472 [ color="black"]
  node15466 -> node15467 [label=<<font color="black">true</font>> color="black"]
  node15466 -> node15468 [label=<<font color="black">false</font>> color="black"]
  node15470 -> node15471 [ color="black"]
  node15464 -> node15466 [ color="black"]
  node15469 -> node15476 [ color="black"]
}
