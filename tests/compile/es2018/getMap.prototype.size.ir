{
  [0] let M = this
  [1] app __x0__ = (Type M)
  [1] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [0] {}
  [2] if (= M.MapData absent) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [0] {}
  [3] let entries = M.MapData
  [4] let count = 0i
  [5] let __x3__ = entries
  [5] let __x4__ = 0i
  [5] while (< __x4__ __x3__.length) {
    let p = __x3__[__x4__]
    [6] if (! (= p.Key CONST_empty)) count = (+ count 1i) else [0] {}
    __x4__ = (+ __x4__ 1i)
  }
  [7] app __x5__ = (WrapCompletion count)
  [7] return __x5__
}