digraph {
  node16184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = &quot;{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16164 [shape=diamond, label=<<font color="black">(contains stack value)</font>> color="black" fillcolor="white" style=filled]
  node16179 [shape=diamond, label=<<font color="black">(! (= gap &quot;&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16176 [shape=diamond, label=<<font color="black">(! (= strP undefined))</font>> color="black" fillcolor="white" style=filled]
  node16172 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node16187 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let separator = (+ (+ &quot;,&quot; &quot;\n&quot;) indent)</td></tr>
      <tr><td align="left">26:??? &quot;Let id:{properties} be a String formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with id:{separator} . The id:{separator} String is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">27:let final = (+ (+ (+ (+ (+ (+ &quot;{&quot; &quot;\n&quot;) indent) properties) &quot;\n&quot;) stepback) &quot;}&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16183 [shape=diamond, label=<<font color="black">(= partial.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node16163 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16169 [shape=cds, label=<<font color="black">7:app __x0__ = (EnumerableOwnProperties value &quot;key&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16188 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">29:indent = stepback</td></tr>
      <tr><td align="left">30:return final</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16162 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16166 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:append value -&gt; stack</td></tr>
      <tr><td align="left">2:let stepback = indent</td></tr>
      <tr><td align="left">3:indent = (+ indent gap)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16185 [shape=diamond, label=<<font color="black">(= gap &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16180 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">member = (+ member &quot; &quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let strP = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16171 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let partial = (new [])</td></tr>
      <tr><td align="left">9:let __x1__ = K</td></tr>
      <tr><td align="left">9:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16173 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let P = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16178 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let member = __x4__</td></tr>
      <tr><td align="left">13:member = (+ member &quot;:&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16168 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let K = PropertyList</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16167 [shape=diamond, label=<<font color="black">(! (= PropertyList undefined))</font>> color="black" fillcolor="white" style=filled]
  node16174 [shape=cds, label=<<font color="black">10:app __x3__ = (SerializeJSONProperty P value)</font>> color="black" fillcolor="white" style=filled]
  node16182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16177 [shape=cds, label=<<font color="black">12:app __x4__ = (QuoteJSONString P)</font>> color="black" fillcolor="white" style=filled]
  node16170 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let K = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16181 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:member = (+ member strP)</td></tr>
      <tr><td align="left">17:append member -&gt; partial</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16186 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:??? &quot;Let id:{properties} be a String formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with code unit 0x002C ( COMMA ) . A comma is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">23:let final = (+ (+ &quot;{&quot; properties) &quot;}&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16165 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16188 -> node16163 [ color="black"]
  node16164 -> node16165 [label=<<font color="black">true</font>> color="black"]
  node16164 -> node16166 [label=<<font color="black">false</font>> color="black"]
  node16175 -> node16176 [ color="black"]
  node16167 -> node16168 [label=<<font color="black">true</font>> color="black"]
  node16167 -> node16169 [label=<<font color="black">false</font>> color="black"]
  node16169 -> node16170 [ color="black"]
  node16183 -> node16184 [label=<<font color="black">true</font>> color="black"]
  node16183 -> node16185 [label=<<font color="black">false</font>> color="black"]
  node16173 -> node16174 [ color="black"]
  node16187 -> node16188 [ color="black"]
  node16174 -> node16175 [ color="black"]
  node16185 -> node16186 [label=<<font color="black">true</font>> color="black"]
  node16185 -> node16187 [label=<<font color="black">false</font>> color="black"]
  node16176 -> node16177 [label=<<font color="black">true</font>> color="black"]
  node16176 -> node16182 [label=<<font color="black">false</font>> color="black"]
  node16165 -> node16166 [ color="black"]
  node16178 -> node16179 [ color="black"]
  node16177 -> node16178 [ color="black"]
  node16170 -> node16171 [ color="black"]
  node16168 -> node16171 [ color="black"]
  node16186 -> node16188 [ color="black"]
  node16172 -> node16173 [label=<<font color="black">true</font>> color="black"]
  node16172 -> node16183 [label=<<font color="black">false</font>> color="black"]
  node16171 -> node16172 [ color="black"]
  node16180 -> node16181 [ color="black"]
  node16179 -> node16180 [label=<<font color="black">true</font>> color="black"]
  node16179 -> node16181 [label=<<font color="black">false</font>> color="black"]
  node16182 -> node16172 [ color="black"]
  node16181 -> node16182 [ color="black"]
  node16166 -> node16167 [ color="black"]
  node16184 -> node16188 [ color="black"]
  node16162 -> node16164 [ color="black"]
}
