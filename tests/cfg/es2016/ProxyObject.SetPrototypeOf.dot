digraph {
  node2650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2660 [shape=cds, label=<<font color="black">8:app __x3__ = (Call trap handler (new [target, V]))</font>> color="black" fillcolor="white" style=filled]
  node2673 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2662 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2669 [shape=cds, label=<<font color="black">12:app __x6__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node2664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2661 [shape=cds, label=<<font color="black">8:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node2656 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2658 [shape=cds, label=<<font color="black">7:app __x2__ = (target.SetPrototypeOf target V)</font>> color="black" fillcolor="white" style=filled]
  node2648 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2659 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2671 [shape=cds, label=<<font color="black">13:app __x7__ = (SameValue V targetProto)</font>> color="black" fillcolor="white" style=filled]
  node2654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2667 [shape=diamond, label=<<font color="black">(= extensibleTarget true)</font>> color="black" fillcolor="white" style=filled]
  node2670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let targetProto = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2663 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node2653 [shape=cds, label=<<font color="black">3:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let extensibleTarget = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2649 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2657 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2665 [shape=cds, label=<<font color="black">10:app __x5__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node2652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2668 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2651 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2672 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node2655 [shape=cds, label=<<font color="black">5:app __x1__ = (GetMethod handler &quot;setPrototypeOf&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2663 -> node2664 [label=<<font color="black">true</font>> color="black"]
  node2663 -> node2665 [label=<<font color="black">false</font>> color="black"]
  node2657 -> node2658 [label=<<font color="black">true</font>> color="black"]
  node2657 -> node2660 [label=<<font color="black">false</font>> color="black"]
  node2670 -> node2671 [ color="black"]
  node2672 -> node2673 [label=<<font color="black">true</font>> color="black"]
  node2672 -> node2674 [label=<<font color="black">false</font>> color="black"]
  node2660 -> node2661 [ color="black"]
  node2656 -> node2657 [ color="black"]
  node2669 -> node2670 [ color="black"]
  node2651 -> node2652 [label=<<font color="black">true</font>> color="black"]
  node2651 -> node2653 [label=<<font color="black">false</font>> color="black"]
  node2653 -> node2654 [ color="black"]
  node2655 -> node2656 [ color="black"]
  node2674 -> node2649 [ color="black"]
  node2659 -> node2660 [ color="black"]
  node2662 -> node2663 [ color="black"]
  node2654 -> node2655 [ color="black"]
  node2673 -> node2674 [ color="black"]
  node2664 -> node2665 [ color="black"]
  node2650 -> node2651 [ color="black"]
  node2665 -> node2666 [ color="black"]
  node2667 -> node2668 [label=<<font color="black">true</font>> color="black"]
  node2667 -> node2669 [label=<<font color="black">false</font>> color="black"]
  node2671 -> node2672 [ color="black"]
  node2668 -> node2669 [ color="black"]
  node2661 -> node2662 [ color="black"]
  node2666 -> node2667 [ color="black"]
  node2652 -> node2653 [ color="black"]
  node2648 -> node2650 [ color="black"]
  node2658 -> node2659 [ color="black"]
}
