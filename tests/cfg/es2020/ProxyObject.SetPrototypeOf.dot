digraph {
  node3185 [shape=cds, label=<<font color="black">5:app __x1__ = (GetMethod handler &quot;setPrototypeOf&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3180 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3199 [shape=cds, label=<<font color="black">12:app __x6__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node3186 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3201 [shape=cds, label=<<font color="black">13:app __x7__ = (SameValue V targetProto)</font>> color="black" fillcolor="white" style=filled]
  node3187 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3192 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3178 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3193 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node3202 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node3188 [shape=cds, label=<<font color="black">7:app __x2__ = (target.SetPrototypeOf target V)</font>> color="black" fillcolor="white" style=filled]
  node3181 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3203 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3196 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let extensibleTarget = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3200 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let targetProto = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3204 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3195 [shape=cds, label=<<font color="black">10:app __x5__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node3189 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3191 [shape=cds, label=<<font color="black">8:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node3198 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3179 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3194 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3183 [shape=cds, label=<<font color="black">3:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3190 [shape=cds, label=<<font color="black">8:app __x3__ = (Call trap handler (new [target, V]))</font>> color="black" fillcolor="white" style=filled]
  node3197 [shape=diamond, label=<<font color="black">(= extensibleTarget true)</font>> color="black" fillcolor="white" style=filled]
  node3182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3195 -> node3196 [ color="black"]
  node3192 -> node3193 [ color="black"]
  node3191 -> node3192 [ color="black"]
  node3178 -> node3180 [ color="black"]
  node3185 -> node3186 [ color="black"]
  node3200 -> node3201 [ color="black"]
  node3184 -> node3185 [ color="black"]
  node3202 -> node3203 [label=<<font color="black">true</font>> color="black"]
  node3202 -> node3204 [label=<<font color="black">false</font>> color="black"]
  node3203 -> node3204 [ color="black"]
  node3198 -> node3199 [ color="black"]
  node3182 -> node3183 [ color="black"]
  node3188 -> node3189 [ color="black"]
  node3186 -> node3187 [ color="black"]
  node3194 -> node3195 [ color="black"]
  node3181 -> node3182 [label=<<font color="black">true</font>> color="black"]
  node3181 -> node3183 [label=<<font color="black">false</font>> color="black"]
  node3180 -> node3181 [ color="black"]
  node3199 -> node3200 [ color="black"]
  node3189 -> node3190 [ color="black"]
  node3193 -> node3194 [label=<<font color="black">true</font>> color="black"]
  node3193 -> node3195 [label=<<font color="black">false</font>> color="black"]
  node3204 -> node3179 [ color="black"]
  node3183 -> node3184 [ color="black"]
  node3196 -> node3197 [ color="black"]
  node3187 -> node3188 [label=<<font color="black">true</font>> color="black"]
  node3187 -> node3190 [label=<<font color="black">false</font>> color="black"]
  node3201 -> node3202 [ color="black"]
  node3190 -> node3191 [ color="black"]
  node3197 -> node3198 [label=<<font color="black">true</font>> color="black"]
  node3197 -> node3199 [label=<<font color="black">false</font>> color="black"]
}
