{
  app x = (GetArgument argumentsList 0i)
  [0] app __x0__ = (ToNumber x)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [2] {}
  [0] let n = __x0__
  [1] if (= n NaN) {
    app __x1__ = (WrapCompletion NaN)
    return __x1__
  } else [2] {}
  [2] ??? "If id:{n} is one of value:{+0} , value:{-0} , value:{+∞} , or value:{-∞} , return id:{n} ."
  [3] ??? "Let id:{n32} be the result of converting id:{n} to a value in IEEE 754 - 2019 binary32 format using roundTiesToEven mode ."
  [4] ??? "Let id:{n64} be the result of converting id:{n32} to a value in IEEE 754 - 2019 binary64 format ."
  [5] app __x2__ = (WrapCompletion n64)
  [5] return __x2__
}