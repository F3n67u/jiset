digraph {
  node9828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9822 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9825 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white" style=filled]
  node9821 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let has = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9823 [shape=cds, label=<<font color="black">0:access __x0__ = (AssignmentExpression0 &quot;HasCallInTailPosition&quot; call)</font>> color="black" fillcolor="white" style=filled]
  node9827 [shape=cds, label=<<font color="black">2:access __x1__ = (AssignmentExpression1 &quot;HasCallInTailPosition&quot; call)</font>> color="black" fillcolor="white" style=filled]
  node9823 -> node9824 [ color="black"]
  node9825 -> node9826 [label=<<font color="black">true</font>> color="black"]
  node9825 -> node9827 [label=<<font color="black">false</font>> color="black"]
  node9826 -> node9827 [ color="black"]
  node9824 -> node9825 [ color="black"]
  node9821 -> node9823 [ color="black"]
  node9828 -> node9822 [ color="black"]
  node9827 -> node9828 [ color="black"]
}
