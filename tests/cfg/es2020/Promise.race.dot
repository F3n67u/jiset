digraph {
  node18442 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18459 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x6__) (! (= __x6__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18438 [shape=cds, label=<<font color="black">2:app __x1__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node18463 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18451 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18446 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18432 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18441 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18433 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18452 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node18462 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18455 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node18461 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18444 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x2__) (! (= __x2__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18457 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18448 [shape=cds, label=<<font color="black">4:app __x3__ = (PerformPromiseRace iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node18434 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18449 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let result = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18454 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18447 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18435 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18440 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18437 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18436 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18445 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18458 [shape=cds, label=<<font color="black">app __x6__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18439 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iteratorRecord = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18456 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18443 [shape=cds, label=<<font color="black">app __x2__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18460 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18453 [shape=cds, label=<<font color="black">app __x5__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node18450 [shape=cds, label=<<font color="black">5:app __x4__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node18442 -> node18447 [ color="black"]
  node18450 -> node18451 [ color="black"]
  node18435 -> node18436 [ color="black"]
  node18457 -> node18462 [ color="black"]
  node18460 -> node18461 [ color="black"]
  node18455 -> node18456 [label=<<font color="black">true</font>> color="black"]
  node18455 -> node18462 [label=<<font color="black">false</font>> color="black"]
  node18454 -> node18455 [ color="black"]
  node18432 -> node18434 [ color="black"]
  node18461 -> node18462 [ color="black"]
  node18456 -> node18457 [label=<<font color="black">true</font>> color="black"]
  node18456 -> node18458 [label=<<font color="black">false</font>> color="black"]
  node18453 -> node18454 [ color="black"]
  node18452 -> node18453 [label=<<font color="black">true</font>> color="black"]
  node18452 -> node18455 [label=<<font color="black">false</font>> color="black"]
  node18459 -> node18460 [label=<<font color="black">true</font>> color="black"]
  node18459 -> node18461 [label=<<font color="black">false</font>> color="black"]
  node18436 -> node18437 [ color="black"]
  node18437 -> node18438 [ color="black"]
  node18448 -> node18449 [ color="black"]
  node18447 -> node18448 [ color="black"]
  node18449 -> node18450 [ color="black"]
  node18451 -> node18452 [label=<<font color="black">true</font>> color="black"]
  node18451 -> node18463 [label=<<font color="black">false</font>> color="black"]
  node18463 -> node18433 [ color="black"]
  node18434 -> node18435 [ color="black"]
  node18444 -> node18445 [label=<<font color="black">true</font>> color="black"]
  node18444 -> node18446 [label=<<font color="black">false</font>> color="black"]
  node18438 -> node18439 [ color="black"]
  node18441 -> node18442 [label=<<font color="black">true</font>> color="black"]
  node18441 -> node18443 [label=<<font color="black">false</font>> color="black"]
  node18439 -> node18440 [ color="black"]
  node18445 -> node18446 [ color="black"]
  node18443 -> node18444 [ color="black"]
  node18462 -> node18463 [ color="black"]
  node18440 -> node18441 [label=<<font color="black">true</font>> color="black"]
  node18440 -> node18447 [label=<<font color="black">false</font>> color="black"]
  node18446 -> node18447 [ color="black"]
  node18458 -> node18459 [ color="black"]
}
