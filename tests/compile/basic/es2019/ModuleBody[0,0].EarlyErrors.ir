{
  access __x0__ = (ModuleItemList "LexicallyDeclaredNames")
  app __x1__ = (IsDuplicate __x0__)
  if __x1__ throw INTRINSIC_SyntaxError else {
    app __x2__ = (NormalCompletion undefined)
    return __x2__
  }
  access __x3__ = (ModuleItemList "LexicallyDeclaredNames")
  access __x4__ = (ModuleItemList "VarDeclaredNames")
  let __x5__ = __x3__
  let __x6__ = __x4__
  let __x7__ = 0i
  let __x8__ = 0i
  let __x9__ = false
  while (< __x7__ __x5__.length) {
    __x8__ = 0i
    while (< __x8__ __x6__.length) if (= __x5__[__x7__] __x6__[__x8__]) __x9__ = true else {}
  }
  if __x9__ throw INTRINSIC_SyntaxError else {
    app __x10__ = (NormalCompletion undefined)
    return __x10__
  }
  access __x11__ = (ModuleItemList "ExportedNames")
  app __x12__ = (IsDuplicate __x11__)
  if __x12__ throw INTRINSIC_SyntaxError else {
    app __x13__ = (NormalCompletion undefined)
    return __x13__
  }
  access __x14__ = (ModuleItemList "ExportedBindings")
  access __x15__ = (ModuleItemList "VarDeclaredNames")
  access __x16__ = (ModuleItemList "LexicallyDeclaredNames")
  let __x17__ = __x14__
  let __x18__ = __x15__
  let __x19__ = __x16__
  let __x20__ = 0i
  let __x21__ = 0i
  let __x22__ = false
  while (< __x20__ __x17__.length) {
    __x21__ = 0i
    while (< __x21__ __x18__.length) if (= __x17__[__x20__] __x18__[__x21__]) __x22__ = true else {}
    __x21__ = 0i
    while (< __x21__ __x19__.length) if (= __x17__[__x20__] __x19__[__x21__]) __x22__ = true else {}
  }
  if __x22__ throw INTRINSIC_SyntaxError else {
    app __x23__ = (NormalCompletion undefined)
    return __x23__
  }
  if (contains ModuleItemList "super") throw INTRINSIC_SyntaxError else {
    app __x24__ = (NormalCompletion undefined)
    return __x24__
  }
  access __x25__ = (ModuleItemList "Contains")
  app __x26__ = (__x25__ "NewTarget")
  if __x26__ throw INTRINSIC_SyntaxError else {
    app __x27__ = (NormalCompletion undefined)
    return __x27__
  }
  access __x28__ = (ModuleItemList "ContainsDuplicateLabels")
  app __x29__ = (__x28__ (new []))
  if (= __x29__ true) throw INTRINSIC_SyntaxError else {
    app __x30__ = (NormalCompletion undefined)
    return __x30__
  }
  access __x31__ = (ModuleItemList "ContainsUndefinedBreakTarget")
  app __x32__ = (__x31__ (new []))
  if (= __x32__ true) throw INTRINSIC_SyntaxError else {
    app __x33__ = (NormalCompletion undefined)
    return __x33__
  }
  access __x34__ = (ModuleItemList "ContainsUndefinedContinueTarget")
  app __x35__ = (__x34__ (new []) (new []))
  if (= __x35__ true) throw INTRINSIC_SyntaxError else {
    app __x36__ = (NormalCompletion undefined)
    return __x36__
  }
}