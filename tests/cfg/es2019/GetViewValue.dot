digraph {
  node16559 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">8:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16555 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:isLittleEndian = __x2__</td></tr>
      <tr><td align="left">5:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16552 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node16545 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16560 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node16556 [shape=cds, label=<<font color="black">6:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16551 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16553 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16557 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node16550 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16554 [shape=cds, label=<<font color="black">4:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16558 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16544 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16562 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16561 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16548 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16564 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16547 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16563 [shape=cds, label=<<font color="black">12:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false &quot;Unordered&quot; isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16546 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node16549 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node16561 -> node16562 [ color="black"]
  node16562 -> node16563 [ color="black"]
  node16557 -> node16558 [label=<<font color="black">true</font>> color="black"]
  node16557 -> node16559 [label=<<font color="black">false</font>> color="black"]
  node16558 -> node16559 [ color="black"]
  node16553 -> node16554 [ color="black"]
  node16551 -> node16552 [ color="black"]
  node16548 -> node16549 [ color="black"]
  node16559 -> node16560 [ color="black"]
  node16560 -> node16561 [label=<<font color="black">true</font>> color="black"]
  node16560 -> node16562 [label=<<font color="black">false</font>> color="black"]
  node16563 -> node16564 [ color="black"]
  node16564 -> node16545 [ color="black"]
  node16552 -> node16553 [ color="black"]
  node16556 -> node16557 [ color="black"]
  node16546 -> node16547 [ color="black"]
  node16547 -> node16548 [label=<<font color="black">true</font>> color="black"]
  node16547 -> node16549 [label=<<font color="black">false</font>> color="black"]
  node16550 -> node16551 [ color="black"]
  node16544 -> node16546 [ color="black"]
  node16549 -> node16550 [label=<<font color="black">true</font>> color="black"]
  node16549 -> node16551 [label=<<font color="black">false</font>> color="black"]
  node16554 -> node16555 [ color="black"]
  node16555 -> node16556 [ color="black"]
}
