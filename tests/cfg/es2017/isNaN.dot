digraph {
  node10507 [shape=diamond, label=<<font color="black">(= num NaN)</font>> color="black" fillcolor="white" style=filled]
  node10506 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let num = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10502 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10503 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10505 [shape=cds, label=<<font color="black">0:app __x0__ = (ToNumber number)</font>> color="black" fillcolor="white" style=filled]
  node10508 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10504 [shape=cds, label=<<font color="black">app number = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10509 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10502 -> node10504 [ color="black"]
  node10508 -> node10503 [ color="black"]
  node10504 -> node10505 [ color="black"]
  node10505 -> node10506 [ color="black"]
  node10507 -> node10508 [label=<<font color="black">true</font>> color="black"]
  node10507 -> node10509 [label=<<font color="black">false</font>> color="black"]
  node10506 -> node10507 [ color="black"]
  node10509 -> node10503 [ color="black"]
}
