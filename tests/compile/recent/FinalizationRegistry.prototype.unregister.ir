{
  app unregisterToken = (GetArgument argumentsList 0i)
  [0] let finalizationRegistry = this
  [1] app __x0__ = (RequireInternalSlot finalizationRegistry "Cells")
  [1] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [7] {}
  [1] __x0__
  [2] app __x1__ = (Type unregisterToken)
  [2] if (! (= __x1__ Object)) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [7] {}
  [3] let removed = false
  [4] let __x3__ = finalizationRegistry.Cells
  [4] let __x4__ = 0i
  [4] while (< __x4__ __x3__.length) {
    let cell = __x3__[__x4__]
    [5] let __x5__ = (! (= cell.UnregisterToken CONST_empty))
    [5] if __x5__ {
      app __x6__ = (SameValue cell.UnregisterToken unregisterToken)
      __x5__ = (= __x6__ true)
    } else [7] {}
    [5] if __x5__ {
      [6] ??? "Remove id:{cell} from id:{finalizationRegistry} . [ [ Cells ] ] ."
      [7] removed = true
    } else [7] {}
    __x4__ = (+ __x4__ 1i)
  }
  [8] app __x7__ = (WrapCompletion removed)
  [8] return __x7__
}