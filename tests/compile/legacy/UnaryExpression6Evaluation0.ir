{
  access __x0__ = (UnaryExpression "Evaluation")
  let expr = __x0__
  app __x1__ = (GetValue expr)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  app __x2__ = (ToNumeric __x1__)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let oldValue = __x2__
  app __x3__ = (Type oldValue)
  let T = __x3__
  app __x4__ = (PRIMITIVE[T].bitwiseNOT oldValue)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  app __x5__ = (WrapCompletion __x4__)
  return __x5__
}