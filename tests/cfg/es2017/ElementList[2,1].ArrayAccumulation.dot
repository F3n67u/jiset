digraph {
  node3345 [shape=diamond, label=<<font color="black">(= Elision absent)</font>> color="black" fillcolor="white" style=filled]
  node3350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let initResult = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3349 [shape=cds, label=<<font color="black">3:access __x2__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3354 [shape=cds, label=<<font color="black">5:app __x5__ = (ToString __x4__)</font>> color="black" fillcolor="white" style=filled]
  node3343 [shape=cds, label=<<font color="black">0:access __x0__ = (ElementList &quot;ArrayAccumulation&quot; array nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node3355 [shape=cds, label=<<font color="black">5:app __x6__ = (CreateDataProperty array __x5__ initValue)</font>> color="black" fillcolor="white" style=filled]
  node3352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let initValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3348 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let padding = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3344 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let postIndex = __x0__</td></tr>
      <tr><td align="left">1:[? postIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3356 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let created = __x6__</td></tr>
      <tr><td align="left">6:assert (= created true)</td></tr>
      <tr><td align="left">7:return (+ (+ postIndex padding) 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3346 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let padding = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3351 [shape=cds, label=<<font color="black">4:app __x3__ = (GetValue initResult)</font>> color="black" fillcolor="white" style=filled]
  node3347 [shape=cds, label=<<font color="black">access __x1__ = (Elision &quot;ElisionWidth&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3341 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3342 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3353 [shape=cds, label=<<font color="black">5:app __x4__ = (ToUint32 (+ postIndex padding))</font>> color="black" fillcolor="white" style=filled]
  node3355 -> node3356 [ color="black"]
  node3353 -> node3354 [ color="black"]
  node3349 -> node3350 [ color="black"]
  node3350 -> node3351 [ color="black"]
  node3348 -> node3349 [ color="black"]
  node3351 -> node3352 [ color="black"]
  node3346 -> node3349 [ color="black"]
  node3352 -> node3353 [ color="black"]
  node3354 -> node3355 [ color="black"]
  node3347 -> node3348 [ color="black"]
  node3343 -> node3344 [ color="black"]
  node3341 -> node3343 [ color="black"]
  node3356 -> node3342 [ color="black"]
  node3345 -> node3346 [label=<<font color="black">true</font>> color="black"]
  node3345 -> node3347 [label=<<font color="black">false</font>> color="black"]
  node3344 -> node3345 [ color="black"]
}
