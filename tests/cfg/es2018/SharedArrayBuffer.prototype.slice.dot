digraph {
  node16427 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData O.ArrayBufferData)</font>> color="black" fillcolor="white" style=filled]
  node16402 [shape=diamond, label=<<font color="black">(&lt; relativeStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node16431 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let fromBuf = O.ArrayBufferData</td></tr>
      <tr><td align="left">17:let toBuf = new.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16423 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16414 [shape=cds, label=<<font color="black">app __x7__ = (min relativeEnd len)</font>> color="black" fillcolor="white" style=filled]
  node16419 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let ctor = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16410 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16400 [shape=cds, label=<<font color="black">5:app __x2__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node16415 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16404 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16408 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16429 [shape=diamond, label=<<font color="black">(&lt; new.ArrayBufferByteLength newLen)</font>> color="black" fillcolor="white" style=filled]
  node16403 [shape=cds, label=<<font color="black">app __x3__ = (max (+ len relativeStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node16412 [shape=cds, label=<<font color="black">app __x6__ = (max (+ len relativeEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node16424 [shape=cds, label=<<font color="black">13:app __x11__ = (IsSharedArrayBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node16413 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16387 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16398 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16420 [shape=cds, label=<<font color="black">11:app __x10__ = (Construct ctor (new [newLen]))</font>> color="black" fillcolor="white" style=filled]
  node16409 [shape=cds, label=<<font color="black">app __x5__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node16391 [shape=cds, label=<<font color="black">1:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node16394 [shape=diamond, label=<<font color="black">(= O.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node16433 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x12__</td></tr>
      <tr><td align="left">19:return new</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16406 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16428 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16401 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let relativeStart = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16399 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let len = O.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16386 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16432 [shape=cds, label=<<font color="black">18:app __x12__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)</font>> color="black" fillcolor="white" style=filled]
  node16405 [shape=cds, label=<<font color="black">app __x4__ = (min relativeStart len)</font>> color="black" fillcolor="white" style=filled]
  node16395 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16390 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16422 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node16425 [shape=diamond, label=<<font color="black">(= __x11__ false)</font>> color="black" fillcolor="white" style=filled]
  node16389 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16396 [shape=cds, label=<<font color="black">3:app __x1__ = (IsSharedArrayBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node16416 [shape=cds, label=<<font color="black">9:app __x8__ = (max (- final first) 0i)</font>> color="black" fillcolor="white" style=filled]
  node16411 [shape=diamond, label=<<font color="black">(&lt; relativeEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node16418 [shape=cds, label=<<font color="black">10:app __x9__ = (SpeciesConstructor O INTRINSIC_SharedArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16421 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let new = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16397 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16388 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16393 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16392 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16426 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16407 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node16430 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let newLen = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16402 -> node16403 [label=<<font color="black">true</font>> color="black"]
  node16402 -> node16405 [label=<<font color="black">false</font>> color="black"]
  node16406 -> node16407 [ color="black"]
  node16432 -> node16433 [ color="black"]
  node16423 -> node16424 [ color="black"]
  node16394 -> node16395 [label=<<font color="black">true</font>> color="black"]
  node16394 -> node16396 [label=<<font color="black">false</font>> color="black"]
  node16429 -> node16430 [label=<<font color="black">true</font>> color="black"]
  node16429 -> node16431 [label=<<font color="black">false</font>> color="black"]
  node16404 -> node16407 [ color="black"]
  node16396 -> node16397 [ color="black"]
  node16398 -> node16399 [ color="black"]
  node16424 -> node16425 [ color="black"]
  node16412 -> node16413 [ color="black"]
  node16418 -> node16419 [ color="black"]
  node16401 -> node16402 [ color="black"]
  node16419 -> node16420 [ color="black"]
  node16426 -> node16427 [ color="black"]
  node16390 -> node16391 [ color="black"]
  node16386 -> node16388 [ color="black"]
  node16403 -> node16404 [ color="black"]
  node16405 -> node16406 [ color="black"]
  node16408 -> node16411 [ color="black"]
  node16420 -> node16421 [ color="black"]
  node16428 -> node16429 [ color="black"]
  node16391 -> node16392 [ color="black"]
  node16421 -> node16422 [ color="black"]
  node16414 -> node16415 [ color="black"]
  node16388 -> node16389 [ color="black"]
  node16425 -> node16426 [label=<<font color="black">true</font>> color="black"]
  node16425 -> node16427 [label=<<font color="black">false</font>> color="black"]
  node16397 -> node16398 [label=<<font color="black">true</font>> color="black"]
  node16397 -> node16399 [label=<<font color="black">false</font>> color="black"]
  node16427 -> node16428 [label=<<font color="black">true</font>> color="black"]
  node16427 -> node16429 [label=<<font color="black">false</font>> color="black"]
  node16415 -> node16416 [ color="black"]
  node16409 -> node16410 [ color="black"]
  node16399 -> node16400 [ color="black"]
  node16431 -> node16432 [ color="black"]
  node16417 -> node16418 [ color="black"]
  node16422 -> node16423 [label=<<font color="black">true</font>> color="black"]
  node16422 -> node16424 [label=<<font color="black">false</font>> color="black"]
  node16392 -> node16393 [label=<<font color="black">true</font>> color="black"]
  node16392 -> node16394 [label=<<font color="black">false</font>> color="black"]
  node16410 -> node16411 [ color="black"]
  node16393 -> node16394 [ color="black"]
  node16430 -> node16431 [ color="black"]
  node16407 -> node16408 [label=<<font color="black">true</font>> color="black"]
  node16407 -> node16409 [label=<<font color="black">false</font>> color="black"]
  node16413 -> node16416 [ color="black"]
  node16411 -> node16412 [label=<<font color="black">true</font>> color="black"]
  node16411 -> node16414 [label=<<font color="black">false</font>> color="black"]
  node16389 -> node16390 [ color="black"]
  node16433 -> node16387 [ color="black"]
  node16400 -> node16401 [ color="black"]
  node16395 -> node16396 [ color="black"]
  node16416 -> node16417 [ color="black"]
}
