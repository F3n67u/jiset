["Let", {
  "id": "inputString"
}, "be", "?", "ToString", "(", {
  "id": "string"
}, ")", ".", {
  "k": 0
}, "Let", {
  "id": "S"
}, "be", "a", "newly", "created", "substring", "of", {
  "id": "inputString"
}, "consisting", "of", "the", "first", "code", "unit", "that", "is", "not", "a", {
  "nt": "StrWhiteSpaceChar"
}, "and", "all", "code", "units", "following", "that", "code", "unit", ".", "(", "In", "other", "words", ",", "remove", "leading", "white", "space", ".", ")", "If", {
  "id": "inputString"
}, "does", "not", "contain", "any", "such", "code", "unit", ",", "let", {
  "id": "S"
}, "be", "the", "empty", "string", ".", {
  "k": 1
}, "Let", {
  "id": "sign"
}, "be", "1", ".", {
  "k": 2
}, "If", {
  "id": "S"
}, "is", "not", "empty", "and", "the", "first", "code", "unit", "of", {
  "id": "S"
}, "is", "the", "code", "unit", "0x002D", "(", "HYPHEN", "-", "MINUS", ")", ",", "let", {
  "id": "sign"
}, "be", "-", "1", ".", {
  "k": 3
}, "If", {
  "id": "S"
}, "is", "not", "empty", "and", "the", "first", "code", "unit", "of", {
  "id": "S"
}, "is", "the", "code", "unit", "0x002B", "(", "PLUS", "SIGN", ")", "or", "the", "code", "unit", "0x002D", "(", "HYPHEN", "-", "MINUS", ")", ",", "remove", "the", "first", "code", "unit", "from", {
  "id": "S"
}, ".", {
  "k": 4
}, "Let", {
  "id": "R"
}, "be", "?", "ToInt32", "(", {
  "id": "radix"
}, ")", ".", {
  "k": 5
}, "Let", {
  "id": "stripPrefix"
}, "be", {
  "value": "true"
}, ".", {
  "k": 6
}, "If", {
  "id": "R"
}, "≠", "0", ",", "then", {
  "in": null
}, "If", {
  "id": "R"
}, "<", "2", "or", {
  "id": "R"
}, ">", "36", ",", "return", {
  "value": "NaN"
}, ".", {
  "k": 8
}, "If", {
  "id": "R"
}, "≠", "16", ",", "let", {
  "id": "stripPrefix"
}, "be", {
  "value": "false"
}, ".", {
  "k": 9
}, {
  "out": null
}, {
  "k": 7
}, "Else", {
  "id": "R"
}, "=", "0", ",", {
  "in": null
}, "Let", {
  "id": "R"
}, "be", "10", ".", {
  "k": 11
}, {
  "out": null
}, {
  "k": 10
}, "If", {
  "id": "stripPrefix"
}, "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "If", "the", "length", "of", {
  "id": "S"
}, "is", "at", "least", "2", "and", "the", "first", "two", "code", "units", "of", {
  "id": "S"
}, "are", "either", {
  "code": "\"0x\""
}, "or", {
  "code": "\"0X\""
}, ",", "remove", "the", "first", "two", "code", "units", "from", {
  "id": "S"
}, "and", "let", {
  "id": "R"
}, "be", "16", ".", {
  "k": 13
}, {
  "out": null
}, {
  "k": 12
}, "If", {
  "id": "S"
}, "contains", "a", "code", "unit", "that", "is", "not", "a", "radix", "-", {
  "id": "R"
}, "digit", ",", "let", {
  "id": "Z"
}, "be", "the", "substring", "of", {
  "id": "S"
}, "consisting", "of", "all", "code", "units", "before", "the", "first", "such", "code", "unit", ";", "otherwise", ",", "let", {
  "id": "Z"
}, "be", {
  "id": "S"
}, ".", {
  "k": 14
}, "If", {
  "id": "Z"
}, "is", "empty", ",", "return", {
  "value": "NaN"
}, ".", {
  "k": 15
}, "Let", {
  "id": "mathInt"
}, "be", "the", "mathematical", "integer", "value", "that", "is", "represented", "by", {
  "id": "Z"
}, "in", "radix", "-", {
  "id": "R"
}, "notation", ",", "using", "the", "letters", "<", "b", ">", "A", "<", "/", "b", ">", "-", "<", "b", ">", "Z", "<", "/", "b", ">", "and", "<", "b", ">", "a", "<", "/", "b", ">", "-", "<", "b", ">", "z", "<", "/", "b", ">", "for", "digits", "with", "values", "10", "through", "35", ".", "(", "However", ",", "if", {
  "id": "R"
}, "is", "10", "and", {
  "id": "Z"
}, "contains", "more", "than", "20", "significant", "digits", ",", "every", "significant", "digit", "after", "the", "20th", "may", "be", "replaced", "by", "a", "0", "digit", ",", "at", "the", "option", "of", "the", "implementation", ";", "and", "if", {
  "id": "R"
}, "is", "not", "2", ",", "4", ",", "8", ",", "10", ",", "16", ",", "or", "32", ",", "then", {
  "id": "mathInt"
}, "may", "be", "an", "implementation", "-", "dependent", "approximation", "to", "the", "mathematical", "integer", "value", "that", "is", "represented", "by", {
  "id": "Z"
}, "in", "radix", "-", {
  "id": "R"
}, "notation", ".", ")", {
  "k": 16
}, "If", {
  "id": "mathInt"
}, "=", "0", ",", "then", {
  "in": null
}, "If", {
  "id": "sign"
}, "=", "-", "1", ",", "return", {
  "value": "-0"
}, ".", {
  "k": 18
}, "Return", {
  "value": "+0"
}, ".", {
  "k": 19
}, {
  "out": null
}, {
  "k": 17
}, "Let", {
  "id": "number"
}, "be", "the", "Number", "value", "for", {
  "id": "mathInt"
}, ".", {
  "k": 20
}, "Return", {
  "id": "sign"
}, "×", {
  "id": "number"
}, ".", {
  "k": 21
}]