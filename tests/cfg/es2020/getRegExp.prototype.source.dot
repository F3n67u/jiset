digraph {
  node15146 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node15150 [shape=cds, label=<<font color="black">4:app __x1__ = (SameValue R INTRINSIC_RegExp_prototype)</font>> color="black" fillcolor="white" style=filled]
  node15156 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15151 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node15147 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15155 [shape=cds, label=<<font color="black">8:app __x2__ = (EscapeRegExpPattern src flags)</font>> color="black" fillcolor="white" style=filled]
  node15152 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;(?:)&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15148 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15144 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15143 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15153 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15149 [shape=diamond, label=<<font color="black">(= R.OriginalSource absent)</font>> color="black" fillcolor="white" style=filled]
  node15154 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (! (= R.OriginalFlags absent))</td></tr>
      <tr><td align="left">6:let src = R.OriginalSource</td></tr>
      <tr><td align="left">7:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15152 -> node15154 [ color="black"]
  node15151 -> node15152 [label=<<font color="black">true</font>> color="black"]
  node15151 -> node15153 [label=<<font color="black">false</font>> color="black"]
  node15153 -> node15154 [ color="black"]
  node15156 -> node15144 [ color="black"]
  node15155 -> node15156 [ color="black"]
  node15146 -> node15147 [ color="black"]
  node15150 -> node15151 [ color="black"]
  node15145 -> node15146 [ color="black"]
  node15143 -> node15145 [ color="black"]
  node15147 -> node15148 [label=<<font color="black">true</font>> color="black"]
  node15147 -> node15149 [label=<<font color="black">false</font>> color="black"]
  node15154 -> node15155 [ color="black"]
  node15148 -> node15149 [ color="black"]
  node15149 -> node15150 [label=<<font color="black">true</font>> color="black"]
  node15149 -> node15154 [label=<<font color="black">false</font>> color="black"]
}
