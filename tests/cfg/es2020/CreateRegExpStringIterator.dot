digraph {
  node14932 [shape=cds, label=<<font color="black">2:app __x2__ = (Type fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node14927 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14926 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14929 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ String)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14933 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x2__ Boolean)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14930 [shape=cds, label=<<font color="black">1:app __x1__ = (Type global)</font>> color="black" fillcolor="white" style=filled]
  node14934 [shape=cds, label=<<font color="black">3:app __x3__ = (OrdinaryObjectCreate INTRINSIC_RegExpStringIteratorPrototype (new [&quot;IteratingRegExp&quot;, &quot;IteratedString&quot;, &quot;Global&quot;, &quot;Unicode&quot;, &quot;Done&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node14931 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ Boolean)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14928 [shape=cds, label=<<font color="black">0:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node14935 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iterator = __x3__</td></tr>
      <tr><td align="left">4:iterator.IteratingRegExp = R</td></tr>
      <tr><td align="left">5:iterator.IteratedString = S</td></tr>
      <tr><td align="left">6:iterator.Global = global</td></tr>
      <tr><td align="left">7:iterator.Unicode = fullUnicode</td></tr>
      <tr><td align="left">8:iterator.Done = false</td></tr>
      <tr><td align="left">9:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14926 -> node14928 [ color="black"]
  node14928 -> node14929 [ color="black"]
  node14933 -> node14934 [ color="black"]
  node14929 -> node14930 [ color="black"]
  node14935 -> node14927 [ color="black"]
  node14931 -> node14932 [ color="black"]
  node14934 -> node14935 [ color="black"]
  node14932 -> node14933 [ color="black"]
  node14930 -> node14931 [ color="black"]
}
