digraph {
  node12966 [shape=cds, label=<<font color="black">32:app __x23__ = (Get result &quot;index&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12970 [shape=cds, label=<<font color="black">33:app __x26__ = (max __x25__ 0i)</font>> color="black" fillcolor="white" style=filled]
  node12990 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:let replacement = __x35__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12972 [shape=diamond, label=<<font color="black">(! (&lt; nCaptures n))</font>> color="black" fillcolor="white" style=filled]
  node12965 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let matched = [? __x22__]</td></tr>
      <tr><td align="left">31:let matchLength = matched.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12928 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let global = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12975 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:let capN = [? __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12934 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12949 [shape=cds, label=<<font color="black">22:app __x13__ = (ToLength [? __x12__])</font>> color="black" fillcolor="white" style=filled]
  node12911 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let position = __x26__</td></tr>
      <tr><td align="left">34:let n = 1i</td></tr>
      <tr><td align="left">35:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12939 [shape=diamond, label=<<font color="black">(= result null)</font>> color="black" fillcolor="white" style=filled]
  node12921 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12929 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white" style=filled]
  node12916 [shape=cds, label=<<font color="black">1:app __x0__ = (Type rx)</font>> color="black" fillcolor="white" style=filled]
  node12992 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:??? &quot;Let id:{accumulatedResult} be the String formed by concatenating the code units of the current value of id:{accumulatedResult} with the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up to id:{position} ( exclusive ) and with the code units of id:{replacement} .&quot;</td></tr>
      <tr><td align="left">53:let nextSourcePosition = (+ position matchLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12960 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let nCaptures = [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12943 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12956 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node12993 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12920 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let S = [? __x1__]</td></tr>
      <tr><td align="left">3:let lengthS = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12961 [shape=cds, label=<<font color="black">29:app __x20__ = (max (- nCaptures 1i) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12988 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:let replacement = [? __x34__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12924 [shape=cds, label=<<font color="black">6:app __x3__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12981 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let replacerArgs = (new [matched])</td></tr>
      <tr><td align="left">44:let __x30__ = captures</td></tr>
      <tr><td align="left">44:let __x31__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12935 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let results = (new [])</td></tr>
      <tr><td align="left">12:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12927 [shape=cds, label=<<font color="black">7:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node12985 [shape=cds, label=<<font color="black">46:app __x33__ = (Call replaceValue undefined replacerArgs)</font>> color="black" fillcolor="white" style=filled]
  node12930 [shape=cds, label=<<font color="black">9:app __x6__ = (Get rx &quot;unicode&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12991 [shape=diamond, label=<<font color="black">(! (&lt; position nextSourcePosition))</font>> color="black" fillcolor="white" style=filled]
  node12959 [shape=cds, label=<<font color="black">28:app __x19__ = (ToLength [? __x18__])</font>> color="black" fillcolor="white" style=filled]
  node12987 [shape=cds, label=<<font color="black">47:app __x34__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node12950 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let thisIndex = [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12945 [shape=cds, label=<<font color="black">20:app __x11__ = (ToString [? __x10__])</font>> color="black" fillcolor="white" style=filled]
  node12974 [shape=cds, label=<<font color="black">37:app __x28__ = (Get result [! __x27__])</font>> color="black" fillcolor="white" style=filled]
  node12967 [shape=cds, label=<<font color="black">32:app __x24__ = (ToInteger [? __x23__])</font>> color="black" fillcolor="white" style=filled]
  node12917 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node12942 [shape=diamond, label=<<font color="black">(= global false)</font>> color="black" fillcolor="white" style=filled]
  node12977 [shape=cds, label=<<font color="black">39:app __x29__ = (ToString capN)</font>> color="black" fillcolor="white" style=filled]
  node12955 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let accumulatedResult = &quot;&quot;</td></tr>
      <tr><td align="left">26:let nextSourcePosition = 0i</td></tr>
      <tr><td align="left">27:let __x16__ = results</td></tr>
      <tr><td align="left">27:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12994 [shape=diamond, label=<<font color="black">(! (&lt; nextSourcePosition lengthS))</font>> color="black" fillcolor="white" style=filled]
  node12946 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let matchStr = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12962 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let nCaptures = __x20__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12931 [shape=cds, label=<<font color="black">9:app __x7__ = (ToBoolean [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node12923 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node12938 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let result = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12913 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12953 [shape=cds, label=<<font color="black">24:app __x15__ = (Set rx &quot;lastIndex&quot; nextIndex true)</font>> color="black" fillcolor="white" style=filled]
  node12982 [shape=diamond, label=<<font color="black">(&lt; __x31__ __x30__.length)</font>> color="black" fillcolor="white" style=filled]
  node12951 [shape=cds, label=<<font color="black">23:app __x14__ = (AdvanceStringIndex S thisIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node12914 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12986 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:let replValue = [? __x33__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12958 [shape=cds, label=<<font color="black">28:app __x18__ = (Get result &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12964 [shape=cds, label=<<font color="black">30:app __x22__ = (ToString [? __x21__])</font>> color="black" fillcolor="white" style=filled]
  node12969 [shape=cds, label=<<font color="black">33:app __x25__ = (min position lengthS)</font>> color="black" fillcolor="white" style=filled]
  node12936 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node12979 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:append capN -&gt; captures</td></tr>
      <tr><td align="left">41:let n = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12926 [shape=cds, label=<<font color="black">7:app __x4__ = (Get rx &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12973 [shape=cds, label=<<font color="black">37:app __x27__ = (ToString n)</font>> color="black" fillcolor="white" style=filled]
  node12922 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let functionalReplace = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12941 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:append result -&gt; results</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12978 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let capN = [? __x29__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12918 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12947 [shape=diamond, label=<<font color="black">(= matchStr &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12963 [shape=cds, label=<<font color="black">30:app __x21__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12954 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:[? __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12968 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let position = [? __x24__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12937 [shape=cds, label=<<font color="black">14:app __x9__ = (RegExpExec rx S)</font>> color="black" fillcolor="white" style=filled]
  node12932 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let fullUnicode = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12995 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return accumulatedResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12983 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x32__ = __x30__[__x31__]</td></tr>
      <tr><td align="left">append __x32__ -&gt; replacerArgs</td></tr>
      <tr><td align="left">__x31__ = (+ __x31__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12980 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node12952 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let nextIndex = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12925 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let replaceValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12933 [shape=cds, label=<<font color="black">10:app __x8__ = (Set rx &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node12912 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12957 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12915 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let rx = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12976 [shape=diamond, label=<<font color="black">(! (= capN undefined))</font>> color="black" fillcolor="white" style=filled]
  node12940 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12989 [shape=cds, label=<<font color="black">49:app __x35__ = (GetSubstitution matched S position captures replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12919 [shape=cds, label=<<font color="black">2:app __x1__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node12944 [shape=cds, label=<<font color="black">20:app __x10__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12996 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">55:??? &quot;Return the String formed by concatenating the code units of id:{accumulatedResult} with the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up through the final code unit of id:{S} ( inclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12984 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:append position -&gt; replacerArgs</td></tr>
      <tr><td align="left">45:append S -&gt; replacerArgs</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12948 [shape=cds, label=<<font color="black">22:app __x12__ = (Get rx &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12952 -> node12953 [ color="black"]
  node12928 -> node12929 [ color="black"]
  node12969 -> node12970 [ color="black"]
  node12970 -> node12971 [ color="black"]
  node12996 -> node12912 [ color="black"]
  node12971 -> node12972 [ color="black"]
  node12919 -> node12920 [ color="black"]
  node12921 -> node12922 [ color="black"]
  node12975 -> node12976 [ color="black"]
  node12986 -> node12987 [ color="black"]
  node12945 -> node12946 [ color="black"]
  node12937 -> node12938 [ color="black"]
  node12981 -> node12982 [ color="black"]
  node12983 -> node12982 [ color="black"]
  node12920 -> node12921 [ color="black"]
  node12990 -> node12991 [ color="black"]
  node12914 -> node12915 [ color="black"]
  node12911 -> node12913 [ color="black"]
  node12962 -> node12963 [ color="black"]
  node12991 -> node12992 [label=<<font color="black">true</font>> color="black"]
  node12991 -> node12993 [label=<<font color="black">false</font>> color="black"]
  node12950 -> node12951 [ color="black"]
  node12982 -> node12983 [label=<<font color="black">true</font>> color="black"]
  node12982 -> node12984 [label=<<font color="black">false</font>> color="black"]
  node12929 -> node12930 [label=<<font color="black">true</font>> color="black"]
  node12929 -> node12935 [label=<<font color="black">false</font>> color="black"]
  node12933 -> node12934 [ color="black"]
  node12987 -> node12988 [ color="black"]
  node12957 -> node12958 [ color="black"]
  node12992 -> node12993 [ color="black"]
  node12995 -> node12996 [ color="black"]
  node12926 -> node12927 [ color="black"]
  node12993 -> node12956 [ color="black"]
  node12932 -> node12933 [ color="black"]
  node12964 -> node12965 [ color="black"]
  node12974 -> node12975 [ color="black"]
  node12977 -> node12978 [ color="black"]
  node12947 -> node12948 [label=<<font color="black">true</font>> color="black"]
  node12947 -> node12936 [label=<<font color="black">false</font>> color="black"]
  node12924 -> node12925 [ color="black"]
  node12979 -> node12972 [ color="black"]
  node12931 -> node12932 [ color="black"]
  node12946 -> node12947 [ color="black"]
  node12943 -> node12936 [ color="black"]
  node12985 -> node12986 [ color="black"]
  node12965 -> node12966 [ color="black"]
  node12980 -> node12981 [label=<<font color="black">true</font>> color="black"]
  node12980 -> node12989 [label=<<font color="black">false</font>> color="black"]
  node12953 -> node12954 [ color="black"]
  node12936 -> node12937 [label=<<font color="black">true</font>> color="black"]
  node12936 -> node12955 [label=<<font color="black">false</font>> color="black"]
  node12940 -> node12936 [ color="black"]
  node12930 -> node12931 [ color="black"]
  node12968 -> node12969 [ color="black"]
  node12978 -> node12979 [ color="black"]
  node12913 -> node12914 [ color="black"]
  node12966 -> node12967 [ color="black"]
  node12938 -> node12939 [ color="black"]
  node12973 -> node12974 [ color="black"]
  node12915 -> node12916 [ color="black"]
  node12949 -> node12950 [ color="black"]
  node12942 -> node12943 [label=<<font color="black">true</font>> color="black"]
  node12942 -> node12944 [label=<<font color="black">false</font>> color="black"]
  node12918 -> node12919 [ color="black"]
  node12925 -> node12926 [ color="black"]
  node12951 -> node12952 [ color="black"]
  node12916 -> node12917 [ color="black"]
  node12961 -> node12962 [ color="black"]
  node12941 -> node12942 [ color="black"]
  node12956 -> node12957 [label=<<font color="black">true</font>> color="black"]
  node12956 -> node12994 [label=<<font color="black">false</font>> color="black"]
  node12988 -> node12991 [ color="black"]
  node12960 -> node12961 [ color="black"]
  node12917 -> node12918 [label=<<font color="black">true</font>> color="black"]
  node12917 -> node12919 [label=<<font color="black">false</font>> color="black"]
  node12955 -> node12956 [ color="black"]
  node12948 -> node12949 [ color="black"]
  node12934 -> node12935 [ color="black"]
  node12922 -> node12923 [ color="black"]
  node12989 -> node12990 [ color="black"]
  node12939 -> node12940 [label=<<font color="black">true</font>> color="black"]
  node12939 -> node12941 [label=<<font color="black">false</font>> color="black"]
  node12963 -> node12964 [ color="black"]
  node12994 -> node12995 [label=<<font color="black">true</font>> color="black"]
  node12994 -> node12996 [label=<<font color="black">false</font>> color="black"]
  node12958 -> node12959 [ color="black"]
  node12959 -> node12960 [ color="black"]
  node12954 -> node12936 [ color="black"]
  node12944 -> node12945 [ color="black"]
  node12967 -> node12968 [ color="black"]
  node12935 -> node12936 [ color="black"]
  node12972 -> node12973 [label=<<font color="black">true</font>> color="black"]
  node12972 -> node12980 [label=<<font color="black">false</font>> color="black"]
  node12923 -> node12924 [label=<<font color="black">true</font>> color="black"]
  node12923 -> node12926 [label=<<font color="black">false</font>> color="black"]
  node12927 -> node12928 [ color="black"]
  node12976 -> node12977 [label=<<font color="black">true</font>> color="black"]
  node12976 -> node12979 [label=<<font color="black">false</font>> color="black"]
  node12984 -> node12985 [ color="black"]
}
