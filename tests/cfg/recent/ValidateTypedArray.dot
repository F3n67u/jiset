digraph {
  node16808 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">1:assert (! (= O.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">2:let buffer = O.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16809 [shape=cds, label=<<font color="black">3:app __x1__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16805 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return buffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16806 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16811 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16807 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot O &quot;TypedArrayName&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16810 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node16809 -> node16810 [ color="black"]
  node16811 -> node16812 [ color="black"]
  node16812 -> node16806 [ color="black"]
  node16810 -> node16811 [label=<<font color="black">true</font>> color="black"]
  node16810 -> node16812 [label=<<font color="black">false</font>> color="black"]
  node16807 -> node16808 [ color="black"]
  node16808 -> node16809 [ color="black"]
  node16805 -> node16807 [ color="black"]
}
