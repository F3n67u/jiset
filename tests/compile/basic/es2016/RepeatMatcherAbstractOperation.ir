{
  if (= max 0i) {
    app __x0__ = (c x)
    return __x0__
  } else {}
  ??? "Create an internal Continuation closure id:{d} that takes one State argument id:{y} and performs the following steps when evaluated : in:{} out:{}"
  ??? "Let id:{cap} be a fresh copy of id:{x} ' s id:{captures} List ."
  ??? "For every integer id:{k} that satisfies id:{parenIndex} < id:{k} and id:{k} â‰¤ id:{parenIndex} + id:{parenCount} , set id:{cap} [ id:{k} ] to value:{undefined} ."
  let e = x.endIndex
  let xr = (new [e, cap])
  if (! (= min 0i)) {
    app __x1__ = (m xr d)
    return __x1__
  } else {}
  if (= greedy false) {
    app __x2__ = (c x)
    let z = __x2__
    if (! (= z CONST_failure)) return z else {}
    app __x3__ = (m xr d)
    return __x3__
  } else {}
  app __x4__ = (m xr d)
  let z = __x4__
  if (! (= z CONST_failure)) return z else {}
  app __x5__ = (c x)
  return __x5__
}