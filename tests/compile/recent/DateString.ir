{
  [0] app __x0__ = (Type tv)
  [0] assert (= __x0__ Number)
  [1] assert (! (= tv NaN))
  [2] ??? "Let id:{weekday} be the Name of the entry in link:{} with the Number WeekDay ( id:{tv} ) ."
  [3] ??? "Let id:{month} be the Name of the entry in link:{} with the Number MonthFromTime ( id:{tv} ) ."
  [4] ??? "Let id:{day} be the String representation of DateFromTime ( id:{tv} ) , formatted as a two - digit decimal number , padded to the left with the code unit 0x0030 ( DIGIT ZERO ) if necessary ."
  [5] app __x1__ = (YearFromTime tv)
  [5] let yv = __x1__
  [6] if (! (< yv 0i)) let yearSign = "" else let yearSign = "-"
  [7] ??? "Let id:{year} be the String representation of abs ( ℝ ( id:{yv} ) ) , formatted as a decimal number ."
  [8] app __x2__ = (StringPad year 4i "0" CONST_start)
  [8] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [13] {}
  [8] let paddedYear = __x2__
  [9] app __x3__ = (WrapCompletion (+ (+ (+ (+ (+ (+ (+ weekday " ") month) " ") day) " ") yearSign) paddedYear))
  [9] return __x3__
}