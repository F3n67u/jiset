["Let", {
  "id": "propKey"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "PropertyName"
}, ".", {
  "k": 0
}, "ReturnIfAbrupt", "(", {
  "id": "propKey"
}, ")", ".", {
  "k": 1
}, "Let", {
  "id": "scope"
}, "be", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", ".", {
  "k": 2
}, "If", {
  "id": "functionPrototype"
}, "is", "present", ",", "then", {
  "in": null
}, "Let", {
  "id": "prototype"
}, "be", {
  "id": "functionPrototype"
}, ".", {
  "k": 4
}, {
  "out": null
}, {
  "k": 3
}, "Else", ",", {
  "in": null
}, "Let", {
  "id": "prototype"
}, "be", "%", "Function", ".", "prototype", "%", ".", {
  "k": 6
}, {
  "out": null
}, {
  "k": 5
}, "Let", {
  "id": "sourceText"
}, "be", "the", "source", "text", "matched", "by", {
  "nt": "MethodDefinition"
}, ".", {
  "k": 7
}, "Let", {
  "id": "closure"
}, "be", "OrdinaryFunctionCreate", "(", {
  "id": "prototype"
}, ",", {
  "id": "sourceText"
}, ",", {
  "nt": "UniqueFormalParameters"
}, ",", {
  "nt": "FunctionBody"
}, ",", {
  "const": "non-lexical-this"
}, ",", {
  "id": "scope"
}, ")", ".", {
  "k": 8
}, "Perform", "MakeMethod", "(", {
  "id": "closure"
}, ",", {
  "id": "object"
}, ")", ".", {
  "k": 9
}, "Return", "the", "Record", "{", "[", "[", "Key", "]", "]", ":", {
  "id": "propKey"
}, ",", "[", "[", "Closure", "]", "]", ":", {
  "id": "closure"
}, "}", ".", {
  "k": 10
}]