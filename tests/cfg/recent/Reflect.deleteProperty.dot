digraph {
  node19722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let key = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19719 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node19716 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node19723 [shape=cds, label=<<font color="black">2:app __x2__ = (target.Delete target key)</font>> color="black" fillcolor="white" style=filled]
  node19715 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19721 [shape=cds, label=<<font color="black">1:app __x1__ = (ToPropertyKey propertyKey)</font>> color="black" fillcolor="white" style=filled]
  node19717 [shape=cds, label=<<font color="black">app propertyKey = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node19714 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19718 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node19720 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19719 -> node19720 [label=<<font color="black">true</font>> color="black"]
  node19719 -> node19721 [label=<<font color="black">false</font>> color="black"]
  node19717 -> node19718 [ color="black"]
  node19716 -> node19717 [ color="black"]
  node19720 -> node19721 [ color="black"]
  node19723 -> node19724 [ color="black"]
  node19724 -> node19715 [ color="black"]
  node19714 -> node19716 [ color="black"]
  node19721 -> node19722 [ color="black"]
  node19722 -> node19723 [ color="black"]
  node19718 -> node19719 [ color="black"]
}
