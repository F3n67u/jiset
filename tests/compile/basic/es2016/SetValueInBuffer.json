["Assert", ":", "IsDetachedBuffer", "(", {
  "id": "arrayBuffer"
}, ")", "is", {
  "value": "false"
}, ".", {
  "k": 0
}, "Assert", ":", "There", "are", "sufficient", "bytes", "in", {
  "id": "arrayBuffer"
}, "starting", "at", {
  "id": "byteIndex"
}, "to", "represent", "a", "value", "of", {
  "id": "type"
}, ".", {
  "k": 1
}, "Assert", ":", {
  "id": "byteIndex"
}, "is", "an", "integer", "value", "≥", "0", ".", {
  "k": 2
}, "Assert", ":", "Type", "(", {
  "id": "value"
}, ")", "is", "Number", ".", {
  "k": 3
}, "Let", {
  "id": "block"
}, "be", {
  "id": "arrayBuffer"
}, "'", "s", "[", "[", "ArrayBufferData", "]", "]", "internal", "slot", ".", {
  "k": 4
}, "Assert", ":", {
  "id": "block"
}, "is", "not", {
  "value": "undefined"
}, ".", {
  "k": 5
}, "If", {
  "id": "isLittleEndian"
}, "is", "not", "present", ",", "set", {
  "id": "isLittleEndian"
}, "to", "either", {
  "value": "true"
}, "or", {
  "value": "false"
}, ".", "The", "choice", "is", "implementation", "dependent", "and", "should", "be", "the", "alternative", "that", "is", "most", "efficient", "for", "the", "implementation", ".", "An", "implementation", "must", "use", "the", "same", "value", "each", "time", "this", "step", "is", "executed", "and", "the", "same", "value", "must", "be", "used", "for", "the", "corresponding", "step", "in", "the", "GetValueFromBuffer", "abstract", "operation", ".", {
  "k": 6
}, "If", {
  "id": "type"
}, "is", {
  "code": "\"Float32\""
}, ",", "then", true, "Set", {
  "id": "rawBytes"
}, "to", "a", "List", "containing", "the", "4", "bytes", "that", "are", "the", "result", "of", "converting", {
  "id": "value"
}, "to", "IEEE", "754", "-", "2008", "binary32", "format", "using", "“", "Round", "to", "nearest", ",", "ties", "to", "even", "”", "rounding", "mode", ".", "If", {
  "id": "isLittleEndian"
}, "is", {
  "value": "false"
}, ",", "the", "bytes", "are", "arranged", "in", "big", "endian", "order", ".", "Otherwise", ",", "the", "bytes", "are", "arranged", "in", "little", "endian", "order", ".", "If", {
  "id": "value"
}, "is", {
  "value": "NaN"
}, ",", {
  "id": "rawValue"
}, "may", "be", "set", "to", "any", "implementation", "chosen", "IEEE", "754", "-", "2008", "binary64", "format", "Not", "-", "a", "-", "Number", "encoding", ".", "An", "implementation", "must", "always", "choose", "the", "same", "encoding", "for", "each", "implementation", "distinguishable", {
  "value": "NaN"
}, "value", ".", {
  "k": 8
}, false, {
  "k": 7
}, "Else", ",", "if", {
  "id": "type"
}, "is", {
  "code": "\"Float64\""
}, ",", "then", true, "Set", {
  "id": "rawBytes"
}, "to", "a", "List", "containing", "the", "8", "bytes", "that", "are", "the", "IEEE", "754", "-", "2008", "binary64", "format", "encoding", "of", {
  "id": "value"
}, ".", "If", {
  "id": "isLittleEndian"
}, "is", {
  "value": "false"
}, ",", "the", "bytes", "are", "arranged", "in", "big", "endian", "order", ".", "Otherwise", ",", "the", "bytes", "are", "arranged", "in", "little", "endian", "order", ".", "If", {
  "id": "value"
}, "is", {
  "value": "NaN"
}, ",", {
  "id": "rawValue"
}, "may", "be", "set", "to", "any", "implementation", "chosen", "IEEE", "754", "-", "2008", "binary32", "format", "Not", "-", "a", "-", "Number", "encoding", ".", "An", "implementation", "must", "always", "choose", "the", "same", "encoding", "for", "each", "implementation", "distinguishable", {
  "value": "NaN"
}, "value", ".", {
  "k": 10
}, false, {
  "k": 9
}, "Else", ",", true, "Let", {
  "id": "n"
}, "be", "the", "Number", "value", "of", "the", "Element", "Size", "specified", "in", {
  "link": ""
}, "for", "Element", "Type", {
  "id": "type"
}, ".", {
  "k": 12
}, "Let", {
  "id": "convOp"
}, "be", "the", "abstract", "operation", "named", "in", "the", "Conversion", "Operation", "column", "in", {
  "link": ""
}, "for", "Element", "Type", {
  "id": "type"
}, ".", {
  "k": 13
}, "Let", {
  "id": "intValue"
}, "be", {
  "id": "convOp"
}, "(", {
  "id": "value"
}, ")", ".", {
  "k": 14
}, "If", {
  "id": "intValue"
}, "≥", "0", ",", "then", true, "Let", {
  "id": "rawBytes"
}, "be", "a", "List", "containing", "the", {
  "id": "n"
}, "-", "byte", "binary", "encoding", "of", {
  "id": "intValue"
}, ".", "If", {
  "id": "isLittleEndian"
}, "is", {
  "value": "false"
}, ",", "the", "bytes", "are", "ordered", "in", "big", "endian", "order", ".", "Otherwise", ",", "the", "bytes", "are", "ordered", "in", "little", "endian", "order", ".", {
  "k": 16
}, false, {
  "k": 15
}, "Else", ",", true, "Let", {
  "id": "rawBytes"
}, "be", "a", "List", "containing", "the", {
  "id": "n"
}, "-", "byte", "binary", "2", "'", "s", "complement", "encoding", "of", {
  "id": "intValue"
}, ".", "If", {
  "id": "isLittleEndian"
}, "is", {
  "value": "false"
}, ",", "the", "bytes", "are", "ordered", "in", "big", "endian", "order", ".", "Otherwise", ",", "the", "bytes", "are", "ordered", "in", "little", "endian", "order", ".", {
  "k": 18
}, false, {
  "k": 17
}, false, {
  "k": 11
}, "Store", "the", "individual", "bytes", "of", {
  "id": "rawBytes"
}, "into", {
  "id": "block"
}, ",", "in", "order", ",", "starting", "at", {
  "id": "block"
}, "[", {
  "id": "byteIndex"
}, "]", ".", {
  "k": 19
}, "Return", "NormalCompletion", "(", {
  "value": "undefined"
}, ")", ".", {
  "k": 20
}]