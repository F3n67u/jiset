digraph {
  node5429 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5433 [shape=cds, label=<<font color="black">access __x0__ = (LabelledStatement &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5434 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5432 [shape=cds, label=<<font color="black">access LabelledStatement = (Statement &quot;LabelledStatement&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5435 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5431 [shape=diamond, label=<<font color="black">(is-instance-of Statement Statement10)</font>> color="black" fillcolor="white" style=filled]
  node5430 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5431 -> node5432 [label=<<font color="black">true</font>> color="black"]
  node5431 -> node5435 [label=<<font color="black">false</font>> color="black"]
  node5429 -> node5431 [ color="black"]
  node5435 -> node5430 [ color="black"]
  node5432 -> node5433 [ color="black"]
  node5434 -> node5435 [ color="black"]
  node5433 -> node5434 [ color="black"]
}
