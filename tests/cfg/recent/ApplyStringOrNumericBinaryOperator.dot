digraph {
  node5674 [shape=cds, label=<<font color="black">3:app __x3__ = (Type lprim)</font>> color="black" fillcolor="white" style=filled]
  node5695 [shape=cds, label=<<font color="black">34:app __x12__ = (operation lnum rnum)</font>> color="black" fillcolor="white" style=filled]
  node5670 [shape=cds, label=<<font color="black">1:app __x0__ = (ToPrimitive lval)</font>> color="black" fillcolor="white" style=filled]
  node5690 [shape=cds, label=<<font color="black">12:app __x10__ = (Type rnum)</font>> color="black" fillcolor="white" style=filled]
  node5694 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let T = __x11__</td></tr>
      <tr><td align="left">14:??? &quot;Let id:{operation} be the abstract operation associated with id:{opText} in the following table : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let rstr = [? __x6__]</td></tr>
      <tr><td align="left">6:return (+ lstr rstr)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5679 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node5684 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:lval = lprim</td></tr>
      <tr><td align="left">8:rval = rprim</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5677 [shape=cds, label=<<font color="black">app __x4__ = (Type rprim)</font>> color="black" fillcolor="white" style=filled]
  node5686 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let lnum = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5676 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node5696 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:return [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5669 [shape=diamond, label=<<font color="black">(= opText &quot;+&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5691 [shape=diamond, label=<<font color="black">(! (= __x9__ __x10__))</font>> color="black" fillcolor="white" style=filled]
  node5682 [shape=cds, label=<<font color="black">5:app __x6__ = (ToString rprim)</font>> color="black" fillcolor="white" style=filled]
  node5680 [shape=cds, label=<<font color="black">4:app __x5__ = (ToString lprim)</font>> color="black" fillcolor="white" style=filled]
  node5673 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let rprim = [? __x1__]</td></tr>
      <tr><td align="left">3:let __x2__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5687 [shape=cds, label=<<font color="black">11:app __x8__ = (ToNumeric rval)</font>> color="black" fillcolor="white" style=filled]
  node5671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lprim = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5689 [shape=cds, label=<<font color="black">12:app __x9__ = (Type lnum)</font>> color="black" fillcolor="white" style=filled]
  node5667 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5693 [shape=cds, label=<<font color="black">13:app __x11__ = (Type lnum)</font>> color="black" fillcolor="white" style=filled]
  node5688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rnum = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (= __x4__ String)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5675 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x2__ = (= __x3__ String)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5685 [shape=cds, label=<<font color="black">10:app __x7__ = (ToNumeric lval)</font>> color="black" fillcolor="white" style=filled]
  node5692 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5672 [shape=cds, label=<<font color="black">2:app __x1__ = (ToPrimitive rval)</font>> color="black" fillcolor="white" style=filled]
  node5668 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let lstr = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5674 -> node5675 [ color="black"]
  node5681 -> node5682 [ color="black"]
  node5685 -> node5686 [ color="black"]
  node5688 -> node5689 [ color="black"]
  node5670 -> node5671 [ color="black"]
  node5669 -> node5670 [label=<<font color="black">true</font>> color="black"]
  node5669 -> node5685 [label=<<font color="black">false</font>> color="black"]
  node5683 -> node5684 [ color="black"]
  node5695 -> node5696 [ color="black"]
  node5694 -> node5695 [ color="black"]
  node5691 -> node5692 [label=<<font color="black">true</font>> color="black"]
  node5691 -> node5693 [label=<<font color="black">false</font>> color="black"]
  node5676 -> node5679 [label=<<font color="black">true</font>> color="black"]
  node5676 -> node5677 [label=<<font color="black">false</font>> color="black"]
  node5679 -> node5680 [label=<<font color="black">true</font>> color="black"]
  node5679 -> node5684 [label=<<font color="black">false</font>> color="black"]
  node5693 -> node5694 [ color="black"]
  node5686 -> node5687 [ color="black"]
  node5667 -> node5669 [ color="black"]
  node5696 -> node5668 [ color="black"]
  node5684 -> node5685 [ color="black"]
  node5672 -> node5673 [ color="black"]
  node5675 -> node5676 [ color="black"]
  node5687 -> node5688 [ color="black"]
  node5690 -> node5691 [ color="black"]
  node5678 -> node5679 [ color="black"]
  node5682 -> node5683 [ color="black"]
  node5680 -> node5681 [ color="black"]
  node5692 -> node5693 [ color="black"]
  node5677 -> node5678 [ color="black"]
  node5671 -> node5672 [ color="black"]
  node5689 -> node5690 [ color="black"]
  node5673 -> node5674 [ color="black"]
}
