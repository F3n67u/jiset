digraph {
  node10577 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (= module.Status &quot;uninstantiated&quot;)</td></tr>
      <tr><td align="left">6:module.Status = &quot;instantiating&quot;</td></tr>
      <tr><td align="left">7:module.DFSIndex = index</td></tr>
      <tr><td align="left">8:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">9:index = (+ index 1i)</td></tr>
      <tr><td align="left">10:append module -&gt; stack</td></tr>
      <tr><td align="left">11:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">11:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10594 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">26:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">27:requiredModule.Status = &quot;instantiated&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10584 [shape=diamond, label=<<font color="black">(= requiredModule.Status &quot;instantiating&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10587 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10570 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10591 [shape=diamond, label=<<font color="black">(= module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node10574 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10593 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node10597 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10582 [shape=cds, label=<<font color="black">13:app __x4__ = (InnerModuleInstantiation requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node10596 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10579 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10576 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10589 [shape=cds, label=<<font color="black">19:app __x6__ = (ModuleDeclarationEnvironmentSetup module)</font>> color="black" fillcolor="white" style=filled]
  node10585 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:assert (= (typeof requiredModule) &quot;SourceTextModuleRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10590 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x6__]</td></tr>
      <tr><td align="left">21:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10583 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = [? __x4__]</td></tr>
      <tr><td align="left">14:assert (|| (|| (= requiredModule.Status &quot;instantiating&quot;) (= requiredModule.Status &quot;instantiated&quot;)) (= requiredModule.Status &quot;evaluated&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10580 [shape=cds, label=<<font color="black">12:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node10575 [shape=diamond, label=<<font color="black">(|| (|| (= module.Status &quot;instantiating&quot;) (= module.Status &quot;instantiated&quot;)) (= module.Status &quot;evaluated&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10588 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10592 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10571 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10581 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let requiredModule = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10572 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;SourceTextModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10595 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node10578 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10573 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Instantiate module)</font>> color="black" fillcolor="white" style=filled]
  node10586 [shape=cds, label=<<font color="black">18:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node10578 -> node10579 [label=<<font color="black">true</font>> color="black"]
  node10578 -> node10589 [label=<<font color="black">false</font>> color="black"]
  node10589 -> node10590 [ color="black"]
  node10583 -> node10584 [ color="black"]
  node10596 -> node10593 [ color="black"]
  node10581 -> node10582 [ color="black"]
  node10590 -> node10591 [ color="black"]
  node10595 -> node10596 [label=<<font color="black">true</font>> color="black"]
  node10595 -> node10593 [label=<<font color="black">false</font>> color="black"]
  node10587 -> node10588 [ color="black"]
  node10586 -> node10587 [ color="black"]
  node10575 -> node10576 [label=<<font color="black">true</font>> color="black"]
  node10575 -> node10577 [label=<<font color="black">false</font>> color="black"]
  node10594 -> node10595 [ color="black"]
  node10574 -> node10575 [ color="black"]
  node10580 -> node10581 [ color="black"]
  node10585 -> node10586 [ color="black"]
  node10572 -> node10573 [label=<<font color="black">true</font>> color="black"]
  node10572 -> node10575 [label=<<font color="black">false</font>> color="black"]
  node10577 -> node10578 [ color="black"]
  node10570 -> node10572 [ color="black"]
  node10584 -> node10585 [label=<<font color="black">true</font>> color="black"]
  node10584 -> node10588 [label=<<font color="black">false</font>> color="black"]
  node10597 -> node10571 [ color="black"]
  node10573 -> node10574 [ color="black"]
  node10588 -> node10578 [ color="black"]
  node10593 -> node10594 [label=<<font color="black">true</font>> color="black"]
  node10593 -> node10597 [label=<<font color="black">false</font>> color="black"]
  node10576 -> node10577 [ color="black"]
  node10592 -> node10593 [ color="black"]
  node10579 -> node10580 [ color="black"]
  node10591 -> node10592 [label=<<font color="black">true</font>> color="black"]
  node10591 -> node10597 [label=<<font color="black">false</font>> color="black"]
  node10582 -> node10583 [ color="black"]
}
