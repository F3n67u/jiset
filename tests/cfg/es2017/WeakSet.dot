digraph {
  node15267 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node15271 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15248 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15247 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15259 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node15269 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15278 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15257 [shape=cds, label=<<font color="black">6:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15263 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15254 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15250 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15264 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node15274 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15261 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15246 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15253 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node15266 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15249 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15265 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15270 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15275 [shape=cds, label=<<font color="black">15:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node15276 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node15252 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15255 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node15260 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15277 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node15262 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15251 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakSetPrototype (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15272 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15273 [shape=cds, label=<<font color="black">14:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node15266 -> node15267 [label=<<font color="black">true</font>> color="black"]
  node15266 -> node15247 [label=<<font color="black">false</font>> color="black"]
  node15254 -> node15255 [ color="black"]
  node15274 -> node15275 [ color="black"]
  node15257 -> node15258 [ color="black"]
  node15272 -> node15273 [ color="black"]
  node15267 -> node15268 [ color="black"]
  node15262 -> node15263 [ color="black"]
  node15253 -> node15254 [label=<<font color="black">true</font>> color="black"]
  node15253 -> node15255 [label=<<font color="black">false</font>> color="black"]
  node15258 -> node15259 [ color="black"]
  node15265 -> node15266 [ color="black"]
  node15255 -> node15256 [label=<<font color="black">true</font>> color="black"]
  node15255 -> node15257 [label=<<font color="black">false</font>> color="black"]
  node15263 -> node15264 [ color="black"]
  node15276 -> node15277 [label=<<font color="black">true</font>> color="black"]
  node15276 -> node15266 [label=<<font color="black">false</font>> color="black"]
  node15251 -> node15252 [ color="black"]
  node15275 -> node15276 [ color="black"]
  node15273 -> node15274 [ color="black"]
  node15260 -> node15261 [label=<<font color="black">true</font>> color="black"]
  node15260 -> node15262 [label=<<font color="black">false</font>> color="black"]
  node15268 -> node15269 [ color="black"]
  node15256 -> node15264 [ color="black"]
  node15252 -> node15253 [ color="black"]
  node15278 -> node15266 [ color="black"]
  node15246 -> node15248 [ color="black"]
  node15249 -> node15250 [label=<<font color="black">true</font>> color="black"]
  node15249 -> node15251 [label=<<font color="black">false</font>> color="black"]
  node15269 -> node15270 [label=<<font color="black">true</font>> color="black"]
  node15269 -> node15271 [label=<<font color="black">false</font>> color="black"]
  node15259 -> node15260 [ color="black"]
  node15271 -> node15272 [ color="black"]
  node15250 -> node15251 [ color="black"]
  node15261 -> node15262 [ color="black"]
  node15270 -> node15271 [ color="black"]
  node15277 -> node15278 [ color="black"]
  node15264 -> node15265 [label=<<font color="black">true</font>> color="black"]
  node15264 -> node15266 [label=<<font color="black">false</font>> color="black"]
  node15248 -> node15249 [ color="black"]
}
