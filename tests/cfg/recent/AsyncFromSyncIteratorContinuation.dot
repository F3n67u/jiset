digraph {
  node18810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18793 [shape=cds, label=<<font color="black">0:app __x0__ = (IteratorComplete result)</font>> color="black" fillcolor="white" style=filled]
  node18801 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18792 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18806 [shape=diamond, label=<<font color="black">(= value.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18802 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:done</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18813 [shape=cds, label=<<font color="black">4:app __x4__ = (PromiseResolve INTRINSIC_Promise value)</font>> color="black" fillcolor="white" style=filled]
  node18819 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x5__) (! (= __x5__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18822 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:valueWrapper</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-async-from-sync-iterator-value-unwrap-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">valueWrapper = valueWrapper.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18815 [shape=diamond, label=<<font color="black">(is-completion valueWrapper)</font>> color="black" fillcolor="white" style=filled]
  node18803 [shape=cds, label=<<font color="black">2:app __x2__ = (IteratorValue result)</font>> color="black" fillcolor="white" style=filled]
  node18807 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">value = value.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18823 [shape=cds, label=<<font color="black">7:app __x6__ = (CreateBuiltinFunction steps (new [&quot;Done&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18818 [shape=cds, label=<<font color="black">app __x5__ = (Call promiseCapability.Reject undefined (new [valueWrapper.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18804 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let value = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18798 [shape=cds, label=<<font color="black">app __x1__ = (Call promiseCapability.Reject undefined (new [done.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18805 [shape=diamond, label=<<font color="black">(is-completion value)</font>> color="black" fillcolor="white" style=filled]
  node18824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let onFulfilled = [! __x6__]</td></tr>
      <tr><td align="left">8:onFulfilled.Done = done</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18800 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let valueWrapper = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18825 [shape=cds, label=<<font color="black">9:app __x7__ = (PerformPromiseThen valueWrapper onFulfilled undefined promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node18809 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18796 [shape=diamond, label=<<font color="black">(= done.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18821 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18799 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x1__) (! (= __x1__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18816 [shape=diamond, label=<<font color="black">(= valueWrapper.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18795 [shape=diamond, label=<<font color="black">(is-completion done)</font>> color="black" fillcolor="white" style=filled]
  node18812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18797 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = done.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18811 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let done = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18791 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[! __x7__]</td></tr>
      <tr><td align="left">10:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18808 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [value.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18812 -> node18813 [ color="black"]
  node18804 -> node18805 [ color="black"]
  node18822 -> node18823 [ color="black"]
  node18825 -> node18826 [ color="black"]
  node18806 -> node18807 [label=<<font color="black">true</font>> color="black"]
  node18806 -> node18808 [label=<<font color="black">false</font>> color="black"]
  node18798 -> node18799 [ color="black"]
  node18800 -> node18801 [ color="black"]
  node18802 -> node18803 [ color="black"]
  node18805 -> node18806 [label=<<font color="black">true</font>> color="black"]
  node18805 -> node18812 [label=<<font color="black">false</font>> color="black"]
  node18823 -> node18824 [ color="black"]
  node18796 -> node18797 [label=<<font color="black">true</font>> color="black"]
  node18796 -> node18798 [label=<<font color="black">false</font>> color="black"]
  node18819 -> node18820 [label=<<font color="black">true</font>> color="black"]
  node18819 -> node18821 [label=<<font color="black">false</font>> color="black"]
  node18818 -> node18819 [ color="black"]
  node18811 -> node18812 [ color="black"]
  node18809 -> node18810 [label=<<font color="black">true</font>> color="black"]
  node18809 -> node18811 [label=<<font color="black">false</font>> color="black"]
  node18797 -> node18802 [ color="black"]
  node18803 -> node18804 [ color="black"]
  node18817 -> node18822 [ color="black"]
  node18791 -> node18793 [ color="black"]
  node18815 -> node18816 [label=<<font color="black">true</font>> color="black"]
  node18815 -> node18822 [label=<<font color="black">false</font>> color="black"]
  node18813 -> node18814 [ color="black"]
  node18814 -> node18815 [ color="black"]
  node18808 -> node18809 [ color="black"]
  node18816 -> node18817 [label=<<font color="black">true</font>> color="black"]
  node18816 -> node18818 [label=<<font color="black">false</font>> color="black"]
  node18799 -> node18800 [label=<<font color="black">true</font>> color="black"]
  node18799 -> node18801 [label=<<font color="black">false</font>> color="black"]
  node18801 -> node18802 [ color="black"]
  node18824 -> node18825 [ color="black"]
  node18807 -> node18812 [ color="black"]
  node18826 -> node18792 [ color="black"]
  node18820 -> node18821 [ color="black"]
  node18794 -> node18795 [ color="black"]
  node18810 -> node18811 [ color="black"]
  node18793 -> node18794 [ color="black"]
  node18795 -> node18796 [label=<<font color="black">true</font>> color="black"]
  node18795 -> node18802 [label=<<font color="black">false</font>> color="black"]
  node18821 -> node18822 [ color="black"]
}
