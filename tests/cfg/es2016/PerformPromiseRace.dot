digraph {
  node15806 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let next = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15816 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node15808 [shape=diamond, label=<<font color="black">__x1__</font>> color="black" fillcolor="white" style=filled]
  node15812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">6:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15819 [shape=cds, label=<<font color="black">10:app __x4__ = (Invoke C &quot;resolve&quot; (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node15802 [shape=cds, label=<<font color="black">app promiseCapability = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15799 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15811 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15803 [shape=cds, label=<<font color="black">app C = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node15821 [shape=cds, label=<<font color="black">11:app __x5__ = (Invoke nextPromise &quot;then&quot; (new [promiseCapability.Resolve, promiseCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node15810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let nextValue = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15804 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15822 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15805 [shape=cds, label=<<font color="black">1:app __x0__ = (IteratorStep iteratorRecord.Iterator)</font>> color="black" fillcolor="white" style=filled]
  node15809 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15807 [shape=cds, label=<<font color="black">2:app __x1__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node15813 [shape=cds, label=<<font color="black">7:app __x2__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[? nextValue]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15815 [shape=cds, label=<<font color="black">8:app __x3__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node15820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextPromise = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15801 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15800 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15806 -> node15807 [ color="black"]
  node15810 -> node15811 [ color="black"]
  node15799 -> node15801 [ color="black"]
  node15820 -> node15821 [ color="black"]
  node15813 -> node15814 [ color="black"]
  node15801 -> node15802 [ color="black"]
  node15811 -> node15812 [label=<<font color="black">true</font>> color="black"]
  node15811 -> node15813 [label=<<font color="black">false</font>> color="black"]
  node15815 -> node15816 [ color="black"]
  node15819 -> node15820 [ color="black"]
  node15805 -> node15806 [ color="black"]
  node15814 -> node15815 [ color="black"]
  node15816 -> node15817 [label=<<font color="black">true</font>> color="black"]
  node15816 -> node15818 [label=<<font color="black">false</font>> color="black"]
  node15802 -> node15803 [ color="black"]
  node15808 -> node15809 [label=<<font color="black">true</font>> color="black"]
  node15808 -> node15810 [label=<<font color="black">false</font>> color="black"]
  node15812 -> node15813 [ color="black"]
  node15821 -> node15822 [ color="black"]
  node15804 -> node15805 [label=<<font color="black">true</font>> color="black"]
  node15804 -> node15800 [label=<<font color="black">false</font>> color="black"]
  node15803 -> node15804 [ color="black"]
  node15809 -> node15810 [ color="black"]
  node15807 -> node15808 [ color="black"]
  node15818 -> node15819 [ color="black"]
  node15817 -> node15818 [ color="black"]
  node15822 -> node15804 [ color="black"]
}
