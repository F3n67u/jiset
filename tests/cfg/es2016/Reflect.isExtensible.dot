digraph {
  node16232 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16233 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16231 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node16234 [shape=cds, label=<<font color="black">1:app __x1__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node16230 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16235 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16228 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16229 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16232 -> node16233 [label=<<font color="black">true</font>> color="black"]
  node16232 -> node16234 [label=<<font color="black">false</font>> color="black"]
  node16228 -> node16230 [ color="black"]
  node16233 -> node16234 [ color="black"]
  node16230 -> node16231 [ color="black"]
  node16231 -> node16232 [ color="black"]
  node16234 -> node16235 [ color="black"]
  node16235 -> node16229 [ color="black"]
}
