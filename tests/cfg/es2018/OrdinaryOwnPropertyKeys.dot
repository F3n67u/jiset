digraph {
  node1894 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1896 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let keys = (new [])</td></tr>
      <tr><td align="left">1:??? &quot;For each own property key id:{P} of id:{O} that is an integer index , in ascending numeric index order , do in:{} out:{}&quot;</td></tr>
      <tr><td align="left">3:??? &quot;For each own property key id:{P} of id:{O} that is a String but is not an integer index , in ascending chronological order of property creation , do in:{} out:{}&quot;</td></tr>
      <tr><td align="left">5:??? &quot;For each own property key id:{P} of id:{O} that is a Symbol , in ascending chronological order of property creation , do in:{} out:{}&quot;</td></tr>
      <tr><td align="left">7:return keys</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1895 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1894 -> node1896 [ color="black"]
  node1896 -> node1895 [ color="black"]
}
