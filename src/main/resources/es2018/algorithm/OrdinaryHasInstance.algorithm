<algorithm>
  <param>C</param>
  <param>O</param>
  <step-list>
    <step>If IsCallable ( <id>C</id> ) is <value>false</value> , return <value>false</value> .</step>
    <step>If <id>C</id> has a [[BoundTargetFunction]] internal slot, then     <step-list>
      <step>Let <id>BC</id> be <id>C</id> .[[BoundTargetFunction]].</step>
      <step>Return ? InstanceofOperator ( <id>O</id> , <id>BC</id> ).</step>
    </step-list></step>
    <step>If Type ( <id>O</id> ) is not Object, return <value>false</value> .</step>
    <step>Let <id>P</id> be ? Get ( <id>C</id> , <value>"prototype"</value> ).</step>
    <step>If Type ( <id>P</id> ) is not Object, throw a <value>TypeError</value> exception.</step>
    <step>Repeat,     <step-list>
      <step>Set <id>O</id> to ? <id>O</id> .[[GetPrototypeOf]]().</step>
      <step>If <id>O</id> is <value>null</value> , return <value>false</value> .</step>
      <step>If SameValue ( <id>P</id> , <id>O</id> ) is <value>true</value> , return <value>true</value> .</step>
    </step-list></step>
  </step-list>
</algorithm>