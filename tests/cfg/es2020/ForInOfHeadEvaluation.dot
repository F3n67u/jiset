digraph {
  node7726 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[! __x3__]</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7743 [shape=cds, label=<<font color="black">20:app __x8__ = (GetIterator exprValue iteratorHint)</font>> color="black" fillcolor="white" style=filled]
  node7739 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:assert (|| (= iterationKind CONST_iterate) (= iterationKind CONST_asyncDASHiterate))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let newEnv = __x0__</td></tr>
      <tr><td align="left">4:let newEnvRec = newEnv.EnvironmentRecord</td></tr>
      <tr><td align="left">5:let __x1__ = uninitializedBoundNames</td></tr>
      <tr><td align="left">5:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7730 [shape=cds, label=<<font color="black">10:app __x5__ = (GetValue exprRef)</font>> color="black" fillcolor="white" style=filled]
  node7717 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7721 [shape=cds, label=<<font color="black">3:app __x0__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node7742 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iteratorHint = CONST_sync</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7736 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let obj = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7731 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let exprValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7718 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7737 [shape=cds, label=<<font color="black">15:app __x7__ = (EnumerateObjectProperties obj)</font>> color="black" fillcolor="white" style=filled]
  node7720 [shape=diamond, label=<<font color="black">(&lt; 0i uninitializedBoundNames.length)</font>> color="black" fillcolor="white" style=filled]
  node7732 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7727 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:GLOBAL_context.LexicalEnvironment = newEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7740 [shape=diamond, label=<<font color="black">(= iterationKind CONST_asyncDASHiterate)</font>> color="black" fillcolor="white" style=filled]
  node7723 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node7734 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (new Completion(&quot;Type&quot; -&gt; CONST_break, &quot;Value&quot; -&gt; CONST_empty, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let exprRef = __x4__</td></tr>
      <tr><td align="left">9:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7728 [shape=cds, label=<<font color="black">8:access __x4__ = (expr &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7733 [shape=diamond, label=<<font color="black">(|| (= exprValue undefined) (= exprValue null))</font>> color="black" fillcolor="white" style=filled]
  node7725 [shape=cds, label=<<font color="black">6:app __x3__ = (newEnvRec.CreateMutableBinding newEnvRec name false)</font>> color="black" fillcolor="white" style=filled]
  node7735 [shape=cds, label=<<font color="black">14:app __x6__ = (ToObject exprValue)</font>> color="black" fillcolor="white" style=filled]
  node7719 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iteratorHint = CONST_async</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7741 -> node7743 [ color="black"]
  node7730 -> node7731 [ color="black"]
  node7740 -> node7741 [label=<<font color="black">true</font>> color="black"]
  node7740 -> node7742 [label=<<font color="black">false</font>> color="black"]
  node7720 -> node7721 [label=<<font color="black">true</font>> color="black"]
  node7720 -> node7728 [label=<<font color="black">false</font>> color="black"]
  node7738 -> node7718 [ color="black"]
  node7735 -> node7736 [ color="black"]
  node7721 -> node7722 [ color="black"]
  node7731 -> node7732 [ color="black"]
  node7742 -> node7743 [ color="black"]
  node7719 -> node7720 [ color="black"]
  node7726 -> node7723 [ color="black"]
  node7717 -> node7719 [ color="black"]
  node7727 -> node7728 [ color="black"]
  node7736 -> node7737 [ color="black"]
  node7724 -> node7725 [ color="black"]
  node7733 -> node7734 [label=<<font color="black">true</font>> color="black"]
  node7733 -> node7735 [label=<<font color="black">false</font>> color="black"]
  node7732 -> node7733 [label=<<font color="black">true</font>> color="black"]
  node7732 -> node7739 [label=<<font color="black">false</font>> color="black"]
  node7743 -> node7744 [ color="black"]
  node7725 -> node7726 [ color="black"]
  node7739 -> node7740 [ color="black"]
  node7734 -> node7735 [ color="black"]
  node7728 -> node7729 [ color="black"]
  node7723 -> node7724 [label=<<font color="black">true</font>> color="black"]
  node7723 -> node7727 [label=<<font color="black">false</font>> color="black"]
  node7729 -> node7730 [ color="black"]
  node7737 -> node7738 [ color="black"]
  node7722 -> node7723 [ color="black"]
  node7744 -> node7718 [ color="black"]
}
