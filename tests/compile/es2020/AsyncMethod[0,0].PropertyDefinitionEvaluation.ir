{
  [0] access __x0__ = (PropertyName "Evaluation")
  [0] let propKey = __x0__
  [1] if (is-completion propKey) if (= propKey.Type CONST_normal) propKey = propKey.Value else return propKey else [33] {}
  [1] propKey
  [2] access __x1__ = (GLOBAL_context "LexicalEnvironment")
  [2] let scope = __x1__
  [3] ??? "Let id:{closure} be ! OrdinaryFunctionCreate ( % AsyncFunction . prototype % , nt:{UniqueFormalParameters} , nt:{AsyncFunctionBody} , const:{non-lexical-this} , id:{scope} ) ."
  [4] app __x2__ = (MakeMethod closure object)
  [4] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [33] {}
  [4] __x2__
  [5] app __x3__ = (SetFunctionName closure propKey)
  [5] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [33] {}
  [5] __x3__
  [6] closure.SourceText = (get-syntax AsyncMethod)
  [7] let desc = (new PropertyDescriptor("Value" -> closure, "Writable" -> true, "Enumerable" -> enumerable, "Configurable" -> true))
  [8] app __x4__ = (DefinePropertyOrThrow object propKey desc)
  [8] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [33] {}
  [8] app __x5__ = (WrapCompletion __x4__)
  [8] return __x5__
}