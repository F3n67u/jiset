digraph {
  node15357 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node15342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15353 [shape=cds, label=<<font color="black">7:app __x4__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15338 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15345 [shape=cds, label=<<font color="black">2:app __x1__ = (ToNumber requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node15348 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let isLittleEndian = __x3__</td></tr>
      <tr><td align="left">6:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15340 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node15355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15347 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger numberIndex)</font>> color="black" fillcolor="white" style=filled]
  node15351 [shape=cds, label=<<font color="black">5:app __x3__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15356 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">9:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15359 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15361 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15346 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let numberIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15360 [shape=cds, label=<<font color="black">13:app __x5__ = (GetValueFromBuffer buffer bufferIndex type isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15343 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node15339 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15354 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node15349 [shape=diamond, label=<<font color="black">(|| (! (== numberIndex getIndex)) (&lt; getIndex 0i))</font>> color="black" fillcolor="white" style=filled]
  node15344 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15341 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15355 -> node15356 [ color="black"]
  node15344 -> node15345 [ color="black"]
  node15360 -> node15361 [ color="black"]
  node15349 -> node15350 [label=<<font color="black">true</font>> color="black"]
  node15349 -> node15351 [label=<<font color="black">false</font>> color="black"]
  node15340 -> node15341 [ color="black"]
  node15356 -> node15357 [ color="black"]
  node15354 -> node15355 [label=<<font color="black">true</font>> color="black"]
  node15354 -> node15356 [label=<<font color="black">false</font>> color="black"]
  node15357 -> node15358 [label=<<font color="black">true</font>> color="black"]
  node15357 -> node15359 [label=<<font color="black">false</font>> color="black"]
  node15338 -> node15340 [ color="black"]
  node15345 -> node15346 [ color="black"]
  node15351 -> node15352 [ color="black"]
  node15342 -> node15343 [ color="black"]
  node15358 -> node15359 [ color="black"]
  node15343 -> node15344 [label=<<font color="black">true</font>> color="black"]
  node15343 -> node15345 [label=<<font color="black">false</font>> color="black"]
  node15348 -> node15349 [ color="black"]
  node15353 -> node15354 [ color="black"]
  node15346 -> node15347 [ color="black"]
  node15352 -> node15353 [ color="black"]
  node15361 -> node15339 [ color="black"]
  node15350 -> node15351 [ color="black"]
  node15347 -> node15348 [ color="black"]
  node15341 -> node15342 [label=<<font color="black">true</font>> color="black"]
  node15341 -> node15343 [label=<<font color="black">false</font>> color="black"]
  node15359 -> node15360 [ color="black"]
}
