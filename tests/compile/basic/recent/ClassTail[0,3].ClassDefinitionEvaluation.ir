{
  access __x0__ = (GLOBAL_context "LexicalEnvironment")
  let env = __x0__
  app __x1__ = (NewDeclarativeEnvironment env)
  let classScope = __x1__
  if (! (= classBinding undefined)) {
    app __x2__ = (classScope.CreateImmutableBinding classScope classBinding true)
    __x2__
  } else {}
  if (= ClassHeritage absent) {
    let protoParent = INTRINSIC_Object_prototype
    let constructorParent = INTRINSIC_Function_prototype
  } else {
    GLOBAL_context.LexicalEnvironment = classScope
    access __x3__ = (ClassHeritage "Evaluation")
    let superclassRef = __x3__
    GLOBAL_context.LexicalEnvironment = env
    app __x4__ = (GetValue superclassRef)
    let superclass = [? __x4__]
    if (= superclass null) {
      let protoParent = null
      let constructorParent = INTRINSIC_Function_prototype
    } else {
      app __x5__ = (IsConstructor superclass)
      if (= __x5__ false) throw TypeError else {
        app __x6__ = (Get superclass "prototype")
        let protoParent = [? __x6__]
        if (! (|| (= (typeof protoParent) Object) (= (typeof protoParent) Null))) throw TypeError else {}
        let constructorParent = superclass
      }
    }
  }
  app __x7__ = (OrdinaryObjectCreate protoParent)
  let proto = [! __x7__]
  if (= ClassBody absent) let constructor = CONST_empty else {
    access __x8__ = (ClassBody "ConstructorMethod")
    let constructor = __x8__
  }
  if (= constructor CONST_empty) {
    if (! (= ClassHeritage absent)) let constructorText = AnyStr else let constructorText = AnyStr
    constructor = (parse-syntax constructorText "MethodDefinition" (new [false, false]))
  } else {}
  GLOBAL_context.LexicalEnvironment = classScope
  access __x9__ = (constructor "DefineMethod" proto constructorParent)
  let constructorInfo = [! __x9__]
  let F = constructorInfo.Closure
  app __x10__ = (SetFunctionName F className)
  __x10__
  app __x11__ = (MakeConstructor F false proto)
  __x11__
  if (! (= ClassHeritage absent)) F.ConstructorKind = CONST_derived else {}
  app __x12__ = (MakeClassConstructor F)
  __x12__
  app __x13__ = (CreateMethodProperty proto "constructor" F)
  __x13__
  if (= ClassBody absent) let methods = (new []) else {
    access __x14__ = (ClassBody "NonConstructorMethodDefinitions")
    let methods = __x14__
  }
  let __x15__ = methods
  let __x16__ = 0i
  while (< __x16__ __x15__.length) {
    let m = __x15__[__x16__]
    access __x17__ = (m "IsStatic")
    if (= __x17__ false) {
      access __x18__ = (m "PropertyDefinitionEvaluation" proto false)
      let status = __x18__
    } else {
      access __x19__ = (m "PropertyDefinitionEvaluation" F false)
      let status = __x19__
    }
    app __x20__ = (IsAbruptCompletion status)
    if __x20__ {
      GLOBAL_context.LexicalEnvironment = env
      return status
    } else {}
    __x16__ = (+ __x16__ 1i)
  }
  GLOBAL_context.LexicalEnvironment = env
  if (! (= classBinding undefined)) {
    app __x21__ = (classScope.InitializeBinding classScope classBinding F)
    __x21__
  } else {}
  return F
}