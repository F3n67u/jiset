digraph {
  node17290 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17298 [shape=cds, label=<<font color="black">5:app __x2__ = (AddEntriesFromIterable map iterable adder)</font>> color="black" fillcolor="white" style=filled]
  node17289 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17296 [shape=cds, label=<<font color="black">4:app __x1__ = (Get map &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17293 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let map = [? __x0__]</td></tr>
      <tr><td align="left">2:map.WeakMapData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17299 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17292 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget &quot;%WeakMap.prototype%&quot; (new [&quot;WeakMapData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17287 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17294 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node17291 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17295 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17288 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17297 -> node17298 [ color="black"]
  node17299 -> node17288 [ color="black"]
  node17294 -> node17295 [label=<<font color="black">true</font>> color="black"]
  node17294 -> node17296 [label=<<font color="black">false</font>> color="black"]
  node17292 -> node17293 [ color="black"]
  node17296 -> node17297 [ color="black"]
  node17287 -> node17289 [ color="black"]
  node17290 -> node17291 [label=<<font color="black">true</font>> color="black"]
  node17290 -> node17292 [label=<<font color="black">false</font>> color="black"]
  node17291 -> node17292 [ color="black"]
  node17295 -> node17296 [ color="black"]
  node17293 -> node17294 [ color="black"]
  node17289 -> node17290 [ color="black"]
  node17298 -> node17299 [ color="black"]
}
