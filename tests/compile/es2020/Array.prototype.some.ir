{
  app callbackfn = (GetArgument argumentsList 0i)
  app thisArg = (GetArgument argumentsList 1i)
  [0] app __x0__ = (ToObject this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [4] {}
  [0] let O = __x0__
  [1] app __x1__ = (LengthOfArrayLike O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [4] {}
  [1] let len = __x1__
  [2] app __x2__ = (IsCallable callbackfn)
  [2] if (= __x2__ false) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else [4] {}
  [3] let k = 0i
  [4] while (< k len) {
    [5] app __x4__ = (ToString k)
    [5] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [4] {}
    [5] let Pk = __x4__
    [6] app __x5__ = (HasProperty O Pk)
    [6] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [4] {}
    [6] let kPresent = __x5__
    [7] if (= kPresent true) {
      [8] app __x6__ = (Get O Pk)
      [8] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [4] {}
      [8] let kValue = __x6__
      [9] app __x7__ = (Call callbackfn thisArg (new [kValue, k, O]))
      [9] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [4] {}
      [9] app __x8__ = (ToBoolean __x7__)
      [9] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [4] {}
      [9] let testResult = __x8__
      [10] if (= testResult true) {
        app __x9__ = (WrapCompletion true)
        return __x9__
      } else [4] {}
    } else [4] {}
    [11] k = (+ k 1i)
  }
  [12] app __x10__ = (WrapCompletion false)
  [12] return __x10__
}