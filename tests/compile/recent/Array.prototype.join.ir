{
  app separator = (GetArgument argumentsList 0i)
  [0] app __x0__ = (ToObject this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [4] {}
  [0] let O = __x0__
  [1] app __x1__ = (LengthOfArrayLike O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [4] {}
  [1] let len = __x1__
  [2] ??? "If id:{separator} is value:{undefined} , let id:{sep} be the single - element String value:{\",\"} ."
  [3] ??? "Else , let id:{sep} be ? ToString ( id:{separator} ) ."
  [4] let R = ""
  [5] let k = 0i
  [6] while (< k len) {
    [7] if (< 0i k) R = (+ R sep) else [4] {}
    [8] ??? "Let id:{element} be ? Get ( id:{O} , ! ToString ( 𝔽 ( id:{k} ) ) ) ."
    [9] if (|| (= element undefined) (= element null)) let next = "" else {
      app __x2__ = (ToString element)
      if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [4] {}
      let next = __x2__
    }
    [10] R = (+ R next)
    [11] k = (+ k 1i)
  }
  [12] app __x3__ = (WrapCompletion R)
  [12] return __x3__
}