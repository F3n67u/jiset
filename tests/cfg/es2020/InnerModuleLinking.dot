digraph {
  node10917 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10927 [shape=diamond, label=<<font color="black">(= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10940 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10923 [shape=cds, label=<<font color="black">12:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node10935 [shape=diamond, label=<<font color="black">(= module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node10922 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10919 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10929 [shape=diamond, label=<<font color="black">(= requiredModule.Status CONST_linking)</font>> color="black" fillcolor="white" style=filled]
  node10938 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">26:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">27:assert (= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</td></tr>
      <tr><td align="left">28:requiredModule.Status = CONST_linked</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10921 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10920 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (= module.Status CONST_unlinked)</td></tr>
      <tr><td align="left">6:module.Status = CONST_linking</td></tr>
      <tr><td align="left">7:module.DFSIndex = index</td></tr>
      <tr><td align="left">8:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">9:index = (+ index 1i)</td></tr>
      <tr><td align="left">10:append module -&gt; stack</td></tr>
      <tr><td align="left">11:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">11:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10915 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;CyclicModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10928 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:assert (|| (|| (= requiredModule.Status CONST_linking) (= requiredModule.Status CONST_linked)) (= requiredModule.Status CONST_evaluated))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10941 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10913 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10918 [shape=diamond, label=<<font color="black">(|| (|| (= module.Status CONST_linking) (= module.Status CONST_linked)) (= module.Status CONST_evaluated))</font>> color="black" fillcolor="white" style=filled]
  node10932 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10933 [shape=cds, label=<<font color="black">19:app __x6__ = (module.InitializeEnvironment module)</font>> color="black" fillcolor="white" style=filled]
  node10939 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node10926 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10914 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10936 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10925 [shape=cds, label=<<font color="black">13:app __x4__ = (InnerModuleLinking requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node10930 [shape=cds, label=<<font color="black">18:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node10937 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node10924 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let requiredModule = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10931 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10934 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x6__]</td></tr>
      <tr><td align="left">21:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10916 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Link module)</font>> color="black" fillcolor="white" style=filled]
  node10931 -> node10932 [ color="black"]
  node10924 -> node10925 [ color="black"]
  node10936 -> node10937 [ color="black"]
  node10926 -> node10927 [ color="black"]
  node10918 -> node10919 [label=<<font color="black">true</font>> color="black"]
  node10918 -> node10920 [label=<<font color="black">false</font>> color="black"]
  node10929 -> node10930 [label=<<font color="black">true</font>> color="black"]
  node10929 -> node10932 [label=<<font color="black">false</font>> color="black"]
  node10927 -> node10928 [label=<<font color="black">true</font>> color="black"]
  node10927 -> node10932 [label=<<font color="black">false</font>> color="black"]
  node10930 -> node10931 [ color="black"]
  node10921 -> node10922 [label=<<font color="black">true</font>> color="black"]
  node10921 -> node10933 [label=<<font color="black">false</font>> color="black"]
  node10923 -> node10924 [ color="black"]
  node10917 -> node10918 [ color="black"]
  node10922 -> node10923 [ color="black"]
  node10928 -> node10929 [ color="black"]
  node10920 -> node10921 [ color="black"]
  node10939 -> node10940 [label=<<font color="black">true</font>> color="black"]
  node10939 -> node10937 [label=<<font color="black">false</font>> color="black"]
  node10919 -> node10920 [ color="black"]
  node10925 -> node10926 [ color="black"]
  node10941 -> node10914 [ color="black"]
  node10934 -> node10935 [ color="black"]
  node10913 -> node10915 [ color="black"]
  node10938 -> node10939 [ color="black"]
  node10933 -> node10934 [ color="black"]
  node10932 -> node10921 [ color="black"]
  node10915 -> node10916 [label=<<font color="black">true</font>> color="black"]
  node10915 -> node10918 [label=<<font color="black">false</font>> color="black"]
  node10916 -> node10917 [ color="black"]
  node10940 -> node10937 [ color="black"]
  node10935 -> node10936 [label=<<font color="black">true</font>> color="black"]
  node10935 -> node10941 [label=<<font color="black">false</font>> color="black"]
  node10937 -> node10938 [label=<<font color="black">true</font>> color="black"]
  node10937 -> node10941 [label=<<font color="black">false</font>> color="black"]
}
