digraph {
  node11235 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11224 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= module.Status CONST_linked)</td></tr>
      <tr><td align="left">8:module.Status = CONST_evaluating</td></tr>
      <tr><td align="left">9:module.DFSIndex = index</td></tr>
      <tr><td align="left">10:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">11:index = (+ index 1i)</td></tr>
      <tr><td align="left">12:append module -&gt; stack</td></tr>
      <tr><td align="left">13:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">13:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11239 [shape=diamond, label=<<font color="black">(== module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node11228 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let requiredModule = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11232 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:assert (|| (= requiredModule.Status CONST_evaluating) (= requiredModule.Status CONST_evaluated))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11215 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;CyclicModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node11244 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11216 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Evaluate module)</font>> color="black" fillcolor="white" style=filled]
  node11226 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11237 [shape=cds, label=<<font color="black">22:app __x6__ = (module.ExecuteModule module)</font>> color="black" fillcolor="white" style=filled]
  node11222 [shape=diamond, label=<<font color="black">(= module.Status CONST_evaluating)</font>> color="black" fillcolor="white" style=filled]
  node11233 [shape=diamond, label=<<font color="black">(= requiredModule.Status CONST_evaluating)</font>> color="black" fillcolor="white" style=filled]
  node11213 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11240 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11227 [shape=cds, label=<<font color="black">14:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node11219 [shape=diamond, label=<<font color="black">(= module.EvaluationError undefined)</font>> color="black" fillcolor="white" style=filled]
  node11236 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11241 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node11242 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">29:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">30:assert (= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</td></tr>
      <tr><td align="left">31:requiredModule.Status = CONST_evaluated</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11218 [shape=diamond, label=<<font color="black">(= module.Status CONST_evaluated)</font>> color="black" fillcolor="white" style=filled]
  node11238 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:[? __x6__]</td></tr>
      <tr><td align="left">24:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11223 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11217 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11234 [shape=cds, label=<<font color="black">21:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node11221 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return module.EvaluationError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11229 [shape=cds, label=<<font color="black">16:app __x4__ = (InnerModuleEvaluation requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node11243 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node11220 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11245 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11230 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:index = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11225 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node11214 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11231 [shape=diamond, label=<<font color="black">(= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11220 -> node11222 [ color="black"]
  node11223 -> node11224 [ color="black"]
  node11228 -> node11229 [ color="black"]
  node11234 -> node11235 [ color="black"]
  node11240 -> node11241 [ color="black"]
  node11219 -> node11220 [label=<<font color="black">true</font>> color="black"]
  node11219 -> node11221 [label=<<font color="black">false</font>> color="black"]
  node11232 -> node11233 [ color="black"]
  node11233 -> node11234 [label=<<font color="black">true</font>> color="black"]
  node11233 -> node11236 [label=<<font color="black">false</font>> color="black"]
  node11241 -> node11242 [label=<<font color="black">true</font>> color="black"]
  node11241 -> node11245 [label=<<font color="black">false</font>> color="black"]
  node11243 -> node11244 [label=<<font color="black">true</font>> color="black"]
  node11243 -> node11241 [label=<<font color="black">false</font>> color="black"]
  node11215 -> node11216 [label=<<font color="black">true</font>> color="black"]
  node11215 -> node11218 [label=<<font color="black">false</font>> color="black"]
  node11239 -> node11240 [label=<<font color="black">true</font>> color="black"]
  node11239 -> node11245 [label=<<font color="black">false</font>> color="black"]
  node11213 -> node11215 [ color="black"]
  node11235 -> node11236 [ color="black"]
  node11229 -> node11230 [ color="black"]
  node11225 -> node11226 [label=<<font color="black">true</font>> color="black"]
  node11225 -> node11237 [label=<<font color="black">false</font>> color="black"]
  node11224 -> node11225 [ color="black"]
  node11221 -> node11222 [ color="black"]
  node11244 -> node11241 [ color="black"]
  node11217 -> node11218 [ color="black"]
  node11237 -> node11238 [ color="black"]
  node11216 -> node11217 [ color="black"]
  node11242 -> node11243 [ color="black"]
  node11231 -> node11232 [label=<<font color="black">true</font>> color="black"]
  node11231 -> node11236 [label=<<font color="black">false</font>> color="black"]
  node11222 -> node11223 [label=<<font color="black">true</font>> color="black"]
  node11222 -> node11224 [label=<<font color="black">false</font>> color="black"]
  node11218 -> node11219 [label=<<font color="black">true</font>> color="black"]
  node11218 -> node11222 [label=<<font color="black">false</font>> color="black"]
  node11245 -> node11214 [ color="black"]
  node11226 -> node11227 [ color="black"]
  node11227 -> node11228 [ color="black"]
  node11238 -> node11239 [ color="black"]
  node11230 -> node11231 [ color="black"]
  node11236 -> node11225 [ color="black"]
}
