digraph {
  node5982 [shape=cds, label=<<font color="black">6:access __x4__ = (Initializer &quot;NamedEvaluation&quot; lref.ReferencedName)</font>> color="black" fillcolor="white" style=filled]
  node5977 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let v = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5989 [shape=diamond, label=<<font color="black">(|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))</font>> color="black" fillcolor="white" style=filled]
  node5974 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5985 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let defaultValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5978 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= v undefined))</font>> color="black" fillcolor="white" style=filled]
  node5992 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5973 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5979 [shape=cds, label=<<font color="black">7:app __x2__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node5984 [shape=cds, label=<<font color="black">8:access __x5__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5972 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5976 [shape=cds, label=<<font color="black">3:app __x1__ = (GetV value propertyName)</font>> color="black" fillcolor="white" style=filled]
  node5991 [shape=cds, label=<<font color="black">13:access __x7__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node5980 [shape=cds, label=<<font color="black">7:access __x3__ = (DestructuringAssignmentTarget &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5981 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x2__ true) (= __x3__ true))</font>> color="black" fillcolor="white" style=filled]
  node5971 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5990 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let assignmentPattern = (parse-syntax DestructuringAssignmentTarget &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5975 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5986 [shape=cds, label=<<font color="black">9:app __x6__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node5983 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rhsValue = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5988 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let rhsValue = v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5993 [shape=cds, label=<<font color="black">14:app __x8__ = (PutValue lref rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node5994 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5987 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let rhsValue = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5971 -> node5973 [ color="black"]
  node5979 -> node5980 [ color="black"]
  node5974 -> node5975 [ color="black"]
  node5990 -> node5991 [ color="black"]
  node5984 -> node5985 [ color="black"]
  node5994 -> node5972 [ color="black"]
  node5988 -> node5989 [ color="black"]
  node5982 -> node5983 [ color="black"]
  node5976 -> node5977 [ color="black"]
  node5981 -> node5982 [label=<<font color="black">true</font>> color="black"]
  node5981 -> node5984 [label=<<font color="black">false</font>> color="black"]
  node5985 -> node5986 [ color="black"]
  node5980 -> node5981 [ color="black"]
  node5983 -> node5989 [ color="black"]
  node5993 -> node5994 [ color="black"]
  node5977 -> node5978 [ color="black"]
  node5989 -> node5990 [label=<<font color="black">true</font>> color="black"]
  node5989 -> node5993 [label=<<font color="black">false</font>> color="black"]
  node5973 -> node5974 [label=<<font color="black">true</font>> color="black"]
  node5973 -> node5976 [label=<<font color="black">false</font>> color="black"]
  node5986 -> node5987 [ color="black"]
  node5991 -> node5992 [ color="black"]
  node5987 -> node5989 [ color="black"]
  node5992 -> node5993 [ color="black"]
  node5975 -> node5976 [ color="black"]
  node5978 -> node5979 [label=<<font color="black">true</font>> color="black"]
  node5978 -> node5988 [label=<<font color="black">false</font>> color="black"]
}
