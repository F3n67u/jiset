digraph {
  node16630 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16626 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16629 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node16632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16628 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16631 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateSharedArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node16627 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16625 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16624 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16624 -> node16626 [ color="black"]
  node16626 -> node16627 [ color="black"]
  node16630 -> node16631 [ color="black"]
  node16627 -> node16628 [label=<<font color="black">true</font>> color="black"]
  node16627 -> node16629 [label=<<font color="black">false</font>> color="black"]
  node16629 -> node16630 [ color="black"]
  node16632 -> node16625 [ color="black"]
  node16628 -> node16629 [ color="black"]
  node16631 -> node16632 [ color="black"]
}
