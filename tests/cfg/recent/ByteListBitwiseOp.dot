digraph {
  node17875 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (|| (= op &quot;&amp;&quot;) (= op &quot;^&quot;)) (= op &quot;|&quot;))</td></tr>
      <tr><td align="left">2:let result = (new [])</td></tr>
      <tr><td align="left">3:let i = 0i</td></tr>
      <tr><td align="left">4:let __x0__ = xBytes</td></tr>
      <tr><td align="left">4:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let resultByte = (&amp; xByte yByte)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17876 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node17883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17873 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17880 [shape=diamond, label=<<font color="black">(= op &quot;^&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17882 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:??? &quot;Else , id:{op} is code:{|} . Let id:{resultByte} be the result of applying the bitwise inclusive OR operation to id:{xByte} and id:{yByte} .&quot;</td></tr>
      <tr><td align="left">9:i = (+ i 1i)</td></tr>
      <tr><td align="left">10:append resultByte -&gt; result</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17874 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17877 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let xByte = __x0__[__x1__]</td></tr>
      <tr><td align="left">5:let yByte = yBytes[i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let resultByte = (^ xByte yByte)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17878 [shape=diamond, label=<<font color="black">(= op &quot;&amp;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17877 -> node17878 [ color="black"]
  node17882 -> node17876 [ color="black"]
  node17873 -> node17875 [ color="black"]
  node17879 -> node17882 [ color="black"]
  node17876 -> node17877 [label=<<font color="black">true</font>> color="black"]
  node17876 -> node17883 [label=<<font color="black">false</font>> color="black"]
  node17875 -> node17876 [ color="black"]
  node17880 -> node17881 [label=<<font color="black">true</font>> color="black"]
  node17880 -> node17882 [label=<<font color="black">false</font>> color="black"]
  node17881 -> node17882 [ color="black"]
  node17878 -> node17879 [label=<<font color="black">true</font>> color="black"]
  node17878 -> node17880 [label=<<font color="black">false</font>> color="black"]
  node17883 -> node17874 [ color="black"]
}
