digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=diamond, label=<<font color="black">(= method absent)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=cds, label=<<font color="black">6:app __x1__ = (GetMethod obj SYMBOL_iterator)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let nextMethod = [? __x7__]</td></tr>
      <tr><td align="left">13:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; iterator, &quot;NextMethod&quot; -&gt; nextMethod, &quot;Done&quot; -&gt; false))</td></tr>
      <tr><td align="left">14:return iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=cds, label=<<font color="black">8:app __x3__ = (CreateAsyncFromSyncIterator syncIteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=cds, label=<<font color="black">11:app __x6__ = (Type iterator)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=diamond, label=<<font color="black">(= hint CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node21 [shape=diamond, label=<<font color="black">(! (= __x6__ Object))</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=diamond, label=<<font color="black">(= method undefined)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let syncIteratorRecord = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=diamond, label=<<font color="black">(= hint absent)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">method = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=cds, label=<<font color="black">7:app __x2__ = (GetIterator obj CONST_sync syncMethod)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">4:app __x0__ = (GetMethod obj SYMBOL_asyncIterator)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">hint = CONST_sync</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=cds, label=<<font color="black">10:app __x5__ = (Call method obj)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=cds, label=<<font color="black">app __x4__ = (GetMethod obj SYMBOL_iterator)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let syncMethod = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=cds, label=<<font color="black">12:app __x7__ = (GetV iterator &quot;next&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:method = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let iterator = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (|| (= hint CONST_sync) (= hint CONST_async))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 -> node4 [ color="black"]
  node5 -> node6 [label=<<font color="black">true</font>> color="black"]
  node5 -> node18 [label=<<font color="black">false</font>> color="black"]
  node11 -> node12 [ color="black"]
  node12 -> node13 [ color="black"]
  node21 -> node22 [label=<<font color="black">true</font>> color="black"]
  node21 -> node23 [label=<<font color="black">false</font>> color="black"]
  node24 -> node1 [ color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [ color="black"]
  node20 -> node21 [ color="black"]
  node16 -> node17 [ color="black"]
  node17 -> node18 [ color="black"]
  node7 -> node8 [ color="black"]
  node18 -> node19 [ color="black"]
  node19 -> node20 [ color="black"]
  node13 -> node14 [ color="black"]
  node9 -> node10 [label=<<font color="black">true</font>> color="black"]
  node9 -> node18 [label=<<font color="black">false</font>> color="black"]
  node0 -> node2 [ color="black"]
  node15 -> node18 [ color="black"]
  node2 -> node3 [label=<<font color="black">true</font>> color="black"]
  node2 -> node4 [label=<<font color="black">false</font>> color="black"]
  node22 -> node23 [ color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
  node8 -> node9 [ color="black"]
  node6 -> node7 [label=<<font color="black">true</font>> color="black"]
  node6 -> node16 [label=<<font color="black">false</font>> color="black"]
}
