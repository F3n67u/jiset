digraph {
  node2630 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2635 [shape=cds, label=<<font color="black">8:app __x4__ = (Type handlerProto)</font>> color="black" fillcolor="white" style=filled]
  node2639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let extensibleTarget = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2628 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;getPrototypeOf&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2633 [shape=cds, label=<<font color="black">7:app __x3__ = (Call trap handler (new [target]))</font>> color="black" fillcolor="white" style=filled]
  node2629 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2623 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2636 [shape=diamond, label=<<font color="black">(! (|| (= __x4__ Object) (= __x4__ Null)))</font>> color="black" fillcolor="white" style=filled]
  node2640 [shape=diamond, label=<<font color="black">(= extensibleTarget true)</font>> color="black" fillcolor="white" style=filled]
  node2622 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2644 [shape=cds, label=<<font color="black">12:app __x7__ = (SameValue handlerProto targetProto)</font>> color="black" fillcolor="white" style=filled]
  node2646 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return handlerProto</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2621 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2631 [shape=cds, label=<<font color="black">6:app __x2__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node2638 [shape=cds, label=<<font color="black">9:app __x5__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node2634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let handlerProto = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2645 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node2642 [shape=cds, label=<<font color="black">11:app __x6__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node2624 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2625 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return handlerProto</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2626 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetProto = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2632 -> node2633 [ color="black"]
  node2645 -> node2646 [label=<<font color="black">true</font>> color="black"]
  node2645 -> node2647 [label=<<font color="black">false</font>> color="black"]
  node2634 -> node2635 [ color="black"]
  node2647 -> node2622 [ color="black"]
  node2642 -> node2643 [ color="black"]
  node2627 -> node2628 [ color="black"]
  node2641 -> node2642 [ color="black"]
  node2635 -> node2636 [ color="black"]
  node2644 -> node2645 [ color="black"]
  node2630 -> node2631 [label=<<font color="black">true</font>> color="black"]
  node2630 -> node2633 [label=<<font color="black">false</font>> color="black"]
  node2624 -> node2625 [label=<<font color="black">true</font>> color="black"]
  node2624 -> node2626 [label=<<font color="black">false</font>> color="black"]
  node2639 -> node2640 [ color="black"]
  node2631 -> node2632 [ color="black"]
  node2638 -> node2639 [ color="black"]
  node2626 -> node2627 [ color="black"]
  node2637 -> node2638 [ color="black"]
  node2625 -> node2626 [ color="black"]
  node2633 -> node2634 [ color="black"]
  node2621 -> node2623 [ color="black"]
  node2628 -> node2629 [ color="black"]
  node2623 -> node2624 [ color="black"]
  node2643 -> node2644 [ color="black"]
  node2629 -> node2630 [ color="black"]
  node2640 -> node2641 [label=<<font color="black">true</font>> color="black"]
  node2640 -> node2642 [label=<<font color="black">false</font>> color="black"]
  node2646 -> node2647 [ color="black"]
  node2636 -> node2637 [label=<<font color="black">true</font>> color="black"]
  node2636 -> node2638 [label=<<font color="black">false</font>> color="black"]
}
