digraph {
  node9075 [shape=cds, label=<<font color="black">0:app __x0__ = (FunctionDeclarationInstantiation functionObject argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node9080 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:[! __x2__]</td></tr>
      <tr><td align="left">3:return (new Completion(&quot;Type&quot; -&gt; CONST_return, &quot;Value&quot; -&gt; generator, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9073 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9078 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let generator = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9077 [shape=cds, label=<<font color="black">1:app __x1__ = (OrdinaryCreateFromConstructor functionObject INTRINSIC_AsyncGeneratorPrototype (new [&quot;AsyncGeneratorState&quot;, &quot;AsyncGeneratorContext&quot;, &quot;AsyncGeneratorQueue&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node9076 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9079 [shape=cds, label=<<font color="black">2:app __x2__ = (AsyncGeneratorStart generator FunctionBody)</font>> color="black" fillcolor="white" style=filled]
  node9074 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9078 -> node9079 [ color="black"]
  node9076 -> node9077 [ color="black"]
  node9079 -> node9080 [ color="black"]
  node9077 -> node9078 [ color="black"]
  node9080 -> node9074 [ color="black"]
  node9073 -> node9075 [ color="black"]
  node9075 -> node9076 [ color="black"]
}
