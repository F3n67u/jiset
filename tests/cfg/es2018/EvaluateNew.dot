digraph {
  node4156 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let argList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4147 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let ref = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4155 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node4152 [shape=cds, label=<<font color="black">6:access __x2__ = (arguments &quot;ArgumentListEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4148 [shape=cds, label=<<font color="black">3:app __x1__ = (GetValue ref)</font>> color="black" fillcolor="white" style=filled]
  node4144 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4149 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let constructor = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4154 [shape=cds, label=<<font color="black">8:app __x3__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node4158 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (is-instance-of constructExpr NewExpression) (is-instance-of constructExpr MemberExpression))</td></tr>
      <tr><td align="left">1:assert (|| (= arguments CONST_empty) (is-instance-of arguments Arguments))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4153 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let argList = __x2__</td></tr>
      <tr><td align="left">7:[? argList]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4143 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4150 [shape=diamond, label=<<font color="black">(= arguments CONST_empty)</font>> color="black" fillcolor="white" style=filled]
  node4146 [shape=cds, label=<<font color="black">2:access __x0__ = (constructExpr &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4157 [shape=cds, label=<<font color="black">9:app __x4__ = (Construct constructor argList)</font>> color="black" fillcolor="white" style=filled]
  node4146 -> node4147 [ color="black"]
  node4150 -> node4151 [label=<<font color="black">true</font>> color="black"]
  node4150 -> node4152 [label=<<font color="black">false</font>> color="black"]
  node4158 -> node4144 [ color="black"]
  node4154 -> node4155 [ color="black"]
  node4149 -> node4150 [ color="black"]
  node4157 -> node4158 [ color="black"]
  node4147 -> node4148 [ color="black"]
  node4152 -> node4153 [ color="black"]
  node4153 -> node4154 [ color="black"]
  node4151 -> node4154 [ color="black"]
  node4156 -> node4157 [ color="black"]
  node4155 -> node4156 [label=<<font color="black">true</font>> color="black"]
  node4155 -> node4157 [label=<<font color="black">false</font>> color="black"]
  node4143 -> node4145 [ color="black"]
  node4148 -> node4149 [ color="black"]
  node4145 -> node4146 [ color="black"]
}
