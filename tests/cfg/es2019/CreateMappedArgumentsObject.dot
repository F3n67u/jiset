digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">13:access __x1__ = (formals &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=cds, label=<<font color="black">18:app __x3__ = (CreateDataProperty obj [! __x2__] val)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=diamond, label=<<font color="black">(! (&lt; index 0i))</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let parameterNames = __x1__</td></tr>
      <tr><td align="left">14:let numberOfParameters = parameterNames.length</td></tr>
      <tr><td align="left">15:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=cds, label=<<font color="black">18:app __x2__ = (ToString index)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:__x4__</td></tr>
      <tr><td align="left">21:let mappedNames = (new [])</td></tr>
      <tr><td align="left">22:let index = (- numberOfParameters 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let len = argumentsList.length</td></tr>
      <tr><td align="left">2:let obj = (new ArgumentsExoticObject(&quot;SubMap&quot; -&gt; (new SubMap()), &quot;ParameterMap&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:obj.GetOwnProperty = ArgumentsExoticObjectDOTGetOwnProperty</td></tr>
      <tr><td align="left">4:obj.DefineOwnProperty = ArgumentsExoticObjectDOTDefineOwnProperty</td></tr>
      <tr><td align="left">5:obj.Get = ArgumentsExoticObjectDOTGet</td></tr>
      <tr><td align="left">6:obj.Set = ArgumentsExoticObjectDOTSet</td></tr>
      <tr><td align="left">7:obj.Delete = ArgumentsExoticObjectDOTDelete</td></tr>
      <tr><td align="left">9:obj.Prototype = INTRINSIC_ObjectPrototype</td></tr>
      <tr><td align="left">10:obj.Extensible = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:append name -&gt; mappedNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=cds, label=<<font color="black">20:app __x4__ = (DefinePropertyOrThrow obj &quot;length&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; len, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; true)))</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=diamond, label=<<font color="black">(&lt; index len)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">11:app __x0__ = (ObjectCreate null)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=diamond, label=<<font color="black">(&lt; index len)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=diamond, label=<<font color="black">(! (contains mappedNames name))</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x3__</td></tr>
      <tr><td align="left">19:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let val = argumentsList[index]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=cds, label=<<font color="black">28:app __x5__ = (MakeArgGetter name env)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let map = __x0__</td></tr>
      <tr><td align="left">12:obj.ParameterMap = map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let name = parameterNames[index]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node24 [shape=cds, label=<<font color="black">30:app __x8__ = (map.DefineOwnProperty map [! __x7__] (new PropertyDescriptor(&quot;Set&quot; -&gt; p, &quot;Get&quot; -&gt; g, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; true)))</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:__x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let g = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:[! __x9__]</td></tr>
      <tr><td align="left">34:return obj</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=cds, label=<<font color="black">33:app __x9__ = (DefinePropertyOrThrow obj &quot;callee&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; func, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; true)))</font>> color="black" fillcolor="white" style=filled]
  node21 [shape=cds, label=<<font color="black">29:app __x6__ = (MakeArgSetter name env)</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let p = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:??? &quot;Perform ! DefinePropertyOrThrow ( id:{obj} , @ @ iterator , PropertyDescriptor { [ [ Value ] ] : % ArrayProto _ values % , [ [ Writable ] ] : value:{true} , [ [ Enumerable ] ] : value:{false} , [ [ Configurable ] ] : value:{true} } ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:index = (- index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=cds, label=<<font color="black">30:app __x7__ = (ToString index)</font>> color="black" fillcolor="white" style=filled]
  node28 -> node29 [ color="black"]
  node16 -> node17 [label=<<font color="black">true</font>> color="black"]
  node16 -> node26 [label=<<font color="black">false</font>> color="black"]
  node11 -> node7 [ color="black"]
  node0 -> node2 [ color="black"]
  node9 -> node10 [ color="black"]
  node27 -> node28 [ color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [ color="black"]
  node25 -> node26 [ color="black"]
  node29 -> node1 [ color="black"]
  node17 -> node18 [ color="black"]
  node14 -> node15 [label=<<font color="black">true</font>> color="black"]
  node14 -> node27 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node7 -> node8 [label=<<font color="black">true</font>> color="black"]
  node7 -> node12 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node19 -> node20 [ color="black"]
  node13 -> node14 [ color="black"]
  node26 -> node14 [ color="black"]
  node12 -> node13 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node18 -> node19 [label=<<font color="black">true</font>> color="black"]
  node18 -> node26 [label=<<font color="black">false</font>> color="black"]
  node23 -> node24 [ color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [ color="black"]
  node20 -> node21 [ color="black"]
  node24 -> node25 [ color="black"]
}
