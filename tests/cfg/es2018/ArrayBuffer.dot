digraph {
  node16196 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16200 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node16195 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16201 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16199 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16194 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16197 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16198 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node16193 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16201 -> node16194 [ color="black"]
  node16196 -> node16197 [label=<<font color="black">true</font>> color="black"]
  node16196 -> node16198 [label=<<font color="black">false</font>> color="black"]
  node16200 -> node16201 [ color="black"]
  node16195 -> node16196 [ color="black"]
  node16199 -> node16200 [ color="black"]
  node16193 -> node16195 [ color="black"]
  node16197 -> node16198 [ color="black"]
  node16198 -> node16199 [ color="black"]
}
