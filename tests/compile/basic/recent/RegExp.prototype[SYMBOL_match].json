["Let", {
  "id": "rx"
}, "be", "the", {
  "value": "this"
}, "value", ".", {
  "k": 0
}, "If", "Type", "(", {
  "id": "rx"
}, ")", "is", "not", "Object", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 1
}, "Let", {
  "id": "S"
}, "be", "?", "ToString", "(", {
  "id": "string"
}, ")", ".", {
  "k": 2
}, "Let", {
  "id": "global"
}, "be", "!", "ToBoolean", "(", "?", "Get", "(", {
  "id": "rx"
}, ",", {
  "value": "\"global\""
}, ")", ")", ".", {
  "k": 3
}, "If", {
  "id": "global"
}, "is", {
  "value": "false"
}, ",", "then", {
  "in": null
}, "Return", "?", "RegExpExec", "(", {
  "id": "rx"
}, ",", {
  "id": "S"
}, ")", ".", {
  "k": 5
}, {
  "out": null
}, {
  "k": 4
}, "Else", ",", {
  "in": null
}, "Assert", ":", {
  "id": "global"
}, "is", {
  "value": "true"
}, ".", {
  "k": 7
}, "Let", {
  "id": "fullUnicode"
}, "be", "!", "ToBoolean", "(", "?", "Get", "(", {
  "id": "rx"
}, ",", {
  "value": "\"unicode\""
}, ")", ")", ".", {
  "k": 8
}, "Perform", "?", "Set", "(", {
  "id": "rx"
}, ",", {
  "value": "\"lastIndex\""
}, ",", {
  "value": "+0"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 9
}, "Let", {
  "id": "A"
}, "be", "!", "ArrayCreate", "(", "0", ")", ".", {
  "k": 10
}, "Let", {
  "id": "n"
}, "be", "0", ".", {
  "k": 11
}, "Repeat", ",", {
  "in": null
}, "Let", {
  "id": "result"
}, "be", "?", "RegExpExec", "(", {
  "id": "rx"
}, ",", {
  "id": "S"
}, ")", ".", {
  "k": 13
}, "If", {
  "id": "result"
}, "is", {
  "value": "null"
}, ",", "then", {
  "in": null
}, "If", {
  "id": "n"
}, "=", "0", ",", "return", {
  "value": "null"
}, ".", {
  "k": 15
}, "Return", {
  "id": "A"
}, ".", {
  "k": 16
}, {
  "out": null
}, {
  "k": 14
}, "Else", ",", {
  "in": null
}, "Let", {
  "id": "matchStr"
}, "be", "?", "ToString", "(", "?", "Get", "(", {
  "id": "result"
}, ",", {
  "value": "\"0\""
}, ")", ")", ".", {
  "k": 18
}, "Perform", "!", "CreateDataPropertyOrThrow", "(", {
  "id": "A"
}, ",", "!", "ToString", "(", "ùîΩ", "(", {
  "id": "n"
}, ")", ")", ",", {
  "id": "matchStr"
}, ")", ".", {
  "k": 19
}, "If", {
  "id": "matchStr"
}, "is", "the", "empty", "String", ",", "then", {
  "in": null
}, "Let", {
  "id": "thisIndex"
}, "be", "‚Ñù", "(", "?", "ToLength", "(", "?", "Get", "(", {
  "id": "rx"
}, ",", {
  "value": "\"lastIndex\""
}, ")", ")", ")", ".", {
  "k": 21
}, "Let", {
  "id": "nextIndex"
}, "be", "AdvanceStringIndex", "(", {
  "id": "S"
}, ",", {
  "id": "thisIndex"
}, ",", {
  "id": "fullUnicode"
}, ")", ".", {
  "k": 22
}, "Perform", "?", "Set", "(", {
  "id": "rx"
}, ",", {
  "value": "\"lastIndex\""
}, ",", "ùîΩ", "(", {
  "id": "nextIndex"
}, ")", ",", {
  "value": "true"
}, ")", ".", {
  "k": 23
}, {
  "out": null
}, {
  "k": 20
}, "Set", {
  "id": "n"
}, "to", {
  "id": "n"
}, "+", "1", ".", {
  "k": 24
}, {
  "out": null
}, {
  "k": 17
}, {
  "out": null
}, {
  "k": 12
}, {
  "out": null
}, {
  "k": 6
}]