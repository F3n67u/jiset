digraph {
  node13073 [shape=cds, label=<<font color="black">3:app __x2__ = (ToIntegerOrInfinity date)</font>> color="black" fillcolor="white" style=filled]
  node13067 [shape=diamond, label=<<font color="black">(|| (|| (= year Infinity) (= year -Infinity)) (|| (|| (= month Infinity) (= month -Infinity)) (|| (= date Infinity) (= date -Infinity))))</font>> color="black" fillcolor="white" style=filled]
  node13078 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return NaN</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let y = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let dt = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13066 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return (- (+ __x4__ dt) 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13071 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIntegerOrInfinity month)</font>> color="black" fillcolor="white" style=filled]
  node13075 [shape=cds, label=<<font color="black">4:app __x3__ = (floor (/ m 12i))</font>> color="black" fillcolor="white" style=filled]
  node13079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let mn = (%% m 12i)</td></tr>
      <tr><td align="left">7:??? &quot;Find a finite time value id:{t} such that YearFromTime ( id:{t} ) is id:{ym} and MonthFromTime ( id:{t} ) is id:{mn} and DateFromTime ( id:{t} ) is value:{1} ; but if this is not possible ( because some argument is out of range ) , return value:{NaN} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13069 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIntegerOrInfinity year)</font>> color="black" fillcolor="white" style=filled]
  node13065 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13076 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let ym = (+ y __x3__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13080 [shape=cds, label=<<font color="black">8:app __x4__ = (Day t)</font>> color="black" fillcolor="white" style=filled]
  node13068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return NaN</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13077 [shape=diamond, label=<<font color="black">(|| (= ym Infinity) (= ym -Infinity))</font>> color="black" fillcolor="white" style=filled]
  node13072 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let m = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13079 -> node13080 [ color="black"]
  node13069 -> node13070 [ color="black"]
  node13072 -> node13073 [ color="black"]
  node13078 -> node13079 [ color="black"]
  node13071 -> node13072 [ color="black"]
  node13068 -> node13069 [ color="black"]
  node13080 -> node13081 [ color="black"]
  node13074 -> node13075 [ color="black"]
  node13065 -> node13067 [ color="black"]
  node13070 -> node13071 [ color="black"]
  node13075 -> node13076 [ color="black"]
  node13067 -> node13068 [label=<<font color="black">true</font>> color="black"]
  node13067 -> node13069 [label=<<font color="black">false</font>> color="black"]
  node13081 -> node13066 [ color="black"]
  node13076 -> node13077 [ color="black"]
  node13073 -> node13074 [ color="black"]
  node13077 -> node13078 [label=<<font color="black">true</font>> color="black"]
  node13077 -> node13079 [label=<<font color="black">false</font>> color="black"]
}
