digraph {
  node17398 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17403 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node17406 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17402 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17399 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17405 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17401 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17400 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17404 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17401 -> node17402 [label=<<font color="black">true</font>> color="black"]
  node17401 -> node17403 [label=<<font color="black">false</font>> color="black"]
  node17400 -> node17401 [ color="black"]
  node17406 -> node17399 [ color="black"]
  node17404 -> node17405 [ color="black"]
  node17402 -> node17403 [ color="black"]
  node17403 -> node17404 [ color="black"]
  node17405 -> node17406 [ color="black"]
  node17398 -> node17400 [ color="black"]
}
