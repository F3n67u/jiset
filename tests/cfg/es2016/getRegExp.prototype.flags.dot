digraph {
  node13052 [shape=cds, label=<<font color="black">11:app __x9__ = (Get R &quot;sticky&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13035 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white" style=filled]
  node13039 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let ignoreCase = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;m&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13026 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13033 [shape=cds, label=<<font color="black">3:app __x2__ = (ToBoolean [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node13054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let sticky = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13050 [shape=diamond, label=<<font color="black">(= unicode true)</font>> color="black" fillcolor="white" style=filled]
  node13027 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13032 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13040 [shape=diamond, label=<<font color="black">(= ignoreCase true)</font>> color="black" fillcolor="white" style=filled]
  node13043 [shape=cds, label=<<font color="black">7:app __x6__ = (ToBoolean [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node13028 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node13056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;y&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13029 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node13030 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13025 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13045 [shape=diamond, label=<<font color="black">(= multiline true)</font>> color="black" fillcolor="white" style=filled]
  node13044 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let multiline = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13038 [shape=cds, label=<<font color="black">5:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node13051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;u&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13049 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let unicode = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13034 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let global = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13055 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node13041 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;i&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13031 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let result = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13047 [shape=cds, label=<<font color="black">9:app __x7__ = (Get R &quot;unicode&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13042 [shape=cds, label=<<font color="black">7:app __x5__ = (Get R &quot;multiline&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13037 [shape=cds, label=<<font color="black">5:app __x3__ = (Get R &quot;ignoreCase&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13057 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;g&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13053 [shape=cds, label=<<font color="black">11:app __x10__ = (ToBoolean [? __x9__])</font>> color="black" fillcolor="white" style=filled]
  node13048 [shape=cds, label=<<font color="black">9:app __x8__ = (ToBoolean [? __x7__])</font>> color="black" fillcolor="white" style=filled]
  node13053 -> node13054 [ color="black"]
  node13033 -> node13034 [ color="black"]
  node13025 -> node13027 [ color="black"]
  node13045 -> node13046 [label=<<font color="black">true</font>> color="black"]
  node13045 -> node13047 [label=<<font color="black">false</font>> color="black"]
  node13056 -> node13057 [ color="black"]
  node13040 -> node13041 [label=<<font color="black">true</font>> color="black"]
  node13040 -> node13042 [label=<<font color="black">false</font>> color="black"]
  node13036 -> node13037 [ color="black"]
  node13055 -> node13056 [label=<<font color="black">true</font>> color="black"]
  node13055 -> node13057 [label=<<font color="black">false</font>> color="black"]
  node13029 -> node13030 [label=<<font color="black">true</font>> color="black"]
  node13029 -> node13031 [label=<<font color="black">false</font>> color="black"]
  node13031 -> node13032 [ color="black"]
  node13030 -> node13031 [ color="black"]
  node13035 -> node13036 [label=<<font color="black">true</font>> color="black"]
  node13035 -> node13037 [label=<<font color="black">false</font>> color="black"]
  node13050 -> node13051 [label=<<font color="black">true</font>> color="black"]
  node13050 -> node13052 [label=<<font color="black">false</font>> color="black"]
  node13032 -> node13033 [ color="black"]
  node13052 -> node13053 [ color="black"]
  node13054 -> node13055 [ color="black"]
  node13034 -> node13035 [ color="black"]
  node13044 -> node13045 [ color="black"]
  node13041 -> node13042 [ color="black"]
  node13046 -> node13047 [ color="black"]
  node13039 -> node13040 [ color="black"]
  node13051 -> node13052 [ color="black"]
  node13049 -> node13050 [ color="black"]
  node13047 -> node13048 [ color="black"]
  node13038 -> node13039 [ color="black"]
  node13037 -> node13038 [ color="black"]
  node13043 -> node13044 [ color="black"]
  node13057 -> node13026 [ color="black"]
  node13028 -> node13029 [ color="black"]
  node13048 -> node13049 [ color="black"]
  node13027 -> node13028 [ color="black"]
  node13042 -> node13043 [ color="black"]
}
