{
  let __x0__ = true
  access __x1__ = (AsyncFunctionBody "ContainsUseStrict")
  __x0__ = (= __x1__ true)
  if __x0__ {
    access __x2__ = (FormalParameters "IsSimpleParameterList")
    __x0__ = (= __x2__ false)
  } else {}
  if __x0__ throw INTRINSIC_SyntaxError else {
    app __x3__ = (NormalCompletion undefined)
    return __x3__
  }
  access __x4__ = (FormalParameters "Contains")
  app __x5__ = (__x4__ "AwaitExpression")
  if (= __x5__ true) throw INTRINSIC_SyntaxError else {
    app __x6__ = (NormalCompletion undefined)
    return __x6__
  }
  ??? "If the source code matching nt:{FormalParameters} is strict mode code , the Early Error rules for grammar:{UniqueFormalParameters0, [FormalParameters]} are applied ."
  if (&& (! (= BindingIdentifier absent)) true) {
    access __x7__ = (BindingIdentifier "StringValue")
    if (|| (= __x7__ "eval") (= __x7__ "arguments")) throw INTRINSIC_SyntaxError else {
      app __x8__ = (NormalCompletion undefined)
      return __x8__
    }
  } else {}
  access __x9__ = (FormalParameters "BoundNames")
  access __x10__ = (AsyncFunctionBody "LexicallyDeclaredNames")
  let __x11__ = __x9__
  let __x12__ = __x10__
  let __x13__ = 0i
  let __x14__ = 0i
  let __x15__ = false
  while (< __x13__ __x11__.length) {
    __x14__ = 0i
    while (< __x14__ __x12__.length) if (= __x11__[__x13__] __x12__[__x14__]) __x15__ = true else {}
  }
  if __x15__ throw INTRINSIC_SyntaxError else {
    app __x16__ = (NormalCompletion undefined)
    return __x16__
  }
  access __x17__ = (FormalParameters "Contains")
  app __x18__ = (__x17__ "SuperProperty")
  if (= __x18__ true) throw INTRINSIC_SyntaxError else {
    app __x19__ = (NormalCompletion undefined)
    return __x19__
  }
  access __x20__ = (AsyncFunctionBody "Contains")
  app __x21__ = (__x20__ "SuperProperty")
  if (= __x21__ true) throw INTRINSIC_SyntaxError else {
    app __x22__ = (NormalCompletion undefined)
    return __x22__
  }
  access __x23__ = (FormalParameters "Contains")
  app __x24__ = (__x23__ "SuperCall")
  if (= __x24__ true) throw INTRINSIC_SyntaxError else {
    app __x25__ = (NormalCompletion undefined)
    return __x25__
  }
  access __x26__ = (AsyncFunctionBody "Contains")
  app __x27__ = (__x26__ "SuperCall")
  if (= __x27__ true) throw INTRINSIC_SyntaxError else {
    app __x28__ = (NormalCompletion undefined)
    return __x28__
  }
}