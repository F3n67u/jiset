digraph {
  node8519 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8522 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node8523 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8518 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8530 [shape=cds, label=<<font color="black">6:app __x3__ = (SetFunctionName closure propKey &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8527 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let closure = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8531 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:__x3__</td></tr>
      <tr><td align="left">7:closure.SourceText = (get-syntax MethodDefinition)</td></tr>
      <tr><td align="left">8:let desc = (new PropertyDescriptor(&quot;Set&quot; -&gt; closure, &quot;Enumerable&quot; -&gt; enumerable, &quot;Configurable&quot; -&gt; true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8524 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8529 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:__x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8528 [shape=cds, label=<<font color="black">5:app __x2__ = (MakeMethod closure object)</font>> color="black" fillcolor="white" style=filled]
  node8533 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8520 [shape=cds, label=<<font color="black">0:access __x0__ = (PropertyName &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8521 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let propKey = __x0__</td></tr>
      <tr><td align="left">1:[? propKey]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8525 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let scope = GLOBAL_context.LexicalEnvironment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8526 [shape=cds, label=<<font color="black">4:app __x1__ = (FunctionCreate CONST_Method PropertySetParameterList FunctionBody scope strict)</font>> color="black" fillcolor="white" style=filled]
  node8532 [shape=cds, label=<<font color="black">9:app __x4__ = (DefinePropertyOrThrow object propKey desc)</font>> color="black" fillcolor="white" style=filled]
  node8531 -> node8532 [ color="black"]
  node8521 -> node8522 [ color="black"]
  node8528 -> node8529 [ color="black"]
  node8520 -> node8521 [ color="black"]
  node8533 -> node8519 [ color="black"]
  node8525 -> node8526 [ color="black"]
  node8524 -> node8525 [ color="black"]
  node8518 -> node8520 [ color="black"]
  node8529 -> node8530 [ color="black"]
  node8522 -> node8523 [label=<<font color="black">true</font>> color="black"]
  node8522 -> node8524 [label=<<font color="black">false</font>> color="black"]
  node8526 -> node8527 [ color="black"]
  node8532 -> node8533 [ color="black"]
  node8523 -> node8525 [ color="black"]
  node8530 -> node8531 [ color="black"]
  node8527 -> node8528 [ color="black"]
}
