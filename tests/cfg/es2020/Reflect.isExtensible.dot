digraph {
  node18746 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node18742 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18745 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node18749 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18748 [shape=cds, label=<<font color="black">1:app __x1__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node18743 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18747 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18744 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18746 -> node18747 [label=<<font color="black">true</font>> color="black"]
  node18746 -> node18748 [label=<<font color="black">false</font>> color="black"]
  node18742 -> node18744 [ color="black"]
  node18748 -> node18749 [ color="black"]
  node18747 -> node18748 [ color="black"]
  node18749 -> node18743 [ color="black"]
  node18745 -> node18746 [ color="black"]
  node18744 -> node18745 [ color="black"]
}
