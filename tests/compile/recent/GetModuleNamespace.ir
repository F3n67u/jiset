{
  [2] let namespace = module.Namespace
  [3] if (= namespace undefined) {
    [4] app __x0__ = (module.GetExportedNames module)
    [4] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [1] {}
    [4] let exportedNames = __x0__
    [5] let unambiguousNames = (new [])
    [6] let __x1__ = exportedNames
    [6] let __x2__ = 0i
    [6] while (< __x2__ __x1__.length) {
      let name = __x1__[__x2__]
      [7] app __x3__ = (module.ResolveExport module name)
      [7] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [1] {}
      [7] let resolution = __x3__
      [8] if (= (typeof resolution) "ResolvedBindingRecord") append name -> unambiguousNames else [1] {}
      __x2__ = (+ __x2__ 1i)
    }
    [9] app __x4__ = (ModuleNamespaceCreate module unambiguousNames)
    [9] namespace = __x4__
  } else [1] {}
  [10] app __x5__ = (WrapCompletion namespace)
  [10] return __x5__
}