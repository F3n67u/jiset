digraph {
  node18438 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18432 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18433 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18431 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18434 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node18430 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18435 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node18437 [shape=cds, label=<<font color="black">2:app __x1__ = (PromiseResolve C x)</font>> color="black" fillcolor="white" style=filled]
  node18436 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18435 -> node18436 [label=<<font color="black">true</font>> color="black"]
  node18435 -> node18437 [label=<<font color="black">false</font>> color="black"]
  node18433 -> node18434 [ color="black"]
  node18434 -> node18435 [ color="black"]
  node18438 -> node18431 [ color="black"]
  node18436 -> node18437 [ color="black"]
  node18437 -> node18438 [ color="black"]
  node18430 -> node18432 [ color="black"]
  node18432 -> node18433 [ color="black"]
}
