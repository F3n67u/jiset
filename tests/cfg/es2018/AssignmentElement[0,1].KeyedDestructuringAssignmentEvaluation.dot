digraph {
  node5383 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5361 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let defaultValue = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5352 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5355 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5360 [shape=cds, label=<<font color="black">5:access __x2__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5366 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let assignmentPattern = (parse-syntax DestructuringAssignmentTarget &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5359 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= v undefined))</font>> color="black" fillcolor="white" style=filled]
  node5363 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rhsValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5381 [shape=cds, label=<<font color="black">app __x10__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5367 [shape=cds, label=<<font color="black">10:access __x4__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node5358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let v = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5364 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let rhsValue = v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5378 [shape=cds, label=<<font color="black">12:app __x9__ = (HasOwnProperty rhsValue &quot;name&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5385 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5365 [shape=diamond, label=<<font color="black">(|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))</font>> color="black" fillcolor="white" style=filled]
  node5353 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5379 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let hasNameProperty = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5370 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node5375 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x6__ = (&amp;&amp; (= __x7__ true) (= __x8__ true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5384 [shape=cds, label=<<font color="black">14:app __x12__ = (PutValue lref rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node5362 [shape=cds, label=<<font color="black">6:app __x3__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node5373 [shape=cds, label=<<font color="black">app __x7__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node5374 [shape=cds, label=<<font color="black">access __x8__ = (DestructuringAssignmentTarget &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5380 [shape=diamond, label=<<font color="black">(= hasNameProperty false)</font>> color="black" fillcolor="white" style=filled]
  node5369 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let __x5__ = true</td></tr>
      <tr><td align="left">11:__x5__ = (! (= Initializer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5372 [shape=diamond, label=<<font color="black">__x6__</font>> color="black" fillcolor="white" style=filled]
  node5377 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node5382 [shape=cds, label=<<font color="black">app __x11__ = (SetFunctionName rhsValue __x10__)</font>> color="black" fillcolor="white" style=filled]
  node5368 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5357 [shape=cds, label=<<font color="black">3:app __x1__ = (GetV value propertyName)</font>> color="black" fillcolor="white" style=filled]
  node5356 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x6__ = true</td></tr>
      <tr><td align="left">__x6__ = (= v undefined)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5354 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5376 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5366 -> node5367 [ color="black"]
  node5352 -> node5354 [ color="black"]
  node5382 -> node5383 [ color="black"]
  node5363 -> node5365 [ color="black"]
  node5362 -> node5363 [ color="black"]
  node5385 -> node5353 [ color="black"]
  node5377 -> node5378 [label=<<font color="black">true</font>> color="black"]
  node5377 -> node5384 [label=<<font color="black">false</font>> color="black"]
  node5364 -> node5365 [ color="black"]
  node5371 -> node5372 [ color="black"]
  node5368 -> node5369 [ color="black"]
  node5372 -> node5373 [label=<<font color="black">true</font>> color="black"]
  node5372 -> node5376 [label=<<font color="black">false</font>> color="black"]
  node5381 -> node5382 [ color="black"]
  node5384 -> node5385 [ color="black"]
  node5369 -> node5370 [ color="black"]
  node5355 -> node5356 [ color="black"]
  node5354 -> node5355 [label=<<font color="black">true</font>> color="black"]
  node5354 -> node5357 [label=<<font color="black">false</font>> color="black"]
  node5367 -> node5368 [ color="black"]
  node5374 -> node5375 [ color="black"]
  node5358 -> node5359 [ color="black"]
  node5360 -> node5361 [ color="black"]
  node5357 -> node5358 [ color="black"]
  node5373 -> node5374 [ color="black"]
  node5379 -> node5380 [ color="black"]
  node5356 -> node5357 [ color="black"]
  node5361 -> node5362 [ color="black"]
  node5376 -> node5377 [ color="black"]
  node5375 -> node5376 [ color="black"]
  node5370 -> node5371 [label=<<font color="black">true</font>> color="black"]
  node5370 -> node5377 [label=<<font color="black">false</font>> color="black"]
  node5359 -> node5360 [label=<<font color="black">true</font>> color="black"]
  node5359 -> node5364 [label=<<font color="black">false</font>> color="black"]
  node5378 -> node5379 [ color="black"]
  node5365 -> node5366 [label=<<font color="black">true</font>> color="black"]
  node5365 -> node5369 [label=<<font color="black">false</font>> color="black"]
  node5380 -> node5381 [label=<<font color="black">true</font>> color="black"]
  node5380 -> node5384 [label=<<font color="black">false</font>> color="black"]
  node5383 -> node5384 [ color="black"]
}
