digraph {
  node12774 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{capturedValue} be a string whose code units are the UTF16Encoding of the code points of id:{captureI} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12764 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:[! __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12756 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:??? &quot;id:{e} is an index into the id:{Input} character list , derived from id:{S} , matched by id:{matcher} . Let id:{eUTF} be the smallest index into id:{S} that corresponds to the character at element id:{e} of id:{Input} . If id:{e} is greater than or equal to the length of id:{Input} , then id:{eUTF} is the number of code units in id:{S} .&quot;</td></tr>
      <tr><td align="left">27:let e = eUTF</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12778 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[! __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12776 [shape=cds, label=<<font color="black">app __x17__ = (ToString i)</font>> color="black" fillcolor="white" style=filled]
  node12772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12722 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12730 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let global = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12739 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12761 [shape=cds, label=<<font color="black">31:app __x12__ = (ArrayCreate (+ n 1i))</font>> color="black" fillcolor="white" style=filled]
  node12749 [shape=cds, label=<<font color="black">18:app __x9__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node12721 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">matchSucceeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12731 [shape=cds, label=<<font color="black">5:app __x5__ = (Get R &quot;sticky&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12742 [shape=diamond, label=<<font color="black">(&lt; length lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node12725 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12763 [shape=cds, label=<<font color="black">34:app __x13__ = (CreateDataProperty A &quot;index&quot; matchIndex)</font>> color="black" fillcolor="white" style=filled]
  node12757 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node12770 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{captureI} be id:{i} sup:{th} element of id:{r} ' s id:{captures} List .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12745 [shape=cds, label=<<font color="black">15:app __x8__ = (matcher S lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node12767 [shape=cds, label=<<font color="black">37:app __x15__ = (CreateDataProperty A &quot;0&quot; matchedSubstr)</font>> color="black" fillcolor="white" style=filled]
  node12750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? __x9__]</td></tr>
      <tr><td align="left">19:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12735 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let lastIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12777 [shape=cds, label=<<font color="black">app __x18__ = (CreateDataProperty A [! __x17__] capturedValue)</font>> color="black" fillcolor="white" style=filled]
  node12762 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let A = __x12__</td></tr>
      <tr><td align="left">33:let matchIndex = lastIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12747 [shape=diamond, label=<<font color="black">(= r CONST_failure)</font>> color="black" fillcolor="white" style=filled]
  node12732 [shape=cds, label=<<font color="black">5:app __x6__ = (ToBoolean [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node12773 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node12737 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12769 [shape=diamond, label=<<font color="black">(&lt; i __x16__)</font>> color="black" fillcolor="white" style=filled]
  node12728 [shape=cds, label=<<font color="black">4:app __x3__ = (Get R &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12741 [shape=diamond, label=<<font color="black">(= matchSucceeded false)</font>> color="black" fillcolor="white" style=filled]
  node12760 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:??? &quot;Let id:{n} be the length of id:{r} ' s id:{captures} List . ( This is the same value as link:{unhandled: sec-notation} ' s id:{NcapturingParens} . )&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12768 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:[! __x15__]</td></tr>
      <tr><td align="left">38:let i = (+ 0i 1i)</td></tr>
      <tr><td align="left">38:let __x16__ = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12746 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let r = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ String)</td></tr>
      <tr><td align="left">2:let length = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12751 [shape=cds, label=<<font color="black">20:app __x10__ = (AdvanceStringIndex S lastIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node12736 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let matcher = R.RegExpMatcher</td></tr>
      <tr><td align="left">8:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12748 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node12759 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:[? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12755 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node12744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x7__]</td></tr>
      <tr><td align="left">14:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12727 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let lastIndex = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12779 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">48:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12765 [shape=cds, label=<<font color="black">35:app __x14__ = (CreateDataProperty A &quot;input&quot; S)</font>> color="black" fillcolor="white" style=filled]
  node12723 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node12740 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let matchSucceeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12752 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let lastIndex = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12733 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let sticky = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12754 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let e = r.endIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12726 [shape=cds, label=<<font color="black">3:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node12771 [shape=diamond, label=<<font color="black">(= captureI undefined)</font>> color="black" fillcolor="white" style=filled]
  node12775 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Else , id:{fullUnicode} is value:{false} , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12743 [shape=cds, label=<<font color="black">13:app __x7__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node12758 [shape=cds, label=<<font color="black">29:app __x11__ = (Set R &quot;lastIndex&quot; e true)</font>> color="black" fillcolor="white" style=filled]
  node12766 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x14__]</td></tr>
      <tr><td align="left">36:??? &quot;Let id:{matchedSubstr} be the matched substring ( i . e . the portion of id:{S} between offset id:{lastIndex} inclusive and offset id:{e} exclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12734 [shape=diamond, label=<<font color="black">(&amp;&amp; (= global false) (= sticky false))</font>> color="black" fillcolor="white" style=filled]
  node12729 [shape=cds, label=<<font color="black">4:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node12777 -> node12778 [ color="black"]
  node12746 -> node12747 [ color="black"]
  node12765 -> node12766 [ color="black"]
  node12776 -> node12777 [ color="black"]
  node12748 -> node12749 [label=<<font color="black">true</font>> color="black"]
  node12748 -> node12751 [label=<<font color="black">false</font>> color="black"]
  node12757 -> node12758 [label=<<font color="black">true</font>> color="black"]
  node12757 -> node12760 [label=<<font color="black">false</font>> color="black"]
  node12731 -> node12732 [ color="black"]
  node12729 -> node12730 [ color="black"]
  node12728 -> node12729 [ color="black"]
  node12721 -> node12723 [ color="black"]
  node12747 -> node12748 [label=<<font color="black">true</font>> color="black"]
  node12747 -> node12753 [label=<<font color="black">false</font>> color="black"]
  node12753 -> node12741 [ color="black"]
  node12759 -> node12760 [ color="black"]
  node12745 -> node12746 [ color="black"]
  node12749 -> node12750 [ color="black"]
  node12771 -> node12772 [label=<<font color="black">true</font>> color="black"]
  node12771 -> node12773 [label=<<font color="black">false</font>> color="black"]
  node12768 -> node12769 [ color="black"]
  node12725 -> node12726 [ color="black"]
  node12764 -> node12765 [ color="black"]
  node12772 -> node12775 [ color="black"]
  node12732 -> node12733 [ color="black"]
  node12734 -> node12735 [label=<<font color="black">true</font>> color="black"]
  node12734 -> node12736 [label=<<font color="black">false</font>> color="black"]
  node12724 -> node12725 [ color="black"]
  node12770 -> node12771 [ color="black"]
  node12744 -> node12745 [ color="black"]
  node12733 -> node12734 [ color="black"]
  node12751 -> node12752 [ color="black"]
  node12727 -> node12728 [ color="black"]
  node12755 -> node12756 [label=<<font color="black">true</font>> color="black"]
  node12755 -> node12757 [label=<<font color="black">false</font>> color="black"]
  node12735 -> node12736 [ color="black"]
  node12739 -> node12740 [ color="black"]
  node12754 -> node12755 [ color="black"]
  node12775 -> node12776 [ color="black"]
  node12752 -> node12741 [ color="black"]
  node12778 -> node12769 [ color="black"]
  node12767 -> node12768 [ color="black"]
  node12760 -> node12761 [ color="black"]
  node12738 -> node12740 [ color="black"]
  node12740 -> node12741 [ color="black"]
  node12774 -> node12775 [ color="black"]
  node12762 -> node12763 [ color="black"]
  node12741 -> node12742 [label=<<font color="black">true</font>> color="black"]
  node12741 -> node12754 [label=<<font color="black">false</font>> color="black"]
  node12769 -> node12770 [label=<<font color="black">true</font>> color="black"]
  node12769 -> node12779 [label=<<font color="black">false</font>> color="black"]
  node12737 -> node12738 [label=<<font color="black">true</font>> color="black"]
  node12737 -> node12739 [label=<<font color="black">false</font>> color="black"]
  node12736 -> node12737 [ color="black"]
  node12773 -> node12774 [label=<<font color="black">true</font>> color="black"]
  node12773 -> node12775 [label=<<font color="black">false</font>> color="black"]
  node12756 -> node12757 [ color="black"]
  node12742 -> node12743 [label=<<font color="black">true</font>> color="black"]
  node12742 -> node12745 [label=<<font color="black">false</font>> color="black"]
  node12750 -> node12751 [ color="black"]
  node12726 -> node12727 [ color="black"]
  node12730 -> node12731 [ color="black"]
  node12766 -> node12767 [ color="black"]
  node12723 -> node12724 [ color="black"]
  node12758 -> node12759 [ color="black"]
  node12763 -> node12764 [ color="black"]
  node12743 -> node12744 [ color="black"]
  node12761 -> node12762 [ color="black"]
  node12779 -> node12722 [ color="black"]
}
