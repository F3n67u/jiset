{
  app arguments = (GetArgument argumentsList 0i)
  [0] app __x0__ = (ToObject this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [32] {}
  [0] let O = __x0__
  [1] app __x1__ = (ArraySpeciesCreate O 0i)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [32] {}
  [1] let A = __x1__
  [2] let n = 0i
  [3] ??? "Let id:{items} be a List whose first element is id:{O} and whose subsequent elements are , in left to right order , the arguments that were passed to this function invocation ."
  [4] while (< 0i items.length) {
    [5] let E = (pop items 0i)
    [6] app __x2__ = (IsConcatSpreadable E)
    [6] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [32] {}
    [6] let spreadable = __x2__
    [19] if (= spreadable true) {
      [8] let k = 0i
      [9] app __x3__ = (Get E "length")
      [9] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [32] {}
      [9] app __x4__ = (ToLength __x3__)
      [9] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [32] {}
      [9] let len = __x4__
      [10] if (< (- 9007199254740992i 1i) (+ n len)) {
        app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
        return __x5__
      } else [32] {}
      [11] while (< k len) {
        [12] app __x6__ = (ToString k)
        [12] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [32] {}
        [12] let P = __x6__
        [13] app __x7__ = (HasProperty E P)
        [13] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [32] {}
        [13] let exists = __x7__
        [14] if (= exists true) {
          [15] app __x8__ = (Get E P)
          [15] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [32] {}
          [15] let subElement = __x8__
          [16] app __x9__ = (ToString n)
          [16] if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else [32] {}
          [16] app __x10__ = (CreateDataPropertyOrThrow A __x9__ subElement)
          [16] if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else [32] {}
          [16] __x10__
        } else [32] {}
        [17] n = (+ n 1i)
        [18] k = (+ k 1i)
      }
    } else {
      [20] if (! (< n (- 9007199254740992i 1i))) {
        app __x11__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
        return __x11__
      } else [32] {}
      [21] app __x12__ = (ToString n)
      [21] if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else [32] {}
      [21] app __x13__ = (CreateDataPropertyOrThrow A __x12__ E)
      [21] if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else [32] {}
      [21] __x13__
      [22] n = (+ n 1i)
    }
  }
  [23] app __x14__ = (Set A "length" n true)
  [23] if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else [32] {}
  [23] __x14__
  [24] app __x15__ = (WrapCompletion A)
  [24] return __x15__
}