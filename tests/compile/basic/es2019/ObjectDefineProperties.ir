{
  app __x0__ = (Type O)
  if (! (= __x0__ Object)) throw TypeError else {}
  app __x1__ = (ToObject Properties)
  let props = [? __x1__]
  app __x2__ = (props.OwnPropertyKeys props)
  let keys = [? __x2__]
  let descriptors = (new [])
  let __x3__ = keys
  let __x4__ = 0i
  while (< __x4__ __x3__.length) {
    let nextKey = __x3__[__x4__]
    app __x5__ = (props.GetOwnProperty props nextKey)
    let propDesc = [? __x5__]
    if (&& (! (= propDesc undefined)) (= propDesc.Enumerable true)) {
      app __x6__ = (Get props nextKey)
      let descObj = [? __x6__]
      app __x7__ = (ToPropertyDescriptor descObj)
      let desc = [? __x7__]
      append (new [nextKey, desc]) -> descriptors
    } else {}
    __x4__ = (+ __x4__ 1i)
  }
  let __x8__ = descriptors
  let __x9__ = 0i
  while (< __x9__ __x8__.length) {
    let pair = __x8__[__x9__]
    let P = pair[0i]
    let desc = pair[1i]
    app __x10__ = (DefinePropertyOrThrow O P desc)
    [? __x10__]
    __x9__ = (+ __x9__ 1i)
  }
  return O
}