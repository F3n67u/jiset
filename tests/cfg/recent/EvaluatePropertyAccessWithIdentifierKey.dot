digraph {
  node4543 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4546 [shape=cds, label=<<font color="black">1:app __x0__ = (RequireObjectCoercible baseValue)</font>> color="black" fillcolor="white" style=filled]
  node4544 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4545 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (is-instance-of identifierName IdentifierName)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4549 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let propertyNameString = __x1__</td></tr>
      <tr><td align="left">3:return (new ReferenceRecord(&quot;Base&quot; -&gt; bv, &quot;ReferencedName&quot; -&gt; propertyNameString, &quot;Strict&quot; -&gt; strict, &quot;ThisValue&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4548 [shape=cds, label=<<font color="black">2:access __x1__ = (identifierName &quot;StringValue&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4547 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let bv = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4549 -> node4544 [ color="black"]
  node4546 -> node4547 [ color="black"]
  node4548 -> node4549 [ color="black"]
  node4547 -> node4548 [ color="black"]
  node4543 -> node4545 [ color="black"]
  node4545 -> node4546 [ color="black"]
}
