digraph {
  node18228 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18240 [shape=cds, label=<<font color="black">app __x6__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18236 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18215 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18232 [shape=cds, label=<<font color="black">5:app __x4__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node18241 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x6__) (! (= __x6__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18239 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18225 [shape=cds, label=<<font color="black">app __x2__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18216 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18245 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18218 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18235 [shape=cds, label=<<font color="black">app __x5__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node18238 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18243 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18226 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x2__) (! (= __x2__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18230 [shape=cds, label=<<font color="black">4:app __x3__ = (PerformPromiseAll iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node18234 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node18237 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node18227 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18214 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18233 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18223 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18222 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18219 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18229 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18244 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18242 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18224 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18217 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18231 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let result = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18220 [shape=cds, label=<<font color="black">2:app __x1__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node18221 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iteratorRecord = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18224 -> node18229 [ color="black"]
  node18237 -> node18238 [label=<<font color="black">true</font>> color="black"]
  node18237 -> node18244 [label=<<font color="black">false</font>> color="black"]
  node18232 -> node18233 [ color="black"]
  node18226 -> node18227 [label=<<font color="black">true</font>> color="black"]
  node18226 -> node18228 [label=<<font color="black">false</font>> color="black"]
  node18233 -> node18234 [label=<<font color="black">true</font>> color="black"]
  node18233 -> node18245 [label=<<font color="black">false</font>> color="black"]
  node18228 -> node18229 [ color="black"]
  node18216 -> node18217 [ color="black"]
  node18220 -> node18221 [ color="black"]
  node18222 -> node18223 [label=<<font color="black">true</font>> color="black"]
  node18222 -> node18229 [label=<<font color="black">false</font>> color="black"]
  node18229 -> node18230 [ color="black"]
  node18243 -> node18244 [ color="black"]
  node18225 -> node18226 [ color="black"]
  node18231 -> node18232 [ color="black"]
  node18244 -> node18245 [ color="black"]
  node18230 -> node18231 [ color="black"]
  node18238 -> node18239 [label=<<font color="black">true</font>> color="black"]
  node18238 -> node18240 [label=<<font color="black">false</font>> color="black"]
  node18241 -> node18242 [label=<<font color="black">true</font>> color="black"]
  node18241 -> node18243 [label=<<font color="black">false</font>> color="black"]
  node18221 -> node18222 [ color="black"]
  node18218 -> node18219 [ color="black"]
  node18227 -> node18228 [ color="black"]
  node18234 -> node18235 [label=<<font color="black">true</font>> color="black"]
  node18234 -> node18237 [label=<<font color="black">false</font>> color="black"]
  node18223 -> node18224 [label=<<font color="black">true</font>> color="black"]
  node18223 -> node18225 [label=<<font color="black">false</font>> color="black"]
  node18242 -> node18243 [ color="black"]
  node18236 -> node18237 [ color="black"]
  node18219 -> node18220 [ color="black"]
  node18240 -> node18241 [ color="black"]
  node18217 -> node18218 [ color="black"]
  node18245 -> node18215 [ color="black"]
  node18214 -> node18216 [ color="black"]
  node18235 -> node18236 [ color="black"]
  node18239 -> node18244 [ color="black"]
}
