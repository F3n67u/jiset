digraph {
  node5069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5056 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5064 [shape=cds, label=<<font color="black">7:app __x3__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node5084 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:return __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5059 [shape=cds, label=<<font color="black">3:app __x1__ = (ArrayCreate 0i)</font>> color="black" fillcolor="white" style=filled]
  node5070 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node5066 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5082 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;Let id:{nestedAssignmentPattern} be the parse of the source text corresponding to nt:{DestructuringAssignmentTarget} using either nt:{AssignmentPattern} or nt:{AssignmentPattern[Yield]} as the goal symbol depending upon whether this nt:{AssignmentElement} has the sub:{[ Yield ]} parameter .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5057 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5062 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iteratorRecord.Iterator)</font>> color="black" fillcolor="white" style=filled]
  node5083 [shape=cds, label=<<font color="black">20:access __x9__ = (nestedAssignmentPattern &quot;DestructuringAssignmentEvaluation&quot; A)</font>> color="black" fillcolor="white" style=filled]
  node5068 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node5055 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5072 [shape=cds, label=<<font color="black">12:app __x5__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node5078 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let status = __x7__</td></tr>
      <tr><td align="left">15:assert (= status true)</td></tr>
      <tr><td align="left">16:n = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5073 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node5076 [shape=cds, label=<<font color="black">14:app __x6__ = (ToString n)</font>> color="black" fillcolor="white" style=filled]
  node5077 [shape=cds, label=<<font color="black">14:app __x7__ = (CreateDataProperty A [! __x6__] nextValue)</font>> color="black" fillcolor="white" style=filled]
  node5075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? nextValue]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5080 [shape=cds, label=<<font color="black">18:app __x8__ = (PutValue lref A)</font>> color="black" fillcolor="white" style=filled]
  node5063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5065 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node5067 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5054 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5079 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5061 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node5060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let A = __x1__</td></tr>
      <tr><td align="left">4:let n = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5056 -> node5057 [label=<<font color="black">true</font>> color="black"]
  node5056 -> node5059 [label=<<font color="black">false</font>> color="black"]
  node5067 -> node5068 [ color="black"]
  node5071 -> node5072 [ color="black"]
  node5075 -> node5076 [ color="black"]
  node5072 -> node5073 [ color="black"]
  node5070 -> node5071 [ color="black"]
  node5076 -> node5077 [ color="black"]
  node5065 -> node5066 [label=<<font color="black">true</font>> color="black"]
  node5065 -> node5067 [label=<<font color="black">false</font>> color="black"]
  node5074 -> node5075 [ color="black"]
  node5083 -> node5084 [ color="black"]
  node5077 -> node5078 [ color="black"]
  node5080 -> node5081 [ color="black"]
  node5064 -> node5065 [ color="black"]
  node5058 -> node5059 [ color="black"]
  node5084 -> node5055 [ color="black"]
  node5059 -> node5060 [ color="black"]
  node5081 -> node5082 [ color="black"]
  node5079 -> node5080 [label=<<font color="black">true</font>> color="black"]
  node5079 -> node5082 [label=<<font color="black">false</font>> color="black"]
  node5062 -> node5063 [ color="black"]
  node5054 -> node5056 [ color="black"]
  node5078 -> node5061 [ color="black"]
  node5082 -> node5083 [ color="black"]
  node5069 -> node5061 [ color="black"]
  node5068 -> node5069 [label=<<font color="black">true</font>> color="black"]
  node5068 -> node5070 [label=<<font color="black">false</font>> color="black"]
  node5061 -> node5062 [label=<<font color="black">true</font>> color="black"]
  node5061 -> node5079 [label=<<font color="black">false</font>> color="black"]
  node5063 -> node5064 [ color="black"]
  node5066 -> node5067 [ color="black"]
  node5073 -> node5074 [label=<<font color="black">true</font>> color="black"]
  node5073 -> node5075 [label=<<font color="black">false</font>> color="black"]
  node5057 -> node5058 [ color="black"]
  node5060 -> node5061 [ color="black"]
}
