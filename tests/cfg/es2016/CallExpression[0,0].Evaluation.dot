digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let func = [? __x1__]</td></tr>
      <tr><td align="left">2:let __x2__ = true</td></tr>
      <tr><td align="left">2:__x2__ = (= (typeof ref) Reference)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__ = (= __x4__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">0:access __x0__ = (MemberExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__ = (= __x5__ &quot;eval&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x3__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let argList = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">app __x5__ = (GetReferencedName ref)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">app __x4__ = (IsPropertyReference ref)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">1:app __x1__ = (GetValue ref)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">3:app __x6__ = (SameValue func INTRINSIC_eval)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=diamond, label=<<font color="black">(= (typeof ref) Reference)</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=cds, label=<<font color="black">11:app __x9__ = (IsPropertyReference ref)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:??? &quot;Else , the base of id:{ref} is an Environment Record in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let thisValue = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let evalText = argList[0i]</td></tr>
      <tr><td align="left">7:??? &quot;If the source code matching this nt:{CallExpression} is strict code , let id:{strictCaller} be value:{true} . Otherwise let id:{strictCaller} be value:{false} .&quot;</td></tr>
      <tr><td align="left">8:let evalRealm = REALM</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node33 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let tailCall = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=cds, label=<<font color="black">4:app __x7__ = (ArgumentListEvaluation Arguments)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=cds, label=<<font color="black">19:app __x11__ = (IsInTailPosition thisCall)</font>> color="black" fillcolor="white" style=filled]
  node34 [shape=cds, label=<<font color="black">20:app __x12__ = (EvaluateDirectCall func thisValue Arguments tailCall)</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">9:app __x8__ = (PerformEval evalText evalRealm strictCaller true)</font>> color="black" fillcolor="white" style=filled]
  node27 [shape=cds, label=<<font color="black">12:app __x10__ = (GetThisValue ref)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let ref = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node35 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:return [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=diamond, label=<<font color="black">(= __x6__ true)</font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let thisCall = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=diamond, label=<<font color="black">(= __x9__ true)</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let thisValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=diamond, label=<<font color="black">(= argList.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node28 -> node29 [ color="black"]
  node26 -> node27 [label=<<font color="black">true</font>> color="black"]
  node26 -> node29 [label=<<font color="black">false</font>> color="black"]
  node11 -> node12 [ color="black"]
  node13 -> node14 [ color="black"]
  node12 -> node13 [ color="black"]
  node22 -> node23 [ color="black"]
  node30 -> node31 [ color="black"]
  node35 -> node1 [ color="black"]
  node4 -> node5 [ color="black"]
  node25 -> node26 [ color="black"]
  node16 -> node17 [label=<<font color="black">true</font>> color="black"]
  node16 -> node24 [label=<<font color="black">false</font>> color="black"]
  node33 -> node34 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node7 -> node8 [ color="black"]
  node34 -> node35 [ color="black"]
  node18 -> node19 [ color="black"]
  node29 -> node31 [ color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node13 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node0 -> node2 [ color="black"]
  node19 -> node20 [label=<<font color="black">true</font>> color="black"]
  node19 -> node21 [label=<<font color="black">false</font>> color="black"]
  node9 -> node10 [ color="black"]
  node14 -> node15 [label=<<font color="black">true</font>> color="black"]
  node14 -> node24 [label=<<font color="black">false</font>> color="black"]
  node6 -> node7 [label=<<font color="black">true</font>> color="black"]
  node6 -> node14 [label=<<font color="black">false</font>> color="black"]
  node27 -> node28 [ color="black"]
  node23 -> node24 [ color="black"]
  node31 -> node32 [ color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [ color="black"]
  node20 -> node21 [ color="black"]
  node24 -> node25 [label=<<font color="black">true</font>> color="black"]
  node24 -> node30 [label=<<font color="black">false</font>> color="black"]
  node32 -> node33 [ color="black"]
  node17 -> node18 [ color="black"]
}
