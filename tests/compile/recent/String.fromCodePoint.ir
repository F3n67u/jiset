{
  app codePoints = (GetArgument argumentsList 0i)
  [0] let result = ""
  [1] let __x0__ = codePoints
  [1] let __x1__ = 0i
  [1] while (< __x1__ __x0__.length) {
    let next = __x0__[__x1__]
    [2] app __x2__ = (ToNumber next)
    [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [6] {}
    [2] let nextCP = __x2__
    [3] app __x3__ = (IsIntegralNumber nextCP)
    [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [6] {}
    [3] if (= __x3__ false) {
      app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x4__
    } else [6] {}
    [4] ??? "If ℝ ( id:{nextCP} ) < 0 or ℝ ( id:{nextCP} ) > 0x10FFFF , throw a value:{RangeError} exception ."
    [5] ??? "Set id:{result} to the string - concatenation of id:{result} and ! UTF16EncodeCodePoint ( ℝ ( id:{nextCP} ) ) ."
    __x1__ = (+ __x1__ 1i)
  }
  [7] app __x5__ = (WrapCompletion result)
  [7] return __x5__
}