digraph {
  node17094 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17090 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node17093 [shape=cds, label=<<font color="black">1:app __x1__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node17087 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17092 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17089 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17088 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17091 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17090 -> node17091 [ color="black"]
  node17089 -> node17090 [ color="black"]
  node17092 -> node17093 [ color="black"]
  node17094 -> node17088 [ color="black"]
  node17091 -> node17092 [label=<<font color="black">true</font>> color="black"]
  node17091 -> node17093 [label=<<font color="black">false</font>> color="black"]
  node17087 -> node17089 [ color="black"]
  node17093 -> node17094 [ color="black"]
}
