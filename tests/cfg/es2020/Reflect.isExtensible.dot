digraph {
  node18674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18671 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18673 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node18672 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node18676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18669 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18670 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18675 [shape=cds, label=<<font color="black">1:app __x1__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node18669 -> node18671 [ color="black"]
  node18672 -> node18673 [ color="black"]
  node18675 -> node18676 [ color="black"]
  node18676 -> node18670 [ color="black"]
  node18671 -> node18672 [ color="black"]
  node18674 -> node18675 [ color="black"]
  node18673 -> node18674 [label=<<font color="black">true</font>> color="black"]
  node18673 -> node18675 [label=<<font color="black">false</font>> color="black"]
}
