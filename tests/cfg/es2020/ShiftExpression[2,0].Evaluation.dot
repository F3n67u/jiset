digraph {
  node5385 [shape=cds, label=<<font color="black">7:app __x8__ = (Type lnum)</font>> color="black" fillcolor="white" style=filled]
  node5383 [shape=diamond, label=<<font color="black">(! (= __x6__ __x7__))</font>> color="black" fillcolor="white" style=filled]
  node5373 [shape=cds, label=<<font color="black">2:access __x2__ = (AdditiveExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5387 [shape=cds, label=<<font color="black">8:app __x9__ = (PRIMITIVE[T].signedRightShift lnum rnum)</font>> color="black" fillcolor="white" style=filled]
  node5381 [shape=cds, label=<<font color="black">6:app __x6__ = (Type lnum)</font>> color="black" fillcolor="white" style=filled]
  node5367 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5388 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5386 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let T = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5371 [shape=cds, label=<<font color="black">1:app __x1__ = (GetValue lref)</font>> color="black" fillcolor="white" style=filled]
  node5378 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let lnum = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5376 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let rval = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5379 [shape=cds, label=<<font color="black">5:app __x5__ = (ToNumeric rval)</font>> color="black" fillcolor="white" style=filled]
  node5370 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let lref = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5375 [shape=cds, label=<<font color="black">3:app __x3__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5384 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5374 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let rref = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5380 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let rnum = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5369 [shape=cds, label=<<font color="black">0:access __x0__ = (ShiftExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5372 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lval = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5377 [shape=cds, label=<<font color="black">4:app __x4__ = (ToNumeric lval)</font>> color="black" fillcolor="white" style=filled]
  node5382 [shape=cds, label=<<font color="black">6:app __x7__ = (Type rnum)</font>> color="black" fillcolor="white" style=filled]
  node5368 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5369 -> node5370 [ color="black"]
  node5382 -> node5383 [ color="black"]
  node5385 -> node5386 [ color="black"]
  node5371 -> node5372 [ color="black"]
  node5387 -> node5388 [ color="black"]
  node5378 -> node5379 [ color="black"]
  node5381 -> node5382 [ color="black"]
  node5384 -> node5385 [ color="black"]
  node5374 -> node5375 [ color="black"]
  node5380 -> node5381 [ color="black"]
  node5367 -> node5369 [ color="black"]
  node5372 -> node5373 [ color="black"]
  node5370 -> node5371 [ color="black"]
  node5373 -> node5374 [ color="black"]
  node5379 -> node5380 [ color="black"]
  node5376 -> node5377 [ color="black"]
  node5388 -> node5368 [ color="black"]
  node5386 -> node5387 [ color="black"]
  node5375 -> node5376 [ color="black"]
  node5383 -> node5384 [label=<<font color="black">true</font>> color="black"]
  node5383 -> node5385 [label=<<font color="black">false</font>> color="black"]
  node5377 -> node5378 [ color="black"]
}
