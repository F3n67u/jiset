digraph {
  node3414 [shape=cds, label=<<font color="black">13:app __x8__ = (SameValue V targetDesc.Value)</font>> color="black" fillcolor="white" style=filled]
  node3410 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let targetDesc = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3393 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node3418 [shape=diamond, label=<<font color="black">(= __x9__ true)</font>> color="black" fillcolor="white" style=filled]
  node3413 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x7__ true) (= targetDesc.Writable false))</font>> color="black" fillcolor="white" style=filled]
  node3407 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node3409 [shape=cds, label=<<font color="black">10:app __x6__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3396 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3404 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P, V, Receiver]))</font>> color="black" fillcolor="white" style=filled]
  node3416 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3419 [shape=diamond, label=<<font color="black">(= targetDesc.Set undefined)</font>> color="black" fillcolor="white" style=filled]
  node3395 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3391 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3412 [shape=cds, label=<<font color="black">12:app __x7__ = (IsDataDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3420 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3405 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node3399 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3397 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3417 [shape=cds, label=<<font color="black">14:app __x9__ = (IsAccessorDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3402 [shape=cds, label=<<font color="black">7:app __x3__ = (target.Set target P V Receiver)</font>> color="black" fillcolor="white" style=filled]
  node3421 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3406 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3403 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3408 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3415 [shape=diamond, label=<<font color="black">(= __x8__ false)</font>> color="black" fillcolor="white" style=filled]
  node3398 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3400 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3401 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3411 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= targetDesc undefined)) (= targetDesc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node3392 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3394 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3410 -> node3411 [ color="black"]
  node3396 -> node3397 [ color="black"]
  node3416 -> node3417 [ color="black"]
  node3405 -> node3406 [ color="black"]
  node3420 -> node3421 [ color="black"]
  node3397 -> node3398 [ color="black"]
  node3412 -> node3413 [ color="black"]
  node3401 -> node3402 [label=<<font color="black">true</font>> color="black"]
  node3401 -> node3404 [label=<<font color="black">false</font>> color="black"]
  node3408 -> node3409 [ color="black"]
  node3395 -> node3396 [label=<<font color="black">true</font>> color="black"]
  node3395 -> node3397 [label=<<font color="black">false</font>> color="black"]
  node3399 -> node3400 [ color="black"]
  node3419 -> node3420 [label=<<font color="black">true</font>> color="black"]
  node3419 -> node3421 [label=<<font color="black">false</font>> color="black"]
  node3403 -> node3404 [ color="black"]
  node3400 -> node3401 [ color="black"]
  node3394 -> node3395 [ color="black"]
  node3421 -> node3392 [ color="black"]
  node3418 -> node3419 [label=<<font color="black">true</font>> color="black"]
  node3418 -> node3421 [label=<<font color="black">false</font>> color="black"]
  node3413 -> node3414 [label=<<font color="black">true</font>> color="black"]
  node3413 -> node3417 [label=<<font color="black">false</font>> color="black"]
  node3414 -> node3415 [ color="black"]
  node3402 -> node3403 [ color="black"]
  node3415 -> node3416 [label=<<font color="black">true</font>> color="black"]
  node3415 -> node3417 [label=<<font color="black">false</font>> color="black"]
  node3393 -> node3394 [ color="black"]
  node3417 -> node3418 [ color="black"]
  node3391 -> node3393 [ color="black"]
  node3398 -> node3399 [ color="black"]
  node3411 -> node3412 [label=<<font color="black">true</font>> color="black"]
  node3411 -> node3421 [label=<<font color="black">false</font>> color="black"]
  node3407 -> node3408 [label=<<font color="black">true</font>> color="black"]
  node3407 -> node3409 [label=<<font color="black">false</font>> color="black"]
  node3406 -> node3407 [ color="black"]
  node3409 -> node3410 [ color="black"]
  node3404 -> node3405 [ color="black"]
}
