digraph {
  node14358 [shape=cds, label=<<font color="black">4:app __x1__ = (ArrayCreate numberOfArgs proto)</font>> color="black" fillcolor="white" style=filled]
  node14354 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14351 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14361 [shape=cds, label=<<font color="black">8:app __x2__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node14357 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let proto = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14363 [shape=cds, label=<<font color="black">10:app __x3__ = (CreateDataProperty array Pk itemK)</font>> color="black" fillcolor="white" style=filled]
  node14353 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node14352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let numberOfArgs = argumentsList.length</td></tr>
      <tr><td align="left">1:assert (! (&lt; numberOfArgs 2i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14362 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let Pk = [! __x2__]</td></tr>
      <tr><td align="left">9:let itemK = items[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14360 [shape=diamond, label=<<font color="black">(&lt; k numberOfArgs)</font>> color="black" fillcolor="white" style=filled]
  node14364 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let defineStatus = __x3__</td></tr>
      <tr><td align="left">11:assert (= defineStatus true)</td></tr>
      <tr><td align="left">12:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14365 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14349 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14356 [shape=cds, label=<<font color="black">3:app __x0__ = (GetPrototypeFromConstructor newTarget INTRINSIC_ArrayPrototype)</font>> color="black" fillcolor="white" style=filled]
  node14359 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let array = [? __x1__]</td></tr>
      <tr><td align="left">5:let k = 0i</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{items} be a zero - origined List containing the argument items in order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14350 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14362 -> node14363 [ color="black"]
  node14353 -> node14354 [label=<<font color="black">true</font>> color="black"]
  node14353 -> node14355 [label=<<font color="black">false</font>> color="black"]
  node14358 -> node14359 [ color="black"]
  node14361 -> node14362 [ color="black"]
  node14355 -> node14356 [ color="black"]
  node14365 -> node14350 [ color="black"]
  node14354 -> node14356 [ color="black"]
  node14356 -> node14357 [ color="black"]
  node14357 -> node14358 [ color="black"]
  node14351 -> node14352 [ color="black"]
  node14360 -> node14361 [label=<<font color="black">true</font>> color="black"]
  node14360 -> node14365 [label=<<font color="black">false</font>> color="black"]
  node14359 -> node14360 [ color="black"]
  node14364 -> node14360 [ color="black"]
  node14363 -> node14364 [ color="black"]
  node14349 -> node14351 [ color="black"]
  node14352 -> node14353 [ color="black"]
}
