{
  [0] app __x0__ = (IsPropertyKey P)
  [0] assert (= __x0__ true)
  [1] app __x1__ = (O.GetOwnProperty O P)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [15] {}
  [1] let hasOwn = __x1__
  [2] if (! (= hasOwn undefined)) {
    app __x2__ = (WrapCompletion true)
    return __x2__
  } else [15] {}
  [3] app __x3__ = (O.GetPrototypeOf O)
  [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [15] {}
  [3] let parent = __x3__
  [4] if (! (= parent null)) {
    [5] app __x4__ = (parent.HasProperty parent P)
    [5] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [15] {}
    [5] app __x5__ = (WrapCompletion __x4__)
    [5] return __x5__
  } else [15] {}
  [6] app __x6__ = (WrapCompletion false)
  [6] return __x6__
}