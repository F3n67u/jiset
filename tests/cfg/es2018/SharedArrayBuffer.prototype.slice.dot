digraph {
  node16673 [shape=diamond, label=<<font color="black">(&lt; relativeEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node16694 [shape=cds, label=<<font color="black">18:app __x12__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)</font>> color="black" fillcolor="white" style=filled]
  node16649 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16686 [shape=cds, label=<<font color="black">13:app __x11__ = (IsSharedArrayBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node16670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16674 [shape=cds, label=<<font color="black">app __x6__ = (max (+ len relativeEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node16653 [shape=cds, label=<<font color="black">1:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node16667 [shape=cds, label=<<font color="black">app __x4__ = (min relativeStart len)</font>> color="black" fillcolor="white" style=filled]
  node16671 [shape=cds, label=<<font color="black">app __x5__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node16662 [shape=cds, label=<<font color="black">5:app __x2__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node16676 [shape=cds, label=<<font color="black">app __x7__ = (min relativeEnd len)</font>> color="black" fillcolor="white" style=filled]
  node16658 [shape=cds, label=<<font color="black">3:app __x1__ = (IsSharedArrayBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node16688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16668 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16651 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16684 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node16689 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData O.ArrayBufferData)</font>> color="black" fillcolor="white" style=filled]
  node16672 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16680 [shape=cds, label=<<font color="black">10:app __x9__ = (SpeciesConstructor O INTRINSIC_SharedArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16693 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let fromBuf = O.ArrayBufferData</td></tr>
      <tr><td align="left">17:let toBuf = new.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16648 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16665 [shape=cds, label=<<font color="black">app __x3__ = (max (+ len relativeStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node16687 [shape=diamond, label=<<font color="black">(= __x11__ false)</font>> color="black" fillcolor="white" style=filled]
  node16661 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let len = O.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16657 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16656 [shape=diamond, label=<<font color="black">(= O.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node16683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let new = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16690 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16669 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node16664 [shape=diamond, label=<<font color="black">(&lt; relativeStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node16691 [shape=diamond, label=<<font color="black">(&lt; new.ArrayBufferByteLength newLen)</font>> color="black" fillcolor="white" style=filled]
  node16660 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16678 [shape=cds, label=<<font color="black">9:app __x8__ = (max (- final first) 0i)</font>> color="black" fillcolor="white" style=filled]
  node16695 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x12__</td></tr>
      <tr><td align="left">19:return new</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16692 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16675 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16682 [shape=cds, label=<<font color="black">11:app __x10__ = (Construct ctor (new [newLen]))</font>> color="black" fillcolor="white" style=filled]
  node16650 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16663 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let relativeStart = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16685 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let newLen = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let ctor = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16659 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16654 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16675 -> node16678 [ color="black"]
  node16673 -> node16674 [label=<<font color="black">true</font>> color="black"]
  node16673 -> node16676 [label=<<font color="black">false</font>> color="black"]
  node16685 -> node16686 [ color="black"]
  node16661 -> node16662 [ color="black"]
  node16680 -> node16681 [ color="black"]
  node16686 -> node16687 [ color="black"]
  node16679 -> node16680 [ color="black"]
  node16683 -> node16684 [ color="black"]
  node16688 -> node16689 [ color="black"]
  node16672 -> node16673 [ color="black"]
  node16655 -> node16656 [ color="black"]
  node16665 -> node16666 [ color="black"]
  node16678 -> node16679 [ color="black"]
  node16687 -> node16688 [label=<<font color="black">true</font>> color="black"]
  node16687 -> node16689 [label=<<font color="black">false</font>> color="black"]
  node16667 -> node16668 [ color="black"]
  node16648 -> node16650 [ color="black"]
  node16689 -> node16690 [label=<<font color="black">true</font>> color="black"]
  node16689 -> node16691 [label=<<font color="black">false</font>> color="black"]
  node16668 -> node16669 [ color="black"]
  node16653 -> node16654 [ color="black"]
  node16692 -> node16693 [ color="black"]
  node16651 -> node16652 [ color="black"]
  node16657 -> node16658 [ color="black"]
  node16677 -> node16678 [ color="black"]
  node16690 -> node16691 [ color="black"]
  node16659 -> node16660 [label=<<font color="black">true</font>> color="black"]
  node16659 -> node16661 [label=<<font color="black">false</font>> color="black"]
  node16658 -> node16659 [ color="black"]
  node16663 -> node16664 [ color="black"]
  node16676 -> node16677 [ color="black"]
  node16671 -> node16672 [ color="black"]
  node16669 -> node16670 [label=<<font color="black">true</font>> color="black"]
  node16669 -> node16671 [label=<<font color="black">false</font>> color="black"]
  node16670 -> node16673 [ color="black"]
  node16664 -> node16665 [label=<<font color="black">true</font>> color="black"]
  node16664 -> node16667 [label=<<font color="black">false</font>> color="black"]
  node16652 -> node16653 [ color="black"]
  node16656 -> node16657 [label=<<font color="black">true</font>> color="black"]
  node16656 -> node16658 [label=<<font color="black">false</font>> color="black"]
  node16654 -> node16655 [label=<<font color="black">true</font>> color="black"]
  node16654 -> node16656 [label=<<font color="black">false</font>> color="black"]
  node16660 -> node16661 [ color="black"]
  node16691 -> node16692 [label=<<font color="black">true</font>> color="black"]
  node16691 -> node16693 [label=<<font color="black">false</font>> color="black"]
  node16662 -> node16663 [ color="black"]
  node16650 -> node16651 [ color="black"]
  node16666 -> node16669 [ color="black"]
  node16694 -> node16695 [ color="black"]
  node16674 -> node16675 [ color="black"]
  node16682 -> node16683 [ color="black"]
  node16693 -> node16694 [ color="black"]
  node16695 -> node16649 [ color="black"]
  node16684 -> node16685 [label=<<font color="black">true</font>> color="black"]
  node16684 -> node16686 [label=<<font color="black">false</font>> color="black"]
  node16681 -> node16682 [ color="black"]
}
