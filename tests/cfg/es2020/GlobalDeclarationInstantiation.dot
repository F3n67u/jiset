digraph {
  node10668 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:let __x25__ = __x24__</td></tr>
      <tr><td align="left">38:let __x26__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:assert (|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10642 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let fnDefinable = [? __x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10609 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let lexNames = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10647 [shape=diamond, label=<<font color="black">(&lt; __x16__ __x15__.length)</font>> color="black" fillcolor="white" style=filled]
  node10638 [shape=cds, label=<<font color="black">18:access __x13__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10673 [shape=cds, label=<<font color="black">40:app __x28__ = (envRec.CreateImmutableBinding envRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node10679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let __x30__ = functionsToInitialize</td></tr>
      <tr><td align="left">43:let __x31__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10662 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x16__ = (+ __x16__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10616 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10633 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let varDeclarations = __x10__</td></tr>
      <tr><td align="left">12:let functionsToInitialize = (new [])</td></tr>
      <tr><td align="left">13:let declaredFunctionNames = (new [])</td></tr>
      <tr><td align="left">14:let __x11__ = varDeclarations</td></tr>
      <tr><td align="left">14:let __x12__ = __x11__.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10619 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10630 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10606 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10655 [shape=cds, label=<<font color="black">29:app __x20__ = (envRec.CanDeclareGlobalVar envRec vn)</font>> color="black" fillcolor="white" style=filled]
  node10687 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:[? __x34__]</td></tr>
      <tr><td align="left">__x31__ = (+ __x31__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10650 [shape=cds, label=<<font color="black">27:access __x17__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10665 [shape=diamond, label=<<font color="black">(&lt; __x23__ __x22__.length)</font>> color="black" fillcolor="white" style=filled]
  node10682 [shape=cds, label=<<font color="black">44:access __x32__ = (f &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10641 [shape=cds, label=<<font color="black">20:app __x14__ = (envRec.CanDeclareGlobalFunction envRec fn)</font>> color="black" fillcolor="white" style=filled]
  node10623 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10626 [shape=diamond, label=<<font color="black">(&lt; __x8__ __x7__.length)</font>> color="black" fillcolor="white" style=filled]
  node10670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x25__[__x26__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10690 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let vn = __x35__[__x36__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10693 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10652 [shape=diamond, label=<<font color="black">(&lt; __x19__ __x18__.length)</font>> color="black" fillcolor="white" style=filled]
  node10639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let fn = __x13__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10657 [shape=diamond, label=<<font color="black">(= vnDefinable false)</font>> color="black" fillcolor="white" style=filled]
  node10612 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node10634 [shape=diamond, label=<<font color="black">(&lt; 0i __x12__)</font>> color="black" fillcolor="white" style=filled]
  node10615 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node10644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10646 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">25:let __x15__ = varDeclarations</td></tr>
      <tr><td align="left">25:let __x16__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10661 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x19__ = (+ __x19__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x23__ = (+ __x23__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">42:[? __x29__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:let __x35__ = declaredVarNames</td></tr>
      <tr><td align="left">47:let __x36__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10671 [shape=cds, label=<<font color="black">41:access __x27__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10620 [shape=cds, label=<<font color="black">7:app __x6__ = (envRec.HasRestrictedGlobalProperty envRec name)</font>> color="black" fillcolor="white" style=filled]
  node10666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x22__[__x23__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10629 [shape=diamond, label=<<font color="black">(= __x9__ true)</font>> color="black" fillcolor="white" style=filled]
  node10651 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let __x18__ = __x17__</td></tr>
      <tr><td align="left">27:let __x19__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10614 [shape=cds, label=<<font color="black">5:app __x4__ = (envRec.HasVarDeclaration envRec name)</font>> color="black" fillcolor="white" style=filled]
  node10689 [shape=diamond, label=<<font color="black">(&lt; __x36__ __x35__.length)</font>> color="black" fillcolor="white" style=filled]
  node10656 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let vnDefinable = [? __x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x12__ = (- __x12__ 1i)</td></tr>
      <tr><td align="left">let d = __x11__[__x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">44:let fn = __x32__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10607 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let envRec = env.EnvironmentRecord</td></tr>
      <tr><td align="left">1:assert (= (typeof envRec) &quot;GlobalEnvironmentRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10625 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let __x7__ = varNames</td></tr>
      <tr><td align="left">9:let __x8__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10611 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let varNames = __x1__</td></tr>
      <tr><td align="left">4:let __x2__ = lexNames</td></tr>
      <tr><td align="left">4:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10640 [shape=diamond, label=<<font color="black">(! (contains declaredFunctionNames fn))</font>> color="black" fillcolor="white" style=filled]
  node10664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let lexDeclarations = __x21__</td></tr>
      <tr><td align="left">36:let __x22__ = lexDeclarations</td></tr>
      <tr><td align="left">36:let __x23__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x26__ = (+ __x26__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10675 [shape=cds, label=<<font color="black">42:app __x29__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10645 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:append fn -&gt; declaredFunctionNames</td></tr>
      <tr><td align="left">23:prepend d -&gt; functionsToInitialize</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let hasRestrictedGlobal = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10628 [shape=cds, label=<<font color="black">10:app __x9__ = (envRec.HasLexicalDeclaration envRec name)</font>> color="black" fillcolor="white" style=filled]
  node10660 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append vn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10692 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">48:[? __x37__]</td></tr>
      <tr><td align="left">__x36__ = (+ __x36__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10643 [shape=diamond, label=<<font color="black">(= fnDefinable false)</font>> color="black" fillcolor="white" style=filled]
  node10617 [shape=cds, label=<<font color="black">6:app __x5__ = (envRec.HasLexicalDeclaration envRec name)</font>> color="black" fillcolor="white" style=filled]
  node10632 [shape=cds, label=<<font color="black">11:access __x10__ = (script &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let vn = __x18__[__x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10672 [shape=diamond, label=<<font color="black">(= __x27__ true)</font>> color="black" fillcolor="white" style=filled]
  node10685 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:let fo = __x33__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10684 [shape=cds, label=<<font color="black">45:access __x33__ = (f &quot;InstantiateFunctionObject&quot; env)</font>> color="black" fillcolor="white" style=filled]
  node10667 [shape=cds, label=<<font color="black">38:access __x24__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10636 [shape=diamond, label=<<font color="black">(! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier)))</font>> color="black" fillcolor="white" style=filled]
  node10613 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x2__[__x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10608 [shape=cds, label=<<font color="black">2:access __x0__ = (script &quot;LexicallyDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10663 [shape=cds, label=<<font color="black">35:access __x21__ = (script &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:[? __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10680 [shape=diamond, label=<<font color="black">(&lt; __x31__ __x30__.length)</font>> color="black" fillcolor="white" style=filled]
  node10605 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10659 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames vn))</font>> color="black" fillcolor="white" style=filled]
  node10610 [shape=cds, label=<<font color="black">3:access __x1__ = (script &quot;VarDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10648 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x15__[__x16__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x7__[__x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let f = __x30__[__x31__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10631 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x8__ = (+ __x8__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10649 [shape=diamond, label=<<font color="black">(|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier))</font>> color="black" fillcolor="white" style=filled]
  node10691 [shape=cds, label=<<font color="black">48:app __x37__ = (envRec.CreateGlobalVarBinding envRec vn false)</font>> color="black" fillcolor="white" style=filled]
  node10622 [shape=diamond, label=<<font color="black">(= hasRestrictedGlobal true)</font>> color="black" fillcolor="white" style=filled]
  node10654 [shape=diamond, label=<<font color="black">(! (contains declaredFunctionNames vn))</font>> color="black" fillcolor="white" style=filled]
  node10618 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node10686 [shape=cds, label=<<font color="black">46:app __x34__ = (envRec.CreateGlobalFunctionBinding envRec fn fo false)</font>> color="black" fillcolor="white" style=filled]
  node10669 [shape=diamond, label=<<font color="black">(&lt; __x26__ __x25__.length)</font>> color="black" fillcolor="white" style=filled]
  node10689 -> node10690 [label=<<font color="black">true</font>> color="black"]
  node10689 -> node10693 [label=<<font color="black">false</font>> color="black"]
  node10657 -> node10658 [label=<<font color="black">true</font>> color="black"]
  node10657 -> node10659 [label=<<font color="black">false</font>> color="black"]
  node10688 -> node10689 [ color="black"]
  node10649 -> node10650 [label=<<font color="black">true</font>> color="black"]
  node10649 -> node10662 [label=<<font color="black">false</font>> color="black"]
  node10619 -> node10620 [ color="black"]
  node10612 -> node10613 [label=<<font color="black">true</font>> color="black"]
  node10612 -> node10625 [label=<<font color="black">false</font>> color="black"]
  node10644 -> node10645 [ color="black"]
  node10683 -> node10684 [ color="black"]
  node10637 -> node10638 [ color="black"]
  node10679 -> node10680 [ color="black"]
  node10674 -> node10677 [ color="black"]
  node10646 -> node10647 [ color="black"]
  node10668 -> node10669 [ color="black"]
  node10645 -> node10634 [ color="black"]
  node10663 -> node10664 [ color="black"]
  node10641 -> node10642 [ color="black"]
  node10680 -> node10681 [label=<<font color="black">true</font>> color="black"]
  node10680 -> node10688 [label=<<font color="black">false</font>> color="black"]
  node10624 -> node10612 [ color="black"]
  node10675 -> node10676 [ color="black"]
  node10658 -> node10659 [ color="black"]
  node10669 -> node10670 [label=<<font color="black">true</font>> color="black"]
  node10669 -> node10678 [label=<<font color="black">false</font>> color="black"]
  node10693 -> node10606 [ color="black"]
  node10653 -> node10654 [ color="black"]
  node10623 -> node10624 [ color="black"]
  node10631 -> node10626 [ color="black"]
  node10656 -> node10657 [ color="black"]
  node10630 -> node10631 [ color="black"]
  node10664 -> node10665 [ color="black"]
  node10622 -> node10623 [label=<<font color="black">true</font>> color="black"]
  node10622 -> node10624 [label=<<font color="black">false</font>> color="black"]
  node10671 -> node10672 [ color="black"]
  node10681 -> node10682 [ color="black"]
  node10659 -> node10660 [label=<<font color="black">true</font>> color="black"]
  node10659 -> node10661 [label=<<font color="black">false</font>> color="black"]
  node10682 -> node10683 [ color="black"]
  node10633 -> node10634 [ color="black"]
  node10678 -> node10665 [ color="black"]
  node10640 -> node10641 [label=<<font color="black">true</font>> color="black"]
  node10640 -> node10634 [label=<<font color="black">false</font>> color="black"]
  node10676 -> node10677 [ color="black"]
  node10611 -> node10612 [ color="black"]
  node10607 -> node10608 [ color="black"]
  node10618 -> node10619 [label=<<font color="black">true</font>> color="black"]
  node10618 -> node10620 [label=<<font color="black">false</font>> color="black"]
  node10686 -> node10687 [ color="black"]
  node10629 -> node10630 [label=<<font color="black">true</font>> color="black"]
  node10629 -> node10631 [label=<<font color="black">false</font>> color="black"]
  node10617 -> node10618 [ color="black"]
  node10660 -> node10661 [ color="black"]
  node10635 -> node10636 [ color="black"]
  node10662 -> node10647 [ color="black"]
  node10632 -> node10633 [ color="black"]
  node10652 -> node10653 [label=<<font color="black">true</font>> color="black"]
  node10652 -> node10662 [label=<<font color="black">false</font>> color="black"]
  node10677 -> node10669 [ color="black"]
  node10672 -> node10673 [label=<<font color="black">true</font>> color="black"]
  node10672 -> node10675 [label=<<font color="black">false</font>> color="black"]
  node10627 -> node10628 [ color="black"]
  node10636 -> node10637 [label=<<font color="black">true</font>> color="black"]
  node10636 -> node10634 [label=<<font color="black">false</font>> color="black"]
  node10639 -> node10640 [ color="black"]
  node10687 -> node10680 [ color="black"]
  node10667 -> node10668 [ color="black"]
  node10608 -> node10609 [ color="black"]
  node10692 -> node10689 [ color="black"]
  node10651 -> node10652 [ color="black"]
  node10670 -> node10671 [ color="black"]
  node10626 -> node10627 [label=<<font color="black">true</font>> color="black"]
  node10626 -> node10632 [label=<<font color="black">false</font>> color="black"]
  node10691 -> node10692 [ color="black"]
  node10684 -> node10685 [ color="black"]
  node10661 -> node10652 [ color="black"]
  node10614 -> node10615 [ color="black"]
  node10642 -> node10643 [ color="black"]
  node10685 -> node10686 [ color="black"]
  node10654 -> node10655 [label=<<font color="black">true</font>> color="black"]
  node10654 -> node10661 [label=<<font color="black">false</font>> color="black"]
  node10650 -> node10651 [ color="black"]
  node10609 -> node10610 [ color="black"]
  node10625 -> node10626 [ color="black"]
  node10620 -> node10621 [ color="black"]
  node10638 -> node10639 [ color="black"]
  node10613 -> node10614 [ color="black"]
  node10616 -> node10617 [ color="black"]
  node10647 -> node10648 [label=<<font color="black">true</font>> color="black"]
  node10647 -> node10663 [label=<<font color="black">false</font>> color="black"]
  node10648 -> node10649 [ color="black"]
  node10634 -> node10635 [label=<<font color="black">true</font>> color="black"]
  node10634 -> node10646 [label=<<font color="black">false</font>> color="black"]
  node10666 -> node10667 [ color="black"]
  node10690 -> node10691 [ color="black"]
  node10621 -> node10622 [ color="black"]
  node10665 -> node10666 [label=<<font color="black">true</font>> color="black"]
  node10665 -> node10679 [label=<<font color="black">false</font>> color="black"]
  node10643 -> node10644 [label=<<font color="black">true</font>> color="black"]
  node10643 -> node10645 [label=<<font color="black">false</font>> color="black"]
  node10673 -> node10674 [ color="black"]
  node10628 -> node10629 [ color="black"]
  node10610 -> node10611 [ color="black"]
  node10615 -> node10616 [label=<<font color="black">true</font>> color="black"]
  node10615 -> node10617 [label=<<font color="black">false</font>> color="black"]
  node10655 -> node10656 [ color="black"]
  node10605 -> node10607 [ color="black"]
}
