digraph {
  node7761 [shape=diamond, label=<<font color="black">(! (= __x3__ Object))</font>> color="black" fillcolor="white" style=filled]
  node7805 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7766 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return V</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7798 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let status = __x15__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7781 [shape=cds, label=<<font color="black">26:app __x10__ = (ResolveBinding lhsName)</font>> color="black" fillcolor="white" style=filled]
  node7813 [shape=cds, label=<<font color="black">52:access __x20__ = (stmt &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7793 [shape=cds, label=<<font color="black">36:access __x14__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7824 [shape=cds, label=<<font color="black">app __x24__ = (AsyncIteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7748 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorKind = CONST_sync</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7790 [shape=cds, label=<<font color="black">33:app __x13__ = (PutValue lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7825 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x24__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7822 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">59:status = __x23__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7771 [shape=cds, label=<<font color="black">16:access __x6__ = (lhs &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7754 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node7803 [shape=diamond, label=<<font color="black">__x17__</font>> color="black" fillcolor="white" style=filled]
  node7818 [shape=cds, label=<<font color="black">56:app __x22__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node7775 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let iterationEnv = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7792 [shape=diamond, label=<<font color="black">(= lhsKind CONST_assignment)</font>> color="black" fillcolor="white" style=filled]
  node7786 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let status = lhsRef</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7807 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7760 [shape=cds, label=<<font color="black">10:app __x3__ = (Type nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7758 [shape=cds, label=<<font color="black">app __x2__ = (Await nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7782 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let lhsRef = [! __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7745 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:let result = __x20__</td></tr>
      <tr><td align="left">53:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">61:return [? __x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7757 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7762 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:let status = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7767 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7750 [shape=cds, label=<<font color="black">3:access __x0__ = (lhs &quot;IsDestructuring&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7799 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">42:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7777 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:__x8__</td></tr>
      <tr><td align="left">22:GLOBAL_context.LexicalEnvironment = iterationEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7809 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7774 [shape=cds, label=<<font color="black">20:app __x7__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node7806 [shape=cds, label=<<font color="black">app __x18__ = (AsyncIteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7821 [shape=cds, label=<<font color="black">59:app __x23__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node7749 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">2:let V = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7789 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let status = __x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7826 [shape=cds, label=<<font color="black">61:app __x25__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7770 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7802 [shape=cds, label=<<font color="black">44:app __x17__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node7817 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (is-instance-of lhs LeftHandSideExpression)</td></tr>
      <tr><td align="left">6:let assignmentPattern = (parse-syntax lhs &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7785 [shape=diamond, label=<<font color="black">__x11__</font>> color="black" fillcolor="white" style=filled]
  node7751 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let destructuring = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7815 [shape=cds, label=<<font color="black">54:app __x21__ = (LoopContinues result labelSet)</font>> color="black" fillcolor="white" style=filled]
  node7763 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorComplete nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7828 [shape=diamond, label=<<font color="black">(! (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node7795 [shape=diamond, label=<<font color="black">(= lhsKind CONST_varBinding)</font>> color="black" fillcolor="white" style=filled]
  node7800 [shape=cds, label=<<font color="black">43:access __x16__ = (lhs &quot;BindingInitialization&quot; nextValue iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node7746 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7783 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">50:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7768 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">58:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7778 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7788 [shape=cds, label=<<font color="black">31:app __x12__ = (InitializeReferencedBinding lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7773 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">19:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7801 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let status = __x16__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7756 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let nextResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7811 [shape=cds, label=<<font color="black">51:app __x19__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7796 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:assert (is-instance-of lhs ForBinding)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7769 [shape=diamond, label=<<font color="black">(|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding))</font>> color="black" fillcolor="white" style=filled]
  node7752 [shape=diamond, label=<<font color="black">(&amp;&amp; (= destructuring true) (= lhsKind CONST_assignment))</font>> color="black" fillcolor="white" style=filled]
  node7779 [shape=cds, label=<<font color="black">25:access __x9__ = (lhs &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7797 [shape=cds, label=<<font color="black">39:access __x15__ = (lhs &quot;BindingInitialization&quot; nextValue undefined)</font>> color="black" fillcolor="white" style=filled]
  node7784 [shape=cds, label=<<font color="black">32:app __x11__ = (IsAbruptCompletion lhsRef)</font>> color="black" fillcolor="white" style=filled]
  node7764 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let done = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7816 [shape=diamond, label=<<font color="black">(= __x21__ false)</font>> color="black" fillcolor="white" style=filled]
  node7765 [shape=diamond, label=<<font color="black">(= done true)</font>> color="black" fillcolor="white" style=filled]
  node7747 [shape=diamond, label=<<font color="black">(= iteratorKind absent)</font>> color="black" fillcolor="white" style=filled]
  node7804 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7759 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">nextResult = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7787 [shape=diamond, label=<<font color="black">(= lhsKind CONST_lexicalBinding)</font>> color="black" fillcolor="white" style=filled]
  node7772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let lhsRef = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7808 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">56:return __x22__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">V = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7755 [shape=cds, label=<<font color="black">8:app __x1__ = (Call iteratorRecord.NextMethod iteratorRecord.Iterator)</font>> color="black" fillcolor="white" style=filled]
  node7780 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let lhsName = __x9__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7791 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let status = __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7776 [shape=cds, label=<<font color="black">21:access __x8__ = (lhs &quot;BindingInstantiation&quot; iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node7812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:return [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7823 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7798 -> node7802 [ color="black"]
  node7810 -> node7811 [ color="black"]
  node7758 -> node7759 [ color="black"]
  node7768 -> node7769 [ color="black"]
  node7769 -> node7770 [label=<<font color="black">true</font>> color="black"]
  node7769 -> node7773 [label=<<font color="black">false</font>> color="black"]
  node7819 -> node7828 [ color="black"]
  node7782 -> node7783 [ color="black"]
  node7772 -> node7783 [ color="black"]
  node7756 -> node7757 [ color="black"]
  node7788 -> node7789 [ color="black"]
  node7787 -> node7788 [label=<<font color="black">true</font>> color="black"]
  node7787 -> node7790 [label=<<font color="black">false</font>> color="black"]
  node7752 -> node7753 [label=<<font color="black">true</font>> color="black"]
  node7752 -> node7754 [label=<<font color="black">false</font>> color="black"]
  node7820 -> node7821 [ color="black"]
  node7750 -> node7751 [ color="black"]
  node7796 -> node7797 [ color="black"]
  node7806 -> node7807 [ color="black"]
  node7754 -> node7755 [label=<<font color="black">true</font>> color="black"]
  node7754 -> node7746 [label=<<font color="black">false</font>> color="black"]
  node7800 -> node7801 [ color="black"]
  node7815 -> node7816 [ color="black"]
  node7749 -> node7750 [ color="black"]
  node7762 -> node7763 [ color="black"]
  node7823 -> node7824 [label=<<font color="black">true</font>> color="black"]
  node7823 -> node7826 [label=<<font color="black">false</font>> color="black"]
  node7778 -> node7779 [label=<<font color="black">true</font>> color="black"]
  node7778 -> node7783 [label=<<font color="black">false</font>> color="black"]
  node7795 -> node7796 [label=<<font color="black">true</font>> color="black"]
  node7795 -> node7799 [label=<<font color="black">false</font>> color="black"]
  node7771 -> node7772 [ color="black"]
  node7760 -> node7761 [ color="black"]
  node7829 -> node7754 [ color="black"]
  node7777 -> node7778 [ color="black"]
  node7789 -> node7802 [ color="black"]
  node7811 -> node7812 [ color="black"]
  node7790 -> node7791 [ color="black"]
  node7809 -> node7813 [ color="black"]
  node7822 -> node7823 [ color="black"]
  node7784 -> node7785 [ color="black"]
  node7803 -> node7804 [label=<<font color="black">true</font>> color="black"]
  node7803 -> node7813 [label=<<font color="black">false</font>> color="black"]
  node7757 -> node7758 [label=<<font color="black">true</font>> color="black"]
  node7757 -> node7760 [label=<<font color="black">false</font>> color="black"]
  node7761 -> node7762 [label=<<font color="black">true</font>> color="black"]
  node7761 -> node7763 [label=<<font color="black">false</font>> color="black"]
  node7812 -> node7813 [ color="black"]
  node7763 -> node7764 [ color="black"]
  node7767 -> node7768 [ color="black"]
  node7773 -> node7774 [ color="black"]
  node7813 -> node7814 [ color="black"]
  node7792 -> node7793 [label=<<font color="black">true</font>> color="black"]
  node7792 -> node7795 [label=<<font color="black">false</font>> color="black"]
  node7783 -> node7784 [label=<<font color="black">true</font>> color="black"]
  node7783 -> node7792 [label=<<font color="black">false</font>> color="black"]
  node7786 -> node7802 [ color="black"]
  node7770 -> node7771 [label=<<font color="black">true</font>> color="black"]
  node7770 -> node7783 [label=<<font color="black">false</font>> color="black"]
  node7781 -> node7782 [ color="black"]
  node7817 -> node7818 [label=<<font color="black">true</font>> color="black"]
  node7817 -> node7820 [label=<<font color="black">false</font>> color="black"]
  node7748 -> node7749 [ color="black"]
  node7821 -> node7822 [ color="black"]
  node7774 -> node7775 [ color="black"]
  node7804 -> node7805 [ color="black"]
  node7818 -> node7819 [ color="black"]
  node7802 -> node7803 [ color="black"]
  node7779 -> node7780 [ color="black"]
  node7825 -> node7826 [ color="black"]
  node7797 -> node7798 [ color="black"]
  node7755 -> node7756 [ color="black"]
  node7827 -> node7828 [ color="black"]
  node7799 -> node7800 [ color="black"]
  node7775 -> node7776 [ color="black"]
  node7816 -> node7817 [label=<<font color="black">true</font>> color="black"]
  node7816 -> node7828 [label=<<font color="black">false</font>> color="black"]
  node7765 -> node7766 [label=<<font color="black">true</font>> color="black"]
  node7765 -> node7767 [label=<<font color="black">false</font>> color="black"]
  node7766 -> node7767 [ color="black"]
  node7824 -> node7825 [ color="black"]
  node7793 -> node7794 [ color="black"]
  node7747 -> node7748 [label=<<font color="black">true</font>> color="black"]
  node7747 -> node7749 [label=<<font color="black">false</font>> color="black"]
  node7785 -> node7786 [label=<<font color="black">true</font>> color="black"]
  node7785 -> node7787 [label=<<font color="black">false</font>> color="black"]
  node7776 -> node7777 [ color="black"]
  node7759 -> node7760 [ color="black"]
  node7780 -> node7781 [ color="black"]
  node7814 -> node7815 [ color="black"]
  node7794 -> node7802 [ color="black"]
  node7805 -> node7806 [label=<<font color="black">true</font>> color="black"]
  node7805 -> node7808 [label=<<font color="black">false</font>> color="black"]
  node7753 -> node7754 [ color="black"]
  node7828 -> node7829 [label=<<font color="black">true</font>> color="black"]
  node7828 -> node7754 [label=<<font color="black">false</font>> color="black"]
  node7791 -> node7802 [ color="black"]
  node7801 -> node7802 [ color="black"]
  node7751 -> node7752 [ color="black"]
  node7807 -> node7808 [ color="black"]
  node7745 -> node7747 [ color="black"]
  node7826 -> node7827 [ color="black"]
  node7808 -> node7809 [label=<<font color="black">true</font>> color="black"]
  node7808 -> node7810 [label=<<font color="black">false</font>> color="black"]
  node7764 -> node7765 [ color="black"]
}
