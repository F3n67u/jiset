["Let", {
  "id": "varNames"
}, "be", "the", "VarDeclaredNames", "of", {
  "id": "body"
}, ".", {
  "k": 0
}, "Let", {
  "id": "varDeclarations"
}, "be", "the", "VarScopedDeclarations", "of", {
  "id": "body"
}, ".", {
  "k": 1
}, "Let", {
  "id": "lexEnvRec"
}, "be", {
  "id": "lexEnv"
}, "'", "s", "EnvironmentRecord", ".", {
  "k": 2
}, "Let", {
  "id": "varEnvRec"
}, "be", {
  "id": "varEnv"
}, "'", "s", "EnvironmentRecord", ".", {
  "k": 3
}, "If", {
  "id": "strict"
}, "is", {
  "value": "false"
}, ",", "then", true, "If", {
  "id": "varEnvRec"
}, "is", "a", "global", "Environment", "Record", ",", "then", true, "For", "each", {
  "id": "name"
}, "in", {
  "id": "varNames"
}, ",", "do", true, "If", {
  "id": "varEnvRec"
}, ".", "HasLexicalDeclaration", "(", {
  "id": "name"
}, ")", "is", {
  "value": "true"
}, ",", "throw", "a", {
  "value": "SyntaxError"
}, "exception", ".", {
  "k": 7
}, "NOTE", ":", {
  "code": "eval"
}, "will", "not", "create", "a", "global", "var", "declaration", "that", "would", "be", "shadowed", "by", "a", "global", "lexical", "declaration", ".", {
  "k": 8
}, false, {
  "k": 6
}, false, {
  "k": 5
}, "Let", {
  "id": "thisLex"
}, "be", {
  "id": "lexEnv"
}, ".", {
  "k": 9
}, "Assert", ":", "the", "following", "loop", "will", "terminate", ".", {
  "k": 10
}, "Repeat", "while", {
  "id": "thisLex"
}, "is", "not", "the", "same", "as", {
  "id": "varEnv"
}, ",", true, "Let", {
  "id": "thisEnvRec"
}, "be", {
  "id": "thisLex"
}, "'", "s", "EnvironmentRecord", ".", {
  "k": 12
}, "If", {
  "id": "thisEnvRec"
}, "is", "not", "an", "object", "Environment", "Record", ",", "then", true, "NOTE", ":", "The", "environment", "of", "with", "statements", "cannot", "contain", "any", "lexical", "declaration", "so", "it", "doesn", "'", "t", "need", "to", "be", "checked", "for", "var", "/", "let", "hoisting", "conflicts", ".", {
  "k": 14
}, "For", "each", {
  "id": "name"
}, "in", {
  "id": "varNames"
}, ",", "do", true, "If", {
  "id": "thisEnvRec"
}, ".", "HasBinding", "(", {
  "id": "name"
}, ")", "is", {
  "value": "true"
}, ",", "then", true, "Throw", "a", {
  "value": "SyntaxError"
}, "exception", ".", {
  "k": 17
}, false, {
  "k": 16
}, "NOTE", ":", "A", "direct", "eval", "will", "not", "hoist", "var", "declaration", "over", "a", "like", "-", "named", "lexical", "declaration", ".", {
  "k": 18
}, false, {
  "k": 15
}, false, {
  "k": 13
}, "Let", {
  "id": "thisLex"
}, "be", {
  "id": "thisLex"
}, "'", "s", "outer", "environment", "reference", ".", {
  "k": 19
}, false, {
  "k": 11
}, false, {
  "k": 4
}, "Let", {
  "id": "functionsToInitialize"
}, "be", "a", "new", "empty", "List", ".", {
  "k": 20
}, "Let", {
  "id": "declaredFunctionNames"
}, "be", "a", "new", "empty", "List", ".", {
  "k": 21
}, "For", "each", {
  "id": "d"
}, "in", {
  "id": "varDeclarations"
}, ",", "in", "reverse", "list", "order", "do", true, "If", {
  "id": "d"
}, "is", "neither", "a", {
  "nt": "VariableDeclaration"
}, "or", "a", {
  "nt": "ForBinding"
}, ",", "then", true, "Assert", ":", {
  "id": "d"
}, "is", "either", "a", {
  "nt": "FunctionDeclaration"
}, "or", "a", {
  "nt": "GeneratorDeclaration"
}, ".", {
  "k": 24
}, "NOTE", "If", "there", "are", "multiple", {
  "nt": "FunctionDeclaration"
}, "s", "for", "the", "same", "name", ",", "the", "last", "declaration", "is", "used", ".", {
  "k": 25
}, "Let", {
  "id": "fn"
}, "be", "the", "sole", "element", "of", "the", "BoundNames", "of", {
  "id": "d"
}, ".", {
  "k": 26
}, "If", {
  "id": "fn"
}, "is", "not", "an", "element", "of", {
  "id": "declaredFunctionNames"
}, ",", "then", true, "If", {
  "id": "varEnvRec"
}, "is", "a", "global", "Environment", "Record", ",", "then", true, "Let", {
  "id": "fnDefinable"
}, "be", "?", {
  "id": "varEnvRec"
}, ".", "CanDeclareGlobalFunction", "(", {
  "id": "fn"
}, ")", ".", {
  "k": 29
}, "If", {
  "id": "fnDefinable"
}, "is", {
  "value": "false"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 30
}, false, {
  "k": 28
}, "Append", {
  "id": "fn"
}, "to", {
  "id": "declaredFunctionNames"
}, ".", {
  "k": 31
}, "Insert", {
  "id": "d"
}, "as", "the", "first", "element", "of", {
  "id": "functionsToInitialize"
}, ".", {
  "k": 32
}, false, {
  "k": 27
}, false, {
  "k": 23
}, false, {
  "k": 22
}, "NOTE", ":", "Annex", {
  "link": ""
}, "adds", "additional", "steps", "at", "this", "point", ".", {
  "k": 33
}, "Let", {
  "id": "declaredVarNames"
}, "be", "a", "new", "empty", "List", ".", {
  "k": 34
}, "For", "each", {
  "id": "d"
}, "in", {
  "id": "varDeclarations"
}, ",", "do", true, "If", {
  "id": "d"
}, "is", "a", {
  "nt": "VariableDeclaration"
}, "or", "a", {
  "nt": "ForBinding"
}, ",", "then", true, "For", "each", "String", {
  "id": "vn"
}, "in", "the", "BoundNames", "of", {
  "id": "d"
}, ",", "do", true, "If", {
  "id": "vn"
}, "is", "not", "an", "element", "of", {
  "id": "declaredFunctionNames"
}, ",", "then", true, "If", {
  "id": "varEnvRec"
}, "is", "a", "global", "Environment", "Record", ",", "then", true, "Let", {
  "id": "vnDefinable"
}, "be", "?", {
  "id": "varEnvRec"
}, ".", "CanDeclareGlobalVar", "(", {
  "id": "vn"
}, ")", ".", {
  "k": 40
}, "If", {
  "id": "vnDefinable"
}, "is", {
  "value": "false"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 41
}, false, {
  "k": 39
}, "If", {
  "id": "vn"
}, "is", "not", "an", "element", "of", {
  "id": "declaredVarNames"
}, ",", "then", true, "Append", {
  "id": "vn"
}, "to", {
  "id": "declaredVarNames"
}, ".", {
  "k": 43
}, false, {
  "k": 42
}, false, {
  "k": 38
}, false, {
  "k": 37
}, false, {
  "k": 36
}, false, {
  "k": 35
}, "NOTE", ":", "No", "abnormal", "terminations", "occur", "after", "this", "algorithm", "step", "unless", {
  "id": "varEnvRec"
}, "is", "a", "global", "Environment", "Record", "and", "the", "global", "object", "is", "a", "Proxy", "exotic", "object", ".", {
  "k": 44
}, "Let", {
  "id": "lexDeclarations"
}, "be", "the", "LexicallyScopedDeclarations", "of", {
  "id": "body"
}, ".", {
  "k": 45
}, "For", "each", "element", {
  "id": "d"
}, "in", {
  "id": "lexDeclarations"
}, "do", true, "NOTE", "Lexically", "declared", "names", "are", "only", "instantiated", "here", "but", "not", "initialized", ".", {
  "k": 47
}, "For", "each", "element", {
  "id": "dn"
}, "of", "the", "BoundNames", "of", {
  "id": "d"
}, "do", true, "If", "IsConstantDeclaration", "of", {
  "id": "d"
}, "is", {
  "value": "true"
}, ",", "then", true, "Perform", "?", {
  "id": "lexEnvRec"
}, ".", "CreateImmutableBinding", "(", {
  "id": "dn"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 50
}, false, {
  "k": 49
}, "Else", ",", true, "Perform", "?", {
  "id": "lexEnvRec"
}, ".", "CreateMutableBinding", "(", {
  "id": "dn"
}, ",", {
  "value": "false"
}, ")", ".", {
  "k": 52
}, false, {
  "k": 51
}, false, {
  "k": 48
}, false, {
  "k": 46
}, "For", "each", "production", {
  "id": "f"
}, "in", {
  "id": "functionsToInitialize"
}, ",", "do", true, "Let", {
  "id": "fn"
}, "be", "the", "sole", "element", "of", "the", "BoundNames", "of", {
  "id": "f"
}, ".", {
  "k": 54
}, "Let", {
  "id": "fo"
}, "be", "the", "result", "of", "performing", "InstantiateFunctionObject", "for", {
  "id": "f"
}, "with", "argument", {
  "id": "lexEnv"
}, ".", {
  "k": 55
}, "If", {
  "id": "varEnvRec"
}, "is", "a", "global", "Environment", "Record", ",", "then", true, "Perform", "?", {
  "id": "varEnvRec"
}, ".", "CreateGlobalFunctionBinding", "(", {
  "id": "fn"
}, ",", {
  "id": "fo"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 57
}, false, {
  "k": 56
}, "Else", ",", true, "Let", {
  "id": "bindingExists"
}, "be", {
  "id": "varEnvRec"
}, ".", "HasBinding", "(", {
  "id": "fn"
}, ")", ".", {
  "k": 59
}, "If", {
  "id": "bindingExists"
}, "is", {
  "value": "false"
}, ",", "then", true, "Let", {
  "id": "status"
}, "be", "!", {
  "id": "varEnvRec"
}, ".", "CreateMutableBinding", "(", {
  "id": "fn"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 61
}, "Assert", ":", {
  "id": "status"
}, "is", "not", "an", "abrupt", "completion", "because", "of", "validation", "preceding", "step", "12", ".", {
  "k": 62
}, "Perform", "!", {
  "id": "varEnvRec"
}, ".", "InitializeBinding", "(", {
  "id": "fn"
}, ",", {
  "id": "fo"
}, ")", ".", {
  "k": 63
}, false, {
  "k": 60
}, "Else", ",", true, "Perform", "!", {
  "id": "varEnvRec"
}, ".", "SetMutableBinding", "(", {
  "id": "fn"
}, ",", {
  "id": "fo"
}, ",", {
  "value": "false"
}, ")", ".", {
  "k": 65
}, false, {
  "k": 64
}, false, {
  "k": 58
}, false, {
  "k": 53
}, "For", "each", "String", {
  "id": "vn"
}, "in", {
  "id": "declaredVarNames"
}, ",", "in", "list", "order", "do", true, "If", {
  "id": "varEnvRec"
}, "is", "a", "global", "Environment", "Record", ",", "then", true, "Perform", "?", {
  "id": "varEnvRec"
}, ".", "CreateGlobalVarBinding", "(", {
  "id": "vn"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 68
}, false, {
  "k": 67
}, "Else", ",", true, "Let", {
  "id": "bindingExists"
}, "be", {
  "id": "varEnvRec"
}, ".", "HasBinding", "(", {
  "id": "vn"
}, ")", ".", {
  "k": 70
}, "If", {
  "id": "bindingExists"
}, "is", {
  "value": "false"
}, ",", "then", true, "Let", {
  "id": "status"
}, "be", "!", {
  "id": "varEnvRec"
}, ".", "CreateMutableBinding", "(", {
  "id": "vn"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 72
}, "Assert", ":", {
  "id": "status"
}, "is", "not", "an", "abrupt", "completion", "because", "of", "validation", "preceding", "step", "12", ".", {
  "k": 73
}, "Perform", "!", {
  "id": "varEnvRec"
}, ".", "InitializeBinding", "(", {
  "id": "vn"
}, ",", {
  "value": "undefined"
}, ")", ".", {
  "k": 74
}, false, {
  "k": 71
}, false, {
  "k": 69
}, false, {
  "k": 66
}, "Return", "NormalCompletion", "(", {
  "const": "empty"
}, ")", ".", {
  "k": 75
}]