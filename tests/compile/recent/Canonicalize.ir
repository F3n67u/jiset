{
  [0] if (&& (= Unicode true) (= IgnoreCase true)) {
    [1] ??? "If the file CaseFolding . txt of the Unicode Character Database provides a simple or common case folding mapping for id:{ch} , return the result of applying that mapping to id:{ch} ."
    [2] app __x0__ = (WrapCompletion ch)
    [2] return __x0__
  } else [4] {}
  [3] if (= IgnoreCase false) {
    app __x1__ = (WrapCompletion ch)
    return __x1__
  } else [4] {}
  [5] ??? "Let id:{cp} be the code point whose numeric value is that of id:{ch} ."
  [6] ??? "Let id:{u} be the result of toUppercase ( « id:{cp} » ) , according to the Unicode Default Case Conversion algorithm ."
  [7] app __x2__ = (CodePointsToString u)
  [7] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [4] {}
  [7] let uStr = __x2__
  [8] ??? "If id:{uStr} does not consist of a single code unit , return id:{ch} ."
  [9] ??? "Let id:{cu} be id:{uStr} ' s single code unit element ."
  [10] ??? "If the numeric value of id:{ch} ≥ 128 and the numeric value of id:{cu} < 128 , return id:{ch} ."
  [11] app __x3__ = (WrapCompletion cu)
  [11] return __x3__
}