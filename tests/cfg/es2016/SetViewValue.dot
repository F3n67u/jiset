digraph {
  node15098 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15083 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let numberIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15077 [shape=cds, label=<<font color="black">0:app __x0__ = (Type view)</font>> color="black" fillcolor="white" style=filled]
  node15093 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node15078 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15089 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let numberValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15086 [shape=diamond, label=<<font color="black">(|| (! (== numberIndex getIndex)) (&lt; getIndex 0i))</font>> color="black" fillcolor="white" style=filled]
  node15081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15094 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15090 [shape=cds, label=<<font color="black">6:app __x4__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15084 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger numberIndex)</font>> color="black" fillcolor="white" style=filled]
  node15099 [shape=cds, label=<<font color="black">14:app __x6__ = (SetValueInBuffer buffer bufferIndex type numberValue isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node15088 [shape=cds, label=<<font color="black">5:app __x3__ = (ToNumber value)</font>> color="black" fillcolor="white" style=filled]
  node15076 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15091 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let isLittleEndian = __x4__</td></tr>
      <tr><td align="left">7:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15096 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node15092 [shape=cds, label=<<font color="black">8:app __x5__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15087 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15082 [shape=cds, label=<<font color="black">2:app __x1__ = (ToNumber requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node15097 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15080 [shape=diamond, label=<<font color="black">(= view.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node15075 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">10:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15085 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let getIndex = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15094 -> node15095 [ color="black"]
  node15097 -> node15098 [ color="black"]
  node15091 -> node15092 [ color="black"]
  node15093 -> node15094 [label=<<font color="black">true</font>> color="black"]
  node15093 -> node15095 [label=<<font color="black">false</font>> color="black"]
  node15077 -> node15078 [ color="black"]
  node15086 -> node15087 [label=<<font color="black">true</font>> color="black"]
  node15086 -> node15088 [label=<<font color="black">false</font>> color="black"]
  node15088 -> node15089 [ color="black"]
  node15100 -> node15076 [ color="black"]
  node15083 -> node15084 [ color="black"]
  node15092 -> node15093 [ color="black"]
  node15089 -> node15090 [ color="black"]
  node15087 -> node15088 [ color="black"]
  node15082 -> node15083 [ color="black"]
  node15084 -> node15085 [ color="black"]
  node15081 -> node15082 [ color="black"]
  node15075 -> node15077 [ color="black"]
  node15079 -> node15080 [ color="black"]
  node15090 -> node15091 [ color="black"]
  node15078 -> node15079 [label=<<font color="black">true</font>> color="black"]
  node15078 -> node15080 [label=<<font color="black">false</font>> color="black"]
  node15098 -> node15099 [ color="black"]
  node15080 -> node15081 [label=<<font color="black">true</font>> color="black"]
  node15080 -> node15082 [label=<<font color="black">false</font>> color="black"]
  node15085 -> node15086 [ color="black"]
  node15096 -> node15097 [label=<<font color="black">true</font>> color="black"]
  node15096 -> node15098 [label=<<font color="black">false</font>> color="black"]
  node15099 -> node15100 [ color="black"]
  node15095 -> node15096 [ color="black"]
}
