digraph {
  node6074 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6078 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white" style=filled]
  node6081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6075 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6080 [shape=cds, label=<<font color="black">2:access __x1__ = (BindingProperty &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6076 [shape=cds, label=<<font color="black">0:access __x0__ = (BindingPropertyList &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6077 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let has = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6079 -> node6080 [ color="black"]
  node6077 -> node6078 [ color="black"]
  node6081 -> node6075 [ color="black"]
  node6078 -> node6079 [label=<<font color="black">true</font>> color="black"]
  node6078 -> node6080 [label=<<font color="black">false</font>> color="black"]
  node6080 -> node6081 [ color="black"]
  node6074 -> node6076 [ color="black"]
  node6076 -> node6077 [ color="black"]
}
