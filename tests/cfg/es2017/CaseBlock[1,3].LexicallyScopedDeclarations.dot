digraph {
  node7064 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return declarations</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let __x2__ = __x1__</td></tr>
      <tr><td align="left">2:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7063 [shape=diamond, label=<<font color="black">(= CaseClauses1 absent)</font>> color="black" fillcolor="white" style=filled]
  node7065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Return the result of appending to id:{declarations} the elements of the LexicallyScopedDeclarations of the second nt:{CaseClauses} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; declarations</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7053 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7061 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node7054 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7059 [shape=cds, label=<<font color="black">2:access __x1__ = (DefaultClause &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7055 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node7056 [shape=cds, label=<<font color="black">access __x0__ = (CaseClauses0 &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7057 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let declarations = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7060 -> node7061 [ color="black"]
  node7055 -> node7056 [label=<<font color="black">true</font>> color="black"]
  node7055 -> node7058 [label=<<font color="black">false</font>> color="black"]
  node7062 -> node7061 [ color="black"]
  node7065 -> node7054 [ color="black"]
  node7057 -> node7059 [ color="black"]
  node7056 -> node7057 [ color="black"]
  node7064 -> node7065 [ color="black"]
  node7061 -> node7062 [label=<<font color="black">true</font>> color="black"]
  node7061 -> node7063 [label=<<font color="black">false</font>> color="black"]
  node7058 -> node7059 [ color="black"]
  node7063 -> node7064 [label=<<font color="black">true</font>> color="black"]
  node7063 -> node7065 [label=<<font color="black">false</font>> color="black"]
  node7059 -> node7060 [ color="black"]
  node7053 -> node7055 [ color="black"]
}
