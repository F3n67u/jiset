digraph {
  node17143 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17136 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17139 [shape=cds, label=<<font color="black">app __x1__ = (IsValidSimpleAssignmentTarget LeftHandSideExpression)</font>> color="black" fillcolor="white" style=filled]
  node17142 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17138 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node17141 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node17137 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;It is a Syntax Error if nt:{LeftHandSideExpression} is either an nt:{ObjectLiteral} or an nt:{ArrayLiteral} and if the lexical token sequence matched by nt:{LeftHandSideExpression} cannot be parsed with no tokens left over using nt:{AssignmentPattern} as the goal symbol .&quot;</td></tr>
      <tr><td align="left">1:let __x0__ = true</td></tr>
      <tr><td align="left">1:__x0__ = (! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17140 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = (= __x1__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17135 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17139 -> node17140 [ color="black"]
  node17141 -> node17142 [label=<<font color="black">true</font>> color="black"]
  node17141 -> node17143 [label=<<font color="black">false</font>> color="black"]
  node17143 -> node17136 [ color="black"]
  node17140 -> node17141 [ color="black"]
  node17142 -> node17136 [ color="black"]
  node17138 -> node17139 [label=<<font color="black">true</font>> color="black"]
  node17138 -> node17141 [label=<<font color="black">false</font>> color="black"]
  node17137 -> node17138 [ color="black"]
  node17135 -> node17137 [ color="black"]
}
