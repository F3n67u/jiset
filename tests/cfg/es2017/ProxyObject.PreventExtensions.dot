digraph {
  node2744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2740 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2750 [shape=cds, label=<<font color="black">7:app __x3__ = (Call trap handler (new [target]))</font>> color="black" fillcolor="white" style=filled]
  node2756 [shape=diamond, label=<<font color="black">(= targetIsExtensible true)</font>> color="black" fillcolor="white" style=filled]
  node2752 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let booleanTrapResult = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2747 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2743 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2739 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2754 [shape=cds, label=<<font color="black">9:app __x5__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node2755 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let targetIsExtensible = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2745 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;preventExtensions&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2758 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return booleanTrapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2741 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2749 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2748 [shape=cds, label=<<font color="black">6:app __x2__ = (target.PreventExtensions target)</font>> color="black" fillcolor="white" style=filled]
  node2738 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2753 [shape=diamond, label=<<font color="black">(= booleanTrapResult true)</font>> color="black" fillcolor="white" style=filled]
  node2742 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2757 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2751 [shape=cds, label=<<font color="black">7:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node2746 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2756 -> node2757 [label=<<font color="black">true</font>> color="black"]
  node2756 -> node2758 [label=<<font color="black">false</font>> color="black"]
  node2750 -> node2751 [ color="black"]
  node2746 -> node2747 [ color="black"]
  node2753 -> node2754 [label=<<font color="black">true</font>> color="black"]
  node2753 -> node2758 [label=<<font color="black">false</font>> color="black"]
  node2754 -> node2755 [ color="black"]
  node2741 -> node2742 [label=<<font color="black">true</font>> color="black"]
  node2741 -> node2743 [label=<<font color="black">false</font>> color="black"]
  node2742 -> node2743 [ color="black"]
  node2745 -> node2746 [ color="black"]
  node2749 -> node2750 [ color="black"]
  node2752 -> node2753 [ color="black"]
  node2738 -> node2740 [ color="black"]
  node2757 -> node2758 [ color="black"]
  node2744 -> node2745 [ color="black"]
  node2758 -> node2739 [ color="black"]
  node2740 -> node2741 [ color="black"]
  node2751 -> node2752 [ color="black"]
  node2748 -> node2749 [ color="black"]
  node2747 -> node2748 [label=<<font color="black">true</font>> color="black"]
  node2747 -> node2750 [label=<<font color="black">false</font>> color="black"]
  node2755 -> node2756 [ color="black"]
  node2743 -> node2744 [ color="black"]
}
