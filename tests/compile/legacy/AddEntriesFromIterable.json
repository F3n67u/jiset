["If", "IsCallable", "(", {
  "id": "adder"
}, ")", "is", {
  "value": "false"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 0
}, "Assert", ":", {
  "id": "iterable"
}, "is", "present", ",", "and", "is", "neither", {
  "value": "undefined"
}, "nor", {
  "value": "null"
}, ".", {
  "k": 1
}, "Let", {
  "id": "iteratorRecord"
}, "be", "?", "GetIterator", "(", {
  "id": "iterable"
}, ")", ".", {
  "k": 2
}, "Repeat", ",", {
  "in": null
}, "Let", {
  "id": "next"
}, "be", "?", "IteratorStep", "(", {
  "id": "iteratorRecord"
}, ")", ".", {
  "k": 4
}, "If", {
  "id": "next"
}, "is", {
  "value": "false"
}, ",", "return", {
  "id": "target"
}, ".", {
  "k": 5
}, "Let", {
  "id": "nextItem"
}, "be", "?", "IteratorValue", "(", {
  "id": "next"
}, ")", ".", {
  "k": 6
}, "If", "Type", "(", {
  "id": "nextItem"
}, ")", "is", "not", "Object", ",", "then", {
  "in": null
}, "Let", {
  "id": "error"
}, "be", "ThrowCompletion", "(", "a", "newly", "created", {
  "value": "TypeError"
}, "object", ")", ".", {
  "k": 8
}, "Return", "?", "IteratorClose", "(", {
  "id": "iteratorRecord"
}, ",", {
  "id": "error"
}, ")", ".", {
  "k": 9
}, {
  "out": null
}, {
  "k": 7
}, "Let", {
  "id": "k"
}, "be", "Get", "(", {
  "id": "nextItem"
}, ",", {
  "value": "\"0\""
}, ")", ".", {
  "k": 10
}, "If", {
  "id": "k"
}, "is", "an", "abrupt", "completion", ",", "return", "?", "IteratorClose", "(", {
  "id": "iteratorRecord"
}, ",", {
  "id": "k"
}, ")", ".", {
  "k": 11
}, "Let", {
  "id": "v"
}, "be", "Get", "(", {
  "id": "nextItem"
}, ",", {
  "value": "\"1\""
}, ")", ".", {
  "k": 12
}, "If", {
  "id": "v"
}, "is", "an", "abrupt", "completion", ",", "return", "?", "IteratorClose", "(", {
  "id": "iteratorRecord"
}, ",", {
  "id": "v"
}, ")", ".", {
  "k": 13
}, "Let", {
  "id": "status"
}, "be", "Call", "(", {
  "id": "adder"
}, ",", {
  "id": "target"
}, ",", "«", {
  "id": "k"
}, ".", "[", "[", "Value", "]", "]", ",", {
  "id": "v"
}, ".", "[", "[", "Value", "]", "]", "»", ")", ".", {
  "k": 14
}, "If", {
  "id": "status"
}, "is", "an", "abrupt", "completion", ",", "return", "?", "IteratorClose", "(", {
  "id": "iteratorRecord"
}, ",", {
  "id": "status"
}, ")", ".", {
  "k": 15
}, {
  "out": null
}, {
  "k": 3
}]
