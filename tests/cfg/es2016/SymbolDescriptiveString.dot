digraph {
  node10812 [shape=cds, label=<<font color="black">3:app __x1__ = (Type desc)</font>> color="black" fillcolor="white" style=filled]
  node10805 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10807 [shape=cds, label=<<font color="black">app sym = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10811 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let desc = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10808 [shape=cds, label=<<font color="black">0:app __x0__ = (Type sym)</font>> color="black" fillcolor="white" style=filled]
  node10810 [shape=diamond, label=<<font color="black">(= desc undefined)</font>> color="black" fillcolor="white" style=filled]
  node10806 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10809 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Symbol)</td></tr>
      <tr><td align="left">1:let desc = sym.Description</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10813 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ String)</td></tr>
      <tr><td align="left">4:return (+ (+ &quot;Symbol(&quot; desc) &quot;)&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10807 -> node10808 [ color="black"]
  node10812 -> node10813 [ color="black"]
  node10813 -> node10806 [ color="black"]
  node10805 -> node10807 [ color="black"]
  node10810 -> node10811 [label=<<font color="black">true</font>> color="black"]
  node10810 -> node10812 [label=<<font color="black">false</font>> color="black"]
  node10811 -> node10812 [ color="black"]
  node10809 -> node10810 [ color="black"]
  node10808 -> node10809 [ color="black"]
}
