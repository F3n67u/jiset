digraph {
  node11068 [shape=cds, label=<<font color="black">2:app __x1__ = (ToInteger month)</font>> color="black" fillcolor="white" style=filled]
  node11064 [shape=diamond, label=<<font color="black">(|| (|| (= year Infinity) (= year -Infinity)) (|| (|| (= month Infinity) (= month -Infinity)) (|| (= date Infinity) (= date -Infinity))))</font>> color="black" fillcolor="white" style=filled]
  node11069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let m = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11074 [shape=cds, label=<<font color="black">7:app __x4__ = (Day t)</font>> color="black" fillcolor="white" style=filled]
  node11065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return NaN</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11063 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11070 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger date)</font>> color="black" fillcolor="white" style=filled]
  node11073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let ym = (+ y __x3__)</td></tr>
      <tr><td align="left">5:let mn = (%% m 12i)</td></tr>
      <tr><td align="left">6:??? &quot;Find a value id:{t} such that YearFromTime ( id:{t} ) is id:{ym} and MonthFromTime ( id:{t} ) is id:{mn} and DateFromTime ( id:{t} ) is 1 ; but if this is not possible ( because some argument is out of range ) , return value:{NaN} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11062 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11066 [shape=cds, label=<<font color="black">1:app __x0__ = (ToInteger year)</font>> color="black" fillcolor="white" style=filled]
  node11071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let dt = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11067 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let y = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11072 [shape=cds, label=<<font color="black">4:app __x3__ = (floor (/ m 12i))</font>> color="black" fillcolor="white" style=filled]
  node11075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return (- (+ __x4__ dt) 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11073 -> node11074 [ color="black"]
  node11064 -> node11065 [label=<<font color="black">true</font>> color="black"]
  node11064 -> node11066 [label=<<font color="black">false</font>> color="black"]
  node11072 -> node11073 [ color="black"]
  node11074 -> node11075 [ color="black"]
  node11066 -> node11067 [ color="black"]
  node11062 -> node11064 [ color="black"]
  node11067 -> node11068 [ color="black"]
  node11065 -> node11066 [ color="black"]
  node11075 -> node11063 [ color="black"]
  node11068 -> node11069 [ color="black"]
  node11069 -> node11070 [ color="black"]
  node11071 -> node11072 [ color="black"]
  node11070 -> node11071 [ color="black"]
}
