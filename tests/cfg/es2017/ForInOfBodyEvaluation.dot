digraph {
  node6754 [shape=cds, label=<<font color="black">16:app __x4__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node6781 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let status = __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6745 [shape=diamond, label=<<font color="black">(= nextResult false)</font>> color="black" fillcolor="white" style=filled]
  node6773 [shape=cds, label=<<font color="black">32:access __x11__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6763 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6756 [shape=cds, label=<<font color="black">17:access __x5__ = (lhs &quot;BindingInstantiation&quot; iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node6792 [shape=cds, label=<<font color="black">49:app __x17__ = (LoopContinues result labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6774 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let status = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6762 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let lhsRef = [! __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6791 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:let result = __x16__</td></tr>
      <tr><td align="left">48:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let nextResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6796 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:return __x18__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6798 [shape=cds, label=<<font color="black">54:app __x19__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node6776 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:assert (is-instance-of lhs ForBinding)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6764 [shape=cds, label=<<font color="black">28:app __x8__ = (IsAbruptCompletion lhsRef)</font>> color="black" fillcolor="white" style=filled]
  node6759 [shape=cds, label=<<font color="black">21:access __x6__ = (lhs &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6766 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let status = lhsRef</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6749 [shape=diamond, label=<<font color="black">(|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding))</font>> color="black" fillcolor="white" style=filled]
  node6755 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let iterationEnv = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6772 [shape=diamond, label=<<font color="black">(= lhsKind CONST_assignment)</font>> color="black" fillcolor="white" style=filled]
  node6787 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6777 [shape=cds, label=<<font color="black">35:access __x12__ = (lhs &quot;BindingInitialization&quot; nextValue undefined)</font>> color="black" fillcolor="white" style=filled]
  node6740 [shape=diamond, label=<<font color="black">(&amp;&amp; (= destructuring true) (= lhsKind CONST_assignment))</font>> color="black" fillcolor="white" style=filled]
  node6760 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let lhsName = __x6__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (is-instance-of lhs LeftHandSideExpression)</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{assignmentPattern} be the parse of the source text corresponding to id:{lhs} using nt:{AssignmentPattern} as the goal symbol .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6795 [shape=cds, label=<<font color="black">51:app __x18__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node6748 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextValue = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6801 [shape=diamond, label=<<font color="black">(! (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node6780 [shape=cds, label=<<font color="black">39:access __x13__ = (lhs &quot;BindingInitialization&quot; nextValue iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node6752 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let lhsRef = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6788 [shape=cds, label=<<font color="black">46:app __x15__ = (IteratorClose iterator status)</font>> color="black" fillcolor="white" style=filled]
  node6784 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6794 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node6757 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:__x5__</td></tr>
      <tr><td align="left">18:GLOBAL_context.LexicalEnvironment = iterationEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6742 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node6779 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">38:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6737 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">1:let V = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6789 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:return [? __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6769 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let status = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6800 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">54:return [? __x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6747 [shape=cds, label=<<font color="black">9:app __x2__ = (IteratorValue nextResult)</font>> color="black" fillcolor="white" style=filled]
  node6802 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">V = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6738 [shape=cds, label=<<font color="black">2:access __x0__ = (lhs &quot;IsDestructuring&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6783 [shape=diamond, label=<<font color="black">__x14__</font>> color="black" fillcolor="white" style=filled]
  node6736 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6785 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node6768 [shape=cds, label=<<font color="black">27:app __x9__ = (InitializeReferencedBinding lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6751 [shape=cds, label=<<font color="black">12:access __x3__ = (lhs &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6746 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return V</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6775 [shape=diamond, label=<<font color="black">(= lhsKind CONST_varBinding)</font>> color="black" fillcolor="white" style=filled]
  node6793 [shape=diamond, label=<<font color="black">(= __x17__ false)</font>> color="black" fillcolor="white" style=filled]
  node6758 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6743 [shape=cds, label=<<font color="black">7:app __x1__ = (IteratorStep iterator)</font>> color="black" fillcolor="white" style=filled]
  node6753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">15:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6790 [shape=cds, label=<<font color="black">47:access __x16__ = (stmt &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6770 [shape=cds, label=<<font color="black">29:app __x10__ = (PutValue lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6799 [shape=cds, label=<<font color="black">54:app __x20__ = (IteratorClose iterator __x19__)</font>> color="black" fillcolor="white" style=filled]
  node6786 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6782 [shape=cds, label=<<font color="black">40:app __x14__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node6735 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6765 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node6771 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let status = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6750 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6778 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let status = __x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6797 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6767 [shape=diamond, label=<<font color="black">(= lhsKind CONST_lexicalBinding)</font>> color="black" fillcolor="white" style=filled]
  node6761 [shape=cds, label=<<font color="black">22:app __x7__ = (ResolveBinding lhsName)</font>> color="black" fillcolor="white" style=filled]
  node6739 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let destructuring = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6797 -> node6798 [ color="black"]
  node6747 -> node6748 [ color="black"]
  node6755 -> node6756 [ color="black"]
  node6753 -> node6754 [ color="black"]
  node6774 -> node6782 [ color="black"]
  node6740 -> node6741 [label=<<font color="black">true</font>> color="black"]
  node6740 -> node6742 [label=<<font color="black">false</font>> color="black"]
  node6758 -> node6759 [label=<<font color="black">true</font>> color="black"]
  node6758 -> node6763 [label=<<font color="black">false</font>> color="black"]
  node6785 -> node6786 [label=<<font color="black">true</font>> color="black"]
  node6785 -> node6787 [label=<<font color="black">false</font>> color="black"]
  node6786 -> node6790 [ color="black"]
  node6801 -> node6802 [label=<<font color="black">true</font>> color="black"]
  node6801 -> node6742 [label=<<font color="black">false</font>> color="black"]
  node6772 -> node6773 [label=<<font color="black">true</font>> color="black"]
  node6772 -> node6775 [label=<<font color="black">false</font>> color="black"]
  node6768 -> node6769 [ color="black"]
  node6754 -> node6755 [ color="black"]
  node6761 -> node6762 [ color="black"]
  node6792 -> node6793 [ color="black"]
  node6757 -> node6758 [ color="black"]
  node6790 -> node6791 [ color="black"]
  node6784 -> node6785 [ color="black"]
  node6770 -> node6771 [ color="black"]
  node6778 -> node6782 [ color="black"]
  node6795 -> node6796 [ color="black"]
  node6746 -> node6747 [ color="black"]
  node6738 -> node6739 [ color="black"]
  node6791 -> node6792 [ color="black"]
  node6802 -> node6742 [ color="black"]
  node6744 -> node6745 [ color="black"]
  node6775 -> node6776 [label=<<font color="black">true</font>> color="black"]
  node6775 -> node6779 [label=<<font color="black">false</font>> color="black"]
  node6782 -> node6783 [ color="black"]
  node6737 -> node6738 [ color="black"]
  node6769 -> node6782 [ color="black"]
  node6799 -> node6800 [ color="black"]
  node6748 -> node6749 [ color="black"]
  node6749 -> node6750 [label=<<font color="black">true</font>> color="black"]
  node6749 -> node6753 [label=<<font color="black">false</font>> color="black"]
  node6745 -> node6746 [label=<<font color="black">true</font>> color="black"]
  node6745 -> node6747 [label=<<font color="black">false</font>> color="black"]
  node6750 -> node6751 [label=<<font color="black">true</font>> color="black"]
  node6750 -> node6763 [label=<<font color="black">false</font>> color="black"]
  node6796 -> node6801 [ color="black"]
  node6763 -> node6764 [label=<<font color="black">true</font>> color="black"]
  node6763 -> node6772 [label=<<font color="black">false</font>> color="black"]
  node6742 -> node6743 [label=<<font color="black">true</font>> color="black"]
  node6742 -> node6736 [label=<<font color="black">false</font>> color="black"]
  node6741 -> node6742 [ color="black"]
  node6789 -> node6790 [ color="black"]
  node6773 -> node6774 [ color="black"]
  node6779 -> node6780 [ color="black"]
  node6756 -> node6757 [ color="black"]
  node6752 -> node6763 [ color="black"]
  node6767 -> node6768 [label=<<font color="black">true</font>> color="black"]
  node6767 -> node6770 [label=<<font color="black">false</font>> color="black"]
  node6771 -> node6782 [ color="black"]
  node6781 -> node6782 [ color="black"]
  node6777 -> node6778 [ color="black"]
  node6743 -> node6744 [ color="black"]
  node6776 -> node6777 [ color="black"]
  node6764 -> node6765 [ color="black"]
  node6787 -> node6788 [ color="black"]
  node6760 -> node6761 [ color="black"]
  node6780 -> node6781 [ color="black"]
  node6794 -> node6795 [label=<<font color="black">true</font>> color="black"]
  node6794 -> node6797 [label=<<font color="black">false</font>> color="black"]
  node6765 -> node6766 [label=<<font color="black">true</font>> color="black"]
  node6765 -> node6767 [label=<<font color="black">false</font>> color="black"]
  node6751 -> node6752 [ color="black"]
  node6788 -> node6789 [ color="black"]
  node6800 -> node6801 [ color="black"]
  node6766 -> node6782 [ color="black"]
  node6783 -> node6784 [label=<<font color="black">true</font>> color="black"]
  node6783 -> node6790 [label=<<font color="black">false</font>> color="black"]
  node6762 -> node6763 [ color="black"]
  node6793 -> node6794 [label=<<font color="black">true</font>> color="black"]
  node6793 -> node6801 [label=<<font color="black">false</font>> color="black"]
  node6735 -> node6737 [ color="black"]
  node6798 -> node6799 [ color="black"]
  node6759 -> node6760 [ color="black"]
  node6739 -> node6740 [ color="black"]
}
