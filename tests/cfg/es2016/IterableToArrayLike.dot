digraph {
  node14521 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14527 [shape=diamond, label=<<font color="black">(! (= next false))</font>> color="black" fillcolor="white" style=filled]
  node14524 [shape=diamond, label=<<font color="black">(! (= usingIterator undefined))</font>> color="black" fillcolor="white" style=filled]
  node14520 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14529 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14526 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = [? __x1__]</td></tr>
      <tr><td align="left">3:let values = (new [])</td></tr>
      <tr><td align="left">4:let next = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14534 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14523 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let usingIterator = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14525 [shape=cds, label=<<font color="black">2:app __x1__ = (GetIterator items usingIterator)</font>> color="black" fillcolor="white" style=filled]
  node14522 [shape=cds, label=<<font color="black">0:app __x0__ = (GetMethod items SYMBOL_iterator)</font>> color="black" fillcolor="white" style=filled]
  node14536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14528 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iterator)</font>> color="black" fillcolor="white" style=filled]
  node14531 [shape=cds, label=<<font color="black">8:app __x3__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node14533 [shape=cds, label=<<font color="black">10:app __x4__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node14532 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let nextValue = [? __x3__]</td></tr>
      <tr><td align="left">9:append nextValue -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14535 [shape=cds, label=<<font color="black">12:app __x5__ = (ToObject items)</font>> color="black" fillcolor="white" style=filled]
  node14530 [shape=diamond, label=<<font color="black">(! (= next false))</font>> color="black" fillcolor="white" style=filled]
  node14526 -> node14527 [ color="black"]
  node14532 -> node14527 [ color="black"]
  node14535 -> node14536 [ color="black"]
  node14528 -> node14529 [ color="black"]
  node14524 -> node14525 [label=<<font color="black">true</font>> color="black"]
  node14524 -> node14535 [label=<<font color="black">false</font>> color="black"]
  node14530 -> node14531 [label=<<font color="black">true</font>> color="black"]
  node14530 -> node14527 [label=<<font color="black">false</font>> color="black"]
  node14520 -> node14522 [ color="black"]
  node14536 -> node14521 [ color="black"]
  node14533 -> node14534 [ color="black"]
  node14531 -> node14532 [ color="black"]
  node14527 -> node14528 [label=<<font color="black">true</font>> color="black"]
  node14527 -> node14533 [label=<<font color="black">false</font>> color="black"]
  node14525 -> node14526 [ color="black"]
  node14523 -> node14524 [ color="black"]
  node14529 -> node14530 [ color="black"]
  node14534 -> node14535 [ color="black"]
  node14522 -> node14523 [ color="black"]
}
