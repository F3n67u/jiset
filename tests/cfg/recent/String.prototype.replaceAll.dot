digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=diamond, label=<<font color="black">(! (|| (= searchValue undefined) (= searchValue null)))</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app searchValue = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=cds, label=<<font color="black">4:app __x2__ = (Get searchValue &quot;flags&quot;)</font>> color="black" fillcolor="white" style=filled]
  node56 [shape=diamond, label=<<font color="black">(&lt; endOfLastMatch string.length)</font>> color="black" fillcolor="white" style=filled]
  node42 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let p = __x14__[__x15__]</td></tr>
      <tr><td align="left">25:let __x16__ = &quot;&quot;</td></tr>
      <tr><td align="left">25:let __x17__ = endOfLastMatch</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node24 [shape=cds, label=<<font color="black">11:app __x8__ = (ToString searchValue)</font>> color="black" fillcolor="white" style=filled]
  node37 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:append position -&gt; matchPositions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let searchString = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node52 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:assert (= __x21__ String)</td></tr>
      <tr><td align="left">30:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=cds, label=<<font color="black">6:app __x4__ = (ToString flags)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=cds, label=<<font color="black">9:app __x6__ = (Call replacer searchValue (new [O, replaceValue]))</font>> color="black" fillcolor="white" style=filled]
  node46 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let preserved = __x16__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node57 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Set id:{result} to the string - concatenation of id:{result} and the substring of id:{string} from id:{endOfLastMatch} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=cds, label=<<font color="black">14:app __x10__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node33 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let advanceBy = __x11__</td></tr>
      <tr><td align="left">17:let matchPositions = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=cds, label=<<font color="black">21:app __x13__ = (StringIndexOf string searchString (+ position advanceBy))</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=diamond, label=<<font color="black">(= isRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node53 [shape=cds, label=<<font color="black">31:app __x22__ = (GetSubstitution searchString string p captures undefined replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node41 [shape=diamond, label=<<font color="black">(&lt; __x15__ __x14__.length)</font>> color="black" fillcolor="white" style=filled]
  node45 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x16__ = (+ __x16__ __x18__)</td></tr>
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=cds, label=<<font color="black">7:app __x5__ = (GetMethod searchValue SYMBOL_replace)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=cds, label=<<font color="black">16:app __x11__ = (max 1i searchLength)</font>> color="black" fillcolor="white" style=filled]
  node34 [shape=cds, label=<<font color="black">18:app __x12__ = (StringIndexOf string searchString 0i)</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">10:app __x7__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node44 [shape=cds, label=<<font color="black">access __x18__ = (string __x17__)</font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let functionalReplace = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=cds, label=<<font color="black">5:app __x3__ = (RequireObjectCoercible flags)</font>> color="black" fillcolor="white" style=filled]
  node54 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let replacement = [! __x22__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node49 [shape=cds, label=<<font color="black">27:app __x20__ = (ToString [? __x19__])</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">2:app __x1__ = (IsRegExp searchValue)</font>> color="black" fillcolor="white" style=filled]
  node39 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:position = [! __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node35 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let position = [! __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node48 [shape=cds, label=<<font color="black">27:app __x19__ = (Call replaceValue undefined (new [searchString, p, string]))</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let replacer = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node50 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let replacement = [? __x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let searchLength = searchString.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let flags = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node43 [shape=diamond, label=<<font color="black">(&lt; __x17__ (+ p 1i))</font>> color="black" fillcolor="white" style=filled]
  node40 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let endOfLastMatch = 0i</td></tr>
      <tr><td align="left">23:let result = &quot;&quot;</td></tr>
      <tr><td align="left">24:let __x14__ = matchPositions</td></tr>
      <tr><td align="left">24:let __x15__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=cds, label=<<font color="black">12:app __x9__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node55 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:result = (+ (+ result preserved) replacement)</td></tr>
      <tr><td align="left">33:endOfLastMatch = (+ p searchLength)</td></tr>
      <tr><td align="left">__x15__ = (+ __x15__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let string = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isRegExp = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node58 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node36 [shape=diamond, label=<<font color="black">(! (= position -1i))</font>> color="black" fillcolor="white" style=filled]
  node30 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:replaceValue = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node51 [shape=cds, label=<<font color="black">29:app __x21__ = (Type replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=diamond, label=<<font color="black">(! (= replacer undefined))</font>> color="black" fillcolor="white" style=filled]
  node47 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=diamond, label=<<font color="black">(! (contains [? __x4__] &quot;g&quot;))</font>> color="black" fillcolor="white" style=filled]
  node29 -> node30 [ color="black"]
  node58 -> node1 [ color="black"]
  node11 -> node12 [ color="black"]
  node0 -> node2 [ color="black"]
  node15 -> node16 [label=<<font color="black">true</font>> color="black"]
  node15 -> node17 [label=<<font color="black">false</font>> color="black"]
  node26 -> node27 [ color="black"]
  node28 -> node29 [label=<<font color="black">true</font>> color="black"]
  node28 -> node31 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [ color="black"]
  node43 -> node44 [label=<<font color="black">true</font>> color="black"]
  node43 -> node46 [label=<<font color="black">false</font>> color="black"]
  node48 -> node49 [ color="black"]
  node49 -> node50 [ color="black"]
  node33 -> node34 [ color="black"]
  node5 -> node6 [ color="black"]
  node53 -> node54 [ color="black"]
  node3 -> node4 [ color="black"]
  node47 -> node48 [label=<<font color="black">true</font>> color="black"]
  node47 -> node51 [label=<<font color="black">false</font>> color="black"]
  node7 -> node8 [ color="black"]
  node54 -> node55 [ color="black"]
  node18 -> node19 [ color="black"]
  node42 -> node43 [ color="black"]
  node34 -> node35 [ color="black"]
  node2 -> node3 [ color="black"]
  node9 -> node10 [label=<<font color="black">true</font>> color="black"]
  node9 -> node17 [label=<<font color="black">false</font>> color="black"]
  node13 -> node14 [ color="black"]
  node35 -> node36 [ color="black"]
  node57 -> node58 [ color="black"]
  node55 -> node41 [ color="black"]
  node12 -> node13 [ color="black"]
  node52 -> node53 [ color="black"]
  node41 -> node42 [label=<<font color="black">true</font>> color="black"]
  node41 -> node56 [label=<<font color="black">false</font>> color="black"]
  node22 -> node23 [ color="black"]
  node44 -> node45 [ color="black"]
  node27 -> node28 [ color="black"]
  node37 -> node38 [ color="black"]
  node19 -> node20 [label=<<font color="black">true</font>> color="black"]
  node19 -> node22 [label=<<font color="black">false</font>> color="black"]
  node50 -> node55 [ color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
  node31 -> node32 [ color="black"]
  node40 -> node41 [ color="black"]
  node30 -> node31 [ color="black"]
  node51 -> node52 [ color="black"]
  node25 -> node26 [ color="black"]
  node8 -> node9 [ color="black"]
  node36 -> node37 [label=<<font color="black">true</font>> color="black"]
  node36 -> node40 [label=<<font color="black">false</font>> color="black"]
  node45 -> node43 [ color="black"]
  node21 -> node22 [ color="black"]
  node6 -> node7 [label=<<font color="black">true</font>> color="black"]
  node6 -> node22 [label=<<font color="black">false</font>> color="black"]
  node20 -> node21 [ color="black"]
  node24 -> node25 [ color="black"]
  node56 -> node57 [label=<<font color="black">true</font>> color="black"]
  node56 -> node58 [label=<<font color="black">false</font>> color="black"]
  node16 -> node17 [ color="black"]
  node46 -> node47 [ color="black"]
  node38 -> node39 [ color="black"]
  node39 -> node36 [ color="black"]
  node32 -> node33 [ color="black"]
  node17 -> node18 [ color="black"]
}
