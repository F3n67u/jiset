digraph {
  node16630 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16636 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let size = O.ByteLength</td></tr>
      <tr><td align="left">7:return size</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16640 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16633 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16629 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (! (= O.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">4:let buffer = O.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16632 [shape=cds, label=<<font color="black">1:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node16638 [shape=cds, label=<<font color="black">5:app __x1__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16631 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16635 [shape=diamond, label=<<font color="black">(= O.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node16639 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node16640 -> node16641 [ color="black"]
  node16639 -> node16640 [label=<<font color="black">true</font>> color="black"]
  node16639 -> node16641 [label=<<font color="black">false</font>> color="black"]
  node16629 -> node16631 [ color="black"]
  node16631 -> node16632 [ color="black"]
  node16637 -> node16638 [ color="black"]
  node16634 -> node16635 [ color="black"]
  node16636 -> node16637 [ color="black"]
  node16633 -> node16634 [label=<<font color="black">true</font>> color="black"]
  node16633 -> node16635 [label=<<font color="black">false</font>> color="black"]
  node16632 -> node16633 [ color="black"]
  node16641 -> node16630 [ color="black"]
  node16638 -> node16639 [ color="black"]
  node16635 -> node16636 [label=<<font color="black">true</font>> color="black"]
  node16635 -> node16637 [label=<<font color="black">false</font>> color="black"]
}
