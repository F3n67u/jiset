digraph {
  node10658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:[! __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10620 [shape=cds, label=<<font color="black">16:app __x9__ = (envRec.InitializeBinding envRec in.LocalName namespace)</font>> color="black" fillcolor="white" style=filled]
  node10664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:__x31__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10660 [shape=cds, label=<<font color="black">38:access __x29__ = (d &quot;InstantiateFunctionObject&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10653 [shape=cds, label=<<font color="black">35:access __x26__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10663 [shape=cds, label=<<font color="black">39:app __x31__ = (envRec.InitializeBinding envRec dn fo)</font>> color="black" fillcolor="white" style=filled]
  node10637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10600 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = module.IndirectExportEntries</td></tr>
      <tr><td align="left">0:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10642 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:__x19__</td></tr>
      <tr><td align="left">29:append dn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10609 [shape=cds, label=<<font color="black">7:app __x3__ = (NewModuleEnvironment realm.GlobalEnv)</font>> color="black" fillcolor="white" style=filled]
  node10647 [shape=diamond, label=<<font color="black">(&lt; __x22__ __x21__.length)</font>> color="black" fillcolor="white" style=filled]
  node10638 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames dn))</font>> color="black" fillcolor="white" style=filled]
  node10662 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:let fo = __x30__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10616 [shape=cds, label=<<font color="black">14:app __x7__ = (GetModuleNamespace importedModule)</font>> color="black" fillcolor="white" style=filled]
  node10599 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10633 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x13__[__x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10619 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:[! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10630 [shape=cds, label=<<font color="black">22:access __x12__ = (code &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10606 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10655 [shape=cds, label=<<font color="black">34:app __x27__ = (envRec.CreateImmutableBinding envRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node10650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let __x24__ = __x23__</td></tr>
      <tr><td align="left">32:let __x25__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10665 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x25__ = (+ __x25__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10641 [shape=cds, label=<<font color="black">28:app __x19__ = (envRec.InitializeBinding envRec dn undefined)</font>> color="black" fillcolor="white" style=filled]
  node10623 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let resolution = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10626 [shape=cds, label=<<font color="black">20:app __x11__ = (envRec.CreateImportBinding envRec in.LocalName resolution.Module resolution.BindingName)</font>> color="black" fillcolor="white" style=filled]
  node10602 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x24__[__x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10598 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10639 [shape=cds, label=<<font color="black">27:app __x18__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10657 [shape=cds, label=<<font color="black">36:app __x28__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10612 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let in = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10634 [shape=cds, label=<<font color="black">25:access __x15__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10615 [shape=diamond, label=<<font color="black">(= in.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x14__ = (+ __x14__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10646 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let lexDeclarations = __x20__</td></tr>
      <tr><td align="left">31:let __x21__ = lexDeclarations</td></tr>
      <tr><td align="left">31:let __x22__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10661 [shape=cds, label=<<font color="black">38:app __x30__ = (__x29__ env)</font>> color="black" fillcolor="white" style=filled]
  node10666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x22__ = (+ __x22__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10603 [shape=cds, label=<<font color="black">1:app __x2__ = (module.ResolveExport module e.ExportName (new []))</font>> color="black" fillcolor="white" style=filled]
  node10629 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let code = module.ECMAScriptCode</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10651 [shape=diamond, label=<<font color="black">(&lt; __x25__ __x24__.length)</font>> color="black" fillcolor="white" style=filled]
  node10614 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let importedModule = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10656 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:[! __x27__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let __x16__ = __x15__</td></tr>
      <tr><td align="left">25:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10624 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10607 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= (typeof resolution) &quot;ResolvedBindingRecord&quot;)</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10625 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10611 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node10640 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:[! __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10645 [shape=cds, label=<<font color="black">30:access __x20__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:__x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10628 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10617 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let namespace = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10632 [shape=diamond, label=<<font color="black">(&lt; __x14__ __x13__.length)</font>> color="black" fillcolor="white" style=filled]
  node10604 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let resolution = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10636 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node10613 [shape=cds, label=<<font color="black">11:app __x6__ = (HostResolveImportedModule module in.ModuleRequest)</font>> color="black" fillcolor="white" style=filled]
  node10608 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let realm = module.Realm</td></tr>
      <tr><td align="left">6:assert (! (= realm undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10605 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10659 [shape=diamond, label=<<font color="black">(|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</font>> color="black" fillcolor="white" style=filled]
  node10610 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let env = __x3__</td></tr>
      <tr><td align="left">8:module.Environment = env</td></tr>
      <tr><td align="left">9:let envRec = env.EnvironmentRecord</td></tr>
      <tr><td align="left">10:let __x4__ = module.ImportEntries</td></tr>
      <tr><td align="left">10:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10648 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x21__[__x22__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:__x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10601 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node10631 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let varDeclarations = __x12__</td></tr>
      <tr><td align="left">23:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">24:let __x13__ = varDeclarations</td></tr>
      <tr><td align="left">24:let __x14__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10649 [shape=cds, label=<<font color="black">32:access __x23__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10622 [shape=cds, label=<<font color="black">18:app __x10__ = (importedModule.ResolveExport importedModule in.ImportName (new []))</font>> color="black" fillcolor="white" style=filled]
  node10654 [shape=diamond, label=<<font color="black">(= __x26__ true)</font>> color="black" fillcolor="white" style=filled]
  node10618 [shape=cds, label=<<font color="black">15:app __x8__ = (envRec.CreateImmutableBinding envRec in.LocalName true)</font>> color="black" fillcolor="white" style=filled]
  node10646 -> node10647 [ color="black"]
  node10658 -> node10659 [ color="black"]
  node10653 -> node10654 [ color="black"]
  node10662 -> node10663 [ color="black"]
  node10603 -> node10604 [ color="black"]
  node10651 -> node10652 [label=<<font color="black">true</font>> color="black"]
  node10651 -> node10666 [label=<<font color="black">false</font>> color="black"]
  node10627 -> node10628 [ color="black"]
  node10666 -> node10647 [ color="black"]
  node10612 -> node10613 [ color="black"]
  node10610 -> node10611 [ color="black"]
  node10634 -> node10635 [ color="black"]
  node10619 -> node10620 [ color="black"]
  node10606 -> node10607 [ color="black"]
  node10661 -> node10662 [ color="black"]
  node10637 -> node10638 [ color="black"]
  node10652 -> node10653 [ color="black"]
  node10626 -> node10627 [ color="black"]
  node10604 -> node10605 [ color="black"]
  node10629 -> node10630 [ color="black"]
  node10601 -> node10602 [label=<<font color="black">true</font>> color="black"]
  node10601 -> node10608 [label=<<font color="black">false</font>> color="black"]
  node10628 -> node10611 [ color="black"]
  node10638 -> node10639 [label=<<font color="black">true</font>> color="black"]
  node10638 -> node10643 [label=<<font color="black">false</font>> color="black"]
  node10663 -> node10664 [ color="black"]
  node10641 -> node10642 [ color="black"]
  node10636 -> node10637 [label=<<font color="black">true</font>> color="black"]
  node10636 -> node10644 [label=<<font color="black">false</font>> color="black"]
  node10623 -> node10624 [ color="black"]
  node10664 -> node10665 [ color="black"]
  node10630 -> node10631 [ color="black"]
  node10643 -> node10636 [ color="black"]
  node10615 -> node10616 [label=<<font color="black">true</font>> color="black"]
  node10615 -> node10622 [label=<<font color="black">false</font>> color="black"]
  node10633 -> node10634 [ color="black"]
  node10617 -> node10618 [ color="black"]
  node10660 -> node10661 [ color="black"]
  node10602 -> node10603 [ color="black"]
  node10635 -> node10636 [ color="black"]
  node10600 -> node10601 [ color="black"]
  node10649 -> node10650 [ color="black"]
  node10639 -> node10640 [ color="black"]
  node10657 -> node10658 [ color="black"]
  node10654 -> node10655 [label=<<font color="black">true</font>> color="black"]
  node10654 -> node10657 [label=<<font color="black">false</font>> color="black"]
  node10618 -> node10619 [ color="black"]
  node10608 -> node10609 [ color="black"]
  node10647 -> node10648 [label=<<font color="black">true</font>> color="black"]
  node10647 -> node10599 [label=<<font color="black">false</font>> color="black"]
  node10598 -> node10600 [ color="black"]
  node10644 -> node10632 [ color="black"]
  node10614 -> node10615 [ color="black"]
  node10642 -> node10643 [ color="black"]
  node10659 -> node10660 [label=<<font color="black">true</font>> color="black"]
  node10659 -> node10665 [label=<<font color="black">false</font>> color="black"]
  node10656 -> node10659 [ color="black"]
  node10632 -> node10633 [label=<<font color="black">true</font>> color="black"]
  node10632 -> node10645 [label=<<font color="black">false</font>> color="black"]
  node10665 -> node10651 [ color="black"]
  node10621 -> node10628 [ color="black"]
  node10650 -> node10651 [ color="black"]
  node10640 -> node10641 [ color="black"]
  node10609 -> node10610 [ color="black"]
  node10605 -> node10606 [label=<<font color="black">true</font>> color="black"]
  node10605 -> node10607 [label=<<font color="black">false</font>> color="black"]
  node10607 -> node10601 [ color="black"]
  node10625 -> node10626 [ color="black"]
  node10620 -> node10621 [ color="black"]
  node10645 -> node10646 [ color="black"]
  node10613 -> node10614 [ color="black"]
  node10611 -> node10612 [label=<<font color="black">true</font>> color="black"]
  node10611 -> node10629 [label=<<font color="black">false</font>> color="black"]
  node10616 -> node10617 [ color="black"]
  node10648 -> node10649 [ color="black"]
  node10624 -> node10625 [label=<<font color="black">true</font>> color="black"]
  node10624 -> node10626 [label=<<font color="black">false</font>> color="black"]
  node10631 -> node10632 [ color="black"]
  node10622 -> node10623 [ color="black"]
  node10655 -> node10656 [ color="black"]
}
