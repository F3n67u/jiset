digraph {
  node10805 [shape=cds, label=<<font color="black">1:access __x1__ = (expr &quot;HasCallInTailPosition&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10807 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10801 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10802 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10803 [shape=cds, label=<<font color="black">0:access __x0__ = (CoverParenthesizedExpressionAndArrowParameterList &quot;CoveredParenthesizedExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10806 [shape=cds, label=<<font color="black">1:app __x2__ = (__x1__ call)</font>> color="black" fillcolor="white" style=filled]
  node10804 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let expr = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10804 -> node10805 [ color="black"]
  node10805 -> node10806 [ color="black"]
  node10807 -> node10802 [ color="black"]
  node10801 -> node10803 [ color="black"]
  node10806 -> node10807 [ color="black"]
  node10803 -> node10804 [ color="black"]
}
