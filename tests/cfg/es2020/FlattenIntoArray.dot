digraph {
  node15637 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 3i)</font>> color="black" fillcolor="white" style=filled]
  node15633 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15659 [shape=diamond, label=<<font color="black">(! (= mapperFunction absent))</font>> color="black" fillcolor="white" style=filled]
  node15664 [shape=cds, label=<<font color="black">17:app __x9__ = (IsArray element)</font>> color="black" fillcolor="white" style=filled]
  node15654 [shape=cds, label=<<font color="black">10:app __x6__ = (HasProperty source P)</font>> color="black" fillcolor="white" style=filled]
  node15668 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let elementLen = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15635 [shape=cds, label=<<font color="black">app source = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15657 [shape=cds, label=<<font color="black">12:app __x7__ = (Get source P)</font>> color="black" fillcolor="white" style=filled]
  node15677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:return targetIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let element = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15662 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let shouldFlatten = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15643 [shape=cds, label=<<font color="black">1:app __x1__ = (Type source)</font>> color="black" fillcolor="white" style=filled]
  node15666 [shape=diamond, label=<<font color="black">(= shouldFlatten true)</font>> color="black" fillcolor="white" style=filled]
  node15671 [shape=diamond, label=<<font color="black">(! (&lt; targetIndex (- (** 2.0 53i) 1i)))</font>> color="black" fillcolor="white" style=filled]
  node15656 [shape=diamond, label=<<font color="black">(= exists true)</font>> color="black" fillcolor="white" style=filled]
  node15651 [shape=diamond, label=<<font color="black">(&lt; sourceIndex sourceLen)</font>> color="black" fillcolor="white" style=filled]
  node15632 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15674 [shape=cds, label=<<font color="black">23:app __x13__ = (CreateDataPropertyOrThrow target [! __x12__] element)</font>> color="black" fillcolor="white" style=filled]
  node15648 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= [! __x3__] true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15663 [shape=diamond, label=<<font color="black">(&lt; 0i depth)</font>> color="black" fillcolor="white" style=filled]
  node15655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let exists = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15642 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (|| (= [! __x4__] true) (|| (= depth Infinity) (= depth -Infinity)))</td></tr>
      <tr><td align="left">6:let targetIndex = start</td></tr>
      <tr><td align="left">7:let sourceIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15665 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:shouldFlatten = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15638 [shape=cds, label=<<font color="black">app depth = (GetArgument argumentsList 4i)</font>> color="black" fillcolor="white" style=filled]
  node15670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:targetIndex = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15669 [shape=cds, label=<<font color="black">20:app __x11__ = (FlattenIntoArray target element elementLen targetIndex (- depth 1i))</font>> color="black" fillcolor="white" style=filled]
  node15634 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15639 [shape=cds, label=<<font color="black">app mapperFunction = (GetArgument argumentsList 5i)</font>> color="black" fillcolor="white" style=filled]
  node15646 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= [! __x2__] true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15675 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:[? __x13__]</td></tr>
      <tr><td align="left">24:targetIndex = (+ targetIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15660 [shape=cds, label=<<font color="black">14:app __x8__ = (Call mapperFunction thisArg (new [element, sourceIndex, source]))</font>> color="black" fillcolor="white" style=filled]
  node15641 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node15649 [shape=cds, label=<<font color="black">4:app __x4__ = (IsInteger depth)</font>> color="black" fillcolor="white" style=filled]
  node15645 [shape=cds, label=<<font color="black">2:app __x2__ = (IsNonNegativeInteger sourceLen)</font>> color="black" fillcolor="white" style=filled]
  node15661 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:element = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15640 [shape=cds, label=<<font color="black">app thisArg = (GetArgument argumentsList 6i)</font>> color="black" fillcolor="white" style=filled]
  node15676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:sourceIndex = (+ sourceIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15672 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15667 [shape=cds, label=<<font color="black">19:app __x10__ = (LengthOfArrayLike element)</font>> color="black" fillcolor="white" style=filled]
  node15653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let P = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15652 [shape=cds, label=<<font color="black">9:app __x5__ = (ToString sourceIndex)</font>> color="black" fillcolor="white" style=filled]
  node15647 [shape=cds, label=<<font color="black">3:app __x3__ = (IsNonNegativeInteger start)</font>> color="black" fillcolor="white" style=filled]
  node15673 [shape=cds, label=<<font color="black">23:app __x12__ = (ToString targetIndex)</font>> color="black" fillcolor="white" style=filled]
  node15636 [shape=cds, label=<<font color="black">app sourceLen = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node15652 -> node15653 [ color="black"]
  node15650 -> node15651 [ color="black"]
  node15647 -> node15648 [ color="black"]
  node15636 -> node15637 [ color="black"]
  node15669 -> node15670 [ color="black"]
  node15643 -> node15644 [ color="black"]
  node15651 -> node15652 [label=<<font color="black">true</font>> color="black"]
  node15651 -> node15677 [label=<<font color="black">false</font>> color="black"]
  node15661 -> node15662 [ color="black"]
  node15660 -> node15661 [ color="black"]
  node15674 -> node15675 [ color="black"]
  node15658 -> node15659 [ color="black"]
  node15662 -> node15663 [ color="black"]
  node15648 -> node15649 [ color="black"]
  node15665 -> node15666 [ color="black"]
  node15668 -> node15669 [ color="black"]
  node15673 -> node15674 [ color="black"]
  node15637 -> node15638 [ color="black"]
  node15670 -> node15676 [ color="black"]
  node15672 -> node15673 [ color="black"]
  node15659 -> node15660 [label=<<font color="black">true</font>> color="black"]
  node15659 -> node15662 [label=<<font color="black">false</font>> color="black"]
  node15667 -> node15668 [ color="black"]
  node15656 -> node15657 [label=<<font color="black">true</font>> color="black"]
  node15656 -> node15676 [label=<<font color="black">false</font>> color="black"]
  node15654 -> node15655 [ color="black"]
  node15640 -> node15641 [ color="black"]
  node15639 -> node15640 [ color="black"]
  node15642 -> node15643 [ color="black"]
  node15649 -> node15650 [ color="black"]
  node15641 -> node15642 [ color="black"]
  node15644 -> node15645 [ color="black"]
  node15671 -> node15672 [label=<<font color="black">true</font>> color="black"]
  node15671 -> node15673 [label=<<font color="black">false</font>> color="black"]
  node15666 -> node15667 [label=<<font color="black">true</font>> color="black"]
  node15666 -> node15671 [label=<<font color="black">false</font>> color="black"]
  node15645 -> node15646 [ color="black"]
  node15663 -> node15664 [label=<<font color="black">true</font>> color="black"]
  node15663 -> node15666 [label=<<font color="black">false</font>> color="black"]
  node15638 -> node15639 [ color="black"]
  node15632 -> node15634 [ color="black"]
  node15655 -> node15656 [ color="black"]
  node15657 -> node15658 [ color="black"]
  node15676 -> node15651 [ color="black"]
  node15653 -> node15654 [ color="black"]
  node15677 -> node15633 [ color="black"]
  node15675 -> node15676 [ color="black"]
  node15646 -> node15647 [ color="black"]
  node15634 -> node15635 [ color="black"]
  node15635 -> node15636 [ color="black"]
  node15664 -> node15665 [ color="black"]
}
