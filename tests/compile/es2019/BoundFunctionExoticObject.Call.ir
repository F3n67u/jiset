{
  [0] let target = F.BoundTargetFunction
  [1] let boundThis = F.BoundThis
  [2] let boundArgs = F.BoundArguments
  [3] let __x0__ = (copy-obj boundArgs)
  [3] let __x1__ = argumentsList
  [3] let __x2__ = 0i
  [3] while (< __x2__ __x1__.length) {
    let __x3__ = __x1__[__x2__]
    append __x3__ -> __x0__
    __x2__ = (+ __x2__ 1i)
  }
  [3] let args = __x0__
  [4] app __x4__ = (Call target boundThis args)
  [4] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [0] {}
  [4] app __x5__ = (WrapCompletion __x4__)
  [4] return __x5__
}