digraph {
  node12975 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node12949 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x7__]</td></tr>
      <tr><td align="left">14:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12981 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let e = r.endIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12985 [shape=cds, label=<<font color="black">29:app __x11__ = (Set R &quot;lastIndex&quot; e true)</font>> color="black" fillcolor="white" style=filled]
  node12991 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:[! __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12973 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let r = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13000 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node12978 [shape=cds, label=<<font color="black">20:app __x10__ = (AdvanceStringIndex S lastIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node12989 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let A = __x12__</td></tr>
      <tr><td align="left">33:let matchIndex = lastIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12972 [shape=cds, label=<<font color="black">15:app __x8__ = (matcher S lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node12965 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12992 [shape=cds, label=<<font color="black">35:app __x14__ = (CreateDataProperty A &quot;input&quot; S)</font>> color="black" fillcolor="white" style=filled]
  node12960 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let sticky = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13003 [shape=cds, label=<<font color="black">app __x17__ = (ToString i)</font>> color="black" fillcolor="white" style=filled]
  node12956 [shape=cds, label=<<font color="black">4:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node12993 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x14__]</td></tr>
      <tr><td align="left">36:??? &quot;Let id:{matchedSubstr} be the matched substring ( i . e . the portion of id:{S} between offset id:{lastIndex} inclusive and offset id:{e} exclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12961 [shape=diamond, label=<<font color="black">(&amp;&amp; (= global false) (= sticky false))</font>> color="black" fillcolor="white" style=filled]
  node12988 [shape=cds, label=<<font color="black">31:app __x12__ = (ArrayCreate (+ n 1i))</font>> color="black" fillcolor="white" style=filled]
  node12998 [shape=diamond, label=<<font color="black">(= captureI undefined)</font>> color="black" fillcolor="white" style=filled]
  node12966 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13002 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Else , id:{fullUnicode} is value:{false} , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12970 [shape=cds, label=<<font color="black">13:app __x7__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node12959 [shape=cds, label=<<font color="black">5:app __x6__ = (ToBoolean [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node12987 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:??? &quot;Let id:{n} be the length of id:{r} ' s id:{captures} List . ( This is the same value as link:{unhandled: sec-notation} ' s id:{NcapturingParens} . )&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13006 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">48:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12950 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node12974 [shape=diamond, label=<<font color="black">(= r CONST_failure)</font>> color="black" fillcolor="white" style=filled]
  node12967 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let matchSucceeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12977 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? __x9__]</td></tr>
      <tr><td align="left">19:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12955 [shape=cds, label=<<font color="black">4:app __x3__ = (Get R &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12994 [shape=cds, label=<<font color="black">37:app __x15__ = (CreateDataProperty A &quot;0&quot; matchedSubstr)</font>> color="black" fillcolor="white" style=filled]
  node12999 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12962 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let lastIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12953 [shape=cds, label=<<font color="black">3:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node12982 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node12951 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ String)</td></tr>
      <tr><td align="left">2:let length = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12986 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:[? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12958 [shape=cds, label=<<font color="black">5:app __x5__ = (Get R &quot;sticky&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13001 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{capturedValue} be a string whose code units are the UTF16Encoding of the code points of id:{captureI} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12964 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12969 [shape=diamond, label=<<font color="black">(&lt; length lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node12979 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let lastIndex = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12990 [shape=cds, label=<<font color="black">34:app __x13__ = (CreateDataProperty A &quot;index&quot; matchIndex)</font>> color="black" fillcolor="white" style=filled]
  node13005 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[! __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12963 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let matcher = R.RegExpMatcher</td></tr>
      <tr><td align="left">8:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12954 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let lastIndex = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12968 [shape=diamond, label=<<font color="black">(= matchSucceeded false)</font>> color="black" fillcolor="white" style=filled]
  node12995 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:[! __x15__]</td></tr>
      <tr><td align="left">38:let i = (+ 0i 1i)</td></tr>
      <tr><td align="left">38:let __x16__ = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12983 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:??? &quot;id:{e} is an index into the id:{Input} character list , derived from id:{S} , matched by id:{matcher} . Let id:{eUTF} be the smallest index into id:{S} that corresponds to the character at element id:{e} of id:{Input} . If id:{e} is greater than or equal to the length of id:{Input} , then id:{eUTF} is the number of code units in id:{S} .&quot;</td></tr>
      <tr><td align="left">27:let e = eUTF</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12980 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">matchSucceeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12952 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12957 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let global = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13004 [shape=cds, label=<<font color="black">app __x18__ = (CreateDataProperty A [! __x17__] capturedValue)</font>> color="black" fillcolor="white" style=filled]
  node12976 [shape=cds, label=<<font color="black">18:app __x9__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node12996 [shape=diamond, label=<<font color="black">(&lt; i __x16__)</font>> color="black" fillcolor="white" style=filled]
  node12984 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node12997 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{captureI} be id:{i} sup:{th} element of id:{r} ' s id:{captures} List .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12948 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12990 -> node12991 [ color="black"]
  node12962 -> node12963 [ color="black"]
  node12995 -> node12996 [ color="black"]
  node12977 -> node12978 [ color="black"]
  node13005 -> node12996 [ color="black"]
  node12997 -> node12998 [ color="black"]
  node12968 -> node12969 [label=<<font color="black">true</font>> color="black"]
  node12968 -> node12981 [label=<<font color="black">false</font>> color="black"]
  node12996 -> node12997 [label=<<font color="black">true</font>> color="black"]
  node12996 -> node13006 [label=<<font color="black">false</font>> color="black"]
  node13002 -> node13003 [ color="black"]
  node12999 -> node13002 [ color="black"]
  node12984 -> node12985 [label=<<font color="black">true</font>> color="black"]
  node12984 -> node12987 [label=<<font color="black">false</font>> color="black"]
  node12952 -> node12953 [ color="black"]
  node12994 -> node12995 [ color="black"]
  node12981 -> node12982 [ color="black"]
  node12986 -> node12987 [ color="black"]
  node12961 -> node12962 [label=<<font color="black">true</font>> color="black"]
  node12961 -> node12963 [label=<<font color="black">false</font>> color="black"]
  node12950 -> node12951 [ color="black"]
  node12982 -> node12983 [label=<<font color="black">true</font>> color="black"]
  node12982 -> node12984 [label=<<font color="black">false</font>> color="black"]
  node12969 -> node12970 [label=<<font color="black">true</font>> color="black"]
  node12969 -> node12972 [label=<<font color="black">false</font>> color="black"]
  node12987 -> node12988 [ color="black"]
  node12957 -> node12958 [ color="black"]
  node12992 -> node12993 [ color="black"]
  node12985 -> node12986 [ color="black"]
  node12976 -> node12977 [ color="black"]
  node12983 -> node12984 [ color="black"]
  node12953 -> node12954 [ color="black"]
  node12975 -> node12976 [label=<<font color="black">true</font>> color="black"]
  node12975 -> node12978 [label=<<font color="black">false</font>> color="black"]
  node12993 -> node12994 [ color="black"]
  node12954 -> node12955 [ color="black"]
  node12978 -> node12979 [ color="black"]
  node12964 -> node12965 [label=<<font color="black">true</font>> color="black"]
  node12964 -> node12966 [label=<<font color="black">false</font>> color="black"]
  node12973 -> node12974 [ color="black"]
  node12966 -> node12967 [ color="black"]
  node12979 -> node12968 [ color="black"]
  node12998 -> node12999 [label=<<font color="black">true</font>> color="black"]
  node12998 -> node13000 [label=<<font color="black">false</font>> color="black"]
  node13000 -> node13001 [label=<<font color="black">true</font>> color="black"]
  node13000 -> node13002 [label=<<font color="black">false</font>> color="black"]
  node12951 -> node12952 [ color="black"]
  node12988 -> node12989 [ color="black"]
  node12960 -> node12961 [ color="black"]
  node12970 -> node12971 [ color="black"]
  node13006 -> node12949 [ color="black"]
  node12956 -> node12957 [ color="black"]
  node12948 -> node12950 [ color="black"]
  node12955 -> node12956 [ color="black"]
  node12989 -> node12990 [ color="black"]
  node12974 -> node12975 [label=<<font color="black">true</font>> color="black"]
  node12974 -> node12980 [label=<<font color="black">false</font>> color="black"]
  node12963 -> node12964 [ color="black"]
  node13001 -> node13002 [ color="black"]
  node12958 -> node12959 [ color="black"]
  node12959 -> node12960 [ color="black"]
  node12991 -> node12992 [ color="black"]
  node12980 -> node12968 [ color="black"]
  node12967 -> node12968 [ color="black"]
  node13004 -> node13005 [ color="black"]
  node13003 -> node13004 [ color="black"]
  node12971 -> node12972 [ color="black"]
  node12965 -> node12967 [ color="black"]
  node12972 -> node12973 [ color="black"]
}
