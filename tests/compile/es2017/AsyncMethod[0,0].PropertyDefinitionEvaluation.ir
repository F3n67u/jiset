{
  [0] access __x0__ = (PropertyName "Evaluation")
  [0] let propKey = __x0__
  [1] if (is-completion propKey) if (= propKey.Type CONST_normal) propKey = propKey.Value else return propKey else [24] {}
  [1] propKey
  [2] if true let strict = true else let strict = false
  [3] access __x1__ = (GLOBAL_context "LexicalEnvironment")
  [3] let scope = __x1__
  [4] app __x2__ = (AsyncFunctionCreate CONST_Method UniqueFormalParameters AsyncFunctionBody scope strict)
  [4] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [24] {}
  [4] let closure = __x2__
  [5] app __x3__ = (MakeMethod closure object)
  [5] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [24] {}
  [5] __x3__
  [6] app __x4__ = (SetFunctionName closure propKey)
  [6] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [24] {}
  [6] __x4__
  [7] let desc = (new PropertyDescriptor("Value" -> closure, "Writable" -> true, "Enumerable" -> enumerable, "Configurable" -> true))
  [8] app __x5__ = (DefinePropertyOrThrow object propKey desc)
  [8] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [24] {}
  [8] app __x6__ = (WrapCompletion __x5__)
  [8] return __x6__
}