digraph {
  node10711 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10715 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10710 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node10708 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10709 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10714 [shape=cds, label=<<font color="black">2:access __x1__ = (ModuleItem &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node10712 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node10713 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10710 -> node10711 [ color="black"]
  node10711 -> node10712 [ color="black"]
  node10714 -> node10715 [ color="black"]
  node10713 -> node10714 [ color="black"]
  node10712 -> node10713 [label=<<font color="black">true</font>> color="black"]
  node10712 -> node10714 [label=<<font color="black">false</font>> color="black"]
  node10715 -> node10709 [ color="black"]
  node10708 -> node10710 [ color="black"]
}
