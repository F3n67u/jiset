{
  if true let strict = true else let strict = false
  access __x0__ = (GLOBAL_context "LexicalEnvironment")
  let scope = __x0__
  app __x1__ = (GeneratorFunctionCreate CONST_Normal FormalParameters GeneratorBody scope strict)
  let closure = __x1__
  app __x2__ = (ObjectCreate INTRINSIC_GeneratorPrototype)
  let prototype = __x2__
  app __x3__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  __x3__
  closure.SourceText = (get-syntax GeneratorExpression)
  app __x4__ = (WrapCompletion closure)
  return __x4__
}