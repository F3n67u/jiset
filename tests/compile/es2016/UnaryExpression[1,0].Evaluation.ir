{
  [0] access __x0__ = (UnaryExpression "Evaluation")
  [0] let ref = __x0__
  [1] if (is-completion ref) if (= ref.Type CONST_normal) ref = ref.Value else return ref else [6] {}
  [1] ref
  [2] app __x1__ = (Type ref)
  [2] if (! (= __x1__ Reference)) {
    app __x2__ = (WrapCompletion true)
    return __x2__
  } else [6] {}
  [3] app __x3__ = (IsUnresolvableReference ref)
  [3] if (= __x3__ true) {
    [4] app __x4__ = (IsStrictReference ref)
    [4] assert (= __x4__ false)
    [5] app __x5__ = (WrapCompletion true)
    [5] return __x5__
  } else [6] {}
  [12] app __x6__ = (IsPropertyReference ref)
  [12] if (= __x6__ true) {
    [7] app __x7__ = (IsSuperReference ref)
    [7] if (= __x7__ true) {
      app __x8__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_ReferenceError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x8__
    } else [6] {}
    [8] app __x9__ = (GetBase ref)
    [8] app __x10__ = (ToObject __x9__)
    [8] if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else [6] {}
    [8] let baseObj = __x10__
    [9] app __x11__ = (GetReferencedName ref)
    [9] app __x12__ = (baseObj.Delete baseObj __x11__)
    [9] if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else [6] {}
    [9] let deleteStatus = __x12__
    [10] let __x13__ = (= deleteStatus false)
    [10] if __x13__ {
      app __x14__ = (IsStrictReference ref)
      __x13__ = (= __x14__ true)
    } else [6] {}
    [10] if __x13__ {
      app __x15__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x15__
    } else [6] {}
    [11] app __x16__ = (WrapCompletion deleteStatus)
    [11] return __x16__
  } else {
    [13] app __x17__ = (GetBase ref)
    [13] let bindings = __x17__
    [14] app __x18__ = (GetReferencedName ref)
    [14] app __x19__ = (bindings.DeleteBinding bindings __x18__)
    [14] if (is-completion __x19__) if (= __x19__.Type CONST_normal) __x19__ = __x19__.Value else return __x19__ else [6] {}
    [14] app __x20__ = (WrapCompletion __x19__)
    [14] return __x20__
  }
}