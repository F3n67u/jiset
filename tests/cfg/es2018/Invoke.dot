digraph {
  node977 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node981 [shape=diamond, label=<<font color="black">(= argumentsList absent)</font>> color="black" fillcolor="white" style=filled]
  node980 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node979 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node978 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node982 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">argumentsList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node985 [shape=cds, label=<<font color="black">3:app __x2__ = (Call func V argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node984 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let func = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node983 [shape=cds, label=<<font color="black">2:app __x1__ = (GetV V P)</font>> color="black" fillcolor="white" style=filled]
  node986 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node982 -> node983 [ color="black"]
  node981 -> node982 [label=<<font color="black">true</font>> color="black"]
  node981 -> node983 [label=<<font color="black">false</font>> color="black"]
  node984 -> node985 [ color="black"]
  node983 -> node984 [ color="black"]
  node977 -> node979 [ color="black"]
  node979 -> node980 [ color="black"]
  node980 -> node981 [ color="black"]
  node986 -> node978 [ color="black"]
  node985 -> node986 [ color="black"]
}
