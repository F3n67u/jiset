digraph {
  node17432 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= promise.PromiseState &quot;pending&quot;)</td></tr>
      <tr><td align="left">1:let reactions = promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">2:promise.PromiseResult = value</td></tr>
      <tr><td align="left">3:promise.PromiseFulfillReactions = undefined</td></tr>
      <tr><td align="left">4:promise.PromiseRejectReactions = undefined</td></tr>
      <tr><td align="left">5:promise.PromiseState = &quot;fulfilled&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17429 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17430 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17434 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17431 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17433 [shape=cds, label=<<font color="black">6:app __x0__ = (TriggerPromiseReactions reactions value)</font>> color="black" fillcolor="white" style=filled]
  node17428 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17434 -> node17429 [ color="black"]
  node17433 -> node17434 [ color="black"]
  node17430 -> node17431 [ color="black"]
  node17432 -> node17433 [ color="black"]
  node17431 -> node17432 [ color="black"]
  node17428 -> node17430 [ color="black"]
}
