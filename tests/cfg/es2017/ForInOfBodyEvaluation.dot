digraph {
  node6895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let status = lhsRef</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6919 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6871 [shape=cds, label=<<font color="black">7:app __x1__ = (IteratorStep iterator)</font>> color="black" fillcolor="white" style=filled]
  node6918 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6868 [shape=diamond, label=<<font color="black">(&amp;&amp; (= destructuring true) (= lhsKind CONST_assignment))</font>> color="black" fillcolor="white" style=filled]
  node6883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let iterationEnv = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6900 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let status = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6894 [shape=diamond, label=<<font color="black">__x9__</font>> color="black" fillcolor="white" style=filled]
  node6877 [shape=diamond, label=<<font color="black">(|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding))</font>> color="black" fillcolor="white" style=filled]
  node6914 [shape=cds, label=<<font color="black">40:app __x18__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node6909 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let status = __x15__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let nextResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6887 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6904 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let status = __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6892 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6878 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node6873 [shape=diamond, label=<<font color="black">(= nextResult false)</font>> color="black" fillcolor="white" style=filled]
  node6905 [shape=diamond, label=<<font color="black">(= lhsKind CONST_varBinding)</font>> color="black" fillcolor="white" style=filled]
  node6923 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:let result = __x20__</td></tr>
      <tr><td align="left">48:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6932 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">54:return [? __x24__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6863 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6865 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">1:let V = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6884 [shape=cds, label=<<font color="black">17:access __x5__ = (lhs &quot;BindingInstantiation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6897 [shape=cds, label=<<font color="black">27:app __x10__ = (InitializeReferencedBinding lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6915 [shape=diamond, label=<<font color="black">__x18__</font>> color="black" fillcolor="white" style=filled]
  node6926 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node6888 [shape=cds, label=<<font color="black">21:access __x7__ = (lhs &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextValue = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6908 [shape=cds, label=<<font color="black">35:app __x15__ = (__x14__ nextValue undefined)</font>> color="black" fillcolor="white" style=filled]
  node6891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let lhsRef = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6931 [shape=cds, label=<<font color="black">54:app __x24__ = (IteratorClose iterator __x23__)</font>> color="black" fillcolor="white" style=filled]
  node6869 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (is-instance-of lhs LeftHandSideExpression)</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{assignmentPattern} be the parse of the source text corresponding to id:{lhs} using nt:{AssignmentPattern} as the goal symbol .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6901 [shape=diamond, label=<<font color="black">(= lhsKind CONST_assignment)</font>> color="black" fillcolor="white" style=filled]
  node6922 [shape=cds, label=<<font color="black">47:access __x20__ = (stmt &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6916 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6870 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node6881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">15:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6927 [shape=cds, label=<<font color="black">51:app __x22__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node6898 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let status = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6920 [shape=cds, label=<<font color="black">46:app __x19__ = (IteratorClose iterator status)</font>> color="black" fillcolor="white" style=filled]
  node6866 [shape=cds, label=<<font color="black">2:access __x0__ = (lhs &quot;IsDestructuring&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6907 [shape=cds, label=<<font color="black">35:access __x14__ = (lhs &quot;BindingInitialization&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6930 [shape=cds, label=<<font color="black">54:app __x23__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node6890 [shape=cds, label=<<font color="black">22:app __x8__ = (ResolveBinding lhsName)</font>> color="black" fillcolor="white" style=filled]
  node6875 [shape=cds, label=<<font color="black">9:app __x2__ = (IteratorValue nextResult)</font>> color="black" fillcolor="white" style=filled]
  node6934 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">V = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6885 [shape=cds, label=<<font color="black">17:app __x6__ = (__x5__ iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node6902 [shape=cds, label=<<font color="black">32:access __x12__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6921 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:return [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6880 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let lhsRef = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6912 [shape=cds, label=<<font color="black">39:app __x17__ = (__x16__ nextValue iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node6899 [shape=cds, label=<<font color="black">29:app __x11__ = (PutValue lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6917 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node6928 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:return __x22__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6867 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let destructuring = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6882 [shape=cds, label=<<font color="black">16:app __x4__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node6903 [shape=cds, label=<<font color="black">32:app __x13__ = (__x12__ nextValue)</font>> color="black" fillcolor="white" style=filled]
  node6893 [shape=cds, label=<<font color="black">28:app __x9__ = (IsAbruptCompletion lhsRef)</font>> color="black" fillcolor="white" style=filled]
  node6913 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let status = __x17__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6910 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">38:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6924 [shape=cds, label=<<font color="black">49:app __x21__ = (LoopContinues result labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6925 [shape=diamond, label=<<font color="black">(= __x21__ false)</font>> color="black" fillcolor="white" style=filled]
  node6906 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:assert (is-instance-of lhs ForBinding)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let lhsName = __x7__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6929 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return V</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6911 [shape=cds, label=<<font color="black">39:access __x16__ = (lhs &quot;BindingInitialization&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6864 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6879 [shape=cds, label=<<font color="black">12:access __x3__ = (lhs &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6933 [shape=diamond, label=<<font color="black">(! (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node6896 [shape=diamond, label=<<font color="black">(= lhsKind CONST_lexicalBinding)</font>> color="black" fillcolor="white" style=filled]
  node6886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:__x6__</td></tr>
      <tr><td align="left">18:GLOBAL_context.LexicalEnvironment = iterationEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6876 -> node6877 [ color="black"]
  node6904 -> node6914 [ color="black"]
  node6909 -> node6914 [ color="black"]
  node6925 -> node6926 [label=<<font color="black">true</font>> color="black"]
  node6925 -> node6933 [label=<<font color="black">false</font>> color="black"]
  node6929 -> node6930 [ color="black"]
  node6898 -> node6914 [ color="black"]
  node6900 -> node6914 [ color="black"]
  node6928 -> node6933 [ color="black"]
  node6878 -> node6879 [label=<<font color="black">true</font>> color="black"]
  node6878 -> node6892 [label=<<font color="black">false</font>> color="black"]
  node6890 -> node6891 [ color="black"]
  node6906 -> node6907 [ color="black"]
  node6934 -> node6870 [ color="black"]
  node6892 -> node6893 [label=<<font color="black">true</font>> color="black"]
  node6892 -> node6901 [label=<<font color="black">false</font>> color="black"]
  node6879 -> node6880 [ color="black"]
  node6923 -> node6924 [ color="black"]
  node6931 -> node6932 [ color="black"]
  node6927 -> node6928 [ color="black"]
  node6885 -> node6886 [ color="black"]
  node6891 -> node6892 [ color="black"]
  node6886 -> node6887 [ color="black"]
  node6883 -> node6884 [ color="black"]
  node6897 -> node6898 [ color="black"]
  node6889 -> node6890 [ color="black"]
  node6895 -> node6914 [ color="black"]
  node6922 -> node6923 [ color="black"]
  node6914 -> node6915 [ color="black"]
  node6901 -> node6902 [label=<<font color="black">true</font>> color="black"]
  node6901 -> node6905 [label=<<font color="black">false</font>> color="black"]
  node6933 -> node6934 [label=<<font color="black">true</font>> color="black"]
  node6933 -> node6870 [label=<<font color="black">false</font>> color="black"]
  node6918 -> node6922 [ color="black"]
  node6908 -> node6909 [ color="black"]
  node6867 -> node6868 [ color="black"]
  node6926 -> node6927 [label=<<font color="black">true</font>> color="black"]
  node6926 -> node6929 [label=<<font color="black">false</font>> color="black"]
  node6869 -> node6870 [ color="black"]
  node6913 -> node6914 [ color="black"]
  node6903 -> node6904 [ color="black"]
  node6921 -> node6922 [ color="black"]
  node6888 -> node6889 [ color="black"]
  node6912 -> node6913 [ color="black"]
  node6873 -> node6874 [label=<<font color="black">true</font>> color="black"]
  node6873 -> node6875 [label=<<font color="black">false</font>> color="black"]
  node6875 -> node6876 [ color="black"]
  node6881 -> node6882 [ color="black"]
  node6930 -> node6931 [ color="black"]
  node6863 -> node6865 [ color="black"]
  node6868 -> node6869 [label=<<font color="black">true</font>> color="black"]
  node6868 -> node6870 [label=<<font color="black">false</font>> color="black"]
  node6917 -> node6918 [label=<<font color="black">true</font>> color="black"]
  node6917 -> node6919 [label=<<font color="black">false</font>> color="black"]
  node6874 -> node6875 [ color="black"]
  node6915 -> node6916 [label=<<font color="black">true</font>> color="black"]
  node6915 -> node6922 [label=<<font color="black">false</font>> color="black"]
  node6877 -> node6878 [label=<<font color="black">true</font>> color="black"]
  node6877 -> node6881 [label=<<font color="black">false</font>> color="black"]
  node6919 -> node6920 [ color="black"]
  node6870 -> node6871 [label=<<font color="black">true</font>> color="black"]
  node6870 -> node6864 [label=<<font color="black">false</font>> color="black"]
  node6896 -> node6897 [label=<<font color="black">true</font>> color="black"]
  node6896 -> node6899 [label=<<font color="black">false</font>> color="black"]
  node6871 -> node6872 [ color="black"]
  node6865 -> node6866 [ color="black"]
  node6916 -> node6917 [ color="black"]
  node6893 -> node6894 [ color="black"]
  node6910 -> node6911 [ color="black"]
  node6866 -> node6867 [ color="black"]
  node6872 -> node6873 [ color="black"]
  node6894 -> node6895 [label=<<font color="black">true</font>> color="black"]
  node6894 -> node6896 [label=<<font color="black">false</font>> color="black"]
  node6899 -> node6900 [ color="black"]
  node6907 -> node6908 [ color="black"]
  node6924 -> node6925 [ color="black"]
  node6884 -> node6885 [ color="black"]
  node6887 -> node6888 [label=<<font color="black">true</font>> color="black"]
  node6887 -> node6892 [label=<<font color="black">false</font>> color="black"]
  node6905 -> node6906 [label=<<font color="black">true</font>> color="black"]
  node6905 -> node6910 [label=<<font color="black">false</font>> color="black"]
  node6920 -> node6921 [ color="black"]
  node6880 -> node6892 [ color="black"]
  node6911 -> node6912 [ color="black"]
  node6932 -> node6933 [ color="black"]
  node6902 -> node6903 [ color="black"]
  node6882 -> node6883 [ color="black"]
}
