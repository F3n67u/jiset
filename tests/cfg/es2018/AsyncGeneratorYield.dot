digraph {
  node17158 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">7:??? &quot;Set the code evaluation state of id:{genContext} such that when evaluation is resumed with a Completion id:{resumptionValue} the following steps will be performed : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17149 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17154 [shape=cds, label=<<font color="black">4:app __x1__ = (Await value)</font>> color="black" fillcolor="white" style=filled]
  node17157 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x2__ = (- GLOBAL_executionStack.length 1i)</td></tr>
      <tr><td align="left">(pop GLOBAL_executionStack __x2__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17150 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17160 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let genContext = GLOBAL_context</td></tr>
      <tr><td align="left">2:let generator = genContext.Generator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17156 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] genContext)</font>> color="black" fillcolor="white" style=filled]
  node17155 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:value = [? __x1__]</td></tr>
      <tr><td align="left">5:generator.AsyncGeneratorState = &quot;suspendedYield&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17152 [shape=cds, label=<<font color="black">3:app __x0__ = (GetGeneratorKind)</font>> color="black" fillcolor="white" style=filled]
  node17153 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x0__ CONST_async)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17159 [shape=cds, label=<<font color="black">14:app __x3__ = (AsyncGeneratorResolve generator value false)</font>> color="black" fillcolor="white" style=filled]
  node17156 -> node17157 [label=<<font color="black">true</font>> color="black"]
  node17156 -> node17158 [label=<<font color="black">false</font>> color="black"]
  node17155 -> node17156 [ color="black"]
  node17158 -> node17159 [ color="black"]
  node17153 -> node17154 [ color="black"]
  node17159 -> node17160 [ color="black"]
  node17160 -> node17150 [ color="black"]
  node17152 -> node17153 [ color="black"]
  node17151 -> node17152 [ color="black"]
  node17157 -> node17158 [ color="black"]
  node17149 -> node17151 [ color="black"]
  node17154 -> node17155 [ color="black"]
}
