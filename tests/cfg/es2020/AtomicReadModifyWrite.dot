digraph {
  node17734 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17739 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17731 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17737 [shape=diamond, label=<<font color="black">(= typedArray.ContentType CONST_BigInt)</font>> color="black" fillcolor="white" style=filled]
  node17744 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17736 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
      <tr><td align="left">2:let arrayTypeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17732 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17740 [shape=cds, label=<<font color="black">app __x3__ = (ToInteger value)</font>> color="black" fillcolor="white" style=filled]
  node17738 [shape=cds, label=<<font color="black">app __x2__ = (ToBigInt value)</font>> color="black" fillcolor="white" style=filled]
  node17741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17742 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:let indexedPosition = (+ (* i elementSize) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17735 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node17733 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray)</font>> color="black" fillcolor="white" style=filled]
  node17743 [shape=cds, label=<<font color="black">9:app __x4__ = (GetModifySetValueInBuffer buffer indexedPosition elementType v op)</font>> color="black" fillcolor="white" style=filled]
  node17735 -> node17736 [ color="black"]
  node17742 -> node17743 [ color="black"]
  node17737 -> node17738 [label=<<font color="black">true</font>> color="black"]
  node17737 -> node17740 [label=<<font color="black">false</font>> color="black"]
  node17740 -> node17741 [ color="black"]
  node17741 -> node17742 [ color="black"]
  node17743 -> node17744 [ color="black"]
  node17739 -> node17742 [ color="black"]
  node17733 -> node17734 [ color="black"]
  node17738 -> node17739 [ color="black"]
  node17736 -> node17737 [ color="black"]
  node17731 -> node17733 [ color="black"]
  node17744 -> node17732 [ color="black"]
  node17734 -> node17735 [ color="black"]
}
