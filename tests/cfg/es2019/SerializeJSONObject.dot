digraph {
  node17143 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17164 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = &quot;{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17158 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let member = __x4__</td></tr>
      <tr><td align="left">13:member = (+ member &quot;:&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17154 [shape=cds, label=<<font color="black">10:app __x3__ = (SerializeJSONProperty P value)</font>> color="black" fillcolor="white" style=filled]
  node17161 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:member = (+ member strP)</td></tr>
      <tr><td align="left">17:append member -&gt; partial</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17157 [shape=cds, label=<<font color="black">12:app __x4__ = (QuoteJSONString P)</font>> color="black" fillcolor="white" style=filled]
  node17146 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:append value -&gt; stack</td></tr>
      <tr><td align="left">2:let stepback = indent</td></tr>
      <tr><td align="left">3:indent = (+ indent gap)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17142 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17165 [shape=diamond, label=<<font color="black">(= gap &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17150 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let K = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17160 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">member = (+ member &quot; &quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17162 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17147 [shape=diamond, label=<<font color="black">(! (= PropertyList undefined))</font>> color="black" fillcolor="white" style=filled]
  node17166 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:??? &quot;Let id:{properties} be the String value formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with the code unit 0x002C ( COMMA ) . A comma is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">23:let final = (+ (+ &quot;{&quot; properties) &quot;}&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17148 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let K = PropertyList</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17155 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let strP = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17152 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node17145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17167 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let separator = (+ (+ &quot;,&quot; &quot;\n&quot;) indent)</td></tr>
      <tr><td align="left">26:??? &quot;Let id:{properties} be the String value formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with id:{separator} . The id:{separator} String is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">27:let final = (+ (+ (+ (+ (+ (+ &quot;{&quot; &quot;\n&quot;) indent) properties) &quot;\n&quot;) stepback) &quot;}&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17168 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">29:indent = stepback</td></tr>
      <tr><td align="left">30:return final</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17149 [shape=cds, label=<<font color="black">7:app __x0__ = (EnumerableOwnPropertyNames value &quot;key&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17163 [shape=diamond, label=<<font color="black">(= partial.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node17151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let partial = (new [])</td></tr>
      <tr><td align="left">9:let __x1__ = K</td></tr>
      <tr><td align="left">9:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17156 [shape=diamond, label=<<font color="black">(! (= strP undefined))</font>> color="black" fillcolor="white" style=filled]
  node17144 [shape=diamond, label=<<font color="black">(contains stack value)</font>> color="black" fillcolor="white" style=filled]
  node17153 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let P = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17159 [shape=diamond, label=<<font color="black">(! (= gap &quot;&quot;))</font>> color="black" fillcolor="white" style=filled]
  node17152 -> node17153 [label=<<font color="black">true</font>> color="black"]
  node17152 -> node17163 [label=<<font color="black">false</font>> color="black"]
  node17167 -> node17168 [ color="black"]
  node17147 -> node17148 [label=<<font color="black">true</font>> color="black"]
  node17147 -> node17149 [label=<<font color="black">false</font>> color="black"]
  node17144 -> node17145 [label=<<font color="black">true</font>> color="black"]
  node17144 -> node17146 [label=<<font color="black">false</font>> color="black"]
  node17148 -> node17151 [ color="black"]
  node17158 -> node17159 [ color="black"]
  node17153 -> node17154 [ color="black"]
  node17142 -> node17144 [ color="black"]
  node17159 -> node17160 [label=<<font color="black">true</font>> color="black"]
  node17159 -> node17161 [label=<<font color="black">false</font>> color="black"]
  node17156 -> node17157 [label=<<font color="black">true</font>> color="black"]
  node17156 -> node17162 [label=<<font color="black">false</font>> color="black"]
  node17168 -> node17143 [ color="black"]
  node17164 -> node17168 [ color="black"]
  node17163 -> node17164 [label=<<font color="black">true</font>> color="black"]
  node17163 -> node17165 [label=<<font color="black">false</font>> color="black"]
  node17155 -> node17156 [ color="black"]
  node17162 -> node17152 [ color="black"]
  node17166 -> node17168 [ color="black"]
  node17146 -> node17147 [ color="black"]
  node17161 -> node17162 [ color="black"]
  node17151 -> node17152 [ color="black"]
  node17157 -> node17158 [ color="black"]
  node17150 -> node17151 [ color="black"]
  node17165 -> node17166 [label=<<font color="black">true</font>> color="black"]
  node17165 -> node17167 [label=<<font color="black">false</font>> color="black"]
  node17145 -> node17146 [ color="black"]
  node17149 -> node17150 [ color="black"]
  node17160 -> node17161 [ color="black"]
  node17154 -> node17155 [ color="black"]
}
