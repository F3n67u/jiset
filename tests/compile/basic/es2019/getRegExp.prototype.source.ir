{
  let R = this
  app __x0__ = (Type R)
  if (! (= __x0__ Object)) throw INTRINSIC_TypeError else {}
  if (= R.OriginalSource absent) {
    app __x1__ = (SameValue R INTRINSIC_RegExpPrototype)
    if (= __x1__ true) {
      app __x2__ = (WrapCompletion "(?:)")
      return __x2__
    } else throw INTRINSIC_TypeError
  } else {}
  assert (! (= R.OriginalFlags absent))
  let src = R.OriginalSource
  let flags = R.OriginalFlags
  app __x3__ = (EscapeRegExpPattern src flags)
  app __x4__ = (WrapCompletion __x3__)
  return __x4__
}