digraph {
  node8224 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node8225 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; names</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8220 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let names = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8226 [shape=diamond, label=<<font color="black">(= CaseClauses1 absent)</font>> color="black" fillcolor="white" style=filled]
  node8223 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let __x2__ = __x1__</td></tr>
      <tr><td align="left">2:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8219 [shape=cds, label=<<font color="black">access __x0__ = (CaseClauses0 &quot;LexicallyDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8227 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return names</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8218 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node8216 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8228 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Return the result of appending to id:{names} the elements of the LexicallyDeclaredNames of the second nt:{CaseClauses} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8221 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let names = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8217 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8222 [shape=cds, label=<<font color="black">2:access __x1__ = (DefaultClause &quot;LexicallyDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8223 -> node8224 [ color="black"]
  node8218 -> node8219 [label=<<font color="black">true</font>> color="black"]
  node8218 -> node8221 [label=<<font color="black">false</font>> color="black"]
  node8227 -> node8228 [ color="black"]
  node8224 -> node8225 [label=<<font color="black">true</font>> color="black"]
  node8224 -> node8226 [label=<<font color="black">false</font>> color="black"]
  node8221 -> node8222 [ color="black"]
  node8222 -> node8223 [ color="black"]
  node8216 -> node8218 [ color="black"]
  node8220 -> node8222 [ color="black"]
  node8228 -> node8217 [ color="black"]
  node8226 -> node8227 [label=<<font color="black">true</font>> color="black"]
  node8226 -> node8228 [label=<<font color="black">false</font>> color="black"]
  node8219 -> node8220 [ color="black"]
  node8225 -> node8224 [ color="black"]
}
