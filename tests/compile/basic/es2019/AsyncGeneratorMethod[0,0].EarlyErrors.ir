{
  access __x0__ = (AsyncGeneratorMethod "HasDirectSuper")
  if (= __x0__ true) throw INTRINSIC_SyntaxError else {
    app __x1__ = (NormalCompletion undefined)
    return __x1__
  }
  access __x2__ = (UniqueFormalParameters "Contains")
  app __x3__ = (__x2__ "YieldExpression")
  if (= __x3__ true) throw INTRINSIC_SyntaxError else {
    app __x4__ = (NormalCompletion undefined)
    return __x4__
  }
  access __x5__ = (UniqueFormalParameters "Contains")
  app __x6__ = (__x5__ "AwaitExpression")
  if (= __x6__ true) throw INTRINSIC_SyntaxError else {
    app __x7__ = (NormalCompletion undefined)
    return __x7__
  }
  let __x8__ = true
  access __x9__ = (AsyncGeneratorBody "ContainsUseStrict")
  __x8__ = (= __x9__ true)
  if __x8__ {
    access __x10__ = (UniqueFormalParameters "IsSimpleParameterList")
    __x8__ = (= __x10__ false)
  } else {}
  if __x8__ throw INTRINSIC_SyntaxError else {
    app __x11__ = (NormalCompletion undefined)
    return __x11__
  }
  access __x12__ = (UniqueFormalParameters "BoundNames")
  access __x13__ = (AsyncGeneratorBody "LexicallyDeclaredNames")
  let __x14__ = __x12__
  let __x15__ = __x13__
  let __x16__ = 0i
  let __x17__ = 0i
  let __x18__ = false
  while (< __x16__ __x14__.length) {
    __x17__ = 0i
    while (< __x17__ __x15__.length) if (= __x14__[__x16__] __x15__[__x17__]) __x18__ = true else {}
  }
  if __x18__ throw INTRINSIC_SyntaxError else {
    app __x19__ = (NormalCompletion undefined)
    return __x19__
  }
}