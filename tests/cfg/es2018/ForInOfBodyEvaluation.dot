digraph {
  node7272 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7260 [shape=cds, label=<<font color="black">49:app __x22__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7219 [shape=cds, label=<<font color="black">18:app __x6__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node7253 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7198 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">2:let V = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7208 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">nextResult = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7203 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node7220 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let iterationEnv = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7235 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let status = __x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7240 [shape=cds, label=<<font color="black">34:app __x15__ = (__x14__ nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7241 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:let status = __x15__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7277 [shape=diamond, label=<<font color="black">(! (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node7262 [shape=cds, label=<<font color="black">50:access __x23__ = (stmt &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7209 [shape=cds, label=<<font color="black">10:app __x3__ = (Type nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7215 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7236 [shape=cds, label=<<font color="black">31:app __x13__ = (PutValue lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7226 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let lhsName = __x9__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">54:return __x25__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7273 [shape=cds, label=<<font color="black">app __x27__ = (AsyncIteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7245 [shape=cds, label=<<font color="black">37:app __x17__ = (__x16__ nextValue undefined)</font>> color="black" fillcolor="white" style=filled]
  node7247 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">40:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7194 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7213 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7230 [shape=cds, label=<<font color="black">30:app __x11__ = (IsAbruptCompletion lhsRef)</font>> color="black" fillcolor="white" style=filled]
  node7197 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorKind = CONST_sync</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7254 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7217 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let lhsRef = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7269 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">56:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7229 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7244 [shape=cds, label=<<font color="black">37:access __x16__ = (lhs &quot;BindingInitialization&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7237 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let status = __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7276 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">59:return [? __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7204 [shape=cds, label=<<font color="black">8:app __x1__ = (Call iteratorRecord.NextMethod iteratorRecord.Iterator (new []))</font>> color="black" fillcolor="white" style=filled]
  node7222 [shape=cds, label=<<font color="black">19:app __x8__ = (__x7__ iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node7205 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let nextResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7249 [shape=cds, label=<<font color="black">41:app __x19__ = (__x18__ nextValue iterationEnv)</font>> color="black" fillcolor="white" style=filled]
  node7221 [shape=cds, label=<<font color="black">19:access __x7__ = (lhs &quot;BindingInstantiation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7261 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:return [? __x22__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7225 [shape=cds, label=<<font color="black">23:access __x9__ = (lhs &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7257 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7212 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorValue nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7233 [shape=diamond, label=<<font color="black">(= lhsKind CONST_lexicalBinding)</font>> color="black" fillcolor="white" style=filled]
  node7223 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:__x8__</td></tr>
      <tr><td align="left">20:GLOBAL_context.LexicalEnvironment = iterationEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7218 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:assert (= lhsKind CONST_lexicalBinding)</td></tr>
      <tr><td align="left">17:assert (is-instance-of lhs ForDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7201 [shape=diamond, label=<<font color="black">(&amp;&amp; (= destructuring true) (= lhsKind CONST_assignment))</font>> color="black" fillcolor="white" style=filled]
  node7270 [shape=cds, label=<<font color="black">57:app __x26__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node7255 [shape=cds, label=<<font color="black">app __x21__ = (AsyncIteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7265 [shape=diamond, label=<<font color="black">(= __x24__ false)</font>> color="black" fillcolor="white" style=filled]
  node7206 [shape=diamond, label=<<font color="black">(= iteratorKind CONST_async)</font>> color="black" fillcolor="white" style=filled]
  node7238 [shape=diamond, label=<<font color="black">(= lhsKind CONST_assignment)</font>> color="black" fillcolor="white" style=filled]
  node7275 [shape=cds, label=<<font color="black">59:app __x28__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node7250 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:let status = __x19__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7200 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let destructuring = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7232 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let status = lhsRef</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7211 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7196 [shape=diamond, label=<<font color="black">(= iteratorKind absent)</font>> color="black" fillcolor="white" style=filled]
  node7228 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let lhsRef = [! __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7264 [shape=cds, label=<<font color="black">52:app __x24__ = (LoopContinues result labelSet)</font>> color="black" fillcolor="white" style=filled]
  node7243 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:assert (is-instance-of lhs ForBinding)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7207 [shape=cds, label=<<font color="black">app __x2__ = (Await nextResult)</font>> color="black" fillcolor="white" style=filled]
  node7251 [shape=cds, label=<<font color="black">42:app __x20__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node7202 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (is-instance-of lhs LeftHandSideExpression)</td></tr>
      <tr><td align="left">6:let assignmentPattern = (parse-syntax lhs &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7224 [shape=diamond, label=<<font color="black">(= destructuring false)</font>> color="black" fillcolor="white" style=filled]
  node7234 [shape=cds, label=<<font color="black">29:app __x12__ = (InitializeReferencedBinding lhsRef nextValue)</font>> color="black" fillcolor="white" style=filled]
  node7239 [shape=cds, label=<<font color="black">34:access __x14__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7271 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">57:status = __x26__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x21__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7266 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7216 [shape=cds, label=<<font color="black">14:access __x5__ = (lhs &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7231 [shape=diamond, label=<<font color="black">__x11__</font>> color="black" fillcolor="white" style=filled]
  node7248 [shape=cds, label=<<font color="black">41:access __x18__ = (lhs &quot;BindingInitialization&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7210 [shape=diamond, label=<<font color="black">(! (= __x3__ Object))</font>> color="black" fillcolor="white" style=filled]
  node7259 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">48:assert (= iterationKind CONST_iterate)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7242 [shape=diamond, label=<<font color="black">(= lhsKind CONST_varBinding)</font>> color="black" fillcolor="white" style=filled]
  node7199 [shape=cds, label=<<font color="black">3:access __x0__ = (lhs &quot;IsDestructuring&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7278 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">V = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7214 [shape=diamond, label=<<font color="black">(|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding))</font>> color="black" fillcolor="white" style=filled]
  node7227 [shape=cds, label=<<font color="black">24:app __x10__ = (ResolveBinding lhsName)</font>> color="black" fillcolor="white" style=filled]
  node7263 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">50:let result = __x23__</td></tr>
      <tr><td align="left">51:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7252 [shape=diamond, label=<<font color="black">__x20__</font>> color="black" fillcolor="white" style=filled]
  node7246 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:let status = __x17__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7195 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7274 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x27__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7267 [shape=cds, label=<<font color="black">54:app __x25__ = (UpdateEmpty result V)</font>> color="black" fillcolor="white" style=filled]
  node7251 -> node7252 [ color="black"]
  node7200 -> node7201 [ color="black"]
  node7248 -> node7249 [ color="black"]
  node7209 -> node7210 [ color="black"]
  node7256 -> node7257 [ color="black"]
  node7278 -> node7203 [ color="black"]
  node7205 -> node7206 [ color="black"]
  node7269 -> node7270 [ color="black"]
  node7226 -> node7227 [ color="black"]
  node7225 -> node7226 [ color="black"]
  node7228 -> node7229 [ color="black"]
  node7260 -> node7261 [ color="black"]
  node7234 -> node7235 [ color="black"]
  node7208 -> node7209 [ color="black"]
  node7203 -> node7204 [label=<<font color="black">true</font>> color="black"]
  node7203 -> node7195 [label=<<font color="black">false</font>> color="black"]
  node7262 -> node7263 [ color="black"]
  node7219 -> node7220 [ color="black"]
  node7224 -> node7225 [label=<<font color="black">true</font>> color="black"]
  node7224 -> node7229 [label=<<font color="black">false</font>> color="black"]
  node7252 -> node7253 [label=<<font color="black">true</font>> color="black"]
  node7252 -> node7262 [label=<<font color="black">false</font>> color="black"]
  node7253 -> node7254 [ color="black"]
  node7275 -> node7276 [ color="black"]
  node7273 -> node7274 [ color="black"]
  node7245 -> node7246 [ color="black"]
  node7266 -> node7267 [label=<<font color="black">true</font>> color="black"]
  node7266 -> node7269 [label=<<font color="black">false</font>> color="black"]
  node7246 -> node7251 [ color="black"]
  node7220 -> node7221 [ color="black"]
  node7204 -> node7205 [ color="black"]
  node7250 -> node7251 [ color="black"]
  node7276 -> node7277 [ color="black"]
  node7272 -> node7273 [label=<<font color="black">true</font>> color="black"]
  node7272 -> node7275 [label=<<font color="black">false</font>> color="black"]
  node7223 -> node7224 [ color="black"]
  node7240 -> node7241 [ color="black"]
  node7259 -> node7260 [ color="black"]
  node7227 -> node7228 [ color="black"]
  node7229 -> node7230 [label=<<font color="black">true</font>> color="black"]
  node7229 -> node7238 [label=<<font color="black">false</font>> color="black"]
  node7221 -> node7222 [ color="black"]
  node7215 -> node7216 [label=<<font color="black">true</font>> color="black"]
  node7215 -> node7229 [label=<<font color="black">false</font>> color="black"]
  node7236 -> node7237 [ color="black"]
  node7213 -> node7214 [ color="black"]
  node7202 -> node7203 [ color="black"]
  node7214 -> node7215 [label=<<font color="black">true</font>> color="black"]
  node7214 -> node7218 [label=<<font color="black">false</font>> color="black"]
  node7216 -> node7217 [ color="black"]
  node7261 -> node7262 [ color="black"]
  node7239 -> node7240 [ color="black"]
  node7244 -> node7245 [ color="black"]
  node7238 -> node7239 [label=<<font color="black">true</font>> color="black"]
  node7238 -> node7242 [label=<<font color="black">false</font>> color="black"]
  node7237 -> node7251 [ color="black"]
  node7263 -> node7264 [ color="black"]
  node7194 -> node7196 [ color="black"]
  node7267 -> node7268 [ color="black"]
  node7264 -> node7265 [ color="black"]
  node7232 -> node7251 [ color="black"]
  node7199 -> node7200 [ color="black"]
  node7198 -> node7199 [ color="black"]
  node7211 -> node7212 [ color="black"]
  node7233 -> node7234 [label=<<font color="black">true</font>> color="black"]
  node7233 -> node7236 [label=<<font color="black">false</font>> color="black"]
  node7268 -> node7277 [ color="black"]
  node7230 -> node7231 [ color="black"]
  node7247 -> node7248 [ color="black"]
  node7212 -> node7213 [ color="black"]
  node7201 -> node7202 [label=<<font color="black">true</font>> color="black"]
  node7201 -> node7203 [label=<<font color="black">false</font>> color="black"]
  node7196 -> node7197 [label=<<font color="black">true</font>> color="black"]
  node7196 -> node7198 [label=<<font color="black">false</font>> color="black"]
  node7235 -> node7251 [ color="black"]
  node7255 -> node7256 [ color="black"]
  node7222 -> node7223 [ color="black"]
  node7274 -> node7275 [ color="black"]
  node7210 -> node7211 [label=<<font color="black">true</font>> color="black"]
  node7210 -> node7212 [label=<<font color="black">false</font>> color="black"]
  node7271 -> node7272 [ color="black"]
  node7217 -> node7229 [ color="black"]
  node7270 -> node7271 [ color="black"]
  node7243 -> node7244 [ color="black"]
  node7241 -> node7251 [ color="black"]
  node7206 -> node7207 [label=<<font color="black">true</font>> color="black"]
  node7206 -> node7209 [label=<<font color="black">false</font>> color="black"]
  node7231 -> node7232 [label=<<font color="black">true</font>> color="black"]
  node7231 -> node7233 [label=<<font color="black">false</font>> color="black"]
  node7197 -> node7198 [ color="black"]
  node7218 -> node7219 [ color="black"]
  node7249 -> node7250 [ color="black"]
  node7258 -> node7262 [ color="black"]
  node7277 -> node7278 [label=<<font color="black">true</font>> color="black"]
  node7277 -> node7203 [label=<<font color="black">false</font>> color="black"]
  node7257 -> node7258 [label=<<font color="black">true</font>> color="black"]
  node7257 -> node7259 [label=<<font color="black">false</font>> color="black"]
  node7242 -> node7243 [label=<<font color="black">true</font>> color="black"]
  node7242 -> node7247 [label=<<font color="black">false</font>> color="black"]
  node7254 -> node7255 [label=<<font color="black">true</font>> color="black"]
  node7254 -> node7257 [label=<<font color="black">false</font>> color="black"]
  node7207 -> node7208 [ color="black"]
  node7265 -> node7266 [label=<<font color="black">true</font>> color="black"]
  node7265 -> node7277 [label=<<font color="black">false</font>> color="black"]
}
