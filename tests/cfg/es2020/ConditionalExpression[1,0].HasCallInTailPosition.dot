digraph {
  node10478 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10484 [shape=cds, label=<<font color="black">2:access __x1__ = (AssignmentExpression1 &quot;HasCallInTailPosition&quot; call)</font>> color="black" fillcolor="white" style=filled]
  node10480 [shape=cds, label=<<font color="black">0:access __x0__ = (AssignmentExpression0 &quot;HasCallInTailPosition&quot; call)</font>> color="black" fillcolor="white" style=filled]
  node10481 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let has = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10479 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10483 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10482 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white" style=filled]
  node10481 -> node10482 [ color="black"]
  node10480 -> node10481 [ color="black"]
  node10483 -> node10484 [ color="black"]
  node10484 -> node10485 [ color="black"]
  node10478 -> node10480 [ color="black"]
  node10482 -> node10483 [label=<<font color="black">true</font>> color="black"]
  node10482 -> node10484 [label=<<font color="black">false</font>> color="black"]
  node10485 -> node10479 [ color="black"]
}
