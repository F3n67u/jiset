{
  app __x0__ = (ToObject this)
  let O = [? __x0__]
  app __x1__ = (ArraySpeciesCreate O 0i)
  let A = [? __x1__]
  let n = 0i
  ??? "Let id:{items} be a List whose first element is id:{O} and whose subsequent elements are , in left to right order , the arguments that were passed to this function invocation ."
  while (< 0i items.length) {
    let E = (pop items 0i)
    app __x2__ = (IsConcatSpreadable E)
    let spreadable = [? __x2__]
    if (= spreadable true) {
      let k = 0i
      app __x3__ = (LengthOfArrayLike E)
      let len = [? __x3__]
      if (< (- (** 2.0 53i) 1i) (+ n len)) throw TypeError else {}
      while (< k len) {
        app __x4__ = (ToString k)
        let P = [! __x4__]
        app __x5__ = (HasProperty E P)
        let exists = [? __x5__]
        if (= exists true) {
          app __x6__ = (Get E P)
          let subElement = [? __x6__]
          app __x7__ = (ToString n)
          app __x8__ = (CreateDataPropertyOrThrow A [! __x7__] subElement)
          [? __x8__]
        } else {}
        n = (+ n 1i)
        k = (+ k 1i)
      }
    } else {
      if (! (< n (- (** 2.0 53i) 1i))) throw TypeError else {}
      app __x9__ = (ToString n)
      app __x10__ = (CreateDataPropertyOrThrow A [! __x9__] E)
      [? __x10__]
      n = (+ n 1i)
    }
  }
  app __x11__ = (Set A "length" n true)
  [? __x11__]
  return A
}