digraph {
  node518 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node523 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:??? &quot;Else if id:{PreferredType} is hint String , let id:{hint} be value:{\&quot;string\&quot;} .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;Else , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node533 [shape=diamond, label=<<font color="black">(= hint &quot;default&quot;)</font>> color="black" fillcolor="white" style=filled]
  node527 [shape=cds, label=<<font color="black">9:app __x2__ = (Call exoticToPrim input (new [hint]))</font>> color="black" fillcolor="white" style=filled]
  node522 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let hint = &quot;default&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node519 [shape=cds, label=<<font color="black">1:app __x0__ = (Type input)</font>> color="black" fillcolor="white" style=filled]
  node530 [shape=diamond, label=<<font color="black">(! (= __x3__ Object))</font>> color="black" fillcolor="white" style=filled]
  node521 [shape=diamond, label=<<font color="black">(= PreferredType absent)</font>> color="black" fillcolor="white" style=filled]
  node531 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node525 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let exoticToPrim = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node524 [shape=cds, label=<<font color="black">7:app __x1__ = (GetMethod input SYMBOL_toPrimitive)</font>> color="black" fillcolor="white" style=filled]
  node517 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node532 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node528 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let result = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node529 [shape=cds, label=<<font color="black">10:app __x3__ = (Type result)</font>> color="black" fillcolor="white" style=filled]
  node534 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">hint = &quot;number&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node537 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return input</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node526 [shape=diamond, label=<<font color="black">(! (= exoticToPrim undefined))</font>> color="black" fillcolor="white" style=filled]
  node535 [shape=cds, label=<<font color="black">13:app __x4__ = (OrdinaryToPrimitive input hint)</font>> color="black" fillcolor="white" style=filled]
  node520 [shape=diamond, label=<<font color="black">(= __x0__ Object)</font>> color="black" fillcolor="white" style=filled]
  node517 -> node519 [ color="black"]
  node528 -> node529 [ color="black"]
  node520 -> node521 [label=<<font color="black">true</font>> color="black"]
  node520 -> node537 [label=<<font color="black">false</font>> color="black"]
  node524 -> node525 [ color="black"]
  node522 -> node523 [ color="black"]
  node521 -> node522 [label=<<font color="black">true</font>> color="black"]
  node521 -> node523 [label=<<font color="black">false</font>> color="black"]
  node529 -> node530 [ color="black"]
  node532 -> node533 [ color="black"]
  node533 -> node534 [label=<<font color="black">true</font>> color="black"]
  node533 -> node535 [label=<<font color="black">false</font>> color="black"]
  node535 -> node536 [ color="black"]
  node523 -> node524 [ color="black"]
  node519 -> node520 [ color="black"]
  node537 -> node518 [ color="black"]
  node525 -> node526 [ color="black"]
  node526 -> node527 [label=<<font color="black">true</font>> color="black"]
  node526 -> node533 [label=<<font color="black">false</font>> color="black"]
  node536 -> node537 [ color="black"]
  node530 -> node531 [label=<<font color="black">true</font>> color="black"]
  node530 -> node532 [label=<<font color="black">false</font>> color="black"]
  node527 -> node528 [ color="black"]
  node531 -> node532 [ color="black"]
  node534 -> node535 [ color="black"]
}
