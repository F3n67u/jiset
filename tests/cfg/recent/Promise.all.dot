digraph {
  node18667 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x8__) (! (= __x8__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18661 [shape=cds, label=<<font color="black">app __x7__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node18671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18659 [shape=diamond, label=<<font color="black">__x6__</font>> color="black" fillcolor="white" style=filled]
  node18663 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node18665 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18631 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseResolve = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18646 [shape=cds, label=<<font color="black">4:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node18652 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x4__) (! (= __x4__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18642 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x2__) (! (= __x2__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18639 [shape=diamond, label=<<font color="black">(= promiseResolve.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18656 [shape=cds, label=<<font color="black">6:app __x5__ = (PerformPromiseAll iteratorRecord C promiseCapability promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18636 [shape=cds, label=<<font color="black">2:app __x1__ = (GetPromiseResolve C)</font>> color="black" fillcolor="white" style=filled]
  node18645 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:promiseResolve</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18658 [shape=cds, label=<<font color="black">7:app __x6__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node18664 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18649 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18632 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18668 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18640 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">promiseResolve = promiseResolve.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18641 [shape=cds, label=<<font color="black">app __x2__ = (Call promiseCapability.Reject undefined (new [promiseResolve.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18648 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18633 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18657 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18669 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18666 [shape=cds, label=<<font color="black">app __x8__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18651 [shape=cds, label=<<font color="black">app __x4__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18630 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18662 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18634 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let iteratorRecord = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18638 [shape=diamond, label=<<font color="black">(is-completion promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18660 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node18639 -> node18640 [label=<<font color="black">true</font>> color="black"]
  node18639 -> node18641 [label=<<font color="black">false</font>> color="black"]
  node18666 -> node18667 [ color="black"]
  node18649 -> node18650 [label=<<font color="black">true</font>> color="black"]
  node18649 -> node18651 [label=<<font color="black">false</font>> color="black"]
  node18636 -> node18637 [ color="black"]
  node18633 -> node18634 [ color="black"]
  node18635 -> node18636 [ color="black"]
  node18643 -> node18644 [ color="black"]
  node18669 -> node18670 [ color="black"]
  node18663 -> node18664 [label=<<font color="black">true</font>> color="black"]
  node18663 -> node18670 [label=<<font color="black">false</font>> color="black"]
  node18665 -> node18670 [ color="black"]
  node18664 -> node18665 [label=<<font color="black">true</font>> color="black"]
  node18664 -> node18666 [label=<<font color="black">false</font>> color="black"]
  node18634 -> node18635 [ color="black"]
  node18657 -> node18658 [ color="black"]
  node18668 -> node18669 [ color="black"]
  node18630 -> node18632 [ color="black"]
  node18654 -> node18655 [ color="black"]
  node18652 -> node18653 [label=<<font color="black">true</font>> color="black"]
  node18652 -> node18654 [label=<<font color="black">false</font>> color="black"]
  node18645 -> node18646 [ color="black"]
  node18655 -> node18656 [ color="black"]
  node18640 -> node18645 [ color="black"]
  node18659 -> node18660 [label=<<font color="black">true</font>> color="black"]
  node18659 -> node18671 [label=<<font color="black">false</font>> color="black"]
  node18670 -> node18671 [ color="black"]
  node18642 -> node18643 [label=<<font color="black">true</font>> color="black"]
  node18642 -> node18644 [label=<<font color="black">false</font>> color="black"]
  node18648 -> node18649 [label=<<font color="black">true</font>> color="black"]
  node18648 -> node18655 [label=<<font color="black">false</font>> color="black"]
  node18646 -> node18647 [ color="black"]
  node18644 -> node18645 [ color="black"]
  node18661 -> node18662 [ color="black"]
  node18656 -> node18657 [ color="black"]
  node18647 -> node18648 [ color="black"]
  node18671 -> node18631 [ color="black"]
  node18632 -> node18633 [ color="black"]
  node18638 -> node18639 [label=<<font color="black">true</font>> color="black"]
  node18638 -> node18645 [label=<<font color="black">false</font>> color="black"]
  node18651 -> node18652 [ color="black"]
  node18667 -> node18668 [label=<<font color="black">true</font>> color="black"]
  node18667 -> node18669 [label=<<font color="black">false</font>> color="black"]
  node18662 -> node18663 [ color="black"]
  node18650 -> node18655 [ color="black"]
  node18637 -> node18638 [ color="black"]
  node18653 -> node18654 [ color="black"]
  node18641 -> node18642 [ color="black"]
  node18658 -> node18659 [ color="black"]
  node18660 -> node18661 [label=<<font color="black">true</font>> color="black"]
  node18660 -> node18663 [label=<<font color="black">false</font>> color="black"]
}
