digraph {
  node14912 [shape=cds, label=<<font color="black">1:app __x3__ = (__x2__ direction)</font>> color="black" fillcolor="white" style=filled]
  node14909 [shape=cds, label=<<font color="black">0:app __x1__ = (__x0__ direction)</font>> color="black" fillcolor="white" style=filled]
  node14913 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let m2 = __x3__</td></tr>
      <tr><td align="left">2:??? &quot;Return a new Matcher with parameters ( id:{x} , id:{c} ) that captures id:{m1} and id:{m2} and performs the following steps when called : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14911 [shape=cds, label=<<font color="black">1:access __x2__ = (Disjunction &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14908 [shape=cds, label=<<font color="black">0:access __x0__ = (Alternative &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14906 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14907 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14910 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let m1 = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14911 -> node14912 [ color="black"]
  node14906 -> node14908 [ color="black"]
  node14909 -> node14910 [ color="black"]
  node14913 -> node14907 [ color="black"]
  node14912 -> node14913 [ color="black"]
  node14910 -> node14911 [ color="black"]
  node14908 -> node14909 [ color="black"]
}
