digraph {
  node15009 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node15013 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15002 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.SetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15028 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15014 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node15025 [shape=cds, label=<<font color="black">15:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node15015 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15020 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15027 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node15019 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node14996 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15023 [shape=cds, label=<<font color="black">14:app __x6__ = (Call adder set (new [nextValue.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15008 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15018 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15005 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node15017 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node15022 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15001 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_SetPrototype (new [&quot;SetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15007 [shape=cds, label=<<font color="black">6:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15010 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node14997 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15011 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15004 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15006 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15021 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15026 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node14998 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15000 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15016 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node14999 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15012 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15003 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node15024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15025 -> node15026 [ color="black"]
  node15015 -> node15016 [ color="black"]
  node15009 -> node15010 [ color="black"]
  node15004 -> node15005 [ color="black"]
  node15026 -> node15027 [label=<<font color="black">true</font>> color="black"]
  node15026 -> node15016 [label=<<font color="black">false</font>> color="black"]
  node15013 -> node15014 [ color="black"]
  node15018 -> node15019 [ color="black"]
  node14999 -> node15000 [label=<<font color="black">true</font>> color="black"]
  node14999 -> node15001 [label=<<font color="black">false</font>> color="black"]
  node15028 -> node15016 [ color="black"]
  node15023 -> node15024 [ color="black"]
  node15014 -> node15015 [label=<<font color="black">true</font>> color="black"]
  node15014 -> node15016 [label=<<font color="black">false</font>> color="black"]
  node15012 -> node15013 [ color="black"]
  node15019 -> node15020 [label=<<font color="black">true</font>> color="black"]
  node15019 -> node15021 [label=<<font color="black">false</font>> color="black"]
  node15010 -> node15011 [label=<<font color="black">true</font>> color="black"]
  node15010 -> node15012 [label=<<font color="black">false</font>> color="black"]
  node15000 -> node15001 [ color="black"]
  node15001 -> node15002 [ color="black"]
  node15006 -> node15014 [ color="black"]
  node15002 -> node15003 [ color="black"]
  node14996 -> node14998 [ color="black"]
  node15011 -> node15012 [ color="black"]
  node15005 -> node15006 [label=<<font color="black">true</font>> color="black"]
  node15005 -> node15007 [label=<<font color="black">false</font>> color="black"]
  node15024 -> node15025 [ color="black"]
  node15016 -> node15017 [label=<<font color="black">true</font>> color="black"]
  node15016 -> node14997 [label=<<font color="black">false</font>> color="black"]
  node15007 -> node15008 [ color="black"]
  node15027 -> node15028 [ color="black"]
  node15022 -> node15023 [ color="black"]
  node15017 -> node15018 [ color="black"]
  node15003 -> node15004 [label=<<font color="black">true</font>> color="black"]
  node15003 -> node15005 [label=<<font color="black">false</font>> color="black"]
  node14998 -> node14999 [ color="black"]
  node15021 -> node15022 [ color="black"]
  node15020 -> node15021 [ color="black"]
  node15008 -> node15009 [ color="black"]
}
