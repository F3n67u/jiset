{
  [0] if (! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))) {
    [1] access __x0__ = (DestructuringAssignmentTarget "Evaluation")
    [1] let lref = __x0__
    [2] if (is-completion lref) if (= lref.Type CONST_normal) lref = lref.Value else return lref else [6] {}
    [2] lref
  } else [6] {}
  [3] if (= iteratorRecord.Done false) {
    [4] app __x1__ = (IteratorStep iteratorRecord.Iterator)
    [4] let next = __x1__
    [5] app __x2__ = (IsAbruptCompletion next)
    [5] if __x2__ iteratorRecord.Done = true else [6] {}
    [6] if (is-completion next) if (= next.Type CONST_normal) next = next.Value else return next else [6] {}
    [6] next
    [8] if (= next false) iteratorRecord.Done = true else {
      [9] app __x3__ = (IteratorValue next)
      [9] let value = __x3__
      [10] app __x4__ = (IsAbruptCompletion value)
      [10] if __x4__ iteratorRecord.Done = true else [6] {}
      [11] if (is-completion value) if (= value.Type CONST_normal) value = value.Value else return value else [6] {}
      [11] value
    }
  } else [6] {}
  [12] if (= iteratorRecord.Done true) let value = undefined else [6] {}
  [16] if (&& (! (= Initializer absent)) (= value undefined)) {
    [14] access __x5__ = (Initializer "Evaluation")
    [14] let defaultValue = __x5__
    [15] app __x6__ = (GetValue defaultValue)
    [15] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [6] {}
    [15] let v = __x6__
  } else let v = value
  [17] if (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)) {
    [18] ??? "Let id:{nestedAssignmentPattern} be the parse of the source text corresponding to nt:{DestructuringAssignmentTarget} using either nt:{AssignmentPattern} or nt:{AssignmentPattern[Yield]} as the goal symbol depending upon whether this nt:{AssignmentElement} has the sub:{[ Yield ] } parameter ."
    [19] access __x7__ = (nestedAssignmentPattern "DestructuringAssignmentEvaluation")
    [19] app __x8__ = (__x7__ v)
    [19] app __x9__ = (WrapCompletion __x8__)
    [19] return __x9__
  } else [6] {}
  [20] let __x10__ = (! (= Initializer absent))
  [20] if __x10__ {
    let __x11__ = (= value undefined)
    if __x11__ {
      app __x12__ = (IsAnonymousFunctionDefinition Initializer)
      access __x13__ = (DestructuringAssignmentTarget "IsIdentifierRef")
      __x11__ = (&& (= __x12__ true) (= __x13__ true))
    } else [6] {}
    __x10__ = __x11__
  } else [6] {}
  [20] if __x10__ {
    [21] app __x14__ = (HasOwnProperty v "name")
    [21] if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else [6] {}
    [21] let hasNameProperty = __x14__
    [22] if (= hasNameProperty false) {
      app __x15__ = (GetReferencedName lref)
      app __x16__ = (SetFunctionName v __x15__)
      __x16__
    } else [6] {}
  } else [6] {}
  [23] app __x17__ = (PutValue lref v)
  [23] if (is-completion __x17__) if (= __x17__.Type CONST_normal) __x17__ = __x17__.Value else return __x17__ else [6] {}
  [23] app __x18__ = (WrapCompletion __x17__)
  [23] return __x18__
}