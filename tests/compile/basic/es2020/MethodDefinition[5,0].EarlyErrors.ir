{
  access __x0__ = (PropertySetParameterList "BoundNames")
  app __x1__ = (IsDuplicate __x0__)
  if __x1__ {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else {
    app __x3__ = (NormalCompletion undefined)
    return __x3__
  }
  let __x4__ = true
  access __x5__ = (FunctionBody "ContainsUseStrict")
  __x4__ = (= __x5__ true)
  if __x4__ {
    access __x6__ = (PropertySetParameterList "IsSimpleParameterList")
    __x4__ = (= __x6__ false)
  } else {}
  if __x4__ {
    app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x7__
  } else {
    app __x8__ = (NormalCompletion undefined)
    return __x8__
  }
  access __x9__ = (PropertySetParameterList "BoundNames")
  access __x10__ = (FunctionBody "LexicallyDeclaredNames")
  let __x11__ = __x9__
  let __x12__ = __x10__
  let __x13__ = 0i
  let __x14__ = 0i
  let __x15__ = false
  while (< __x13__ __x11__.length) {
    __x14__ = 0i
    while (< __x14__ __x12__.length) if (= __x11__[__x13__] __x12__[__x14__]) __x15__ = true else {}
  }
  if __x15__ {
    app __x16__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x16__
  } else {
    app __x17__ = (NormalCompletion undefined)
    return __x17__
  }
}