digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">0:app __x0__ = (CreateResolvingFunctions promiseToResolve)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let resolvingFunctions = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=cds, label=<<font color="black">2:app __x2__ = (IsAbruptCompletion thenCallResult)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;NextJob Completion ( id:{thenCallResult} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app promiseToResolve = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let status = __x3__</td></tr>
      <tr><td align="left">4:??? &quot;NextJob Completion ( id:{status} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">1:app __x1__ = (Call then thenable (new [resolvingFunctions.Resolve, resolvingFunctions.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app thenable = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">3:app __x3__ = (Call resolvingFunctions.Reject undefined (new [thenCallResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let thenCallResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">app then = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node7 -> node8 [ color="black"]
  node11 -> node12 [ color="black"]
  node12 -> node13 [ color="black"]
  node0 -> node2 [ color="black"]
  node6 -> node7 [ color="black"]
  node9 -> node10 [ color="black"]
  node4 -> node5 [ color="black"]
  node8 -> node9 [ color="black"]
  node13 -> node1 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node13 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
}
