digraph {
  node16164 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:append (new WriteSharedMemory(&quot;Order&quot; -&gt; order, &quot;NoTear&quot; -&gt; noTear, &quot;Block&quot; -&gt; block, &quot;ByteIndex&quot; -&gt; byteIndex, &quot;ElementSize&quot; -&gt; elementSize, &quot;Payload&quot; -&gt; rawBytes)) -&gt; eventList</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16176 [shape=diamond, label=<<font color="black">(&amp;&amp; (= isTypedArray true) (|| (|| (|| (|| (|| (= type &quot;Int8&quot;) (= type &quot;Uint8&quot;)) (= type &quot;Int16&quot;)) (= type &quot;Uint16&quot;)) (= type &quot;Int32&quot;)) (= type &quot;Uint32&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node16172 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rawBytes = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16163 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16169 [shape=diamond, label=<<font color="black">(= isLittleEndian absent)</font>> color="black" fillcolor="white" style=filled]
  node16177 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16170 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">isLittleEndian = GLOBAL_agent.LittleEndian</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16166 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16180 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:??? &quot;Else , store the individual bytes of id:{rawBytes} into id:{block} , in order , starting at id:{block} [ id:{byteIndex} ] .&quot;</td></tr>
      <tr><td align="left">14:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16165 [shape=cds, label=<<font color="black">0:app __x0__ = (IsDetachedBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let execution = GLOBAL_agent.CandidateExecution</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{eventList} be the [ [ EventList ] ] field of the element in id:{execution} . [ [ EventLists ] ] whose [ [ AgentSignifier ] ] is AgentSignifier ( ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16171 [shape=cds, label=<<font color="black">7:app __x2__ = (NumberToRawBytes type value isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16173 [shape=cds, label=<<font color="black">8:app __x3__ = (IsSharedArrayBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16178 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16168 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Number)</td></tr>
      <tr><td align="left">4:let block = arrayBuffer.ArrayBufferData</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16167 [shape=cds, label=<<font color="black">3:app __x1__ = (Type value)</font>> color="black" fillcolor="white" style=filled]
  node16174 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node16167 -> node16168 [ color="black"]
  node16175 -> node16176 [ color="black"]
  node16172 -> node16173 [ color="black"]
  node16163 -> node16165 [ color="black"]
  node16173 -> node16174 [ color="black"]
  node16179 -> node16180 [ color="black"]
  node16177 -> node16179 [ color="black"]
  node16165 -> node16166 [ color="black"]
  node16178 -> node16179 [ color="black"]
  node16176 -> node16177 [label=<<font color="black">true</font>> color="black"]
  node16176 -> node16178 [label=<<font color="black">false</font>> color="black"]
  node16180 -> node16164 [ color="black"]
  node16166 -> node16167 [ color="black"]
  node16170 -> node16171 [ color="black"]
  node16168 -> node16169 [ color="black"]
  node16174 -> node16175 [label=<<font color="black">true</font>> color="black"]
  node16174 -> node16180 [label=<<font color="black">false</font>> color="black"]
  node16169 -> node16170 [label=<<font color="black">true</font>> color="black"]
  node16169 -> node16171 [label=<<font color="black">false</font>> color="black"]
  node16171 -> node16172 [ color="black"]
}
