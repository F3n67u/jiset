digraph {
  node18171 [shape=cds, label=<<font color="black">2:app __x0__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node18175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let arrayTypeName = typedArray.TypedArrayName</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:return (+ (* accessIndex elementSize) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18168 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18172 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let accessIndex = [? __x0__]</td></tr>
      <tr><td align="left">3:assert (! (&lt; accessIndex 0i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18169 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18173 [shape=diamond, label=<<font color="black">(! (&lt; accessIndex length))</font>> color="black" fillcolor="white" style=filled]
  node18170 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let length = typedArray.ArrayLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18174 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18170 -> node18171 [ color="black"]
  node18168 -> node18170 [ color="black"]
  node18174 -> node18175 [ color="black"]
  node18171 -> node18172 [ color="black"]
  node18175 -> node18169 [ color="black"]
  node18172 -> node18173 [ color="black"]
  node18173 -> node18174 [label=<<font color="black">true</font>> color="black"]
  node18173 -> node18175 [label=<<font color="black">false</font>> color="black"]
}
