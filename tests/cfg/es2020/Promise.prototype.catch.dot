digraph {
  node18814 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18816 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let promise = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18813 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18817 [shape=cds, label=<<font color="black">1:app __x0__ = (Invoke promise &quot;then&quot; (new [undefined, onRejected]))</font>> color="black" fillcolor="white" style=filled]
  node18815 [shape=cds, label=<<font color="black">app onRejected = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18815 -> node18816 [ color="black"]
  node18817 -> node18818 [ color="black"]
  node18816 -> node18817 [ color="black"]
  node18813 -> node18815 [ color="black"]
  node18818 -> node18814 [ color="black"]
}
