digraph {
  node15532 [shape=cds, label=<<font color="black">5:app __x1__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node15536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15531 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = (new PromiseCapability(&quot;Promise&quot; -&gt; undefined, &quot;Resolve&quot; -&gt; undefined, &quot;Reject&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:let executor = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">4:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15527 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15530 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15528 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node15539 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15537 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node15526 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15538 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node15535 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15529 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node15534 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node15540 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">9:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15533 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promise = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15531 -> node15532 [ color="black"]
  node15530 -> node15531 [ color="black"]
  node15536 -> node15537 [ color="black"]
  node15535 -> node15536 [label=<<font color="black">true</font>> color="black"]
  node15535 -> node15537 [label=<<font color="black">false</font>> color="black"]
  node15533 -> node15534 [ color="black"]
  node15526 -> node15528 [ color="black"]
  node15529 -> node15530 [label=<<font color="black">true</font>> color="black"]
  node15529 -> node15531 [label=<<font color="black">false</font>> color="black"]
  node15528 -> node15529 [ color="black"]
  node15540 -> node15527 [ color="black"]
  node15537 -> node15538 [ color="black"]
  node15539 -> node15540 [ color="black"]
  node15532 -> node15533 [ color="black"]
  node15538 -> node15539 [label=<<font color="black">true</font>> color="black"]
  node15538 -> node15540 [label=<<font color="black">false</font>> color="black"]
  node15534 -> node15535 [ color="black"]
}
