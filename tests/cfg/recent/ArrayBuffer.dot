digraph {
  node17607 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17603 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17601 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17599 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17606 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17605 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17600 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17602 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17604 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node17605 -> node17606 [ color="black"]
  node17604 -> node17605 [ color="black"]
  node17599 -> node17601 [ color="black"]
  node17603 -> node17604 [ color="black"]
  node17606 -> node17607 [ color="black"]
  node17602 -> node17603 [label=<<font color="black">true</font>> color="black"]
  node17602 -> node17604 [label=<<font color="black">false</font>> color="black"]
  node17607 -> node17600 [ color="black"]
  node17601 -> node17602 [ color="black"]
}
