["If", {
  "nt": "DestructuringAssignmentTarget"
}, "is", "neither", "an", {
  "nt": "ObjectLiteral"
}, "nor", "an", {
  "nt": "ArrayLiteral"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "lref"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "DestructuringAssignmentTarget"
}, ".", "ReturnIfAbrupt", "(", {
  "id": "lref"
}, ")", ".", {
  "out": null
}, {
  "k": 0
}, "Let", {
  "id": "A"
}, "be", "!", "ArrayCreate", "(", "0", ")", ".", {
  "k": 1
}, "Let", {
  "id": "n"
}, "be", "0", ".", {
  "k": 2
}, "Repeat", ",", "while", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Done", "]", "]", "is", {
  "value": "false"
}, ",", {
  "in": null
}, "Let", {
  "id": "next"
}, "be", "IteratorStep", "(", {
  "id": "iteratorRecord"
}, ")", ".", "If", {
  "id": "next"
}, "is", "an", "abrupt", "completion", ",", "set", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Done", "]", "]", "to", {
  "value": "true"
}, ".", "ReturnIfAbrupt", "(", {
  "id": "next"
}, ")", ".", "If", {
  "id": "next"
}, "is", {
  "value": "false"
}, ",", "set", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Done", "]", "]", "to", {
  "value": "true"
}, ".", "Else", ",", {
  "in": null
}, "Let", {
  "id": "nextValue"
}, "be", "IteratorValue", "(", {
  "id": "next"
}, ")", ".", "If", {
  "id": "nextValue"
}, "is", "an", "abrupt", "completion", ",", "set", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Done", "]", "]", "to", {
  "value": "true"
}, ".", "ReturnIfAbrupt", "(", {
  "id": "nextValue"
}, ")", ".", "Perform", "!", "CreateDataPropertyOrThrow", "(", {
  "id": "A"
}, ",", "!", "ToString", "(", {
  "id": "n"
}, ")", ",", {
  "id": "nextValue"
}, ")", ".", "Set", {
  "id": "n"
}, "to", {
  "id": "n"
}, "+", "1", ".", {
  "out": null
}, {
  "out": null
}, {
  "k": 3
}, "If", {
  "nt": "DestructuringAssignmentTarget"
}, "is", "neither", "an", {
  "nt": "ObjectLiteral"
}, "nor", "an", {
  "nt": "ArrayLiteral"
}, ",", "then", {
  "in": null
}, "Return", "?", "PutValue", "(", {
  "id": "lref"
}, ",", {
  "id": "A"
}, ")", ".", {
  "out": null
}, {
  "k": 4
}, "Let", {
  "id": "nestedAssignmentPattern"
}, "be", "the", {
  "nt": "AssignmentPattern"
}, "that", "is", "covered", "by", {
  "nt": "DestructuringAssignmentTarget"
}, ".", {
  "k": 5
}, "Return", "the", "result", "of", "performing", "DestructuringAssignmentEvaluation", "of", {
  "id": "nestedAssignmentPattern"
}, "with", {
  "id": "A"
}, "as", "the", "argument", ".", {
  "k": 6
}]