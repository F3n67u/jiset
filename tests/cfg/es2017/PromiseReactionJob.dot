digraph {
  node16402 [shape=cds, label=<<font color="black">app __x1__ = (Call handler undefined (new [argument]))</font>> color="black" fillcolor="white" style=filled]
  node16398 [shape=diamond, label=<<font color="black">(= type &quot;Fulfill&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16409 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let status = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16394 [shape=cds, label=<<font color="black">app reaction = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16406 [shape=cds, label=<<font color="black">11:app __x3__ = (Call promiseCapability.Reject undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16401 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= type &quot;Reject&quot;)</td></tr>
      <tr><td align="left">8:let handlerResult = (new Completion(&quot;Type&quot; -&gt; CONST_throw, &quot;Value&quot; -&gt; argument, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16399 [shape=cds, label=<<font color="black">app __x0__ = (NormalCompletion argument)</font>> color="black" fillcolor="white" style=filled]
  node16410 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return status</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16405 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node16395 [shape=cds, label=<<font color="black">app argument = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16400 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16404 [shape=cds, label=<<font color="black">12:app __x2__ = (IsAbruptCompletion handlerResult)</font>> color="black" fillcolor="white" style=filled]
  node16408 [shape=cds, label=<<font color="black">13:app __x4__ = (Call promiseCapability.Resolve undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16396 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = reaction.Capability</td></tr>
      <tr><td align="left">2:let type = reaction.Type</td></tr>
      <tr><td align="left">3:let handler = reaction.Handler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16397 [shape=diamond, label=<<font color="black">(= handler undefined)</font>> color="black" fillcolor="white" style=filled]
  node16403 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16407 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let status = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16393 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16392 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16405 -> node16406 [label=<<font color="black">true</font>> color="black"]
  node16405 -> node16408 [label=<<font color="black">false</font>> color="black"]
  node16407 -> node16410 [ color="black"]
  node16403 -> node16404 [ color="black"]
  node16398 -> node16399 [label=<<font color="black">true</font>> color="black"]
  node16398 -> node16401 [label=<<font color="black">false</font>> color="black"]
  node16401 -> node16404 [ color="black"]
  node16410 -> node16393 [ color="black"]
  node16396 -> node16397 [ color="black"]
  node16395 -> node16396 [ color="black"]
  node16392 -> node16394 [ color="black"]
  node16408 -> node16409 [ color="black"]
  node16394 -> node16395 [ color="black"]
  node16400 -> node16404 [ color="black"]
  node16406 -> node16407 [ color="black"]
  node16409 -> node16410 [ color="black"]
  node16397 -> node16398 [label=<<font color="black">true</font>> color="black"]
  node16397 -> node16402 [label=<<font color="black">false</font>> color="black"]
  node16399 -> node16400 [ color="black"]
  node16402 -> node16403 [ color="black"]
  node16404 -> node16405 [ color="black"]
}
