{
  let O = this
  let f = GLOBAL_context.Function
  if (= O.IteratorNext absent) throw TypeError else {}
  let next = O.IteratorNext
  app __x0__ = (SameValue f next)
  if (= __x0__ false) throw TypeError else {}
  if (= O.IteratedList absent) throw TypeError else {}
  let list = O.IteratedList
  let index = O.ListIteratorNextIndex
  let len = list.length
  if (! (< index len)) {
    app __x1__ = (CreateIterResultObject undefined true)
    return __x1__
  } else {}
  O.ListIteratorNextIndex = (+ index 1i)
  app __x2__ = (CreateIterResultObject list[index] false)
  return __x2__
}