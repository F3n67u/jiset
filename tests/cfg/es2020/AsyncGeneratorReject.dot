digraph {
  node18050 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[! __x1__]</td></tr>
      <tr><td align="left">7:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18043 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18047 [shape=cds, label=<<font color="black">5:app __x0__ = (Call promiseCapability.Reject undefined (new [exception]))</font>> color="black" fillcolor="white" style=filled]
  node18044 [shape=cds, label=<<font color="black">app generator = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18049 [shape=cds, label=<<font color="black">6:app __x1__ = (AsyncGeneratorResumeNext generator)</font>> color="black" fillcolor="white" style=filled]
  node18048 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18045 [shape=cds, label=<<font color="black">app exception = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let queue = generator.AsyncGeneratorQueue</td></tr>
      <tr><td align="left">2:assert (&lt; 0i queue.length)</td></tr>
      <tr><td align="left">3:let next = (pop queue 0i)</td></tr>
      <tr><td align="left">4:let promiseCapability = next.Capability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18042 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18050 -> node18043 [ color="black"]
  node18042 -> node18044 [ color="black"]
  node18047 -> node18048 [ color="black"]
  node18049 -> node18050 [ color="black"]
  node18046 -> node18047 [ color="black"]
  node18044 -> node18045 [ color="black"]
  node18045 -> node18046 [ color="black"]
  node18048 -> node18049 [ color="black"]
}
