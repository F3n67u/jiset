digraph {
  node17986 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17983 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17979 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17980 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17985 [shape=cds, label=<<font color="black">1:app __x1__ = (target.IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node17984 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17981 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17982 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node17981 -> node17982 [ color="black"]
  node17983 -> node17984 [label=<<font color="black">true</font>> color="black"]
  node17983 -> node17985 [label=<<font color="black">false</font>> color="black"]
  node17985 -> node17986 [ color="black"]
  node17982 -> node17983 [ color="black"]
  node17986 -> node17980 [ color="black"]
  node17979 -> node17981 [ color="black"]
  node17984 -> node17985 [ color="black"]
}
