digraph {
  node15720 [shape=cds, label=<<font color="black">3:app __x3__ = (IsNonNegativeInteger start)</font>> color="black" fillcolor="white" style=filled]
  node15735 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let shouldFlatten = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15706 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15724 [shape=diamond, label=<<font color="black">(&lt; sourceIndex sourceLen)</font>> color="black" fillcolor="white" style=filled]
  node15728 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let exists = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15747 [shape=cds, label=<<font color="black">23:app __x13__ = (CreateDataPropertyOrThrow target [! __x12__] element)</font>> color="black" fillcolor="white" style=filled]
  node15725 [shape=cds, label=<<font color="black">9:app __x5__ = (ToString sourceIndex)</font>> color="black" fillcolor="white" style=filled]
  node15746 [shape=cds, label=<<font color="black">23:app __x12__ = (ToString targetIndex)</font>> color="black" fillcolor="white" style=filled]
  node15721 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= [! __x3__] true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15749 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:sourceIndex = (+ sourceIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15722 [shape=cds, label=<<font color="black">4:app __x4__ = (IsInteger depth)</font>> color="black" fillcolor="white" style=filled]
  node15723 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (|| (= [! __x4__] true) (|| (= depth Infinity) (= depth -Infinity)))</td></tr>
      <tr><td align="left">6:let targetIndex = start</td></tr>
      <tr><td align="left">7:let sourceIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15730 [shape=cds, label=<<font color="black">12:app __x7__ = (Get source P)</font>> color="black" fillcolor="white" style=filled]
  node15727 [shape=cds, label=<<font color="black">10:app __x6__ = (HasProperty source P)</font>> color="black" fillcolor="white" style=filled]
  node15742 [shape=cds, label=<<font color="black">20:app __x11__ = (FlattenIntoArray target element elementLen targetIndex (- depth 1i))</font>> color="black" fillcolor="white" style=filled]
  node15744 [shape=diamond, label=<<font color="black">(! (&lt; targetIndex (- (** 2.0 53i) 1i)))</font>> color="black" fillcolor="white" style=filled]
  node15716 [shape=cds, label=<<font color="black">1:app __x1__ = (Type source)</font>> color="black" fillcolor="white" style=filled]
  node15748 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:[? __x13__]</td></tr>
      <tr><td align="left">24:targetIndex = (+ targetIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15712 [shape=cds, label=<<font color="black">app mapperFunction = (GetArgument argumentsList 5i)</font>> color="black" fillcolor="white" style=filled]
  node15710 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 3i)</font>> color="black" fillcolor="white" style=filled]
  node15738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:shouldFlatten = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15734 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:element = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15719 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= [! __x2__] true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15739 [shape=diamond, label=<<font color="black">(= shouldFlatten true)</font>> color="black" fillcolor="white" style=filled]
  node15714 [shape=cds, label=<<font color="black">0:app __x0__ = (Type target)</font>> color="black" fillcolor="white" style=filled]
  node15729 [shape=diamond, label=<<font color="black">(= exists true)</font>> color="black" fillcolor="white" style=filled]
  node15707 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15715 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15718 [shape=cds, label=<<font color="black">2:app __x2__ = (IsNonNegativeInteger sourceLen)</font>> color="black" fillcolor="white" style=filled]
  node15733 [shape=cds, label=<<font color="black">14:app __x8__ = (Call mapperFunction thisArg (new [element, sourceIndex, source]))</font>> color="black" fillcolor="white" style=filled]
  node15708 [shape=cds, label=<<font color="black">app source = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15740 [shape=cds, label=<<font color="black">19:app __x10__ = (LengthOfArrayLike element)</font>> color="black" fillcolor="white" style=filled]
  node15713 [shape=cds, label=<<font color="black">app thisArg = (GetArgument argumentsList 6i)</font>> color="black" fillcolor="white" style=filled]
  node15750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:return targetIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15745 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15736 [shape=diamond, label=<<font color="black">(&lt; 0i depth)</font>> color="black" fillcolor="white" style=filled]
  node15717 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15731 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let element = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15743 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:targetIndex = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15705 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15726 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let P = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let elementLen = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15737 [shape=cds, label=<<font color="black">17:app __x9__ = (IsArray element)</font>> color="black" fillcolor="white" style=filled]
  node15732 [shape=diamond, label=<<font color="black">(! (= mapperFunction absent))</font>> color="black" fillcolor="white" style=filled]
  node15711 [shape=cds, label=<<font color="black">app depth = (GetArgument argumentsList 4i)</font>> color="black" fillcolor="white" style=filled]
  node15709 [shape=cds, label=<<font color="black">app sourceLen = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node15720 -> node15721 [ color="black"]
  node15749 -> node15724 [ color="black"]
  node15744 -> node15745 [label=<<font color="black">true</font>> color="black"]
  node15744 -> node15746 [label=<<font color="black">false</font>> color="black"]
  node15743 -> node15749 [ color="black"]
  node15713 -> node15714 [ color="black"]
  node15740 -> node15741 [ color="black"]
  node15715 -> node15716 [ color="black"]
  node15707 -> node15708 [ color="black"]
  node15726 -> node15727 [ color="black"]
  node15710 -> node15711 [ color="black"]
  node15728 -> node15729 [ color="black"]
  node15731 -> node15732 [ color="black"]
  node15730 -> node15731 [ color="black"]
  node15737 -> node15738 [ color="black"]
  node15722 -> node15723 [ color="black"]
  node15709 -> node15710 [ color="black"]
  node15732 -> node15733 [label=<<font color="black">true</font>> color="black"]
  node15732 -> node15735 [label=<<font color="black">false</font>> color="black"]
  node15721 -> node15722 [ color="black"]
  node15739 -> node15740 [label=<<font color="black">true</font>> color="black"]
  node15739 -> node15744 [label=<<font color="black">false</font>> color="black"]
  node15705 -> node15707 [ color="black"]
  node15750 -> node15706 [ color="black"]
  node15725 -> node15726 [ color="black"]
  node15745 -> node15746 [ color="black"]
  node15734 -> node15735 [ color="black"]
  node15719 -> node15720 [ color="black"]
  node15723 -> node15724 [ color="black"]
  node15712 -> node15713 [ color="black"]
  node15729 -> node15730 [label=<<font color="black">true</font>> color="black"]
  node15729 -> node15749 [label=<<font color="black">false</font>> color="black"]
  node15733 -> node15734 [ color="black"]
  node15708 -> node15709 [ color="black"]
  node15714 -> node15715 [ color="black"]
  node15736 -> node15737 [label=<<font color="black">true</font>> color="black"]
  node15736 -> node15739 [label=<<font color="black">false</font>> color="black"]
  node15724 -> node15725 [label=<<font color="black">true</font>> color="black"]
  node15724 -> node15750 [label=<<font color="black">false</font>> color="black"]
  node15716 -> node15717 [ color="black"]
  node15746 -> node15747 [ color="black"]
  node15747 -> node15748 [ color="black"]
  node15742 -> node15743 [ color="black"]
  node15741 -> node15742 [ color="black"]
  node15735 -> node15736 [ color="black"]
  node15727 -> node15728 [ color="black"]
  node15748 -> node15749 [ color="black"]
  node15711 -> node15712 [ color="black"]
  node15718 -> node15719 [ color="black"]
  node15717 -> node15718 [ color="black"]
  node15738 -> node15739 [ color="black"]
}
