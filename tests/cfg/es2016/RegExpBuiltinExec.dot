digraph {
  node12714 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{capturedValue} be a string whose code units are the UTF16Encoding of the code points of id:{captureI} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let lastIndex = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12696 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:??? &quot;id:{e} is an index into the id:{Input} character list , derived from id:{S} , matched by id:{matcher} . Let id:{eUTF} be the smallest index into id:{S} that corresponds to the character at element id:{e} of id:{Input} . If id:{e} is greater than or equal to the length of id:{Input} , then id:{eUTF} is the number of code units in id:{S} .&quot;</td></tr>
      <tr><td align="left">27:let e = eUTF</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12671 [shape=cds, label=<<font color="black">5:app __x5__ = (Get R &quot;sticky&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12677 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12716 [shape=cds, label=<<font color="black">app __x17__ = (ToString i)</font>> color="black" fillcolor="white" style=filled]
  node12684 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x7__]</td></tr>
      <tr><td align="left">14:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12665 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12690 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? __x9__]</td></tr>
      <tr><td align="left">19:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12694 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let e = r.endIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12710 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{captureI} be id:{i} sup:{th} element of id:{r} ' s id:{captures} List .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12699 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:[? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12689 [shape=cds, label=<<font color="black">18:app __x9__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node12674 [shape=diamond, label=<<font color="black">(&amp;&amp; (= global false) (= sticky false))</font>> color="black" fillcolor="white" style=filled]
  node12666 [shape=cds, label=<<font color="black">3:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node12686 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let r = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12661 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12718 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[! __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12713 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node12693 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">matchSucceeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12682 [shape=diamond, label=<<font color="black">(&lt; length lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node12706 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x14__]</td></tr>
      <tr><td align="left">36:??? &quot;Let id:{matchedSubstr} be the matched substring ( i . e . the portion of id:{S} between offset id:{lastIndex} inclusive and offset id:{e} exclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12703 [shape=cds, label=<<font color="black">34:app __x13__ = (CreateDataProperty A &quot;index&quot; matchIndex)</font>> color="black" fillcolor="white" style=filled]
  node12678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let global = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12705 [shape=cds, label=<<font color="black">35:app __x14__ = (CreateDataProperty A &quot;input&quot; S)</font>> color="black" fillcolor="white" style=filled]
  node12673 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let sticky = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12687 [shape=diamond, label=<<font color="black">(= r CONST_failure)</font>> color="black" fillcolor="white" style=filled]
  node12715 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Else , id:{fullUnicode} is value:{false} , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ String)</td></tr>
      <tr><td align="left">2:let length = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12700 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:??? &quot;Let id:{n} be the length of id:{r} ' s id:{captures} List . ( This is the same value as link:{unhandled: sec-notation} ' s id:{NcapturingParens} . )&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12692 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let lastIndex = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12709 [shape=diamond, label=<<font color="black">(&lt; i __x16__)</font>> color="black" fillcolor="white" style=filled]
  node12683 [shape=cds, label=<<font color="black">13:app __x7__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node12704 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:[! __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12719 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">48:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12688 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node12663 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node12676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let matcher = R.RegExpMatcher</td></tr>
      <tr><td align="left">8:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12668 [shape=cds, label=<<font color="black">4:app __x3__ = (Get R &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12712 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12697 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node12691 [shape=cds, label=<<font color="black">20:app __x10__ = (AdvanceStringIndex S lastIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node12680 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let matchSucceeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12672 [shape=cds, label=<<font color="black">5:app __x6__ = (ToBoolean [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node12708 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:[! __x15__]</td></tr>
      <tr><td align="left">38:let i = (+ 0i 1i)</td></tr>
      <tr><td align="left">38:let __x16__ = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12701 [shape=cds, label=<<font color="black">31:app __x12__ = (ArrayCreate (+ n 1i))</font>> color="black" fillcolor="white" style=filled]
  node12695 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node12698 [shape=cds, label=<<font color="black">29:app __x11__ = (Set R &quot;lastIndex&quot; e true)</font>> color="black" fillcolor="white" style=filled]
  node12662 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12685 [shape=cds, label=<<font color="black">15:app __x8__ = (matcher S lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node12675 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let lastIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12711 [shape=diamond, label=<<font color="black">(= captureI undefined)</font>> color="black" fillcolor="white" style=filled]
  node12702 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let A = __x12__</td></tr>
      <tr><td align="left">33:let matchIndex = lastIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12681 [shape=diamond, label=<<font color="black">(= matchSucceeded false)</font>> color="black" fillcolor="white" style=filled]
  node12679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12707 [shape=cds, label=<<font color="black">37:app __x15__ = (CreateDataProperty A &quot;0&quot; matchedSubstr)</font>> color="black" fillcolor="white" style=filled]
  node12669 [shape=cds, label=<<font color="black">4:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node12717 [shape=cds, label=<<font color="black">app __x18__ = (CreateDataProperty A [! __x17__] capturedValue)</font>> color="black" fillcolor="white" style=filled]
  node12683 -> node12684 [ color="black"]
  node12671 -> node12672 [ color="black"]
  node12713 -> node12714 [label=<<font color="black">true</font>> color="black"]
  node12713 -> node12715 [label=<<font color="black">false</font>> color="black"]
  node12661 -> node12663 [ color="black"]
  node12692 -> node12681 [ color="black"]
  node12670 -> node12671 [ color="black"]
  node12688 -> node12689 [label=<<font color="black">true</font>> color="black"]
  node12688 -> node12691 [label=<<font color="black">false</font>> color="black"]
  node12686 -> node12687 [ color="black"]
  node12710 -> node12711 [ color="black"]
  node12708 -> node12709 [ color="black"]
  node12695 -> node12696 [label=<<font color="black">true</font>> color="black"]
  node12695 -> node12697 [label=<<font color="black">false</font>> color="black"]
  node12690 -> node12691 [ color="black"]
  node12689 -> node12690 [ color="black"]
  node12664 -> node12665 [ color="black"]
  node12665 -> node12666 [ color="black"]
  node12693 -> node12681 [ color="black"]
  node12717 -> node12718 [ color="black"]
  node12673 -> node12674 [ color="black"]
  node12702 -> node12703 [ color="black"]
  node12707 -> node12708 [ color="black"]
  node12682 -> node12683 [label=<<font color="black">true</font>> color="black"]
  node12682 -> node12685 [label=<<font color="black">false</font>> color="black"]
  node12669 -> node12670 [ color="black"]
  node12699 -> node12700 [ color="black"]
  node12704 -> node12705 [ color="black"]
  node12715 -> node12716 [ color="black"]
  node12663 -> node12664 [ color="black"]
  node12679 -> node12680 [ color="black"]
  node12697 -> node12698 [label=<<font color="black">true</font>> color="black"]
  node12697 -> node12700 [label=<<font color="black">false</font>> color="black"]
  node12701 -> node12702 [ color="black"]
  node12716 -> node12717 [ color="black"]
  node12698 -> node12699 [ color="black"]
  node12709 -> node12710 [label=<<font color="black">true</font>> color="black"]
  node12709 -> node12719 [label=<<font color="black">false</font>> color="black"]
  node12678 -> node12680 [ color="black"]
  node12684 -> node12685 [ color="black"]
  node12719 -> node12662 [ color="black"]
  node12680 -> node12681 [ color="black"]
  node12691 -> node12692 [ color="black"]
  node12681 -> node12682 [label=<<font color="black">true</font>> color="black"]
  node12681 -> node12694 [label=<<font color="black">false</font>> color="black"]
  node12676 -> node12677 [ color="black"]
  node12696 -> node12697 [ color="black"]
  node12718 -> node12709 [ color="black"]
  node12712 -> node12715 [ color="black"]
  node12666 -> node12667 [ color="black"]
  node12672 -> node12673 [ color="black"]
  node12687 -> node12688 [label=<<font color="black">true</font>> color="black"]
  node12687 -> node12693 [label=<<font color="black">false</font>> color="black"]
  node12668 -> node12669 [ color="black"]
  node12675 -> node12676 [ color="black"]
  node12703 -> node12704 [ color="black"]
  node12674 -> node12675 [label=<<font color="black">true</font>> color="black"]
  node12674 -> node12676 [label=<<font color="black">false</font>> color="black"]
  node12667 -> node12668 [ color="black"]
  node12706 -> node12707 [ color="black"]
  node12705 -> node12706 [ color="black"]
  node12700 -> node12701 [ color="black"]
  node12694 -> node12695 [ color="black"]
  node12711 -> node12712 [label=<<font color="black">true</font>> color="black"]
  node12711 -> node12713 [label=<<font color="black">false</font>> color="black"]
  node12677 -> node12678 [label=<<font color="black">true</font>> color="black"]
  node12677 -> node12679 [label=<<font color="black">false</font>> color="black"]
  node12685 -> node12686 [ color="black"]
  node12714 -> node12715 [ color="black"]
}
