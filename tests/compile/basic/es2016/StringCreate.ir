{
  app __x0__ = (Type value)
  assert (= __x0__ String)
  let S = (new StringExoticObject("SubMap" -> (new SubMap())))
  S.StringData = value
  S.GetOwnProperty = StringExoticObjectDOTGetOwnProperty
  S.OwnPropertyKeys = StringExoticObjectDOTOwnPropertyKeys
  S.Prototype = prototype
  S.Extensible = true
  let length = value.length
  app __x1__ = (DefinePropertyOrThrow S "length" (new PropertyDescriptor("Value" -> length, "Writable" -> false, "Enumerable" -> false, "Configurable" -> false)))
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  __x1__
  app __x2__ = (WrapCompletion S)
  return __x2__
}