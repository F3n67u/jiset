{
  access __x0__ = (UnaryExpression "Evaluation")
  let expr = __x0__
  app __x1__ = (GetValue expr)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  app __x2__ = (ToNumeric __x1__)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let oldValue = __x2__
  app __x3__ = (Type oldValue)
  app __x4__ = (Type oldValue)
  app __x5__ = (PRIMITIVE[__x3__].subtract oldValue PRIMITIVE[__x4__].unit)
  if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
  let newValue = __x5__
  app __x6__ = (PutValue expr newValue)
  if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
  __x6__
  app __x7__ = (WrapCompletion newValue)
  return __x7__
}