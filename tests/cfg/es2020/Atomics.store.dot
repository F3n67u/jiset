digraph {
  node17473 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17475 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17481 [shape=cds, label=<<font color="black">app __x3__ = (ToInteger value)</font>> color="black" fillcolor="white" style=filled]
  node17485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:__x4__</td></tr>
      <tr><td align="left">10:return v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17470 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17477 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
      <tr><td align="left">2:let arrayTypeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17478 [shape=diamond, label=<<font color="black">(|| (= arrayTypeName &quot;BigUint64Array&quot;) (= arrayTypeName &quot;BigInt64Array&quot;))</font>> color="black" fillcolor="white" style=filled]
  node17482 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17471 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17480 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17472 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17483 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:let indexedPosition = (+ (* i elementSize) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17479 [shape=cds, label=<<font color="black">app __x2__ = (ToBigInt value)</font>> color="black" fillcolor="white" style=filled]
  node17469 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17484 [shape=cds, label=<<font color="black">9:app __x4__ = (SetValueInBuffer buffer indexedPosition elementType v true CONST_SeqCst)</font>> color="black" fillcolor="white" style=filled]
  node17474 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray)</font>> color="black" fillcolor="white" style=filled]
  node17476 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node17471 -> node17472 [ color="black"]
  node17473 -> node17474 [ color="black"]
  node17472 -> node17473 [ color="black"]
  node17469 -> node17471 [ color="black"]
  node17475 -> node17476 [ color="black"]
  node17485 -> node17470 [ color="black"]
  node17484 -> node17485 [ color="black"]
  node17477 -> node17478 [ color="black"]
  node17480 -> node17483 [ color="black"]
  node17474 -> node17475 [ color="black"]
  node17478 -> node17479 [label=<<font color="black">true</font>> color="black"]
  node17478 -> node17481 [label=<<font color="black">false</font>> color="black"]
  node17479 -> node17480 [ color="black"]
  node17483 -> node17484 [ color="black"]
  node17476 -> node17477 [ color="black"]
  node17482 -> node17483 [ color="black"]
  node17481 -> node17482 [ color="black"]
}
