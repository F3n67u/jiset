{
  let keys = (new [])
  let len = O["ArrayLength"]
  let i = (+ 0i 0i)
  let __x0__ = (+ len 0i)
  while (< i __x0__) {
    app __x1__ = (ToString i)
    if (is-completion __x1__) if (= __x1__["Type"] CONST_normal) __x1__ = __x1__["Value"] else return __x1__ else {}
    append __x1__ -> keys
  }
  ??? "For each own property key id:{P} of id:{O} such that Type ( id:{P} ) is String and id:{P} is not an integer index , in ascending chronological order of property creation , do step-list:{...}"
  ??? "For each own property key id:{P} of id:{O} such that Type ( id:{P} ) is Symbol , in ascending chronological order of property creation , do step-list:{...}"
  app __x2__ = (WrapCompletion keys)
  return __x2__
}