{
  app __x0__ = (ToObject this)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let O = __x0__
  app __x1__ = (LengthOfArrayLike O)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let len = __x1__
  app __x2__ = (IsCallable callbackfn)
  if (= __x2__ false) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else {}
  app __x4__ = (ArraySpeciesCreate O 0i)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  let A = __x4__
  let k = 0i
  let to = 0i
  while (< k len) {
    app __x5__ = (ToString k)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
    let Pk = __x5__
    app __x6__ = (HasProperty O Pk)
    if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
    let kPresent = __x6__
    if (= kPresent true) {
      app __x7__ = (Get O Pk)
      if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
      let kValue = __x7__
      app __x8__ = (Call callbackfn thisArg (new [kValue, k, O]))
      if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
      app __x9__ = (ToBoolean __x8__)
      if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
      let selected = __x9__
      if (= selected true) {
        app __x10__ = (ToString to)
        if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
        app __x11__ = (CreateDataPropertyOrThrow A __x10__ kValue)
        if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else {}
        __x11__
        to = (+ to 1i)
      } else {}
    } else {}
    k = (+ k 1i)
  }
  app __x12__ = (WrapCompletion A)
  return __x12__
}