digraph {
  node10790 [shape=cds, label=<<font color="black">4:app __x0__ = (module.GetExportedNames module (new []))</font>> color="black" fillcolor="white" style=filled]
  node10795 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let resolution = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10786 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10794 [shape=cds, label=<<font color="black">7:app __x3__ = (module.ResolveExport module name (new []))</font>> color="black" fillcolor="white" style=filled]
  node10791 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let exportedNames = [? __x0__]</td></tr>
      <tr><td align="left">5:let unambiguousNames = (new [])</td></tr>
      <tr><td align="left">6:let __x1__ = exportedNames</td></tr>
      <tr><td align="left">6:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10798 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10787 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10792 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10793 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10788 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (! (= module.Status &quot;uninstantiated&quot;))</td></tr>
      <tr><td align="left">2:let namespace = module.Namespace</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10797 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append name -&gt; unambiguousNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10796 [shape=diamond, label=<<font color="black">(= (typeof resolution) &quot;ResolvedBindingRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10789 [shape=diamond, label=<<font color="black">(= namespace undefined)</font>> color="black" fillcolor="white" style=filled]
  node10800 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:namespace = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10799 [shape=cds, label=<<font color="black">9:app __x4__ = (ModuleNamespaceCreate module unambiguousNames)</font>> color="black" fillcolor="white" style=filled]
  node10801 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return namespace</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10795 -> node10796 [ color="black"]
  node10791 -> node10792 [ color="black"]
  node10797 -> node10798 [ color="black"]
  node10792 -> node10793 [label=<<font color="black">true</font>> color="black"]
  node10792 -> node10799 [label=<<font color="black">false</font>> color="black"]
  node10793 -> node10794 [ color="black"]
  node10796 -> node10797 [label=<<font color="black">true</font>> color="black"]
  node10796 -> node10798 [label=<<font color="black">false</font>> color="black"]
  node10800 -> node10801 [ color="black"]
  node10790 -> node10791 [ color="black"]
  node10789 -> node10790 [label=<<font color="black">true</font>> color="black"]
  node10789 -> node10801 [label=<<font color="black">false</font>> color="black"]
  node10799 -> node10800 [ color="black"]
  node10788 -> node10789 [ color="black"]
  node10801 -> node10787 [ color="black"]
  node10786 -> node10788 [ color="black"]
  node10794 -> node10795 [ color="black"]
  node10798 -> node10792 [ color="black"]
}
