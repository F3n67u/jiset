{
  app __x0__ = (GetArgument argumentsList 0i)
  let C = __x0__
  app __x1__ = (IsConstructor C)
  if (= __x1__ false) throw INTRINSIC_TypeError else {}
  let promiseCapability = (new PromiseCapability("Promise" -> undefined, "Resolve" -> undefined, "Reject" -> undefined))
  ??? "Let id:{steps} be the algorithm steps defined in GetCapabilitiesExecutor Functions ."
  app __x2__ = (CreateBuiltinFunction steps (new ["Capability"]))
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let executor = __x2__
  executor.Capability = promiseCapability
  app __x3__ = (Construct C (new [executor]))
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let promise = __x3__
  app __x4__ = (IsCallable promiseCapability.Resolve)
  if (= __x4__ false) throw INTRINSIC_TypeError else {}
  app __x5__ = (IsCallable promiseCapability.Reject)
  if (= __x5__ false) throw INTRINSIC_TypeError else {}
  promiseCapability.Promise = promise
  app __x6__ = (WrapCompletion promiseCapability)
  return __x6__
}