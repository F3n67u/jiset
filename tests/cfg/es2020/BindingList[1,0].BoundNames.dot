digraph {
  node6495 [shape=cds, label=<<font color="black">0:access __x0__ = (BindingList &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6498 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let __x2__ = __x1__</td></tr>
      <tr><td align="left">1:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6496 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let names = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6501 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return names</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6497 [shape=cds, label=<<font color="black">1:access __x1__ = (LexicalBinding &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6493 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6500 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; names</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6494 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6499 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node6499 -> node6500 [label=<<font color="black">true</font>> color="black"]
  node6499 -> node6501 [label=<<font color="black">false</font>> color="black"]
  node6496 -> node6497 [ color="black"]
  node6493 -> node6495 [ color="black"]
  node6500 -> node6499 [ color="black"]
  node6497 -> node6498 [ color="black"]
  node6495 -> node6496 [ color="black"]
  node6501 -> node6494 [ color="black"]
  node6498 -> node6499 [ color="black"]
}
