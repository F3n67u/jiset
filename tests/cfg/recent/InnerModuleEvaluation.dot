digraph {
  node10901 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10881 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;CyclicModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10908 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">29:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">30:assert (= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</td></tr>
      <tr><td align="left">31:requiredModule.Status = CONST_evaluated</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10903 [shape=cds, label=<<font color="black">22:app __x6__ = (module.ExecuteModule module)</font>> color="black" fillcolor="white" style=filled]
  node10891 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10895 [shape=cds, label=<<font color="black">16:app __x4__ = (InnerModuleEvaluation requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node10911 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10890 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= module.Status CONST_linked)</td></tr>
      <tr><td align="left">8:module.Status = CONST_evaluating</td></tr>
      <tr><td align="left">9:module.DFSIndex = index</td></tr>
      <tr><td align="left">10:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">11:index = (+ index 1i)</td></tr>
      <tr><td align="left">12:append module -&gt; stack</td></tr>
      <tr><td align="left">13:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">13:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10906 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10893 [shape=cds, label=<<font color="black">14:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node10889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10909 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node10892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10896 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:index = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10907 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node10897 [shape=diamond, label=<<font color="black">(= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10887 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return module.EvaluationError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10882 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Evaluate module)</font>> color="black" fillcolor="white" style=filled]
  node10880 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10904 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:[? __x6__]</td></tr>
      <tr><td align="left">24:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10879 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let requiredModule = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10910 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10898 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:assert (|| (= requiredModule.Status CONST_evaluating) (= requiredModule.Status CONST_evaluated))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10888 [shape=diamond, label=<<font color="black">(= module.Status CONST_evaluating)</font>> color="black" fillcolor="white" style=filled]
  node10885 [shape=diamond, label=<<font color="black">(= module.EvaluationError undefined)</font>> color="black" fillcolor="white" style=filled]
  node10884 [shape=diamond, label=<<font color="black">(= module.Status CONST_evaluated)</font>> color="black" fillcolor="white" style=filled]
  node10899 [shape=diamond, label=<<font color="black">(= requiredModule.Status CONST_evaluating)</font>> color="black" fillcolor="white" style=filled]
  node10905 [shape=diamond, label=<<font color="black">(== module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node10900 [shape=cds, label=<<font color="black">21:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node10902 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10889 -> node10890 [ color="black"]
  node10888 -> node10889 [label=<<font color="black">true</font>> color="black"]
  node10888 -> node10890 [label=<<font color="black">false</font>> color="black"]
  node10907 -> node10908 [label=<<font color="black">true</font>> color="black"]
  node10907 -> node10911 [label=<<font color="black">false</font>> color="black"]
  node10894 -> node10895 [ color="black"]
  node10884 -> node10885 [label=<<font color="black">true</font>> color="black"]
  node10884 -> node10888 [label=<<font color="black">false</font>> color="black"]
  node10898 -> node10899 [ color="black"]
  node10886 -> node10888 [ color="black"]
  node10901 -> node10902 [ color="black"]
  node10906 -> node10907 [ color="black"]
  node10902 -> node10891 [ color="black"]
  node10904 -> node10905 [ color="black"]
  node10885 -> node10886 [label=<<font color="black">true</font>> color="black"]
  node10885 -> node10887 [label=<<font color="black">false</font>> color="black"]
  node10899 -> node10900 [label=<<font color="black">true</font>> color="black"]
  node10899 -> node10902 [label=<<font color="black">false</font>> color="black"]
  node10887 -> node10888 [ color="black"]
  node10910 -> node10907 [ color="black"]
  node10881 -> node10882 [label=<<font color="black">true</font>> color="black"]
  node10881 -> node10884 [label=<<font color="black">false</font>> color="black"]
  node10911 -> node10880 [ color="black"]
  node10879 -> node10881 [ color="black"]
  node10897 -> node10898 [label=<<font color="black">true</font>> color="black"]
  node10897 -> node10902 [label=<<font color="black">false</font>> color="black"]
  node10893 -> node10894 [ color="black"]
  node10882 -> node10883 [ color="black"]
  node10891 -> node10892 [label=<<font color="black">true</font>> color="black"]
  node10891 -> node10903 [label=<<font color="black">false</font>> color="black"]
  node10909 -> node10910 [label=<<font color="black">true</font>> color="black"]
  node10909 -> node10907 [label=<<font color="black">false</font>> color="black"]
  node10903 -> node10904 [ color="black"]
  node10892 -> node10893 [ color="black"]
  node10905 -> node10906 [label=<<font color="black">true</font>> color="black"]
  node10905 -> node10911 [label=<<font color="black">false</font>> color="black"]
  node10883 -> node10884 [ color="black"]
  node10890 -> node10891 [ color="black"]
  node10896 -> node10897 [ color="black"]
  node10908 -> node10909 [ color="black"]
  node10900 -> node10901 [ color="black"]
  node10895 -> node10896 [ color="black"]
}
