digraph {
  node2886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2884 [shape=cds, label=<<font color="black">8:app __x4__ = (Type handlerProto)</font>> color="black" fillcolor="white" style=filled]
  node2890 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return handlerProto</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2877 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;getPrototypeOf&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2883 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let handlerProto = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2894 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node2891 [shape=cds, label=<<font color="black">11:app __x6__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node2874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2878 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetProto = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2889 [shape=diamond, label=<<font color="black">(= extensibleTarget true)</font>> color="black" fillcolor="white" style=filled]
  node2876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2893 [shape=cds, label=<<font color="black">12:app __x7__ = (SameValue handlerProto targetProto)</font>> color="black" fillcolor="white" style=filled]
  node2880 [shape=cds, label=<<font color="black">6:app __x2__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node2873 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node2872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2896 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return handlerProto</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2871 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2888 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let extensibleTarget = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2882 [shape=cds, label=<<font color="black">7:app __x3__ = (Call trap handler (new [target]))</font>> color="black" fillcolor="white" style=filled]
  node2875 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node2885 [shape=diamond, label=<<font color="black">(! (|| (= __x4__ Object) (= __x4__ Null)))</font>> color="black" fillcolor="white" style=filled]
  node2870 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2879 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node2881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2887 [shape=cds, label=<<font color="black">9:app __x5__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node2887 -> node2888 [ color="black"]
  node2895 -> node2896 [ color="black"]
  node2890 -> node2891 [ color="black"]
  node2881 -> node2882 [ color="black"]
  node2894 -> node2895 [label=<<font color="black">true</font>> color="black"]
  node2894 -> node2896 [label=<<font color="black">false</font>> color="black"]
  node2885 -> node2886 [label=<<font color="black">true</font>> color="black"]
  node2885 -> node2887 [label=<<font color="black">false</font>> color="black"]
  node2889 -> node2890 [label=<<font color="black">true</font>> color="black"]
  node2889 -> node2891 [label=<<font color="black">false</font>> color="black"]
  node2873 -> node2874 [label=<<font color="black">true</font>> color="black"]
  node2873 -> node2875 [label=<<font color="black">false</font>> color="black"]
  node2875 -> node2876 [ color="black"]
  node2872 -> node2873 [ color="black"]
  node2893 -> node2894 [ color="black"]
  node2884 -> node2885 [ color="black"]
  node2886 -> node2887 [ color="black"]
  node2882 -> node2883 [ color="black"]
  node2876 -> node2877 [ color="black"]
  node2892 -> node2893 [ color="black"]
  node2878 -> node2879 [ color="black"]
  node2880 -> node2881 [ color="black"]
  node2870 -> node2872 [ color="black"]
  node2883 -> node2884 [ color="black"]
  node2891 -> node2892 [ color="black"]
  node2888 -> node2889 [ color="black"]
  node2879 -> node2880 [label=<<font color="black">true</font>> color="black"]
  node2879 -> node2882 [label=<<font color="black">false</font>> color="black"]
  node2877 -> node2878 [ color="black"]
  node2874 -> node2875 [ color="black"]
  node2896 -> node2871 [ color="black"]
}
