{
  [0] app __x0__ = (Type C)
  [0] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [6] {}
  [1] app __x2__ = (GetMethod C SYMBOL_hasInstance)
  [1] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [6] {}
  [1] let instOfHandler = __x2__
  [2] if (! (= instOfHandler undefined)) {
    [3] app __x3__ = (Call instOfHandler C (new [O]))
    [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [6] {}
    [3] app __x4__ = (ToBoolean __x3__)
    [3] app __x5__ = (WrapCompletion __x4__)
    [3] return __x5__
  } else [6] {}
  [4] app __x6__ = (IsCallable C)
  [4] if (= __x6__ false) {
    app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x7__
  } else [6] {}
  [5] app __x8__ = (OrdinaryHasInstance C O)
  [5] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [6] {}
  [5] app __x9__ = (WrapCompletion __x8__)
  [5] return __x9__
}