{
  app string = (GetArgument argumentsList 0i)
  [0] let R = this
  [1] app __x0__ = (Type R)
  [1] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [52] {}
  [2] app __x2__ = (ToString string)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [52] {}
  [2] let S = __x2__
  [3] app __x3__ = (SpeciesConstructor R INTRINSIC_RegExp)
  [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [52] {}
  [3] let C = __x3__
  [4] app __x4__ = (Get R "flags")
  [4] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [52] {}
  [4] app __x5__ = (ToString __x4__)
  [4] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [52] {}
  [4] let flags = __x5__
  [5] app __x6__ = (Construct C (new [R, flags]))
  [5] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [52] {}
  [5] let matcher = __x6__
  [6] app __x7__ = (Get R "lastIndex")
  [6] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [52] {}
  [6] app __x8__ = (ToLength __x7__)
  [6] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [52] {}
  [6] let lastIndex = __x8__
  [7] app __x9__ = (Set matcher "lastIndex" lastIndex true)
  [7] if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else [52] {}
  [7] __x9__
  [9] if (contains flags "g") let global = true else let global = false
  [11] if (contains flags "u") let fullUnicode = true else let fullUnicode = false
  [12] app __x10__ = (CreateRegExpStringIterator matcher S global fullUnicode)
  [12] if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else [52] {}
  [12] app __x11__ = (WrapCompletion __x10__)
  [12] return __x11__
}