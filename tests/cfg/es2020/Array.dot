digraph {
  node15257 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15267 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[! __x3__]</td></tr>
      <tr><td align="left">11:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15264 [shape=cds, label=<<font color="black">8:app __x2__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node15261 [shape=cds, label=<<font color="black">4:app __x1__ = (ArrayCreate numberOfArgs proto)</font>> color="black" fillcolor="white" style=filled]
  node15258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15265 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let Pk = [! __x2__]</td></tr>
      <tr><td align="left">9:let itemK = items[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15259 [shape=cds, label=<<font color="black">3:app __x0__ = (GetPrototypeFromConstructor newTarget &quot;%Array.prototype%&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15252 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15256 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15263 [shape=diamond, label=<<font color="black">(&lt; k numberOfArgs)</font>> color="black" fillcolor="white" style=filled]
  node15254 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15253 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15266 [shape=cds, label=<<font color="black">10:app __x3__ = (CreateDataPropertyOrThrow array Pk itemK)</font>> color="black" fillcolor="white" style=filled]
  node15255 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let numberOfArgs = argumentsList.length</td></tr>
      <tr><td align="left">1:assert (! (&lt; numberOfArgs 2i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15260 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let proto = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15262 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let array = [? __x1__]</td></tr>
      <tr><td align="left">5:let k = 0i</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{items} be a zero - origined List containing the argument items in order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15256 -> node15257 [label=<<font color="black">true</font>> color="black"]
  node15256 -> node15258 [label=<<font color="black">false</font>> color="black"]
  node15268 -> node15253 [ color="black"]
  node15267 -> node15263 [ color="black"]
  node15252 -> node15254 [ color="black"]
  node15257 -> node15259 [ color="black"]
  node15262 -> node15263 [ color="black"]
  node15264 -> node15265 [ color="black"]
  node15263 -> node15264 [label=<<font color="black">true</font>> color="black"]
  node15263 -> node15268 [label=<<font color="black">false</font>> color="black"]
  node15258 -> node15259 [ color="black"]
  node15265 -> node15266 [ color="black"]
  node15255 -> node15256 [ color="black"]
  node15266 -> node15267 [ color="black"]
  node15260 -> node15261 [ color="black"]
  node15254 -> node15255 [ color="black"]
  node15261 -> node15262 [ color="black"]
  node15259 -> node15260 [ color="black"]
}
