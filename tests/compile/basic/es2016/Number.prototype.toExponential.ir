{
  app __x0__ = (thisNumberValue this)
  let x = [? __x0__]
  app __x1__ = (ToInteger fractionDigits)
  let f = [? __x1__]
  if (= x NaN) return "NaN" else {}
  let s = ""
  if (< x 0i) {
    let s = "-"
    let x = (- x)
  } else {}
  if (== x Infinity) return (+ s "Infinity") else {}
  if (|| (< f 0i) (< 20i f)) throw INTRINSIC_RangeError else {}
  if (== x 0i) {
    ??? "Let id:{m} be the String consisting of id:{f} + 1 occurrences of the code unit 0x0030 ( DIGIT ZERO ) ."
    let e = 0i
  } else {
    if (! (= fractionDigits undefined)) ??? "Let id:{e} and id:{n} be integers such that 10 sup:{id:{f}} ≤ id:{n} < 10 sup:{id:{f} + 1} and for which the exact mathematical value of id:{n} × 10 sup:{id:{e} - id:{f}} - id:{x} is as close to zero as possible . If there are two such sets of id:{e} and id:{n} , pick the id:{e} and id:{n} for which id:{n} × 10 sup:{id:{e} - id:{f}} is larger ." else ??? "Let id:{e} , id:{n} , and id:{f} be integers such that id:{f} ≥ 0 , 10 sup:{id:{f}} ≤ id:{n} < 10 sup:{id:{f} + 1} , the Number value for id:{n} × 10 sup:{id:{e} - id:{f}} is id:{x} , and id:{f} is as small as possible . Note that the decimal representation of id:{n} has id:{f} + 1 digits , id:{n} is not divisible by 10 , and the least significant digit of id:{n} is not necessarily uniquely determined by these criteria ."
    ??? "Let id:{m} be the String consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) ."
  }
  if (! (== f 0i)) {
    ??? "Let id:{a} be the first element of id:{m} , and let id:{b} be the remaining id:{f} elements of id:{m} ."
    ??? "Let id:{m} be the concatenation of the three Strings id:{a} , code:{\".\"} , and id:{b} ."
  } else {}
  if (== e 0i) {
    let c = "+"
    let d = "0"
  } else {
    if (< 0i e) let c = "+" else {
      let c = "-"
      let e = (- e)
    }
    ??? "Let id:{d} be the String consisting of the digits of the decimal representation of id:{e} ( in order , with no leading zeroes ) ."
  }
  ??? "Let id:{m} be the concatenation of the four Strings id:{m} , code:{\"e\"} , id:{c} , and id:{d} ."
  return (+ s m)
}