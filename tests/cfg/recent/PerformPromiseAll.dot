digraph {
  node19062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19069 [shape=cds, label=<<font color="black">20:app __x8__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node19063 [shape=cds, label=<<font color="black">16:app __x6__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node19056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19043 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19058 [shape=cds, label=<<font color="black">13:app __x4__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node19070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let nextPromise = [? __x8__]</td></tr>
      <tr><td align="left">21:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.all-resolve-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19049 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node19066 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node19071 [shape=cds, label=<<font color="black">22:app __x9__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node19060 [shape=cds, label=<<font color="black">14:app __x5__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node19068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? nextValue]</td></tr>
      <tr><td align="left">19:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19051 [shape=cds, label=<<font color="black">7:app __x3__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node19072 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let resolveElement = [! __x9__]</td></tr>
      <tr><td align="left">23:resolveElement.AlreadyCalled = false</td></tr>
      <tr><td align="left">24:resolveElement.Index = index</td></tr>
      <tr><td align="left">25:resolveElement.Values = values</td></tr>
      <tr><td align="left">26:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">27:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">28:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19044 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node19059 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let valuesArray = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19052 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node19065 [shape=cds, label=<<font color="black">17:app __x7__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node19048 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node19053 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19042 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19057 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node19064 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextValue = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19050 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19067 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:[? __x10__]</td></tr>
      <tr><td align="left">30:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19061 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19046 [shape=cds, label=<<font color="black">1:app __x1__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node19055 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node19047 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ true)</td></tr>
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19045 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19073 [shape=cds, label=<<font color="black">29:app __x10__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node19066 -> node19067 [label=<<font color="black">true</font>> color="black"]
  node19066 -> node19068 [label=<<font color="black">false</font>> color="black"]
  node19058 -> node19059 [ color="black"]
  node19069 -> node19070 [ color="black"]
  node19044 -> node19045 [ color="black"]
  node19063 -> node19064 [ color="black"]
  node19051 -> node19052 [ color="black"]
  node19042 -> node19044 [ color="black"]
  node19071 -> node19072 [ color="black"]
  node19049 -> node19050 [ color="black"]
  node19047 -> node19048 [ color="black"]
  node19074 -> node19048 [ color="black"]
  node19056 -> node19057 [ color="black"]
  node19054 -> node19055 [ color="black"]
  node19046 -> node19047 [ color="black"]
  node19061 -> node19062 [ color="black"]
  node19060 -> node19061 [ color="black"]
  node19050 -> node19051 [ color="black"]
  node19065 -> node19066 [ color="black"]
  node19045 -> node19046 [ color="black"]
  node19053 -> node19054 [ color="black"]
  node19068 -> node19069 [ color="black"]
  node19059 -> node19060 [ color="black"]
  node19062 -> node19063 [ color="black"]
  node19067 -> node19068 [ color="black"]
  node19055 -> node19056 [label=<<font color="black">true</font>> color="black"]
  node19055 -> node19063 [label=<<font color="black">false</font>> color="black"]
  node19052 -> node19053 [label=<<font color="black">true</font>> color="black"]
  node19052 -> node19054 [label=<<font color="black">false</font>> color="black"]
  node19070 -> node19071 [ color="black"]
  node19057 -> node19058 [label=<<font color="black">true</font>> color="black"]
  node19057 -> node19062 [label=<<font color="black">false</font>> color="black"]
  node19064 -> node19065 [ color="black"]
  node19072 -> node19073 [ color="black"]
  node19073 -> node19074 [ color="black"]
  node19048 -> node19049 [label=<<font color="black">true</font>> color="black"]
  node19048 -> node19043 [label=<<font color="black">false</font>> color="black"]
}
