{
  access __x0__ = (GLOBAL_context "LexicalEnvironment")
  let scope = __x0__
  app __x1__ = (NewDeclarativeEnvironment scope)
  let funcEnv = [! __x1__]
  access __x2__ = (BindingIdentifier "StringValue")
  let name = __x2__
  app __x3__ = (funcEnv.CreateImmutableBinding funcEnv name false)
  [! __x3__]
  let sourceText = (get-syntax AsyncFunctionExpression)
  app __x4__ = (OrdinaryFunctionCreate INTRINSIC_AsyncFunction_prototype sourceText FormalParameters AsyncFunctionBody CONST_nonDASHlexicalDASHthis funcEnv)
  let closure = [! __x4__]
  app __x5__ = (SetFunctionName closure name)
  [! __x5__]
  app __x6__ = (funcEnv.InitializeBinding funcEnv name closure)
  [! __x6__]
  return closure
}