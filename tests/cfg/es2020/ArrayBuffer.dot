digraph {
  node17043 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17049 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17042 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17050 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17048 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17045 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17044 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17047 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node17050 -> node17043 [ color="black"]
  node17049 -> node17050 [ color="black"]
  node17048 -> node17049 [ color="black"]
  node17047 -> node17048 [ color="black"]
  node17042 -> node17044 [ color="black"]
  node17045 -> node17046 [label=<<font color="black">true</font>> color="black"]
  node17045 -> node17047 [label=<<font color="black">false</font>> color="black"]
  node17044 -> node17045 [ color="black"]
  node17046 -> node17047 [ color="black"]
}
