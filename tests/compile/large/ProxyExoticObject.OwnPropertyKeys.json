[{
  "tokens": ["Let", {
    "id": "handler"
  }, "be", {
    "id": "O"
  }, ".", "[", "[", "ProxyHandler", "]", "]", "."]
}, {
  "tokens": ["If", {
    "id": "handler"
  }, "is", {
    "value": "null"
  }, ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Assert", ":", "Type", "(", {
    "id": "handler"
  }, ")", "is", "Object", "."]
}, {
  "tokens": ["Let", {
    "id": "target"
  }, "be", {
    "id": "O"
  }, ".", "[", "[", "ProxyTarget", "]", "]", "."]
}, {
  "tokens": ["Let", {
    "id": "trap"
  }, "be", "?", "GetMethod", "(", {
    "id": "handler"
  }, ",", {
    "value": "\"ownKeys\""
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "trap"
  }, "is", {
    "value": "undefined"
  }, ",", "then", {
    "steps": [{
      "tokens": ["Return", "?", {
        "id": "target"
      }, ".", "[", "[", "OwnPropertyKeys", "]", "]", "(", ")", "."]
    }]
  }]
}, {
  "tokens": ["Let", {
    "id": "trapResultArray"
  }, "be", "?", "Call", "(", {
    "id": "trap"
  }, ",", {
    "id": "handler"
  }, ",", "«", {
    "id": "target"
  }, "»", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "trapResult"
  }, "be", "?", "CreateListFromArrayLike", "(", {
    "id": "trapResultArray"
  }, ",", "«", "String", ",", "Symbol", "»", ")", "."]
}, {
  "tokens": ["If", {
    "id": "trapResult"
  }, "contains", "any", "duplicate", "entries", ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Let", {
    "id": "extensibleTarget"
  }, "be", "?", "IsExtensible", "(", {
    "id": "target"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "targetKeys"
  }, "be", "?", {
    "id": "target"
  }, ".", "[", "[", "OwnPropertyKeys", "]", "]", "(", ")", "."]
}, {
  "tokens": ["Assert", ":", {
    "id": "targetKeys"
  }, "is", "a", "List", "containing", "only", "String", "and", "Symbol", "values", "."]
}, {
  "tokens": ["Assert", ":", {
    "id": "targetKeys"
  }, "contains", "no", "duplicate", "entries", "."]
}, {
  "tokens": ["Let", {
    "id": "targetConfigurableKeys"
  }, "be", "a", "new", "empty", "List", "."]
}, {
  "tokens": ["Let", {
    "id": "targetNonconfigurableKeys"
  }, "be", "a", "new", "empty", "List", "."]
}, {
  "tokens": ["For", "each", "element", {
    "id": "key"
  }, "of", {
    "id": "targetKeys"
  }, ",", "do", {
    "steps": [{
      "tokens": ["Let", {
        "id": "desc"
      }, "be", "?", {
        "id": "target"
      }, ".", "[", "[", "GetOwnProperty", "]", "]", "(", {
        "id": "key"
      }, ")", "."]
    }, {
      "tokens": ["If", {
        "id": "desc"
      }, "is", "not", {
        "value": "undefined"
      }, "and", {
        "id": "desc"
      }, ".", "[", "[", "Configurable", "]", "]", "is", {
        "value": "false"
      }, ",", "then", {
        "steps": [{
          "tokens": ["Append", {
            "id": "key"
          }, "as", "an", "element", "of", {
            "id": "targetNonconfigurableKeys"
          }, "."]
        }]
      }]
    }, {
      "tokens": ["Else", ",", {
        "steps": [{
          "tokens": ["Append", {
            "id": "key"
          }, "as", "an", "element", "of", {
            "id": "targetConfigurableKeys"
          }, "."]
        }]
      }]
    }]
  }]
}, {
  "tokens": ["If", {
    "id": "extensibleTarget"
  }, "is", {
    "value": "true"
  }, "and", {
    "id": "targetNonconfigurableKeys"
  }, "is", "empty", ",", "then", {
    "steps": [{
      "tokens": ["Return", {
        "id": "trapResult"
      }, "."]
    }]
  }]
}, {
  "tokens": ["Let", {
    "id": "uncheckedResultKeys"
  }, "be", "a", "new", "List", "which", "is", "a", "copy", "of", {
    "id": "trapResult"
  }, "."]
}, {
  "tokens": ["For", "each", {
    "id": "key"
  }, "that", "is", "an", "element", "of", {
    "id": "targetNonconfigurableKeys"
  }, ",", "do", {
    "steps": [{
      "tokens": ["If", {
        "id": "key"
      }, "is", "not", "an", "element", "of", {
        "id": "uncheckedResultKeys"
      }, ",", "throw", "a", {
        "value": "TypeError"
      }, "exception", "."]
    }, {
      "tokens": ["Remove", {
        "id": "key"
      }, "from", {
        "id": "uncheckedResultKeys"
      }, "."]
    }]
  }]
}, {
  "tokens": ["If", {
    "id": "extensibleTarget"
  }, "is", {
    "value": "true"
  }, ",", "return", {
    "id": "trapResult"
  }, "."]
}, {
  "tokens": ["For", "each", {
    "id": "key"
  }, "that", "is", "an", "element", "of", {
    "id": "targetConfigurableKeys"
  }, ",", "do", {
    "steps": [{
      "tokens": ["If", {
        "id": "key"
      }, "is", "not", "an", "element", "of", {
        "id": "uncheckedResultKeys"
      }, ",", "throw", "a", {
        "value": "TypeError"
      }, "exception", "."]
    }, {
      "tokens": ["Remove", {
        "id": "key"
      }, "from", {
        "id": "uncheckedResultKeys"
      }, "."]
    }]
  }]
}, {
  "tokens": ["If", {
    "id": "uncheckedResultKeys"
  }, "is", "not", "empty", ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Return", {
    "id": "trapResult"
  }, "."]
}]