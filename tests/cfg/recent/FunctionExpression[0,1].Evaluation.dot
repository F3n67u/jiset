digraph {
  node9152 [shape=cds, label=<<font color="black">5:app __x3__ = (OrdinaryFunctionCreate INTRINSIC_Function_prototype sourceText FormalParameters FunctionBody CONST_nonDASHlexicalDASHthis funcEnv)</font>> color="black" fillcolor="white" style=filled]
  node9155 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:__x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9158 [shape=cds, label=<<font color="black">8:app __x6__ = (funcEnv.InitializeBinding funcEnv name closure)</font>> color="black" fillcolor="white" style=filled]
  node9145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let scope = GLOBAL_context.LexicalEnvironment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9154 [shape=cds, label=<<font color="black">6:app __x4__ = (SetFunctionName closure name)</font>> color="black" fillcolor="white" style=filled]
  node9157 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9146 [shape=cds, label=<<font color="black">1:app __x0__ = (NewDeclarativeEnvironment scope)</font>> color="black" fillcolor="white" style=filled]
  node9153 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let closure = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x2__</td></tr>
      <tr><td align="left">4:let sourceText = (get-syntax FunctionExpression)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9147 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let funcEnv = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9156 [shape=cds, label=<<font color="black">7:app __x5__ = (MakeConstructor closure)</font>> color="black" fillcolor="white" style=filled]
  node9159 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:__x6__</td></tr>
      <tr><td align="left">9:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9148 [shape=cds, label=<<font color="black">2:access __x1__ = (BindingIdentifier &quot;StringValue&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9149 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let name = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9144 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9143 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9150 [shape=cds, label=<<font color="black">3:app __x2__ = (funcEnv.CreateImmutableBinding funcEnv name false)</font>> color="black" fillcolor="white" style=filled]
  node9154 -> node9155 [ color="black"]
  node9152 -> node9153 [ color="black"]
  node9151 -> node9152 [ color="black"]
  node9150 -> node9151 [ color="black"]
  node9148 -> node9149 [ color="black"]
  node9158 -> node9159 [ color="black"]
  node9156 -> node9157 [ color="black"]
  node9157 -> node9158 [ color="black"]
  node9153 -> node9154 [ color="black"]
  node9145 -> node9146 [ color="black"]
  node9143 -> node9145 [ color="black"]
  node9147 -> node9148 [ color="black"]
  node9155 -> node9156 [ color="black"]
  node9149 -> node9150 [ color="black"]
  node9146 -> node9147 [ color="black"]
  node9159 -> node9144 [ color="black"]
}
