{
  app __x0__ = (GetArgument argumentsList 0i)
  let generator = __x0__
  app __x1__ = (GetArgument argumentsList 1i)
  let value = __x1__
  app __x2__ = (GetArgument argumentsList 2i)
  let done = __x2__
  let queue = generator.AsyncGeneratorQueue
  assert (< 0i queue.length)
  let next = (pop queue 0i)
  let promiseCapability = next.Capability
  app __x3__ = (CreateIterResultObject value done)
  let iteratorResult = [! __x3__]
  app __x4__ = (Call promiseCapability.Resolve undefined (new [iteratorResult]))
  [! __x4__]
  app __x5__ = (AsyncGeneratorResumeNext generator)
  [! __x5__]
  return undefined
}