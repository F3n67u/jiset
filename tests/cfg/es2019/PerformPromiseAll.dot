digraph {
  node17665 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? nextValue]</td></tr>
      <tr><td align="left">19:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17662 [shape=cds, label=<<font color="black">17:app __x6__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node17645 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node17670 [shape=cds, label=<<font color="black">29:app __x9__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node17663 [shape=diamond, label=<<font color="black">__x6__</font>> color="black" fillcolor="white" style=filled]
  node17650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17668 [shape=cds, label=<<font color="black">22:app __x8__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17666 [shape=cds, label=<<font color="black">20:app __x7__ = (Invoke constructor &quot;resolve&quot; (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node17671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:[? __x9__]</td></tr>
      <tr><td align="left">30:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17639 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17656 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let valuesArray = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17641 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let nextPromise = [? __x7__]</td></tr>
      <tr><td align="left">21:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.all-resolve-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17652 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node17655 [shape=cds, label=<<font color="black">13:app __x3__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node17642 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17659 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17638 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17651 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17646 [shape=cds, label=<<font color="black">6:app __x1__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17669 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let resolveElement = __x8__</td></tr>
      <tr><td align="left">23:resolveElement.AlreadyCalled = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">24:resolveElement.Index = index</td></tr>
      <tr><td align="left">25:resolveElement.Values = values</td></tr>
      <tr><td align="left">26:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">27:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">28:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17654 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node17643 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node17660 [shape=cds, label=<<font color="black">16:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node17647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17657 [shape=cds, label=<<font color="black">14:app __x4__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node17640 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17649 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node17648 [shape=cds, label=<<font color="black">7:app __x2__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node17661 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17669 -> node17670 [ color="black"]
  node17663 -> node17664 [label=<<font color="black">true</font>> color="black"]
  node17663 -> node17665 [label=<<font color="black">false</font>> color="black"]
  node17670 -> node17671 [ color="black"]
  node17651 -> node17652 [ color="black"]
  node17644 -> node17645 [ color="black"]
  node17642 -> node17643 [ color="black"]
  node17650 -> node17651 [ color="black"]
  node17658 -> node17659 [ color="black"]
  node17665 -> node17666 [ color="black"]
  node17645 -> node17646 [label=<<font color="black">true</font>> color="black"]
  node17645 -> node17639 [label=<<font color="black">false</font>> color="black"]
  node17647 -> node17648 [ color="black"]
  node17660 -> node17661 [ color="black"]
  node17656 -> node17657 [ color="black"]
  node17641 -> node17642 [ color="black"]
  node17671 -> node17645 [ color="black"]
  node17661 -> node17662 [ color="black"]
  node17643 -> node17644 [ color="black"]
  node17646 -> node17647 [ color="black"]
  node17638 -> node17640 [ color="black"]
  node17657 -> node17658 [ color="black"]
  node17662 -> node17663 [ color="black"]
  node17648 -> node17649 [ color="black"]
  node17667 -> node17668 [ color="black"]
  node17655 -> node17656 [ color="black"]
  node17659 -> node17660 [ color="black"]
  node17666 -> node17667 [ color="black"]
  node17664 -> node17665 [ color="black"]
  node17653 -> node17654 [ color="black"]
  node17668 -> node17669 [ color="black"]
  node17640 -> node17641 [ color="black"]
  node17654 -> node17655 [label=<<font color="black">true</font>> color="black"]
  node17654 -> node17659 [label=<<font color="black">false</font>> color="black"]
  node17652 -> node17653 [label=<<font color="black">true</font>> color="black"]
  node17652 -> node17660 [label=<<font color="black">false</font>> color="black"]
  node17649 -> node17650 [label=<<font color="black">true</font>> color="black"]
  node17649 -> node17651 [label=<<font color="black">false</font>> color="black"]
}
