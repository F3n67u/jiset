digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let array = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=cds, label=<<font color="black">1:app __x0__ = (GetPrototypeFromConstructor newTarget &quot;%Array.prototype%&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=cds, label=<<font color="black">4:app __x1__ = (ArrayCreate 0i proto)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">7:app __x2__ = (ArrayCreate 0i proto)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let values = argumentsList</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let len = values[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let proto = [? __x0__]</td></tr>
      <tr><td align="left">2:let numberOfArgs = values.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=cds, label=<<font color="black">12:app __x4__ = (ToUint32 len)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=diamond, label=<<font color="black">(== numberOfArgs 1i)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=diamond, label=<<font color="black">(== numberOfArgs 0i)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = CONTEXT.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=diamond, label=<<font color="black">(! (= (typeof len) Number))</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:assert (! (&lt; numberOfArgs 2i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=cds, label=<<font color="black">18:app __x6__ = (ArrayCreate numberOfArgs proto)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=diamond, label=<<font color="black">(! (= intLen len))</font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let Pk = [! __x7__]</td></tr>
      <tr><td align="left">22:let itemK = values[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=cds, label=<<font color="black">21:app __x7__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[! __x3__]</td></tr>
      <tr><td align="left">10:let intLen = 1i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">14:app __x5__ = (Set array &quot;length&quot; intLen true)</font>> color="black" fillcolor="white" style=filled]
  node27 [shape=diamond, label=<<font color="black">(&lt; k numberOfArgs)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=cds, label=<<font color="black">9:app __x3__ = (CreateDataPropertyOrThrow array &quot;0&quot; len)</font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:[! __x8__]</td></tr>
      <tr><td align="left">24:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let array = [? __x6__]</td></tr>
      <tr><td align="left">19:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[! __x5__]</td></tr>
      <tr><td align="left">15:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=cds, label=<<font color="black">23:app __x8__ = (CreateDataPropertyOrThrow array Pk itemK)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let intLen = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5 -> node6 [ color="black"]
  node31 -> node27 [ color="black"]
  node0 -> node2 [ color="black"]
  node9 -> node10 [ color="black"]
  node14 -> node15 [ color="black"]
  node30 -> node31 [ color="black"]
  node20 -> node21 [label=<<font color="black">true</font>> color="black"]
  node20 -> node22 [label=<<font color="black">false</font>> color="black"]
  node25 -> node26 [ color="black"]
  node21 -> node22 [ color="black"]
  node23 -> node1 [ color="black"]
  node16 -> node17 [ color="black"]
  node32 -> node1 [ color="black"]
  node28 -> node29 [ color="black"]
  node29 -> node30 [ color="black"]
  node4 -> node6 [ color="black"]
  node7 -> node8 [ color="black"]
  node18 -> node19 [ color="black"]
  node2 -> node3 [ color="black"]
  node3 -> node4 [label=<<font color="black">true</font>> color="black"]
  node3 -> node5 [label=<<font color="black">false</font>> color="black"]
  node19 -> node20 [ color="black"]
  node8 -> node9 [label=<<font color="black">true</font>> color="black"]
  node8 -> node11 [label=<<font color="black">false</font>> color="black"]
  node27 -> node28 [label=<<font color="black">true</font>> color="black"]
  node27 -> node32 [label=<<font color="black">false</font>> color="black"]
  node13 -> node14 [ color="black"]
  node10 -> node1 [ color="black"]
  node17 -> node22 [ color="black"]
  node12 -> node13 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node11 -> node12 [label=<<font color="black">true</font>> color="black"]
  node11 -> node24 [label=<<font color="black">false</font>> color="black"]
  node26 -> node27 [ color="black"]
  node24 -> node25 [ color="black"]
  node15 -> node16 [label=<<font color="black">true</font>> color="black"]
  node15 -> node18 [label=<<font color="black">false</font>> color="black"]
}
