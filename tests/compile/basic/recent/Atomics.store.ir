{
  app __x0__ = (ValidateIntegerTypedArray typedArray)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let buffer = __x0__
  app __x1__ = (ValidateAtomicAccess typedArray index)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let indexedPosition = __x1__
  let arrayTypeName = typedArray.TypedArrayName
  if (|| (= arrayTypeName "BigUint64Array") (= arrayTypeName "BigInt64Array")) {
    app __x2__ = (ToBigInt value)
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
    let v = __x2__
  } else {
    app __x3__ = (ToIntegerOrInfinity value)
    if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
    let v = __x3__
  }
  app __x4__ = (IsDetachedBuffer buffer)
  if (= __x4__ true) throw INTRINSIC_TypeError else {}
  ??? "Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} ."
  app __x5__ = (SetValueInBuffer buffer indexedPosition elementType v true CONST_SeqCst)
  __x5__
  app __x6__ = (WrapCompletion v)
  return __x6__
}