digraph {
  node17594 [shape=cds, label=<<font color="black">app __x3__ = (ToBigInt value)</font>> color="black" fillcolor="white" style=filled]
  node17607 [shape=cds, label=<<font color="black">13:app __x7__ = (SetValueInBuffer buffer bufferIndex type numberValue false CONST_Unordered isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17598 [shape=cds, label=<<font color="black">5:app __x5__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17601 [shape=diamond, label=<<font color="black">(= __x6__ true)</font>> color="black" fillcolor="white" style=filled]
  node17599 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:isLittleEndian = [! __x5__]</td></tr>
      <tr><td align="left">6:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17606 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17595 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let numberValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17587 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17605 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17589 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">1:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17602 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17593 [shape=diamond, label=<<font color="black">(= [! __x2__] true)</font>> color="black" fillcolor="white" style=filled]
  node17608 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17604 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node17588 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot view &quot;DataView&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17603 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">9:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17591 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17596 [shape=cds, label=<<font color="black">app __x4__ = (ToNumber value)</font>> color="black" fillcolor="white" style=filled]
  node17590 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node17600 [shape=cds, label=<<font color="black">7:app __x6__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17586 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17592 [shape=cds, label=<<font color="black">4:app __x2__ = (IsBigIntElementType type)</font>> color="black" fillcolor="white" style=filled]
  node17597 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let numberValue = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17605 -> node17606 [ color="black"]
  node17601 -> node17602 [label=<<font color="black">true</font>> color="black"]
  node17601 -> node17603 [label=<<font color="black">false</font>> color="black"]
  node17586 -> node17588 [ color="black"]
  node17596 -> node17597 [ color="black"]
  node17595 -> node17598 [ color="black"]
  node17589 -> node17590 [ color="black"]
  node17602 -> node17603 [ color="black"]
  node17592 -> node17593 [ color="black"]
  node17600 -> node17601 [ color="black"]
  node17598 -> node17599 [ color="black"]
  node17594 -> node17595 [ color="black"]
  node17604 -> node17605 [label=<<font color="black">true</font>> color="black"]
  node17604 -> node17606 [label=<<font color="black">false</font>> color="black"]
  node17593 -> node17594 [label=<<font color="black">true</font>> color="black"]
  node17593 -> node17596 [label=<<font color="black">false</font>> color="black"]
  node17597 -> node17598 [ color="black"]
  node17603 -> node17604 [ color="black"]
  node17590 -> node17591 [ color="black"]
  node17591 -> node17592 [ color="black"]
  node17608 -> node17587 [ color="black"]
  node17606 -> node17607 [ color="black"]
  node17588 -> node17589 [ color="black"]
  node17607 -> node17608 [ color="black"]
  node17599 -> node17600 [ color="black"]
}
