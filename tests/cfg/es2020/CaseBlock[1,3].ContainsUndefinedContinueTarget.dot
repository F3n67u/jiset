digraph {
  node8050 [shape=diamond, label=<<font color="black">(= CaseClauses1 absent)</font>> color="black" fillcolor="white" style=filled]
  node8046 [shape=cds, label=<<font color="black">3:access __x1__ = (DefaultClause &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node8048 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node8041 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node8053 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8049 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8040 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8052 [shape=cds, label=<<font color="black">6:access __x2__ = (CaseClauses1 &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node8039 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8043 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8044 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node8045 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8042 [shape=cds, label=<<font color="black">1:access __x0__ = (CaseClauses0 &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node8047 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let hasUndefinedLabels = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8044 -> node8045 [label=<<font color="black">true</font>> color="black"]
  node8044 -> node8046 [label=<<font color="black">false</font>> color="black"]
  node8043 -> node8044 [ color="black"]
  node8047 -> node8048 [ color="black"]
  node8053 -> node8040 [ color="black"]
  node8046 -> node8047 [ color="black"]
  node8042 -> node8043 [ color="black"]
  node8049 -> node8050 [ color="black"]
  node8039 -> node8041 [ color="black"]
  node8045 -> node8046 [ color="black"]
  node8041 -> node8042 [label=<<font color="black">true</font>> color="black"]
  node8041 -> node8046 [label=<<font color="black">false</font>> color="black"]
  node8048 -> node8049 [label=<<font color="black">true</font>> color="black"]
  node8048 -> node8050 [label=<<font color="black">false</font>> color="black"]
  node8050 -> node8051 [label=<<font color="black">true</font>> color="black"]
  node8050 -> node8052 [label=<<font color="black">false</font>> color="black"]
  node8052 -> node8053 [ color="black"]
  node8051 -> node8052 [ color="black"]
}
