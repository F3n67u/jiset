digraph {
  node9131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:__x3__</td></tr>
      <tr><td align="left">5:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9127 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let closure = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9126 [shape=cds, label=<<font color="black">2:app __x1__ = (OrdinaryFunctionCreate INTRINSIC_Function_prototype sourceText FormalParameters FunctionBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node9122 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let scope = __x0__</td></tr>
      <tr><td align="left">1:let sourceText = (get-syntax FunctionExpression)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9129 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9130 [shape=cds, label=<<font color="black">4:app __x3__ = (MakeConstructor closure)</font>> color="black" fillcolor="white" style=filled]
  node9124 [shape=cds, label=<<font color="black">0:access __x0__ = (GLOBAL_context &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9123 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9128 [shape=cds, label=<<font color="black">3:app __x2__ = (SetFunctionName closure name)</font>> color="black" fillcolor="white" style=filled]
  node9130 -> node9131 [ color="black"]
  node9127 -> node9128 [ color="black"]
  node9124 -> node9125 [ color="black"]
  node9122 -> node9124 [ color="black"]
  node9125 -> node9126 [ color="black"]
  node9128 -> node9129 [ color="black"]
  node9129 -> node9130 [ color="black"]
  node9131 -> node9123 [ color="black"]
  node9126 -> node9127 [ color="black"]
}
