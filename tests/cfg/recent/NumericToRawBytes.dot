digraph {
  node17556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List whose elements are the 8 bytes that are the IEEE 754 - 2019 binary64 format encoding of id:{value} . If id:{isLittleEndian} is value:{false} , the bytes are arranged in big endian order . Otherwise , the bytes are arranged in little endian order . If id:{value} is value:{NaN} , id:{rawBytes} may be set to any implementation chosen IEEE 754 - 2019 binary64 format Not - a - Number encoding . An implementation must always choose the same encoding for each implementation distinguishable value:{NaN} value .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17560 [shape=diamond, label=<<font color="black">(! (&lt; intValue 0i))</font>> color="black" fillcolor="white" style=filled]
  node17562 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List whose elements are the id:{n} - byte binary two ' s complement encoding of id:{intValue} . If id:{isLittleEndian} is value:{false} , the bytes are ordered in big endian order . Otherwise , the bytes are ordered in little endian order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17555 [shape=diamond, label=<<font color="black">(= type CONST_Float64)</font>> color="black" fillcolor="white" style=filled]
  node17559 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let intValue = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17563 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return rawBytes</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17554 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List whose elements are the 4 bytes that are the result of converting id:{value} to IEEE 754 - 2019 binary32 format using roundTiesToEven mode . If id:{isLittleEndian} is value:{false} , the bytes are arranged in big endian order . Otherwise , the bytes are arranged in little endian order . If id:{value} is value:{NaN} , id:{rawBytes} may be set to any implementation chosen IEEE 754 - 2019 binary32 format Not - a - Number encoding . An implementation must always choose the same encoding for each implementation distinguishable value:{NaN} value .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17551 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17558 [shape=cds, label=<<font color="black">7:app __x0__ = (convOp value)</font>> color="black" fillcolor="white" style=filled]
  node17552 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17553 [shape=diamond, label=<<font color="black">(= type CONST_Float32)</font>> color="black" fillcolor="white" style=filled]
  node17561 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{rawBytes} be a List whose elements are the id:{n} - byte binary encoding of id:{intValue} . If id:{isLittleEndian} is value:{false} , the bytes are ordered in big endian order . Otherwise , the bytes are ordered in little endian order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17557 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{n} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{convOp} be the abstract operation named in the Conversion Operation column in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17558 -> node17559 [ color="black"]
  node17560 -> node17561 [label=<<font color="black">true</font>> color="black"]
  node17560 -> node17562 [label=<<font color="black">false</font>> color="black"]
  node17563 -> node17552 [ color="black"]
  node17556 -> node17563 [ color="black"]
  node17559 -> node17560 [ color="black"]
  node17561 -> node17563 [ color="black"]
  node17551 -> node17553 [ color="black"]
  node17557 -> node17558 [ color="black"]
  node17555 -> node17556 [label=<<font color="black">true</font>> color="black"]
  node17555 -> node17557 [label=<<font color="black">false</font>> color="black"]
  node17554 -> node17563 [ color="black"]
  node17553 -> node17554 [label=<<font color="black">true</font>> color="black"]
  node17553 -> node17555 [label=<<font color="black">false</font>> color="black"]
  node17562 -> node17563 [ color="black"]
}
