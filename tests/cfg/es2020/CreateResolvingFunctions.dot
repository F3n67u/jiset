digraph {
  node18429 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18432 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let resolve = [! __x0__]</td></tr>
      <tr><td align="left">3:resolve.Promise = promise</td></tr>
      <tr><td align="left">4:resolve.AlreadyResolved = alreadyResolved</td></tr>
      <tr><td align="left">5:let stepsReject = PromiseRejectFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18433 [shape=cds, label=<<font color="black">6:app __x1__ = (CreateBuiltinFunction stepsReject (new [&quot;Promise&quot;, &quot;AlreadyResolved&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18428 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18427 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18431 [shape=cds, label=<<font color="black">2:app __x0__ = (CreateBuiltinFunction stepsResolve (new [&quot;Promise&quot;, &quot;AlreadyResolved&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18434 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let reject = [! __x1__]</td></tr>
      <tr><td align="left">7:reject.Promise = promise</td></tr>
      <tr><td align="left">8:reject.AlreadyResolved = alreadyResolved</td></tr>
      <tr><td align="left">9:return (new Record(&quot;Resolve&quot; -&gt; resolve, &quot;Reject&quot; -&gt; reject))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18430 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let alreadyResolved = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">1:let stepsResolve = PromiseResolveFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18429 -> node18430 [ color="black"]
  node18430 -> node18431 [ color="black"]
  node18427 -> node18429 [ color="black"]
  node18434 -> node18428 [ color="black"]
  node18432 -> node18433 [ color="black"]
  node18431 -> node18432 [ color="black"]
  node18433 -> node18434 [ color="black"]
}
