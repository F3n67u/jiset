{
  [0] if (is-completion V) if (= V.Type CONST_normal) V = V.Value else return V else [5] {}
  [0] V
  [1] if (is-completion W) if (= W.Type CONST_normal) W = W.Value else return W else [5] {}
  [1] W
  [3] app __x0__ = (IsUnresolvableReference V)
  [3] assert (= __x0__ false)
  [4] let base = V.Base
  [6] app __x1__ = (base.InitializeBinding base V.ReferencedName W)
  [6] app __x2__ = (WrapCompletion __x1__)
  [6] return __x2__
}