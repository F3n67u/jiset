{
  if (= current undefined) {
    if (= extensible false) return false else {}
    assert (= extensible true)
    let __x0__ = true
    app __x1__ = (IsGenericDescriptor Desc)
    __x0__ = (= __x1__ true)
    if __x0__ {} else {
      app __x2__ = (IsDataDescriptor Desc)
      __x0__ = (= __x2__ true)
    }
    if __x0__ ??? "If id:{O} is not value:{undefined} , create an own data property named id:{P} of object id:{O} whose [ [ Value ] ] , [ [ Writable ] ] , [ [ Enumerable ] ] and [ [ Configurable ] ] attribute values are described by id:{Desc} . If the value of an attribute field of id:{Desc} is absent , the attribute of the newly created property is set to its default value ." else ??? "If id:{O} is not value:{undefined} , create an own accessor property named id:{P} of object id:{O} whose [ [ Get ] ] , [ [ Set ] ] , [ [ Enumerable ] ] and [ [ Configurable ] ] attribute values are described by id:{Desc} . If the value of an attribute field of id:{Desc} is absent , the attribute of the newly created property is set to its default value ."
    return true
  } else {}
  ??? "If every field in id:{Desc} is absent , return value:{true} ."
  if (= current.Configurable false) {
    if (= Desc.Configurable true) return false else {}
    ??? "If id:{Desc} . [ [ Enumerable ] ] is present and the [ [ Enumerable ] ] fields of id:{current} and id:{Desc} are the Boolean negation of each other , return value:{false} ."
  } else {}
  app __x3__ = (IsGenericDescriptor Desc)
  if (= __x3__ true) {} else {
    app __x4__ = (IsDataDescriptor current)
    app __x5__ = (IsDataDescriptor Desc)
    if (! (= __x4__ __x5__)) {
      if (= current.Configurable false) return false else {}
      app __x6__ = (IsDataDescriptor current)
      if (= __x6__ true) ??? "If id:{O} is not value:{undefined} , convert the property named id:{P} of object id:{O} from a data property to an accessor property . Preserve the existing values of the converted property ' s [ [ Configurable ] ] and [ [ Enumerable ] ] attributes and set the rest of the property ' s attributes to their default values ." else ??? "If id:{O} is not value:{undefined} , convert the property named id:{P} of object id:{O} from an accessor property to a data property . Preserve the existing values of the converted property ' s [ [ Configurable ] ] and [ [ Enumerable ] ] attributes and set the rest of the property ' s attributes to their default values ."
    } else {
      app __x7__ = (IsDataDescriptor current)
      app __x8__ = (IsDataDescriptor Desc)
      if (&& (= __x7__ true) (= __x8__ true)) if (&& (= current.Configurable false) (= current.Writable false)) {
        if (&& (! (= Desc.Writable absent)) (= Desc.Writable true)) return false else {}
        let __x9__ = true
        __x9__ = (! (= Desc.Value absent))
        if __x9__ {
          app __x10__ = (SameValue Desc.Value current.Value)
          __x9__ = (= __x10__ false)
        } else {}
        if __x9__ return false else {}
        return true
      } else {} else if (= current.Configurable false) {
        let __x11__ = true
        __x11__ = (! (= Desc.Set absent))
        if __x11__ {
          app __x12__ = (SameValue Desc.Set current.Set)
          __x11__ = (= __x12__ false)
        } else {}
        if __x11__ return false else {}
        let __x13__ = true
        __x13__ = (! (= Desc.Get absent))
        if __x13__ {
          app __x14__ = (SameValue Desc.Get current.Get)
          __x13__ = (= __x14__ false)
        } else {}
        if __x13__ return false else {}
        return true
      } else {}
    }
  }
  if (! (= O undefined)) ??? "For each field of id:{Desc} that is present , set the corresponding attribute of the property named id:{P} of object id:{O} to the value of the field ." else {}
  return true
}