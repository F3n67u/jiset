digraph {
  node5437 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5461 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5457 [shape=cds, label=<<font color="black">13:access __x9__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5448 [shape=cds, label=<<font color="black">6:app __x6__ = (__x5__ __x4__)</font>> color="black" fillcolor="white" style=filled]
  node5455 [shape=diamond, label=<<font color="black">(|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))</font>> color="black" fillcolor="white" style=filled]
  node5460 [shape=cds, label=<<font color="black">14:app __x11__ = (PutValue lref rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node5447 [shape=cds, label=<<font color="black">6:access __x5__ = (Initializer &quot;NamedEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let defaultValue = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5456 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let assignmentPattern = (parse-syntax DestructuringAssignmentTarget &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5449 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rhsValue = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5442 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= v undefined))</font>> color="black" fillcolor="white" style=filled]
  node5435 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5450 [shape=cds, label=<<font color="black">8:access __x7__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5453 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let rhsValue = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5444 [shape=cds, label=<<font color="black">7:access __x3__ = (DestructuringAssignmentTarget &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5454 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let rhsValue = v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5443 [shape=cds, label=<<font color="black">7:app __x2__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node5438 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5439 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5459 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5446 [shape=cds, label=<<font color="black">6:app __x4__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5452 [shape=cds, label=<<font color="black">9:app __x8__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node5441 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let v = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5440 [shape=cds, label=<<font color="black">3:app __x1__ = (GetV value propertyName)</font>> color="black" fillcolor="white" style=filled]
  node5458 [shape=cds, label=<<font color="black">13:app __x10__ = (__x9__ rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node5436 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5445 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x2__ true) (= __x3__ true))</font>> color="black" fillcolor="white" style=filled]
  node5441 -> node5442 [ color="black"]
  node5449 -> node5455 [ color="black"]
  node5451 -> node5452 [ color="black"]
  node5450 -> node5451 [ color="black"]
  node5460 -> node5461 [ color="black"]
  node5454 -> node5455 [ color="black"]
  node5440 -> node5441 [ color="black"]
  node5457 -> node5458 [ color="black"]
  node5461 -> node5436 [ color="black"]
  node5448 -> node5449 [ color="black"]
  node5445 -> node5446 [label=<<font color="black">true</font>> color="black"]
  node5445 -> node5450 [label=<<font color="black">false</font>> color="black"]
  node5439 -> node5440 [ color="black"]
  node5438 -> node5439 [ color="black"]
  node5447 -> node5448 [ color="black"]
  node5452 -> node5453 [ color="black"]
  node5453 -> node5455 [ color="black"]
  node5446 -> node5447 [ color="black"]
  node5458 -> node5459 [ color="black"]
  node5455 -> node5456 [label=<<font color="black">true</font>> color="black"]
  node5455 -> node5460 [label=<<font color="black">false</font>> color="black"]
  node5444 -> node5445 [ color="black"]
  node5442 -> node5443 [label=<<font color="black">true</font>> color="black"]
  node5442 -> node5454 [label=<<font color="black">false</font>> color="black"]
  node5443 -> node5444 [ color="black"]
  node5437 -> node5438 [label=<<font color="black">true</font>> color="black"]
  node5437 -> node5440 [label=<<font color="black">false</font>> color="black"]
  node5435 -> node5437 [ color="black"]
  node5459 -> node5460 [ color="black"]
  node5456 -> node5457 [ color="black"]
}
