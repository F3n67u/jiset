digraph {
  node10294 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10292 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10295 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{evalRealm} be the value of the active function object ' s [ [ Realm ] ] internal slot .&quot;</td></tr>
      <tr><td align="left">1:let strictCaller = false</td></tr>
      <tr><td align="left">2:let directEval = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10293 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10296 [shape=cds, label=<<font color="black">3:app __x0__ = (PerformEval x evalRealm strictCaller directEval)</font>> color="black" fillcolor="white" style=filled]
  node10295 -> node10296 [ color="black"]
  node10296 -> node10297 [ color="black"]
  node10292 -> node10294 [ color="black"]
  node10294 -> node10295 [ color="black"]
  node10297 -> node10293 [ color="black"]
}
