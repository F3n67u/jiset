{
  app __x0__ = (ToString key)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let stringKey = __x0__
  let __x1__ = GLOBAL_symbolRegistry
  let __x2__ = 0i
  while (< __x2__ __x1__.length) {
    let e = __x1__[__x2__]
    app __x3__ = (SameValue e.Key stringKey)
    if (= __x3__ true) {
      app __x4__ = (WrapCompletion e.Symbol)
      return __x4__
    } else {}
    __x2__ = (+ __x2__ 1i)
  }
  ??? "Let id:{newSymbol} be a new unique Symbol value whose [ [ Description ] ] value is id:{stringKey} ."
  append (new Record("Key" -> stringKey, "Symbol" -> newSymbol)) -> GLOBAL_symbolRegistry
  app __x5__ = (WrapCompletion newSymbol)
  return __x5__
}