digraph {
  node11068 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11069 [shape=diamond, label=<<font color="black">(= x NaN)</font>> color="black" fillcolor="white" style=filled]
  node11070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return NaN</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11066 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;If id:{x} is one of value:{+0} , value:{-0} , value:{+&infin;} , value:{-&infin;} , return id:{x} .&quot;</td></tr>
      <tr><td align="left">2:??? &quot;Let id:{x32} be the result of converting id:{x} to a value in IEEE 754 - 2008 binary32 format using roundTiesToEven .&quot;</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{x64} be the result of converting id:{x32} to a value in IEEE 754 - 2008 binary64 format .&quot;</td></tr>
      <tr><td align="left">4:return x64</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11067 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11069 -> node11070 [label=<<font color="black">true</font>> color="black"]
  node11069 -> node11071 [label=<<font color="black">false</font>> color="black"]
  node11071 -> node11067 [ color="black"]
  node11068 -> node11069 [ color="black"]
  node11066 -> node11068 [ color="black"]
  node11070 -> node11071 [ color="black"]
}
