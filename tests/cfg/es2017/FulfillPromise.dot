digraph {
  node16402 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16398 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16401 [shape=cds, label=<<font color="black">6:app __x0__ = (TriggerPromiseReactions reactions value)</font>> color="black" fillcolor="white" style=filled]
  node16399 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16400 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= promise.PromiseState &quot;pending&quot;)</td></tr>
      <tr><td align="left">1:let reactions = promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">2:promise.PromiseResult = value</td></tr>
      <tr><td align="left">3:promise.PromiseFulfillReactions = undefined</td></tr>
      <tr><td align="left">4:promise.PromiseRejectReactions = undefined</td></tr>
      <tr><td align="left">5:promise.PromiseState = &quot;fulfilled&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16396 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16397 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16401 -> node16402 [ color="black"]
  node16399 -> node16400 [ color="black"]
  node16396 -> node16398 [ color="black"]
  node16398 -> node16399 [ color="black"]
  node16400 -> node16401 [ color="black"]
  node16402 -> node16397 [ color="black"]
}
