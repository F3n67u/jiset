digraph {
  node13177 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
      <tr><td align="left">2:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let intStart = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13183 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let intEnd = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13195 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let span = __x8__</td></tr>
      <tr><td align="left">8:??? &quot;Return the String value containing id:{span} consecutive elements from id:{S} beginning with the element at index id:{from} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13186 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13180 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node13173 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13176 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13189 [shape=diamond, label=<<font color="black">(&lt; intEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node13181 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let intEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13178 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node13188 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13193 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13192 [shape=cds, label=<<font color="black">app __x7__ = (min intEnd len)</font>> color="black" fillcolor="white" style=filled]
  node13194 [shape=cds, label=<<font color="black">7:app __x8__ = (max (- to from) 0i)</font>> color="black" fillcolor="white" style=filled]
  node13171 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13182 [shape=cds, label=<<font color="black">app __x3__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node13187 [shape=cds, label=<<font color="black">app __x5__ = (min intStart len)</font>> color="black" fillcolor="white" style=filled]
  node13174 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13191 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13170 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13190 [shape=cds, label=<<font color="black">app __x6__ = (max (+ len intEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node13184 [shape=diamond, label=<<font color="black">(&lt; intStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node13185 [shape=cds, label=<<font color="black">app __x4__ = (max (+ len intStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node13172 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13195 -> node13171 [ color="black"]
  node13172 -> node13173 [ color="black"]
  node13176 -> node13177 [ color="black"]
  node13194 -> node13195 [ color="black"]
  node13170 -> node13172 [ color="black"]
  node13185 -> node13186 [ color="black"]
  node13179 -> node13180 [ color="black"]
  node13188 -> node13189 [ color="black"]
  node13180 -> node13181 [label=<<font color="black">true</font>> color="black"]
  node13180 -> node13182 [label=<<font color="black">false</font>> color="black"]
  node13175 -> node13176 [ color="black"]
  node13193 -> node13194 [ color="black"]
  node13173 -> node13174 [ color="black"]
  node13187 -> node13188 [ color="black"]
  node13192 -> node13193 [ color="black"]
  node13190 -> node13191 [ color="black"]
  node13181 -> node13184 [ color="black"]
  node13178 -> node13179 [ color="black"]
  node13186 -> node13189 [ color="black"]
  node13191 -> node13194 [ color="black"]
  node13184 -> node13185 [label=<<font color="black">true</font>> color="black"]
  node13184 -> node13187 [label=<<font color="black">false</font>> color="black"]
  node13177 -> node13178 [ color="black"]
  node13189 -> node13190 [label=<<font color="black">true</font>> color="black"]
  node13189 -> node13192 [label=<<font color="black">false</font>> color="black"]
  node13174 -> node13175 [ color="black"]
  node13182 -> node13183 [ color="black"]
  node13183 -> node13184 [ color="black"]
}
