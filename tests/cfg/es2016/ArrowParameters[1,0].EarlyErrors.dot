digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;If the sub:{[ Yield ]} grammar parameter is present on nt:{ArrowParameters} , it is a Syntax Error if the lexical token sequence matched by nt:{CoverParenthesizedExpressionAndArrowParameterList[?Yield]} cannot be parsed with no tokens left over using nt:{ArrowFormalParameters[Yield]} as the goal symbol .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;If the sub:{[ Yield ]} grammar parameter is not present on nt:{ArrowParameters} , it is a Syntax Error if the lexical token sequence matched by nt:{CoverParenthesizedExpressionAndArrowParameterList[?Yield]} cannot be parsed with no tokens left over using nt:{ArrowFormalParameters} as the goal symbol .&quot;</td></tr>
      <tr><td align="left">2:??? &quot;All early errors rules for nt:{ArrowFormalParameters} and its derived productions also apply to CoveredFormalsList of nt:{CoverParenthesizedExpressionAndArrowParameterList[?Yield]} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node0 -> node2 [ color="black"]
  node2 -> node1 [ color="black"]
}
