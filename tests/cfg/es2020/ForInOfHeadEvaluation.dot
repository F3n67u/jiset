digraph {
  node7914 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7909 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:assert (|| (= iterationKind CONST_iterate) (= iterationKind CONST_asyncDASHiterate))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7906 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let obj = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7913 [shape=cds, label=<<font color="black">20:app __x8__ = (GetIterator exprValue iteratorHint)</font>> color="black" fillcolor="white" style=filled]
  node7910 [shape=diamond, label=<<font color="black">(= iterationKind CONST_asyncDASHiterate)</font>> color="black" fillcolor="white" style=filled]
  node7907 [shape=cds, label=<<font color="black">15:app __x7__ = (EnumerateObjectProperties obj)</font>> color="black" fillcolor="white" style=filled]
  node7911 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iteratorHint = CONST_async</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7908 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7912 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iteratorHint = CONST_sync</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7887 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7890 [shape=diamond, label=<<font color="black">(&lt; 0i uninitializedBoundNames.length)</font>> color="black" fillcolor="white" style=filled]
  node7903 [shape=diamond, label=<<font color="black">(|| (= exprValue undefined) (= exprValue null))</font>> color="black" fillcolor="white" style=filled]
  node7888 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7905 [shape=cds, label=<<font color="black">14:app __x6__ = (ToObject exprValue)</font>> color="black" fillcolor="white" style=filled]
  node7894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7899 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let exprRef = __x4__</td></tr>
      <tr><td align="left">9:GLOBAL_context.LexicalEnvironment = oldEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7902 [shape=diamond, label=<<font color="black">(= iterationKind CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node7891 [shape=cds, label=<<font color="black">3:app __x0__ = (NewDeclarativeEnvironment oldEnv)</font>> color="black" fillcolor="white" style=filled]
  node7898 [shape=cds, label=<<font color="black">8:access __x4__ = (expr &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7895 [shape=cds, label=<<font color="black">6:app __x3__ = (newEnvRec.CreateMutableBinding newEnvRec name false)</font>> color="black" fillcolor="white" style=filled]
  node7892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let newEnv = __x0__</td></tr>
      <tr><td align="left">4:let newEnvRec = newEnv.EnvironmentRecord</td></tr>
      <tr><td align="left">5:let __x1__ = uninitializedBoundNames</td></tr>
      <tr><td align="left">5:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7901 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let exprValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7896 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:[! __x3__]</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:GLOBAL_context.LexicalEnvironment = newEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7904 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (new Completion(&quot;Type&quot; -&gt; CONST_break, &quot;Value&quot; -&gt; CONST_empty, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let oldEnv = GLOBAL_context.LexicalEnvironment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7900 [shape=cds, label=<<font color="black">10:app __x5__ = (GetValue exprRef)</font>> color="black" fillcolor="white" style=filled]
  node7893 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node7912 -> node7913 [ color="black"]
  node7897 -> node7898 [ color="black"]
  node7901 -> node7902 [ color="black"]
  node7905 -> node7906 [ color="black"]
  node7911 -> node7913 [ color="black"]
  node7890 -> node7891 [label=<<font color="black">true</font>> color="black"]
  node7890 -> node7898 [label=<<font color="black">false</font>> color="black"]
  node7896 -> node7893 [ color="black"]
  node7904 -> node7905 [ color="black"]
  node7894 -> node7895 [ color="black"]
  node7895 -> node7896 [ color="black"]
  node7891 -> node7892 [ color="black"]
  node7906 -> node7907 [ color="black"]
  node7889 -> node7890 [ color="black"]
  node7914 -> node7888 [ color="black"]
  node7898 -> node7899 [ color="black"]
  node7892 -> node7893 [ color="black"]
  node7900 -> node7901 [ color="black"]
  node7907 -> node7908 [ color="black"]
  node7887 -> node7889 [ color="black"]
  node7902 -> node7903 [label=<<font color="black">true</font>> color="black"]
  node7902 -> node7909 [label=<<font color="black">false</font>> color="black"]
  node7899 -> node7900 [ color="black"]
  node7913 -> node7914 [ color="black"]
  node7903 -> node7904 [label=<<font color="black">true</font>> color="black"]
  node7903 -> node7905 [label=<<font color="black">false</font>> color="black"]
  node7910 -> node7911 [label=<<font color="black">true</font>> color="black"]
  node7910 -> node7912 [label=<<font color="black">false</font>> color="black"]
  node7908 -> node7888 [ color="black"]
  node7909 -> node7910 [ color="black"]
  node7893 -> node7894 [label=<<font color="black">true</font>> color="black"]
  node7893 -> node7897 [label=<<font color="black">false</font>> color="black"]
}
