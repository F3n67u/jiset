digraph {
  node4637 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let right = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4636 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4648 [shape=cds, label=<<font color="black">5:app __x5__ = (ToNumber rightValue)</font>> color="black" fillcolor="white" style=filled]
  node4644 [shape=cds, label=<<font color="black">3:app __x3__ = (GetValue right)</font>> color="black" fillcolor="white" style=filled]
  node4641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let leftValue = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let exponent = [? __x5__]</td></tr>
      <tr><td align="left">6:??? &quot;Return the result of &lt; emu - xref href = \&quot; # sec - applying - the - exp - operator \&quot; title &gt; Applying the * * operator &lt; / emu - xref &gt; with id:{base} and id:{exponent} as specified in link:{unhandled: sec-applying-the-exp-operator} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4642 [shape=cds, label=<<font color="black">2:access __x2__ = (ExponentiationExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let base = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4638 [shape=cds, label=<<font color="black">0:access __x0__ = (UpdateExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4645 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let rightValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4640 [shape=cds, label=<<font color="black">1:app __x1__ = (GetValue left)</font>> color="black" fillcolor="white" style=filled]
  node4639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let left = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4646 [shape=cds, label=<<font color="black">4:app __x4__ = (ToNumber leftValue)</font>> color="black" fillcolor="white" style=filled]
  node4649 -> node4637 [ color="black"]
  node4647 -> node4648 [ color="black"]
  node4645 -> node4646 [ color="black"]
  node4642 -> node4643 [ color="black"]
  node4636 -> node4638 [ color="black"]
  node4648 -> node4649 [ color="black"]
  node4641 -> node4642 [ color="black"]
  node4644 -> node4645 [ color="black"]
  node4638 -> node4639 [ color="black"]
  node4639 -> node4640 [ color="black"]
  node4643 -> node4644 [ color="black"]
  node4646 -> node4647 [ color="black"]
  node4640 -> node4641 [ color="black"]
}
