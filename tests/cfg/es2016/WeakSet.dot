digraph {
  node14804 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14809 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node14803 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14832 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node14814 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14811 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node14822 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node14833 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node14829 [shape=cds, label=<<font color="black">14:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node14805 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node14818 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node14825 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node14830 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14815 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node14812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14808 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14821 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14816 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node14831 [shape=cds, label=<<font color="black">15:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node14807 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakSetPrototype (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node14820 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node14813 [shape=cds, label=<<font color="black">6:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14827 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node14810 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14834 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14802 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14823 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node14806 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14808 -> node14809 [ color="black"]
  node14802 -> node14804 [ color="black"]
  node14817 -> node14818 [ color="black"]
  node14829 -> node14830 [ color="black"]
  node14815 -> node14816 [ color="black"]
  node14834 -> node14822 [ color="black"]
  node14813 -> node14814 [ color="black"]
  node14811 -> node14812 [label=<<font color="black">true</font>> color="black"]
  node14811 -> node14813 [label=<<font color="black">false</font>> color="black"]
  node14825 -> node14826 [label=<<font color="black">true</font>> color="black"]
  node14825 -> node14827 [label=<<font color="black">false</font>> color="black"]
  node14833 -> node14834 [ color="black"]
  node14827 -> node14828 [ color="black"]
  node14823 -> node14824 [ color="black"]
  node14810 -> node14811 [ color="black"]
  node14818 -> node14819 [ color="black"]
  node14828 -> node14829 [ color="black"]
  node14822 -> node14823 [label=<<font color="black">true</font>> color="black"]
  node14822 -> node14803 [label=<<font color="black">false</font>> color="black"]
  node14806 -> node14807 [ color="black"]
  node14812 -> node14820 [ color="black"]
  node14814 -> node14815 [ color="black"]
  node14831 -> node14832 [ color="black"]
  node14805 -> node14806 [label=<<font color="black">true</font>> color="black"]
  node14805 -> node14807 [label=<<font color="black">false</font>> color="black"]
  node14820 -> node14821 [label=<<font color="black">true</font>> color="black"]
  node14820 -> node14822 [label=<<font color="black">false</font>> color="black"]
  node14807 -> node14808 [ color="black"]
  node14804 -> node14805 [ color="black"]
  node14826 -> node14827 [ color="black"]
  node14819 -> node14820 [ color="black"]
  node14816 -> node14817 [label=<<font color="black">true</font>> color="black"]
  node14816 -> node14818 [label=<<font color="black">false</font>> color="black"]
  node14830 -> node14831 [ color="black"]
  node14821 -> node14822 [ color="black"]
  node14832 -> node14833 [label=<<font color="black">true</font>> color="black"]
  node14832 -> node14822 [label=<<font color="black">false</font>> color="black"]
  node14824 -> node14825 [ color="black"]
  node14809 -> node14810 [label=<<font color="black">true</font>> color="black"]
  node14809 -> node14811 [label=<<font color="black">false</font>> color="black"]
}
