digraph {
  node15083 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15073 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node15082 [shape=cds, label=<<font color="black">8:app __x2__ = (EscapeRegExpPattern src flags)</font>> color="black" fillcolor="white" style=filled]
  node15074 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (! (= R.OriginalFlags absent))</td></tr>
      <tr><td align="left">6:let src = R.OriginalSource</td></tr>
      <tr><td align="left">7:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15076 [shape=diamond, label=<<font color="black">(= R.OriginalSource absent)</font>> color="black" fillcolor="white" style=filled]
  node15072 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15077 [shape=cds, label=<<font color="black">4:app __x1__ = (SameValue R INTRINSIC_RegExp_prototype)</font>> color="black" fillcolor="white" style=filled]
  node15078 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node15071 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15070 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;(?:)&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15080 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15081 -> node15082 [ color="black"]
  node15079 -> node15081 [ color="black"]
  node15078 -> node15079 [label=<<font color="black">true</font>> color="black"]
  node15078 -> node15080 [label=<<font color="black">false</font>> color="black"]
  node15077 -> node15078 [ color="black"]
  node15083 -> node15071 [ color="black"]
  node15073 -> node15074 [ color="black"]
  node15080 -> node15081 [ color="black"]
  node15074 -> node15075 [label=<<font color="black">true</font>> color="black"]
  node15074 -> node15076 [label=<<font color="black">false</font>> color="black"]
  node15076 -> node15077 [label=<<font color="black">true</font>> color="black"]
  node15076 -> node15081 [label=<<font color="black">false</font>> color="black"]
  node15075 -> node15076 [ color="black"]
  node15070 -> node15072 [ color="black"]
  node15072 -> node15073 [ color="black"]
  node15082 -> node15083 [ color="black"]
}
