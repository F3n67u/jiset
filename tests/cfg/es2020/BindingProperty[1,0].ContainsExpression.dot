digraph {
  node6830 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white" style=filled]
  node6828 [shape=cds, label=<<font color="black">0:access __x0__ = (PropertyName &quot;IsComputedPropertyKey&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6827 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6832 [shape=cds, label=<<font color="black">2:access __x1__ = (BindingElement &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6826 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let has = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6832 -> node6833 [ color="black"]
  node6826 -> node6828 [ color="black"]
  node6829 -> node6830 [ color="black"]
  node6831 -> node6832 [ color="black"]
  node6828 -> node6829 [ color="black"]
  node6833 -> node6827 [ color="black"]
  node6830 -> node6831 [label=<<font color="black">true</font>> color="black"]
  node6830 -> node6832 [label=<<font color="black">false</font>> color="black"]
}
