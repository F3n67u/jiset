digraph {
  node5614 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5617 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5615 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5620 [shape=cds, label=<<font color="black">2:access __x1__ = (StatementListItem &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node5616 [shape=cds, label=<<font color="black">0:access __x0__ = (StatementList &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node5619 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5618 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node5616 -> node5617 [ color="black"]
  node5614 -> node5616 [ color="black"]
  node5618 -> node5619 [label=<<font color="black">true</font>> color="black"]
  node5618 -> node5620 [label=<<font color="black">false</font>> color="black"]
  node5621 -> node5615 [ color="black"]
  node5619 -> node5620 [ color="black"]
  node5620 -> node5621 [ color="black"]
  node5617 -> node5618 [ color="black"]
}
