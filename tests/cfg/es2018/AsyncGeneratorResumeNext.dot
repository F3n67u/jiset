digraph {
  node17094 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17104 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let promiseCapability = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17113 [shape=cds, label=<<font color="black">26:app __x6__ = (PerformPromiseThen promiseCapability.Promise onFulfilled onRejected throwawayCapability)</font>> color="black" fillcolor="white" style=filled]
  node17117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:[! __x7__]</td></tr>
      <tr><td align="left">31:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17090 [shape=diamond, label=<<font color="black">(= state &quot;awaiting-return&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17118 [shape=diamond, label=<<font color="black">(= state &quot;completed&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17096 [shape=cds, label=<<font color="black">32:app __x0__ = (IsAbruptCompletion completion)</font>> color="black" fillcolor="white" style=filled]
  node17106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:[! __x2__]</td></tr>
      <tr><td align="left">18:let stepsFulfilled = AsyncGeneratorResumeNextReturnProcessorFulfilledFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17101 [shape=diamond, label=<<font color="black">(= completion.Type CONST_return)</font>> color="black" fillcolor="white" style=filled]
  node17109 [shape=cds, label=<<font color="black">22:app __x4__ = (CreateBuiltinFunction stepsRejected (new [&quot;Generator&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:assert (= completion.Type CONST_throw)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17098 [shape=diamond, label=<<font color="black">(= state &quot;suspendedStart&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17102 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:generator.AsyncGeneratorState = &quot;awaiting-return&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let throwawayCapability = [! __x5__]</td></tr>
      <tr><td align="left">25:throwawayCapability.Promise.PromiseIsHandled = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = queue[0i]</td></tr>
      <tr><td align="left">8:let completion = next.Completion</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17116 [shape=cds, label=<<font color="black">30:app __x7__ = (AsyncGeneratorReject generator completion.Value)</font>> color="black" fillcolor="white" style=filled]
  node17091 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17103 [shape=cds, label=<<font color="black">16:app __x1__ = (NewPromiseCapability INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node17108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let onFulfilled = __x3__</td></tr>
      <tr><td align="left">20:onFulfilled.Generator = generator</td></tr>
      <tr><td align="left">21:let stepsRejected = AsyncGeneratorResumeNextReturnProcessorRejectedFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17100 [shape=diamond, label=<<font color="black">(= state &quot;completed&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17111 [shape=cds, label=<<font color="black">24:app __x5__ = (NewPromiseCapability INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node17097 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node17107 [shape=cds, label=<<font color="black">19:app __x3__ = (CreateBuiltinFunction stepsFulfilled (new [&quot;Generator&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17110 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let onRejected = __x4__</td></tr>
      <tr><td align="left">23:onRejected.Generator = generator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17093 [shape=diamond, label=<<font color="black">(= queue.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node17114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:[! __x6__]</td></tr>
      <tr><td align="left">27:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17086 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17087 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17105 [shape=cds, label=<<font color="black">17:app __x2__ = (Call promiseCapability.Resolve undefined (new [completion.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17119 [shape=cds, label=<<font color="black">app __x8__ = (AsyncGeneratorResolve generator undefined true)</font>> color="black" fillcolor="white" style=filled]
  node17092 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let queue = generator.AsyncGeneratorQueue</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17089 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let state = generator.AsyncGeneratorState</td></tr>
      <tr><td align="left">2:assert (! (= state &quot;executing&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17099 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:generator.AsyncGeneratorState = &quot;completed&quot;</td></tr>
      <tr><td align="left">12:state = &quot;completed&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:assert (|| (= state &quot;suspendedStart&quot;) (= state &quot;suspendedYield&quot;))</td></tr>
      <tr><td align="left">34:let genContext = generator.AsyncGeneratorContext</td></tr>
      <tr><td align="left">35:let callerContext = GLOBAL_context</td></tr>
      <tr><td align="left">36:GLOBAL_context = null</td></tr>
      <tr><td align="left">37:generator.AsyncGeneratorState = &quot;executing&quot;</td></tr>
      <tr><td align="left">38:append genContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">38:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">39:??? &quot;Resume the suspended evaluation of id:{genContext} using id:{completion} as the result of the operation that suspended it . Let id:{result} be the completion record returned by the resumed computation .&quot;</td></tr>
      <tr><td align="left">42:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17120 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17088 [shape=cds, label=<<font color="black">app generator = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17099 -> node17100 [ color="black"]
  node17100 -> node17101 [label=<<font color="black">true</font>> color="black"]
  node17100 -> node17121 [label=<<font color="black">false</font>> color="black"]
  node17113 -> node17114 [ color="black"]
  node17101 -> node17102 [label=<<font color="black">true</font>> color="black"]
  node17101 -> node17115 [label=<<font color="black">false</font>> color="black"]
  node17112 -> node17113 [ color="black"]
  node17089 -> node17090 [ color="black"]
  node17102 -> node17103 [ color="black"]
  node17103 -> node17104 [ color="black"]
  node17121 -> node17087 [ color="black"]
  node17097 -> node17098 [label=<<font color="black">true</font>> color="black"]
  node17097 -> node17118 [label=<<font color="black">false</font>> color="black"]
  node17120 -> node17121 [ color="black"]
  node17093 -> node17094 [label=<<font color="black">true</font>> color="black"]
  node17093 -> node17095 [label=<<font color="black">false</font>> color="black"]
  node17091 -> node17092 [ color="black"]
  node17104 -> node17105 [ color="black"]
  node17088 -> node17089 [ color="black"]
  node17108 -> node17109 [ color="black"]
  node17094 -> node17095 [ color="black"]
  node17098 -> node17099 [label=<<font color="black">true</font>> color="black"]
  node17098 -> node17100 [label=<<font color="black">false</font>> color="black"]
  node17107 -> node17108 [ color="black"]
  node17092 -> node17093 [ color="black"]
  node17109 -> node17110 [ color="black"]
  node17106 -> node17107 [ color="black"]
  node17114 -> node17121 [ color="black"]
  node17117 -> node17121 [ color="black"]
  node17105 -> node17106 [ color="black"]
  node17119 -> node17120 [ color="black"]
  node17086 -> node17088 [ color="black"]
  node17096 -> node17097 [ color="black"]
  node17111 -> node17112 [ color="black"]
  node17090 -> node17091 [label=<<font color="black">true</font>> color="black"]
  node17090 -> node17092 [label=<<font color="black">false</font>> color="black"]
  node17110 -> node17111 [ color="black"]
  node17118 -> node17119 [label=<<font color="black">true</font>> color="black"]
  node17118 -> node17121 [label=<<font color="black">false</font>> color="black"]
  node17116 -> node17117 [ color="black"]
  node17095 -> node17096 [ color="black"]
  node17115 -> node17116 [ color="black"]
}
