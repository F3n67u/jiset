digraph {
  node14200 [shape=cds, label=<<font color="black">19:app __x6__ = (RegExpAlloc newTarget)</font>> color="black" fillcolor="white" style=filled]
  node14196 [shape=cds, label=<<font color="black">14:app __x5__ = (Get pattern &quot;flags&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return pattern</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14199 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let P = pattern</td></tr>
      <tr><td align="left">18:let F = flags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14189 [shape=diamond, label=<<font color="black">(= flags undefined)</font>> color="black" fillcolor="white" style=filled]
  node14174 [shape=cds, label=<<font color="black">app flags = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node14195 [shape=diamond, label=<<font color="black">(= flags undefined)</font>> color="black" fillcolor="white" style=filled]
  node14183 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node14178 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14194 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let P = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14201 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let O = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14182 [shape=cds, label=<<font color="black">5:app __x2__ = (SameValue newTarget patternConstructor)</font>> color="black" fillcolor="white" style=filled]
  node14187 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x3__ Object) (! (= pattern.RegExpMatcher absent)))</font>> color="black" fillcolor="white" style=filled]
  node14176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let patternIsRegExp = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14191 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let F = flags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14171 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14181 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let patternConstructor = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14203 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14188 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let P = pattern.OriginalSource</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14192 [shape=diamond, label=<<font color="black">(= patternIsRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node14173 [shape=cds, label=<<font color="black">app pattern = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14180 [shape=cds, label=<<font color="black">4:app __x1__ = (Get pattern &quot;constructor&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14185 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14193 [shape=cds, label=<<font color="black">12:app __x4__ = (Get pattern &quot;source&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14198 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let F = flags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14190 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let F = pattern.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14175 [shape=cds, label=<<font color="black">0:app __x0__ = (IsRegExp pattern)</font>> color="black" fillcolor="white" style=filled]
  node14186 [shape=cds, label=<<font color="black">16:app __x3__ = (Type pattern)</font>> color="black" fillcolor="white" style=filled]
  node14179 [shape=diamond, label=<<font color="black">(&amp;&amp; (= patternIsRegExp true) (= flags undefined))</font>> color="black" fillcolor="white" style=filled]
  node14197 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let F = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14202 [shape=cds, label=<<font color="black">20:app __x7__ = (RegExpInitialize O P F)</font>> color="black" fillcolor="white" style=filled]
  node14172 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14177 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node14180 -> node14181 [ color="black"]
  node14179 -> node14180 [label=<<font color="black">true</font>> color="black"]
  node14179 -> node14186 [label=<<font color="black">false</font>> color="black"]
  node14199 -> node14200 [ color="black"]
  node14173 -> node14174 [ color="black"]
  node14189 -> node14190 [label=<<font color="black">true</font>> color="black"]
  node14189 -> node14191 [label=<<font color="black">false</font>> color="black"]
  node14185 -> node14186 [ color="black"]
  node14194 -> node14195 [ color="black"]
  node14184 -> node14186 [ color="black"]
  node14191 -> node14200 [ color="black"]
  node14178 -> node14179 [ color="black"]
  node14182 -> node14183 [ color="black"]
  node14171 -> node14173 [ color="black"]
  node14181 -> node14182 [ color="black"]
  node14176 -> node14177 [ color="black"]
  node14188 -> node14189 [ color="black"]
  node14200 -> node14201 [ color="black"]
  node14187 -> node14188 [label=<<font color="black">true</font>> color="black"]
  node14187 -> node14192 [label=<<font color="black">false</font>> color="black"]
  node14186 -> node14187 [ color="black"]
  node14195 -> node14196 [label=<<font color="black">true</font>> color="black"]
  node14195 -> node14198 [label=<<font color="black">false</font>> color="black"]
  node14198 -> node14200 [ color="black"]
  node14175 -> node14176 [ color="black"]
  node14202 -> node14203 [ color="black"]
  node14197 -> node14200 [ color="black"]
  node14183 -> node14184 [label=<<font color="black">true</font>> color="black"]
  node14183 -> node14186 [label=<<font color="black">false</font>> color="black"]
  node14177 -> node14178 [label=<<font color="black">true</font>> color="black"]
  node14177 -> node14185 [label=<<font color="black">false</font>> color="black"]
  node14174 -> node14175 [ color="black"]
  node14190 -> node14200 [ color="black"]
  node14193 -> node14194 [ color="black"]
  node14203 -> node14172 [ color="black"]
  node14196 -> node14197 [ color="black"]
  node14192 -> node14193 [label=<<font color="black">true</font>> color="black"]
  node14192 -> node14199 [label=<<font color="black">false</font>> color="black"]
  node14201 -> node14202 [ color="black"]
}
