{
  let numberOfSubstitutions = substitutions.length
  app __x0__ = (ToObject template)
  let cooked = [? __x0__]
  app __x1__ = (Get cooked "raw")
  app __x2__ = (ToObject [? __x1__])
  let raw = [? __x2__]
  app __x3__ = (LengthOfArrayLike raw)
  let literalSegments = [? __x3__]
  if (! (< 0i literalSegments)) return "" else {}
  let stringElements = (new [])
  let nextIndex = 0i
  while true {
    app __x4__ = (ToString nextIndex)
    let nextKey = [! __x4__]
    app __x5__ = (Get raw nextKey)
    app __x6__ = (ToString [? __x5__])
    let nextSeg = [? __x6__]
    let __x7__ = nextSeg
    let __x8__ = 0i
    while (< __x8__ __x7__.length) {
      let __x9__ = __x7__[__x8__]
      append __x9__ -> stringElements
      __x8__ = (+ __x8__ 1i)
    }
    if (== (+ nextIndex 1i) literalSegments) ??? "Return the String value whose code units are the elements in the List id:{stringElements} . If id:{stringElements} has no elements , the empty String is returned ." else {}
    if (< nextIndex numberOfSubstitutions) let next = substitutions[nextIndex] else let next = ""
    app __x10__ = (ToString next)
    let nextSub = [? __x10__]
    let __x11__ = nextSub
    let __x12__ = 0i
    while (< __x12__ __x11__.length) {
      let __x13__ = __x11__[__x12__]
      append __x13__ -> stringElements
      __x12__ = (+ __x12__ 1i)
    }
    nextIndex = (+ nextIndex 1i)
  }
}