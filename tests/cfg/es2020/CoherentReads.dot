digraph {
  node18893 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let R = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let W = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18889 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18888 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18896 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node18892 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node18902 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18899 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let Ws = __x3__</td></tr>
      <tr><td align="left">2:let byteLocation = R.ByteIndex</td></tr>
      <tr><td align="left">3:let __x4__ = Ws</td></tr>
      <tr><td align="left">3:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x1__ = __x0__</td></tr>
      <tr><td align="left">0:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18890 [shape=cds, label=<<font color="black">0:app __x0__ = (SharedDataBlockEventSet execution)</font>> color="black" fillcolor="white" style=filled]
  node18901 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18898 [shape=diamond, label=<<font color="black">(contains execution.HappensBefore (new [R, W]))</font>> color="black" fillcolor="white" style=filled]
  node18894 [shape=cds, label=<<font color="black">1:app __x3__ = (execution.ReadsBytesFrom execution R)</font>> color="black" fillcolor="white" style=filled]
  node18900 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:??? &quot;If there is a WriteSharedMemory or ReadModifyWriteSharedMemory event id:{V} that has id:{byteLocation} in its range such that the pairs ( id:{W} , id:{V} ) and ( id:{V} , id:{R} ) are in id:{execution} . [ [ HappensBefore ] ] , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">8:byteLocation = (+ byteLocation 1i)</td></tr>
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18899 -> node18900 [ color="black"]
  node18897 -> node18898 [ color="black"]
  node18902 -> node18889 [ color="black"]
  node18894 -> node18895 [ color="black"]
  node18901 -> node18892 [ color="black"]
  node18898 -> node18899 [label=<<font color="black">true</font>> color="black"]
  node18898 -> node18900 [label=<<font color="black">false</font>> color="black"]
  node18895 -> node18896 [ color="black"]
  node18888 -> node18890 [ color="black"]
  node18896 -> node18897 [label=<<font color="black">true</font>> color="black"]
  node18896 -> node18901 [label=<<font color="black">false</font>> color="black"]
  node18890 -> node18891 [ color="black"]
  node18900 -> node18896 [ color="black"]
  node18891 -> node18892 [ color="black"]
  node18892 -> node18893 [label=<<font color="black">true</font>> color="black"]
  node18892 -> node18902 [label=<<font color="black">false</font>> color="black"]
  node18893 -> node18894 [ color="black"]
}
