{
  app args = (GetArgument argumentsList 0i)
  [0] let coerced = (new [])
  [1] let __x0__ = args
  [1] let __x1__ = 0i
  [1] while (< __x1__ __x0__.length) {
    let arg = __x0__[__x1__]
    [2] app __x2__ = (ToNumber arg)
    [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [2] {}
    [2] let n = __x2__
    [3] append n -> coerced
    __x1__ = (+ __x1__ 1i)
  }
  [4] let highest = -Infinity
  [5] let __x3__ = coerced
  [5] let __x4__ = 0i
  [5] while (< __x4__ __x3__.length) {
    let number = __x3__[__x4__]
    [6] if (= number NaN) {
      app __x5__ = (WrapCompletion NaN)
      return __x5__
    } else [2] {}
    [7] if (&& (= number 0i) (= highest -0.0)) highest = 0i else [2] {}
    [8] if (< highest number) highest = number else [2] {}
    __x4__ = (+ __x4__ 1i)
  }
  [9] app __x6__ = (WrapCompletion highest)
  [9] return __x6__
}