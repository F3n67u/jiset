digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;0&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;Infinity&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=diamond, label=<<font color="black">(&lt; m 0i)</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=diamond, label=<<font color="black">(= m Infinity)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=diamond, label=<<font color="black">(= m NaN)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">app __x0__ = (ToString (- m))</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;NaN&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Otherwise , let id:{n} , id:{k} , and id:{s} be integers such that id:{k} &ge; 1 , 10 sup:{id:{k} - 1} &le; id:{s} &lt; 10 sup:{id:{k}} , the Number value for id:{s} &times; 10 sup:{id:{n} - id:{k}} is id:{m} , and id:{k} is as small as possible . Note that id:{k} is the number of digits in the decimal representation of id:{s} , that id:{s} is not divisible by 10 , and that the least significant digit of id:{s} is not necessarily uniquely determined by these criteria .&quot;</td></tr>
      <tr><td align="left">5:??? &quot;If id:{k} &le; id:{n} &le; 21 , return the String consisting of the code units of the id:{k} digits of the decimal representation of id:{s} ( in order , with no leading zeroes ) , followed by id:{n} - id:{k} occurrences of the code unit 0x0030 ( DIGIT ZERO ) .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;If 0 &lt; id:{n} &le; 21 , return the String consisting of the code units of the most significant id:{n} digits of the decimal representation of id:{s} , followed by the code unit 0x002E ( FULL STOP ) , followed by the code units of the remaining id:{k} - id:{n} digits of the decimal representation of id:{s} .&quot;</td></tr>
      <tr><td align="left">7:??? &quot;If - 6 &lt; id:{n} &le; 0 , return the String consisting of the code unit 0x0030 ( DIGIT ZERO ) , followed by the code unit 0x002E ( FULL STOP ) , followed by - id:{n} occurrences of the code unit 0x0030 ( DIGIT ZERO ) , followed by the code units of the id:{k} digits of the decimal representation of id:{s} .&quot;</td></tr>
      <tr><td align="left">8:??? &quot;Otherwise , if id:{k} = 1 , return the String consisting of the code unit of the single digit of id:{s} , followed by code unit 0x0065 ( LATIN SMALL LETTER E ) , followed by the code unit 0x002B ( PLUS SIGN ) or the code unit 0x002D ( HYPHEN - MINUS ) according to whether id:{n} - 1 is positive or negative , followed by the code units of the decimal representation of the integer abs ( id:{n} - 1 ) ( with no leading zeroes ) .&quot;</td></tr>
      <tr><td align="left">9:??? &quot;Return the String consisting of the code units of the most significant digit of the decimal representation of id:{s} , followed by code unit 0x002E ( FULL STOP ) , followed by the code units of the remaining id:{k} - 1 digits of the decimal representation of id:{s} , followed by code unit 0x0065 ( LATIN SMALL LETTER E ) , followed by code unit 0x002B ( PLUS SIGN ) or the code unit 0x002D ( HYPHEN - MINUS ) according to whether id:{n} - 1 is positive or negative , followed by the code units of the decimal representation of the integer abs ( id:{n} - 1 ) ( with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (+ &quot;-&quot; [! __x0__])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=diamond, label=<<font color="black">(|| (= m 0i) (= m -0.0))</font>> color="black" fillcolor="white" style=filled]
  node7 -> node8 [ color="black"]
  node9 -> node10 [label=<<font color="black">true</font>> color="black"]
  node9 -> node11 [label=<<font color="black">false</font>> color="black"]
  node6 -> node7 [label=<<font color="black">true</font>> color="black"]
  node6 -> node9 [label=<<font color="black">false</font>> color="black"]
  node0 -> node2 [ color="black"]
  node2 -> node3 [label=<<font color="black">true</font>> color="black"]
  node2 -> node4 [label=<<font color="black">false</font>> color="black"]
  node11 -> node1 [ color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [label=<<font color="black">true</font>> color="black"]
  node4 -> node6 [label=<<font color="black">false</font>> color="black"]
  node8 -> node9 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
}
