digraph {
  node10495 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return namespace</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10484 [shape=cds, label=<<font color="black">4:app __x0__ = (module.GetExportedNames module (new []))</font>> color="black" fillcolor="white" style=filled]
  node10486 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10491 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append name -&gt; unambiguousNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10494 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:namespace = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10490 [shape=diamond, label=<<font color="black">(= (typeof resolution) &quot;ResolvedBindingRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10487 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10480 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10493 [shape=cds, label=<<font color="black">9:app __x4__ = (ModuleNamespaceCreate module unambiguousNames)</font>> color="black" fillcolor="white" style=filled]
  node10489 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let resolution = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10488 [shape=cds, label=<<font color="black">7:app __x3__ = (module.ResolveExport module name (new []))</font>> color="black" fillcolor="white" style=filled]
  node10481 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10483 [shape=diamond, label=<<font color="black">(= namespace undefined)</font>> color="black" fillcolor="white" style=filled]
  node10485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let exportedNames = [? __x0__]</td></tr>
      <tr><td align="left">5:let unambiguousNames = (new [])</td></tr>
      <tr><td align="left">6:let __x1__ = exportedNames</td></tr>
      <tr><td align="left">6:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10482 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (! (= module.Status &quot;uninstantiated&quot;))</td></tr>
      <tr><td align="left">2:let namespace = module.Namespace</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10492 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10493 -> node10494 [ color="black"]
  node10486 -> node10487 [label=<<font color="black">true</font>> color="black"]
  node10486 -> node10493 [label=<<font color="black">false</font>> color="black"]
  node10483 -> node10484 [label=<<font color="black">true</font>> color="black"]
  node10483 -> node10495 [label=<<font color="black">false</font>> color="black"]
  node10484 -> node10485 [ color="black"]
  node10495 -> node10481 [ color="black"]
  node10482 -> node10483 [ color="black"]
  node10490 -> node10491 [label=<<font color="black">true</font>> color="black"]
  node10490 -> node10492 [label=<<font color="black">false</font>> color="black"]
  node10487 -> node10488 [ color="black"]
  node10492 -> node10486 [ color="black"]
  node10491 -> node10492 [ color="black"]
  node10489 -> node10490 [ color="black"]
  node10488 -> node10489 [ color="black"]
  node10494 -> node10495 [ color="black"]
  node10480 -> node10482 [ color="black"]
  node10485 -> node10486 [ color="black"]
}
