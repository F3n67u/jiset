digraph {
  node13918 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let intMaxLength = [? __x1__]</td></tr>
      <tr><td align="left">3:let stringLength = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13927 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let fillLen = (- intMaxLength stringLength)</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{truncatedStringFiller} be the String value consisting of repeated concatenations of id:{filler} truncated to length id:{fillLen} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13910 [shape=cds, label=<<font color="black">app O = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13914 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (= placement CONST_start) (= placement CONST_end))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13917 [shape=cds, label=<<font color="black">2:app __x1__ = (ToLength maxLength)</font>> color="black" fillcolor="white" style=filled]
  node13924 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let filler = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13928 [shape=diamond, label=<<font color="black">(= placement CONST_start)</font>> color="black" fillcolor="white" style=filled]
  node13911 [shape=cds, label=<<font color="black">app maxLength = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13908 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13930 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (+ S truncatedStringFiller)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13925 [shape=diamond, label=<<font color="black">(= filler &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13912 [shape=cds, label=<<font color="black">app fillString = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node13926 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return S</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13909 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13922 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let filler = &quot; &quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13915 [shape=cds, label=<<font color="black">1:app __x0__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13923 [shape=cds, label=<<font color="black">app __x2__ = (ToString fillString)</font>> color="black" fillcolor="white" style=filled]
  node13913 [shape=cds, label=<<font color="black">app placement = (GetArgument argumentsList 3i)</font>> color="black" fillcolor="white" style=filled]
  node13920 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return S</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13921 [shape=diamond, label=<<font color="black">(= fillString undefined)</font>> color="black" fillcolor="white" style=filled]
  node13916 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13919 [shape=diamond, label=<<font color="black">(! (&lt; stringLength intMaxLength))</font>> color="black" fillcolor="white" style=filled]
  node13929 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (+ truncatedStringFiller S)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13925 -> node13926 [label=<<font color="black">true</font>> color="black"]
  node13925 -> node13927 [label=<<font color="black">false</font>> color="black"]
  node13930 -> node13909 [ color="black"]
  node13920 -> node13921 [ color="black"]
  node13923 -> node13924 [ color="black"]
  node13926 -> node13927 [ color="black"]
  node13911 -> node13912 [ color="black"]
  node13929 -> node13909 [ color="black"]
  node13924 -> node13925 [ color="black"]
  node13928 -> node13929 [label=<<font color="black">true</font>> color="black"]
  node13928 -> node13930 [label=<<font color="black">false</font>> color="black"]
  node13917 -> node13918 [ color="black"]
  node13912 -> node13913 [ color="black"]
  node13922 -> node13925 [ color="black"]
  node13908 -> node13910 [ color="black"]
  node13918 -> node13919 [ color="black"]
  node13921 -> node13922 [label=<<font color="black">true</font>> color="black"]
  node13921 -> node13923 [label=<<font color="black">false</font>> color="black"]
  node13919 -> node13920 [label=<<font color="black">true</font>> color="black"]
  node13919 -> node13921 [label=<<font color="black">false</font>> color="black"]
  node13915 -> node13916 [ color="black"]
  node13927 -> node13928 [ color="black"]
  node13916 -> node13917 [ color="black"]
  node13913 -> node13914 [ color="black"]
  node13914 -> node13915 [ color="black"]
  node13910 -> node13911 [ color="black"]
}
