digraph {
  node4724 [shape=cds, label=<<font color="black">6:app __x6__ = (GetThisEnvironment)</font>> color="black" fillcolor="white" style=filled]
  node4718 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let argList = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4712 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let newTarget = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4725 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let thisER = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4721 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4717 [shape=cds, label=<<font color="black">3:access __x3__ = (Arguments &quot;ArgumentListEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4709 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4716 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let func = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4726 [shape=cds, label=<<font color="black">7:app __x7__ = (thisER.BindThisValue thisER result)</font>> color="black" fillcolor="white" style=filled]
  node4720 [shape=diamond, label=<<font color="black">(= __x4__ false)</font>> color="black" fillcolor="white" style=filled]
  node4722 [shape=cds, label=<<font color="black">5:app __x5__ = (Construct func argList newTarget)</font>> color="black" fillcolor="white" style=filled]
  node4727 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4719 [shape=cds, label=<<font color="black">4:app __x4__ = (IsConstructor func)</font>> color="black" fillcolor="white" style=filled]
  node4713 [shape=cds, label=<<font color="black">1:app __x1__ = (Type newTarget)</font>> color="black" fillcolor="white" style=filled]
  node4723 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let result = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4714 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4711 [shape=cds, label=<<font color="black">0:app __x0__ = (GetNewTarget)</font>> color="black" fillcolor="white" style=filled]
  node4710 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4715 [shape=cds, label=<<font color="black">2:app __x2__ = (GetSuperConstructor)</font>> color="black" fillcolor="white" style=filled]
  node4718 -> node4719 [ color="black"]
  node4725 -> node4726 [ color="black"]
  node4715 -> node4716 [ color="black"]
  node4727 -> node4710 [ color="black"]
  node4721 -> node4722 [ color="black"]
  node4722 -> node4723 [ color="black"]
  node4709 -> node4711 [ color="black"]
  node4719 -> node4720 [ color="black"]
  node4723 -> node4724 [ color="black"]
  node4720 -> node4721 [label=<<font color="black">true</font>> color="black"]
  node4720 -> node4722 [label=<<font color="black">false</font>> color="black"]
  node4712 -> node4713 [ color="black"]
  node4714 -> node4715 [ color="black"]
  node4713 -> node4714 [ color="black"]
  node4726 -> node4727 [ color="black"]
  node4724 -> node4725 [ color="black"]
  node4716 -> node4717 [ color="black"]
  node4711 -> node4712 [ color="black"]
  node4717 -> node4718 [ color="black"]
}
