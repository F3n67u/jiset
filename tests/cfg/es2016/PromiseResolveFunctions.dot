digraph {
  node15791 [shape=cds, label=<<font color="black">9:app __x3__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node15787 [shape=cds, label=<<font color="black">7:app __x1__ = (RejectPromise promise selfResolutionError)</font>> color="black" fillcolor="white" style=filled]
  node15802 [shape=cds, label=<<font color="black">15:app __x8__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node15779 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let then = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15792 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15788 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15783 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15789 [shape=cds, label=<<font color="black">8:app __x2__ = (Type resolution)</font>> color="black" fillcolor="white" style=filled]
  node15778 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15782 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15785 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node15790 [shape=diamond, label=<<font color="black">(! (= __x2__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15781 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node15786 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let selfResolutionError = ??? &quot;TypeError&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15795 [shape=cds, label=<<font color="black">11:app __x5__ = (IsAbruptCompletion then)</font>> color="black" fillcolor="white" style=filled]
  node15780 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promise = F.Promise</td></tr>
      <tr><td align="left">2:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15784 [shape=cds, label=<<font color="black">5:app __x0__ = (SameValue resolution promise)</font>> color="black" fillcolor="white" style=filled]
  node15799 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let thenAction = then.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15798 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15793 [shape=cds, label=<<font color="black">10:app __x4__ = (Get resolution &quot;then&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15803 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15804 [shape=cds, label=<<font color="black">16:app __x9__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseResolveThenableJob (new [promise, resolution, thenAction]))</font>> color="black" fillcolor="white" style=filled]
  node15797 [shape=cds, label=<<font color="black">12:app __x6__ = (RejectPromise promise then.Value)</font>> color="black" fillcolor="white" style=filled]
  node15805 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:__x9__</td></tr>
      <tr><td align="left">17:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15796 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node15801 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node15800 [shape=cds, label=<<font color="black">14:app __x7__ = (IsCallable thenAction)</font>> color="black" fillcolor="white" style=filled]
  node15800 -> node15801 [ color="black"]
  node15788 -> node15789 [ color="black"]
  node15786 -> node15787 [ color="black"]
  node15796 -> node15797 [label=<<font color="black">true</font>> color="black"]
  node15796 -> node15799 [label=<<font color="black">false</font>> color="black"]
  node15789 -> node15790 [ color="black"]
  node15805 -> node15779 [ color="black"]
  node15785 -> node15786 [label=<<font color="black">true</font>> color="black"]
  node15785 -> node15789 [label=<<font color="black">false</font>> color="black"]
  node15781 -> node15782 [label=<<font color="black">true</font>> color="black"]
  node15781 -> node15783 [label=<<font color="black">false</font>> color="black"]
  node15798 -> node15799 [ color="black"]
  node15797 -> node15798 [ color="black"]
  node15787 -> node15788 [ color="black"]
  node15783 -> node15784 [ color="black"]
  node15794 -> node15795 [ color="black"]
  node15804 -> node15805 [ color="black"]
  node15803 -> node15804 [ color="black"]
  node15778 -> node15780 [ color="black"]
  node15799 -> node15800 [ color="black"]
  node15795 -> node15796 [ color="black"]
  node15784 -> node15785 [ color="black"]
  node15780 -> node15781 [ color="black"]
  node15790 -> node15791 [label=<<font color="black">true</font>> color="black"]
  node15790 -> node15793 [label=<<font color="black">false</font>> color="black"]
  node15792 -> node15793 [ color="black"]
  node15801 -> node15802 [label=<<font color="black">true</font>> color="black"]
  node15801 -> node15804 [label=<<font color="black">false</font>> color="black"]
  node15782 -> node15783 [ color="black"]
  node15793 -> node15794 [ color="black"]
  node15802 -> node15803 [ color="black"]
  node15791 -> node15792 [ color="black"]
}
