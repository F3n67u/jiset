digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;Let id:{ec} be the topmost execution context on the execution context stack whose Function component ' s [ [ ScriptOrModule ] ] component is not value:{null} .&quot;</td></tr>
      <tr><td align="left">2:??? &quot;If such an execution context exists , return id:{ec} ' s Function component ' s [ [ ScriptOrModule ] ] slot ' s value .&quot;</td></tr>
      <tr><td align="left">3:??? &quot;Otherwise , let id:{ec} be the running execution context .&quot;</td></tr>
      <tr><td align="left">4:assert (! (= ec.ScriptOrModule null))</td></tr>
      <tr><td align="left">5:return ec.ScriptOrModule</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node0 -> node2 [ color="black"]
  node2 -> node3 [label=<<font color="black">true</font>> color="black"]
  node2 -> node4 [label=<<font color="black">false</font>> color="black"]
  node3 -> node4 [ color="black"]
  node4 -> node1 [ color="black"]
}
