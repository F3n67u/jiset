digraph {
  node15596 [shape=diamond, label=<<font color="black">(&lt; relativeStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node15623 [shape=diamond, label=<<font color="black">(&lt; new.ArrayBufferByteLength newLen)</font>> color="black" fillcolor="white" style=filled]
  node15627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x12__</td></tr>
      <tr><td align="left">19:return new</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15619 [shape=diamond, label=<<font color="black">(= __x11__ false)</font>> color="black" fillcolor="white" style=filled]
  node15614 [shape=cds, label=<<font color="black">11:app __x10__ = (Construct ctor (new [newLen]))</font>> color="black" fillcolor="white" style=filled]
  node15607 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15626 [shape=cds, label=<<font color="black">18:app __x12__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)</font>> color="black" fillcolor="white" style=filled]
  node15615 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let new = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15625 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let fromBuf = O.ArrayBufferData</td></tr>
      <tr><td align="left">17:let toBuf = new.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15589 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15621 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData O.ArrayBufferData)</font>> color="black" fillcolor="white" style=filled]
  node15597 [shape=cds, label=<<font color="black">app __x3__ = (max (+ len relativeStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node15600 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15611 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let newLen = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15590 [shape=cds, label=<<font color="black">3:app __x1__ = (IsSharedArrayBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node15605 [shape=diamond, label=<<font color="black">(&lt; relativeEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node15601 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node15586 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15618 [shape=cds, label=<<font color="black">13:app __x11__ = (IsSharedArrayBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node15591 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node15610 [shape=cds, label=<<font color="black">9:app __x8__ = (max (- final first) 0i)</font>> color="black" fillcolor="white" style=filled]
  node15595 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let relativeStart = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15616 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node15606 [shape=cds, label=<<font color="black">app __x6__ = (max (+ len relativeEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node15599 [shape=cds, label=<<font color="black">app __x4__ = (min relativeStart len)</font>> color="black" fillcolor="white" style=filled]
  node15584 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15582 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15602 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15587 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15592 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15594 [shape=cds, label=<<font color="black">5:app __x2__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node15609 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15620 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15588 [shape=diamond, label=<<font color="black">(= O.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node15583 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15581 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15608 [shape=cds, label=<<font color="black">app __x7__ = (min relativeEnd len)</font>> color="black" fillcolor="white" style=filled]
  node15603 [shape=cds, label=<<font color="black">app __x5__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node15598 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15613 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let ctor = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15612 [shape=cds, label=<<font color="black">10:app __x9__ = (SpeciesConstructor O INTRINSIC_SharedArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node15580 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15593 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let len = O.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15604 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15585 [shape=cds, label=<<font color="black">1:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node15622 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15617 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15626 -> node15627 [ color="black"]
  node15584 -> node15585 [ color="black"]
  node15603 -> node15604 [ color="black"]
  node15600 -> node15601 [ color="black"]
  node15595 -> node15596 [ color="black"]
  node15623 -> node15624 [label=<<font color="black">true</font>> color="black"]
  node15623 -> node15625 [label=<<font color="black">false</font>> color="black"]
  node15596 -> node15597 [label=<<font color="black">true</font>> color="black"]
  node15596 -> node15599 [label=<<font color="black">false</font>> color="black"]
  node15625 -> node15626 [ color="black"]
  node15593 -> node15594 [ color="black"]
  node15591 -> node15592 [label=<<font color="black">true</font>> color="black"]
  node15591 -> node15593 [label=<<font color="black">false</font>> color="black"]
  node15605 -> node15606 [label=<<font color="black">true</font>> color="black"]
  node15605 -> node15608 [label=<<font color="black">false</font>> color="black"]
  node15604 -> node15605 [ color="black"]
  node15610 -> node15611 [ color="black"]
  node15602 -> node15605 [ color="black"]
  node15627 -> node15581 [ color="black"]
  node15622 -> node15623 [ color="black"]
  node15598 -> node15601 [ color="black"]
  node15614 -> node15615 [ color="black"]
  node15619 -> node15620 [label=<<font color="black">true</font>> color="black"]
  node15619 -> node15621 [label=<<font color="black">false</font>> color="black"]
  node15601 -> node15602 [label=<<font color="black">true</font>> color="black"]
  node15601 -> node15603 [label=<<font color="black">false</font>> color="black"]
  node15582 -> node15583 [ color="black"]
  node15586 -> node15587 [label=<<font color="black">true</font>> color="black"]
  node15586 -> node15588 [label=<<font color="black">false</font>> color="black"]
  node15615 -> node15616 [ color="black"]
  node15599 -> node15600 [ color="black"]
  node15583 -> node15584 [ color="black"]
  node15606 -> node15607 [ color="black"]
  node15612 -> node15613 [ color="black"]
  node15621 -> node15622 [label=<<font color="black">true</font>> color="black"]
  node15621 -> node15623 [label=<<font color="black">false</font>> color="black"]
  node15608 -> node15609 [ color="black"]
  node15618 -> node15619 [ color="black"]
  node15617 -> node15618 [ color="black"]
  node15590 -> node15591 [ color="black"]
  node15594 -> node15595 [ color="black"]
  node15611 -> node15612 [ color="black"]
  node15620 -> node15621 [ color="black"]
  node15597 -> node15598 [ color="black"]
  node15624 -> node15625 [ color="black"]
  node15585 -> node15586 [ color="black"]
  node15588 -> node15589 [label=<<font color="black">true</font>> color="black"]
  node15588 -> node15590 [label=<<font color="black">false</font>> color="black"]
  node15609 -> node15610 [ color="black"]
  node15616 -> node15617 [label=<<font color="black">true</font>> color="black"]
  node15616 -> node15618 [label=<<font color="black">false</font>> color="black"]
  node15580 -> node15582 [ color="black"]
  node15589 -> node15590 [ color="black"]
  node15613 -> node15614 [ color="black"]
  node15592 -> node15593 [ color="black"]
  node15607 -> node15610 [ color="black"]
  node15587 -> node15588 [ color="black"]
}
