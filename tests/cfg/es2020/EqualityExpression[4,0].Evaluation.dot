digraph {
  node5621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let rref = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5620 [shape=cds, label=<<font color="black">2:access __x2__ = (RelationalExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5616 [shape=cds, label=<<font color="black">0:access __x0__ = (EqualityExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5619 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lval = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5624 [shape=cds, label=<<font color="black">4:app __x4__ = (StrictEqualityComparison rval lval)</font>> color="black" fillcolor="white" style=filled]
  node5628 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5623 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let rval = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5618 [shape=cds, label=<<font color="black">1:app __x1__ = (GetValue lref)</font>> color="black" fillcolor="white" style=filled]
  node5625 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let r = __x4__</td></tr>
      <tr><td align="left">5:assert (&amp;&amp; (is-completion r) (= r.Type CONST_normal))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5614 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5622 [shape=cds, label=<<font color="black">3:app __x3__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5617 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let lref = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5626 [shape=diamond, label=<<font color="black">(= r.Value true)</font>> color="black" fillcolor="white" style=filled]
  node5615 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5621 -> node5622 [ color="black"]
  node5618 -> node5619 [ color="black"]
  node5619 -> node5620 [ color="black"]
  node5623 -> node5624 [ color="black"]
  node5616 -> node5617 [ color="black"]
  node5628 -> node5615 [ color="black"]
  node5627 -> node5615 [ color="black"]
  node5626 -> node5627 [label=<<font color="black">true</font>> color="black"]
  node5626 -> node5628 [label=<<font color="black">false</font>> color="black"]
  node5624 -> node5625 [ color="black"]
  node5625 -> node5626 [ color="black"]
  node5620 -> node5621 [ color="black"]
  node5617 -> node5618 [ color="black"]
  node5622 -> node5623 [ color="black"]
  node5614 -> node5616 [ color="black"]
}
