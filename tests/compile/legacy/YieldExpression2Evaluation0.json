["Let", {
  "id": "generatorKind"
}, "be", "!", "GetGeneratorKind", "(", ")", ".", {
  "k": 0
}, "Let", {
  "id": "exprRef"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "AssignmentExpression"
}, ".", {
  "k": 1
}, "Let", {
  "id": "value"
}, "be", "?", "GetValue", "(", {
  "id": "exprRef"
}, ")", ".", {
  "k": 2
}, "Let", {
  "id": "iteratorRecord"
}, "be", "?", "GetIterator", "(", {
  "id": "value"
}, ",", {
  "id": "generatorKind"
}, ")", ".", {
  "k": 3
}, "Let", {
  "id": "iterator"
}, "be", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Iterator", "]", "]", ".", {
  "k": 4
}, "Let", {
  "id": "received"
}, "be", "NormalCompletion", "(", {
  "value": "undefined"
}, ")", ".", {
  "k": 5
}, "Repeat", ",", {
  "in": null
}, "If", {
  "id": "received"
}, ".", "[", "[", "Type", "]", "]", "is", {
  "const": "normal"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "innerResult"
}, "be", "?", "Call", "(", {
  "id": "iteratorRecord"
}, ".", "[", "[", "NextMethod", "]", "]", ",", {
  "id": "iteratorRecord"
}, ".", "[", "[", "Iterator", "]", "]", ",", "«", {
  "id": "received"
}, ".", "[", "[", "Value", "]", "]", "»", ")", ".", "If", {
  "id": "generatorKind"
}, "is", {
  "const": "async"
}, ",", "then", "set", {
  "id": "innerResult"
}, "to", "?", "Await", "(", {
  "id": "innerResult"
}, ")", ".", "If", "Type", "(", {
  "id": "innerResult"
}, ")", "is", "not", "Object", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", "Let", {
  "id": "done"
}, "be", "?", "IteratorComplete", "(", {
  "id": "innerResult"
}, ")", ".", "If", {
  "id": "done"
}, "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "Return", "?", "IteratorValue", "(", {
  "id": "innerResult"
}, ")", ".", {
  "out": null
}, "If", {
  "id": "generatorKind"
}, "is", {
  "const": "async"
}, ",", "then", "set", {
  "id": "received"
}, "to", "AsyncGeneratorYield", "(", "?", "IteratorValue", "(", {
  "id": "innerResult"
}, ")", ")", ".", "Else", ",", "set", {
  "id": "received"
}, "to", "GeneratorYield", "(", {
  "id": "innerResult"
}, ")", ".", {
  "out": null
}, "Else", "if", {
  "id": "received"
}, ".", "[", "[", "Type", "]", "]", "is", {
  "const": "throw"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "throw"
}, "be", "?", "GetMethod", "(", {
  "id": "iterator"
}, ",", {
  "value": "\"throw\""
}, ")", ".", "If", {
  "id": "throw"
}, "is", "not", {
  "value": "undefined"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "innerResult"
}, "be", "?", "Call", "(", {
  "id": "throw"
}, ",", {
  "id": "iterator"
}, ",", "«", {
  "id": "received"
}, ".", "[", "[", "Value", "]", "]", "»", ")", ".", "If", {
  "id": "generatorKind"
}, "is", {
  "const": "async"
}, ",", "then", "set", {
  "id": "innerResult"
}, "to", "?", "Await", "(", {
  "id": "innerResult"
}, ")", ".", "NOTE", ":", "Exceptions", "from", "the", "inner", "iterator", {
  "code": "throw"
}, "method", "are", "propagated", ".", "Normal", "completions", "from", "an", "inner", {
  "code": "throw"
}, "method", "are", "processed", "similarly", "to", "an", "inner", {
  "code": "next"
}, ".", "If", "Type", "(", {
  "id": "innerResult"
}, ")", "is", "not", "Object", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", "Let", {
  "id": "done"
}, "be", "?", "IteratorComplete", "(", {
  "id": "innerResult"
}, ")", ".", "If", {
  "id": "done"
}, "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "Return", "?", "IteratorValue", "(", {
  "id": "innerResult"
}, ")", ".", {
  "out": null
}, "If", {
  "id": "generatorKind"
}, "is", {
  "const": "async"
}, ",", "then", "set", {
  "id": "received"
}, "to", "AsyncGeneratorYield", "(", "?", "IteratorValue", "(", {
  "id": "innerResult"
}, ")", ")", ".", "Else", ",", "set", {
  "id": "received"
}, "to", "GeneratorYield", "(", {
  "id": "innerResult"
}, ")", ".", {
  "out": null
}, "Else", ",", {
  "in": null
}, "NOTE", ":", "If", {
  "id": "iterator"
}, "does", "not", "have", "a", {
  "code": "throw"
}, "method", ",", "this", "throw", "is", "going", "to", "terminate", "the", {
  "code": "yield*"
}, "loop", ".", "But", "first", "we", "need", "to", "give", {
  "id": "iterator"
}, "a", "chance", "to", "clean", "up", ".", "Let", {
  "id": "closeCompletion"
}, "be", "Completion", "{", "[", "[", "Type", "]", "]", ":", {
  "const": "normal"
}, ",", "[", "[", "Value", "]", "]", ":", {
  "const": "empty"
}, ",", "[", "[", "Target", "]", "]", ":", {
  "const": "empty"
}, "}", ".", "If", {
  "id": "generatorKind"
}, "is", {
  "const": "async"
}, ",", "perform", "?", "AsyncIteratorClose", "(", {
  "id": "iteratorRecord"
}, ",", {
  "id": "closeCompletion"
}, ")", ".", "Else", ",", "perform", "?", "IteratorClose", "(", {
  "id": "iteratorRecord"
}, ",", {
  "id": "closeCompletion"
}, ")", ".", "NOTE", ":", "The", "next", "step", "throws", "a", {
  "value": "TypeError"
}, "to", "indicate", "that", "there", "was", "a", {
  "code": "yield*"
}, "protocol", "violation", ":", {
  "id": "iterator"
}, "does", "not", "have", "a", {
  "code": "throw"
}, "method", ".", "Throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "out": null
}, {
  "out": null
}, "Else", ",", {
  "in": null
}, "Assert", ":", {
  "id": "received"
}, ".", "[", "[", "Type", "]", "]", "is", {
  "const": "return"
}, ".", "Let", {
  "id": "return"
}, "be", "?", "GetMethod", "(", {
  "id": "iterator"
}, ",", {
  "value": "\"return\""
}, ")", ".", "If", {
  "id": "return"
}, "is", {
  "value": "undefined"
}, ",", "then", {
  "in": null
}, "If", {
  "id": "generatorKind"
}, "is", {
  "const": "async"
}, ",", "then", "set", {
  "id": "received"
}, ".", "[", "[", "Value", "]", "]", "to", "?", "Await", "(", {
  "id": "received"
}, ".", "[", "[", "Value", "]", "]", ")", ".", "Return", "Completion", "(", {
  "id": "received"
}, ")", ".", {
  "out": null
}, "Let", {
  "id": "innerReturnResult"
}, "be", "?", "Call", "(", {
  "id": "return"
}, ",", {
  "id": "iterator"
}, ",", "«", {
  "id": "received"
}, ".", "[", "[", "Value", "]", "]", "»", ")", ".", "If", {
  "id": "generatorKind"
}, "is", {
  "const": "async"
}, ",", "then", "set", {
  "id": "innerReturnResult"
}, "to", "?", "Await", "(", {
  "id": "innerReturnResult"
}, ")", ".", "If", "Type", "(", {
  "id": "innerReturnResult"
}, ")", "is", "not", "Object", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", "Let", {
  "id": "done"
}, "be", "?", "IteratorComplete", "(", {
  "id": "innerReturnResult"
}, ")", ".", "If", {
  "id": "done"
}, "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "value"
}, "be", "?", "IteratorValue", "(", {
  "id": "innerReturnResult"
}, ")", ".", "Return", "Completion", "{", "[", "[", "Type", "]", "]", ":", {
  "const": "return"
}, ",", "[", "[", "Value", "]", "]", ":", {
  "id": "value"
}, ",", "[", "[", "Target", "]", "]", ":", {
  "const": "empty"
}, "}", ".", {
  "out": null
}, "If", {
  "id": "generatorKind"
}, "is", {
  "const": "async"
}, ",", "then", "set", {
  "id": "received"
}, "to", "AsyncGeneratorYield", "(", "?", "IteratorValue", "(", {
  "id": "innerReturnResult"
}, ")", ")", ".", "Else", ",", "set", {
  "id": "received"
}, "to", "GeneratorYield", "(", {
  "id": "innerReturnResult"
}, ")", ".", {
  "out": null
}, {
  "out": null
}, {
  "k": 6
}]