<algorithm>
  <step-list>
    <step>Let <id>oldEnv</id> be the running execution context 's LexicalEnvironment.</step>
    <step>Let <id>catchEnv</id> be NewDeclarativeEnvironment ( <id>oldEnv</id> ).</step>
    <step>Let <id>catchEnvRec</id> be <id>catchEnv</id> 's EnvironmentRecord .</step>
    <step>For each element <id>argName</id> of the BoundNames of CatchParameter , do     <step-list>
      <step>Perform ! <id>catchEnvRec</id> .CreateMutableBinding( <id>argName</id> , <value>false</value> ).</step>
    </step-list></step>
    <step>Set the running execution context 's LexicalEnvironment to <id>catchEnv</id> .</step>
    <step>Let <id>status</id> be the result of performing BindingInitialization for CatchParameter passing <id>thrownValue</id> and <id>catchEnv</id> as arguments.</step>
    <step>If <id>status</id> is an abrupt completion , then     <step-list>
      <step>Set the running execution context 's LexicalEnvironment to <id>oldEnv</id> .</step>
      <step>Return Completion ( <id>status</id> ).</step>
    </step-list></step>
    <step>Let <id>B</id> be the result of evaluating Block .</step>
    <step>Set the running execution context 's LexicalEnvironment to <id>oldEnv</id> .</step>
    <step>Return Completion ( <id>B</id> ).</step>
  </step-list>
</algorithm>