digraph {
  node5733 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x7__]</td></tr>
      <tr><td align="left">9:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5718 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5727 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let rval = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let rval = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rref = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5726 [shape=cds, label=<<font color="black">4:access __x4__ = (AssignmentExpression &quot;NamedEvaluation&quot; __x3__)</font>> color="black" fillcolor="white" style=filled]
  node5737 [shape=cds, label=<<font color="black">12:app __x9__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5722 [shape=cds, label=<<font color="black">5:app __x1__ = (IsAnonymousFunctionDefinition AssignmentExpression)</font>> color="black" fillcolor="white" style=filled]
  node5720 [shape=cds, label=<<font color="black">1:access __x0__ = (LeftHandSideExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5735 [shape=cds, label=<<font color="black">11:access __x8__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5730 [shape=cds, label=<<font color="black">7:app __x6__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5725 [shape=cds, label=<<font color="black">4:app __x3__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5721 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5731 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rval = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5724 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x1__ true) (= __x2__ true))</font>> color="black" fillcolor="white" style=filled]
  node5739 [shape=cds, label=<<font color="black">13:access __x10__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; rval)</font>> color="black" fillcolor="white" style=filled]
  node5728 [shape=cds, label=<<font color="black">6:access __x5__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5732 [shape=cds, label=<<font color="black">8:app __x7__ = (PutValue lref rval)</font>> color="black" fillcolor="white" style=filled]
  node5740 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x10__]</td></tr>
      <tr><td align="left">14:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5723 [shape=cds, label=<<font color="black">5:access __x2__ = (LeftHandSideExpression &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5734 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let assignmentPattern = (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5719 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5736 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rref = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5717 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5730 -> node5731 [ color="black"]
  node5734 -> node5735 [ color="black"]
  node5740 -> node5718 [ color="black"]
  node5737 -> node5738 [ color="black"]
  node5719 -> node5720 [label=<<font color="black">true</font>> color="black"]
  node5719 -> node5734 [label=<<font color="black">false</font>> color="black"]
  node5736 -> node5737 [ color="black"]
  node5733 -> node5734 [ color="black"]
  node5735 -> node5736 [ color="black"]
  node5725 -> node5726 [ color="black"]
  node5721 -> node5722 [ color="black"]
  node5731 -> node5732 [ color="black"]
  node5722 -> node5723 [ color="black"]
  node5723 -> node5724 [ color="black"]
  node5726 -> node5727 [ color="black"]
  node5729 -> node5730 [ color="black"]
  node5732 -> node5733 [ color="black"]
  node5717 -> node5719 [ color="black"]
  node5727 -> node5732 [ color="black"]
  node5720 -> node5721 [ color="black"]
  node5738 -> node5739 [ color="black"]
  node5739 -> node5740 [ color="black"]
  node5728 -> node5729 [ color="black"]
  node5724 -> node5725 [label=<<font color="black">true</font>> color="black"]
  node5724 -> node5728 [label=<<font color="black">false</font>> color="black"]
}
