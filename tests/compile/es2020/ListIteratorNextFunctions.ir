{
  [0] let O = this
  [1] app __x0__ = (Type O)
  [1] assert (= __x0__ Object)
  [2] assert (! (= O.IteratedList absent))
  [3] let list = O.IteratedList
  [4] let index = O.ListNextIndex
  [5] let len = list.length
  [6] if (! (< index len)) {
    [7] app __x1__ = (CreateIterResultObject undefined true)
    [7] app __x2__ = (WrapCompletion __x1__)
    [7] return __x2__
  } else [1] {}
  [8] O.ListNextIndex = (+ index 1i)
  [9] app __x3__ = (CreateIterResultObject list[index] false)
  [9] app __x4__ = (WrapCompletion __x3__)
  [9] return __x4__
}