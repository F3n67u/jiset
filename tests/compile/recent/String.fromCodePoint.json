[{
  "tokens": ["Let", {
    "id": "result"
  }, "be", "the", "empty", "String", "."]
}, {
  "tokens": ["For", "each", "element", {
    "id": "next"
  }, "of", {
    "id": "codePoints"
  }, ",", "do"]
}, {
  "tokens": ["Let", {
    "id": "nextCP"
  }, "be", "?", "ToNumber", "(", {
    "id": "next"
  }, ")", "."]
}, {
  "tokens": ["If", "!", "IsIntegralNumber", "(", {
    "id": "nextCP"
  }, ")", "is", {
    "value": "false"
  }, ",", "throw", "a", {
    "value": "RangeError"
  }, "exception", "."]
}, {
  "tokens": ["If", "ℝ", "(", {
    "id": "nextCP"
  }, ")", "<", "0", "or", "ℝ", "(", {
    "id": "nextCP"
  }, ")", ">", "0x10FFFF", ",", "throw", "a", {
    "value": "RangeError"
  }, "exception", "."]
}, {
  "tokens": ["Set", {
    "id": "result"
  }, "to", "the", "string", "-", "concatenation", "of", {
    "id": "result"
  }, "and", "!", "UTF16EncodeCodePoint", "(", "ℝ", "(", {
    "id": "nextCP"
  }, ")", ")", "."]
}, {
  "tokens": ["Assert", ":", "If", {
    "id": "codePoints"
  }, "is", "empty", ",", "then", {
    "id": "result"
  }, "is", "the", "empty", "String", "."]
}, {
  "tokens": ["Return", {
    "id": "result"
  }, "."]
}]