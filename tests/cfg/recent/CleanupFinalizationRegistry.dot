digraph {
  node1952 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1954 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let callback = finalizationRegistry.CleanupCallback</td></tr>
      <tr><td align="left">2:??? &quot;While id:{finalizationRegistry} . [ [ Cells ] ] contains a Record id:{cell} such that id:{cell} . [ [ WeakRefTarget ] ] is const:{empty} , an implementation may perform the following steps : in:{} out:{}&quot;</td></tr>
      <tr><td align="left">6:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1953 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1952 -> node1954 [ color="black"]
  node1954 -> node1953 [ color="black"]
}
