digraph {
  node17684 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor target)</font>> color="black" fillcolor="white" style=filled]
  node17688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = target</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17683 [shape=cds, label=<<font color="black">app newTarget = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17687 [shape=diamond, label=<<font color="black">(= newTarget absent)</font>> color="black" fillcolor="white" style=filled]
  node17692 [shape=cds, label=<<font color="black">3:app __x2__ = (CreateListFromArrayLike argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node17695 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17686 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17682 [shape=cds, label=<<font color="black">app argumentsList = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17679 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17689 [shape=cds, label=<<font color="black">app __x1__ = (IsConstructor newTarget)</font>> color="black" fillcolor="white" style=filled]
  node17685 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node17681 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17693 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let args = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17680 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17690 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node17694 [shape=cds, label=<<font color="black">4:app __x3__ = (Construct target args newTarget)</font>> color="black" fillcolor="white" style=filled]
  node17691 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17687 -> node17688 [label=<<font color="black">true</font>> color="black"]
  node17687 -> node17689 [label=<<font color="black">false</font>> color="black"]
  node17689 -> node17690 [ color="black"]
  node17682 -> node17683 [ color="black"]
  node17691 -> node17692 [ color="black"]
  node17690 -> node17691 [label=<<font color="black">true</font>> color="black"]
  node17690 -> node17692 [label=<<font color="black">false</font>> color="black"]
  node17686 -> node17687 [ color="black"]
  node17693 -> node17694 [ color="black"]
  node17685 -> node17686 [label=<<font color="black">true</font>> color="black"]
  node17685 -> node17687 [label=<<font color="black">false</font>> color="black"]
  node17683 -> node17684 [ color="black"]
  node17684 -> node17685 [ color="black"]
  node17695 -> node17680 [ color="black"]
  node17681 -> node17682 [ color="black"]
  node17679 -> node17681 [ color="black"]
  node17688 -> node17692 [ color="black"]
  node17692 -> node17693 [ color="black"]
  node17694 -> node17695 [ color="black"]
}
