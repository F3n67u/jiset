digraph {
  node17481 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17477 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17478 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17482 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17480 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17483 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17479 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17484 [shape=cds, label=<<font color="black">2:app __x1__ = (PromiseResolve C x)</font>> color="black" fillcolor="white" style=filled]
  node17482 -> node17483 [label=<<font color="black">true</font>> color="black"]
  node17482 -> node17484 [label=<<font color="black">false</font>> color="black"]
  node17484 -> node17485 [ color="black"]
  node17485 -> node17478 [ color="black"]
  node17481 -> node17482 [ color="black"]
  node17477 -> node17479 [ color="black"]
  node17480 -> node17481 [ color="black"]
  node17479 -> node17480 [ color="black"]
  node17483 -> node17484 [ color="black"]
}
