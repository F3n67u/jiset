digraph {
  node13110 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13098 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13102 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let numPos = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13099 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13112 [shape=cds, label=<<font color="black">7:app __x5__ = (max pos 0i)</font>> color="black" fillcolor="white" style=filled]
  node13108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13096 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13107 [shape=diamond, label=<<font color="black">(= numPos NaN)</font>> color="black" fillcolor="white" style=filled]
  node13095 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13113 [shape=cds, label=<<font color="black">7:app __x6__ = (min __x5__ len)</font>> color="black" fillcolor="white" style=filled]
  node13104 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let searchStr = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13109 [shape=cds, label=<<font color="black">app __x4__ = (ToInteger numPos)</font>> color="black" fillcolor="white" style=filled]
  node13103 [shape=cds, label=<<font color="black">2:app __x2__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node13105 [shape=cds, label=<<font color="black">3:app __x3__ = (ToNumber position)</font>> color="black" fillcolor="white" style=filled]
  node13114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let start = __x6__</td></tr>
      <tr><td align="left">8:let searchLen = searchStr.length</td></tr>
      <tr><td align="left">9:??? &quot;Return the largest possible nonnegative integer id:{k} not larger than id:{start} such that id:{k} + id:{searchLen} is not greater than id:{len} , and for all nonnegative integers id:{j} less than id:{searchLen} , the code unit at index id:{k} + id:{j} within id:{S} is the same as the code unit at index id:{j} within id:{searchStr} ; but if there is no such integer id:{k} , return the value - 1 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13097 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13101 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13111 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13105 -> node13106 [ color="black"]
  node13111 -> node13112 [ color="black"]
  node13097 -> node13098 [ color="black"]
  node13103 -> node13104 [ color="black"]
  node13112 -> node13113 [ color="black"]
  node13098 -> node13099 [ color="black"]
  node13104 -> node13105 [ color="black"]
  node13102 -> node13103 [ color="black"]
  node13099 -> node13100 [ color="black"]
  node13095 -> node13097 [ color="black"]
  node13101 -> node13102 [ color="black"]
  node13109 -> node13110 [ color="black"]
  node13108 -> node13111 [ color="black"]
  node13107 -> node13108 [label=<<font color="black">true</font>> color="black"]
  node13107 -> node13109 [label=<<font color="black">false</font>> color="black"]
  node13110 -> node13111 [ color="black"]
  node13100 -> node13101 [ color="black"]
  node13106 -> node13107 [ color="black"]
  node13113 -> node13114 [ color="black"]
  node13114 -> node13096 [ color="black"]
}
