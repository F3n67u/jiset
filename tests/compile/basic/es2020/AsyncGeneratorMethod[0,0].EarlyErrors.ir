{
  access __x0__ = (AsyncGeneratorMethod "HasDirectSuper")
  if (= __x0__ true) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  access __x2__ = (UniqueFormalParameters "Contains")
  app __x3__ = (__x2__ "YieldExpression")
  if (= __x3__ true) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  access __x4__ = (UniqueFormalParameters "Contains")
  app __x5__ = (__x4__ "AwaitExpression")
  if (= __x5__ true) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  access __x6__ = (AsyncGeneratorBody "ContainsUseStrict")
  let __x7__ = (= __x6__ true)
  if __x7__ {
    access __x8__ = (UniqueFormalParameters "IsSimpleParameterList")
    __x7__ = (= __x8__ false)
  } else {}
  if __x7__ {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  access __x9__ = (UniqueFormalParameters "BoundNames")
  access __x10__ = (AsyncGeneratorBody "LexicallyDeclaredNames")
  let __x11__ = __x9__
  let __x12__ = __x10__
  let __x13__ = 0i
  let __x14__ = 0i
  let __x15__ = false
  while (< __x13__ __x11__.length) {
    __x14__ = 0i
    while (< __x14__ __x12__.length) if (= __x11__[__x13__] __x12__[__x14__]) __x15__ = true else {}
  }
  if __x15__ {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
}