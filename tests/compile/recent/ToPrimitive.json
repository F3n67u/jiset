[{
  "tokens": ["Assert", ":", {
    "id": "input"
  }, "is", "an", "ECMAScript", "language", "value", "."]
}, {
  "tokens": ["If", "Type", "(", {
    "id": "input"
  }, ")", "is", "Object", ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "exoticToPrim"
  }, "be", "?", "GetMethod", "(", {
    "id": "input"
  }, ",", "@", "@", "toPrimitive", ")", "."]
}, {
  "tokens": ["If", {
    "id": "exoticToPrim"
  }, "is", "not", {
    "value": "undefined"
  }, ",", "then"]
}, {
  "tokens": ["If", {
    "id": "preferredType"
  }, "is", "not", "present", ",", "let", {
    "id": "hint"
  }, "be", {
    "value": "\"default\""
  }, "."]
}, {
  "tokens": ["Else", "if", {
    "id": "preferredType"
  }, "is", {
    "const": "string"
  }, ",", "let", {
    "id": "hint"
  }, "be", {
    "value": "\"string\""
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Assert", ":", {
    "id": "preferredType"
  }, "is", {
    "const": "number"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "hint"
  }, "be", {
    "value": "\"number\""
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "result"
  }, "be", "?", "Call", "(", {
    "id": "exoticToPrim"
  }, ",", {
    "id": "input"
  }, ",", "«", {
    "id": "hint"
  }, "»", ")", "."]
}, {
  "tokens": ["If", "Type", "(", {
    "id": "result"
  }, ")", "is", "not", "Object", ",", "return", {
    "id": "result"
  }, "."]
}, {
  "tokens": ["Throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["If", {
    "id": "preferredType"
  }, "is", "not", "present", ",", "let", {
    "id": "preferredType"
  }, "be", {
    "const": "number"
  }, "."]
}, {
  "tokens": ["Return", "?", "OrdinaryToPrimitive", "(", {
    "id": "input"
  }, ",", {
    "id": "preferredType"
  }, ")", "."]
}, {
  "tokens": ["Return", {
    "id": "input"
  }, "."]
}]