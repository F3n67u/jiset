{
  access __x0__ = (GLOBAL_context "LexicalEnvironment")
  let scope = __x0__
  let sourceText = (get-syntax AsyncFunctionExpression)
  app __x1__ = (OrdinaryFunctionCreate INTRINSIC_AsyncFunction.prototype sourceText FormalParameters AsyncFunctionBody CONST_nonDASHlexicalDASHthis scope)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let closure = __x1__
  app __x2__ = (SetFunctionName closure name)
  __x2__
  app __x3__ = (WrapCompletion closure)
  return __x3__
}