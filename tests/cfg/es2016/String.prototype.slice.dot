digraph {
  node12388 [shape=cds, label=<<font color="black">7:app __x8__ = (max (- to from) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12379 [shape=cds, label=<<font color="black">app __x4__ = (max (+ len intStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12375 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let intEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12365 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12385 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12378 [shape=diamond, label=<<font color="black">(&lt; intStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node12389 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let span = __x8__</td></tr>
      <tr><td align="left">8:??? &quot;Return a String value containing id:{span} consecutive elements from id:{S} beginning with the element at index id:{from} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12386 [shape=cds, label=<<font color="black">app __x7__ = (min intEnd len)</font>> color="black" fillcolor="white" style=filled]
  node12369 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12381 [shape=cds, label=<<font color="black">app __x5__ = (min intStart len)</font>> color="black" fillcolor="white" style=filled]
  node12373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let intStart = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12364 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12367 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12384 [shape=cds, label=<<font color="black">app __x6__ = (max (+ len intEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12366 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12383 [shape=diamond, label=<<font color="black">(&lt; intEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node12376 [shape=cds, label=<<font color="black">app __x3__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node12371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
      <tr><td align="left">2:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12372 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node12382 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12368 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12377 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let intEnd = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12370 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12387 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12380 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12374 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node12378 -> node12379 [label=<<font color="black">true</font>> color="black"]
  node12378 -> node12381 [label=<<font color="black">false</font>> color="black"]
  node12382 -> node12383 [ color="black"]
  node12386 -> node12387 [ color="black"]
  node12383 -> node12384 [label=<<font color="black">true</font>> color="black"]
  node12383 -> node12386 [label=<<font color="black">false</font>> color="black"]
  node12369 -> node12370 [ color="black"]
  node12366 -> node12367 [ color="black"]
  node12371 -> node12372 [ color="black"]
  node12372 -> node12373 [ color="black"]
  node12368 -> node12369 [ color="black"]
  node12384 -> node12385 [ color="black"]
  node12367 -> node12368 [ color="black"]
  node12370 -> node12371 [ color="black"]
  node12379 -> node12380 [ color="black"]
  node12377 -> node12378 [ color="black"]
  node12373 -> node12374 [ color="black"]
  node12376 -> node12377 [ color="black"]
  node12375 -> node12378 [ color="black"]
  node12374 -> node12375 [label=<<font color="black">true</font>> color="black"]
  node12374 -> node12376 [label=<<font color="black">false</font>> color="black"]
  node12364 -> node12366 [ color="black"]
  node12385 -> node12388 [ color="black"]
  node12389 -> node12365 [ color="black"]
  node12381 -> node12382 [ color="black"]
  node12387 -> node12388 [ color="black"]
  node12388 -> node12389 [ color="black"]
  node12380 -> node12383 [ color="black"]
}
