digraph {
  node2822 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x1__</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2830 [shape=cds, label=<<font color="black">10:app __x5__ = (DefinePropertyOrThrow obj &quot;callee&quot; (new PropertyDescriptor(&quot;Get&quot; -&gt; INTRINSIC_ThrowTypeError, &quot;Set&quot; -&gt; INTRINSIC_ThrowTypeError, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node2824 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let val = argumentsList[index]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2816 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2823 [shape=diamond, label=<<font color="black">(&lt; index len)</font>> color="black" fillcolor="white" style=filled]
  node2825 [shape=cds, label=<<font color="black">7:app __x2__ = (ToString index)</font>> color="black" fillcolor="white" style=filled]
  node2819 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryObjectCreate INTRINSIC_Object_prototype (new [&quot;ParameterMap&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node2826 [shape=cds, label=<<font color="black">7:app __x3__ = (CreateDataPropertyOrThrow obj [! __x2__] val)</font>> color="black" fillcolor="white" style=filled]
  node2820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let obj = __x0__</td></tr>
      <tr><td align="left">2:obj.ParameterMap = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2817 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[! __x3__]</td></tr>
      <tr><td align="left">8:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2821 [shape=cds, label=<<font color="black">3:app __x1__ = (DefinePropertyOrThrow obj &quot;length&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; len, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; true)))</font>> color="black" fillcolor="white" style=filled]
  node2831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[! __x5__]</td></tr>
      <tr><td align="left">11:return obj</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let len = argumentsList.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2828 [shape=cds, label=<<font color="black">9:app __x4__ = (DefinePropertyOrThrow obj SYMBOL_iterator (new PropertyDescriptor(&quot;Value&quot; -&gt; INTRINSIC_Array_prototype_values, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; true)))</font>> color="black" fillcolor="white" style=filled]
  node2819 -> node2820 [ color="black"]
  node2829 -> node2830 [ color="black"]
  node2830 -> node2831 [ color="black"]
  node2825 -> node2826 [ color="black"]
  node2820 -> node2821 [ color="black"]
  node2816 -> node2818 [ color="black"]
  node2828 -> node2829 [ color="black"]
  node2822 -> node2823 [ color="black"]
  node2831 -> node2817 [ color="black"]
  node2821 -> node2822 [ color="black"]
  node2823 -> node2824 [label=<<font color="black">true</font>> color="black"]
  node2823 -> node2828 [label=<<font color="black">false</font>> color="black"]
  node2824 -> node2825 [ color="black"]
  node2826 -> node2827 [ color="black"]
  node2818 -> node2819 [ color="black"]
  node2827 -> node2823 [ color="black"]
}
