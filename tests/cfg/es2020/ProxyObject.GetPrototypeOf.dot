digraph {
  node3153 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3175 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node3157 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3154 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3166 [shape=diamond, label=<<font color="black">(! (|| (= __x4__ Object) (= __x4__ Null)))</font>> color="black" fillcolor="white" style=filled]
  node3176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3162 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3173 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let targetProto = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3158 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;getPrototypeOf&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3170 [shape=diamond, label=<<font color="black">(= extensibleTarget true)</font>> color="black" fillcolor="white" style=filled]
  node3165 [shape=cds, label=<<font color="black">8:app __x4__ = (Type handlerProto)</font>> color="black" fillcolor="white" style=filled]
  node3159 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3161 [shape=cds, label=<<font color="black">6:app __x2__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node3174 [shape=cds, label=<<font color="black">12:app __x7__ = (SameValue handlerProto targetProto)</font>> color="black" fillcolor="white" style=filled]
  node3156 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3164 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let handlerProto = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3177 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return handlerProto</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3167 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3172 [shape=cds, label=<<font color="black">11:app __x6__ = (target.GetPrototypeOf target)</font>> color="black" fillcolor="white" style=filled]
  node3163 [shape=cds, label=<<font color="black">7:app __x3__ = (Call trap handler (new [target]))</font>> color="black" fillcolor="white" style=filled]
  node3152 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3151 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3169 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let extensibleTarget = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3155 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3160 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3168 [shape=cds, label=<<font color="black">9:app __x5__ = (IsExtensible target)</font>> color="black" fillcolor="white" style=filled]
  node3171 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return handlerProto</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3177 -> node3152 [ color="black"]
  node3161 -> node3162 [ color="black"]
  node3157 -> node3158 [ color="black"]
  node3153 -> node3154 [ color="black"]
  node3175 -> node3176 [label=<<font color="black">true</font>> color="black"]
  node3175 -> node3177 [label=<<font color="black">false</font>> color="black"]
  node3174 -> node3175 [ color="black"]
  node3171 -> node3172 [ color="black"]
  node3172 -> node3173 [ color="black"]
  node3160 -> node3161 [label=<<font color="black">true</font>> color="black"]
  node3160 -> node3163 [label=<<font color="black">false</font>> color="black"]
  node3158 -> node3159 [ color="black"]
  node3155 -> node3156 [ color="black"]
  node3176 -> node3177 [ color="black"]
  node3154 -> node3155 [label=<<font color="black">true</font>> color="black"]
  node3154 -> node3156 [label=<<font color="black">false</font>> color="black"]
  node3164 -> node3165 [ color="black"]
  node3167 -> node3168 [ color="black"]
  node3168 -> node3169 [ color="black"]
  node3162 -> node3163 [ color="black"]
  node3163 -> node3164 [ color="black"]
  node3166 -> node3167 [label=<<font color="black">true</font>> color="black"]
  node3166 -> node3168 [label=<<font color="black">false</font>> color="black"]
  node3159 -> node3160 [ color="black"]
  node3165 -> node3166 [ color="black"]
  node3151 -> node3153 [ color="black"]
  node3169 -> node3170 [ color="black"]
  node3173 -> node3174 [ color="black"]
  node3156 -> node3157 [ color="black"]
  node3170 -> node3171 [label=<<font color="black">true</font>> color="black"]
  node3170 -> node3172 [label=<<font color="black">false</font>> color="black"]
}
