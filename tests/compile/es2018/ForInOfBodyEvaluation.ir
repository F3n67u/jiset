{
  [0] if (= iteratorKind absent) iteratorKind = CONST_sync else [22] {}
  [1] let oldEnv = GLOBAL_context.LexicalEnvironment
  [2] let V = undefined
  [3] access __x0__ = (lhs "IsDestructuring")
  [3] let destructuring = __x0__
  [4] if (&& (= destructuring true) (= lhsKind CONST_assignment)) {
    [5] assert (is-instance-of lhs LeftHandSideExpression)
    [6] let assignmentPattern = (parse-syntax lhs "AssignmentPattern" (new []))
  } else [22] {}
  [7] while true {
    [8] app __x1__ = (Call iteratorRecord.NextMethod iteratorRecord.Iterator (new []))
    [8] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [22] {}
    [8] let nextResult = __x1__
    [9] if (= iteratorKind CONST_async) {
      app __x2__ = (Await nextResult)
      if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [22] {}
      nextResult = __x2__
    } else [22] {}
    [10] app __x3__ = (Type nextResult)
    [10] if (! (= __x3__ Object)) {
      app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x4__
    } else [22] {}
    [11] app __x5__ = (IteratorValue nextResult)
    [11] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [22] {}
    [11] let nextValue = __x5__
    [15] if (|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding)) if (= destructuring false) {
      [14] access __x6__ = (lhs "Evaluation")
      [14] let lhsRef = __x6__
    } else [22] {} else {
      [16] assert (= lhsKind CONST_lexicalBinding)
      [17] assert (is-instance-of lhs ForDeclaration)
      [18] app __x7__ = (NewDeclarativeEnvironment oldEnv)
      [18] let iterationEnv = __x7__
      [19] access __x8__ = (lhs "BindingInstantiation")
      [19] app __x9__ = (__x8__ iterationEnv)
      [19] __x9__
      [20] GLOBAL_context.LexicalEnvironment = iterationEnv
      [21] if (= destructuring false) {
        [23] access __x10__ = (lhs "BoundNames")
        [23] let lhsName = __x10__[0i]
        [24] app __x11__ = (ResolveBinding lhsName)
        [24] if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else [22] {}
        [24] let lhsRef = __x11__
      } else [22] {}
    }
    [32] if (= destructuring false) {
      [30] app __x12__ = (IsAbruptCompletion lhsRef)
      [30] if __x12__ let status = lhsRef else if (= lhsKind CONST_lexicalBinding) {
        [29] app __x13__ = (InitializeReferencedBinding lhsRef nextValue)
        [29] let status = __x13__
      } else {
        [31] app __x14__ = (PutValue lhsRef nextValue)
        [31] let status = __x14__
      }
    } else if (= lhsKind CONST_assignment) {
      [34] access __x15__ = (assignmentPattern "DestructuringAssignmentEvaluation")
      [34] app __x16__ = (__x15__ nextValue)
      [34] let status = __x16__
    } else if (= lhsKind CONST_varBinding) {
      [36] assert (is-instance-of lhs ForBinding)
      [37] access __x17__ = (lhs "BindingInitialization")
      [37] app __x18__ = (__x17__ nextValue undefined)
      [37] let status = __x18__
    } else {
      [39] assert (= lhsKind CONST_lexicalBinding)
      [40] assert (is-instance-of lhs ForDeclaration)
      [41] access __x19__ = (lhs "BindingInitialization")
      [41] app __x20__ = (__x19__ nextValue iterationEnv)
      [41] let status = __x20__
    }
    [42] app __x21__ = (IsAbruptCompletion status)
    [42] if __x21__ {
      [43] GLOBAL_context.LexicalEnvironment = oldEnv
      [44] if (= iteratorKind CONST_async) {
        app __x22__ = (AsyncIteratorClose iteratorRecord status)
        if (is-completion __x22__) if (= __x22__.Type CONST_normal) __x22__ = __x22__.Value else return __x22__ else [22] {}
        app __x23__ = (WrapCompletion __x22__)
        return __x23__
      } else [22] {}
      [47] if (= iterationKind CONST_enumerate) {
        [46] app __x24__ = (WrapCompletion status)
        [46] return __x24__
      } else {
        [48] assert (= iterationKind CONST_iterate)
        [49] app __x25__ = (IteratorClose iteratorRecord status)
        [49] if (is-completion __x25__) if (= __x25__.Type CONST_normal) __x25__ = __x25__.Value else return __x25__ else [22] {}
        [49] app __x26__ = (WrapCompletion __x25__)
        [49] return __x26__
      }
    } else [22] {}
    [50] access __x27__ = (stmt "Evaluation")
    [50] let result = __x27__
    [51] GLOBAL_context.LexicalEnvironment = oldEnv
    [52] app __x28__ = (LoopContinues result labelSet)
    [52] if (= __x28__ false) if (= iterationKind CONST_enumerate) {
      [54] app __x29__ = (UpdateEmpty result V)
      [54] app __x30__ = (Completion __x29__)
      [54] app __x31__ = (WrapCompletion __x30__)
      [54] return __x31__
    } else {
      [56] assert (= iterationKind CONST_iterate)
      [57] app __x32__ = (UpdateEmpty result V)
      [57] status = __x32__
      [58] if (= iteratorKind CONST_async) {
        app __x33__ = (AsyncIteratorClose iteratorRecord status)
        if (is-completion __x33__) if (= __x33__.Type CONST_normal) __x33__ = __x33__.Value else return __x33__ else [22] {}
        app __x34__ = (WrapCompletion __x33__)
        return __x34__
      } else [22] {}
      [59] app __x35__ = (IteratorClose iteratorRecord status)
      [59] if (is-completion __x35__) if (= __x35__.Type CONST_normal) __x35__ = __x35__.Value else return __x35__ else [22] {}
      [59] app __x36__ = (WrapCompletion __x35__)
      [59] return __x36__
    } else [22] {}
    [60] if (! (= result.Value CONST_empty)) V = result.Value else [22] {}
  }
}