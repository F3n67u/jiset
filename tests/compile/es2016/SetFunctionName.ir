{
  [1] app __x0__ = (Type name)
  [1] assert (|| (= __x0__ Symbol) (= __x0__ String))
  [3] app __x1__ = (Type name)
  [3] if (= __x1__ Symbol) {
    [4] let description = name.Description
    [6] if (= description undefined) let name = "" else let name = (+ (+ "[" description) "]")
  } else [2] {}
  [7] if (! (= prefix absent)) let name = (+ (+ prefix " ") name) else [2] {}
  [9] app __x2__ = (DefinePropertyOrThrow F "name" (new PropertyDescriptor("Value" -> name, "Writable" -> false, "Enumerable" -> false, "Configurable" -> true)))
  [9] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [2] {}
  [9] app __x3__ = (WrapCompletion __x2__)
  [9] return __x3__
}