digraph {
  node9509 [shape=cds, label=<<font color="black">4:app __x3__ = (OrdinaryObjectCreate INTRINSIC_AsyncGeneratorFunction_prototype_prototype)</font>> color="black" fillcolor="white" style=filled]
  node9501 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x4__]</td></tr>
      <tr><td align="left">6:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9508 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9502 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9506 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let closure = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9511 [shape=cds, label=<<font color="black">5:app __x4__ = (DefinePropertyOrThrow closure &quot;prototype&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; prototype, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node9503 [shape=cds, label=<<font color="black">0:access __x0__ = (GLOBAL_context &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9507 [shape=cds, label=<<font color="black">3:app __x2__ = (SetFunctionName closure name)</font>> color="black" fillcolor="white" style=filled]
  node9505 [shape=cds, label=<<font color="black">2:app __x1__ = (OrdinaryFunctionCreate INTRINSIC_AsyncGeneratorFunction_prototype sourceText FormalParameters AsyncGeneratorBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node9510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let prototype = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9504 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let scope = __x0__</td></tr>
      <tr><td align="left">1:let sourceText = (get-syntax AsyncGeneratorExpression)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9507 -> node9508 [ color="black"]
  node9508 -> node9509 [ color="black"]
  node9509 -> node9510 [ color="black"]
  node9503 -> node9504 [ color="black"]
  node9505 -> node9506 [ color="black"]
  node9511 -> node9512 [ color="black"]
  node9512 -> node9502 [ color="black"]
  node9510 -> node9511 [ color="black"]
  node9506 -> node9507 [ color="black"]
  node9504 -> node9505 [ color="black"]
  node9501 -> node9503 [ color="black"]
}
