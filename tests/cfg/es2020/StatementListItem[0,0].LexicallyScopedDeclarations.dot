digraph {
  node6391 [shape=cds, label=<<font color="black">access LabelledStatement = (Statement &quot;LabelledStatement&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6388 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6392 [shape=cds, label=<<font color="black">access __x0__ = (LabelledStatement &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6394 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6389 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6390 [shape=diamond, label=<<font color="black">(is-instance-of Statement Statement10)</font>> color="black" fillcolor="white" style=filled]
  node6393 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6390 -> node6391 [label=<<font color="black">true</font>> color="black"]
  node6390 -> node6394 [label=<<font color="black">false</font>> color="black"]
  node6393 -> node6394 [ color="black"]
  node6391 -> node6392 [ color="black"]
  node6392 -> node6393 [ color="black"]
  node6388 -> node6390 [ color="black"]
  node6394 -> node6389 [ color="black"]
}
