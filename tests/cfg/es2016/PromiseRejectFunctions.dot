digraph {
  node15490 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promise = F.Promise</td></tr>
      <tr><td align="left">2:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15487 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15483 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15484 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15489 [shape=cds, label=<<font color="black">5:app __x0__ = (RejectPromise promise reason)</font>> color="black" fillcolor="white" style=filled]
  node15486 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node15488 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15488 -> node15489 [ color="black"]
  node15485 -> node15486 [ color="black"]
  node15483 -> node15485 [ color="black"]
  node15486 -> node15487 [label=<<font color="black">true</font>> color="black"]
  node15486 -> node15488 [label=<<font color="black">false</font>> color="black"]
  node15490 -> node15484 [ color="black"]
  node15487 -> node15488 [ color="black"]
  node15489 -> node15490 [ color="black"]
}
