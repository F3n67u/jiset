digraph {
  node16216 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16223 [shape=cds, label=<<font color="black">3:app __x2__ = (Set O &quot;length&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node16219 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16227 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let index = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16232 [shape=cds, label=<<font color="black">11:app __x6__ = (Set O &quot;length&quot; newLen true)</font>> color="black" fillcolor="white" style=filled]
  node16220 [shape=cds, label=<<font color="black">1:app __x1__ = (LengthOfArrayLike O)</font>> color="black" fillcolor="white" style=filled]
  node16233 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? __x6__]</td></tr>
      <tr><td align="left">12:return element</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16217 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16221 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let len = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16230 [shape=cds, label=<<font color="black">10:app __x5__ = (DeletePropertyOrThrow O index)</font>> color="black" fillcolor="white" style=filled]
  node16225 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:assert (&lt; 0i len)</td></tr>
      <tr><td align="left">7:let newLen = (- len 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16218 [shape=cds, label=<<font color="black">0:app __x0__ = (ToObject this)</font>> color="black" fillcolor="white" style=filled]
  node16228 [shape=cds, label=<<font color="black">9:app __x4__ = (Get O index)</font>> color="black" fillcolor="white" style=filled]
  node16229 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let element = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16226 [shape=cds, label=<<font color="black">8:app __x3__ = (ToString newLen)</font>> color="black" fillcolor="white" style=filled]
  node16231 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16224 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? __x2__]</td></tr>
      <tr><td align="left">4:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16222 [shape=diamond, label=<<font color="black">(= len 0i)</font>> color="black" fillcolor="white" style=filled]
  node16216 -> node16218 [ color="black"]
  node16218 -> node16219 [ color="black"]
  node16229 -> node16230 [ color="black"]
  node16226 -> node16227 [ color="black"]
  node16220 -> node16221 [ color="black"]
  node16231 -> node16232 [ color="black"]
  node16228 -> node16229 [ color="black"]
  node16219 -> node16220 [ color="black"]
  node16224 -> node16217 [ color="black"]
  node16225 -> node16226 [ color="black"]
  node16233 -> node16217 [ color="black"]
  node16222 -> node16223 [label=<<font color="black">true</font>> color="black"]
  node16222 -> node16225 [label=<<font color="black">false</font>> color="black"]
  node16221 -> node16222 [ color="black"]
  node16230 -> node16231 [ color="black"]
  node16227 -> node16228 [ color="black"]
  node16223 -> node16224 [ color="black"]
  node16232 -> node16233 [ color="black"]
}
