{
  let genContext = CONTEXT
  let generator = genContext.Generator
  app __x0__ = (GetGeneratorKind)
  assert (= __x0__ CONST_async)
  app __x1__ = (Await value)
  value = [? __x1__]
  generator.AsyncGeneratorState = CONST_suspendedYield
  if (= EXECUTION_STACK[(- EXECUTION_STACK.length 1i)] genContext) {
    let __x2__ = (- EXECUTION_STACK.length 1i)
    (pop EXECUTION_STACK __x2__)
  } else {}
  CONTEXT = EXECUTION_STACK[(- EXECUTION_STACK.length 1i)]
  ??? "Set the code evaluation state of id:{genContext} such that when evaluation is resumed with a Completion id:{resumptionValue} the following steps will be performed : in:{} out:{}"
  ??? "ReturnCont id:{genContext} . [ [ ReturnCont ] ] to ! AsyncGeneratorResolve ( id:{generator} , id:{value} , value:{false} ) ."
}