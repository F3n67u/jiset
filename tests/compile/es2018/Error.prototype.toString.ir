{
  [0] let O = this
  [1] app __x0__ = (Type O)
  [1] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [2] {}
  [2] app __x2__ = (Get O "name")
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [2] {}
  [2] let name = __x2__
  [3] if (= name undefined) let name = "Error" else {
    app __x3__ = (ToString name)
    if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [2] {}
    let name = __x3__
  }
  [4] app __x4__ = (Get O "message")
  [4] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [2] {}
  [4] let msg = __x4__
  [5] if (= msg undefined) let msg = "" else {
    app __x5__ = (ToString msg)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [2] {}
    let msg = __x5__
  }
  [6] if (= name "") {
    app __x6__ = (WrapCompletion msg)
    return __x6__
  } else [2] {}
  [7] if (= msg "") {
    app __x7__ = (WrapCompletion name)
    return __x7__
  } else [2] {}
  [8] app __x8__ = (WrapCompletion (+ (+ (+ name ":") " ") msg))
  [8] return __x8__
}