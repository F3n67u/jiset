{
  app __x0__ = (RequireObjectCoercible this)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let O = __x0__
  if (! (|| (= regexp undefined) (= regexp null))) {
    app __x1__ = (IsRegExp regexp)
    if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
    let isRegExp = __x1__
    if (= isRegExp true) {
      app __x2__ = (Get regexp "flags")
      if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
      let flags = __x2__
      app __x3__ = (RequireObjectCoercible flags)
      if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
      __x3__
      app __x4__ = (ToString flags)
      if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
      if (! (contains __x4__ "g")) throw INTRINSIC_TypeError else {}
    } else {}
    app __x5__ = (GetMethod regexp SYMBOL_matchAll)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
    let matcher = __x5__
    if (! (= matcher undefined)) {
      app __x6__ = (Call matcher regexp (new [O]))
      if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
      app __x7__ = (WrapCompletion __x6__)
      return __x7__
    } else {}
  } else {}
  app __x8__ = (ToString O)
  if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
  let S = __x8__
  app __x9__ = (RegExpCreate regexp "g")
  if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
  let rx = __x9__
  app __x10__ = (Invoke rx SYMBOL_matchAll (new [S]))
  if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
  app __x11__ = (WrapCompletion __x10__)
  return __x11__
}