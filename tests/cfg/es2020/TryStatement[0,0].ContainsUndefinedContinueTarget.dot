digraph {
  node8571 [shape=cds, label=<<font color="black">0:access __x0__ = (Block &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node8575 [shape=cds, label=<<font color="black">2:access __x1__ = (Catch &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node8572 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8576 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8573 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node8569 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8574 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8570 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8571 -> node8572 [ color="black"]
  node8572 -> node8573 [ color="black"]
  node8574 -> node8575 [ color="black"]
  node8576 -> node8570 [ color="black"]
  node8573 -> node8574 [label=<<font color="black">true</font>> color="black"]
  node8573 -> node8575 [label=<<font color="black">false</font>> color="black"]
  node8569 -> node8571 [ color="black"]
  node8575 -> node8576 [ color="black"]
}
