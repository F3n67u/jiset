{
  [0] access __x0__ = (AdditiveExpression "Evaluation")
  [0] let lref = __x0__
  [1] app __x1__ = (GetValue lref)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [6] {}
  [1] let lval = __x1__
  [2] access __x2__ = (MultiplicativeExpression "Evaluation")
  [2] let rref = __x2__
  [3] app __x3__ = (GetValue rref)
  [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [6] {}
  [3] let rval = __x3__
  [4] app __x4__ = (ToNumber lval)
  [4] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [6] {}
  [4] let lnum = __x4__
  [5] app __x5__ = (ToNumber rval)
  [5] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [6] {}
  [5] let rnum = __x5__
  [6] app __x6__ = (WrapCompletion (- lnum rnum))
  [6] return __x6__
}