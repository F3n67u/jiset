digraph {
  node10711 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node10764 [shape=diamond, label=<<font color="black">(= __x26__ true)</font>> color="black" fillcolor="white" style=filled]
  node10740 [shape=cds, label=<<font color="black">23:access __x12__ = (code &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10709 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10766 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x27__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10762 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x24__[__x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10733 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let resolution = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10730 [shape=cds, label=<<font color="black">17:app __x9__ = (envRec.InitializeBinding envRec in.LocalName namespace)</font>> color="black" fillcolor="white" style=filled]
  node10743 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x13__[__x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10753 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10775 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x25__ = (+ __x25__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10772 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let fo = __x30__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10715 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10747 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10726 [shape=cds, label=<<font color="black">15:app __x7__ = (GetModuleNamespace importedModule)</font>> color="black" fillcolor="white" style=filled]
  node10737 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:__x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10751 [shape=cds, label=<<font color="black">29:app __x19__ = (envRec.InitializeBinding envRec dn undefined)</font>> color="black" fillcolor="white" style=filled]
  node10722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let in = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10719 [shape=cds, label=<<font color="black">8:app __x3__ = (NewModuleEnvironment realm.GlobalEnv)</font>> color="black" fillcolor="white" style=filled]
  node10729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:[! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10746 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node10757 [shape=diamond, label=<<font color="black">(&lt; __x22__ __x21__.length)</font>> color="black" fillcolor="white" style=filled]
  node10734 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10725 [shape=diamond, label=<<font color="black">(= in.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10742 [shape=diamond, label=<<font color="black">(&lt; __x14__ __x13__.length)</font>> color="black" fillcolor="white" style=filled]
  node10721 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node10710 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let module = this</td></tr>
      <tr><td align="left">1:let __x0__ = module.IndirectExportEntries</td></tr>
      <tr><td align="left">1:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10756 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let lexDeclarations = __x20__</td></tr>
      <tr><td align="left">32:let __x21__ = lexDeclarations</td></tr>
      <tr><td align="left">32:let __x22__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10765 [shape=cds, label=<<font color="black">35:app __x27__ = (envRec.CreateImmutableBinding envRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node10716 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10748 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames dn))</font>> color="black" fillcolor="white" style=filled]
  node10731 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:__x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10771 [shape=cds, label=<<font color="black">39:app __x30__ = (__x29__ env)</font>> color="black" fillcolor="white" style=filled]
  node10760 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let __x24__ = __x23__</td></tr>
      <tr><td align="left">33:let __x25__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10708 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10761 [shape=diamond, label=<<font color="black">(&lt; __x25__ __x24__.length)</font>> color="black" fillcolor="white" style=filled]
  node10776 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x22__ = (+ __x22__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10752 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:__x19__</td></tr>
      <tr><td align="left">30:append dn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10720 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let env = __x3__</td></tr>
      <tr><td align="left">9:module.Environment = env</td></tr>
      <tr><td align="left">10:let envRec = env.EnvironmentRecord</td></tr>
      <tr><td align="left">11:let __x4__ = module.ImportEntries</td></tr>
      <tr><td align="left">11:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10735 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10770 [shape=cds, label=<<font color="black">39:access __x29__ = (d &quot;InstantiateFunctionObject&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10728 [shape=cds, label=<<font color="black">16:app __x8__ = (envRec.CreateImmutableBinding envRec in.LocalName true)</font>> color="black" fillcolor="white" style=filled]
  node10741 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let varDeclarations = __x12__</td></tr>
      <tr><td align="left">24:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">25:let __x13__ = varDeclarations</td></tr>
      <tr><td align="left">25:let __x14__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10732 [shape=cds, label=<<font color="black">19:app __x10__ = (importedModule.ResolveExport importedModule in.ImportName (new []))</font>> color="black" fillcolor="white" style=filled]
  node10755 [shape=cds, label=<<font color="black">31:access __x20__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10749 [shape=cds, label=<<font color="black">28:app __x18__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10759 [shape=cds, label=<<font color="black">33:access __x23__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10736 [shape=cds, label=<<font color="black">21:app __x11__ = (envRec.CreateImportBinding envRec in.LocalName resolution.Module resolution.BindingName)</font>> color="black" fillcolor="white" style=filled]
  node10739 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let code = module.ECMAScriptCode</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10717 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (= (typeof resolution) &quot;ResolvedBindingRecord&quot;)</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let importedModule = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10769 [shape=diamond, label=<<font color="black">(|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</font>> color="black" fillcolor="white" style=filled]
  node10714 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let resolution = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10712 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10754 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x14__ = (+ __x14__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10767 [shape=cds, label=<<font color="black">37:app __x28__ = (envRec.CreateMutableBinding envRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10774 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:__x31__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10744 [shape=cds, label=<<font color="black">26:access __x15__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10727 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let namespace = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10777 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10718 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let realm = module.Realm</td></tr>
      <tr><td align="left">7:assert (! (= realm undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10713 [shape=cds, label=<<font color="black">2:app __x2__ = (module.ResolveExport module e.ExportName (new []))</font>> color="black" fillcolor="white" style=filled]
  node10773 [shape=cds, label=<<font color="black">40:app __x31__ = (envRec.InitializeBinding envRec dn fo)</font>> color="black" fillcolor="white" style=filled]
  node10758 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x21__[__x22__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10723 [shape=cds, label=<<font color="black">12:app __x6__ = (HostResolveImportedModule module in.ModuleRequest)</font>> color="black" fillcolor="white" style=filled]
  node10763 [shape=cds, label=<<font color="black">36:access __x26__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10745 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let __x16__ = __x15__</td></tr>
      <tr><td align="left">26:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10750 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:[! __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10768 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:[! __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10763 -> node10764 [ color="black"]
  node10729 -> node10730 [ color="black"]
  node10753 -> node10746 [ color="black"]
  node10754 -> node10742 [ color="black"]
  node10718 -> node10719 [ color="black"]
  node10735 -> node10736 [ color="black"]
  node10756 -> node10757 [ color="black"]
  node10712 -> node10713 [ color="black"]
  node10742 -> node10743 [label=<<font color="black">true</font>> color="black"]
  node10742 -> node10755 [label=<<font color="black">false</font>> color="black"]
  node10769 -> node10770 [label=<<font color="black">true</font>> color="black"]
  node10769 -> node10775 [label=<<font color="black">false</font>> color="black"]
  node10746 -> node10747 [label=<<font color="black">true</font>> color="black"]
  node10746 -> node10754 [label=<<font color="black">false</font>> color="black"]
  node10748 -> node10749 [label=<<font color="black">true</font>> color="black"]
  node10748 -> node10753 [label=<<font color="black">false</font>> color="black"]
  node10777 -> node10709 [ color="black"]
  node10767 -> node10768 [ color="black"]
  node10744 -> node10745 [ color="black"]
  node10759 -> node10760 [ color="black"]
  node10757 -> node10758 [label=<<font color="black">true</font>> color="black"]
  node10757 -> node10777 [label=<<font color="black">false</font>> color="black"]
  node10741 -> node10742 [ color="black"]
  node10747 -> node10748 [ color="black"]
  node10727 -> node10728 [ color="black"]
  node10725 -> node10726 [label=<<font color="black">true</font>> color="black"]
  node10725 -> node10732 [label=<<font color="black">false</font>> color="black"]
  node10717 -> node10711 [ color="black"]
  node10770 -> node10771 [ color="black"]
  node10710 -> node10711 [ color="black"]
  node10726 -> node10727 [ color="black"]
  node10772 -> node10773 [ color="black"]
  node10737 -> node10738 [ color="black"]
  node10774 -> node10775 [ color="black"]
  node10738 -> node10721 [ color="black"]
  node10739 -> node10740 [ color="black"]
  node10719 -> node10720 [ color="black"]
  node10773 -> node10774 [ color="black"]
  node10733 -> node10734 [ color="black"]
  node10765 -> node10766 [ color="black"]
  node10721 -> node10722 [label=<<font color="black">true</font>> color="black"]
  node10721 -> node10739 [label=<<font color="black">false</font>> color="black"]
  node10728 -> node10729 [ color="black"]
  node10740 -> node10741 [ color="black"]
  node10716 -> node10717 [ color="black"]
  node10762 -> node10763 [ color="black"]
  node10720 -> node10721 [ color="black"]
  node10755 -> node10756 [ color="black"]
  node10752 -> node10753 [ color="black"]
  node10761 -> node10762 [label=<<font color="black">true</font>> color="black"]
  node10761 -> node10776 [label=<<font color="black">false</font>> color="black"]
  node10760 -> node10761 [ color="black"]
  node10722 -> node10723 [ color="black"]
  node10745 -> node10746 [ color="black"]
  node10750 -> node10751 [ color="black"]
  node10732 -> node10733 [ color="black"]
  node10708 -> node10710 [ color="black"]
  node10723 -> node10724 [ color="black"]
  node10711 -> node10712 [label=<<font color="black">true</font>> color="black"]
  node10711 -> node10718 [label=<<font color="black">false</font>> color="black"]
  node10743 -> node10744 [ color="black"]
  node10768 -> node10769 [ color="black"]
  node10775 -> node10761 [ color="black"]
  node10714 -> node10715 [ color="black"]
  node10766 -> node10769 [ color="black"]
  node10776 -> node10757 [ color="black"]
  node10734 -> node10735 [label=<<font color="black">true</font>> color="black"]
  node10734 -> node10736 [label=<<font color="black">false</font>> color="black"]
  node10731 -> node10738 [ color="black"]
  node10736 -> node10737 [ color="black"]
  node10724 -> node10725 [ color="black"]
  node10715 -> node10716 [label=<<font color="black">true</font>> color="black"]
  node10715 -> node10717 [label=<<font color="black">false</font>> color="black"]
  node10749 -> node10750 [ color="black"]
  node10713 -> node10714 [ color="black"]
  node10758 -> node10759 [ color="black"]
  node10771 -> node10772 [ color="black"]
  node10730 -> node10731 [ color="black"]
  node10751 -> node10752 [ color="black"]
  node10764 -> node10765 [label=<<font color="black">true</font>> color="black"]
  node10764 -> node10767 [label=<<font color="black">false</font>> color="black"]
}
