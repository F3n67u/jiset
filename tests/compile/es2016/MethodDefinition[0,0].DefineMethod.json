[{
  "tokens": ["Let", {
    "id": "propKey"
  }, "be", "the", "result", "of", "evaluating", {
    "nt": "PropertyName"
  }, "."]
}, {
  "tokens": ["ReturnIfAbrupt", "(", {
    "id": "propKey"
  }, ")", "."]
}, {
  "tokens": ["If", "the", "function", "code", "for", "this", {
    "nt": "MethodDefinition"
  }, "is", "strict", "mode", "code", ",", "let", {
    "id": "strict"
  }, "be", {
    "value": "true"
  }, ".", "Otherwise", "let", {
    "id": "strict"
  }, "be", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "scope"
  }, "be", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", "."]
}, {
  "tokens": ["If", {
    "id": "functionPrototype"
  }, "was", "passed", "as", "a", "parameter", ",", "let", {
    "id": "kind"
  }, "be", {
    "const": "Normal"
  }, ";", "otherwise", "let", {
    "id": "kind"
  }, "be", {
    "const": "Method"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "closure"
  }, "be", "FunctionCreate", "(", {
    "id": "kind"
  }, ",", {
    "nt": "StrictFormalParameters"
  }, ",", {
    "nt": "FunctionBody"
  }, ",", {
    "id": "scope"
  }, ",", {
    "id": "strict"
  }, ")", ".", "If", {
    "id": "functionPrototype"
  }, "was", "passed", "as", "a", "parameter", ",", "then", "pass", "its", "value", "as", "the", {
    "id": "prototype"
  }, "optional", "argument", "of", "FunctionCreate", "."]
}, {
  "tokens": ["Perform", "MakeMethod", "(", {
    "id": "closure"
  }, ",", {
    "id": "object"
  }, ")", "."]
}, {
  "tokens": ["Return", "the", "Record", "{", "[", "[", "Key", "]", "]", ":", {
    "id": "propKey"
  }, ",", "[", "[", "Closure", "]", "]", ":", {
    "id": "closure"
  }, "}", "."]
}]