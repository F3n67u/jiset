digraph {
  node16915 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let bufferConstructor = INTRINSIC_ArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16919 [shape=cds, label=<<font color="black">20:app __x4__ = (AllocateArrayBuffer bufferConstructor byteLength)</font>> color="black" fillcolor="white" style=filled]
  node16927 [shape=diamond, label=<<font color="black">(&lt; 0i count)</font>> color="black" fillcolor="white" style=filled]
  node16916 [shape=diamond, label=<<font color="black">(= elementType srcType)</font>> color="black" fillcolor="white" style=filled]
  node16910 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let constructorName = O.TypedArrayName</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{constructorName} .&quot;</td></tr>
      <tr><td align="left">6:let elementLength = srcArray.ArrayLength</td></tr>
      <tr><td align="left">7:let srcName = srcArray.TypedArrayName</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{srcType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{srcName} .&quot;</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{srcElementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{srcName} .&quot;</td></tr>
      <tr><td align="left">10:let srcByteOffset = srcArray.ByteOffset</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{constructorName} .&quot;</td></tr>
      <tr><td align="left">12:let byteLength = (* elementSize elementLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16920 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let data = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16909 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16904 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16912 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16931 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:__x7__</td></tr>
      <tr><td align="left">29:srcByteIndex = (+ srcByteIndex srcElementSize)</td></tr>
      <tr><td align="left">30:targetByteIndex = (+ targetByteIndex elementSize)</td></tr>
      <tr><td align="left">31:count = (- count 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16921 [shape=cds, label=<<font color="black">21:app __x5__ = (IsDetachedBuffer srcData)</font>> color="black" fillcolor="white" style=filled]
  node16918 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let data = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16928 [shape=cds, label=<<font color="black">27:app __x6__ = (GetValueFromBuffer srcData srcByteIndex srcType true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node16911 [shape=cds, label=<<font color="black">15:app __x1__ = (IsSharedArrayBuffer srcData)</font>> color="black" fillcolor="white" style=filled]
  node16929 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let value = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16924 [shape=diamond, label=<<font color="black">(! (== srcArray.ContentType O.ContentType))</font>> color="black" fillcolor="white" style=filled]
  node16907 [shape=cds, label=<<font color="black">3:app __x0__ = (IsDetachedBuffer srcData)</font>> color="black" fillcolor="white" style=filled]
  node16906 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let srcData = srcArray.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16932 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:O.ViewedArrayBuffer = data</td></tr>
      <tr><td align="left">33:O.ByteLength = byteLength</td></tr>
      <tr><td align="left">34:O.ByteOffset = 0i</td></tr>
      <tr><td align="left">35:O.ArrayLength = elementLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16913 [shape=cds, label=<<font color="black">14:app __x2__ = (SpeciesConstructor srcData INTRINSIC_ArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16923 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16926 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let srcByteIndex = srcByteOffset</td></tr>
      <tr><td align="left">24:let targetByteIndex = 0i</td></tr>
      <tr><td align="left">25:let count = elementLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16905 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16922 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node16917 [shape=cds, label=<<font color="black">18:app __x3__ = (CloneArrayBuffer srcData srcByteOffset byteLength bufferConstructor)</font>> color="black" fillcolor="white" style=filled]
  node16914 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let bufferConstructor = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16925 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16908 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node16930 [shape=cds, label=<<font color="black">28:app __x7__ = (SetValueInBuffer data targetByteIndex elementType value true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node16930 -> node16931 [ color="black"]
  node16929 -> node16930 [ color="black"]
  node16921 -> node16922 [ color="black"]
  node16924 -> node16925 [label=<<font color="black">true</font>> color="black"]
  node16924 -> node16926 [label=<<font color="black">false</font>> color="black"]
  node16914 -> node16916 [ color="black"]
  node16918 -> node16932 [ color="black"]
  node16908 -> node16909 [label=<<font color="black">true</font>> color="black"]
  node16908 -> node16910 [label=<<font color="black">false</font>> color="black"]
  node16932 -> node16905 [ color="black"]
  node16916 -> node16917 [label=<<font color="black">true</font>> color="black"]
  node16916 -> node16919 [label=<<font color="black">false</font>> color="black"]
  node16922 -> node16923 [label=<<font color="black">true</font>> color="black"]
  node16922 -> node16924 [label=<<font color="black">false</font>> color="black"]
  node16931 -> node16927 [ color="black"]
  node16915 -> node16916 [ color="black"]
  node16923 -> node16924 [ color="black"]
  node16910 -> node16911 [ color="black"]
  node16920 -> node16921 [ color="black"]
  node16919 -> node16920 [ color="black"]
  node16926 -> node16927 [ color="black"]
  node16928 -> node16929 [ color="black"]
  node16906 -> node16907 [ color="black"]
  node16904 -> node16906 [ color="black"]
  node16913 -> node16914 [ color="black"]
  node16927 -> node16928 [label=<<font color="black">true</font>> color="black"]
  node16927 -> node16932 [label=<<font color="black">false</font>> color="black"]
  node16912 -> node16913 [label=<<font color="black">true</font>> color="black"]
  node16912 -> node16915 [label=<<font color="black">false</font>> color="black"]
  node16911 -> node16912 [ color="black"]
  node16917 -> node16918 [ color="black"]
  node16907 -> node16908 [ color="black"]
  node16909 -> node16910 [ color="black"]
  node16925 -> node16926 [ color="black"]
}
