digraph {
  node5393 [shape=cds, label=<<font color="black">6:access __x5__ = (Initializer &quot;NamedEvaluation&quot; __x4__)</font>> color="black" fillcolor="white" style=filled]
  node5397 [shape=cds, label=<<font color="black">9:app __x7__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node5396 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let defaultValue = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5391 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x2__ true) (= __x3__ true))</font>> color="black" fillcolor="white" style=filled]
  node5387 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let v = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5402 [shape=cds, label=<<font color="black">13:access __x8__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node5400 [shape=diamond, label=<<font color="black">(|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))</font>> color="black" fillcolor="white" style=filled]
  node5395 [shape=cds, label=<<font color="black">8:access __x6__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5381 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5392 [shape=cds, label=<<font color="black">6:app __x4__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node5403 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5398 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let rhsValue = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5404 [shape=cds, label=<<font color="black">14:app __x9__ = (PutValue lref rhsValue)</font>> color="black" fillcolor="white" style=filled]
  node5385 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5390 [shape=cds, label=<<font color="black">7:access __x3__ = (DestructuringAssignmentTarget &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5405 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5383 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5401 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let assignmentPattern = (parse-syntax DestructuringAssignmentTarget &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5384 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5388 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= v undefined))</font>> color="black" fillcolor="white" style=filled]
  node5399 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let rhsValue = v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5386 [shape=cds, label=<<font color="black">3:app __x1__ = (GetV value propertyName)</font>> color="black" fillcolor="white" style=filled]
  node5389 [shape=cds, label=<<font color="black">7:app __x2__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node5382 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5394 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rhsValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5395 -> node5396 [ color="black"]
  node5384 -> node5385 [ color="black"]
  node5404 -> node5405 [ color="black"]
  node5405 -> node5382 [ color="black"]
  node5383 -> node5384 [label=<<font color="black">true</font>> color="black"]
  node5383 -> node5386 [label=<<font color="black">false</font>> color="black"]
  node5401 -> node5402 [ color="black"]
  node5386 -> node5387 [ color="black"]
  node5385 -> node5386 [ color="black"]
  node5393 -> node5394 [ color="black"]
  node5400 -> node5401 [label=<<font color="black">true</font>> color="black"]
  node5400 -> node5404 [label=<<font color="black">false</font>> color="black"]
  node5387 -> node5388 [ color="black"]
  node5396 -> node5397 [ color="black"]
  node5392 -> node5393 [ color="black"]
  node5388 -> node5389 [label=<<font color="black">true</font>> color="black"]
  node5388 -> node5399 [label=<<font color="black">false</font>> color="black"]
  node5397 -> node5398 [ color="black"]
  node5391 -> node5392 [label=<<font color="black">true</font>> color="black"]
  node5391 -> node5395 [label=<<font color="black">false</font>> color="black"]
  node5398 -> node5400 [ color="black"]
  node5403 -> node5404 [ color="black"]
  node5402 -> node5403 [ color="black"]
  node5399 -> node5400 [ color="black"]
  node5394 -> node5400 [ color="black"]
  node5390 -> node5391 [ color="black"]
  node5381 -> node5383 [ color="black"]
  node5389 -> node5390 [ color="black"]
}
