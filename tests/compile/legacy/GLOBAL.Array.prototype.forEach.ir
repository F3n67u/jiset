{
  app __x0__ = (GetArgument argumentsList 0i)
  let callbackfn = __x0__
  app __x1__ = (GetArgument argumentsList 1i)
  let thisArg = __x1__
  app __x2__ = (ToObject this)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let O = __x2__
  app __x3__ = (LengthOfArrayLike O)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let len = __x3__
  app __x4__ = (IsCallable callbackfn)
  if (= __x4__ false) throw INTRINSIC_TypeError else {}
  let k = 0i
  while (< k len) {
    app __x5__ = (ToString k)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
    let Pk = __x5__
    app __x6__ = (HasProperty O Pk)
    if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
    let kPresent = __x6__
    if (= kPresent true) {
      app __x7__ = (Get O Pk)
      if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
      let kValue = __x7__
      app __x8__ = (Call callbackfn thisArg (new [kValue, k, O]))
      if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
      __x8__
    } else {}
    k = (+ k 1i)
  }
  app __x9__ = (WrapCompletion undefined)
  return __x9__
}