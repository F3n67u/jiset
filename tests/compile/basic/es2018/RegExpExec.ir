{
  app __x0__ = (Type R)
  assert (= __x0__ Object)
  app __x1__ = (Type S)
  assert (= __x1__ String)
  app __x2__ = (Get R "exec")
  let exec = [? __x2__]
  app __x3__ = (IsCallable exec)
  if (= __x3__ true) {
    app __x4__ = (Call exec R (new [S]))
    let result = [? __x4__]
    app __x5__ = (Type result)
    if (! (|| (= __x5__ Object) (= __x5__ Null))) throw INTRINSIC_TypeError else {}
    return result
  } else {}
  if (= R.RegExpMatcher absent) throw INTRINSIC_TypeError else {}
  app __x6__ = (RegExpBuiltinExec R S)
  return [? __x6__]
}