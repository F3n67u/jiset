{
  [0] app __x0__ = (ToObject this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [4] {}
  [0] let O = __x0__
  [1] app __x1__ = (LengthOfArrayLike O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [4] {}
  [1] let len = __x1__
  [5] if (== len 0i) {
    [3] app __x2__ = (Set O "length" 0i true)
    [3] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [4] {}
    [3] __x2__
    [4] app __x3__ = (WrapCompletion undefined)
    [4] return __x3__
  } else {
    [6] assert (< 0i len)
    [7] ??? "Let id:{newLen} be 𝔽 ( id:{len} - 1 ) ."
    [8] app __x4__ = (ToString newLen)
    [8] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [4] {}
    [8] let index = __x4__
    [9] app __x5__ = (Get O index)
    [9] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [4] {}
    [9] let element = __x5__
    [10] app __x6__ = (DeletePropertyOrThrow O index)
    [10] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [4] {}
    [10] __x6__
    [11] app __x7__ = (Set O "length" newLen true)
    [11] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [4] {}
    [11] __x7__
    [12] app __x8__ = (WrapCompletion element)
    [12] return __x8__
  }
}