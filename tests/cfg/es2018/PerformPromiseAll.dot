digraph {
  node17715 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17723 [shape=cds, label=<<font color="black">20:app __x6__ = (Invoke constructor &quot;resolve&quot; (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node17720 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node17704 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17721 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17728 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:[? __x8__]</td></tr>
      <tr><td align="left">30:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17698 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17711 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node17714 [shape=cds, label=<<font color="black">14:app __x3__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node17707 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17710 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let nextPromise = [? __x6__]</td></tr>
      <tr><td align="left">21:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.all-resolve-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17697 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17727 [shape=cds, label=<<font color="black">29:app __x8__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node17702 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node17719 [shape=cds, label=<<font color="black">17:app __x5__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node17706 [shape=diamond, label=<<font color="black">__x1__</font>> color="black" fillcolor="white" style=filled]
  node17699 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17726 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let resolveElement = __x7__</td></tr>
      <tr><td align="left">23:resolveElement.AlreadyCalled = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">24:resolveElement.Index = index</td></tr>
      <tr><td align="left">25:resolveElement.Values = values</td></tr>
      <tr><td align="left">26:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">27:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">28:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17709 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node17716 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17703 [shape=cds, label=<<font color="black">6:app __x0__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17700 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? nextValue]</td></tr>
      <tr><td align="left">19:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17705 [shape=cds, label=<<font color="black">7:app __x1__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node17712 [shape=cds, label=<<font color="black">13:app __x2__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node17725 [shape=cds, label=<<font color="black">22:app __x7__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17708 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17713 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let valuesArray = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17696 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17717 [shape=cds, label=<<font color="black">16:app __x4__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node17718 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextValue = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17701 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17728 -> node17702 [ color="black"]
  node17715 -> node17716 [ color="black"]
  node17713 -> node17714 [ color="black"]
  node17708 -> node17709 [ color="black"]
  node17725 -> node17726 [ color="black"]
  node17712 -> node17713 [ color="black"]
  node17700 -> node17701 [ color="black"]
  node17702 -> node17703 [label=<<font color="black">true</font>> color="black"]
  node17702 -> node17697 [label=<<font color="black">false</font>> color="black"]
  node17727 -> node17728 [ color="black"]
  node17698 -> node17699 [ color="black"]
  node17726 -> node17727 [ color="black"]
  node17707 -> node17708 [ color="black"]
  node17704 -> node17705 [ color="black"]
  node17706 -> node17707 [label=<<font color="black">true</font>> color="black"]
  node17706 -> node17708 [label=<<font color="black">false</font>> color="black"]
  node17710 -> node17711 [ color="black"]
  node17722 -> node17723 [ color="black"]
  node17718 -> node17719 [ color="black"]
  node17701 -> node17702 [ color="black"]
  node17716 -> node17717 [ color="black"]
  node17720 -> node17721 [label=<<font color="black">true</font>> color="black"]
  node17720 -> node17722 [label=<<font color="black">false</font>> color="black"]
  node17705 -> node17706 [ color="black"]
  node17714 -> node17715 [ color="black"]
  node17699 -> node17700 [ color="black"]
  node17717 -> node17718 [ color="black"]
  node17711 -> node17712 [label=<<font color="black">true</font>> color="black"]
  node17711 -> node17716 [label=<<font color="black">false</font>> color="black"]
  node17724 -> node17725 [ color="black"]
  node17696 -> node17698 [ color="black"]
  node17703 -> node17704 [ color="black"]
  node17709 -> node17710 [label=<<font color="black">true</font>> color="black"]
  node17709 -> node17717 [label=<<font color="black">false</font>> color="black"]
  node17719 -> node17720 [ color="black"]
  node17721 -> node17722 [ color="black"]
  node17723 -> node17724 [ color="black"]
}
