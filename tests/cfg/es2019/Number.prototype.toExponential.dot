digraph {
  node11998 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:s = &quot;-&quot;</td></tr>
      <tr><td align="left">7:x = (- x)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12013 [shape=diamond, label=<<font color="black">(&lt; 0i e)</font>> color="black" fillcolor="white" style=filled]
  node11994 [shape=diamond, label=<<font color="black">(= x NaN)</font>> color="black" fillcolor="white" style=filled]
  node12009 [shape=diamond, label=<<font color="black">(! (== f 0i))</font>> color="black" fillcolor="white" style=filled]
  node12003 [shape=diamond, label=<<font color="black">(== x 0i)</font>> color="black" fillcolor="white" style=filled]
  node11991 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let x = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12008 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;Let id:{m} be the String value consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11993 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let f = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12012 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let c = &quot;+&quot;</td></tr>
      <tr><td align="left">25:let d = &quot;0&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12016 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:??? &quot;Let id:{d} be the String value consisting of the digits of the decimal representation of id:{e} ( in order , with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12011 [shape=diamond, label=<<font color="black">(== e 0i)</font>> color="black" fillcolor="white" style=filled]
  node11996 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let s = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12015 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let c = &quot;-&quot;</td></tr>
      <tr><td align="left">30:e = (- e)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12000 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (+ s &quot;Infinity&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12006 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{e} and id:{n} be integers such that 10 sup:{id:{f}} &le; id:{n} &lt; 10 sup:{id:{f} + 1} and for which the exact mathematical value of id:{n} &times; 10 sup:{id:{e} - id:{f}} - id:{x} is as close to zero as possible . If there are two such sets of id:{e} and id:{n} , pick the id:{e} and id:{n} for which id:{n} &times; 10 sup:{id:{e} - id:{f}} is larger .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12001 [shape=diamond, label=<<font color="black">(|| (&lt; f 0i) (&lt; 100i f))</font>> color="black" fillcolor="white" style=filled]
  node12014 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let c = &quot;+&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11995 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;NaN&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12010 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:??? &quot;Let id:{a} be the first code unit of id:{m} , and let id:{b} be the remaining id:{f} code units of id:{m} .&quot;</td></tr>
      <tr><td align="left">22:m = (+ (+ a &quot;.&quot;) b)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11999 [shape=diamond, label=<<font color="black">(== x Infinity)</font>> color="black" fillcolor="white" style=filled]
  node12004 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:??? &quot;Let id:{m} be the String value consisting of id:{f} + 1 occurrences of the code unit 0x0030 ( DIGIT ZERO ) .&quot;</td></tr>
      <tr><td align="left">13:let e = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12005 [shape=diamond, label=<<font color="black">(! (= fractionDigits undefined))</font>> color="black" fillcolor="white" style=filled]
  node11997 [shape=diamond, label=<<font color="black">(&lt; x 0i)</font>> color="black" fillcolor="white" style=filled]
  node11987 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11989 [shape=cds, label=<<font color="black">app fractionDigits = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11988 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12002 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12007 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{e} , id:{n} , and id:{f} be integers such that id:{f} &ge; 0 , 10 sup:{id:{f}} &le; id:{n} &lt; 10 sup:{id:{f} + 1} , the Number value for id:{n} &times; 10 sup:{id:{e} - id:{f}} is id:{x} , and id:{f} is as small as possible . Note that the decimal representation of id:{n} has id:{f} + 1 digits , id:{n} is not divisible by 10 , and the least significant digit of id:{n} is not necessarily uniquely determined by these criteria .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11990 [shape=cds, label=<<font color="black">0:app __x0__ = (thisNumberValue this)</font>> color="black" fillcolor="white" style=filled]
  node11992 [shape=cds, label=<<font color="black">1:app __x1__ = (ToInteger fractionDigits)</font>> color="black" fillcolor="white" style=filled]
  node12017 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:m = (+ (+ (+ m &quot;e&quot;) c) d)</td></tr>
      <tr><td align="left">33:return (+ s m)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12007 -> node12008 [ color="black"]
  node11987 -> node11989 [ color="black"]
  node12014 -> node12016 [ color="black"]
  node12001 -> node12002 [label=<<font color="black">true</font>> color="black"]
  node12001 -> node12003 [label=<<font color="black">false</font>> color="black"]
  node11995 -> node11996 [ color="black"]
  node11993 -> node11994 [ color="black"]
  node12003 -> node12004 [label=<<font color="black">true</font>> color="black"]
  node12003 -> node12005 [label=<<font color="black">false</font>> color="black"]
  node12016 -> node12017 [ color="black"]
  node12015 -> node12016 [ color="black"]
  node11999 -> node12000 [label=<<font color="black">true</font>> color="black"]
  node11999 -> node12001 [label=<<font color="black">false</font>> color="black"]
  node12004 -> node12009 [ color="black"]
  node12000 -> node12001 [ color="black"]
  node12012 -> node12017 [ color="black"]
  node12009 -> node12010 [label=<<font color="black">true</font>> color="black"]
  node12009 -> node12011 [label=<<font color="black">false</font>> color="black"]
  node11991 -> node11992 [ color="black"]
  node12017 -> node11988 [ color="black"]
  node11996 -> node11997 [ color="black"]
  node12006 -> node12008 [ color="black"]
  node12013 -> node12014 [label=<<font color="black">true</font>> color="black"]
  node12013 -> node12015 [label=<<font color="black">false</font>> color="black"]
  node12010 -> node12011 [ color="black"]
  node12008 -> node12009 [ color="black"]
  node11997 -> node11998 [label=<<font color="black">true</font>> color="black"]
  node11997 -> node11999 [label=<<font color="black">false</font>> color="black"]
  node11994 -> node11995 [label=<<font color="black">true</font>> color="black"]
  node11994 -> node11996 [label=<<font color="black">false</font>> color="black"]
  node11998 -> node11999 [ color="black"]
  node12011 -> node12012 [label=<<font color="black">true</font>> color="black"]
  node12011 -> node12013 [label=<<font color="black">false</font>> color="black"]
  node11992 -> node11993 [ color="black"]
  node12002 -> node12003 [ color="black"]
  node12005 -> node12006 [label=<<font color="black">true</font>> color="black"]
  node12005 -> node12007 [label=<<font color="black">false</font>> color="black"]
  node11989 -> node11990 [ color="black"]
  node11990 -> node11991 [ color="black"]
}
