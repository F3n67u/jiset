digraph {
  node2565 [shape=cds, label=<<font color="black">1:app __x1__ = (targetFunction.GetPrototypeOf targetFunction)</font>> color="black" fillcolor="white" style=filled]
  node2561 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2566 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let proto = [? __x1__]</td></tr>
      <tr><td align="left">2:??? &quot;Let id:{internalSlotsList} be the internal slots listed in link:{unhandled: table-28} , plus [ [ Prototype ] ] and [ [ Extensible ] ] .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2570 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node2568 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let obj = [! __x2__]</td></tr>
      <tr><td align="left">4:obj.Prototype = proto</td></tr>
      <tr><td align="left">5:obj.Call = BoundFunctionExoticObjectDOTCall</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2564 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2567 [shape=cds, label=<<font color="black">3:app __x2__ = (MakeBasicObject internalSlotsList)</font>> color="black" fillcolor="white" style=filled]
  node2569 [shape=cds, label=<<font color="black">6:app __x3__ = (IsConstructor targetFunction)</font>> color="black" fillcolor="white" style=filled]
  node2572 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:obj.BoundTargetFunction = targetFunction</td></tr>
      <tr><td align="left">9:obj.BoundThis = boundThis</td></tr>
      <tr><td align="left">10:obj.BoundArguments = boundArgs</td></tr>
      <tr><td align="left">11:return obj</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2563 [shape=cds, label=<<font color="black">0:app __x0__ = (Type targetFunction)</font>> color="black" fillcolor="white" style=filled]
  node2562 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2571 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">obj.Construct = BoundFunctionExoticObjectDOTConstruct</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2567 -> node2568 [ color="black"]
  node2572 -> node2562 [ color="black"]
  node2566 -> node2567 [ color="black"]
  node2569 -> node2570 [ color="black"]
  node2571 -> node2572 [ color="black"]
  node2564 -> node2565 [ color="black"]
  node2568 -> node2569 [ color="black"]
  node2565 -> node2566 [ color="black"]
  node2570 -> node2571 [label=<<font color="black">true</font>> color="black"]
  node2570 -> node2572 [label=<<font color="black">false</font>> color="black"]
  node2563 -> node2564 [ color="black"]
  node2561 -> node2563 [ color="black"]
}
