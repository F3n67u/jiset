<algorithm>
  <param>perIterationBindings</param>
  <step-list>
    <step>If <id>perIterationBindings</id> has any elements, then     <step-list>
      <step>Let <id>lastIterationEnv</id> be the running execution context 's LexicalEnvironment.</step>
      <step>Let <id>lastIterationEnvRec</id> be <id>lastIterationEnv</id> 's EnvironmentRecord .</step>
      <step>Let <id>outer</id> be <id>lastIterationEnv</id> 's outer environment reference.</step>
      <step>Assert : <id>outer</id> is not <value>null</value> .</step>
      <step>Let <id>thisIterationEnv</id> be NewDeclarativeEnvironment ( <id>outer</id> ).</step>
      <step>Let <id>thisIterationEnvRec</id> be <id>thisIterationEnv</id> 's EnvironmentRecord .</step>
      <step>For each element <id>bn</id> of <id>perIterationBindings</id> , do       <step-list>
        <step>Perform ! <id>thisIterationEnvRec</id> .CreateMutableBinding( <id>bn</id> , <value>false</value> ).</step>
        <step>Let <id>lastValue</id> be ? <id>lastIterationEnvRec</id> .GetBindingValue( <id>bn</id> , <value>true</value> ).</step>
        <step>Perform <id>thisIterationEnvRec</id> .InitializeBinding( <id>bn</id> , <id>lastValue</id> ).</step>
      </step-list></step>
      <step>Set the running execution context 's LexicalEnvironment to <id>thisIterationEnv</id> .</step>
    </step-list></step>
    <step>Return <value>undefined</value> .</step>
  </step-list>
</algorithm>