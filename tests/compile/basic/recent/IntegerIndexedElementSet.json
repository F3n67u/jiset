["Assert", ":", {
  "id": "O"
}, "is", "an", "Integer", "-", "Indexed", "exotic", "object", ".", {
  "k": 0
}, "If", {
  "id": "O"
}, ".", "[", "[", "ContentType", "]", "]", "is", {
  "const": "BigInt"
}, ",", "let", {
  "id": "numValue"
}, "be", "?", "ToBigInt", "(", {
  "id": "value"
}, ")", ".", {
  "k": 1
}, "Otherwise", ",", "let", {
  "id": "numValue"
}, "be", "?", "ToNumber", "(", {
  "id": "value"
}, ")", ".", {
  "k": 2
}, "If", "!", "IsValidIntegerIndex", "(", {
  "id": "O"
}, ",", {
  "id": "index"
}, ")", "is", {
  "value": "true"
}, ",", "then", {
  "in": null
}, "Let", {
  "id": "offset"
}, "be", {
  "id": "O"
}, ".", "[", "[", "ByteOffset", "]", "]", ".", {
  "k": 4
}, "Let", {
  "id": "arrayTypeName"
}, "be", "the", "String", "value", "of", {
  "id": "O"
}, ".", "[", "[", "TypedArrayName", "]", "]", ".", {
  "k": 5
}, "Let", {
  "id": "elementSize"
}, "be", "the", "Element", "Size", "value", "specified", "in", {
  "link": ""
}, "for", {
  "id": "arrayTypeName"
}, ".", {
  "k": 6
}, "Let", {
  "id": "indexedPosition"
}, "be", "(", "ℝ", "(", {
  "id": "index"
}, ")", "×", {
  "id": "elementSize"
}, ")", "+", {
  "id": "offset"
}, ".", {
  "k": 7
}, "Let", {
  "id": "elementType"
}, "be", "the", "Element", "Type", "value", "in", {
  "link": ""
}, "for", {
  "id": "arrayTypeName"
}, ".", {
  "k": 8
}, "Perform", "SetValueInBuffer", "(", {
  "id": "O"
}, ".", "[", "[", "ViewedArrayBuffer", "]", "]", ",", {
  "id": "indexedPosition"
}, ",", {
  "id": "elementType"
}, ",", {
  "id": "numValue"
}, ",", {
  "value": "true"
}, ",", {
  "const": "Unordered"
}, ")", ".", {
  "k": 9
}, {
  "out": null
}, {
  "k": 3
}, "Return", "NormalCompletion", "(", {
  "value": "undefined"
}, ")", ".", {
  "k": 10
}]