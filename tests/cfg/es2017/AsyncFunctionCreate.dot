digraph {
  node16713 [shape=cds, label=<<font color="black">1:app __x0__ = (FunctionAllocate functionPrototype Strict &quot;async&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16712 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let functionPrototype = INTRINSIC_AsyncFunctionPrototype</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16716 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16715 [shape=cds, label=<<font color="black">2:app __x1__ = (FunctionInitialize F kind parameters body Scope)</font>> color="black" fillcolor="white" style=filled]
  node16710 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16714 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let F = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16711 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16715 -> node16716 [ color="black"]
  node16712 -> node16713 [ color="black"]
  node16716 -> node16711 [ color="black"]
  node16714 -> node16715 [ color="black"]
  node16713 -> node16714 [ color="black"]
  node16710 -> node16712 [ color="black"]
}
