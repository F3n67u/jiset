digraph {
  node12629 [shape=cds, label=<<font color="black">3:app __x3__ = (ToNumber position)</font>> color="black" fillcolor="white" style=filled]
  node12634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12621 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12625 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12638 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let start = __x6__</td></tr>
      <tr><td align="left">7:let searchLen = searchStr.length</td></tr>
      <tr><td align="left">8:??? &quot;Return the largest possible nonnegative integer id:{k} not larger than id:{start} such that id:{k} + id:{searchLen} is not greater than id:{len} , and for all nonnegative integers id:{j} less than id:{searchLen} , the code unit at index id:{k} + id:{j} of id:{S} is the same as the code unit at index id:{j} of id:{searchStr} ; but if there is no such integer id:{k} , return the value - 1 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12623 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12622 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12628 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let searchStr = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12636 [shape=cds, label=<<font color="black">6:app __x5__ = (max pos 0i)</font>> color="black" fillcolor="white" style=filled]
  node12624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12619 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12631 [shape=diamond, label=<<font color="black">(= numPos NaN)</font>> color="black" fillcolor="white" style=filled]
  node12627 [shape=cds, label=<<font color="black">2:app __x2__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node12630 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let numPos = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12633 [shape=cds, label=<<font color="black">app __x4__ = (ToInteger numPos)</font>> color="black" fillcolor="white" style=filled]
  node12620 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12626 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12637 [shape=cds, label=<<font color="black">6:app __x6__ = (min __x5__ len)</font>> color="black" fillcolor="white" style=filled]
  node12622 -> node12623 [ color="black"]
  node12628 -> node12629 [ color="black"]
  node12621 -> node12622 [ color="black"]
  node12619 -> node12621 [ color="black"]
  node12636 -> node12637 [ color="black"]
  node12630 -> node12631 [ color="black"]
  node12626 -> node12627 [ color="black"]
  node12631 -> node12632 [label=<<font color="black">true</font>> color="black"]
  node12631 -> node12633 [label=<<font color="black">false</font>> color="black"]
  node12637 -> node12638 [ color="black"]
  node12623 -> node12624 [ color="black"]
  node12638 -> node12620 [ color="black"]
  node12625 -> node12626 [ color="black"]
  node12632 -> node12635 [ color="black"]
  node12635 -> node12636 [ color="black"]
  node12633 -> node12634 [ color="black"]
  node12634 -> node12635 [ color="black"]
  node12629 -> node12630 [ color="black"]
  node12627 -> node12628 [ color="black"]
  node12624 -> node12625 [ color="black"]
}
