digraph {
  node11250 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11247 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11242 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11245 [shape=diamond, label=<<font color="black">(! (|| (= NewTarget undefined) (= NewTarget GLOBAL_context.Function)))</font>> color="black" fillcolor="white" style=filled]
  node11252 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11246 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_ObjectPrototype)</font>> color="black" fillcolor="white" style=filled]
  node11251 [shape=cds, label=<<font color="black">3:app __x2__ = (ToObject value)</font>> color="black" fillcolor="white" style=filled]
  node11244 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11249 [shape=cds, label=<<font color="black">app __x1__ = (ObjectCreate INTRINSIC_ObjectPrototype)</font>> color="black" fillcolor="white" style=filled]
  node11243 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11248 [shape=diamond, label=<<font color="black">(|| (|| (= value null) (= value undefined)) (= value absent))</font>> color="black" fillcolor="white" style=filled]
  node11244 -> node11245 [ color="black"]
  node11252 -> node11243 [ color="black"]
  node11251 -> node11252 [ color="black"]
  node11245 -> node11246 [label=<<font color="black">true</font>> color="black"]
  node11245 -> node11248 [label=<<font color="black">false</font>> color="black"]
  node11250 -> node11251 [ color="black"]
  node11248 -> node11249 [label=<<font color="black">true</font>> color="black"]
  node11248 -> node11251 [label=<<font color="black">false</font>> color="black"]
  node11242 -> node11244 [ color="black"]
  node11249 -> node11250 [ color="black"]
  node11247 -> node11248 [ color="black"]
  node11246 -> node11247 [ color="black"]
}
