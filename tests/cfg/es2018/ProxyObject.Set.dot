digraph {
  node3089 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3093 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3097 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node3090 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3094 [shape=cds, label=<<font color="black">7:app __x3__ = (target.Set target P V Receiver)</font>> color="black" fillcolor="white" style=filled]
  node3111 [shape=diamond, label=<<font color="black">(= targetDesc.Set undefined)</font>> color="black" fillcolor="white" style=filled]
  node3086 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3091 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3110 [shape=diamond, label=<<font color="black">(= __x9__ true)</font>> color="black" fillcolor="white" style=filled]
  node3112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3107 [shape=diamond, label=<<font color="black">(= __x8__ false)</font>> color="black" fillcolor="white" style=filled]
  node3092 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3113 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3096 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P, V, Receiver]))</font>> color="black" fillcolor="white" style=filled]
  node3098 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3103 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= targetDesc undefined)) (= targetDesc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node3088 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3099 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node3084 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3105 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x7__ true) (= targetDesc.Writable false))</font>> color="black" fillcolor="white" style=filled]
  node3102 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let targetDesc = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3087 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3109 [shape=cds, label=<<font color="black">14:app __x9__ = (IsAccessorDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3083 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3101 [shape=cds, label=<<font color="black">10:app __x6__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3106 [shape=cds, label=<<font color="black">13:app __x8__ = (SameValue V targetDesc.Value)</font>> color="black" fillcolor="white" style=filled]
  node3104 [shape=cds, label=<<font color="black">12:app __x7__ = (IsDataDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3085 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node3095 -> node3096 [ color="black"]
  node3096 -> node3097 [ color="black"]
  node3108 -> node3109 [ color="black"]
  node3100 -> node3101 [ color="black"]
  node3098 -> node3099 [ color="black"]
  node3111 -> node3112 [label=<<font color="black">true</font>> color="black"]
  node3111 -> node3113 [label=<<font color="black">false</font>> color="black"]
  node3092 -> node3093 [ color="black"]
  node3113 -> node3084 [ color="black"]
  node3106 -> node3107 [ color="black"]
  node3093 -> node3094 [label=<<font color="black">true</font>> color="black"]
  node3093 -> node3096 [label=<<font color="black">false</font>> color="black"]
  node3087 -> node3088 [label=<<font color="black">true</font>> color="black"]
  node3087 -> node3089 [label=<<font color="black">false</font>> color="black"]
  node3105 -> node3106 [label=<<font color="black">true</font>> color="black"]
  node3105 -> node3109 [label=<<font color="black">false</font>> color="black"]
  node3089 -> node3090 [ color="black"]
  node3104 -> node3105 [ color="black"]
  node3110 -> node3111 [label=<<font color="black">true</font>> color="black"]
  node3110 -> node3113 [label=<<font color="black">false</font>> color="black"]
  node3107 -> node3108 [label=<<font color="black">true</font>> color="black"]
  node3107 -> node3109 [label=<<font color="black">false</font>> color="black"]
  node3091 -> node3092 [ color="black"]
  node3099 -> node3100 [label=<<font color="black">true</font>> color="black"]
  node3099 -> node3101 [label=<<font color="black">false</font>> color="black"]
  node3103 -> node3104 [label=<<font color="black">true</font>> color="black"]
  node3103 -> node3113 [label=<<font color="black">false</font>> color="black"]
  node3112 -> node3113 [ color="black"]
  node3094 -> node3095 [ color="black"]
  node3102 -> node3103 [ color="black"]
  node3101 -> node3102 [ color="black"]
  node3109 -> node3110 [ color="black"]
  node3097 -> node3098 [ color="black"]
  node3088 -> node3089 [ color="black"]
  node3085 -> node3086 [ color="black"]
  node3086 -> node3087 [ color="black"]
  node3090 -> node3091 [ color="black"]
  node3083 -> node3085 [ color="black"]
}
