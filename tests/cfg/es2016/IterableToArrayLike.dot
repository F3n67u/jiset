digraph {
  node14305 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let nextValue = [? __x3__]</td></tr>
      <tr><td align="left">9:append nextValue -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14296 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let usingIterator = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14301 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iterator)</font>> color="black" fillcolor="white" style=filled]
  node14302 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14303 [shape=diamond, label=<<font color="black">(! (= next false))</font>> color="black" fillcolor="white" style=filled]
  node14307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14294 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14304 [shape=cds, label=<<font color="black">8:app __x3__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node14297 [shape=diamond, label=<<font color="black">(! (= usingIterator undefined))</font>> color="black" fillcolor="white" style=filled]
  node14306 [shape=cds, label=<<font color="black">10:app __x4__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node14300 [shape=diamond, label=<<font color="black">(! (= next false))</font>> color="black" fillcolor="white" style=filled]
  node14293 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14298 [shape=cds, label=<<font color="black">2:app __x1__ = (GetIterator items usingIterator)</font>> color="black" fillcolor="white" style=filled]
  node14309 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14299 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = [? __x1__]</td></tr>
      <tr><td align="left">3:let values = (new [])</td></tr>
      <tr><td align="left">4:let next = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14308 [shape=cds, label=<<font color="black">12:app __x5__ = (ToObject items)</font>> color="black" fillcolor="white" style=filled]
  node14295 [shape=cds, label=<<font color="black">0:app __x0__ = (GetMethod items SYMBOL_iterator)</font>> color="black" fillcolor="white" style=filled]
  node14300 -> node14301 [label=<<font color="black">true</font>> color="black"]
  node14300 -> node14306 [label=<<font color="black">false</font>> color="black"]
  node14303 -> node14304 [label=<<font color="black">true</font>> color="black"]
  node14303 -> node14300 [label=<<font color="black">false</font>> color="black"]
  node14295 -> node14296 [ color="black"]
  node14305 -> node14300 [ color="black"]
  node14297 -> node14298 [label=<<font color="black">true</font>> color="black"]
  node14297 -> node14308 [label=<<font color="black">false</font>> color="black"]
  node14298 -> node14299 [ color="black"]
  node14293 -> node14295 [ color="black"]
  node14306 -> node14307 [ color="black"]
  node14309 -> node14294 [ color="black"]
  node14299 -> node14300 [ color="black"]
  node14301 -> node14302 [ color="black"]
  node14302 -> node14303 [ color="black"]
  node14307 -> node14308 [ color="black"]
  node14304 -> node14305 [ color="black"]
  node14308 -> node14309 [ color="black"]
  node14296 -> node14297 [ color="black"]
}
