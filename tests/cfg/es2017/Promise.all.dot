digraph {
  node16449 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16452 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16455 [shape=diamond, label=<<font color="black">(is-completion iterator)</font>> color="black" fillcolor="white" style=filled]
  node16472 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16451 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16445 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16457 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterator = iterator.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16470 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node16453 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16458 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iterator.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16462 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iterator</td></tr>
      <tr><td align="left">5:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; iterator, &quot;Done&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16447 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16466 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node16444 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16459 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16456 [shape=diamond, label=<<font color="black">(= iterator.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16469 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16448 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node16463 [shape=cds, label=<<font color="black">6:app __x4__ = (PerformPromiseAll iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node16476 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16460 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16465 [shape=cds, label=<<font color="black">7:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node16468 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iterator result)</font>> color="black" fillcolor="white" style=filled]
  node16473 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16464 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16477 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16454 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iterator = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16471 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16474 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16467 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node16446 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16461 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16478 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16475 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16450 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16473 -> node16474 [ color="black"]
  node16466 -> node16467 [label=<<font color="black">true</font>> color="black"]
  node16466 -> node16478 [label=<<font color="black">false</font>> color="black"]
  node16458 -> node16459 [ color="black"]
  node16476 -> node16477 [ color="black"]
  node16470 -> node16471 [label=<<font color="black">true</font>> color="black"]
  node16470 -> node16477 [label=<<font color="black">false</font>> color="black"]
  node16461 -> node16462 [ color="black"]
  node16457 -> node16462 [ color="black"]
  node16467 -> node16468 [label=<<font color="black">true</font>> color="black"]
  node16467 -> node16470 [label=<<font color="black">false</font>> color="black"]
  node16453 -> node16454 [ color="black"]
  node16444 -> node16446 [ color="black"]
  node16460 -> node16461 [ color="black"]
  node16455 -> node16456 [label=<<font color="black">true</font>> color="black"]
  node16455 -> node16462 [label=<<font color="black">false</font>> color="black"]
  node16462 -> node16463 [ color="black"]
  node16468 -> node16469 [ color="black"]
  node16459 -> node16460 [label=<<font color="black">true</font>> color="black"]
  node16459 -> node16461 [label=<<font color="black">false</font>> color="black"]
  node16456 -> node16457 [label=<<font color="black">true</font>> color="black"]
  node16456 -> node16458 [label=<<font color="black">false</font>> color="black"]
  node16469 -> node16470 [ color="black"]
  node16478 -> node16445 [ color="black"]
  node16451 -> node16452 [ color="black"]
  node16454 -> node16455 [ color="black"]
  node16447 -> node16448 [ color="black"]
  node16448 -> node16449 [ color="black"]
  node16475 -> node16476 [ color="black"]
  node16474 -> node16475 [label=<<font color="black">true</font>> color="black"]
  node16474 -> node16476 [label=<<font color="black">false</font>> color="black"]
  node16477 -> node16478 [ color="black"]
  node16463 -> node16464 [ color="black"]
  node16452 -> node16453 [ color="black"]
  node16465 -> node16466 [ color="black"]
  node16450 -> node16451 [ color="black"]
  node16464 -> node16465 [ color="black"]
  node16449 -> node16450 [label=<<font color="black">true</font>> color="black"]
  node16449 -> node16451 [label=<<font color="black">false</font>> color="black"]
  node16471 -> node16472 [label=<<font color="black">true</font>> color="black"]
  node16471 -> node16473 [label=<<font color="black">false</font>> color="black"]
  node16446 -> node16447 [ color="black"]
  node16472 -> node16477 [ color="black"]
}
