digraph {
  node19081 [shape=cds, label=<<font color="black">app handler = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node19078 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19082 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node19083 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19080 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node19079 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19084 [shape=cds, label=<<font color="black">1:app __x0__ = (ProxyCreate target handler)</font>> color="black" fillcolor="white" style=filled]
  node19085 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19081 -> node19082 [ color="black"]
  node19078 -> node19080 [ color="black"]
  node19084 -> node19085 [ color="black"]
  node19083 -> node19084 [ color="black"]
  node19082 -> node19083 [label=<<font color="black">true</font>> color="black"]
  node19082 -> node19084 [label=<<font color="black">false</font>> color="black"]
  node19080 -> node19081 [ color="black"]
  node19085 -> node19079 [ color="black"]
}
