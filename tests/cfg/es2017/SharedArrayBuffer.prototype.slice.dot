digraph {
  node15651 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node15683 [shape=diamond, label=<<font color="black">(&lt; new.ArrayBufferByteLength newLen)</font>> color="black" fillcolor="white" style=filled]
  node15684 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15687 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x12__</td></tr>
      <tr><td align="left">19:return new</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15669 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15646 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15681 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData O.ArrayBufferData)</font>> color="black" fillcolor="white" style=filled]
  node15668 [shape=cds, label=<<font color="black">app __x7__ = (min relativeEnd len)</font>> color="black" fillcolor="white" style=filled]
  node15657 [shape=cds, label=<<font color="black">app __x3__ = (max (+ len relativeStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node15677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15685 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let fromBuf = O.ArrayBufferData</td></tr>
      <tr><td align="left">17:let toBuf = new.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15662 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15643 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15666 [shape=cds, label=<<font color="black">app __x6__ = (max (+ len relativeEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node15671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let newLen = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15656 [shape=diamond, label=<<font color="black">(&lt; relativeStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node15674 [shape=cds, label=<<font color="black">11:app __x10__ = (Construct ctor (new [newLen]))</font>> color="black" fillcolor="white" style=filled]
  node15648 [shape=diamond, label=<<font color="black">(= O.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node15663 [shape=cds, label=<<font color="black">app __x5__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node15680 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15659 [shape=cds, label=<<font color="black">app __x4__ = (min relativeStart len)</font>> color="black" fillcolor="white" style=filled]
  node15678 [shape=cds, label=<<font color="black">13:app __x11__ = (IsSharedArrayBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node15655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let relativeStart = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15642 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15682 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15650 [shape=cds, label=<<font color="black">3:app __x1__ = (IsSharedArrayBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node15665 [shape=diamond, label=<<font color="black">(&lt; relativeEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node15670 [shape=cds, label=<<font color="black">9:app __x8__ = (max (- final first) 0i)</font>> color="black" fillcolor="white" style=filled]
  node15675 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let new = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15660 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15641 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15649 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15686 [shape=cds, label=<<font color="black">18:app __x12__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)</font>> color="black" fillcolor="white" style=filled]
  node15654 [shape=cds, label=<<font color="black">5:app __x2__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node15645 [shape=cds, label=<<font color="black">1:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node15661 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node15640 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15676 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node15644 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15672 [shape=cds, label=<<font color="black">10:app __x9__ = (SpeciesConstructor O INTRINSIC_SharedArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node15667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let len = O.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15679 [shape=diamond, label=<<font color="black">(= __x11__ false)</font>> color="black" fillcolor="white" style=filled]
  node15658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15673 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let ctor = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15665 -> node15666 [label=<<font color="black">true</font>> color="black"]
  node15665 -> node15668 [label=<<font color="black">false</font>> color="black"]
  node15652 -> node15653 [ color="black"]
  node15647 -> node15648 [ color="black"]
  node15672 -> node15673 [ color="black"]
  node15679 -> node15680 [label=<<font color="black">true</font>> color="black"]
  node15679 -> node15681 [label=<<font color="black">false</font>> color="black"]
  node15654 -> node15655 [ color="black"]
  node15642 -> node15643 [ color="black"]
  node15643 -> node15644 [ color="black"]
  node15649 -> node15650 [ color="black"]
  node15670 -> node15671 [ color="black"]
  node15645 -> node15646 [ color="black"]
  node15653 -> node15654 [ color="black"]
  node15680 -> node15681 [ color="black"]
  node15662 -> node15665 [ color="black"]
  node15658 -> node15661 [ color="black"]
  node15668 -> node15669 [ color="black"]
  node15673 -> node15674 [ color="black"]
  node15684 -> node15685 [ color="black"]
  node15671 -> node15672 [ color="black"]
  node15648 -> node15649 [label=<<font color="black">true</font>> color="black"]
  node15648 -> node15650 [label=<<font color="black">false</font>> color="black"]
  node15678 -> node15679 [ color="black"]
  node15687 -> node15641 [ color="black"]
  node15676 -> node15677 [label=<<font color="black">true</font>> color="black"]
  node15676 -> node15678 [label=<<font color="black">false</font>> color="black"]
  node15667 -> node15670 [ color="black"]
  node15682 -> node15683 [ color="black"]
  node15650 -> node15651 [ color="black"]
  node15661 -> node15662 [label=<<font color="black">true</font>> color="black"]
  node15661 -> node15663 [label=<<font color="black">false</font>> color="black"]
  node15669 -> node15670 [ color="black"]
  node15681 -> node15682 [label=<<font color="black">true</font>> color="black"]
  node15681 -> node15683 [label=<<font color="black">false</font>> color="black"]
  node15644 -> node15645 [ color="black"]
  node15659 -> node15660 [ color="black"]
  node15660 -> node15661 [ color="black"]
  node15651 -> node15652 [label=<<font color="black">true</font>> color="black"]
  node15651 -> node15653 [label=<<font color="black">false</font>> color="black"]
  node15657 -> node15658 [ color="black"]
  node15655 -> node15656 [ color="black"]
  node15686 -> node15687 [ color="black"]
  node15675 -> node15676 [ color="black"]
  node15666 -> node15667 [ color="black"]
  node15685 -> node15686 [ color="black"]
  node15656 -> node15657 [label=<<font color="black">true</font>> color="black"]
  node15656 -> node15659 [label=<<font color="black">false</font>> color="black"]
  node15677 -> node15678 [ color="black"]
  node15674 -> node15675 [ color="black"]
  node15683 -> node15684 [label=<<font color="black">true</font>> color="black"]
  node15683 -> node15685 [label=<<font color="black">false</font>> color="black"]
  node15663 -> node15664 [ color="black"]
  node15664 -> node15665 [ color="black"]
  node15646 -> node15647 [label=<<font color="black">true</font>> color="black"]
  node15646 -> node15648 [label=<<font color="black">false</font>> color="black"]
  node15640 -> node15642 [ color="black"]
}
