{
  let O = this
  app __x0__ = (RequireInternalSlot O "ArrayBufferData")
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  __x0__
  app __x1__ = (IsSharedArrayBuffer O)
  if (= __x1__ true) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else {}
  app __x3__ = (IsDetachedBuffer O)
  if (= __x3__ true) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else {}
  let len = O.ArrayBufferByteLength
  app __x5__ = (ToIntegerOrInfinity start)
  if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
  let relativeStart = __x5__
  ??? "If id:{relativeStart} is - ∞ , let id:{first} be 0 ."
  ??? "Else if id:{relativeStart} < 0 , let id:{first} be max ( id:{len} + id:{relativeStart} , 0 ) ."
  ??? "Else , let id:{first} be min ( id:{relativeStart} , id:{len} ) ."
  if (= end undefined) let relativeEnd = len else {
    app __x6__ = (ToIntegerOrInfinity end)
    if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
    let relativeEnd = __x6__
  }
  ??? "If id:{relativeEnd} is - ∞ , let id:{final} be 0 ."
  ??? "Else if id:{relativeEnd} < 0 , let id:{final} be max ( id:{len} + id:{relativeEnd} , 0 ) ."
  ??? "Else , let id:{final} be min ( id:{relativeEnd} , id:{len} ) ."
  app __x7__ = (max (- final first) 0i)
  let newLen = __x7__
  app __x8__ = (SpeciesConstructor O INTRINSIC_ArrayBuffer)
  if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
  let ctor = __x8__
  app __x9__ = (Construct ctor (new [newLen]))
  if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
  let new = __x9__
  app __x10__ = (RequireInternalSlot new "ArrayBufferData")
  if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
  __x10__
  app __x11__ = (IsSharedArrayBuffer new)
  if (= __x11__ true) {
    app __x12__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x12__
  } else {}
  app __x13__ = (IsDetachedBuffer new)
  if (= __x13__ true) {
    app __x14__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x14__
  } else {}
  app __x15__ = (SameValue new O)
  if (= __x15__ true) {
    app __x16__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x16__
  } else {}
  if (< new.ArrayBufferByteLength newLen) {
    app __x17__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x17__
  } else {}
  app __x18__ = (IsDetachedBuffer O)
  if (= __x18__ true) {
    app __x19__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x19__
  } else {}
  let fromBuf = O.ArrayBufferData
  let toBuf = new.ArrayBufferData
  app __x20__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)
  __x20__
  app __x21__ = (WrapCompletion new)
  return __x21__
}