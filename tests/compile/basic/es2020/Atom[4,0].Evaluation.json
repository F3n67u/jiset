["Evaluate", {
  "nt": "Disjunction"
}, "with", "argument", {
  "id": "direction"
}, "to", "obtain", "a", "Matcher", {
  "id": "m"
}, ".", {
  "k": 0
}, "Let", {
  "id": "parenIndex"
}, "be", "the", "number", "of", "left", "-", "capturing", "parentheses", "in", "the", "entire", "regular", "expression", "that", "occur", "to", "the", "left", "of", "this", {
  "nt": "Atom"
}, ".", "This", "is", "the", "total", "number", "of", {
  "grammar": "Atom4",
  "subs": ["GroupSpecifier", "Disjunction"]
}, "Parse", "Nodes", "prior", "to", "or", "enclosing", "this", {
  "nt": "Atom"
}, ".", {
  "k": 1
}, "Return", "a", "new", "Matcher", "with", "parameters", "(", {
  "id": "x"
}, ",", {
  "id": "c"
}, ")", "that", "captures", {
  "id": "direction"
}, ",", {
  "id": "m"
}, ",", "and", {
  "id": "parenIndex"
}, "and", "performs", "the", "following", "steps", "when", "called", ":", {
  "in": null
}, "Assert", ":", {
  "id": "x"
}, "is", "a", "State", ".", {
  "k": 3
}, "Assert", ":", {
  "id": "c"
}, "is", "a", "Continuation", ".", {
  "k": 4
}, "Let", {
  "id": "d"
}, "be", "a", "new", "Continuation", "with", "parameters", "(", {
  "id": "y"
}, ")", "that", "captures", {
  "id": "x"
}, ",", {
  "id": "c"
}, ",", {
  "id": "direction"
}, ",", "and", {
  "id": "parenIndex"
}, "and", "performs", "the", "following", "steps", "when", "called", ":", {
  "in": null
}, "Assert", ":", {
  "id": "y"
}, "is", "a", "State", ".", {
  "k": 6
}, "Let", {
  "id": "cap"
}, "be", "a", "copy", "of", {
  "id": "y"
}, "'", "s", {
  "id": "captures"
}, "List", ".", {
  "k": 7
}, "Let", {
  "id": "xe"
}, "be", {
  "id": "x"
}, "'", "s", {
  "id": "endIndex"
}, ".", {
  "k": 8
}, "Let", {
  "id": "ye"
}, "be", {
  "id": "y"
}, "'", "s", {
  "id": "endIndex"
}, ".", {
  "k": 9
}, "If", {
  "id": "direction"
}, "is", "equal", "to", "+", "1", ",", "then", {
  "in": null
}, "Assert", ":", {
  "id": "xe"
}, "≤", {
  "id": "ye"
}, ".", {
  "k": 11
}, "Let", {
  "id": "s"
}, "be", "a", "new", "List", "whose", "elements", "are", "the", "characters", "of", {
  "id": "Input"
}, "at", "indices", {
  "id": "xe"
}, "(", "inclusive", ")", "through", {
  "id": "ye"
}, "(", "exclusive", ")", ".", {
  "k": 12
}, {
  "out": null
}, {
  "k": 10
}, "Else", ",", {
  "in": null
}, "Assert", ":", {
  "id": "direction"
}, "is", "equal", "to", "-", "1", ".", {
  "k": 14
}, "Assert", ":", {
  "id": "ye"
}, "≤", {
  "id": "xe"
}, ".", {
  "k": 15
}, "Let", {
  "id": "s"
}, "be", "a", "new", "List", "whose", "elements", "are", "the", "characters", "of", {
  "id": "Input"
}, "at", "indices", {
  "id": "ye"
}, "(", "inclusive", ")", "through", {
  "id": "xe"
}, "(", "exclusive", ")", ".", {
  "k": 16
}, {
  "out": null
}, {
  "k": 13
}, "Set", {
  "id": "cap"
}, "[", {
  "id": "parenIndex"
}, "+", "1", "]", "to", {
  "id": "s"
}, ".", {
  "k": 17
}, "Let", {
  "id": "z"
}, "be", "the", "State", "(", {
  "id": "ye"
}, ",", {
  "id": "cap"
}, ")", ".", {
  "k": 18
}, "Call", {
  "id": "c"
}, "(", {
  "id": "z"
}, ")", "and", "return", "its", "result", ".", {
  "k": 19
}, {
  "out": null
}, {
  "k": 5
}, "Call", {
  "id": "m"
}, "(", {
  "id": "x"
}, ",", {
  "id": "d"
}, ")", "and", "return", "its", "result", ".", {
  "k": 20
}, {
  "out": null
}, {
  "k": 2
}]