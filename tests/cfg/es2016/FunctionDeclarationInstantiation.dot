digraph {
  node69 [shape=diamond, label=<<font color="black">(= hasParameterExpressions false)</font>> color="black" fillcolor="white" style=filled]
  node101 [shape=cds, label=<<font color="black">88:access __x35__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node88 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">75:[! __x31__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x40__ = (+ __x40__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">6:access __x1__ = (formals &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node120 [shape=cds, label=<<font color="black">97:access __x46__ = (f &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let hasDuplicates = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node56 [shape=cds, label=<<font color="black">46:app __x18__ = (envRec.CreateImmutableBinding envRec &quot;arguments&quot; false)</font>> color="black" fillcolor="white" style=filled]
  node42 [shape=diamond, label=<<font color="black">(= alreadyDeclared false)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:assert (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node37 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let __x11__ = parameterNames</td></tr>
      <tr><td align="left">32:let __x12__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=cds, label=<<font color="black">18:access __x10__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node52 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:let ao = __x16__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let hasParameterExpressions = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node110 [shape=diamond, label=<<font color="black">(= __x41__ true)</font>> color="black" fillcolor="white" style=filled]
  node125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">99:[! __x48__]</td></tr>
      <tr><td align="left">__x45__ = (+ __x45__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let lexicalNames = __x7__</td></tr>
      <tr><td align="left">13:let functionNames = (new [])</td></tr>
      <tr><td align="left">14:let functionsToInitialize = (new [])</td></tr>
      <tr><td align="left">15:let __x8__ = varDeclarations</td></tr>
      <tr><td align="left">15:let __x9__ = __x8__.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node46 [shape=cds, label=<<font color="black">38:app __x15__ = (envRec.InitializeBinding envRec paramName undefined)</font>> color="black" fillcolor="white" style=filled]
  node93 [shape=cds, label=<<font color="black">79:app __x33__ = (varEnvRec.InitializeBinding varEnvRec n initialValue)</font>> color="black" fillcolor="white" style=filled]
  node57 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:[! __x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node78 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">63:__x27__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let argumentsObjectNeeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">91:let __x39__ = __x38__</td></tr>
      <tr><td align="left">91:let __x40__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">97:let fn = __x46__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node84 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let n = __x29__[__x30__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node61 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:__x20__</td></tr>
      <tr><td align="left">50:append &quot;arguments&quot; -&gt; parameterNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node89 [shape=diamond, label=<<font color="black">(|| (! (contains parameterNames n)) (contains functionNames n))</font>> color="black" fillcolor="white" style=filled]
  node116 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x37__ = (+ __x37__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node74 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">61:append n -&gt; instantiatedVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let parameterNames = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node85 [shape=diamond, label=<<font color="black">(! (contains instantiatedVarNames n))</font>> color="black" fillcolor="white" style=filled]
  node102 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">88:let lexDeclarations = __x35__</td></tr>
      <tr><td align="left">89:let __x36__ = lexDeclarations</td></tr>
      <tr><td align="left">89:let __x37__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node60 [shape=cds, label=<<font color="black">49:app __x20__ = (envRec.InitializeBinding envRec &quot;arguments&quot; ao)</font>> color="black" fillcolor="white" style=filled]
  node117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">96:let __x44__ = functionsToInitialize</td></tr>
      <tr><td align="left">96:let __x45__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node70 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">58:let instantiatedVarNames = (copy-obj parameterNames)</td></tr>
      <tr><td align="left">59:let __x24__ = varNames</td></tr>
      <tr><td align="left">59:let __x25__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=diamond, label=<<font color="black">(&lt; 0i __x9__)</font>> color="black" fillcolor="white" style=filled]
  node33 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let argumentsObjectNeeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:prepend fn -&gt; functionNames</td></tr>
      <tr><td align="left">22:prepend d -&gt; functionsToInitialize</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node38 [shape=diamond, label=<<font color="black">(&lt; __x12__ __x11__.length)</font>> color="black" fillcolor="white" style=filled]
  node92 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">78:let initialValue = [! __x32__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node65 [shape=cds, label=<<font color="black">53:access __x22__ = (formals &quot;IteratorBindingInitialization&quot; iteratorRecord undefined)</font>> color="black" fillcolor="white" style=filled]
  node97 [shape=cds, label=<<font color="black">83:app __x34__ = (NewDeclarativeEnvironment varEnv)</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let hasDuplicates = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node53 [shape=cds, label=<<font color="black">44:app __x17__ = (CreateMappedArgumentsObject func formals argumentsList envRec)</font>> color="black" fillcolor="white" style=filled]
  node109 [shape=cds, label=<<font color="black">94:access __x41__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node124 [shape=cds, label=<<font color="black">99:app __x48__ = (varEnvRec.SetMutableBinding varEnvRec fn fo false)</font>> color="black" fillcolor="white" style=filled]
  node77 [shape=cds, label=<<font color="black">63:app __x27__ = (envRec.InitializeBinding envRec n undefined)</font>> color="black" fillcolor="white" style=filled]
  node96 [shape=diamond, label=<<font color="black">(= strict false)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">9:access __x4__ = (formals &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let alreadyDeclared = __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node73 [shape=diamond, label=<<font color="black">(! (contains instantiatedVarNames n))</font>> color="black" fillcolor="white" style=filled]
  node105 [shape=cds, label=<<font color="black">91:access __x38__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let calleeContext = GLOBAL_context</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node45 [shape=diamond, label=<<font color="black">(= hasDuplicates true)</font>> color="black" fillcolor="white" style=filled]
  node64 [shape=diamond, label=<<font color="black">(= hasDuplicates true)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=cds, label=<<font color="black">11:access __x6__ = (code &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=diamond, label=<<font color="black">(contains parameterNames &quot;arguments&quot;)</font>> color="black" fillcolor="white" style=filled]
  node34 [shape=diamond, label=<<font color="black">(= hasParameterExpressions false)</font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x9__ = (- __x9__ 1i)</td></tr>
      <tr><td align="left">let d = __x8__[__x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:[! __x14__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=diamond, label=<<font color="black">(! (contains functionNames fn))</font>> color="black" fillcolor="white" style=filled]
  node59 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">48:[! __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node118 [shape=diamond, label=<<font color="black">(&lt; __x45__ __x44__.length)</font>> color="black" fillcolor="white" style=filled]
  node71 [shape=diamond, label=<<font color="black">(&lt; __x25__ __x24__.length)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let simpleParameterList = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node54 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">44:let ao = __x17__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node49 [shape=diamond, label=<<font color="black">(= argumentsObjectNeeded true)</font>> color="black" fillcolor="white" style=filled]
  node86 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">74:append n -&gt; instantiatedVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node113 [shape=cds, label=<<font color="black">95:app __x43__ = (lexEnvRec.CreateMutableBinding lexEnvRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node81 [shape=cds, label=<<font color="black">68:app __x28__ = (NewDeclarativeEnvironment env)</font>> color="black" fillcolor="white" style=filled]
  node76 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">62:[! __x26__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">7:app __x2__ = (IsDuplicate parameterNames)</font>> color="black" fillcolor="white" style=filled]
  node39 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let paramName = __x11__[__x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node98 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">83:let lexEnv = __x34__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node103 [shape=diamond, label=<<font color="black">(&lt; __x37__ __x36__.length)</font>> color="black" fillcolor="white" style=filled]
  node91 [shape=cds, label=<<font color="black">78:app __x32__ = (envRec.GetBindingValue envRec n false)</font>> color="black" fillcolor="white" style=filled]
  node66 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:[? __x22__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x39__[__x40__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">1:access __x0__ = (calleeContext &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node80 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">64:let varEnv = env</td></tr>
      <tr><td align="left">65:let varEnvRec = envRec</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node35 [shape=diamond, label=<<font color="black">(|| (contains functionNames &quot;arguments&quot;) (contains lexicalNames &quot;arguments&quot;))</font>> color="black" fillcolor="white" style=filled]
  node112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">93:[! __x42__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node123 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">98:let fo = __x47__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node48 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x12__ = (+ __x12__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node63 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; __x21__, &quot;Done&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let varDeclarations = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node95 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x30__ = (+ __x30__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node50 [shape=diamond, label=<<font color="black">(|| (= strict true) (= simpleParameterList false))</font>> color="black" fillcolor="white" style=filled]
  node67 [shape=cds, label=<<font color="black">55:access __x23__ = (formals &quot;IteratorBindingInitialization&quot; iteratorRecord env)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let varNames = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let argumentsObjectNeeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">8:access __x3__ = (formals &quot;IsSimpleParameterList&quot;)</font>> color="black" fillcolor="white" style=filled]
  node72 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let n = __x24__[__x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node43 [shape=cds, label=<<font color="black">36:app __x14__ = (envRec.CreateMutableBinding envRec paramName false)</font>> color="black" fillcolor="white" style=filled]
  node99 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let lexEnv = varEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node87 [shape=cds, label=<<font color="black">75:app __x31__ = (varEnvRec.CreateMutableBinding varEnvRec n false)</font>> color="black" fillcolor="white" style=filled]
  node104 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x36__[__x37__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node40 [shape=cds, label=<<font color="black">33:app __x13__ = (envRec.HasBinding envRec paramName)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let fn = __x10__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)))</font>> color="black" fillcolor="white" style=filled]
  node55 [shape=diamond, label=<<font color="black">(= strict true)</font>> color="black" fillcolor="white" style=filled]
  node114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">95:[! __x43__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node75 [shape=cds, label=<<font color="black">62:app __x26__ = (envRec.CreateMutableBinding envRec n false)</font>> color="black" fillcolor="white" style=filled]
  node82 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">68:let varEnv = __x28__</td></tr>
      <tr><td align="left">69:let varEnvRec = varEnv.EnvironmentRecord</td></tr>
      <tr><td align="left">70:calleeContext.VariableEnvironment = varEnv</td></tr>
      <tr><td align="left">71:let instantiatedVarNames = (new [])</td></tr>
      <tr><td align="left">72:let __x29__ = varNames</td></tr>
      <tr><td align="left">72:let __x30__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let f = __x44__[__x45__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node58 [shape=cds, label=<<font color="black">48:app __x19__ = (envRec.CreateMutableBinding envRec &quot;arguments&quot; false)</font>> color="black" fillcolor="white" style=filled]
  node36 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let argumentsObjectNeeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=diamond, label=<<font color="black">(= func.ThisMode CONST_lexical)</font>> color="black" fillcolor="white" style=filled]
  node51 [shape=cds, label=<<font color="black">41:app __x16__ = (CreateUnmappedArgumentsObject argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=cds, label=<<font color="black">12:access __x7__ = (code &quot;LexicallyDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node107 [shape=diamond, label=<<font color="black">(&lt; __x40__ __x39__.length)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let env = __x0__</td></tr>
      <tr><td align="left">2:let envRec = env.EnvironmentRecord</td></tr>
      <tr><td align="left">3:let code = func.ECMAScriptCode</td></tr>
      <tr><td align="left">4:let strict = func.Strict</td></tr>
      <tr><td align="left">5:let formals = func.FormalParameters</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node126 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">100:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node79 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x25__ = (+ __x25__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node94 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">79:__x33__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node47 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:[! __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">10:access __x5__ = (code &quot;VarDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node68 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">55:[? __x23__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node62 [shape=cds, label=<<font color="black">51:app __x21__ = (CreateListIterator argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node122 [shape=cds, label=<<font color="black">98:access __x47__ = (f &quot;InstantiateFunctionObject&quot; lexEnv)</font>> color="black" fillcolor="white" style=filled]
  node83 [shape=diamond, label=<<font color="black">(&lt; __x30__ __x29__.length)</font>> color="black" fillcolor="white" style=filled]
  node100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">86:let lexEnvRec = lexEnv.EnvironmentRecord</td></tr>
      <tr><td align="left">87:calleeContext.LexicalEnvironment = lexEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node90 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let initialValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node111 [shape=cds, label=<<font color="black">93:app __x42__ = (lexEnvRec.CreateImmutableBinding lexEnvRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node108 -> node109 [ color="black"]
  node5 -> node6 [ color="black"]
  node53 -> node54 [ color="black"]
  node3 -> node4 [ color="black"]
  node85 -> node86 [label=<<font color="black">true</font>> color="black"]
  node85 -> node95 [label=<<font color="black">false</font>> color="black"]
  node63 -> node64 [ color="black"]
  node61 -> node62 [ color="black"]
  node55 -> node56 [label=<<font color="black">true</font>> color="black"]
  node55 -> node58 [label=<<font color="black">false</font>> color="black"]
  node29 -> node30 [ color="black"]
  node7 -> node8 [ color="black"]
  node54 -> node55 [ color="black"]
  node123 -> node124 [ color="black"]
  node28 -> node21 [ color="black"]
  node18 -> node19 [ color="black"]
  node39 -> node40 [ color="black"]
  node48 -> node38 [ color="black"]
  node52 -> node55 [ color="black"]
  node67 -> node68 [ color="black"]
  node125 -> node118 [ color="black"]
  node124 -> node125 [ color="black"]
  node83 -> node84 [label=<<font color="black">true</font>> color="black"]
  node83 -> node96 [label=<<font color="black">false</font>> color="black"]
  node90 -> node93 [ color="black"]
  node27 -> node28 [label=<<font color="black">true</font>> color="black"]
  node27 -> node21 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node62 -> node63 [ color="black"]
  node119 -> node120 [ color="black"]
  node89 -> node90 [label=<<font color="black">true</font>> color="black"]
  node89 -> node91 [label=<<font color="black">false</font>> color="black"]
  node80 -> node96 [ color="black"]
  node11 -> node12 [ color="black"]
  node109 -> node110 [ color="black"]
  node104 -> node105 [ color="black"]
  node35 -> node36 [label=<<font color="black">true</font>> color="black"]
  node35 -> node37 [label=<<font color="black">false</font>> color="black"]
  node19 -> node20 [ color="black"]
  node45 -> node46 [label=<<font color="black">true</font>> color="black"]
  node45 -> node48 [label=<<font color="black">false</font>> color="black"]
  node13 -> node14 [ color="black"]
  node122 -> node123 [ color="black"]
  node71 -> node72 [label=<<font color="black">true</font>> color="black"]
  node71 -> node80 [label=<<font color="black">false</font>> color="black"]
  node93 -> node94 [ color="black"]
  node126 -> node1 [ color="black"]
  node103 -> node104 [label=<<font color="black">true</font>> color="black"]
  node103 -> node117 [label=<<font color="black">false</font>> color="black"]
  node12 -> node13 [ color="black"]
  node107 -> node108 [label=<<font color="black">true</font>> color="black"]
  node107 -> node116 [label=<<font color="black">false</font>> color="black"]
  node23 -> node24 [label=<<font color="black">true</font>> color="black"]
  node23 -> node21 [label=<<font color="black">false</font>> color="black"]
  node101 -> node102 [ color="black"]
  node0 -> node2 [ color="black"]
  node117 -> node118 [ color="black"]
  node75 -> node76 [ color="black"]
  node38 -> node39 [label=<<font color="black">true</font>> color="black"]
  node38 -> node49 [label=<<font color="black">false</font>> color="black"]
  node99 -> node100 [ color="black"]
  node36 -> node37 [ color="black"]
  node84 -> node85 [ color="black"]
  node22 -> node23 [ color="black"]
  node70 -> node71 [ color="black"]
  node6 -> node7 [ color="black"]
  node76 -> node77 [ color="black"]
  node87 -> node88 [ color="black"]
  node43 -> node44 [ color="black"]
  node42 -> node43 [label=<<font color="black">true</font>> color="black"]
  node42 -> node48 [label=<<font color="black">false</font>> color="black"]
  node44 -> node45 [ color="black"]
  node37 -> node38 [ color="black"]
  node68 -> node69 [ color="black"]
  node110 -> node111 [label=<<font color="black">true</font>> color="black"]
  node110 -> node113 [label=<<font color="black">false</font>> color="black"]
  node120 -> node121 [ color="black"]
  node14 -> node15 [ color="black"]
  node40 -> node41 [ color="black"]
  node21 -> node22 [label=<<font color="black">true</font>> color="black"]
  node21 -> node29 [label=<<font color="black">false</font>> color="black"]
  node32 -> node33 [label=<<font color="black">true</font>> color="black"]
  node32 -> node34 [label=<<font color="black">false</font>> color="black"]
  node86 -> node87 [ color="black"]
  node30 -> node31 [label=<<font color="black">true</font>> color="black"]
  node30 -> node32 [label=<<font color="black">false</font>> color="black"]
  node77 -> node78 [ color="black"]
  node98 -> node100 [ color="black"]
  node26 -> node27 [ color="black"]
  node94 -> node95 [ color="black"]
  node72 -> node73 [ color="black"]
  node78 -> node79 [ color="black"]
  node102 -> node103 [ color="black"]
  node10 -> node11 [ color="black"]
  node95 -> node83 [ color="black"]
  node88 -> node89 [ color="black"]
  node47 -> node48 [ color="black"]
  node91 -> node92 [ color="black"]
  node105 -> node106 [ color="black"]
  node4 -> node5 [ color="black"]
  node51 -> node52 [ color="black"]
  node116 -> node103 [ color="black"]
  node114 -> node115 [ color="black"]
  node111 -> node112 [ color="black"]
  node25 -> node26 [ color="black"]
  node115 -> node107 [ color="black"]
  node118 -> node119 [label=<<font color="black">true</font>> color="black"]
  node118 -> node126 [label=<<font color="black">false</font>> color="black"]
  node59 -> node60 [ color="black"]
  node49 -> node50 [label=<<font color="black">true</font>> color="black"]
  node49 -> node62 [label=<<font color="black">false</font>> color="black"]
  node97 -> node98 [ color="black"]
  node20 -> node21 [ color="black"]
  node79 -> node71 [ color="black"]
  node56 -> node57 [ color="black"]
  node64 -> node65 [label=<<font color="black">true</font>> color="black"]
  node64 -> node67 [label=<<font color="black">false</font>> color="black"]
  node113 -> node114 [ color="black"]
  node60 -> node61 [ color="black"]
  node24 -> node25 [ color="black"]
  node112 -> node115 [ color="black"]
  node31 -> node37 [ color="black"]
  node92 -> node93 [ color="black"]
  node82 -> node83 [ color="black"]
  node50 -> node51 [label=<<font color="black">true</font>> color="black"]
  node50 -> node53 [label=<<font color="black">false</font>> color="black"]
  node73 -> node74 [label=<<font color="black">true</font>> color="black"]
  node73 -> node79 [label=<<font color="black">false</font>> color="black"]
  node66 -> node69 [ color="black"]
  node16 -> node17 [ color="black"]
  node46 -> node47 [ color="black"]
  node58 -> node59 [ color="black"]
  node65 -> node66 [ color="black"]
  node100 -> node101 [ color="black"]
  node121 -> node122 [ color="black"]
  node9 -> node11 [ color="black"]
  node57 -> node60 [ color="black"]
  node8 -> node9 [label=<<font color="black">true</font>> color="black"]
  node8 -> node10 [label=<<font color="black">false</font>> color="black"]
  node81 -> node82 [ color="black"]
  node69 -> node70 [label=<<font color="black">true</font>> color="black"]
  node69 -> node81 [label=<<font color="black">false</font>> color="black"]
  node74 -> node75 [ color="black"]
  node106 -> node107 [ color="black"]
  node33 -> node37 [ color="black"]
  node17 -> node18 [ color="black"]
  node41 -> node42 [ color="black"]
  node34 -> node35 [label=<<font color="black">true</font>> color="black"]
  node34 -> node37 [label=<<font color="black">false</font>> color="black"]
  node96 -> node97 [label=<<font color="black">true</font>> color="black"]
  node96 -> node99 [label=<<font color="black">false</font>> color="black"]
}
