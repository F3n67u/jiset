digraph {
  node16698 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node16701 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let v = [? __x2__]</td></tr>
      <tr><td align="left">3:let arrayTypeName = typedArray.TypedArrayName</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{elementType} be the String value of the Element Type value in link:{unhandled: table-49} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">6:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">7:let indexedPosition = (+ (* i elementSize) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16693 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16697 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16700 [shape=cds, label=<<font color="black">2:app __x2__ = (ToInteger value)</font>> color="black" fillcolor="white" style=filled]
  node16694 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16691 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16703 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:__x3__</td></tr>
      <tr><td align="left">9:return v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16699 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16695 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16692 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16702 [shape=cds, label=<<font color="black">8:app __x3__ = (SetValueInBuffer buffer indexedPosition elementType v true &quot;SeqCst&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16696 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray)</font>> color="black" fillcolor="white" style=filled]
  node16699 -> node16700 [ color="black"]
  node16698 -> node16699 [ color="black"]
  node16701 -> node16702 [ color="black"]
  node16696 -> node16697 [ color="black"]
  node16702 -> node16703 [ color="black"]
  node16695 -> node16696 [ color="black"]
  node16694 -> node16695 [ color="black"]
  node16693 -> node16694 [ color="black"]
  node16703 -> node16692 [ color="black"]
  node16691 -> node16693 [ color="black"]
  node16700 -> node16701 [ color="black"]
  node16697 -> node16698 [ color="black"]
}
