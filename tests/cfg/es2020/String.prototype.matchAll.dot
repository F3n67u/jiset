digraph {
  node14139 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let matcher = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14124 [shape=cds, label=<<font color="black">app regexp = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14132 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let flags = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14128 [shape=cds, label=<<font color="black">2:app __x1__ = (IsRegExp regexp)</font>> color="black" fillcolor="white" style=filled]
  node14135 [shape=cds, label=<<font color="black">6:app __x4__ = (ToString flags)</font>> color="black" fillcolor="white" style=filled]
  node14147 [shape=cds, label=<<font color="black">12:app __x9__ = (Invoke rx SYMBOL_matchAll (new [S]))</font>> color="black" fillcolor="white" style=filled]
  node14146 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rx = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14126 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14133 [shape=cds, label=<<font color="black">5:app __x3__ = (RequireObjectCoercible flags)</font>> color="black" fillcolor="white" style=filled]
  node14127 [shape=diamond, label=<<font color="black">(! (|| (= regexp undefined) (= regexp null)))</font>> color="black" fillcolor="white" style=filled]
  node14129 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isRegExp = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14136 [shape=diamond, label=<<font color="black">(! (contains [? __x4__] &quot;g&quot;))</font>> color="black" fillcolor="white" style=filled]
  node14141 [shape=cds, label=<<font color="black">9:app __x6__ = (Call matcher regexp (new [O]))</font>> color="black" fillcolor="white" style=filled]
  node14142 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14131 [shape=cds, label=<<font color="black">4:app __x2__ = (Get regexp &quot;flags&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14148 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14125 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node14144 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let S = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14134 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14122 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14137 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14130 [shape=diamond, label=<<font color="black">(= isRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node14143 [shape=cds, label=<<font color="black">10:app __x7__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node14145 [shape=cds, label=<<font color="black">11:app __x8__ = (RegExpCreate regexp &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14123 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14138 [shape=cds, label=<<font color="black">7:app __x5__ = (GetMethod regexp SYMBOL_matchAll)</font>> color="black" fillcolor="white" style=filled]
  node14140 [shape=diamond, label=<<font color="black">(! (= matcher undefined))</font>> color="black" fillcolor="white" style=filled]
  node14129 -> node14130 [ color="black"]
  node14136 -> node14137 [label=<<font color="black">true</font>> color="black"]
  node14136 -> node14138 [label=<<font color="black">false</font>> color="black"]
  node14133 -> node14134 [ color="black"]
  node14132 -> node14133 [ color="black"]
  node14140 -> node14141 [label=<<font color="black">true</font>> color="black"]
  node14140 -> node14143 [label=<<font color="black">false</font>> color="black"]
  node14142 -> node14143 [ color="black"]
  node14127 -> node14128 [label=<<font color="black">true</font>> color="black"]
  node14127 -> node14143 [label=<<font color="black">false</font>> color="black"]
  node14143 -> node14144 [ color="black"]
  node14124 -> node14125 [ color="black"]
  node14144 -> node14145 [ color="black"]
  node14128 -> node14129 [ color="black"]
  node14137 -> node14138 [ color="black"]
  node14122 -> node14124 [ color="black"]
  node14141 -> node14142 [ color="black"]
  node14147 -> node14148 [ color="black"]
  node14135 -> node14136 [ color="black"]
  node14130 -> node14131 [label=<<font color="black">true</font>> color="black"]
  node14130 -> node14138 [label=<<font color="black">false</font>> color="black"]
  node14125 -> node14126 [ color="black"]
  node14126 -> node14127 [ color="black"]
  node14138 -> node14139 [ color="black"]
  node14146 -> node14147 [ color="black"]
  node14134 -> node14135 [ color="black"]
  node14139 -> node14140 [ color="black"]
  node14145 -> node14146 [ color="black"]
  node14131 -> node14132 [ color="black"]
  node14148 -> node14123 [ color="black"]
}
