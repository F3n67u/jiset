{
  app start = (GetArgument argumentsList 0i)
  app end = (GetArgument argumentsList 1i)
  [0] let O = this
  [1] app __x0__ = (Type O)
  [1] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [16] {}
  [2] if (= O.ArrayBufferData absent) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [16] {}
  [3] app __x3__ = (IsDetachedBuffer O)
  [3] if (= __x3__ true) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [16] {}
  [4] let len = O.ArrayBufferByteLength
  [5] app __x5__ = (ToInteger start)
  [5] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [16] {}
  [5] let relativeStart = __x5__
  [6] if (< relativeStart 0i) {
    app __x6__ = (max (+ len relativeStart) 0i)
    let first = __x6__
  } else {
    app __x7__ = (min relativeStart len)
    let first = __x7__
  }
  [7] if (= end undefined) let relativeEnd = len else {
    app __x8__ = (ToInteger end)
    if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [16] {}
    let relativeEnd = __x8__
  }
  [8] if (< relativeEnd 0i) {
    app __x9__ = (max (+ len relativeEnd) 0i)
    let final = __x9__
  } else {
    app __x10__ = (min relativeEnd len)
    let final = __x10__
  }
  [9] app __x11__ = (max (- final first) 0i)
  [9] let newLen = __x11__
  [10] app __x12__ = (SpeciesConstructor O INTRINSIC_ArrayBuffer)
  [10] if (is-completion __x12__) if (= __x12__.Type CONST_normal) __x12__ = __x12__.Value else return __x12__ else [16] {}
  [10] let ctor = __x12__
  [11] app __x13__ = (Construct ctor (new [newLen]))
  [11] if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else [16] {}
  [11] let new = __x13__
  [12] if (= new.ArrayBufferData absent) {
    app __x14__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x14__
  } else [16] {}
  [13] app __x15__ = (IsDetachedBuffer new)
  [13] if (= __x15__ true) {
    app __x16__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x16__
  } else [16] {}
  [14] app __x17__ = (SameValue new O)
  [14] if (= __x17__ true) {
    app __x18__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x18__
  } else [16] {}
  [15] if (< new.ArrayBufferByteLength newLen) {
    app __x19__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x19__
  } else [16] {}
  [17] app __x20__ = (IsDetachedBuffer O)
  [17] if (= __x20__ true) {
    app __x21__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x21__
  } else [16] {}
  [18] let fromBuf = O.ArrayBufferData
  [19] let toBuf = new.ArrayBufferData
  [20] app __x22__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)
  [20] __x22__
  [21] app __x23__ = (WrapCompletion new)
  [21] return __x23__
}