digraph {
  node12725 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12728 [shape=cds, label=<<font color="black">1:access __x1__ = (Term &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12724 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12727 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let m1 = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12726 [shape=cds, label=<<font color="black">0:access __x0__ = (Alternative &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let m2 = __x1__</td></tr>
      <tr><td align="left">2:??? &quot;Return an internal Matcher closure that takes two arguments , a State id:{x} and a Continuation id:{c} , and performs the following steps when evaluated : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12724 -> node12726 [ color="black"]
  node12727 -> node12728 [ color="black"]
  node12728 -> node12729 [ color="black"]
  node12729 -> node12725 [ color="black"]
  node12726 -> node12727 [ color="black"]
}
