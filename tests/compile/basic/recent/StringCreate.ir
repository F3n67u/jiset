{
  app __x0__ = (MakeBasicObject (new ["Prototype", "Extensible", "StringData"]))
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let S = __x0__
  S.Prototype = prototype
  S.StringData = value
  S.GetOwnProperty = StringExoticObjectDOTGetOwnProperty
  S.DefineOwnProperty = StringExoticObjectDOTDefineOwnProperty
  S.OwnPropertyKeys = StringExoticObjectDOTOwnPropertyKeys
  let length = value.length
  app __x1__ = (DefinePropertyOrThrow S "length" (new PropertyDescriptor("Value" -> length, "Writable" -> false, "Enumerable" -> false, "Configurable" -> false)))
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  __x1__
  app __x2__ = (WrapCompletion S)
  return __x2__
}