{
  access __x0__ = (ModuleItemList "LexicallyDeclaredNames")
  let __x1__ = __x0__
  let __x2__ = 0i
  let __x3__ = 0i
  let __x4__ = true
  while (< __x2__ __x1__.length) {
    __x3__ = (+ __x2__ 1i)
    while (< __x3__ __x1__.length) if (= __x1__[__x2__] __x1__[__x3__]) __x4__ = true else {}
  }
  if __x4__ {
    app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x5__
  } else {
    app __x6__ = (NormalCompletion undefined)
    return __x6__
  }
  access __x7__ = (ModuleItemList "LexicallyDeclaredNames")
  access __x8__ = (ModuleItemList "VarDeclaredNames")
  let __x9__ = __x7__
  let __x10__ = __x8__
  let __x11__ = 0i
  let __x12__ = 0i
  let __x13__ = false
  while (< __x11__ __x9__.length) {
    __x12__ = 0i
    while (< __x12__ __x10__.length) if (= __x9__[__x11__] __x10__[__x12__]) __x13__ = true else {}
  }
  if __x13__ {
    app __x14__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x14__
  } else {
    app __x15__ = (NormalCompletion undefined)
    return __x15__
  }
  access __x16__ = (ModuleItemList "ExportedNames")
  let __x17__ = __x16__
  let __x18__ = 0i
  let __x19__ = 0i
  let __x20__ = true
  while (< __x18__ __x17__.length) {
    __x19__ = (+ __x18__ 1i)
    while (< __x19__ __x17__.length) if (= __x17__[__x18__] __x17__[__x19__]) __x20__ = true else {}
  }
  if __x20__ {
    app __x21__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x21__
  } else {
    app __x22__ = (NormalCompletion undefined)
    return __x22__
  }
  access __x23__ = (ModuleItemList "ExportedBindings")
  access __x24__ = (ModuleItemList "VarDeclaredNames")
  access __x25__ = (ModuleItemList "LexicallyDeclaredNames")
  let __x26__ = __x23__
  let __x27__ = __x24__
  let __x28__ = __x25__
  let __x29__ = 0i
  let __x30__ = 0i
  let __x31__ = false
  while (< __x29__ __x26__.length) {
    __x30__ = 0i
    while (< __x30__ __x27__.length) if (= __x26__[__x29__] __x27__[__x30__]) __x31__ = true else {}
    __x30__ = 0i
    while (< __x30__ __x28__.length) if (= __x26__[__x29__] __x28__[__x30__]) __x31__ = true else {}
  }
  if __x31__ {
    app __x32__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x32__
  } else {
    app __x33__ = (NormalCompletion undefined)
    return __x33__
  }
  if (contains ModuleItemList "super") {
    app __x34__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x34__
  } else {
    app __x35__ = (NormalCompletion undefined)
    return __x35__
  }
  access __x36__ = (ModuleItemList "Contains")
  app __x37__ = (__x36__ "NewTarget")
  if __x37__ {
    app __x38__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x38__
  } else {
    app __x39__ = (NormalCompletion undefined)
    return __x39__
  }
  access __x40__ = (ModuleItemList "ContainsDuplicateLabels")
  app __x41__ = (__x40__ (new []))
  if (= __x41__ true) {
    app __x42__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x42__
  } else {
    app __x43__ = (NormalCompletion undefined)
    return __x43__
  }
  access __x44__ = (ModuleItemList "ContainsUndefinedBreakTarget")
  app __x45__ = (__x44__ (new []))
  if (= __x45__ true) {
    app __x46__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x46__
  } else {
    app __x47__ = (NormalCompletion undefined)
    return __x47__
  }
  access __x48__ = (ModuleItemList "ContainsUndefinedContinueTarget")
  app __x49__ = (__x48__ (new []) (new []))
  if (= __x49__ true) {
    app __x50__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x50__
  } else {
    app __x51__ = (NormalCompletion undefined)
    return __x51__
  }
}