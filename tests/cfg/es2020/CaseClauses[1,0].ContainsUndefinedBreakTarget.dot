digraph {
  node8012 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8018 [shape=cds, label=<<font color="black">2:access __x1__ = (CaseClause &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node8017 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8013 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8015 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8019 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8016 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node8014 [shape=cds, label=<<font color="black">0:access __x0__ = (CaseClauses &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node8016 -> node8017 [label=<<font color="black">true</font>> color="black"]
  node8016 -> node8018 [label=<<font color="black">false</font>> color="black"]
  node8014 -> node8015 [ color="black"]
  node8017 -> node8018 [ color="black"]
  node8018 -> node8019 [ color="black"]
  node8012 -> node8014 [ color="black"]
  node8019 -> node8013 [ color="black"]
  node8015 -> node8016 [ color="black"]
}
