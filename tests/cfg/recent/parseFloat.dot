digraph {
  node12109 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let mathFloat = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12105 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let inputString = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12101 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12110 [shape=diamond, label=<<font color="black">(== mathFloat 0i)</font>> color="black" fillcolor="white" style=filled]
  node12104 [shape=cds, label=<<font color="black">0:app __x0__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node12106 [shape=cds, label=<<font color="black">1:app __x1__ = (TrimString inputString CONST_start)</font>> color="black" fillcolor="white" style=filled]
  node12111 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:??? &quot;If the first code unit of id:{trimmedString} is the code unit 0x002D ( HYPHEN - MINUS ) , return value:{-0} .&quot;</td></tr>
      <tr><td align="left">7:return 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12107 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let trimmedString = [! __x1__]</td></tr>
      <tr><td align="left">2:??? &quot;If neither id:{trimmedString} nor any prefix of id:{trimmedString} satisfies the syntax of a nt:{StrDecimalLiteral} ( see link:{unhandled: sec-tonumber-applied-to-the-string-type} ) , return value:{NaN} .&quot;</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{numberString} be the longest prefix of id:{trimmedString} , which might be id:{trimmedString} itself , that satisfies the syntax of a nt:{StrDecimalLiteral} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12103 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return mathFloat</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12108 [shape=cds, label=<<font color="black">4:access __x2__ = (numberString &quot;MV&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12102 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12104 -> node12105 [ color="black"]
  node12101 -> node12103 [ color="black"]
  node12105 -> node12106 [ color="black"]
  node12106 -> node12107 [ color="black"]
  node12112 -> node12102 [ color="black"]
  node12110 -> node12111 [label=<<font color="black">true</font>> color="black"]
  node12110 -> node12112 [label=<<font color="black">false</font>> color="black"]
  node12111 -> node12112 [ color="black"]
  node12107 -> node12108 [ color="black"]
  node12108 -> node12109 [ color="black"]
  node12103 -> node12104 [ color="black"]
  node12109 -> node12110 [ color="black"]
}
