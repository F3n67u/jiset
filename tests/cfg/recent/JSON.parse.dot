digraph {
  node18129 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18120 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let jsonString = [? __x0__]</td></tr>
      <tr><td align="left">1:??? &quot;Parse ! StringToCodePoints ( id:{jsonString} ) as a JSON text as specified in ECMA - 404 . Throw a value:{SyntaxError} exception if it is not a valid JSON text as defined in that specification .&quot;</td></tr>
      <tr><td align="left">2:let scriptString = (+ (+ &quot;(&quot; jsonString) &quot;);&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18116 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18126 [shape=cds, label=<<font color="black">9:app __x4__ = (OrdinaryObjectCreate INTRINSIC_Object_prototype)</font>> color="black" fillcolor="white" style=filled]
  node18123 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let script = __x2__</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{completion} be the result of evaluating id:{script} . The extended PropertyDefinitionEvaluation semantics defined in link:{unhandled: sec-__proto__-property-names-in-object-initializers} must not be used during the evaluation .&quot;</td></tr>
      <tr><td align="left">6:let unfiltered = completion.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18119 [shape=cds, label=<<font color="black">0:app __x0__ = (ToString text)</font>> color="black" fillcolor="white" style=filled]
  node18132 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return unfiltered</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18127 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let root = [! __x4__]</td></tr>
      <tr><td align="left">10:let rootName = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18124 [shape=cds, label=<<font color="black">13:app __x3__ = (IsCallable reviver)</font>> color="black" fillcolor="white" style=filled]
  node18118 [shape=cds, label=<<font color="black">app reviver = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18121 [shape=cds, label=<<font color="black">3:app __x1__ = (StringToCodePoints scriptString)</font>> color="black" fillcolor="white" style=filled]
  node18128 [shape=cds, label=<<font color="black">11:app __x5__ = (CreateDataPropertyOrThrow root rootName unfiltered)</font>> color="black" fillcolor="white" style=filled]
  node18122 [shape=cds, label=<<font color="black">3:app __x2__ = (ParseText [! __x1__] Script)</font>> color="black" fillcolor="white" style=filled]
  node18125 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node18130 [shape=cds, label=<<font color="black">12:app __x6__ = (InternalizeJSONProperty root rootName reviver)</font>> color="black" fillcolor="white" style=filled]
  node18117 [shape=cds, label=<<font color="black">app text = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18115 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18131 -> node18116 [ color="black"]
  node18121 -> node18122 [ color="black"]
  node18123 -> node18124 [ color="black"]
  node18120 -> node18121 [ color="black"]
  node18125 -> node18126 [label=<<font color="black">true</font>> color="black"]
  node18125 -> node18132 [label=<<font color="black">false</font>> color="black"]
  node18129 -> node18130 [ color="black"]
  node18119 -> node18120 [ color="black"]
  node18122 -> node18123 [ color="black"]
  node18130 -> node18131 [ color="black"]
  node18127 -> node18128 [ color="black"]
  node18126 -> node18127 [ color="black"]
  node18132 -> node18116 [ color="black"]
  node18115 -> node18117 [ color="black"]
  node18128 -> node18129 [ color="black"]
  node18124 -> node18125 [ color="black"]
  node18117 -> node18118 [ color="black"]
  node18118 -> node18119 [ color="black"]
}
