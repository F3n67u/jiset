{
  [0] access __x0__ = (CoverCallExpressionAndAsyncArrowHead "CoveredCallExpression")
  [0] let expr = __x0__
  [1] access __x1__ = (expr "MemberExpression")
  [1] let memberExpr = __x1__
  [2] access __x2__ = (expr "Arguments")
  [2] let arguments = __x2__
  [3] access __x3__ = (memberExpr "Evaluation")
  [3] let ref = __x3__
  [4] app __x4__ = (GetValue ref)
  [4] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [6] {}
  [4] let func = __x4__
  [5] app __x5__ = (Type ref)
  [5] let __x6__ = (= __x5__ Reference)
  [5] if __x6__ {
    app __x7__ = (IsPropertyReference ref)
    let __x8__ = (= __x7__ false)
    if __x8__ {
      app __x9__ = (GetReferencedName ref)
      __x8__ = (= __x9__ "eval")
    } else [6] {}
    __x6__ = __x8__
  } else [6] {}
  [5] if __x6__ {
    [6] app __x10__ = (SameValue func INTRINSIC_eval)
    [6] if (= __x10__ true) {
      [7] app __x11__ = (ArgumentListEvaluation arguments)
      [7] if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else [6] {}
      [7] let argList = __x11__
      [8] if (= argList.length 0i) {
        app __x12__ = (WrapCompletion undefined)
        return __x12__
      } else [6] {}
      [9] let evalText = argList[0i]
      [10] if true let strictCaller = true else let strictCaller = false
      [11] let evalRealm = REALM
      [12] app __x13__ = (HostEnsureCanCompileStrings evalRealm evalRealm)
      [12] if (is-completion __x13__) if (= __x13__.Type CONST_normal) __x13__ = __x13__.Value else return __x13__ else [6] {}
      [12] __x13__
      [13] app __x14__ = (PerformEval evalText evalRealm strictCaller true)
      [13] if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else [6] {}
      [13] app __x15__ = (WrapCompletion __x14__)
      [13] return __x15__
    } else [6] {}
  } else [6] {}
  [20] app __x16__ = (Type ref)
  [20] if (= __x16__ Reference) {
    [17] app __x17__ = (IsPropertyReference ref)
    [17] if (= __x17__ true) {
      [16] app __x18__ = (GetThisValue ref)
      [16] let thisValue = __x18__
    } else {
      [18] app __x19__ = (GetBase ref)
      [18] let refEnv = __x19__
      [19] app __x20__ = (refEnv.WithBaseObject refEnv)
      [19] let thisValue = __x20__
    }
  } else let thisValue = undefined
  [22] let thisCall = this
  [23] app __x21__ = (IsInTailPosition thisCall)
  [23] let tailCall = __x21__
  [24] app __x22__ = (EvaluateDirectCall func thisValue arguments tailCall)
  [24] if (is-completion __x22__) if (= __x22__.Type CONST_normal) __x22__ = __x22__.Value else return __x22__ else [6] {}
  [24] app __x23__ = (WrapCompletion __x22__)
  [24] return __x23__
}