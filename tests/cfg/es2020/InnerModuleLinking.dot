digraph {
  node11254 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let requiredModule = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">26:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">27:assert (= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</td></tr>
      <tr><td align="left">28:requiredModule.Status = CONST_linked</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11252 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11257 [shape=diamond, label=<<font color="black">(= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11246 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Link module)</font>> color="black" fillcolor="white" style=filled]
  node11258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:assert (|| (|| (= requiredModule.Status CONST_linking) (= requiredModule.Status CONST_linked)) (= requiredModule.Status CONST_evaluated))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11251 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node11256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11260 [shape=cds, label=<<font color="black">18:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node11250 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (= module.Status CONST_unlinked)</td></tr>
      <tr><td align="left">6:module.Status = CONST_linking</td></tr>
      <tr><td align="left">7:module.DFSIndex = index</td></tr>
      <tr><td align="left">8:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">9:index = (+ index 1i)</td></tr>
      <tr><td align="left">10:append module -&gt; stack</td></tr>
      <tr><td align="left">11:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">11:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11264 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x6__]</td></tr>
      <tr><td align="left">21:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11247 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11265 [shape=diamond, label=<<font color="black">(= module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node11270 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11253 [shape=cds, label=<<font color="black">12:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node11255 [shape=cds, label=<<font color="black">13:app __x4__ = (InnerModuleLinking requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node11244 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11249 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11243 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11248 [shape=diamond, label=<<font color="black">(|| (|| (= module.Status CONST_linking) (= module.Status CONST_linked)) (= module.Status CONST_evaluated))</font>> color="black" fillcolor="white" style=filled]
  node11269 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node11261 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11262 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11245 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;CyclicModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node11267 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node11259 [shape=diamond, label=<<font color="black">(= requiredModule.Status CONST_linking)</font>> color="black" fillcolor="white" style=filled]
  node11271 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11263 [shape=cds, label=<<font color="black">19:app __x6__ = (module.InitializeEnvironment module)</font>> color="black" fillcolor="white" style=filled]
  node11251 -> node11252 [label=<<font color="black">true</font>> color="black"]
  node11251 -> node11263 [label=<<font color="black">false</font>> color="black"]
  node11270 -> node11267 [ color="black"]
  node11266 -> node11267 [ color="black"]
  node11263 -> node11264 [ color="black"]
  node11265 -> node11266 [label=<<font color="black">true</font>> color="black"]
  node11265 -> node11271 [label=<<font color="black">false</font>> color="black"]
  node11254 -> node11255 [ color="black"]
  node11260 -> node11261 [ color="black"]
  node11258 -> node11259 [ color="black"]
  node11269 -> node11270 [label=<<font color="black">true</font>> color="black"]
  node11269 -> node11267 [label=<<font color="black">false</font>> color="black"]
  node11268 -> node11269 [ color="black"]
  node11249 -> node11250 [ color="black"]
  node11259 -> node11260 [label=<<font color="black">true</font>> color="black"]
  node11259 -> node11262 [label=<<font color="black">false</font>> color="black"]
  node11257 -> node11258 [label=<<font color="black">true</font>> color="black"]
  node11257 -> node11262 [label=<<font color="black">false</font>> color="black"]
  node11256 -> node11257 [ color="black"]
  node11261 -> node11262 [ color="black"]
  node11245 -> node11246 [label=<<font color="black">true</font>> color="black"]
  node11245 -> node11248 [label=<<font color="black">false</font>> color="black"]
  node11243 -> node11245 [ color="black"]
  node11255 -> node11256 [ color="black"]
  node11262 -> node11251 [ color="black"]
  node11252 -> node11253 [ color="black"]
  node11267 -> node11268 [label=<<font color="black">true</font>> color="black"]
  node11267 -> node11271 [label=<<font color="black">false</font>> color="black"]
  node11250 -> node11251 [ color="black"]
  node11253 -> node11254 [ color="black"]
  node11264 -> node11265 [ color="black"]
  node11248 -> node11249 [label=<<font color="black">true</font>> color="black"]
  node11248 -> node11250 [label=<<font color="black">false</font>> color="black"]
  node11271 -> node11244 [ color="black"]
  node11247 -> node11248 [ color="black"]
  node11246 -> node11247 [ color="black"]
}
