digraph {
  node17524 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node17527 [shape=cds, label=<<font color="black">5:app __x0__ = (SameValue resolution promise)</font>> color="black" fillcolor="white" style=filled]
  node17534 [shape=cds, label=<<font color="black">9:app __x3__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node17531 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17546 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17535 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17542 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let thenAction = then.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17525 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17522 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17547 [shape=cds, label=<<font color="black">16:app __x9__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseResolveThenableJob (new [promise, resolution, thenAction]))</font>> color="black" fillcolor="white" style=filled]
  node17532 [shape=cds, label=<<font color="black">8:app __x2__ = (Type resolution)</font>> color="black" fillcolor="white" style=filled]
  node17536 [shape=cds, label=<<font color="black">10:app __x4__ = (Get resolution &quot;then&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17541 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17538 [shape=cds, label=<<font color="black">11:app __x5__ = (IsAbruptCompletion then)</font>> color="black" fillcolor="white" style=filled]
  node17544 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node17533 [shape=diamond, label=<<font color="black">(! (= __x2__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17548 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:__x9__</td></tr>
      <tr><td align="left">17:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17529 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let selfResolutionError = ??? &quot;TypeError&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17537 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let then = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17539 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node17530 [shape=cds, label=<<font color="black">7:app __x1__ = (RejectPromise promise selfResolutionError)</font>> color="black" fillcolor="white" style=filled]
  node17545 [shape=cds, label=<<font color="black">15:app __x8__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node17523 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promise = F.Promise</td></tr>
      <tr><td align="left">2:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17526 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17543 [shape=cds, label=<<font color="black">14:app __x7__ = (IsCallable thenAction)</font>> color="black" fillcolor="white" style=filled]
  node17540 [shape=cds, label=<<font color="black">12:app __x6__ = (RejectPromise promise then.Value)</font>> color="black" fillcolor="white" style=filled]
  node17521 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17528 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node17546 -> node17547 [ color="black"]
  node17524 -> node17525 [label=<<font color="black">true</font>> color="black"]
  node17524 -> node17526 [label=<<font color="black">false</font>> color="black"]
  node17547 -> node17548 [ color="black"]
  node17532 -> node17533 [ color="black"]
  node17541 -> node17542 [ color="black"]
  node17528 -> node17529 [label=<<font color="black">true</font>> color="black"]
  node17528 -> node17532 [label=<<font color="black">false</font>> color="black"]
  node17534 -> node17535 [ color="black"]
  node17543 -> node17544 [ color="black"]
  node17545 -> node17546 [ color="black"]
  node17536 -> node17537 [ color="black"]
  node17523 -> node17524 [ color="black"]
  node17530 -> node17531 [ color="black"]
  node17533 -> node17534 [label=<<font color="black">true</font>> color="black"]
  node17533 -> node17536 [label=<<font color="black">false</font>> color="black"]
  node17537 -> node17538 [ color="black"]
  node17544 -> node17545 [label=<<font color="black">true</font>> color="black"]
  node17544 -> node17547 [label=<<font color="black">false</font>> color="black"]
  node17542 -> node17543 [ color="black"]
  node17535 -> node17536 [ color="black"]
  node17521 -> node17523 [ color="black"]
  node17527 -> node17528 [ color="black"]
  node17525 -> node17526 [ color="black"]
  node17539 -> node17540 [label=<<font color="black">true</font>> color="black"]
  node17539 -> node17542 [label=<<font color="black">false</font>> color="black"]
  node17531 -> node17532 [ color="black"]
  node17540 -> node17541 [ color="black"]
  node17538 -> node17539 [ color="black"]
  node17548 -> node17522 [ color="black"]
  node17526 -> node17527 [ color="black"]
  node17529 -> node17530 [ color="black"]
}
