[{
  "tokens": ["Assert", ":", {
    "id": "exemplar"
  }, "is", "an", "Object", "that", "has", "[", "[", "TypedArrayName", "]", "]", "and", "[", "[", "ContentType", "]", "]", "internal", "slots", "."]
}, {
  "tokens": ["Let", {
    "id": "defaultConstructor"
  }, "be", "the", "intrinsic", "object", "listed", "in", "column", "one", "of", {
    "link": ""
  }, "for", {
    "id": "exemplar"
  }, ".", "[", "[", "TypedArrayName", "]", "]", "."]
}, {
  "tokens": ["Let", {
    "id": "constructor"
  }, "be", "?", "SpeciesConstructor", "(", {
    "id": "exemplar"
  }, ",", {
    "id": "defaultConstructor"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "result"
  }, "be", "?", "TypedArrayCreate", "(", {
    "id": "constructor"
  }, ",", {
    "id": "argumentList"
  }, ")", "."]
}, {
  "tokens": ["Assert", ":", {
    "id": "result"
  }, "has", "[", "[", "TypedArrayName", "]", "]", "and", "[", "[", "ContentType", "]", "]", "internal", "slots", "."]
}, {
  "tokens": ["If", {
    "id": "result"
  }, ".", "[", "[", "ContentType", "]", "]", "is", "not", "equal", "to", {
    "id": "exemplar"
  }, ".", "[", "[", "ContentType", "]", "]", ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Return", {
    "id": "result"
  }, "."]
}]