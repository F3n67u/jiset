digraph {
  node13313 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let P = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let P = pattern.OriginalSource</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13305 [shape=cds, label=<<font color="black">16:app __x3__ = (Type pattern)</font>> color="black" fillcolor="white" style=filled]
  node13322 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13301 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let patternConstructor = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13316 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let F = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13296 [shape=diamond, label=<<font color="black">(! (= NewTarget undefined))</font>> color="black" fillcolor="white" style=filled]
  node13304 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return pattern</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13299 [shape=diamond, label=<<font color="black">(&amp;&amp; (= patternIsRegExp true) (= flags undefined))</font>> color="black" fillcolor="white" style=filled]
  node13321 [shape=cds, label=<<font color="black">20:app __x7__ = (RegExpInitialize O P F)</font>> color="black" fillcolor="white" style=filled]
  node13302 [shape=cds, label=<<font color="black">6:app __x2__ = (SameValue newTarget patternConstructor)</font>> color="black" fillcolor="white" style=filled]
  node13317 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let F = flags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13298 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13312 [shape=cds, label=<<font color="black">12:app __x4__ = (Get pattern &quot;source&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13295 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let patternIsRegExp = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13290 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13309 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let F = pattern.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13291 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13308 [shape=diamond, label=<<font color="black">(= flags undefined)</font>> color="black" fillcolor="white" style=filled]
  node13319 [shape=cds, label=<<font color="black">19:app __x6__ = (RegExpAlloc newTarget)</font>> color="black" fillcolor="white" style=filled]
  node13300 [shape=cds, label=<<font color="black">5:app __x1__ = (Get pattern &quot;constructor&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13310 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let F = flags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13293 [shape=cds, label=<<font color="black">app flags = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13292 [shape=cds, label=<<font color="black">app pattern = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13315 [shape=cds, label=<<font color="black">14:app __x5__ = (Get pattern &quot;flags&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13320 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let O = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13303 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node13318 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let P = pattern</td></tr>
      <tr><td align="left">18:let F = flags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13314 [shape=diamond, label=<<font color="black">(= flags undefined)</font>> color="black" fillcolor="white" style=filled]
  node13294 [shape=cds, label=<<font color="black">0:app __x0__ = (IsRegExp pattern)</font>> color="black" fillcolor="white" style=filled]
  node13306 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x3__ Object) (! (= pattern.RegExpMatcher absent)))</font>> color="black" fillcolor="white" style=filled]
  node13311 [shape=diamond, label=<<font color="black">(= patternIsRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node13314 -> node13315 [label=<<font color="black">true</font>> color="black"]
  node13314 -> node13317 [label=<<font color="black">false</font>> color="black"]
  node13317 -> node13319 [ color="black"]
  node13304 -> node13305 [ color="black"]
  node13310 -> node13319 [ color="black"]
  node13309 -> node13319 [ color="black"]
  node13308 -> node13309 [label=<<font color="black">true</font>> color="black"]
  node13308 -> node13310 [label=<<font color="black">false</font>> color="black"]
  node13300 -> node13301 [ color="black"]
  node13320 -> node13321 [ color="black"]
  node13321 -> node13322 [ color="black"]
  node13306 -> node13307 [label=<<font color="black">true</font>> color="black"]
  node13306 -> node13311 [label=<<font color="black">false</font>> color="black"]
  node13311 -> node13312 [label=<<font color="black">true</font>> color="black"]
  node13311 -> node13318 [label=<<font color="black">false</font>> color="black"]
  node13307 -> node13308 [ color="black"]
  node13318 -> node13319 [ color="black"]
  node13319 -> node13320 [ color="black"]
  node13293 -> node13294 [ color="black"]
  node13316 -> node13319 [ color="black"]
  node13303 -> node13304 [label=<<font color="black">true</font>> color="black"]
  node13303 -> node13305 [label=<<font color="black">false</font>> color="black"]
  node13302 -> node13303 [ color="black"]
  node13292 -> node13293 [ color="black"]
  node13322 -> node13291 [ color="black"]
  node13315 -> node13316 [ color="black"]
  node13313 -> node13314 [ color="black"]
  node13296 -> node13297 [label=<<font color="black">true</font>> color="black"]
  node13296 -> node13298 [label=<<font color="black">false</font>> color="black"]
  node13295 -> node13296 [ color="black"]
  node13297 -> node13305 [ color="black"]
  node13290 -> node13292 [ color="black"]
  node13298 -> node13299 [ color="black"]
  node13312 -> node13313 [ color="black"]
  node13294 -> node13295 [ color="black"]
  node13301 -> node13302 [ color="black"]
  node13305 -> node13306 [ color="black"]
  node13299 -> node13300 [label=<<font color="black">true</font>> color="black"]
  node13299 -> node13305 [label=<<font color="black">false</font>> color="black"]
}
