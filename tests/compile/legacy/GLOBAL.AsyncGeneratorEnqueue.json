["Let", {
  "id": "generator"
}, "be", "GetArgument", "(", {
  "id": "argumentsList"
}, ",", "0", ")", ".", {
  "k": 0
}, "Let", {
  "id": "completion"
}, "be", "GetArgument", "(", {
  "id": "argumentsList"
}, ",", "1", ")", ".", {
  "k": 1
}, "Assert", ":", {
  "id": "completion"
}, "is", "a", "Completion", "Record", ".", {
  "k": 2
}, "Let", {
  "id": "promiseCapability"
}, "be", "!", "NewPromiseCapability", "(", "%", "Promise", "%", ")", ".", {
  "k": 3
}, "If", "Type", "(", {
  "id": "generator"
}, ")", "is", "not", "Object", ",", "or", "if", {
  "id": "generator"
}, "does", "not", "have", "an", "[", "[", "AsyncGeneratorState", "]", "]", "internal", "slot", ",", "then", {
  "in": null
}, "Let", {
  "id": "badGeneratorError"
}, "be", "a", "newly", "created", {
  "value": "TypeError"
}, "object", ".", "Perform", "!", "Call", "(", {
  "id": "promiseCapability"
}, ".", "[", "[", "Reject", "]", "]", ",", {
  "value": "undefined"
}, ",", "«", {
  "id": "badGeneratorError"
}, "»", ")", ".", "Return", {
  "id": "promiseCapability"
}, ".", "[", "[", "Promise", "]", "]", ".", {
  "out": null
}, {
  "k": 4
}, "Let", {
  "id": "queue"
}, "be", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorQueue", "]", "]", ".", {
  "k": 5
}, "Let", {
  "id": "request"
}, "be", "AsyncGeneratorRequest", "{", "[", "[", "Completion", "]", "]", ":", {
  "id": "completion"
}, ",", "[", "[", "Capability", "]", "]", ":", {
  "id": "promiseCapability"
}, "}", ".", {
  "k": 6
}, "Append", {
  "id": "request"
}, "to", "the", "end", "of", {
  "id": "queue"
}, ".", {
  "k": 7
}, "Let", {
  "id": "state"
}, "be", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorState", "]", "]", ".", {
  "k": 8
}, "If", {
  "id": "state"
}, "is", "not", {
  "const": "executing"
}, ",", "then", {
  "in": null
}, "Perform", "!", "AsyncGeneratorResumeNext", "(", {
  "id": "generator"
}, ")", ".", {
  "out": null
}, {
  "k": 9
}, "Return", {
  "id": "promiseCapability"
}, ".", "[", "[", "Promise", "]", "]", ".", {
  "k": 10
}]