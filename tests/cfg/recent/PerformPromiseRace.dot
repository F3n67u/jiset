digraph {
  node18995 [shape=cds, label=<<font color="black">3:app __x2__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node19005 [shape=cds, label=<<font color="black">10:app __x5__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node18988 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18999 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19006 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node18989 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18998 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node19002 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">8:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19007 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18993 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19003 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node18997 [shape=cds, label=<<font color="black">4:app __x3__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node19001 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node18991 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19008 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? nextValue]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19004 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextValue = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19012 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18992 [shape=cds, label=<<font color="black">1:app __x1__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node19011 [shape=cds, label=<<font color="black">13:app __x7__ = (Invoke nextPromise &quot;then&quot; (new [resultCapability.Resolve, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node18994 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node19010 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let nextPromise = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18990 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node19000 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19009 [shape=cds, label=<<font color="black">12:app __x6__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node18996 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let next = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19006 -> node19007 [label=<<font color="black">true</font>> color="black"]
  node19006 -> node19008 [label=<<font color="black">false</font>> color="black"]
  node19009 -> node19010 [ color="black"]
  node18988 -> node18990 [ color="black"]
  node18997 -> node18998 [ color="black"]
  node18999 -> node19000 [ color="black"]
  node19002 -> node19003 [ color="black"]
  node18991 -> node18992 [ color="black"]
  node19003 -> node19004 [ color="black"]
  node19005 -> node19006 [ color="black"]
  node18990 -> node18991 [ color="black"]
  node19012 -> node18994 [ color="black"]
  node18996 -> node18997 [ color="black"]
  node18995 -> node18996 [ color="black"]
  node18998 -> node18999 [label=<<font color="black">true</font>> color="black"]
  node18998 -> node19000 [label=<<font color="black">false</font>> color="black"]
  node19007 -> node19008 [ color="black"]
  node19004 -> node19005 [ color="black"]
  node18992 -> node18993 [ color="black"]
  node19001 -> node19002 [label=<<font color="black">true</font>> color="black"]
  node19001 -> node19003 [label=<<font color="black">false</font>> color="black"]
  node18994 -> node18995 [label=<<font color="black">true</font>> color="black"]
  node18994 -> node18989 [label=<<font color="black">false</font>> color="black"]
  node19011 -> node19012 [ color="black"]
  node19000 -> node19001 [ color="black"]
  node19008 -> node19009 [ color="black"]
  node18993 -> node18994 [ color="black"]
  node19010 -> node19011 [ color="black"]
}
