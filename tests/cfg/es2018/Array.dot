digraph {
  node14419 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let array = [? __x1__]</td></tr>
      <tr><td align="left">5:let k = 0i</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{items} be a zero - origined List containing the argument items in order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14423 [shape=cds, label=<<font color="black">10:app __x3__ = (CreateDataProperty array Pk itemK)</font>> color="black" fillcolor="white" style=filled]
  node14410 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14420 [shape=diamond, label=<<font color="black">(&lt; k numberOfArgs)</font>> color="black" fillcolor="white" style=filled]
  node14413 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node14424 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let defineStatus = __x3__</td></tr>
      <tr><td align="left">11:assert (= defineStatus true)</td></tr>
      <tr><td align="left">12:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14416 [shape=cds, label=<<font color="black">3:app __x0__ = (GetPrototypeFromConstructor newTarget INTRINSIC_ArrayPrototype)</font>> color="black" fillcolor="white" style=filled]
  node14412 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let numberOfArgs = argumentsList.length</td></tr>
      <tr><td align="left">1:assert (! (&lt; numberOfArgs 2i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let proto = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14421 [shape=cds, label=<<font color="black">8:app __x2__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node14425 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14415 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14418 [shape=cds, label=<<font color="black">4:app __x1__ = (ArrayCreate numberOfArgs proto)</font>> color="black" fillcolor="white" style=filled]
  node14411 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14422 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let Pk = [! __x2__]</td></tr>
      <tr><td align="left">9:let itemK = items[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14414 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14409 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14424 -> node14420 [ color="black"]
  node14413 -> node14414 [label=<<font color="black">true</font>> color="black"]
  node14413 -> node14415 [label=<<font color="black">false</font>> color="black"]
  node14418 -> node14419 [ color="black"]
  node14421 -> node14422 [ color="black"]
  node14423 -> node14424 [ color="black"]
  node14412 -> node14413 [ color="black"]
  node14415 -> node14416 [ color="black"]
  node14414 -> node14416 [ color="black"]
  node14409 -> node14411 [ color="black"]
  node14420 -> node14421 [label=<<font color="black">true</font>> color="black"]
  node14420 -> node14425 [label=<<font color="black">false</font>> color="black"]
  node14422 -> node14423 [ color="black"]
  node14416 -> node14417 [ color="black"]
  node14411 -> node14412 [ color="black"]
  node14425 -> node14410 [ color="black"]
  node14419 -> node14420 [ color="black"]
  node14417 -> node14418 [ color="black"]
}
