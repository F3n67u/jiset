digraph {
  node10638 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10633 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10639 [shape=cds, label=<<font color="black">2:access __x1__ = (ModuleItem &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node10634 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10635 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node10640 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10636 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10637 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node10640 -> node10634 [ color="black"]
  node10637 -> node10638 [label=<<font color="black">true</font>> color="black"]
  node10637 -> node10639 [label=<<font color="black">false</font>> color="black"]
  node10633 -> node10635 [ color="black"]
  node10635 -> node10636 [ color="black"]
  node10636 -> node10637 [ color="black"]
  node10639 -> node10640 [ color="black"]
  node10638 -> node10639 [ color="black"]
}
