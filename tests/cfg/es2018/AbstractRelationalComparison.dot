digraph {
  node670 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node651 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:??? &quot;Let id:{k} be the smallest nonnegative integer such that the code unit at index id:{k} within id:{px} is different from the code unit at index id:{k} within id:{py} . ( There must be such a id:{k} , for neither String is a prefix of the other . )&quot;</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{m} be the integer that is the numeric value of the code unit at index id:{k} within id:{px} .&quot;</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{n} be the integer that is the numeric value of the code unit at index id:{k} within id:{py} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node638 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let __x4__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node646 [shape=diamond, label=<<font color="black">(= __x7__ true)</font>> color="black" fillcolor="white" style=filled]
  node661 [shape=diamond, label=<<font color="black">(= ny NaN)</font>> color="black" fillcolor="white" style=filled]
  node630 [shape=cds, label=<<font color="black">1:app __x0__ = (ToPrimitive x Number)</font>> color="black" fillcolor="white" style=filled]
  node665 [shape=diamond, label=<<font color="black">(&amp;&amp; (= nx 0i) (= ny -0.0))</font>> color="black" fillcolor="white" style=filled]
  node650 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node649 [shape=diamond, label=<<font color="black">(= __x8__ true)</font>> color="black" fillcolor="white" style=filled]
  node640 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:__x4__ = (= __x5__ String)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node656 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let nx = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node667 [shape=diamond, label=<<font color="black">(&amp;&amp; (= nx -0.0) (= ny 0i))</font>> color="black" fillcolor="white" style=filled]
  node644 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node645 [shape=cds, label=<<font color="black">7:app __x7__ = (IsStringPrefix py px)</font>> color="black" fillcolor="white" style=filled]
  node629 [shape=diamond, label=<<font color="black">(= LeftFirst true)</font>> color="black" fillcolor="white" style=filled]
  node628 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node655 [shape=cds, label=<<font color="black">15:app __x9__ = (ToNumber px)</font>> color="black" fillcolor="white" style=filled]
  node677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:??? &quot;If the mathematical value of id:{nx} is less than the mathematical value of id:{ny} &mdash; note that these mathematical values are both finite and not both zero &mdash; return value:{true} . Otherwise , return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node634 [shape=cds, label=<<font color="black">4:app __x2__ = (ToPrimitive y Number)</font>> color="black" fillcolor="white" style=filled]
  node660 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node669 [shape=diamond, label=<<font color="black">(= nx Infinity)</font>> color="black" fillcolor="white" style=filled]
  node642 [shape=cds, label=<<font color="black">app __x6__ = (Type py)</font>> color="black" fillcolor="white" style=filled]
  node637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let px = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node647 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node633 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let py = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node657 [shape=cds, label=<<font color="black">16:app __x10__ = (ToNumber py)</font>> color="black" fillcolor="white" style=filled]
  node674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node662 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node641 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node672 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node631 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let px = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node668 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node636 [shape=cds, label=<<font color="black">5:app __x3__ = (ToPrimitive x Number)</font>> color="black" fillcolor="white" style=filled]
  node653 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node658 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let ny = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node675 [shape=diamond, label=<<font color="black">(= nx -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node663 [shape=diamond, label=<<font color="black">(= nx ny)</font>> color="black" fillcolor="white" style=filled]
  node648 [shape=cds, label=<<font color="black">8:app __x8__ = (IsStringPrefix px py)</font>> color="black" fillcolor="white" style=filled]
  node673 [shape=diamond, label=<<font color="black">(= ny -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node643 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__ = (= __x6__ String)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node627 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node671 [shape=diamond, label=<<font color="black">(= ny Infinity)</font>> color="black" fillcolor="white" style=filled]
  node652 [shape=diamond, label=<<font color="black">(&lt; m n)</font>> color="black" fillcolor="white" style=filled]
  node632 [shape=cds, label=<<font color="black">2:app __x1__ = (ToPrimitive y Number)</font>> color="black" fillcolor="white" style=filled]
  node664 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let py = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node659 [shape=diamond, label=<<font color="black">(= nx NaN)</font>> color="black" fillcolor="white" style=filled]
  node639 [shape=cds, label=<<font color="black">13:app __x5__ = (Type px)</font>> color="black" fillcolor="white" style=filled]
  node676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node640 -> node641 [ color="black"]
  node676 -> node677 [ color="black"]
  node648 -> node649 [ color="black"]
  node675 -> node676 [label=<<font color="black">true</font>> color="black"]
  node675 -> node677 [label=<<font color="black">false</font>> color="black"]
  node627 -> node629 [ color="black"]
  node663 -> node664 [label=<<font color="black">true</font>> color="black"]
  node663 -> node665 [label=<<font color="black">false</font>> color="black"]
  node636 -> node637 [ color="black"]
  node662 -> node663 [ color="black"]
  node650 -> node651 [ color="black"]
  node667 -> node668 [label=<<font color="black">true</font>> color="black"]
  node667 -> node669 [label=<<font color="black">false</font>> color="black"]
  node670 -> node671 [ color="black"]
  node656 -> node657 [ color="black"]
  node661 -> node662 [label=<<font color="black">true</font>> color="black"]
  node661 -> node663 [label=<<font color="black">false</font>> color="black"]
  node637 -> node638 [ color="black"]
  node641 -> node642 [label=<<font color="black">true</font>> color="black"]
  node641 -> node644 [label=<<font color="black">false</font>> color="black"]
  node664 -> node665 [ color="black"]
  node659 -> node660 [label=<<font color="black">true</font>> color="black"]
  node659 -> node661 [label=<<font color="black">false</font>> color="black"]
  node655 -> node656 [ color="black"]
  node633 -> node638 [ color="black"]
  node653 -> node628 [ color="black"]
  node665 -> node666 [label=<<font color="black">true</font>> color="black"]
  node665 -> node667 [label=<<font color="black">false</font>> color="black"]
  node657 -> node658 [ color="black"]
  node635 -> node636 [ color="black"]
  node652 -> node653 [label=<<font color="black">true</font>> color="black"]
  node652 -> node654 [label=<<font color="black">false</font>> color="black"]
  node651 -> node652 [ color="black"]
  node673 -> node674 [label=<<font color="black">true</font>> color="black"]
  node673 -> node675 [label=<<font color="black">false</font>> color="black"]
  node629 -> node630 [label=<<font color="black">true</font>> color="black"]
  node629 -> node634 [label=<<font color="black">false</font>> color="black"]
  node642 -> node643 [ color="black"]
  node671 -> node672 [label=<<font color="black">true</font>> color="black"]
  node671 -> node673 [label=<<font color="black">false</font>> color="black"]
  node672 -> node673 [ color="black"]
  node677 -> node628 [ color="black"]
  node660 -> node661 [ color="black"]
  node669 -> node670 [label=<<font color="black">true</font>> color="black"]
  node669 -> node671 [label=<<font color="black">false</font>> color="black"]
  node649 -> node650 [label=<<font color="black">true</font>> color="black"]
  node649 -> node651 [label=<<font color="black">false</font>> color="black"]
  node645 -> node646 [ color="black"]
  node639 -> node640 [ color="black"]
  node674 -> node675 [ color="black"]
  node631 -> node632 [ color="black"]
  node643 -> node644 [ color="black"]
  node630 -> node631 [ color="black"]
  node668 -> node669 [ color="black"]
  node644 -> node645 [label=<<font color="black">true</font>> color="black"]
  node644 -> node655 [label=<<font color="black">false</font>> color="black"]
  node646 -> node647 [label=<<font color="black">true</font>> color="black"]
  node646 -> node648 [label=<<font color="black">false</font>> color="black"]
  node666 -> node667 [ color="black"]
  node658 -> node659 [ color="black"]
  node634 -> node635 [ color="black"]
  node654 -> node628 [ color="black"]
  node647 -> node648 [ color="black"]
  node632 -> node633 [ color="black"]
  node638 -> node639 [ color="black"]
}
