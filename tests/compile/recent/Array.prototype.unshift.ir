{
  app items = (GetArgument argumentsList 0i)
  [0] app __x0__ = (ToObject this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [4] {}
  [0] let O = __x0__
  [1] app __x1__ = (LengthOfArrayLike O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [4] {}
  [1] let len = __x1__
  [2] let argCount = items.length
  [3] if (< 0i argCount) {
    [4] if (< (- 9007199254740992i 1i) (+ len argCount)) {
      app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x2__
    } else [4] {}
    [5] let k = len
    [6] while (< 0i k) {
      [7] ??? "Let id:{from} be ! ToString ( 𝔽 ( id:{k} - 1 ) ) ."
      [8] ??? "Let id:{to} be ! ToString ( 𝔽 ( id:{k} + id:{argCount} - 1 ) ) ."
      [9] app __x3__ = (HasProperty O from)
      [9] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [4] {}
      [9] let fromPresent = __x3__
      [13] if (= fromPresent true) {
        [11] app __x4__ = (Get O from)
        [11] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [4] {}
        [11] let fromValue = __x4__
        [12] app __x5__ = (Set O to fromValue true)
        [12] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [4] {}
        [12] __x5__
      } else {
        [14] assert (= fromPresent false)
        [15] app __x6__ = (DeletePropertyOrThrow O to)
        [15] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [4] {}
        [15] __x6__
      }
      [16] k = (- k 1i)
    }
    [17] let j = 0i
    [18] let __x7__ = items
    [18] let __x8__ = 0i
    [18] while (< __x8__ __x7__.length) {
      let E = __x7__[__x8__]
      [19] app __x9__ = (ToString j)
      [19] if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else [4] {}
      [19] app __x10__ = (Set O __x9__ E true)
      [19] if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else [4] {}
      [19] __x10__
      [20] j = (+ j 1i)
      __x8__ = (+ __x8__ 1i)
    }
  } else [4] {}
  [21] ??? "Perform ? Set ( id:{O} , value:{\"length\"} , 𝔽 ( id:{len} + id:{argCount} ) , value:{true} ) ."
  [22] ??? "Return 𝔽 ( id:{len} + id:{argCount} ) ."
}