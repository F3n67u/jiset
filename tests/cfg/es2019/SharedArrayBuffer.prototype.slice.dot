digraph {
  node16836 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16840 [shape=diamond, label=<<font color="black">(= O.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node16834 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16838 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16842 [shape=cds, label=<<font color="black">3:app __x1__ = (IsSharedArrayBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node16862 [shape=cds, label=<<font color="black">9:app __x8__ = (max (- final first) 0i)</font>> color="black" fillcolor="white" style=filled]
  node16845 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let len = O.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16868 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node16849 [shape=cds, label=<<font color="black">app __x3__ = (max (+ len relativeStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node16877 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let fromBuf = O.ArrayBufferData</td></tr>
      <tr><td align="left">17:let toBuf = new.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16853 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node16848 [shape=diamond, label=<<font color="black">(&lt; relativeStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node16873 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData O.ArrayBufferData)</font>> color="black" fillcolor="white" style=filled]
  node16872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16841 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16858 [shape=cds, label=<<font color="black">app __x6__ = (max (+ len relativeEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node16861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16865 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let ctor = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16833 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16850 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16847 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let relativeStart = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16832 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16844 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16837 [shape=cds, label=<<font color="black">1:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node16854 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x12__</td></tr>
      <tr><td align="left">19:return new</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16857 [shape=diamond, label=<<font color="black">(&lt; relativeEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node16869 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16866 [shape=cds, label=<<font color="black">11:app __x10__ = (Construct ctor (new [newLen]))</font>> color="black" fillcolor="white" style=filled]
  node16855 [shape=cds, label=<<font color="black">app __x5__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node16851 [shape=cds, label=<<font color="black">app __x4__ = (min relativeStart len)</font>> color="black" fillcolor="white" style=filled]
  node16864 [shape=cds, label=<<font color="black">10:app __x9__ = (SpeciesConstructor O INTRINSIC_SharedArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16863 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let newLen = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16860 [shape=cds, label=<<font color="black">app __x7__ = (min relativeEnd len)</font>> color="black" fillcolor="white" style=filled]
  node16843 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16875 [shape=diamond, label=<<font color="black">(&lt; new.ArrayBufferByteLength newLen)</font>> color="black" fillcolor="white" style=filled]
  node16870 [shape=cds, label=<<font color="black">13:app __x11__ = (IsSharedArrayBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node16839 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16846 [shape=cds, label=<<font color="black">5:app __x2__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node16852 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16835 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16867 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let new = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16878 [shape=cds, label=<<font color="black">18:app __x12__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)</font>> color="black" fillcolor="white" style=filled]
  node16871 [shape=diamond, label=<<font color="black">(= __x11__ false)</font>> color="black" fillcolor="white" style=filled]
  node16874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16859 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16856 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16866 -> node16867 [ color="black"]
  node16859 -> node16862 [ color="black"]
  node16847 -> node16848 [ color="black"]
  node16839 -> node16840 [ color="black"]
  node16858 -> node16859 [ color="black"]
  node16846 -> node16847 [ color="black"]
  node16865 -> node16866 [ color="black"]
  node16850 -> node16853 [ color="black"]
  node16868 -> node16869 [label=<<font color="black">true</font>> color="black"]
  node16868 -> node16870 [label=<<font color="black">false</font>> color="black"]
  node16852 -> node16853 [ color="black"]
  node16843 -> node16844 [label=<<font color="black">true</font>> color="black"]
  node16843 -> node16845 [label=<<font color="black">false</font>> color="black"]
  node16855 -> node16856 [ color="black"]
  node16832 -> node16834 [ color="black"]
  node16840 -> node16841 [label=<<font color="black">true</font>> color="black"]
  node16840 -> node16842 [label=<<font color="black">false</font>> color="black"]
  node16838 -> node16839 [label=<<font color="black">true</font>> color="black"]
  node16838 -> node16840 [label=<<font color="black">false</font>> color="black"]
  node16836 -> node16837 [ color="black"]
  node16841 -> node16842 [ color="black"]
  node16861 -> node16862 [ color="black"]
  node16873 -> node16874 [label=<<font color="black">true</font>> color="black"]
  node16873 -> node16875 [label=<<font color="black">false</font>> color="black"]
  node16876 -> node16877 [ color="black"]
  node16864 -> node16865 [ color="black"]
  node16872 -> node16873 [ color="black"]
  node16856 -> node16857 [ color="black"]
  node16844 -> node16845 [ color="black"]
  node16871 -> node16872 [label=<<font color="black">true</font>> color="black"]
  node16871 -> node16873 [label=<<font color="black">false</font>> color="black"]
  node16853 -> node16854 [label=<<font color="black">true</font>> color="black"]
  node16853 -> node16855 [label=<<font color="black">false</font>> color="black"]
  node16875 -> node16876 [label=<<font color="black">true</font>> color="black"]
  node16875 -> node16877 [label=<<font color="black">false</font>> color="black"]
  node16834 -> node16835 [ color="black"]
  node16851 -> node16852 [ color="black"]
  node16848 -> node16849 [label=<<font color="black">true</font>> color="black"]
  node16848 -> node16851 [label=<<font color="black">false</font>> color="black"]
  node16863 -> node16864 [ color="black"]
  node16837 -> node16838 [ color="black"]
  node16842 -> node16843 [ color="black"]
  node16862 -> node16863 [ color="black"]
  node16869 -> node16870 [ color="black"]
  node16849 -> node16850 [ color="black"]
  node16867 -> node16868 [ color="black"]
  node16877 -> node16878 [ color="black"]
  node16854 -> node16857 [ color="black"]
  node16835 -> node16836 [ color="black"]
  node16879 -> node16833 [ color="black"]
  node16860 -> node16861 [ color="black"]
  node16870 -> node16871 [ color="black"]
  node16874 -> node16875 [ color="black"]
  node16857 -> node16858 [label=<<font color="black">true</font>> color="black"]
  node16857 -> node16860 [label=<<font color="black">false</font>> color="black"]
  node16845 -> node16846 [ color="black"]
  node16878 -> node16879 [ color="black"]
}
