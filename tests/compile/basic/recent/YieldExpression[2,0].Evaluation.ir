{
  app __x0__ = (GetGeneratorKind)
  let generatorKind = [! __x0__]
  access __x1__ = (AssignmentExpression "Evaluation")
  let exprRef = __x1__
  app __x2__ = (GetValue exprRef)
  let value = [? __x2__]
  app __x3__ = (GetIterator value generatorKind)
  let iteratorRecord = [? __x3__]
  let iterator = iteratorRecord.Iterator
  app __x4__ = (NormalCompletion undefined)
  let received = __x4__
  while true if (= received.Type CONST_normal) {
    app __x5__ = (Call iteratorRecord.NextMethod iteratorRecord.Iterator (new [received.Value]))
    let innerResult = [? __x5__]
    if (= generatorKind CONST_async) {
      app __x6__ = (Await innerResult)
      innerResult = [? __x6__]
    } else {}
    if (! (= (typeof innerResult) Object)) throw TypeError else {}
    app __x7__ = (IteratorComplete innerResult)
    let done = [? __x7__]
    if (= done true) {
      app __x8__ = (IteratorValue innerResult)
      return [? __x8__]
    } else {}
    if (= generatorKind CONST_async) {
      app __x9__ = (IteratorValue innerResult)
      app __x10__ = (AsyncGeneratorYield [? __x9__])
      received = __x10__
    } else {
      app __x11__ = (GeneratorYield innerResult)
      received = __x11__
    }
  } else if (= received.Type CONST_throw) {
    app __x12__ = (GetMethod iterator "throw")
    let throw = [? __x12__]
    if (! (= throw undefined)) {
      app __x13__ = (Call throw iterator (new [received.Value]))
      let innerResult = [? __x13__]
      if (= generatorKind CONST_async) {
        app __x14__ = (Await innerResult)
        innerResult = [? __x14__]
      } else {}
      if (! (= (typeof innerResult) Object)) throw TypeError else {}
      app __x15__ = (IteratorComplete innerResult)
      let done = [? __x15__]
      if (= done true) {
        app __x16__ = (IteratorValue innerResult)
        return [? __x16__]
      } else {}
      if (= generatorKind CONST_async) {
        app __x17__ = (IteratorValue innerResult)
        app __x18__ = (AsyncGeneratorYield [? __x17__])
        received = __x18__
      } else {
        app __x19__ = (GeneratorYield innerResult)
        received = __x19__
      }
    } else {
      let closeCompletion = (new Completion("Type" -> CONST_normal, "Value" -> CONST_empty, "Target" -> CONST_empty))
      if (= generatorKind CONST_async) {
        app __x20__ = (AsyncIteratorClose iteratorRecord closeCompletion)
        [? __x20__]
      } else {
        app __x21__ = (IteratorClose iteratorRecord closeCompletion)
        [? __x21__]
      }
      throw TypeError
    }
  } else {
    assert (= received.Type CONST_return)
    app __x22__ = (GetMethod iterator "return")
    let return = [? __x22__]
    if (= return undefined) {
      if (= generatorKind CONST_async) {
        app __x23__ = (Await received.Value)
        received.Value = [? __x23__]
      } else {}
      return received
    } else {}
    app __x24__ = (Call return iterator (new [received.Value]))
    let innerReturnResult = [? __x24__]
    if (= generatorKind CONST_async) {
      app __x25__ = (Await innerReturnResult)
      innerReturnResult = [? __x25__]
    } else {}
    if (! (= (typeof innerReturnResult) Object)) throw TypeError else {}
    app __x26__ = (IteratorComplete innerReturnResult)
    let done = [? __x26__]
    if (= done true) {
      app __x27__ = (IteratorValue innerReturnResult)
      let value = [? __x27__]
      return (new Completion("Type" -> CONST_return, "Value" -> value, "Target" -> CONST_empty))
    } else {}
    if (= generatorKind CONST_async) {
      app __x28__ = (IteratorValue innerReturnResult)
      app __x29__ = (AsyncGeneratorYield [? __x28__])
      received = __x29__
    } else {
      app __x30__ = (GeneratorYield innerReturnResult)
      received = __x30__
    }
  }
}