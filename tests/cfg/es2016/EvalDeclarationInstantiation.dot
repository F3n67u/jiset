digraph {
  node10085 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x6__ = (+ __x6__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10136 [shape=diamond, label=<<font color="black">(&lt; __x28__ __x27__.length)</font>> color="black" fillcolor="white" style=filled]
  node10073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10166 [shape=cds, label=<<font color="black">74:app __x41__ = (varEnvRec.InitializeBinding varEnvRec vn undefined)</font>> color="black" fillcolor="white" style=filled]
  node10134 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x20__ = (+ __x20__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x5__[__x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10149 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">61:let status = [! __x33__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10061 [shape=cds, label=<<font color="black">app strict = (GetArgument argumentsList 3i)</font>> color="black" fillcolor="white" style=filled]
  node10125 [shape=diamond, label=<<font color="black">(&lt; __x23__ __x22__.length)</font>> color="black" fillcolor="white" style=filled]
  node10103 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x12__[__x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10093 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let fn = __x10__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10138 [shape=cds, label=<<font color="black">54:access __x29__ = (f &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10078 [shape=diamond, label=<<font color="black">(! (= (typeof thisEnvRec) &quot;ObjectEnvironmentRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10071 [shape=cds, label=<<font color="black">7:app __x4__ = (varEnvRec.HasLexicalDeclaration varEnvRec name)</font>> color="black" fillcolor="white" style=filled]
  node10153 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">65:[! __x35__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10121 [shape=diamond, label=<<font color="black">(&lt; __x20__ __x19__.length)</font>> color="black" fillcolor="white" style=filled]
  node10089 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x9__ = (- __x9__ 1i)</td></tr>
      <tr><td align="left">let d = __x8__[__x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10142 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10110 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x16__ = (+ __x16__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10157 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let vn = __x36__[__x37__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x2__[__x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10145 [shape=cds, label=<<font color="black">59:app __x32__ = (varEnvRec.HasBinding varEnvRec fn)</font>> color="black" fillcolor="white" style=filled]
  node10057 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:let __x15__ = __x14__</td></tr>
      <tr><td align="left">37:let __x16__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10113 [shape=diamond, label=<<font color="black">(= vnDefinable false)</font>> color="black" fillcolor="white" style=filled]
  node10062 [shape=cds, label=<<font color="black">0:access __x0__ = (body &quot;VarDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10139 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">54:let fn = __x29__[0i]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10165 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">72:let status = [! __x40__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10133 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x23__ = (+ __x23__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10099 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10102 [shape=diamond, label=<<font color="black">(&lt; __x13__ __x12__.length)</font>> color="black" fillcolor="white" style=filled]
  node10084 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10116 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append vn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10067 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10131 [shape=cds, label=<<font color="black">52:app __x26__ = (lexEnvRec.CreateMutableBinding lexEnvRec dn false)</font>> color="black" fillcolor="white" style=filled]
  node10126 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x22__[__x23__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10154 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x28__ = (+ __x28__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10152 [shape=cds, label=<<font color="black">65:app __x35__ = (varEnvRec.SetMutableBinding varEnvRec fn fo false)</font>> color="black" fillcolor="white" style=filled]
  node10107 [shape=diamond, label=<<font color="black">(&lt; __x16__ __x15__.length)</font>> color="black" fillcolor="white" style=filled]
  node10120 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:let lexDeclarations = __x18__</td></tr>
      <tr><td align="left">46:let __x19__ = lexDeclarations</td></tr>
      <tr><td align="left">46:let __x20__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10163 [shape=diamond, label=<<font color="black">(= bindingExists false)</font>> color="black" fillcolor="white" style=filled]
  node10094 [shape=diamond, label=<<font color="black">(! (contains declaredFunctionNames fn))</font>> color="black" fillcolor="white" style=filled]
  node10158 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10148 [shape=cds, label=<<font color="black">61:app __x33__ = (varEnvRec.CreateMutableBinding varEnvRec fn true)</font>> color="black" fillcolor="white" style=filled]
  node10122 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x19__[__x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let thisLex = lexEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10143 [shape=cds, label=<<font color="black">57:app __x31__ = (varEnvRec.CreateGlobalFunctionBinding varEnvRec fn fo true)</font>> color="black" fillcolor="white" style=filled]
  node10058 [shape=cds, label=<<font color="black">app body = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10069 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node10090 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)))</font>> color="black" fillcolor="white" style=filled]
  node10111 [shape=cds, label=<<font color="black">40:app __x17__ = (varEnvRec.CanDeclareGlobalVar varEnvRec vn)</font>> color="black" fillcolor="white" style=filled]
  node10101 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">35:let __x12__ = varDeclarations</td></tr>
      <tr><td align="left">35:let __x13__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let __x5__ = varNames</td></tr>
      <tr><td align="left">15:let __x6__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let __x2__ = varNames</td></tr>
      <tr><td align="left">6:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10155 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">66:let __x36__ = declaredVarNames</td></tr>
      <tr><td align="left">66:let __x37__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:append fn -&gt; declaredFunctionNames</td></tr>
      <tr><td align="left">32:prepend d -&gt; functionsToInitialize</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10127 [shape=cds, label=<<font color="black">51:access __x24__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10083 [shape=diamond, label=<<font color="black">(= __x7__ true)</font>> color="black" fillcolor="white" style=filled]
  node10130 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">50:[? __x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10140 [shape=cds, label=<<font color="black">55:access __x30__ = (f &quot;InstantiateFunctionObject&quot; lexEnv)</font>> color="black" fillcolor="white" style=filled]
  node10056 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10088 [shape=diamond, label=<<font color="black">(&lt; 0i __x9__)</font>> color="black" fillcolor="white" style=filled]
  node10151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">63:[! __x34__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10066 [shape=diamond, label=<<font color="black">(= strict false)</font>> color="black" fillcolor="white" style=filled]
  node10098 [shape=diamond, label=<<font color="black">(= fnDefinable false)</font>> color="black" fillcolor="white" style=filled]
  node10115 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames vn))</font>> color="black" fillcolor="white" style=filled]
  node10147 [shape=diamond, label=<<font color="black">(= bindingExists false)</font>> color="black" fillcolor="white" style=filled]
  node10076 [shape=diamond, label=<<font color="black">(! (= thisLex varEnv))</font>> color="black" fillcolor="white" style=filled]
  node10108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let vn = __x15__[__x16__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let varNames = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10119 [shape=cds, label=<<font color="black">45:access __x18__ = (body &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10091 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:assert (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10132 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:[? __x26__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10080 [shape=diamond, label=<<font color="black">(&lt; __x6__ __x5__.length)</font>> color="black" fillcolor="white" style=filled]
  node10112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:let vnDefinable = [? __x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10059 [shape=cds, label=<<font color="black">app varEnv = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node10159 [shape=cds, label=<<font color="black">68:app __x38__ = (varEnvRec.CreateGlobalVarBinding varEnvRec vn true)</font>> color="black" fillcolor="white" style=filled]
  node10123 [shape=cds, label=<<font color="black">48:access __x21__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10095 [shape=diamond, label=<<font color="black">(= (typeof varEnvRec) &quot;GlobalEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10144 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">57:[? __x31__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10162 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">70:let bindingExists = __x39__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10164 [shape=cds, label=<<font color="black">72:app __x40__ = (varEnvRec.CreateMutableBinding varEnvRec vn true)</font>> color="black" fillcolor="white" style=filled]
  node10129 [shape=cds, label=<<font color="black">50:app __x25__ = (lexEnvRec.CreateImmutableBinding lexEnvRec dn true)</font>> color="black" fillcolor="white" style=filled]
  node10097 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let fnDefinable = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10128 [shape=diamond, label=<<font color="black">(= __x24__ true)</font>> color="black" fillcolor="white" style=filled]
  node10160 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">68:[? __x38__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10150 [shape=cds, label=<<font color="black">63:app __x34__ = (varEnvRec.InitializeBinding varEnvRec fn fo)</font>> color="black" fillcolor="white" style=filled]
  node10082 [shape=cds, label=<<font color="black">16:app __x7__ = (thisEnvRec.HasBinding thisEnvRec name)</font>> color="black" fillcolor="white" style=filled]
  node10114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10156 [shape=diamond, label=<<font color="black">(&lt; __x37__ __x36__.length)</font>> color="black" fillcolor="white" style=filled]
  node10169 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">75:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10104 [shape=diamond, label=<<font color="black">(|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding))</font>> color="black" fillcolor="white" style=filled]
  node10077 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let thisEnvRec = thisLex.EnvironmentRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10072 [shape=diamond, label=<<font color="black">(= __x4__ true)</font>> color="black" fillcolor="white" style=filled]
  node10135 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:let __x27__ = functionsToInitialize</td></tr>
      <tr><td align="left">53:let __x28__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10137 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let f = __x27__[__x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let varDeclarations = __x1__</td></tr>
      <tr><td align="left">2:let lexEnvRec = lexEnv.EnvironmentRecord</td></tr>
      <tr><td align="left">3:let varEnvRec = varEnv.EnvironmentRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10087 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let functionsToInitialize = (new [])</td></tr>
      <tr><td align="left">21:let declaredFunctionNames = (new [])</td></tr>
      <tr><td align="left">22:let __x8__ = varDeclarations</td></tr>
      <tr><td align="left">22:let __x9__ = __x8__.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10109 [shape=diamond, label=<<font color="black">(! (contains declaredFunctionNames vn))</font>> color="black" fillcolor="white" style=filled]
  node10167 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">74:[! __x41__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10141 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">55:let fo = __x30__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10168 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x37__ = (+ __x37__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10092 [shape=cds, label=<<font color="black">26:access __x10__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10064 [shape=cds, label=<<font color="black">1:access __x1__ = (body &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10105 [shape=cds, label=<<font color="black">37:access __x14__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10124 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">48:let __x22__ = __x21__</td></tr>
      <tr><td align="left">48:let __x23__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10146 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">59:let bindingExists = __x32__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10060 [shape=cds, label=<<font color="black">app lexEnv = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node10086 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let thisLex = thisLex.Outer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10118 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x13__ = (+ __x13__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10161 [shape=cds, label=<<font color="black">70:app __x39__ = (varEnvRec.HasBinding varEnvRec vn)</font>> color="black" fillcolor="white" style=filled]
  node10096 [shape=cds, label=<<font color="black">29:app __x11__ = (varEnvRec.CanDeclareGlobalFunction varEnvRec fn)</font>> color="black" fillcolor="white" style=filled]
  node10108 -> node10109 [ color="black"]
  node10067 -> node10068 [label=<<font color="black">true</font>> color="black"]
  node10067 -> node10075 [label=<<font color="black">false</font>> color="black"]
  node10166 -> node10167 [ color="black"]
  node10105 -> node10106 [ color="black"]
  node10072 -> node10073 [label=<<font color="black">true</font>> color="black"]
  node10072 -> node10074 [label=<<font color="black">false</font>> color="black"]
  node10064 -> node10065 [ color="black"]
  node10113 -> node10114 [label=<<font color="black">true</font>> color="black"]
  node10113 -> node10115 [label=<<font color="black">false</font>> color="black"]
  node10150 -> node10151 [ color="black"]
  node10090 -> node10091 [label=<<font color="black">true</font>> color="black"]
  node10090 -> node10088 [label=<<font color="black">false</font>> color="black"]
  node10086 -> node10076 [ color="black"]
  node10091 -> node10092 [ color="black"]
  node10115 -> node10116 [label=<<font color="black">true</font>> color="black"]
  node10115 -> node10117 [label=<<font color="black">false</font>> color="black"]
  node10163 -> node10164 [label=<<font color="black">true</font>> color="black"]
  node10163 -> node10168 [label=<<font color="black">false</font>> color="black"]
  node10071 -> node10072 [ color="black"]
  node10130 -> node10133 [ color="black"]
  node10121 -> node10122 [label=<<font color="black">true</font>> color="black"]
  node10121 -> node10135 [label=<<font color="black">false</font>> color="black"]
  node10116 -> node10117 [ color="black"]
  node10094 -> node10095 [label=<<font color="black">true</font>> color="black"]
  node10094 -> node10088 [label=<<font color="black">false</font>> color="black"]
  node10141 -> node10142 [ color="black"]
  node10084 -> node10085 [ color="black"]
  node10136 -> node10137 [label=<<font color="black">true</font>> color="black"]
  node10136 -> node10155 [label=<<font color="black">false</font>> color="black"]
  node10144 -> node10154 [ color="black"]
  node10058 -> node10059 [ color="black"]
  node10120 -> node10121 [ color="black"]
  node10118 -> node10102 [ color="black"]
  node10107 -> node10108 [label=<<font color="black">true</font>> color="black"]
  node10107 -> node10118 [label=<<font color="black">false</font>> color="black"]
  node10152 -> node10153 [ color="black"]
  node10156 -> node10157 [label=<<font color="black">true</font>> color="black"]
  node10156 -> node10169 [label=<<font color="black">false</font>> color="black"]
  node10076 -> node10077 [label=<<font color="black">true</font>> color="black"]
  node10076 -> node10087 [label=<<font color="black">false</font>> color="black"]
  node10149 -> node10150 [ color="black"]
  node10131 -> node10132 [ color="black"]
  node10164 -> node10165 [ color="black"]
  node10068 -> node10069 [ color="black"]
  node10148 -> node10149 [ color="black"]
  node10155 -> node10156 [ color="black"]
  node10146 -> node10147 [ color="black"]
  node10157 -> node10158 [ color="black"]
  node10070 -> node10071 [ color="black"]
  node10169 -> node10057 [ color="black"]
  node10088 -> node10089 [label=<<font color="black">true</font>> color="black"]
  node10088 -> node10101 [label=<<font color="black">false</font>> color="black"]
  node10162 -> node10163 [ color="black"]
  node10140 -> node10141 [ color="black"]
  node10145 -> node10146 [ color="black"]
  node10139 -> node10140 [ color="black"]
  node10096 -> node10097 [ color="black"]
  node10111 -> node10112 [ color="black"]
  node10066 -> node10067 [label=<<font color="black">true</font>> color="black"]
  node10066 -> node10087 [label=<<font color="black">false</font>> color="black"]
  node10159 -> node10160 [ color="black"]
  node10097 -> node10098 [ color="black"]
  node10079 -> node10080 [ color="black"]
  node10126 -> node10127 [ color="black"]
  node10073 -> node10074 [ color="black"]
  node10095 -> node10096 [label=<<font color="black">true</font>> color="black"]
  node10095 -> node10100 [label=<<font color="black">false</font>> color="black"]
  node10154 -> node10136 [ color="black"]
  node10080 -> node10081 [label=<<font color="black">true</font>> color="black"]
  node10080 -> node10086 [label=<<font color="black">false</font>> color="black"]
  node10112 -> node10113 [ color="black"]
  node10161 -> node10162 [ color="black"]
  node10082 -> node10083 [ color="black"]
  node10125 -> node10126 [label=<<font color="black">true</font>> color="black"]
  node10125 -> node10134 [label=<<font color="black">false</font>> color="black"]
  node10098 -> node10099 [label=<<font color="black">true</font>> color="black"]
  node10098 -> node10100 [label=<<font color="black">false</font>> color="black"]
  node10128 -> node10129 [label=<<font color="black">true</font>> color="black"]
  node10128 -> node10131 [label=<<font color="black">false</font>> color="black"]
  node10077 -> node10078 [ color="black"]
  node10143 -> node10144 [ color="black"]
  node10085 -> node10080 [ color="black"]
  node10117 -> node10107 [ color="black"]
  node10075 -> node10076 [ color="black"]
  node10124 -> node10125 [ color="black"]
  node10061 -> node10062 [ color="black"]
  node10142 -> node10143 [label=<<font color="black">true</font>> color="black"]
  node10142 -> node10145 [label=<<font color="black">false</font>> color="black"]
  node10168 -> node10156 [ color="black"]
  node10063 -> node10064 [ color="black"]
  node10065 -> node10066 [ color="black"]
  node10099 -> node10100 [ color="black"]
  node10119 -> node10120 [ color="black"]
  node10153 -> node10154 [ color="black"]
  node10151 -> node10154 [ color="black"]
  node10167 -> node10168 [ color="black"]
  node10089 -> node10090 [ color="black"]
  node10127 -> node10128 [ color="black"]
  node10158 -> node10159 [label=<<font color="black">true</font>> color="black"]
  node10158 -> node10161 [label=<<font color="black">false</font>> color="black"]
  node10062 -> node10063 [ color="black"]
  node10087 -> node10088 [ color="black"]
  node10093 -> node10094 [ color="black"]
  node10103 -> node10104 [ color="black"]
  node10059 -> node10060 [ color="black"]
  node10102 -> node10103 [label=<<font color="black">true</font>> color="black"]
  node10102 -> node10119 [label=<<font color="black">false</font>> color="black"]
  node10160 -> node10168 [ color="black"]
  node10100 -> node10088 [ color="black"]
  node10106 -> node10107 [ color="black"]
  node10101 -> node10102 [ color="black"]
  node10083 -> node10084 [label=<<font color="black">true</font>> color="black"]
  node10083 -> node10085 [label=<<font color="black">false</font>> color="black"]
  node10060 -> node10061 [ color="black"]
  node10114 -> node10115 [ color="black"]
  node10133 -> node10125 [ color="black"]
  node10078 -> node10079 [label=<<font color="black">true</font>> color="black"]
  node10078 -> node10086 [label=<<font color="black">false</font>> color="black"]
  node10123 -> node10124 [ color="black"]
  node10092 -> node10093 [ color="black"]
  node10081 -> node10082 [ color="black"]
  node10147 -> node10148 [label=<<font color="black">true</font>> color="black"]
  node10147 -> node10152 [label=<<font color="black">false</font>> color="black"]
  node10137 -> node10138 [ color="black"]
  node10074 -> node10069 [ color="black"]
  node10056 -> node10058 [ color="black"]
  node10132 -> node10133 [ color="black"]
  node10069 -> node10070 [label=<<font color="black">true</font>> color="black"]
  node10069 -> node10075 [label=<<font color="black">false</font>> color="black"]
  node10134 -> node10121 [ color="black"]
  node10109 -> node10110 [label=<<font color="black">true</font>> color="black"]
  node10109 -> node10117 [label=<<font color="black">false</font>> color="black"]
  node10135 -> node10136 [ color="black"]
  node10110 -> node10111 [label=<<font color="black">true</font>> color="black"]
  node10110 -> node10115 [label=<<font color="black">false</font>> color="black"]
  node10129 -> node10130 [ color="black"]
  node10138 -> node10139 [ color="black"]
  node10165 -> node10166 [ color="black"]
  node10104 -> node10105 [label=<<font color="black">true</font>> color="black"]
  node10104 -> node10118 [label=<<font color="black">false</font>> color="black"]
  node10122 -> node10123 [ color="black"]
}
