digraph {
  node666 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return key</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node660 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node661 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node665 [shape=diamond, label=<<font color="black">(= __x1__ Symbol)</font>> color="black" fillcolor="white" style=filled]
  node662 [shape=cds, label=<<font color="black">0:app __x0__ = (ToPrimitive argument CONST_string)</font>> color="black" fillcolor="white" style=filled]
  node668 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node663 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let key = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node667 [shape=cds, label=<<font color="black">3:app __x2__ = (ToString key)</font>> color="black" fillcolor="white" style=filled]
  node664 [shape=cds, label=<<font color="black">1:app __x1__ = (Type key)</font>> color="black" fillcolor="white" style=filled]
  node664 -> node665 [ color="black"]
  node665 -> node666 [label=<<font color="black">true</font>> color="black"]
  node665 -> node667 [label=<<font color="black">false</font>> color="black"]
  node663 -> node664 [ color="black"]
  node668 -> node661 [ color="black"]
  node662 -> node663 [ color="black"]
  node667 -> node668 [ color="black"]
  node666 -> node667 [ color="black"]
  node660 -> node662 [ color="black"]
}
