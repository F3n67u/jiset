digraph {
  node16836 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iterator result)</font>> color="black" fillcolor="white" style=filled]
  node16817 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16840 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16823 [shape=diamond, label=<<font color="black">(is-completion iterator)</font>> color="black" fillcolor="white" style=filled]
  node16814 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16830 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iterator</td></tr>
      <tr><td align="left">5:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; iterator, &quot;Done&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16845 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16816 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node16821 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16826 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iterator.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16841 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16833 [shape=cds, label=<<font color="black">7:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node16815 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16832 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16844 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16822 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iterator = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16837 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16812 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16825 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterator = iterator.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16819 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16834 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node16838 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node16831 [shape=cds, label=<<font color="black">6:app __x4__ = (PerformPromiseRace iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node16828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16843 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16839 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16824 [shape=diamond, label=<<font color="black">(= iterator.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16846 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16835 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node16813 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16827 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16842 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16818 -> node16819 [ color="black"]
  node16843 -> node16844 [ color="black"]
  node16826 -> node16827 [ color="black"]
  node16834 -> node16835 [label=<<font color="black">true</font>> color="black"]
  node16834 -> node16846 [label=<<font color="black">false</font>> color="black"]
  node16827 -> node16828 [label=<<font color="black">true</font>> color="black"]
  node16827 -> node16829 [label=<<font color="black">false</font>> color="black"]
  node16837 -> node16838 [ color="black"]
  node16820 -> node16821 [ color="black"]
  node16839 -> node16840 [label=<<font color="black">true</font>> color="black"]
  node16839 -> node16841 [label=<<font color="black">false</font>> color="black"]
  node16835 -> node16836 [label=<<font color="black">true</font>> color="black"]
  node16835 -> node16838 [label=<<font color="black">false</font>> color="black"]
  node16838 -> node16839 [label=<<font color="black">true</font>> color="black"]
  node16838 -> node16845 [label=<<font color="black">false</font>> color="black"]
  node16825 -> node16830 [ color="black"]
  node16833 -> node16834 [ color="black"]
  node16831 -> node16832 [ color="black"]
  node16824 -> node16825 [label=<<font color="black">true</font>> color="black"]
  node16824 -> node16826 [label=<<font color="black">false</font>> color="black"]
  node16845 -> node16846 [ color="black"]
  node16823 -> node16824 [label=<<font color="black">true</font>> color="black"]
  node16823 -> node16830 [label=<<font color="black">false</font>> color="black"]
  node16842 -> node16843 [label=<<font color="black">true</font>> color="black"]
  node16842 -> node16844 [label=<<font color="black">false</font>> color="black"]
  node16846 -> node16813 [ color="black"]
  node16836 -> node16837 [ color="black"]
  node16841 -> node16842 [ color="black"]
  node16812 -> node16814 [ color="black"]
  node16840 -> node16845 [ color="black"]
  node16817 -> node16818 [label=<<font color="black">true</font>> color="black"]
  node16817 -> node16819 [label=<<font color="black">false</font>> color="black"]
  node16816 -> node16817 [ color="black"]
  node16829 -> node16830 [ color="black"]
  node16844 -> node16845 [ color="black"]
  node16821 -> node16822 [ color="black"]
  node16815 -> node16816 [ color="black"]
  node16832 -> node16833 [ color="black"]
  node16828 -> node16829 [ color="black"]
  node16822 -> node16823 [ color="black"]
  node16830 -> node16831 [ color="black"]
  node16819 -> node16820 [ color="black"]
  node16814 -> node16815 [ color="black"]
}
