digraph {
  node16581 [shape=diamond, label=<<font color="black">(is-completion iterator)</font>> color="black" fillcolor="white" style=filled]
  node16584 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [iterator.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16600 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x7__) (! (= __x7__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16579 [shape=cds, label=<<font color="black">3:app __x2__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16582 [shape=diamond, label=<<font color="black">(= iterator.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16575 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16571 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16590 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16598 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16576 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16604 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16591 [shape=cds, label=<<font color="black">7:app __x5__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node16572 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16587 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16577 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16594 [shape=cds, label=<<font color="black">app __x6__ = (IteratorClose iterator result)</font>> color="black" fillcolor="white" style=filled]
  node16592 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node16597 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node16601 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16588 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:iterator</td></tr>
      <tr><td align="left">5:let iteratorRecord = (new Record(&quot;Iterator&quot; -&gt; iterator, &quot;Done&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16583 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterator = iterator.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16573 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16580 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let iterator = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16593 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node16570 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16602 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16585 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node16599 [shape=cds, label=<<font color="black">app __x7__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node16596 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node16574 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node16589 [shape=cds, label=<<font color="black">6:app __x4__ = (PerformPromiseRace iteratorRecord C promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node16603 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16586 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16578 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16595 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16584 -> node16585 [ color="black"]
  node16601 -> node16602 [ color="black"]
  node16578 -> node16579 [ color="black"]
  node16581 -> node16582 [label=<<font color="black">true</font>> color="black"]
  node16581 -> node16588 [label=<<font color="black">false</font>> color="black"]
  node16572 -> node16573 [ color="black"]
  node16600 -> node16601 [label=<<font color="black">true</font>> color="black"]
  node16600 -> node16602 [label=<<font color="black">false</font>> color="black"]
  node16591 -> node16592 [ color="black"]
  node16574 -> node16575 [ color="black"]
  node16580 -> node16581 [ color="black"]
  node16589 -> node16590 [ color="black"]
  node16588 -> node16589 [ color="black"]
  node16582 -> node16583 [label=<<font color="black">true</font>> color="black"]
  node16582 -> node16584 [label=<<font color="black">false</font>> color="black"]
  node16583 -> node16588 [ color="black"]
  node16595 -> node16596 [ color="black"]
  node16594 -> node16595 [ color="black"]
  node16585 -> node16586 [label=<<font color="black">true</font>> color="black"]
  node16585 -> node16587 [label=<<font color="black">false</font>> color="black"]
  node16590 -> node16591 [ color="black"]
  node16596 -> node16597 [label=<<font color="black">true</font>> color="black"]
  node16596 -> node16603 [label=<<font color="black">false</font>> color="black"]
  node16604 -> node16571 [ color="black"]
  node16573 -> node16574 [ color="black"]
  node16592 -> node16593 [label=<<font color="black">true</font>> color="black"]
  node16592 -> node16604 [label=<<font color="black">false</font>> color="black"]
  node16586 -> node16587 [ color="black"]
  node16598 -> node16603 [ color="black"]
  node16597 -> node16598 [label=<<font color="black">true</font>> color="black"]
  node16597 -> node16599 [label=<<font color="black">false</font>> color="black"]
  node16575 -> node16576 [label=<<font color="black">true</font>> color="black"]
  node16575 -> node16577 [label=<<font color="black">false</font>> color="black"]
  node16576 -> node16577 [ color="black"]
  node16579 -> node16580 [ color="black"]
  node16603 -> node16604 [ color="black"]
  node16577 -> node16578 [ color="black"]
  node16587 -> node16588 [ color="black"]
  node16570 -> node16572 [ color="black"]
  node16593 -> node16594 [label=<<font color="black">true</font>> color="black"]
  node16593 -> node16596 [label=<<font color="black">false</font>> color="black"]
  node16599 -> node16600 [ color="black"]
  node16602 -> node16603 [ color="black"]
}
