digraph {
  node14905 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14921 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14908 [shape=cds, label=<<font color="black">4:app __x3__ = (Get R &quot;flags&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14914 [shape=cds, label=<<font color="black">6:app __x7__ = (ToLength [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node14897 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14918 [shape=diamond, label=<<font color="black">(contains flags &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14915 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let lastIndex = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14898 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14906 [shape=cds, label=<<font color="black">3:app __x2__ = (SpeciesConstructor R INTRINSIC_RegExp)</font>> color="black" fillcolor="white" style=filled]
  node14916 [shape=cds, label=<<font color="black">7:app __x8__ = (Set matcher &quot;lastIndex&quot; lastIndex true)</font>> color="black" fillcolor="white" style=filled]
  node14922 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14912 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let matcher = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14909 [shape=cds, label=<<font color="black">4:app __x4__ = (ToString [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node14923 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14913 [shape=cds, label=<<font color="black">6:app __x6__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14904 [shape=cds, label=<<font color="black">2:app __x1__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node14917 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14900 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14911 [shape=cds, label=<<font color="black">5:app __x5__ = (Construct C (new [R, flags]))</font>> color="black" fillcolor="white" style=filled]
  node14901 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node14907 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let C = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14910 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let flags = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14925 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return [! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14902 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node14919 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14924 [shape=cds, label=<<font color="black">12:app __x9__ = (CreateRegExpStringIterator matcher S global fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node14903 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14899 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14920 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14918 -> node14919 [label=<<font color="black">true</font>> color="black"]
  node14918 -> node14920 [label=<<font color="black">false</font>> color="black"]
  node14921 -> node14922 [label=<<font color="black">true</font>> color="black"]
  node14921 -> node14923 [label=<<font color="black">false</font>> color="black"]
  node14907 -> node14908 [ color="black"]
  node14906 -> node14907 [ color="black"]
  node14901 -> node14902 [ color="black"]
  node14912 -> node14913 [ color="black"]
  node14903 -> node14904 [ color="black"]
  node14915 -> node14916 [ color="black"]
  node14917 -> node14918 [ color="black"]
  node14899 -> node14900 [ color="black"]
  node14897 -> node14899 [ color="black"]
  node14924 -> node14925 [ color="black"]
  node14914 -> node14915 [ color="black"]
  node14911 -> node14912 [ color="black"]
  node14909 -> node14910 [ color="black"]
  node14904 -> node14905 [ color="black"]
  node14920 -> node14921 [ color="black"]
  node14905 -> node14906 [ color="black"]
  node14910 -> node14911 [ color="black"]
  node14908 -> node14909 [ color="black"]
  node14902 -> node14903 [label=<<font color="black">true</font>> color="black"]
  node14902 -> node14904 [label=<<font color="black">false</font>> color="black"]
  node14916 -> node14917 [ color="black"]
  node14923 -> node14924 [ color="black"]
  node14913 -> node14914 [ color="black"]
  node14922 -> node14924 [ color="black"]
  node14925 -> node14898 [ color="black"]
  node14919 -> node14921 [ color="black"]
  node14900 -> node14901 [ color="black"]
}
