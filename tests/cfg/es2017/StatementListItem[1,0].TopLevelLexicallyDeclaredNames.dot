digraph {
  node5509 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5513 [shape=cds, label=<<font color="black">2:access __x0__ = (Declaration &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5508 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5511 [shape=cds, label=<<font color="black">access HoistableDeclaration = (Declaration &quot;HoistableDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5510 [shape=diamond, label=<<font color="black">(is-instance-of Declaration Declaration0)</font>> color="black" fillcolor="white" style=filled]
  node5514 -> node5509 [ color="black"]
  node5508 -> node5510 [ color="black"]
  node5512 -> node5513 [ color="black"]
  node5510 -> node5511 [label=<<font color="black">true</font>> color="black"]
  node5510 -> node5513 [label=<<font color="black">false</font>> color="black"]
  node5513 -> node5514 [ color="black"]
  node5511 -> node5512 [ color="black"]
}
