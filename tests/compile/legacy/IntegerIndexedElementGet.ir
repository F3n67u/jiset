{
  app __x0__ = (Type index)
  assert (= __x0__ Number)
  let buffer = O.ViewedArrayBuffer
  app __x1__ = (IsDetachedBuffer buffer)
  if (= __x1__ true) throw INTRINSIC_TypeError else {}
  app __x2__ = (IsValidIntegerIndex O index)
  if (= [! __x2__] false) return undefined else {}
  let offset = O.ByteOffset
  let arrayTypeName = O.TypedArrayName
  let elementSize = GLOBAL_typedArrayInfo[arrayTypeName].ElementSize
  let indexedPosition = (+ (* index elementSize) offset)
  let elementType = GLOBAL_typedArrayInfo[arrayTypeName].ElementType
  app __x3__ = (GetValueFromBuffer buffer indexedPosition elementType true CONST_Unordered)
  return __x3__
}