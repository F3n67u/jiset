digraph {
  node3944 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let ref = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3942 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (is-instance-of constructExpr NewExpression) (is-instance-of constructExpr MemberExpression))</td></tr>
      <tr><td align="left">1:assert (|| (= arguments CONST_empty) (is-instance-of arguments Arguments))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3947 [shape=diamond, label=<<font color="black">(= arguments CONST_empty)</font>> color="black" fillcolor="white" style=filled]
  node3951 [shape=cds, label=<<font color="black">8:app __x3__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node3955 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3948 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let argList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3941 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3945 [shape=cds, label=<<font color="black">3:app __x1__ = (GetValue ref)</font>> color="black" fillcolor="white" style=filled]
  node3953 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3949 [shape=cds, label=<<font color="black">6:access __x2__ = (arguments &quot;ArgumentListEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3940 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3943 [shape=cds, label=<<font color="black">2:access __x0__ = (constructExpr &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3946 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let constructor = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3950 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let argList = __x2__</td></tr>
      <tr><td align="left">7:[? argList]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3954 [shape=cds, label=<<font color="black">9:app __x4__ = (Construct constructor argList)</font>> color="black" fillcolor="white" style=filled]
  node3952 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node3954 -> node3955 [ color="black"]
  node3947 -> node3948 [label=<<font color="black">true</font>> color="black"]
  node3947 -> node3949 [label=<<font color="black">false</font>> color="black"]
  node3948 -> node3951 [ color="black"]
  node3945 -> node3946 [ color="black"]
  node3953 -> node3954 [ color="black"]
  node3946 -> node3947 [ color="black"]
  node3950 -> node3951 [ color="black"]
  node3949 -> node3950 [ color="black"]
  node3943 -> node3944 [ color="black"]
  node3940 -> node3942 [ color="black"]
  node3951 -> node3952 [ color="black"]
  node3955 -> node3941 [ color="black"]
  node3942 -> node3943 [ color="black"]
  node3944 -> node3945 [ color="black"]
  node3952 -> node3953 [label=<<font color="black">true</font>> color="black"]
  node3952 -> node3954 [label=<<font color="black">false</font>> color="black"]
}
