digraph {
  node13933 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:[! __x10__]</td></tr>
      <tr><td align="left">37:??? &quot;Let id:{matchedSubstr} be the matched substring ( i . e . the portion of id:{S} between offset id:{lastIndex} inclusive and offset id:{e} exclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13901 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let matcher = R.RegExpMatcher</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13906 [shape=diamond, label=<<font color="black">(= matchSucceeded false)</font>> color="black" fillcolor="white" style=filled]
  node13910 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13924 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node13928 [shape=cds, label=<<font color="black">33:app __x8__ = (ArrayCreate (+ n 1i))</font>> color="black" fillcolor="white" style=filled]
  node13932 [shape=cds, label=<<font color="black">36:app __x10__ = (CreateDataProperty A &quot;input&quot; S)</font>> color="black" fillcolor="white" style=filled]
  node13897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13934 [shape=cds, label=<<font color="black">38:app __x11__ = (CreateDataProperty A &quot;0&quot; matchedSubstr)</font>> color="black" fillcolor="white" style=filled]
  node13887 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13926 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:[? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13922 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node13886 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13918 [shape=cds, label=<<font color="black">21:app __x6__ = (AdvanceStringIndex S lastIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node13915 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node13923 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:??? &quot;id:{e} is an index into the id:{Input} character list , derived from id:{S} , matched by id:{matcher} . Let id:{eUTF} be the smallest index into id:{S} that corresponds to the character at element id:{e} of id:{Input} . If id:{e} is greater than or equal to the number of elements in id:{Input} , then id:{eUTF} is the number of code units in id:{S} .&quot;</td></tr>
      <tr><td align="left">28:e = eUTF</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13942 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node13927 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:??? &quot;Let id:{n} be the number of elements in id:{r} ' s id:{captures} List . ( This is the same value as link:{unhandled: sec-notation} ' s id:{NcapturingParens} . )&quot;</td></tr>
      <tr><td align="left">32:assert (&lt; n (- (** 2.0 32i) 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13938 [shape=diamond, label=<<font color="black">(&lt; i __x13__)</font>> color="black" fillcolor="white" style=filled]
  node13891 [shape=cds, label=<<font color="black">3:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node13936 [shape=cds, label=<<font color="black">43:app __x12__ = (CreateDataProperty A &quot;groups&quot; groups)</font>> color="black" fillcolor="white" style=filled]
  node13914 [shape=diamond, label=<<font color="black">(= r CONST_failure)</font>> color="black" fillcolor="white" style=filled]
  node13917 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x5__]</td></tr>
      <tr><td align="left">20:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let lastIndex = [? __x2__]</td></tr>
      <tr><td align="left">4:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13946 [shape=cds, label=<<font color="black">app __x15__ = (CreateDataProperty A [! __x14__] capturedValue)</font>> color="black" fillcolor="white" style=filled]
  node13939 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{captureI} be id:{i} sup:{th} element of id:{r} ' s id:{captures} List .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13904 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13899 [shape=diamond, label=<<font color="black">(&amp;&amp; (= global false) (= sticky false))</font>> color="black" fillcolor="white" style=filled]
  node13900 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">lastIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13911 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13943 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{capturedValue} be the String value whose code units are the UTF16Encoding of the code points of id:{captureI} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13896 [shape=diamond, label=<<font color="black">(contains flags &quot;y&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13907 [shape=diamond, label=<<font color="black">(&lt; length lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node13947 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[! __x15__]</td></tr>
      <tr><td align="left">??? &quot;If the id:{i} th capture of id:{R} was defined with a nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13913 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let r = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13898 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13920 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">matchSucceeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13908 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node13935 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:[! __x11__]</td></tr>
      <tr><td align="left">39:??? &quot;If id:{R} contains any nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">41:??? &quot;Else , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13903 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13945 [shape=cds, label=<<font color="black">app __x14__ = (ToString i)</font>> color="black" fillcolor="white" style=filled]
  node13888 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node13930 [shape=cds, label=<<font color="black">35:app __x9__ = (CreateDataProperty A &quot;index&quot; lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node13940 [shape=diamond, label=<<font color="black">(= captureI undefined)</font>> color="black" fillcolor="white" style=filled]
  node13944 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = captureI</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13925 [shape=cds, label=<<font color="black">30:app __x7__ = (Set R &quot;lastIndex&quot; e true)</font>> color="black" fillcolor="white" style=filled]
  node13889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ String)</td></tr>
      <tr><td align="left">2:let length = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13921 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let e = r.endIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13916 [shape=cds, label=<<font color="black">19:app __x5__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node13893 [shape=diamond, label=<<font color="black">(contains flags &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13912 [shape=cds, label=<<font color="black">16:app __x4__ = (matcher S lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node13948 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">57:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13931 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13919 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:lastIndex = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13902 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13929 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let A = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13890 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13905 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let matchSucceeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13941 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13937 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:[! __x12__]</td></tr>
      <tr><td align="left">44:let i = (+ 0i 1i)</td></tr>
      <tr><td align="left">44:let __x13__ = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13909 [shape=cds, label=<<font color="black">14:app __x3__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node13932 -> node13933 [ color="black"]
  node13944 -> node13945 [ color="black"]
  node13927 -> node13928 [ color="black"]
  node13934 -> node13935 [ color="black"]
  node13931 -> node13932 [ color="black"]
  node13939 -> node13940 [ color="black"]
  node13892 -> node13893 [ color="black"]
  node13900 -> node13901 [ color="black"]
  node13912 -> node13913 [ color="black"]
  node13909 -> node13910 [ color="black"]
  node13942 -> node13943 [label=<<font color="black">true</font>> color="black"]
  node13942 -> node13944 [label=<<font color="black">false</font>> color="black"]
  node13896 -> node13897 [label=<<font color="black">true</font>> color="black"]
  node13896 -> node13898 [label=<<font color="black">false</font>> color="black"]
  node13922 -> node13923 [label=<<font color="black">true</font>> color="black"]
  node13922 -> node13924 [label=<<font color="black">false</font>> color="black"]
  node13906 -> node13907 [label=<<font color="black">true</font>> color="black"]
  node13906 -> node13921 [label=<<font color="black">false</font>> color="black"]
  node13923 -> node13924 [ color="black"]
  node13937 -> node13938 [ color="black"]
  node13899 -> node13900 [label=<<font color="black">true</font>> color="black"]
  node13899 -> node13901 [label=<<font color="black">false</font>> color="black"]
  node13914 -> node13915 [label=<<font color="black">true</font>> color="black"]
  node13914 -> node13920 [label=<<font color="black">false</font>> color="black"]
  node13889 -> node13890 [ color="black"]
  node13926 -> node13927 [ color="black"]
  node13908 -> node13909 [label=<<font color="black">true</font>> color="black"]
  node13908 -> node13911 [label=<<font color="black">false</font>> color="black"]
  node13938 -> node13939 [label=<<font color="black">true</font>> color="black"]
  node13938 -> node13948 [label=<<font color="black">false</font>> color="black"]
  node13941 -> node13945 [ color="black"]
  node13943 -> node13945 [ color="black"]
  node13936 -> node13937 [ color="black"]
  node13920 -> node13906 [ color="black"]
  node13894 -> node13896 [ color="black"]
  node13919 -> node13906 [ color="black"]
  node13930 -> node13931 [ color="black"]
  node13925 -> node13926 [ color="black"]
  node13907 -> node13908 [label=<<font color="black">true</font>> color="black"]
  node13907 -> node13912 [label=<<font color="black">false</font>> color="black"]
  node13897 -> node13899 [ color="black"]
  node13918 -> node13919 [ color="black"]
  node13891 -> node13892 [ color="black"]
  node13946 -> node13947 [ color="black"]
  node13911 -> node13912 [ color="black"]
  node13929 -> node13930 [ color="black"]
  node13921 -> node13922 [ color="black"]
  node13935 -> node13936 [ color="black"]
  node13947 -> node13938 [ color="black"]
  node13902 -> node13903 [label=<<font color="black">true</font>> color="black"]
  node13902 -> node13904 [label=<<font color="black">false</font>> color="black"]
  node13898 -> node13899 [ color="black"]
  node13948 -> node13887 [ color="black"]
  node13945 -> node13946 [ color="black"]
  node13901 -> node13902 [ color="black"]
  node13916 -> node13917 [ color="black"]
  node13913 -> node13914 [ color="black"]
  node13904 -> node13905 [ color="black"]
  node13924 -> node13925 [label=<<font color="black">true</font>> color="black"]
  node13924 -> node13927 [label=<<font color="black">false</font>> color="black"]
  node13893 -> node13894 [label=<<font color="black">true</font>> color="black"]
  node13893 -> node13895 [label=<<font color="black">false</font>> color="black"]
  node13917 -> node13918 [ color="black"]
  node13886 -> node13888 [ color="black"]
  node13895 -> node13896 [ color="black"]
  node13940 -> node13941 [label=<<font color="black">true</font>> color="black"]
  node13940 -> node13942 [label=<<font color="black">false</font>> color="black"]
  node13915 -> node13916 [label=<<font color="black">true</font>> color="black"]
  node13915 -> node13918 [label=<<font color="black">false</font>> color="black"]
  node13910 -> node13911 [ color="black"]
  node13888 -> node13889 [ color="black"]
  node13928 -> node13929 [ color="black"]
  node13890 -> node13891 [ color="black"]
  node13903 -> node13905 [ color="black"]
  node13905 -> node13906 [ color="black"]
  node13933 -> node13934 [ color="black"]
}
