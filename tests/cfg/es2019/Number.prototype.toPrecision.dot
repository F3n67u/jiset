digraph {
  node12077 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:return (+ s m)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:??? &quot;Let id:{m} be the String value consisting of id:{p} occurrences of the code unit 0x0030 ( DIGIT ZERO ) .&quot;</td></tr>
      <tr><td align="left">13:let e = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (+ s &quot;Infinity&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:??? &quot;Let id:{e} and id:{n} be integers such that 10 sup:{id:{p} - 1} &le; id:{n} &lt; 10 sup:{id:{p}} and for which the exact mathematical value of id:{n} &times; 10 sup:{id:{e} - id:{p} + 1} - id:{x} is as close to zero as possible . If there are two such sets of id:{e} and id:{n} , pick the id:{e} and id:{n} for which id:{n} &times; 10 sup:{id:{e} - id:{p} + 1} is larger .&quot;</td></tr>
      <tr><td align="left">16:??? &quot;Let id:{m} be the String value consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12045 [shape=cds, label=<<font color="black">0:app __x0__ = (thisNumberValue this)</font>> color="black" fillcolor="white" style=filled]
  node12059 [shape=diamond, label=<<font color="black">(|| (&lt; p 1i) (&lt; 100i p))</font>> color="black" fillcolor="white" style=filled]
  node12052 [shape=diamond, label=<<font color="black">(= x NaN)</font>> color="black" fillcolor="white" style=filled]
  node12064 [shape=diamond, label=<<font color="black">(|| (&lt; e -6i) (! (&lt; e p)))</font>> color="black" fillcolor="white" style=filled]
  node12060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:s = &quot;-&quot;</td></tr>
      <tr><td align="left">7:x = (- x)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:??? &quot;Let id:{d} be the String value consisting of the digits of the decimal representation of id:{e} ( in order , with no leading zeroes ) .&quot;</td></tr>
      <tr><td align="left">28:return (+ (+ (+ (+ s m) &quot;e&quot;) c) d)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let s = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12076 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Set id:{m} to the string - concatenation of the code unit 0x0030 ( DIGIT ZERO ) , the code unit 0x002E ( FULL STOP ) , - ( id:{e} + 1 ) occurrences of the code unit 0x0030 ( DIGIT ZERO ) , and the String id:{m} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12042 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12055 [shape=diamond, label=<<font color="black">(&lt; x 0i)</font>> color="black" fillcolor="white" style=filled]
  node12057 [shape=diamond, label=<<font color="black">(== x Infinity)</font>> color="black" fillcolor="white" style=filled]
  node12046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let x = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:assert (! (== e 0i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let c = &quot;+&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let p = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12068 [shape=diamond, label=<<font color="black">(&lt; 0i e)</font>> color="black" fillcolor="white" style=filled]
  node12073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (+ s m)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12074 [shape=diamond, label=<<font color="black">(! (&lt; e 0i))</font>> color="black" fillcolor="white" style=filled]
  node12072 [shape=diamond, label=<<font color="black">(== e (- p 1i))</font>> color="black" fillcolor="white" style=filled]
  node12067 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:??? &quot;Let id:{a} be the first code unit of id:{m} , and let id:{b} be the remaining id:{p} - 1 code units of id:{m} .&quot;</td></tr>
      <tr><td align="left">21:m = (+ (+ a &quot;.&quot;) b)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12053 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;NaN&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12049 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12044 [shape=cds, label=<<font color="black">app precision = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12048 [shape=cds, label=<<font color="black">app __x1__ = (ToString x)</font>> color="black" fillcolor="white" style=filled]
  node12075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Set id:{m} to the string - concatenation of the first id:{e} + 1 code units of id:{m} , the code unit 0x002E ( FULL STOP ) , and the remaining id:{p} - ( id:{e} + 1 ) code units of id:{m} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12043 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12066 [shape=diamond, label=<<font color="black">(! (== p 1i))</font>> color="black" fillcolor="white" style=filled]
  node12061 [shape=diamond, label=<<font color="black">(== x 0i)</font>> color="black" fillcolor="white" style=filled]
  node12050 [shape=cds, label=<<font color="black">2:app __x2__ = (ToInteger precision)</font>> color="black" fillcolor="white" style=filled]
  node12070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let c = &quot;-&quot;</td></tr>
      <tr><td align="left">26:e = (- e)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12047 [shape=diamond, label=<<font color="black">(= precision undefined)</font>> color="black" fillcolor="white" style=filled]
  node12050 -> node12051 [ color="black"]
  node12053 -> node12054 [ color="black"]
  node12070 -> node12071 [ color="black"]
  node12060 -> node12061 [ color="black"]
  node12069 -> node12071 [ color="black"]
  node12076 -> node12077 [ color="black"]
  node12064 -> node12065 [label=<<font color="black">true</font>> color="black"]
  node12064 -> node12072 [label=<<font color="black">false</font>> color="black"]
  node12065 -> node12066 [ color="black"]
  node12067 -> node12068 [ color="black"]
  node12045 -> node12046 [ color="black"]
  node12054 -> node12055 [ color="black"]
  node12063 -> node12064 [ color="black"]
  node12075 -> node12077 [ color="black"]
  node12047 -> node12048 [label=<<font color="black">true</font>> color="black"]
  node12047 -> node12050 [label=<<font color="black">false</font>> color="black"]
  node12068 -> node12069 [label=<<font color="black">true</font>> color="black"]
  node12068 -> node12070 [label=<<font color="black">false</font>> color="black"]
  node12061 -> node12062 [label=<<font color="black">true</font>> color="black"]
  node12061 -> node12063 [label=<<font color="black">false</font>> color="black"]
  node12066 -> node12067 [label=<<font color="black">true</font>> color="black"]
  node12066 -> node12068 [label=<<font color="black">false</font>> color="black"]
  node12046 -> node12047 [ color="black"]
  node12049 -> node12050 [ color="black"]
  node12056 -> node12057 [ color="black"]
  node12074 -> node12075 [label=<<font color="black">true</font>> color="black"]
  node12074 -> node12076 [label=<<font color="black">false</font>> color="black"]
  node12077 -> node12043 [ color="black"]
  node12052 -> node12053 [label=<<font color="black">true</font>> color="black"]
  node12052 -> node12054 [label=<<font color="black">false</font>> color="black"]
  node12051 -> node12052 [ color="black"]
  node12055 -> node12056 [label=<<font color="black">true</font>> color="black"]
  node12055 -> node12057 [label=<<font color="black">false</font>> color="black"]
  node12042 -> node12044 [ color="black"]
  node12062 -> node12072 [ color="black"]
  node12059 -> node12060 [label=<<font color="black">true</font>> color="black"]
  node12059 -> node12061 [label=<<font color="black">false</font>> color="black"]
  node12058 -> node12059 [ color="black"]
  node12073 -> node12074 [ color="black"]
  node12071 -> node12072 [ color="black"]
  node12044 -> node12045 [ color="black"]
  node12057 -> node12058 [label=<<font color="black">true</font>> color="black"]
  node12057 -> node12059 [label=<<font color="black">false</font>> color="black"]
  node12072 -> node12073 [label=<<font color="black">true</font>> color="black"]
  node12072 -> node12074 [label=<<font color="black">false</font>> color="black"]
  node12048 -> node12049 [ color="black"]
}
