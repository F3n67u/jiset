{
  [0] if (= iteratorKind absent) iteratorKind = CONST_sync else [24] {}
  [1] let oldEnv = GLOBAL_context.LexicalEnvironment
  [2] let V = undefined
  [3] access __x0__ = (lhs "IsDestructuring")
  [3] let destructuring = __x0__
  [4] if (&& (= destructuring true) (= lhsKind CONST_assignment)) {
    [5] assert (is-instance-of lhs LeftHandSideExpression)
    [6] let assignmentPattern = (parse-syntax lhs "AssignmentPattern" (new []))
  } else [24] {}
  [7] while true {
    [8] app __x1__ = (Call iteratorRecord.NextMethod iteratorRecord.Iterator)
    [8] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [24] {}
    [8] let nextResult = __x1__
    [9] if (= iteratorKind CONST_async) {
      app __x2__ = (Await nextResult)
      if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [24] {}
      nextResult = __x2__
    } else [24] {}
    [10] app __x3__ = (Type nextResult)
    [10] if (! (= __x3__ Object)) {
      app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x4__
    } else [24] {}
    [11] app __x5__ = (IteratorComplete nextResult)
    [11] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [24] {}
    [11] let done = __x5__
    [12] if (= done true) {
      app __x6__ = (NormalCompletion V)
      app __x7__ = (WrapCompletion __x6__)
      return __x7__
    } else [24] {}
    [13] app __x8__ = (IteratorValue nextResult)
    [13] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [24] {}
    [13] let nextValue = __x8__
    [17] if (|| (= lhsKind CONST_assignment) (= lhsKind CONST_varBinding)) if (= destructuring false) {
      [16] access __x9__ = (lhs "Evaluation")
      [16] let lhsRef = __x9__
    } else [24] {} else {
      [18] assert (= lhsKind CONST_lexicalBinding)
      [19] assert (is-instance-of lhs ForDeclaration)
      [20] app __x10__ = (NewDeclarativeEnvironment oldEnv)
      [20] let iterationEnv = __x10__
      [21] access __x11__ = (lhs "BindingInstantiation")
      [21] app __x12__ = (__x11__ iterationEnv)
      [21] __x12__
      [22] GLOBAL_context.LexicalEnvironment = iterationEnv
      [23] if (= destructuring false) {
        [25] access __x13__ = (lhs "BoundNames")
        [25] let lhsName = __x13__[0i]
        [26] app __x14__ = (ResolveBinding lhsName)
        [26] if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else [24] {}
        [26] let lhsRef = __x14__
      } else [24] {}
    }
    [34] if (= destructuring false) {
      [32] app __x15__ = (IsAbruptCompletion lhsRef)
      [32] if __x15__ let status = lhsRef else if (= lhsKind CONST_lexicalBinding) {
        [31] app __x16__ = (InitializeReferencedBinding lhsRef nextValue)
        [31] let status = __x16__
      } else {
        [33] app __x17__ = (PutValue lhsRef nextValue)
        [33] let status = __x17__
      }
    } else if (= lhsKind CONST_assignment) {
      [36] access __x18__ = (assignmentPattern "DestructuringAssignmentEvaluation")
      [36] app __x19__ = (__x18__ nextValue)
      [36] let status = __x19__
    } else if (= lhsKind CONST_varBinding) {
      [38] assert (is-instance-of lhs ForBinding)
      [39] access __x20__ = (lhs "BindingInitialization")
      [39] app __x21__ = (__x20__ nextValue undefined)
      [39] let status = __x21__
    } else {
      [41] assert (= lhsKind CONST_lexicalBinding)
      [42] assert (is-instance-of lhs ForDeclaration)
      [43] access __x22__ = (lhs "BindingInitialization")
      [43] app __x23__ = (__x22__ nextValue iterationEnv)
      [43] let status = __x23__
    }
    [44] app __x24__ = (IsAbruptCompletion status)
    [44] if __x24__ {
      [45] GLOBAL_context.LexicalEnvironment = oldEnv
      [46] if (= iteratorKind CONST_async) {
        app __x25__ = (AsyncIteratorClose iteratorRecord status)
        if (is-completion __x25__) if (= __x25__.Type CONST_normal) __x25__ = __x25__.Value else return __x25__ else [24] {}
        app __x26__ = (WrapCompletion __x25__)
        return __x26__
      } else [24] {}
      [49] if (= iterationKind CONST_enumerate) {
        [48] app __x27__ = (WrapCompletion status)
        [48] return __x27__
      } else {
        [50] assert (= iterationKind CONST_iterate)
        [51] app __x28__ = (IteratorClose iteratorRecord status)
        [51] if (is-completion __x28__) if (= __x28__.Type CONST_normal) __x28__ = __x28__.Value else return __x28__ else [24] {}
        [51] app __x29__ = (WrapCompletion __x28__)
        [51] return __x29__
      }
    } else [24] {}
    [52] access __x30__ = (stmt "Evaluation")
    [52] let result = __x30__
    [53] GLOBAL_context.LexicalEnvironment = oldEnv
    [54] app __x31__ = (LoopContinues result labelSet)
    [54] if (= __x31__ false) if (= iterationKind CONST_enumerate) {
      [56] app __x32__ = (UpdateEmpty result V)
      [56] app __x33__ = (Completion __x32__)
      [56] app __x34__ = (WrapCompletion __x33__)
      [56] return __x34__
    } else {
      [58] assert (= iterationKind CONST_iterate)
      [59] app __x35__ = (UpdateEmpty result V)
      [59] status = __x35__
      [60] if (= iteratorKind CONST_async) {
        app __x36__ = (AsyncIteratorClose iteratorRecord status)
        if (is-completion __x36__) if (= __x36__.Type CONST_normal) __x36__ = __x36__.Value else return __x36__ else [24] {}
        app __x37__ = (WrapCompletion __x36__)
        return __x37__
      } else [24] {}
      [61] app __x38__ = (IteratorClose iteratorRecord status)
      [61] if (is-completion __x38__) if (= __x38__.Type CONST_normal) __x38__ = __x38__.Value else return __x38__ else [24] {}
      [61] app __x39__ = (WrapCompletion __x38__)
      [61] return __x39__
    } else [24] {}
    [62] if (! (= result.Value CONST_empty)) V = result.Value else [24] {}
  }
}