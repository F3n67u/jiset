{
  access __x0__ = (BindingElement "ContainsExpression")
  if (= __x0__ false) {
    access __x1__ = (BindingElement "IteratorBindingInitialization")
    app __x2__ = (__x1__ iteratorRecord environment)
    return __x2__
  } else {}
  let currentContext = GLOBAL_context
  access __x3__ = (currentContext "VariableEnvironment")
  let originalEnv = __x3__
  assert (= currentContext.VariableEnvironment currentContext.LexicalEnvironment)
  assert (= environment originalEnv)
  app __x4__ = (NewDeclarativeEnvironment originalEnv)
  let paramVarEnv = __x4__
  currentContext.VariableEnvironment = paramVarEnv
  currentContext.LexicalEnvironment = paramVarEnv
  access __x5__ = (BindingElement "IteratorBindingInitialization")
  app __x6__ = (__x5__ iteratorRecord environment)
  let result = __x6__
  currentContext.VariableEnvironment = originalEnv
  currentContext.LexicalEnvironment = originalEnv
  return result
}