digraph {
  node11620 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let x = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let k = m.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11628 [shape=diamond, label=<<font color="black">(&lt; x 0i)</font>> color="black" fillcolor="white" style=filled]
  node11632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let m = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11625 [shape=diamond, label=<<font color="black">(= x NaN)</font>> color="black" fillcolor="white" style=filled]
  node11638 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;Let id:{a} be the first id:{k} - id:{f} elements of id:{m} , and let id:{b} be the remaining id:{f} elements of id:{m} .&quot;</td></tr>
      <tr><td align="left">20:??? &quot;Let id:{m} be the concatenation of the three Strings id:{a} , code:{\&quot;.\&quot;} , and id:{b} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11633 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:??? &quot;Let id:{n} be an integer for which the exact mathematical value of id:{n} &divide; 10 sup:{id:{f}} - id:{x} is as close to zero as possible . If there are two such id:{n} , pick the larger id:{n} .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;If id:{n} = 0 , let id:{m} be the String code:{\&quot;0\&quot;} . Otherwise , let id:{m} be the String consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11618 [shape=cds, label=<<font color="black">app fractionDigits = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11626 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;NaN&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:return (+ s m)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let s = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11631 [shape=cds, label=<<font color="black">9:app __x2__ = (ToString x)</font>> color="black" fillcolor="white" style=filled]
  node11619 [shape=cds, label=<<font color="black">0:app __x0__ = (thisNumberValue this)</font>> color="black" fillcolor="white" style=filled]
  node11634 [shape=diamond, label=<<font color="black">(! (== f 0i))</font>> color="black" fillcolor="white" style=filled]
  node11629 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let s = &quot;-&quot;</td></tr>
      <tr><td align="left">7:let x = (- x)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11623 [shape=diamond, label=<<font color="black">(|| (&lt; f 0i) (&lt; 20i f))</font>> color="black" fillcolor="white" style=filled]
  node11630 [shape=diamond, label=<<font color="black">(! (&lt; x (** 10.0 21i)))</font>> color="black" fillcolor="white" style=filled]
  node11622 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let f = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:??? &quot;Let id:{z} be the String consisting of id:{f} + 1 - id:{k} occurrences of the code unit 0x0030 ( DIGIT ZERO ) .&quot;</td></tr>
      <tr><td align="left">17:let m = (+ z m)</td></tr>
      <tr><td align="left">18:let k = (+ f 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11617 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11636 [shape=diamond, label=<<font color="black">(! (&lt; f k))</font>> color="black" fillcolor="white" style=filled]
  node11621 [shape=cds, label=<<font color="black">1:app __x1__ = (ToInteger fractionDigits)</font>> color="black" fillcolor="white" style=filled]
  node11616 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11636 -> node11637 [label=<<font color="black">true</font>> color="black"]
  node11636 -> node11638 [label=<<font color="black">false</font>> color="black"]
  node11627 -> node11628 [ color="black"]
  node11634 -> node11635 [label=<<font color="black">true</font>> color="black"]
  node11634 -> node11639 [label=<<font color="black">false</font>> color="black"]
  node11625 -> node11626 [label=<<font color="black">true</font>> color="black"]
  node11625 -> node11627 [label=<<font color="black">false</font>> color="black"]
  node11616 -> node11618 [ color="black"]
  node11621 -> node11622 [ color="black"]
  node11624 -> node11625 [ color="black"]
  node11619 -> node11620 [ color="black"]
  node11630 -> node11631 [label=<<font color="black">true</font>> color="black"]
  node11630 -> node11633 [label=<<font color="black">false</font>> color="black"]
  node11632 -> node11639 [ color="black"]
  node11622 -> node11623 [ color="black"]
  node11637 -> node11638 [ color="black"]
  node11633 -> node11634 [ color="black"]
  node11620 -> node11621 [ color="black"]
  node11626 -> node11627 [ color="black"]
  node11623 -> node11624 [label=<<font color="black">true</font>> color="black"]
  node11623 -> node11625 [label=<<font color="black">false</font>> color="black"]
  node11639 -> node11617 [ color="black"]
  node11638 -> node11639 [ color="black"]
  node11635 -> node11636 [ color="black"]
  node11631 -> node11632 [ color="black"]
  node11628 -> node11629 [label=<<font color="black">true</font>> color="black"]
  node11628 -> node11630 [label=<<font color="black">false</font>> color="black"]
  node11629 -> node11630 [ color="black"]
  node11618 -> node11619 [ color="black"]
}
