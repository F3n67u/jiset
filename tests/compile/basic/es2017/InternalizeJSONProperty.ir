{
  app __x0__ = (Get holder name)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let val = __x0__
  app __x1__ = (Type val)
  if (= __x1__ Object) {
    app __x2__ = (IsArray val)
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
    let isArray = __x2__
    if (= isArray true) {
      let I = 0i
      app __x3__ = (Get val "length")
      if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
      app __x4__ = (ToLength __x3__)
      if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
      let len = __x4__
      while (< I len) {
        app __x5__ = (ToString I)
        if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
        app __x6__ = (InternalizeJSONProperty val __x5__)
        if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
        let newElement = __x6__
        if (= newElement undefined) {
          app __x7__ = (ToString I)
          if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
          app __x8__ = (val.Delete val __x7__)
          if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
          __x8__
        } else {
          app __x9__ = (ToString I)
          if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
          app __x10__ = (CreateDataProperty val __x9__ newElement)
          if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
          __x10__
        }
        append 1i -> I
      }
    } else {
      app __x11__ = (EnumerableOwnProperties val "key")
      if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else {}
      let keys = __x11__
      let __x12__ = keys
      let __x13__ = 0i
      while (< __x13__ __x12__.length) {
        let P = __x12__[__x13__]
        app __x14__ = (InternalizeJSONProperty val P)
        if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else {}
        let newElement = __x14__
        if (= newElement undefined) {
          app __x15__ = (val.Delete val P)
          if (is-completion __x15__) if (= __x15__.Type CONST_normal) __x15__ = __x15__.Value else return __x15__ else {}
          __x15__
        } else {
          app __x16__ = (CreateDataProperty val P newElement)
          if (is-completion __x16__) if (= __x16__.Type CONST_normal) __x16__ = __x16__.Value else return __x16__ else {}
          __x16__
        }
        __x13__ = (+ __x13__ 1i)
      }
    }
  } else {}
  app __x17__ = (Call reviver holder (new [name, val]))
  if (is-completion __x17__) if (= __x17__.Type CONST_normal) __x17__ = __x17__.Value else return __x17__ else {}
  app __x18__ = (WrapCompletion __x17__)
  return __x18__
}