[{
  "tokens": ["Let", {
    "id": "propKey"
  }, "be", "the", "result", "of", "evaluating", {
    "nt": "PropertyName"
  }, "."]
}, {
  "tokens": ["ReturnIfAbrupt", "(", {
    "id": "propKey"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "scope"
  }, "be", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", "."]
}, {
  "tokens": ["If", {
    "id": "functionPrototype"
  }, "is", "present", ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "prototype"
  }, "be", {
    "id": "functionPrototype"
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "prototype"
  }, "be", "%", "Function", ".", "prototype", "%", "."]
}, {
  "tokens": ["Let", {
    "id": "sourceText"
  }, "be", "the", "source", "text", "matched", "by", {
    "nt": "MethodDefinition"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "closure"
  }, "be", "OrdinaryFunctionCreate", "(", {
    "id": "prototype"
  }, ",", {
    "id": "sourceText"
  }, ",", {
    "nt": "UniqueFormalParameters"
  }, ",", {
    "nt": "FunctionBody"
  }, ",", {
    "const": "non-lexical-this"
  }, ",", {
    "id": "scope"
  }, ")", "."]
}, {
  "tokens": ["Perform", "MakeMethod", "(", {
    "id": "closure"
  }, ",", {
    "id": "object"
  }, ")", "."]
}, {
  "tokens": ["Return", "the", "Record", "{", "[", "[", "Key", "]", "]", ":", {
    "id": "propKey"
  }, ",", "[", "[", "Closure", "]", "]", ":", {
    "id": "closure"
  }, "}", "."]
}]