{
  [0] app __x0__ = (Type target)
  [0] assert (= __x0__ Object)
  [2] if (|| (= source undefined) (= source null)) {
    app __x1__ = (WrapCompletion target)
    return __x1__
  } else [1] {}
  [3] app __x2__ = (ToObject source)
  [3] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [1] {}
  [3] let from = __x2__
  [4] app __x3__ = (from.OwnPropertyKeys from)
  [4] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [1] {}
  [4] let keys = __x3__
  [5] let __x4__ = keys
  [5] let __x5__ = 0i
  [5] while (< __x5__ __x4__.length) {
    let nextKey = __x4__[__x5__]
    [6] let excluded = false
    [7] let __x6__ = excludedItems
    [7] let __x7__ = 0i
    [7] while (< __x7__ __x6__.length) {
      let e = __x6__[__x7__]
      [8] app __x8__ = (SameValue e nextKey)
      [8] if (= __x8__ true) excluded = true else [1] {}
      __x7__ = (+ __x7__ 1i)
    }
    [10] if (= excluded false) {
      [11] app __x9__ = (from.GetOwnProperty from nextKey)
      [11] if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else [1] {}
      [11] let desc = __x9__
      [12] if (&& (! (= desc undefined)) (= desc.Enumerable true)) {
        [13] app __x10__ = (Get from nextKey)
        [13] if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else [1] {}
        [13] let propValue = __x10__
        [14] app __x11__ = (CreateDataProperty target nextKey propValue)
        [14] if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else [1] {}
        [14] __x11__
      } else [1] {}
    } else [1] {}
    __x5__ = (+ __x5__ 1i)
  }
  [15] app __x12__ = (WrapCompletion target)
  [15] return __x12__
}