digraph {
  node13183 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node13201 [shape=cds, label=<<font color="black">37:app __x28__ = (Get result [! __x27__])</font>> color="black" fillcolor="white" style=filled]
  node13157 [shape=cds, label=<<font color="black">9:app __x6__ = (Get rx &quot;unicode&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13164 [shape=cds, label=<<font color="black">14:app __x9__ = (RegExpExec rx S)</font>> color="black" fillcolor="white" style=filled]
  node13181 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:[? __x15__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13175 [shape=cds, label=<<font color="black">22:app __x12__ = (Get rx &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13142 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let rx = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13162 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let results = (new [])</td></tr>
      <tr><td align="left">12:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13199 [shape=diamond, label=<<font color="black">(! (&lt; nCaptures n))</font>> color="black" fillcolor="white" style=filled]
  node13177 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let thisIndex = [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13159 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let fullUnicode = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13212 [shape=cds, label=<<font color="black">46:app __x33__ = (Call replaceValue undefined replacerArgs)</font>> color="black" fillcolor="white" style=filled]
  node13202 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:let capN = [? __x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13152 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let replaceValue = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13187 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let nCaptures = [? __x19__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13219 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:??? &quot;Let id:{accumulatedResult} be the String formed by concatenating the code units of the current value of id:{accumulatedResult} with the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up to id:{position} ( exclusive ) and with the code units of id:{replacement} .&quot;</td></tr>
      <tr><td align="left">53:let nextSourcePosition = (+ position matchLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13174 [shape=diamond, label=<<font color="black">(= matchStr &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13147 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let S = [? __x1__]</td></tr>
      <tr><td align="left">3:let lengthS = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13209 [shape=diamond, label=<<font color="black">(&lt; __x31__ __x30__.length)</font>> color="black" fillcolor="white" style=filled]
  node13179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let nextIndex = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13223 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">55:??? &quot;Return the String formed by concatenating the code units of id:{accumulatedResult} with the substring of id:{S} consisting of the code units from id:{nextSourcePosition} ( inclusive ) up through the final code unit of id:{S} ( inclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13191 [shape=cds, label=<<font color="black">30:app __x22__ = (ToString [? __x21__])</font>> color="black" fillcolor="white" style=filled]
  node13151 [shape=cds, label=<<font color="black">6:app __x3__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13170 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13195 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let position = [? __x24__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13138 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13166 [shape=diamond, label=<<font color="black">(= result null)</font>> color="black" fillcolor="white" style=filled]
  node13216 [shape=cds, label=<<font color="black">49:app __x35__ = (GetSubstitution matched S position captures replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13155 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let global = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13206 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:append capN -&gt; captures</td></tr>
      <tr><td align="left">41:let n = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13148 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node13141 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13200 [shape=cds, label=<<font color="black">37:app __x27__ = (ToString n)</font>> color="black" fillcolor="white" style=filled]
  node13186 [shape=cds, label=<<font color="black">28:app __x19__ = (ToLength [? __x18__])</font>> color="black" fillcolor="white" style=filled]
  node13218 [shape=diamond, label=<<font color="black">(! (&lt; position nextSourcePosition))</font>> color="black" fillcolor="white" style=filled]
  node13158 [shape=cds, label=<<font color="black">9:app __x7__ = (ToBoolean [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node13180 [shape=cds, label=<<font color="black">24:app __x15__ = (Set rx &quot;lastIndex&quot; nextIndex true)</font>> color="black" fillcolor="white" style=filled]
  node13153 [shape=cds, label=<<font color="black">7:app __x4__ = (Get rx &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13222 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return accumulatedResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13173 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let matchStr = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13163 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node13154 [shape=cds, label=<<font color="black">7:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node13190 [shape=cds, label=<<font color="black">30:app __x21__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13205 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:let capN = [? __x29__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13169 [shape=diamond, label=<<font color="black">(= global false)</font>> color="black" fillcolor="white" style=filled]
  node13167 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13213 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">46:let replValue = [? __x33__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13196 [shape=cds, label=<<font color="black">33:app __x25__ = (min position lengthS)</font>> color="black" fillcolor="white" style=filled]
  node13197 [shape=cds, label=<<font color="black">33:app __x26__ = (max __x25__ 0i)</font>> color="black" fillcolor="white" style=filled]
  node13217 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:let replacement = __x35__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13176 [shape=cds, label=<<font color="black">22:app __x13__ = (ToLength [? __x12__])</font>> color="black" fillcolor="white" style=filled]
  node13221 [shape=diamond, label=<<font color="black">(! (&lt; nextSourcePosition lengthS))</font>> color="black" fillcolor="white" style=filled]
  node13210 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x32__ = __x30__[__x31__]</td></tr>
      <tr><td align="left">append __x32__ -&gt; replacerArgs</td></tr>
      <tr><td align="left">__x31__ = (+ __x31__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13204 [shape=cds, label=<<font color="black">39:app __x29__ = (ToString capN)</font>> color="black" fillcolor="white" style=filled]
  node13214 [shape=cds, label=<<font color="black">47:app __x34__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node13208 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let replacerArgs = (new [matched])</td></tr>
      <tr><td align="left">44:let __x30__ = captures</td></tr>
      <tr><td align="left">44:let __x31__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13144 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node13168 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:append result -&gt; results</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13189 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let nCaptures = __x20__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13140 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13149 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let functionalReplace = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13185 [shape=cds, label=<<font color="black">28:app __x18__ = (Get result &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13172 [shape=cds, label=<<font color="black">20:app __x11__ = (ToString [? __x10__])</font>> color="black" fillcolor="white" style=filled]
  node13160 [shape=cds, label=<<font color="black">10:app __x8__ = (Set rx &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node13146 [shape=cds, label=<<font color="black">2:app __x1__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node13211 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:append position -&gt; replacerArgs</td></tr>
      <tr><td align="left">45:append S -&gt; replacerArgs</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13178 [shape=cds, label=<<font color="black">23:app __x14__ = (AdvanceStringIndex S thisIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node13203 [shape=diamond, label=<<font color="black">(! (= capN undefined))</font>> color="black" fillcolor="white" style=filled]
  node13188 [shape=cds, label=<<font color="black">29:app __x20__ = (max (- nCaptures 1i) 0i)</font>> color="black" fillcolor="white" style=filled]
  node13193 [shape=cds, label=<<font color="black">32:app __x23__ = (Get result &quot;index&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13198 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let position = __x26__</td></tr>
      <tr><td align="left">34:let n = 1i</td></tr>
      <tr><td align="left">35:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13143 [shape=cds, label=<<font color="black">1:app __x0__ = (Type rx)</font>> color="black" fillcolor="white" style=filled]
  node13207 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node13192 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let matched = [? __x22__]</td></tr>
      <tr><td align="left">31:let matchLength = matched.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13220 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13165 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let result = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13139 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13194 [shape=cds, label=<<font color="black">32:app __x24__ = (ToInteger [? __x23__])</font>> color="black" fillcolor="white" style=filled]
  node13171 [shape=cds, label=<<font color="black">20:app __x10__ = (Get result &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13161 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13150 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node13215 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:let replacement = [? __x34__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13156 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white" style=filled]
  node13182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let accumulatedResult = &quot;&quot;</td></tr>
      <tr><td align="left">26:let nextSourcePosition = 0i</td></tr>
      <tr><td align="left">27:let __x16__ = results</td></tr>
      <tr><td align="left">27:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13150 -> node13151 [label=<<font color="black">true</font>> color="black"]
  node13150 -> node13153 [label=<<font color="black">false</font>> color="black"]
  node13178 -> node13179 [ color="black"]
  node13207 -> node13208 [label=<<font color="black">true</font>> color="black"]
  node13207 -> node13216 [label=<<font color="black">false</font>> color="black"]
  node13155 -> node13156 [ color="black"]
  node13181 -> node13163 [ color="black"]
  node13182 -> node13183 [ color="black"]
  node13151 -> node13152 [ color="black"]
  node13221 -> node13222 [label=<<font color="black">true</font>> color="black"]
  node13221 -> node13223 [label=<<font color="black">false</font>> color="black"]
  node13196 -> node13197 [ color="black"]
  node13195 -> node13196 [ color="black"]
  node13145 -> node13146 [ color="black"]
  node13199 -> node13200 [label=<<font color="black">true</font>> color="black"]
  node13199 -> node13207 [label=<<font color="black">false</font>> color="black"]
  node13217 -> node13218 [ color="black"]
  node13211 -> node13212 [ color="black"]
  node13198 -> node13199 [ color="black"]
  node13172 -> node13173 [ color="black"]
  node13215 -> node13218 [ color="black"]
  node13176 -> node13177 [ color="black"]
  node13194 -> node13195 [ color="black"]
  node13204 -> node13205 [ color="black"]
  node13141 -> node13142 [ color="black"]
  node13157 -> node13158 [ color="black"]
  node13142 -> node13143 [ color="black"]
  node13200 -> node13201 [ color="black"]
  node13162 -> node13163 [ color="black"]
  node13206 -> node13199 [ color="black"]
  node13152 -> node13153 [ color="black"]
  node13147 -> node13148 [ color="black"]
  node13223 -> node13139 [ color="black"]
  node13205 -> node13206 [ color="black"]
  node13154 -> node13155 [ color="black"]
  node13210 -> node13209 [ color="black"]
  node13174 -> node13175 [label=<<font color="black">true</font>> color="black"]
  node13174 -> node13163 [label=<<font color="black">false</font>> color="black"]
  node13159 -> node13160 [ color="black"]
  node13185 -> node13186 [ color="black"]
  node13156 -> node13157 [label=<<font color="black">true</font>> color="black"]
  node13156 -> node13162 [label=<<font color="black">false</font>> color="black"]
  node13143 -> node13144 [ color="black"]
  node13164 -> node13165 [ color="black"]
  node13216 -> node13217 [ color="black"]
  node13191 -> node13192 [ color="black"]
  node13189 -> node13190 [ color="black"]
  node13179 -> node13180 [ color="black"]
  node13161 -> node13162 [ color="black"]
  node13140 -> node13141 [ color="black"]
  node13188 -> node13189 [ color="black"]
  node13163 -> node13164 [label=<<font color="black">true</font>> color="black"]
  node13163 -> node13182 [label=<<font color="black">false</font>> color="black"]
  node13212 -> node13213 [ color="black"]
  node13160 -> node13161 [ color="black"]
  node13184 -> node13185 [ color="black"]
  node13183 -> node13184 [label=<<font color="black">true</font>> color="black"]
  node13183 -> node13221 [label=<<font color="black">false</font>> color="black"]
  node13146 -> node13147 [ color="black"]
  node13175 -> node13176 [ color="black"]
  node13169 -> node13170 [label=<<font color="black">true</font>> color="black"]
  node13169 -> node13171 [label=<<font color="black">false</font>> color="black"]
  node13193 -> node13194 [ color="black"]
  node13186 -> node13187 [ color="black"]
  node13171 -> node13172 [ color="black"]
  node13170 -> node13163 [ color="black"]
  node13209 -> node13210 [label=<<font color="black">true</font>> color="black"]
  node13209 -> node13211 [label=<<font color="black">false</font>> color="black"]
  node13158 -> node13159 [ color="black"]
  node13177 -> node13178 [ color="black"]
  node13149 -> node13150 [ color="black"]
  node13167 -> node13163 [ color="black"]
  node13218 -> node13219 [label=<<font color="black">true</font>> color="black"]
  node13218 -> node13220 [label=<<font color="black">false</font>> color="black"]
  node13148 -> node13149 [ color="black"]
  node13197 -> node13198 [ color="black"]
  node13208 -> node13209 [ color="black"]
  node13201 -> node13202 [ color="black"]
  node13173 -> node13174 [ color="black"]
  node13166 -> node13167 [label=<<font color="black">true</font>> color="black"]
  node13166 -> node13168 [label=<<font color="black">false</font>> color="black"]
  node13219 -> node13220 [ color="black"]
  node13187 -> node13188 [ color="black"]
  node13168 -> node13169 [ color="black"]
  node13192 -> node13193 [ color="black"]
  node13222 -> node13223 [ color="black"]
  node13144 -> node13145 [label=<<font color="black">true</font>> color="black"]
  node13144 -> node13146 [label=<<font color="black">false</font>> color="black"]
  node13153 -> node13154 [ color="black"]
  node13214 -> node13215 [ color="black"]
  node13138 -> node13140 [ color="black"]
  node13203 -> node13204 [label=<<font color="black">true</font>> color="black"]
  node13203 -> node13206 [label=<<font color="black">false</font>> color="black"]
  node13180 -> node13181 [ color="black"]
  node13190 -> node13191 [ color="black"]
  node13213 -> node13214 [ color="black"]
  node13220 -> node13183 [ color="black"]
  node13165 -> node13166 [ color="black"]
  node13202 -> node13203 [ color="black"]
}
