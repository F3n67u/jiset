[{
  "tokens": ["Let", {
    "id": "buffer"
  }, "be", "?", "ValidateIntegerTypedArray", "(", {
    "id": "typedArray"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "block"
  }, "be", {
    "id": "buffer"
  }, ".", "[", "[", "ArrayBufferData", "]", "]", "."]
}, {
  "tokens": ["Let", {
    "id": "indexedPosition"
  }, "be", "?", "ValidateAtomicAccess", "(", {
    "id": "typedArray"
  }, ",", {
    "id": "index"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "arrayTypeName"
  }, "be", {
    "id": "typedArray"
  }, ".", "[", "[", "TypedArrayName", "]", "]", "."]
}, {
  "tokens": ["If", {
    "id": "typedArray"
  }, ".", "[", "[", "ContentType", "]", "]", "is", {
    "const": "BigInt"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "expected"
  }, "be", "?", "ToBigInt", "(", {
    "id": "expectedValue"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "replacement"
  }, "be", "?", "ToBigInt", "(", {
    "id": "replacementValue"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "expected"
  }, "be", "ùîΩ", "(", "?", "ToIntegerOrInfinity", "(", {
    "id": "expectedValue"
  }, ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "replacement"
  }, "be", "ùîΩ", "(", "?", "ToIntegerOrInfinity", "(", {
    "id": "replacementValue"
  }, ")", ")", "."]
}, {
  "tokens": ["If", "IsDetachedBuffer", "(", {
    "id": "buffer"
  }, ")", "is", {
    "value": "true"
  }, ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["NOTE", ":", "The", "above", "check", "is", "not", "redundant", "with", "the", "check", "in", "ValidateIntegerTypedArray", "because", "the", "call", "to", "ToBigInt", "or", "ToIntegerOrInfinity", "on", "the", "preceding", "lines", "can", "have", "arbitrary", "side", "effects", ",", "which", "could", "cause", "the", "buffer", "to", "become", "detached", "."]
}, {
  "tokens": ["Let", {
    "id": "elementType"
  }, "be", "the", "Element", "Type", "value", "in", {
    "link": ""
  }, "for", {
    "id": "arrayTypeName"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "elementSize"
  }, "be", "the", "Element", "Size", "value", "specified", "in", {
    "link": ""
  }, "for", "Element", "Type", {
    "id": "elementType"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "isLittleEndian"
  }, "be", "the", "value", "of", "the", "[", "[", "LittleEndian", "]", "]", "field", "of", "the", "surrounding", "agent", "'", "s", "Agent", "Record", "."]
}, {
  "tokens": ["Let", {
    "id": "expectedBytes"
  }, "be", "NumericToRawBytes", "(", {
    "id": "elementType"
  }, ",", {
    "id": "expected"
  }, ",", {
    "id": "isLittleEndian"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "replacementBytes"
  }, "be", "NumericToRawBytes", "(", {
    "id": "elementType"
  }, ",", {
    "id": "replacement"
  }, ",", {
    "id": "isLittleEndian"
  }, ")", "."]
}, {
  "tokens": ["If", "IsSharedArrayBuffer", "(", {
    "id": "buffer"
  }, ")", "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "execution"
  }, "be", "the", "[", "[", "CandidateExecution", "]", "]", "field", "of", "the", "surrounding", "agent", "'", "s", "Agent", "Record", "."]
}, {
  "tokens": ["Let", {
    "id": "eventList"
  }, "be", "the", "[", "[", "EventList", "]", "]", "field", "of", "the", "element", "in", {
    "id": "execution"
  }, ".", "[", "[", "EventsRecords", "]", "]", "whose", "[", "[", "AgentSignifier", "]", "]", "is", "AgentSignifier", "(", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "rawBytesRead"
  }, "be", "a", "List", "of", "length", {
    "id": "elementSize"
  }, "whose", "elements", "are", "nondeterministically", "chosen", "byte", "values", "."]
}, {
  "tokens": ["NOTE", ":", "In", "implementations", ",", {
    "id": "rawBytesRead"
  }, "is", "the", "result", "of", "a", "load", "-", "link", ",", "of", "a", "load", "-", "exclusive", ",", "or", "of", "an", "operand", "of", "a", "read", "-", "modify", "-", "write", "instruction", "on", "the", "underlying", "hardware", ".", "The", "nondeterminism", "is", "a", "semantic", "prescription", "of", "the", "memory", "model", "to", "describe", "observable", "behaviour", "of", "hardware", "with", "weak", "consistency", "."]
}, {
  "tokens": ["NOTE", ":", "The", "comparison", "of", "the", "expected", "value", "and", "the", "read", "value", "is", "performed", "outside", "of", "the", "read", "-", "modify", "-", "write", "modification", "function", "to", "avoid", "needlessly", "strong", "synchronization", "when", "the", "expected", "value", "is", "not", "equal", "to", "the", "read", "value", "."]
}, {
  "tokens": ["If", "ByteListEqual", "(", {
    "id": "rawBytesRead"
  }, ",", {
    "id": "expectedBytes"
  }, ")", "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "second"
  }, "be", "a", "new", "read", "-", "modify", "-", "write", "modification", "function", "with", "parameters", "(", {
    "id": "oldBytes"
  }, ",", {
    "id": "newBytes"
  }, ")", "that", "captures", "nothing", "and", "performs", "the", "following", "steps", "atomically", "when", "called", ":"]
}, {
  "tokens": ["Return", {
    "id": "newBytes"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "event"
  }, "be", "ReadModifyWriteSharedMemory", "{", "[", "[", "Order", "]", "]", ":", {
    "const": "SeqCst"
  }, ",", "[", "[", "NoTear", "]", "]", ":", {
    "value": "true"
  }, ",", "[", "[", "Block", "]", "]", ":", {
    "id": "block"
  }, ",", "[", "[", "ByteIndex", "]", "]", ":", {
    "id": "indexedPosition"
  }, ",", "[", "[", "ElementSize", "]", "]", ":", {
    "id": "elementSize"
  }, ",", "[", "[", "Payload", "]", "]", ":", {
    "id": "replacementBytes"
  }, ",", "[", "[", "ModifyOp", "]", "]", ":", {
    "id": "second"
  }, "}", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "event"
  }, "be", "ReadSharedMemory", "{", "[", "[", "Order", "]", "]", ":", {
    "const": "SeqCst"
  }, ",", "[", "[", "NoTear", "]", "]", ":", {
    "value": "true"
  }, ",", "[", "[", "Block", "]", "]", ":", {
    "id": "block"
  }, ",", "[", "[", "ByteIndex", "]", "]", ":", {
    "id": "indexedPosition"
  }, ",", "[", "[", "ElementSize", "]", "]", ":", {
    "id": "elementSize"
  }, "}", "."]
}, {
  "tokens": ["Append", {
    "id": "event"
  }, "to", {
    "id": "eventList"
  }, "."]
}, {
  "tokens": ["Append", "Chosen", "Value", "Record", "{", "[", "[", "Event", "]", "]", ":", {
    "id": "event"
  }, ",", "[", "[", "ChosenValue", "]", "]", ":", {
    "id": "rawBytesRead"
  }, "}", "to", {
    "id": "execution"
  }, ".", "[", "[", "ChosenValues", "]", "]", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "rawBytesRead"
  }, "be", "a", "List", "of", "length", {
    "id": "elementSize"
  }, "whose", "elements", "are", "the", "sequence", "of", {
    "id": "elementSize"
  }, "bytes", "starting", "with", {
    "id": "block"
  }, "[", {
    "id": "indexedPosition"
  }, "]", "."]
}, {
  "tokens": ["If", "ByteListEqual", "(", {
    "id": "rawBytesRead"
  }, ",", {
    "id": "expectedBytes"
  }, ")", "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Store", "the", "individual", "bytes", "of", {
    "id": "replacementBytes"
  }, "into", {
    "id": "block"
  }, ",", "starting", "at", {
    "id": "block"
  }, "[", {
    "id": "indexedPosition"
  }, "]", "."]
}, {
  "tokens": ["Return", "RawBytesToNumeric", "(", {
    "id": "elementType"
  }, ",", {
    "id": "rawBytesRead"
  }, ",", {
    "id": "isLittleEndian"
  }, ")", "."]
}]