digraph {
  node16261 [shape=diamond, label=<<font color="black">(= count undefined)</font>> color="black" fillcolor="white" style=filled]
  node16268 [shape=cds, label=<<font color="black">9:app __x4__ = (GetWaiterList block indexedPosition)</font>> color="black" fillcolor="white" style=filled]
  node16272 [shape=cds, label=<<font color="black">12:app __x6__ = (RemoveWaiters WL c)</font>> color="black" fillcolor="white" style=filled]
  node16255 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16276 [shape=cds, label=<<font color="black">16:app __x7__ = (WakeWaiter WL W)</font>> color="black" fillcolor="white" style=filled]
  node16279 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x8__</td></tr>
      <tr><td align="left">19:return n</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16269 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let WL = __x4__</td></tr>
      <tr><td align="left">10:let n = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16275 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let W = S[0i]</td></tr>
      <tr><td align="left">15:(pop S 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16278 [shape=cds, label=<<font color="black">18:app __x8__ = (LeaveCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node16258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16270 [shape=cds, label=<<font color="black">11:app __x5__ = (EnterCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node16253 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let c = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16262 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let c = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16277 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:__x7__</td></tr>
      <tr><td align="left">17:append 1i -&gt; n</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16271 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16259 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node16264 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let intCount = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16274 [shape=diamond, label=<<font color="black">(&lt; 0i S.length)</font>> color="black" fillcolor="white" style=filled]
  node16252 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16265 [shape=cds, label=<<font color="black">5:app __x3__ = (max intCount 0i)</font>> color="black" fillcolor="white" style=filled]
  node16260 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16263 [shape=cds, label=<<font color="black">4:app __x2__ = (ToInteger count)</font>> color="black" fillcolor="white" style=filled]
  node16273 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let S = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16257 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray true)</font>> color="black" fillcolor="white" style=filled]
  node16267 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let block = buffer.ArrayBufferData</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:let indexedPosition = (+ (* i 4i) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16256 [shape=cds, label=<<font color="black">app count = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16254 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16271 -> node16272 [ color="black"]
  node16257 -> node16258 [ color="black"]
  node16266 -> node16267 [ color="black"]
  node16254 -> node16255 [ color="black"]
  node16278 -> node16279 [ color="black"]
  node16252 -> node16254 [ color="black"]
  node16273 -> node16274 [ color="black"]
  node16274 -> node16275 [label=<<font color="black">true</font>> color="black"]
  node16274 -> node16278 [label=<<font color="black">false</font>> color="black"]
  node16267 -> node16268 [ color="black"]
  node16256 -> node16257 [ color="black"]
  node16279 -> node16253 [ color="black"]
  node16265 -> node16266 [ color="black"]
  node16270 -> node16271 [ color="black"]
  node16268 -> node16269 [ color="black"]
  node16261 -> node16262 [label=<<font color="black">true</font>> color="black"]
  node16261 -> node16263 [label=<<font color="black">false</font>> color="black"]
  node16263 -> node16264 [ color="black"]
  node16255 -> node16256 [ color="black"]
  node16264 -> node16265 [ color="black"]
  node16269 -> node16270 [ color="black"]
  node16262 -> node16267 [ color="black"]
  node16275 -> node16276 [ color="black"]
  node16259 -> node16260 [ color="black"]
  node16272 -> node16273 [ color="black"]
  node16276 -> node16277 [ color="black"]
  node16277 -> node16274 [ color="black"]
  node16260 -> node16261 [ color="black"]
  node16258 -> node16259 [ color="black"]
}
