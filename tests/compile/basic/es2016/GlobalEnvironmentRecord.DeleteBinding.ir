{
  let envRec = this
  let DclRec = envRec.DeclarativeRecord
  app __x0__ = (DclRec.HasBinding DclRec N)
  if (= __x0__ true) {
    app __x1__ = (DclRec.DeleteBinding DclRec N)
    app __x2__ = (WrapCompletion __x1__)
    return __x2__
  } else {}
  let ObjRec = envRec.ObjectRecord
  let globalObject = ObjRec.BindingObject
  app __x3__ = (HasOwnProperty globalObject N)
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let existingProp = __x3__
  if (= existingProp true) {
    app __x4__ = (ObjRec.DeleteBinding ObjRec N)
    if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
    let status = __x4__
    if (= status true) {
      let varNames = envRec.VarNames
      ??? "If id:{N} is an element of id:{varNames} , remove that element from the id:{varNames} ."
    } else {}
    app __x5__ = (WrapCompletion status)
    return __x5__
  } else {}
  app __x6__ = (WrapCompletion true)
  return __x6__
}