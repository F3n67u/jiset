digraph {
  node8097 [shape=diamond, label=<<font color="black">(! (= CaseClauses0 absent))</font>> color="black" fillcolor="white" style=filled]
  node8101 [shape=cds, label=<<font color="black">2:access __x1__ = (DefaultClause &quot;VarDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8104 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x4__ = __x2__[__x3__]</td></tr>
      <tr><td align="left">append __x4__ -&gt; names</td></tr>
      <tr><td align="left">__x3__ = (+ __x3__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8095 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8107 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Return the result of appending to id:{names} the elements of the VarDeclaredNames of the second nt:{CaseClauses} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8103 [shape=diamond, label=<<font color="black">(&lt; __x3__ __x2__.length)</font>> color="black" fillcolor="white" style=filled]
  node8096 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8098 [shape=cds, label=<<font color="black">access __x0__ = (CaseClauses0 &quot;VarDeclaredNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8102 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let __x2__ = __x1__</td></tr>
      <tr><td align="left">2:let __x3__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8105 [shape=diamond, label=<<font color="black">(= CaseClauses1 absent)</font>> color="black" fillcolor="white" style=filled]
  node8100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let names = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8099 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let names = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return names</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8100 -> node8101 [ color="black"]
  node8107 -> node8096 [ color="black"]
  node8101 -> node8102 [ color="black"]
  node8106 -> node8107 [ color="black"]
  node8099 -> node8101 [ color="black"]
  node8102 -> node8103 [ color="black"]
  node8098 -> node8099 [ color="black"]
  node8097 -> node8098 [label=<<font color="black">true</font>> color="black"]
  node8097 -> node8100 [label=<<font color="black">false</font>> color="black"]
  node8104 -> node8103 [ color="black"]
  node8095 -> node8097 [ color="black"]
  node8105 -> node8106 [label=<<font color="black">true</font>> color="black"]
  node8105 -> node8107 [label=<<font color="black">false</font>> color="black"]
  node8103 -> node8104 [label=<<font color="black">true</font>> color="black"]
  node8103 -> node8105 [label=<<font color="black">false</font>> color="black"]
}
