digraph {
  node14305 [shape=cds, label=<<font color="black">access __x18__ = (string __x17__)</font>> color="black" fillcolor="white" style=filled]
  node14296 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let position = [! __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14292 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let searchLength = searchString.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14277 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14316 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:result = (+ (+ result preserved) replacement)</td></tr>
      <tr><td align="left">33:endOfLastMatch = (+ p searchLength)</td></tr>
      <tr><td align="left">__x15__ = (+ __x15__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14284 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let string = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14271 [shape=cds, label=<<font color="black">4:app __x2__ = (Get searchValue &quot;flags&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14286 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let searchString = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14290 [shape=cds, label=<<font color="black">14:app __x10__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node14265 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node14306 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x16__ = (+ __x16__ __x18__)</td></tr>
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14274 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14310 [shape=cds, label=<<font color="black">27:app __x20__ = (ToString [? __x19__])</font>> color="black" fillcolor="white" style=filled]
  node14264 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node14273 [shape=cds, label=<<font color="black">5:app __x3__ = (RequireObjectCoercible flags)</font>> color="black" fillcolor="white" style=filled]
  node14301 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let endOfLastMatch = 0i</td></tr>
      <tr><td align="left">23:let result = &quot;&quot;</td></tr>
      <tr><td align="left">24:let __x14__ = matchPositions</td></tr>
      <tr><td align="left">24:let __x15__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14270 [shape=diamond, label=<<font color="black">(= isRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node14267 [shape=diamond, label=<<font color="black">(! (|| (= searchValue undefined) (= searchValue null)))</font>> color="black" fillcolor="white" style=filled]
  node14309 [shape=cds, label=<<font color="black">27:app __x19__ = (Call replaceValue undefined (new [searchString, p, string]))</font>> color="black" fillcolor="white" style=filled]
  node14299 [shape=cds, label=<<font color="black">21:app __x13__ = (StringIndexOf string searchString (+ position advanceBy))</font>> color="black" fillcolor="white" style=filled]
  node14308 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node14295 [shape=cds, label=<<font color="black">18:app __x12__ = (StringIndexOf string searchString 0i)</font>> color="black" fillcolor="white" style=filled]
  node14263 [shape=cds, label=<<font color="black">app searchValue = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14285 [shape=cds, label=<<font color="black">11:app __x8__ = (ToString searchValue)</font>> color="black" fillcolor="white" style=filled]
  node14280 [shape=diamond, label=<<font color="black">(! (= replacer undefined))</font>> color="black" fillcolor="white" style=filled]
  node14317 [shape=diamond, label=<<font color="black">(&lt; endOfLastMatch string.length)</font>> color="black" fillcolor="white" style=filled]
  node14291 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:replaceValue = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14302 [shape=diamond, label=<<font color="black">(&lt; __x15__ __x14__.length)</font>> color="black" fillcolor="white" style=filled]
  node14312 [shape=cds, label=<<font color="black">29:app __x21__ = (Type replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node14276 [shape=diamond, label=<<font color="black">(! (contains [? __x4__] &quot;g&quot;))</font>> color="black" fillcolor="white" style=filled]
  node14313 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:assert (= __x21__ String)</td></tr>
      <tr><td align="left">30:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14318 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Set id:{result} to the string - concatenation of id:{result} and the substring of id:{string} from id:{endOfLastMatch} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14281 [shape=cds, label=<<font color="black">9:app __x6__ = (Call replacer searchValue (new [O, replaceValue]))</font>> color="black" fillcolor="white" style=filled]
  node14303 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let p = __x14__[__x15__]</td></tr>
      <tr><td align="left">25:let __x16__ = &quot;&quot;</td></tr>
      <tr><td align="left">25:let __x17__ = endOfLastMatch</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14268 [shape=cds, label=<<font color="black">2:app __x1__ = (IsRegExp searchValue)</font>> color="black" fillcolor="white" style=filled]
  node14275 [shape=cds, label=<<font color="black">6:app __x4__ = (ToString flags)</font>> color="black" fillcolor="white" style=filled]
  node14307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let preserved = __x16__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14262 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14311 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let replacement = [? __x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14294 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let advanceBy = __x11__</td></tr>
      <tr><td align="left">17:let matchPositions = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14287 [shape=cds, label=<<font color="black">12:app __x9__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node14314 [shape=cds, label=<<font color="black">31:app __x22__ = (GetSubstitution searchString string p captures undefined replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node14282 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14304 [shape=diamond, label=<<font color="black">(&lt; __x17__ (+ p 1i))</font>> color="black" fillcolor="white" style=filled]
  node14272 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let flags = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14319 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14279 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let replacer = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14297 [shape=diamond, label=<<font color="black">(! (= position -1i))</font>> color="black" fillcolor="white" style=filled]
  node14289 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node14261 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14300 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:position = [! __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14278 [shape=cds, label=<<font color="black">7:app __x5__ = (GetMethod searchValue SYMBOL_replace)</font>> color="black" fillcolor="white" style=filled]
  node14266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14288 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let functionalReplace = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14315 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:let replacement = [! __x22__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14293 [shape=cds, label=<<font color="black">16:app __x11__ = (max 1i searchLength)</font>> color="black" fillcolor="white" style=filled]
  node14298 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:append position -&gt; matchPositions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14269 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isRegExp = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14283 [shape=cds, label=<<font color="black">10:app __x7__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node14315 -> node14316 [ color="black"]
  node14280 -> node14281 [label=<<font color="black">true</font>> color="black"]
  node14280 -> node14283 [label=<<font color="black">false</font>> color="black"]
  node14273 -> node14274 [ color="black"]
  node14319 -> node14262 [ color="black"]
  node14299 -> node14300 [ color="black"]
  node14286 -> node14287 [ color="black"]
  node14303 -> node14304 [ color="black"]
  node14317 -> node14318 [label=<<font color="black">true</font>> color="black"]
  node14317 -> node14319 [label=<<font color="black">false</font>> color="black"]
  node14269 -> node14270 [ color="black"]
  node14277 -> node14278 [ color="black"]
  node14268 -> node14269 [ color="black"]
  node14263 -> node14264 [ color="black"]
  node14313 -> node14314 [ color="black"]
  node14295 -> node14296 [ color="black"]
  node14288 -> node14289 [ color="black"]
  node14278 -> node14279 [ color="black"]
  node14298 -> node14299 [ color="black"]
  node14290 -> node14291 [ color="black"]
  node14281 -> node14282 [ color="black"]
  node14285 -> node14286 [ color="black"]
  node14264 -> node14265 [ color="black"]
  node14318 -> node14319 [ color="black"]
  node14266 -> node14267 [ color="black"]
  node14300 -> node14297 [ color="black"]
  node14316 -> node14302 [ color="black"]
  node14308 -> node14309 [label=<<font color="black">true</font>> color="black"]
  node14308 -> node14312 [label=<<font color="black">false</font>> color="black"]
  node14284 -> node14285 [ color="black"]
  node14312 -> node14313 [ color="black"]
  node14271 -> node14272 [ color="black"]
  node14274 -> node14275 [ color="black"]
  node14314 -> node14315 [ color="black"]
  node14309 -> node14310 [ color="black"]
  node14275 -> node14276 [ color="black"]
  node14301 -> node14302 [ color="black"]
  node14267 -> node14268 [label=<<font color="black">true</font>> color="black"]
  node14267 -> node14283 [label=<<font color="black">false</font>> color="black"]
  node14311 -> node14316 [ color="black"]
  node14261 -> node14263 [ color="black"]
  node14283 -> node14284 [ color="black"]
  node14310 -> node14311 [ color="black"]
  node14272 -> node14273 [ color="black"]
  node14304 -> node14305 [label=<<font color="black">true</font>> color="black"]
  node14304 -> node14307 [label=<<font color="black">false</font>> color="black"]
  node14289 -> node14290 [label=<<font color="black">true</font>> color="black"]
  node14289 -> node14292 [label=<<font color="black">false</font>> color="black"]
  node14276 -> node14277 [label=<<font color="black">true</font>> color="black"]
  node14276 -> node14278 [label=<<font color="black">false</font>> color="black"]
  node14306 -> node14304 [ color="black"]
  node14282 -> node14283 [ color="black"]
  node14297 -> node14298 [label=<<font color="black">true</font>> color="black"]
  node14297 -> node14301 [label=<<font color="black">false</font>> color="black"]
  node14305 -> node14306 [ color="black"]
  node14287 -> node14288 [ color="black"]
  node14307 -> node14308 [ color="black"]
  node14270 -> node14271 [label=<<font color="black">true</font>> color="black"]
  node14270 -> node14278 [label=<<font color="black">false</font>> color="black"]
  node14302 -> node14303 [label=<<font color="black">true</font>> color="black"]
  node14302 -> node14317 [label=<<font color="black">false</font>> color="black"]
  node14294 -> node14295 [ color="black"]
  node14293 -> node14294 [ color="black"]
  node14279 -> node14280 [ color="black"]
  node14296 -> node14297 [ color="black"]
  node14265 -> node14266 [ color="black"]
  node14291 -> node14292 [ color="black"]
  node14292 -> node14293 [ color="black"]
}
