digraph {
  node18536 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18539 [shape=cds, label=<<font color="black">6:app __x0__ = (TriggerPromiseReactions reactions value)</font>> color="black" fillcolor="white" style=filled]
  node18540 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18537 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18538 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= promise.PromiseState CONST_pending)</td></tr>
      <tr><td align="left">1:let reactions = promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">2:promise.PromiseResult = value</td></tr>
      <tr><td align="left">3:promise.PromiseFulfillReactions = undefined</td></tr>
      <tr><td align="left">4:promise.PromiseRejectReactions = undefined</td></tr>
      <tr><td align="left">5:promise.PromiseState = CONST_fulfilled</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18536 -> node18538 [ color="black"]
  node18538 -> node18539 [ color="black"]
  node18539 -> node18540 [ color="black"]
  node18540 -> node18537 [ color="black"]
}
