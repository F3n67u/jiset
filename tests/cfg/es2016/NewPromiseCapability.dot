digraph {
  node15596 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15600 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">9:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15590 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15586 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15591 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = (new PromiseCapability(&quot;Promise&quot; -&gt; undefined, &quot;Resolve&quot; -&gt; undefined, &quot;Reject&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:let executor = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">4:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15595 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15599 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15587 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15592 [shape=cds, label=<<font color="black">5:app __x1__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node15594 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node15588 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node15598 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node15593 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promise = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15589 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node15597 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node15591 -> node15592 [ color="black"]
  node15595 -> node15596 [label=<<font color="black">true</font>> color="black"]
  node15595 -> node15597 [label=<<font color="black">false</font>> color="black"]
  node15600 -> node15587 [ color="black"]
  node15598 -> node15599 [label=<<font color="black">true</font>> color="black"]
  node15598 -> node15600 [label=<<font color="black">false</font>> color="black"]
  node15589 -> node15590 [label=<<font color="black">true</font>> color="black"]
  node15589 -> node15591 [label=<<font color="black">false</font>> color="black"]
  node15597 -> node15598 [ color="black"]
  node15588 -> node15589 [ color="black"]
  node15593 -> node15594 [ color="black"]
  node15599 -> node15600 [ color="black"]
  node15586 -> node15588 [ color="black"]
  node15590 -> node15591 [ color="black"]
  node15594 -> node15595 [ color="black"]
  node15592 -> node15593 [ color="black"]
  node15596 -> node15597 [ color="black"]
}
