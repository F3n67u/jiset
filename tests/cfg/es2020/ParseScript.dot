digraph {
  node10910 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10912 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;Parse id:{sourceText} using nt:{Script} as the goal symbol and analyse the parse result for any Early Error conditions . If the parse was successful and no early errors were found , let id:{body} be the resulting parse tree . Otherwise , let id:{body} be a List of one or more value:{SyntaxError} objects representing the parsing errors and / or early errors . Parsing and early error detection may be interweaved in an implementation - dependent manner . If more than one parsing error or early error is present , the number and ordering of error objects in the list is implementation - dependent , but at least one must be present .&quot;</td></tr>
      <tr><td align="left">3:return (new ScriptRecord(&quot;Realm&quot; -&gt; realm, &quot;Environment&quot; -&gt; undefined, &quot;ECMAScriptCode&quot; -&gt; body, &quot;HostDefined&quot; -&gt; hostDefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10911 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10910 -> node10912 [ color="black"]
  node10912 -> node10911 [ color="black"]
}
