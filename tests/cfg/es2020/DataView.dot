digraph {
  node17326 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17343 [shape=diamond, label=<<font color="black">(= byteLength undefined)</font>> color="black" fillcolor="white" style=filled]
  node17330 [shape=cds, label=<<font color="black">app byteLength = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17339 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17334 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17349 [shape=cds, label=<<font color="black">11:app __x4__ = (OrdinaryCreateFromConstructor NewTarget &quot;%DataView.prototype%&quot; (new [&quot;DataView&quot;, &quot;ViewedArrayBuffer&quot;, &quot;ByteLength&quot;, &quot;ByteOffset&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17331 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17353 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17346 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let viewByteLength = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17335 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node17338 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node17341 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength offset)</font>> color="black" fillcolor="white" style=filled]
  node17332 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17344 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let viewByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17351 [shape=cds, label=<<font color="black">12:app __x5__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17337 [shape=cds, label=<<font color="black">3:app __x2__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17352 [shape=diamond, label=<<font color="black">(= __x5__ true)</font>> color="black" fillcolor="white" style=filled]
  node17327 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17333 [shape=cds, label=<<font color="black">1:app __x0__ = (RequireInternalSlot buffer &quot;ArrayBufferData&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17340 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17354 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">14:O.ByteLength = viewByteLength</td></tr>
      <tr><td align="left">15:O.ByteOffset = offset</td></tr>
      <tr><td align="left">16:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17328 [shape=cds, label=<<font color="black">app buffer = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17345 [shape=cds, label=<<font color="black">9:app __x3__ = (ToIndex byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let O = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17336 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let offset = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17347 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset viewByteLength))</font>> color="black" fillcolor="white" style=filled]
  node17329 [shape=cds, label=<<font color="black">app byteOffset = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17348 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17333 -> node17334 [ color="black"]
  node17348 -> node17349 [ color="black"]
  node17335 -> node17336 [ color="black"]
  node17352 -> node17353 [label=<<font color="black">true</font>> color="black"]
  node17352 -> node17354 [label=<<font color="black">false</font>> color="black"]
  node17326 -> node17328 [ color="black"]
  node17351 -> node17352 [ color="black"]
  node17337 -> node17338 [ color="black"]
  node17343 -> node17344 [label=<<font color="black">true</font>> color="black"]
  node17343 -> node17345 [label=<<font color="black">false</font>> color="black"]
  node17346 -> node17347 [ color="black"]
  node17345 -> node17346 [ color="black"]
  node17354 -> node17327 [ color="black"]
  node17341 -> node17342 [label=<<font color="black">true</font>> color="black"]
  node17341 -> node17343 [label=<<font color="black">false</font>> color="black"]
  node17353 -> node17354 [ color="black"]
  node17338 -> node17339 [label=<<font color="black">true</font>> color="black"]
  node17338 -> node17340 [label=<<font color="black">false</font>> color="black"]
  node17332 -> node17333 [ color="black"]
  node17350 -> node17351 [ color="black"]
  node17331 -> node17332 [label=<<font color="black">true</font>> color="black"]
  node17331 -> node17333 [label=<<font color="black">false</font>> color="black"]
  node17349 -> node17350 [ color="black"]
  node17329 -> node17330 [ color="black"]
  node17334 -> node17335 [ color="black"]
  node17342 -> node17343 [ color="black"]
  node17339 -> node17340 [ color="black"]
  node17340 -> node17341 [ color="black"]
  node17328 -> node17329 [ color="black"]
  node17336 -> node17337 [ color="black"]
  node17344 -> node17349 [ color="black"]
  node17330 -> node17331 [ color="black"]
  node17347 -> node17348 [label=<<font color="black">true</font>> color="black"]
  node17347 -> node17349 [label=<<font color="black">false</font>> color="black"]
}
