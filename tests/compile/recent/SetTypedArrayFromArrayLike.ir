{
  [1] let targetBuffer = target.ViewedArrayBuffer
  [2] app __x0__ = (IsDetachedBuffer targetBuffer)
  [2] if (= __x0__ true) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [0] {}
  [3] let targetLength = target.ArrayLength
  [4] let targetName = target.TypedArrayName
  [5] ??? "Let id:{targetElementSize} be the Element Size value specified in link:{} for id:{targetName} ."
  [6] ??? "Let id:{targetType} be the Element Type value in link:{} for id:{targetName} ."
  [7] let targetByteOffset = target.ByteOffset
  [8] app __x2__ = (ToObject source)
  [8] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [0] {}
  [8] let src = __x2__
  [9] app __x3__ = (LengthOfArrayLike src)
  [9] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [0] {}
  [9] let srcLength = __x3__
  [10] ??? "If id:{targetOffset} is + ∞ , throw a value:{RangeError} exception ."
  [11] if (< targetLength (+ srcLength targetOffset)) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [0] {}
  [12] let targetByteIndex = (+ (* targetOffset targetElementSize) targetByteOffset)
  [13] let k = 0i
  [14] let limit = (* (+ targetByteIndex targetElementSize) srcLength)
  [15] while (< targetByteIndex limit) {
    [16] ??? "Let id:{Pk} be ! ToString ( 𝔽 ( id:{k} ) ) ."
    [17] app __x5__ = (Get src Pk)
    [17] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [0] {}
    [17] let value = __x5__
    [19] if (= target.ContentType CONST_BigInt) {
      app __x6__ = (ToBigInt value)
      if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [0] {}
      value = __x6__
    } else {
      app __x7__ = (ToNumber value)
      if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [0] {}
      value = __x7__
    }
    [20] app __x8__ = (IsDetachedBuffer targetBuffer)
    [20] if (= __x8__ true) {
      app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x9__
    } else [0] {}
    [21] app __x10__ = (SetValueInBuffer targetBuffer targetByteIndex targetType value true CONST_Unordered)
    [21] __x10__
    [22] k = (+ k 1i)
    [23] targetByteIndex = (+ targetByteIndex targetElementSize)
  }
}