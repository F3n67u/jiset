digraph {
  node8504 [shape=cds, label=<<font color="black">0:access __x0__ = (PropertyName &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8515 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:__x3__</td></tr>
      <tr><td align="left">8:closure.SourceText = (get-syntax MethodDefinition)</td></tr>
      <tr><td align="left">9:let desc = (new PropertyDescriptor(&quot;Get&quot; -&gt; closure, &quot;Enumerable&quot; -&gt; enumerable, &quot;Configurable&quot; -&gt; true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let closure = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8508 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8513 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:__x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8503 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8512 [shape=cds, label=<<font color="black">6:app __x2__ = (MakeMethod closure object)</font>> color="black" fillcolor="white" style=filled]
  node8502 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8505 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let propKey = __x0__</td></tr>
      <tr><td align="left">1:[? propKey]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8509 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let scope = GLOBAL_context.LexicalEnvironment</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{formalParameterList} be an instance of the production grammar:{FormalParameters0, []} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8506 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node8514 [shape=cds, label=<<font color="black">7:app __x3__ = (SetFunctionName closure propKey &quot;get&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8507 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strict = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8510 [shape=cds, label=<<font color="black">5:app __x1__ = (FunctionCreate CONST_Method formalParameterList FunctionBody scope strict)</font>> color="black" fillcolor="white" style=filled]
  node8516 [shape=cds, label=<<font color="black">10:app __x4__ = (DefinePropertyOrThrow object propKey desc)</font>> color="black" fillcolor="white" style=filled]
  node8505 -> node8506 [ color="black"]
  node8510 -> node8511 [ color="black"]
  node8515 -> node8516 [ color="black"]
  node8508 -> node8509 [ color="black"]
  node8509 -> node8510 [ color="black"]
  node8502 -> node8504 [ color="black"]
  node8516 -> node8517 [ color="black"]
  node8506 -> node8507 [label=<<font color="black">true</font>> color="black"]
  node8506 -> node8508 [label=<<font color="black">false</font>> color="black"]
  node8513 -> node8514 [ color="black"]
  node8507 -> node8509 [ color="black"]
  node8517 -> node8503 [ color="black"]
  node8514 -> node8515 [ color="black"]
  node8511 -> node8512 [ color="black"]
  node8504 -> node8505 [ color="black"]
  node8512 -> node8513 [ color="black"]
}
