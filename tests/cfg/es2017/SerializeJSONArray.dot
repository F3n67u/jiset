digraph {
  node16501 [shape=cds, label=<<font color="black">8:app __x3__ = (SerializeJSONProperty [! __x2__] value)</font>> color="black" fillcolor="white" style=filled]
  node16498 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let len = [? __x1__]</td></tr>
      <tr><td align="left">6:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16491 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">25:indent = stepback</td></tr>
      <tr><td align="left">26:return final</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16497 [shape=cds, label=<<font color="black">5:app __x1__ = (ToLength [? __x0__])</font>> color="black" fillcolor="white" style=filled]
  node16504 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append &quot;null&quot; -&gt; partial</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16506 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16499 [shape=diamond, label=<<font color="black">(&lt; index len)</font>> color="black" fillcolor="white" style=filled]
  node16502 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let strP = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let separator = (+ (+ &quot;,&quot; &quot;\n&quot;) indent)</td></tr>
      <tr><td align="left">22:??? &quot;Let id:{properties} be a String formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with id:{separator} . The id:{separator} String is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">23:let final = (+ (+ (+ (+ (+ (+ &quot;[&quot; &quot;\n&quot;) indent) properties) &quot;\n&quot;) stepback) &quot;]&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16495 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:append value -&gt; stack</td></tr>
      <tr><td align="left">2:let stepback = indent</td></tr>
      <tr><td align="left">3:indent = (+ indent gap)</td></tr>
      <tr><td align="left">4:let partial = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16508 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = &quot;[]&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16509 [shape=diamond, label=<<font color="black">(= gap &quot;&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16492 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16505 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append strP -&gt; partial</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16496 [shape=cds, label=<<font color="black">5:app __x0__ = (Get value &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16503 [shape=diamond, label=<<font color="black">(= strP undefined)</font>> color="black" fillcolor="white" style=filled]
  node16500 [shape=cds, label=<<font color="black">8:app __x2__ = (ToString index)</font>> color="black" fillcolor="white" style=filled]
  node16493 [shape=diamond, label=<<font color="black">(contains stack value)</font>> color="black" fillcolor="white" style=filled]
  node16510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:??? &quot;Let id:{properties} be a String formed by concatenating all the element Strings of id:{partial} with each adjacent pair of Strings separated with code unit 0x002C ( COMMA ) . A comma is not inserted either before the first String or after the last String .&quot;</td></tr>
      <tr><td align="left">19:let final = (+ (+ &quot;[&quot; properties) &quot;]&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16507 [shape=diamond, label=<<font color="black">(= partial.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node16494 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16506 -> node16499 [ color="black"]
  node16510 -> node16512 [ color="black"]
  node16491 -> node16493 [ color="black"]
  node16509 -> node16510 [label=<<font color="black">true</font>> color="black"]
  node16509 -> node16511 [label=<<font color="black">false</font>> color="black"]
  node16505 -> node16506 [ color="black"]
  node16494 -> node16495 [ color="black"]
  node16508 -> node16512 [ color="black"]
  node16500 -> node16501 [ color="black"]
  node16498 -> node16499 [ color="black"]
  node16511 -> node16512 [ color="black"]
  node16499 -> node16500 [label=<<font color="black">true</font>> color="black"]
  node16499 -> node16507 [label=<<font color="black">false</font>> color="black"]
  node16493 -> node16494 [label=<<font color="black">true</font>> color="black"]
  node16493 -> node16495 [label=<<font color="black">false</font>> color="black"]
  node16496 -> node16497 [ color="black"]
  node16512 -> node16492 [ color="black"]
  node16495 -> node16496 [ color="black"]
  node16497 -> node16498 [ color="black"]
  node16501 -> node16502 [ color="black"]
  node16504 -> node16506 [ color="black"]
  node16503 -> node16504 [label=<<font color="black">true</font>> color="black"]
  node16503 -> node16505 [label=<<font color="black">false</font>> color="black"]
  node16507 -> node16508 [label=<<font color="black">true</font>> color="black"]
  node16507 -> node16509 [label=<<font color="black">false</font>> color="black"]
  node16502 -> node16503 [ color="black"]
}
