digraph {
  node18171 [shape=cds, label=<<font color="black">9:app __x2__ = (Type resolution)</font>> color="black" fillcolor="white" style=filled]
  node18187 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let job = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18175 [shape=cds, label=<<font color="black">11:app __x4__ = (Get resolution &quot;then&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18177 [shape=cds, label=<<font color="black">12:app __x5__ = (IsAbruptCompletion then)</font>> color="black" fillcolor="white" style=filled]
  node18168 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let selfResolutionError = ??? &quot;TypeError&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18183 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node18172 [shape=diamond, label=<<font color="black">(! (= __x2__ Object))</font>> color="black" fillcolor="white" style=filled]
  node18188 [shape=cds, label=<<font color="black">18:app __x10__ = (HostEnqueuePromiseJob job.Job job.Realm)</font>> color="black" fillcolor="white" style=filled]
  node18176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let then = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18169 [shape=cds, label=<<font color="black">8:app __x1__ = (RejectPromise promise selfResolutionError)</font>> color="black" fillcolor="white" style=filled]
  node18164 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18189 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x10__</td></tr>
      <tr><td align="left">19:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18173 [shape=cds, label=<<font color="black">10:app __x3__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node18163 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node18170 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18179 [shape=cds, label=<<font color="black">13:app __x6__ = (RejectPromise promise then.Value)</font>> color="black" fillcolor="white" style=filled]
  node18166 [shape=cds, label=<<font color="black">6:app __x0__ = (SameValue resolution promise)</font>> color="black" fillcolor="white" style=filled]
  node18162 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let F = GLOBAL_context.Function</td></tr>
      <tr><td align="left">2:let promise = F.Promise</td></tr>
      <tr><td align="left">3:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18174 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18180 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18165 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18161 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18178 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node18184 [shape=cds, label=<<font color="black">16:app __x8__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node18182 [shape=cds, label=<<font color="black">15:app __x7__ = (IsCallable thenAction)</font>> color="black" fillcolor="white" style=filled]
  node18167 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node18160 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18185 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18186 [shape=cds, label=<<font color="black">17:app __x9__ = (NewPromiseResolveThenableJob promise resolution thenAction)</font>> color="black" fillcolor="white" style=filled]
  node18181 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let thenAction = then.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18170 -> node18171 [ color="black"]
  node18182 -> node18183 [ color="black"]
  node18180 -> node18181 [ color="black"]
  node18189 -> node18161 [ color="black"]
  node18181 -> node18182 [ color="black"]
  node18187 -> node18188 [ color="black"]
  node18179 -> node18180 [ color="black"]
  node18175 -> node18176 [ color="black"]
  node18168 -> node18169 [ color="black"]
  node18177 -> node18178 [ color="black"]
  node18164 -> node18165 [ color="black"]
  node18162 -> node18163 [ color="black"]
  node18176 -> node18177 [ color="black"]
  node18173 -> node18174 [ color="black"]
  node18166 -> node18167 [ color="black"]
  node18167 -> node18168 [label=<<font color="black">true</font>> color="black"]
  node18167 -> node18171 [label=<<font color="black">false</font>> color="black"]
  node18186 -> node18187 [ color="black"]
  node18184 -> node18185 [ color="black"]
  node18183 -> node18184 [label=<<font color="black">true</font>> color="black"]
  node18183 -> node18186 [label=<<font color="black">false</font>> color="black"]
  node18174 -> node18175 [ color="black"]
  node18171 -> node18172 [ color="black"]
  node18188 -> node18189 [ color="black"]
  node18172 -> node18173 [label=<<font color="black">true</font>> color="black"]
  node18172 -> node18175 [label=<<font color="black">false</font>> color="black"]
  node18163 -> node18164 [label=<<font color="black">true</font>> color="black"]
  node18163 -> node18165 [label=<<font color="black">false</font>> color="black"]
  node18185 -> node18186 [ color="black"]
  node18178 -> node18179 [label=<<font color="black">true</font>> color="black"]
  node18178 -> node18181 [label=<<font color="black">false</font>> color="black"]
  node18169 -> node18170 [ color="black"]
  node18165 -> node18166 [ color="black"]
  node18160 -> node18162 [ color="black"]
}
