def [BUILTIN] BigInt(value) = {
  0:if (! (= NewTarget undefined)) throw TypeError else 2:{}
  1:app __x0__ = (ToPrimitive value CONST_number)
  1:let prim = [? __x0__]
  3:if (= (typeof prim) Number) {
    app __x1__ = (NumberToBigInt prim)
    return [? __x1__]
  } else {
    app __x2__ = (ToBigInt value)
    return [? __x2__]
  }
}
- id: "sec-bigint-constructor-number-value"
- code:
          1. If NewTarget is not *undefined*, throw a *TypeError* exception.
          1. Let _prim_ be ? ToPrimitive(_value_, ~number~).
          1. If Type(_prim_) is Number, return ? NumberToBigInt(_prim_).
          1. Otherwise, return ? ToBigInt(_value_).