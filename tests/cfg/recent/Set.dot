digraph {
  node17437 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17449 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node17459 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17453 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node17442 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget &quot;%Set.prototype%&quot; (new [&quot;SetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17440 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17445 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17462 [shape=cds, label=<<font color="black">12:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node17450 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17454 [shape=cds, label=<<font color="black">8:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17439 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17444 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node17455 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17464 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node17447 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17443 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.SetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17446 [shape=cds, label=<<font color="black">4:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17463 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node17458 [shape=cds, label=<<font color="black">10:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node17451 [shape=cds, label=<<font color="black">6:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node17448 [shape=cds, label=<<font color="black">5:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node17461 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17452 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17438 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17457 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17460 [shape=cds, label=<<font color="black">11:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node17465 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17441 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17456 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node17460 -> node17461 [ color="black"]
  node17464 -> node17465 [ color="black"]
  node17445 -> node17446 [ color="black"]
  node17458 -> node17459 [ color="black"]
  node17455 -> node17456 [ color="black"]
  node17446 -> node17447 [ color="black"]
  node17450 -> node17451 [ color="black"]
  node17457 -> node17458 [ color="black"]
  node17440 -> node17441 [label=<<font color="black">true</font>> color="black"]
  node17440 -> node17442 [label=<<font color="black">false</font>> color="black"]
  node17447 -> node17448 [ color="black"]
  node17461 -> node17462 [ color="black"]
  node17452 -> node17453 [ color="black"]
  node17462 -> node17463 [ color="black"]
  node17465 -> node17453 [ color="black"]
  node17454 -> node17455 [ color="black"]
  node17456 -> node17457 [label=<<font color="black">true</font>> color="black"]
  node17456 -> node17458 [label=<<font color="black">false</font>> color="black"]
  node17443 -> node17444 [ color="black"]
  node17448 -> node17449 [ color="black"]
  node17459 -> node17460 [ color="black"]
  node17442 -> node17443 [ color="black"]
  node17444 -> node17445 [label=<<font color="black">true</font>> color="black"]
  node17444 -> node17446 [label=<<font color="black">false</font>> color="black"]
  node17463 -> node17464 [label=<<font color="black">true</font>> color="black"]
  node17463 -> node17453 [label=<<font color="black">false</font>> color="black"]
  node17437 -> node17439 [ color="black"]
  node17441 -> node17442 [ color="black"]
  node17439 -> node17440 [ color="black"]
  node17453 -> node17454 [label=<<font color="black">true</font>> color="black"]
  node17453 -> node17438 [label=<<font color="black">false</font>> color="black"]
  node17451 -> node17452 [ color="black"]
  node17449 -> node17450 [label=<<font color="black">true</font>> color="black"]
  node17449 -> node17451 [label=<<font color="black">false</font>> color="black"]
}
