{
  app typedArray = (GetArgument argumentsList 0i)
  app index = (GetArgument argumentsList 1i)
  app value = (GetArgument argumentsList 2i)
  app timeout = (GetArgument argumentsList 3i)
  [0] app __x0__ = (ValidateIntegerTypedArray typedArray true)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [22] {}
  [0] let buffer = __x0__
  [1] app __x1__ = (IsSharedArrayBuffer buffer)
  [1] if (= __x1__ false) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [22] {}
  [2] app __x3__ = (ValidateAtomicAccess typedArray index)
  [2] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [22] {}
  [2] let indexedPosition = __x3__
  [3] let arrayTypeName = typedArray.TypedArrayName
  [5] if (= arrayTypeName "BigInt64Array") {
    app __x4__ = (ToBigInt64 value)
    if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [22] {}
    let v = __x4__
  } else {
    app __x5__ = (ToInt32 value)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [22] {}
    let v = __x5__
  }
  [6] app __x6__ = (ToNumber timeout)
  [6] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [22] {}
  [6] let q = __x6__
  [7] ??? "If id:{q} is value:{NaN} or value:{+∞} , let id:{t} be + ∞ ; else if id:{q} is value:{-∞} , let id:{t} be 0 ; else let id:{t} be max ( ℝ ( id:{q} ) , 0 ) ."
  [8] app __x7__ = (AgentCanSuspend )
  [8] let B = __x7__
  [9] if (= B false) {
    app __x8__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x8__
  } else [22] {}
  [10] let block = buffer.ArrayBufferData
  [11] app __x9__ = (GetWaiterList block indexedPosition)
  [11] let WL = __x9__
  [12] app __x10__ = (EnterCriticalSection WL)
  [12] __x10__
  [13] ??? "Let id:{elementType} be the Element Type value in link:{} for id:{arrayTypeName} ."
  [14] app __x11__ = (GetValueFromBuffer buffer indexedPosition elementType true CONST_SeqCst)
  [14] if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else [22] {}
  [14] let w = __x11__
  [15] if (! (== v w)) {
    [16] app __x12__ = (LeaveCriticalSection WL)
    [16] __x12__
    [17] ??? "Return the String value:{\"not-equal\"} ."
  } else [22] {}
  [18] app __x13__ = (AgentSignifier )
  [18] let W = __x13__
  [19] app __x14__ = (AddWaiter WL W)
  [19] __x14__
  [20] app __x15__ = (SuspendAgent WL W t)
  [20] let notified = __x15__
  [23] if (= notified true) {} else {
    [24] app __x16__ = (RemoveWaiter WL W)
    [24] __x16__
  }
  [25] app __x17__ = (LeaveCriticalSection WL)
  [25] __x17__
  [26] ??? "If id:{notified} is value:{true} , return the String value:{\"ok\"} ."
  [27] ??? "Return the String value:{\"timed-out\"} ."
}