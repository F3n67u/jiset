digraph {
  node17375 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17378 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17385 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17377 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray)</font>> color="black" fillcolor="white" style=filled]
  node17382 [shape=cds, label=<<font color="black">app __x2__ = (ToBigInt value)</font>> color="black" fillcolor="white" style=filled]
  node17379 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node17388 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17380 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
      <tr><td align="left">2:let arrayTypeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17384 [shape=cds, label=<<font color="black">app __x3__ = (ToInteger value)</font>> color="black" fillcolor="white" style=filled]
  node17387 [shape=cds, label=<<font color="black">9:app __x4__ = (GetModifySetValueInBuffer buffer indexedPosition elementType v op)</font>> color="black" fillcolor="white" style=filled]
  node17381 [shape=diamond, label=<<font color="black">(= typedArray.ContentType CONST_BigInt)</font>> color="black" fillcolor="white" style=filled]
  node17386 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{elementType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:let indexedPosition = (+ (* i elementSize) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17383 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let v = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17376 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17388 -> node17376 [ color="black"]
  node17382 -> node17383 [ color="black"]
  node17379 -> node17380 [ color="black"]
  node17383 -> node17386 [ color="black"]
  node17384 -> node17385 [ color="black"]
  node17381 -> node17382 [label=<<font color="black">true</font>> color="black"]
  node17381 -> node17384 [label=<<font color="black">false</font>> color="black"]
  node17387 -> node17388 [ color="black"]
  node17385 -> node17386 [ color="black"]
  node17375 -> node17377 [ color="black"]
  node17380 -> node17381 [ color="black"]
  node17377 -> node17378 [ color="black"]
  node17386 -> node17387 [ color="black"]
  node17378 -> node17379 [ color="black"]
}
