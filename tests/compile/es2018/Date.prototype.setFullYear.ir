{
  app year = (GetArgument argumentsList 0i)
  app month = (GetArgument argumentsList 1i)
  app date = (GetArgument argumentsList 2i)
  [0] app __x0__ = (thisTimeValue this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [11] {}
  [0] let t = __x0__
  [1] if (= t NaN) let t = 0i else {
    app __x1__ = (LocalTime t)
    let t = __x1__
  }
  [2] app __x2__ = (ToNumber year)
  [2] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [11] {}
  [2] let y = __x2__
  [3] if (= month absent) {
    app __x3__ = (MonthFromTime t)
    let m = __x3__
  } else {
    app __x4__ = (ToNumber month)
    if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [11] {}
    let m = __x4__
  }
  [4] if (= date absent) {
    app __x5__ = (DateFromTime t)
    let dt = __x5__
  } else {
    app __x6__ = (ToNumber date)
    if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [11] {}
    let dt = __x6__
  }
  [5] app __x7__ = (MakeDay y m dt)
  [5] app __x8__ = (TimeWithinDay t)
  [5] app __x9__ = (MakeDate __x7__ __x8__)
  [5] let newDate = __x9__
  [6] app __x10__ = (UTC newDate)
  [6] app __x11__ = (TimeClip __x10__)
  [6] let u = __x11__
  [7] this.DateValue = u
  [8] app __x12__ = (WrapCompletion u)
  [8] return __x12__
}