[{
  "tokens": ["Let", {
    "id": "O"
  }, "be", "?", "ToObject", "(", {
    "value": "this"
  }, "value", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "len"
  }, "be", "?", "LengthOfArrayLike", "(", {
    "id": "O"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "relativeStart"
  }, "be", "?", "ToIntegerOrInfinity", "(", {
    "id": "start"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "relativeStart"
  }, "is", "-", "‚àû", ",", "let", {
    "id": "actualStart"
  }, "be", "0", "."]
}, {
  "tokens": ["Else", "if", {
    "id": "relativeStart"
  }, "<", "0", ",", "let", {
    "id": "actualStart"
  }, "be", "max", "(", {
    "id": "len"
  }, "+", {
    "id": "relativeStart"
  }, ",", "0", ")", "."]
}, {
  "tokens": ["Else", ",", "let", {
    "id": "actualStart"
  }, "be", "min", "(", {
    "id": "relativeStart"
  }, ",", {
    "id": "len"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "start"
  }, "is", "not", "present", ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "insertCount"
  }, "be", "0", "."]
}, {
  "tokens": ["Let", {
    "id": "actualDeleteCount"
  }, "be", "0", "."]
}, {
  "tokens": ["Else", "if", {
    "id": "deleteCount"
  }, "is", "not", "present", ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "insertCount"
  }, "be", "0", "."]
}, {
  "tokens": ["Let", {
    "id": "actualDeleteCount"
  }, "be", {
    "id": "len"
  }, "-", {
    "id": "actualStart"
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "insertCount"
  }, "be", "the", "number", "of", "elements", "in", {
    "id": "items"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "dc"
  }, "be", "?", "ToIntegerOrInfinity", "(", {
    "id": "deleteCount"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "actualDeleteCount"
  }, "be", "the", "result", "of", "clamping", {
    "id": "dc"
  }, "between", "0", "and", {
    "id": "len"
  }, "-", {
    "id": "actualStart"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "len"
  }, "+", {
    "id": "insertCount"
  }, "-", {
    "id": "actualDeleteCount"
  }, ">", "2", {
    "sup": {
      "tokens": ["53"]
    }
  }, "-", "1", ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Let", {
    "id": "A"
  }, "be", "?", "ArraySpeciesCreate", "(", {
    "id": "O"
  }, ",", {
    "id": "actualDeleteCount"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "k"
  }, "be", "0", "."]
}, {
  "tokens": ["Repeat", ",", "while", {
    "id": "k"
  }, "<", {
    "id": "actualDeleteCount"
  }, ","]
}, {
  "tokens": ["Let", {
    "id": "from"
  }, "be", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "actualStart"
  }, "+", {
    "id": "k"
  }, ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "fromPresent"
  }, "be", "?", "HasProperty", "(", {
    "id": "O"
  }, ",", {
    "id": "from"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "fromPresent"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "fromValue"
  }, "be", "?", "Get", "(", {
    "id": "O"
  }, ",", {
    "id": "from"
  }, ")", "."]
}, {
  "tokens": ["Perform", "?", "CreateDataPropertyOrThrow", "(", {
    "id": "A"
  }, ",", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "k"
  }, ")", ")", ",", {
    "id": "fromValue"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "k"
  }, "to", {
    "id": "k"
  }, "+", "1", "."]
}, {
  "tokens": ["Perform", "?", "Set", "(", {
    "id": "A"
  }, ",", {
    "value": "\"length\""
  }, ",", "ùîΩ", "(", {
    "id": "actualDeleteCount"
  }, ")", ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "itemCount"
  }, "be", "the", "number", "of", "elements", "in", {
    "id": "items"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "itemCount"
  }, "<", {
    "id": "actualDeleteCount"
  }, ",", "then"]
}, {
  "tokens": ["Set", {
    "id": "k"
  }, "to", {
    "id": "actualStart"
  }, "."]
}, {
  "tokens": ["Repeat", ",", "while", {
    "id": "k"
  }, "<", "(", {
    "id": "len"
  }, "-", {
    "id": "actualDeleteCount"
  }, ")", ","]
}, {
  "tokens": ["Let", {
    "id": "from"
  }, "be", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "k"
  }, "+", {
    "id": "actualDeleteCount"
  }, ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "to"
  }, "be", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "k"
  }, "+", {
    "id": "itemCount"
  }, ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "fromPresent"
  }, "be", "?", "HasProperty", "(", {
    "id": "O"
  }, ",", {
    "id": "from"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "fromPresent"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "fromValue"
  }, "be", "?", "Get", "(", {
    "id": "O"
  }, ",", {
    "id": "from"
  }, ")", "."]
}, {
  "tokens": ["Perform", "?", "Set", "(", {
    "id": "O"
  }, ",", {
    "id": "to"
  }, ",", {
    "id": "fromValue"
  }, ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Assert", ":", {
    "id": "fromPresent"
  }, "is", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["Perform", "?", "DeletePropertyOrThrow", "(", {
    "id": "O"
  }, ",", {
    "id": "to"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "k"
  }, "to", {
    "id": "k"
  }, "+", "1", "."]
}, {
  "tokens": ["Set", {
    "id": "k"
  }, "to", {
    "id": "len"
  }, "."]
}, {
  "tokens": ["Repeat", ",", "while", {
    "id": "k"
  }, ">", "(", {
    "id": "len"
  }, "-", {
    "id": "actualDeleteCount"
  }, "+", {
    "id": "itemCount"
  }, ")", ","]
}, {
  "tokens": ["Perform", "?", "DeletePropertyOrThrow", "(", {
    "id": "O"
  }, ",", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "k"
  }, "-", "1", ")", ")", ")", "."]
}, {
  "tokens": ["Set", {
    "id": "k"
  }, "to", {
    "id": "k"
  }, "-", "1", "."]
}, {
  "tokens": ["Else", "if", {
    "id": "itemCount"
  }, ">", {
    "id": "actualDeleteCount"
  }, ",", "then"]
}, {
  "tokens": ["Set", {
    "id": "k"
  }, "to", "(", {
    "id": "len"
  }, "-", {
    "id": "actualDeleteCount"
  }, ")", "."]
}, {
  "tokens": ["Repeat", ",", "while", {
    "id": "k"
  }, ">", {
    "id": "actualStart"
  }, ","]
}, {
  "tokens": ["Let", {
    "id": "from"
  }, "be", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "k"
  }, "+", {
    "id": "actualDeleteCount"
  }, "-", "1", ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "to"
  }, "be", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "k"
  }, "+", {
    "id": "itemCount"
  }, "-", "1", ")", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "fromPresent"
  }, "be", "?", "HasProperty", "(", {
    "id": "O"
  }, ",", {
    "id": "from"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "fromPresent"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "fromValue"
  }, "be", "?", "Get", "(", {
    "id": "O"
  }, ",", {
    "id": "from"
  }, ")", "."]
}, {
  "tokens": ["Perform", "?", "Set", "(", {
    "id": "O"
  }, ",", {
    "id": "to"
  }, ",", {
    "id": "fromValue"
  }, ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Assert", ":", {
    "id": "fromPresent"
  }, "is", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["Perform", "?", "DeletePropertyOrThrow", "(", {
    "id": "O"
  }, ",", {
    "id": "to"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "k"
  }, "to", {
    "id": "k"
  }, "-", "1", "."]
}, {
  "tokens": ["Set", {
    "id": "k"
  }, "to", {
    "id": "actualStart"
  }, "."]
}, {
  "tokens": ["For", "each", "element", {
    "id": "E"
  }, "of", {
    "id": "items"
  }, ",", "do"]
}, {
  "tokens": ["Perform", "?", "Set", "(", {
    "id": "O"
  }, ",", "!", "ToString", "(", "ùîΩ", "(", {
    "id": "k"
  }, ")", ")", ",", {
    "id": "E"
  }, ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "k"
  }, "to", {
    "id": "k"
  }, "+", "1", "."]
}, {
  "tokens": ["Perform", "?", "Set", "(", {
    "id": "O"
  }, ",", {
    "value": "\"length\""
  }, ",", "ùîΩ", "(", {
    "id": "len"
  }, "-", {
    "id": "actualDeleteCount"
  }, "+", {
    "id": "itemCount"
  }, ")", ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Return", {
    "id": "A"
  }, "."]
}]