digraph {
  node2282 [shape=diamond, label=<<font color="black">(= kind CONST_base)</font>> color="black" fillcolor="white" style=filled]
  node2301 [shape=diamond, label=<<font color="black">(= kind CONST_base)</font>> color="black" fillcolor="white" style=filled]
  node2291 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let constructorEnv = __x4__</td></tr>
      <tr><td align="left">10:let envRec = constructorEnv.EnvironmentRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2300 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2292 [shape=cds, label=<<font color="black">11:app __x5__ = (OrdinaryCallEvaluateBody F argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node2293 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2298 [shape=cds, label=<<font color="black">14:app __x7__ = (Type result.Value)</font>> color="black" fillcolor="white" style=filled]
  node2279 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2305 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[? result]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2294 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] calleeContext)</font>> color="black" fillcolor="white" style=filled]
  node2297 [shape=diamond, label=<<font color="black">(= result.Type CONST_return)</font>> color="black" fillcolor="white" style=filled]
  node2280 [shape=cds, label=<<font color="black">1:app __x0__ = (Type newTarget)</font>> color="black" fillcolor="white" style=filled]
  node2295 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x6__ = (- GLOBAL_executionStack.length 1i)</td></tr>
      <tr><td align="left">(pop GLOBAL_executionStack __x6__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2306 [shape=cds, label=<<font color="black">18:app __x8__ = (envRec.GetThisBinding envRec)</font>> color="black" fillcolor="white" style=filled]
  node2281 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">2:let callerContext = GLOBAL_context</td></tr>
      <tr><td align="left">3:let kind = F.ConstructorKind</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2286 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let calleeContext = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2296 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2285 [shape=cds, label=<<font color="black">6:app __x2__ = (PrepareForOrdinaryCall F newTarget)</font>> color="black" fillcolor="white" style=filled]
  node2304 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2284 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let thisArgument = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2299 [shape=diamond, label=<<font color="black">(= __x7__ Object)</font>> color="black" fillcolor="white" style=filled]
  node2289 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2278 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2288 [shape=cds, label=<<font color="black">app __x3__ = (OrdinaryCallBindThis F calleeContext thisArgument)</font>> color="black" fillcolor="white" style=filled]
  node2303 [shape=diamond, label=<<font color="black">(! (= result.Value undefined))</font>> color="black" fillcolor="white" style=filled]
  node2283 [shape=cds, label=<<font color="black">5:app __x1__ = (OrdinaryCreateFromConstructor newTarget &quot;%Object.prototype%&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2290 [shape=cds, label=<<font color="black">9:access __x4__ = (calleeContext &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node2287 [shape=diamond, label=<<font color="black">(= kind CONST_base)</font>> color="black" fillcolor="white" style=filled]
  node2302 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return thisArgument</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2282 -> node2283 [label=<<font color="black">true</font>> color="black"]
  node2282 -> node2285 [label=<<font color="black">false</font>> color="black"]
  node2286 -> node2287 [ color="black"]
  node2299 -> node2300 [label=<<font color="black">true</font>> color="black"]
  node2299 -> node2301 [label=<<font color="black">false</font>> color="black"]
  node2302 -> node2303 [ color="black"]
  node2306 -> node2307 [ color="black"]
  node2297 -> node2298 [label=<<font color="black">true</font>> color="black"]
  node2297 -> node2305 [label=<<font color="black">false</font>> color="black"]
  node2288 -> node2289 [ color="black"]
  node2283 -> node2284 [ color="black"]
  node2284 -> node2285 [ color="black"]
  node2293 -> node2294 [ color="black"]
  node2305 -> node2306 [ color="black"]
  node2300 -> node2301 [ color="black"]
  node2296 -> node2297 [ color="black"]
  node2281 -> node2282 [ color="black"]
  node2307 -> node2279 [ color="black"]
  node2287 -> node2288 [label=<<font color="black">true</font>> color="black"]
  node2287 -> node2290 [label=<<font color="black">false</font>> color="black"]
  node2295 -> node2296 [ color="black"]
  node2304 -> node2306 [ color="black"]
  node2301 -> node2302 [label=<<font color="black">true</font>> color="black"]
  node2301 -> node2303 [label=<<font color="black">false</font>> color="black"]
  node2290 -> node2291 [ color="black"]
  node2280 -> node2281 [ color="black"]
  node2294 -> node2295 [label=<<font color="black">true</font>> color="black"]
  node2294 -> node2296 [label=<<font color="black">false</font>> color="black"]
  node2278 -> node2280 [ color="black"]
  node2285 -> node2286 [ color="black"]
  node2292 -> node2293 [ color="black"]
  node2303 -> node2304 [label=<<font color="black">true</font>> color="black"]
  node2303 -> node2306 [label=<<font color="black">false</font>> color="black"]
  node2298 -> node2299 [ color="black"]
  node2289 -> node2290 [ color="black"]
  node2291 -> node2292 [ color="black"]
}
