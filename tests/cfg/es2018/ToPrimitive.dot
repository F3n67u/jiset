digraph {
  node308 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let result = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node301 [shape=diamond, label=<<font color="black">(= PreferredType absent)</font>> color="black" fillcolor="white" style=filled]
  node316 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node312 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node307 [shape=cds, label=<<font color="black">7:app __x2__ = (Call exoticToPrim input (new [hint]))</font>> color="black" fillcolor="white" style=filled]
  node317 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return input</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node311 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node298 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node313 [shape=diamond, label=<<font color="black">(= hint &quot;default&quot;)</font>> color="black" fillcolor="white" style=filled]
  node303 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:??? &quot;Else if id:{PreferredType} is hint String , let id:{hint} be code:{\&quot;string\&quot;} .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;Else id:{PreferredType} is hint Number , let id:{hint} be code:{\&quot;number\&quot;} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node310 [shape=diamond, label=<<font color="black">(! (= __x3__ Object))</font>> color="black" fillcolor="white" style=filled]
  node314 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">hint = &quot;number&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node304 [shape=cds, label=<<font color="black">5:app __x1__ = (GetMethod input SYMBOL_toPrimitive)</font>> color="black" fillcolor="white" style=filled]
  node305 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let exoticToPrim = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node309 [shape=cds, label=<<font color="black">8:app __x3__ = (Type result)</font>> color="black" fillcolor="white" style=filled]
  node302 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let hint = &quot;default&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node297 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node306 [shape=diamond, label=<<font color="black">(! (= exoticToPrim undefined))</font>> color="black" fillcolor="white" style=filled]
  node299 [shape=cds, label=<<font color="black">1:app __x0__ = (Type input)</font>> color="black" fillcolor="white" style=filled]
  node300 [shape=diamond, label=<<font color="black">(= __x0__ Object)</font>> color="black" fillcolor="white" style=filled]
  node315 [shape=cds, label=<<font color="black">11:app __x4__ = (OrdinaryToPrimitive input hint)</font>> color="black" fillcolor="white" style=filled]
  node297 -> node299 [ color="black"]
  node315 -> node316 [ color="black"]
  node308 -> node309 [ color="black"]
  node310 -> node311 [label=<<font color="black">true</font>> color="black"]
  node310 -> node312 [label=<<font color="black">false</font>> color="black"]
  node301 -> node302 [label=<<font color="black">true</font>> color="black"]
  node301 -> node303 [label=<<font color="black">false</font>> color="black"]
  node306 -> node307 [label=<<font color="black">true</font>> color="black"]
  node306 -> node313 [label=<<font color="black">false</font>> color="black"]
  node312 -> node313 [ color="black"]
  node300 -> node301 [label=<<font color="black">true</font>> color="black"]
  node300 -> node317 [label=<<font color="black">false</font>> color="black"]
  node307 -> node308 [ color="black"]
  node316 -> node317 [ color="black"]
  node313 -> node314 [label=<<font color="black">true</font>> color="black"]
  node313 -> node315 [label=<<font color="black">false</font>> color="black"]
  node317 -> node298 [ color="black"]
  node311 -> node312 [ color="black"]
  node304 -> node305 [ color="black"]
  node302 -> node303 [ color="black"]
  node309 -> node310 [ color="black"]
  node305 -> node306 [ color="black"]
  node299 -> node300 [ color="black"]
  node314 -> node315 [ color="black"]
  node303 -> node304 [ color="black"]
}
