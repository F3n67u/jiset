{
  assert (= (typeof R) Object)
  assert (= (typeof S) String)
  app __x0__ = (Get R "exec")
  let exec = [? __x0__]
  app __x1__ = (IsCallable exec)
  if (= __x1__ true) {
    app __x2__ = (Call exec R (new [S]))
    let result = [? __x2__]
    if (! (|| (= (typeof result) Object) (= (typeof result) Null))) throw TypeError else {}
    return result
  } else {}
  if (= R.RegExpMatcher absent) throw TypeError else {}
  app __x3__ = (RegExpBuiltinExec R S)
  return [? __x3__]
}