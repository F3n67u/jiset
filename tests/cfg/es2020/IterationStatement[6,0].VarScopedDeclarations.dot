digraph {
  node7620 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let declarations = (new [ForBinding])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7625 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return declarations</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7623 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node7622 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let __x1__ = __x0__</td></tr>
      <tr><td align="left">1:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7618 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7621 [shape=cds, label=<<font color="black">1:access __x0__ = (Statement &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7619 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x3__ = __x1__[__x2__]</td></tr>
      <tr><td align="left">append __x3__ -&gt; declarations</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7620 -> node7621 [ color="black"]
  node7621 -> node7622 [ color="black"]
  node7625 -> node7619 [ color="black"]
  node7622 -> node7623 [ color="black"]
  node7623 -> node7624 [label=<<font color="black">true</font>> color="black"]
  node7623 -> node7625 [label=<<font color="black">false</font>> color="black"]
  node7618 -> node7620 [ color="black"]
  node7624 -> node7623 [ color="black"]
}
