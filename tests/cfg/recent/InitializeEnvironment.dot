digraph {
  node11024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = module.IndirectExportEntries</td></tr>
      <tr><td align="left">0:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11047 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let resolution = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11042 [shape=cds, label=<<font color="black">14:app __x8__ = (env.CreateImmutableBinding env in.LocalName true)</font>> color="black" fillcolor="white" style=filled]
  node11092 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">51:let fo = __x32__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11041 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let namespace = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11045 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:__x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11044 [shape=cds, label=<<font color="black">15:app __x9__ = (env.InitializeBinding env in.LocalName namespace)</font>> color="black" fillcolor="white" style=filled]
  node11071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:[! __x21__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11035 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node11050 [shape=diamond, label=<<font color="black">(= resolution.BindingName &quot;*namespace*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11043 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11090 [shape=diamond, label=<<font color="black">(|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))</font>> color="black" fillcolor="white" style=filled]
  node11080 [shape=cds, label=<<font color="black">45:access __x26__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11072 [shape=cds, label=<<font color="black">41:app __x22__ = (env.InitializeBinding env dn undefined)</font>> color="black" fillcolor="white" style=filled]
  node11029 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node11058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:__x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x17__ = (+ __x17__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11055 [shape=cds, label=<<font color="black">22:app __x13__ = (env.InitializeBinding env in.LocalName namespace)</font>> color="black" fillcolor="white" style=filled]
  node11068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x19__[__x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11025 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node11087 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">47:[! __x30__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11051 [shape=cds, label=<<font color="black">20:app __x11__ = (GetModuleNamespace resolution.Module)</font>> color="black" fillcolor="white" style=filled]
  node11040 [shape=cds, label=<<font color="black">13:app __x7__ = (GetModuleNamespace importedModule)</font>> color="black" fillcolor="white" style=filled]
  node11064 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x16__[__x17__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11083 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let dn = __x27__[__x28__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let in = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let d = __x24__[__x25__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11032 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let realm = module.Realm</td></tr>
      <tr><td align="left">6:assert (! (= realm undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11069 [shape=diamond, label=<<font color="black">(! (contains declaredVarNames dn))</font>> color="black" fillcolor="white" style=filled]
  node11037 [shape=cds, label=<<font color="black">10:app __x6__ = (HostResolveImportedModule module in.ModuleRequest)</font>> color="black" fillcolor="white" style=filled]
  node11074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x20__ = (+ __x20__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:__x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11096 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x25__ = (+ __x25__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11057 [shape=cds, label=<<font color="black">24:app __x14__ = (env.CreateImportBinding env in.LocalName resolution.Module resolution.BindingName)</font>> color="black" fillcolor="white" style=filled]
  node11089 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">49:[! __x31__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11088 [shape=cds, label=<<font color="black">49:app __x31__ = (env.CreateMutableBinding env dn false)</font>> color="black" fillcolor="white" style=filled]
  node11046 [shape=cds, label=<<font color="black">17:app __x10__ = (importedModule.ResolveExport importedModule in.ImportName)</font>> color="black" fillcolor="white" style=filled]
  node11097 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">53:??? &quot;Remove id:{moduleContext} from the execution context stack .&quot;</td></tr>
      <tr><td align="left">54:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11026 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11023 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11052 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let namespace = [? __x11__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11061 [shape=cds, label=<<font color="black">35:access __x15__ = (code &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11093 [shape=cds, label=<<font color="black">52:app __x33__ = (env.InitializeBinding env dn fo)</font>> color="black" fillcolor="white" style=filled]
  node11031 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= (typeof resolution) &quot;ResolvedBindingRecord&quot;)</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11084 [shape=cds, label=<<font color="black">48:access __x29__ = (d &quot;IsConstantDeclaration&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11065 [shape=cds, label=<<font color="black">38:access __x18__ = (d &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11033 [shape=cds, label=<<font color="black">7:app __x3__ = (NewModuleEnvironment realm.GlobalEnv)</font>> color="black" fillcolor="white" style=filled]
  node11063 [shape=diamond, label=<<font color="black">(&lt; __x17__ __x16__.length)</font>> color="black" fillcolor="white" style=filled]
  node11070 [shape=cds, label=<<font color="black">40:app __x21__ = (env.CreateMutableBinding env dn false)</font>> color="black" fillcolor="white" style=filled]
  node11060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let moduleContext = (new ExecutionContext(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">26:moduleContext.Function = null</td></tr>
      <tr><td align="left">27:assert (! (= module.Realm undefined))</td></tr>
      <tr><td align="left">28:moduleContext.Realm = module.Realm</td></tr>
      <tr><td align="left">29:moduleContext.ScriptOrModule = module</td></tr>
      <tr><td align="left">30:moduleContext.VariableEnvironment = module.Environment</td></tr>
      <tr><td align="left">31:moduleContext.LexicalEnvironment = module.Environment</td></tr>
      <tr><td align="left">32:module.Context = moduleContext</td></tr>
      <tr><td align="left">33:append moduleContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">33:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">34:let code = module.ECMAScriptCode</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11085 [shape=diamond, label=<<font color="black">(= __x29__ true)</font>> color="black" fillcolor="white" style=filled]
  node11053 [shape=cds, label=<<font color="black">21:app __x12__ = (env.CreateImmutableBinding env in.LocalName true)</font>> color="black" fillcolor="white" style=filled]
  node11038 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let importedModule = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11078 [shape=diamond, label=<<font color="black">(&lt; __x25__ __x24__.length)</font>> color="black" fillcolor="white" style=filled]
  node11073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">41:__x22__</td></tr>
      <tr><td align="left">42:append dn -&gt; declaredVarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x28__ = (+ __x28__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let varDeclarations = __x15__</td></tr>
      <tr><td align="left">36:let declaredVarNames = (new [])</td></tr>
      <tr><td align="left">37:let __x16__ = varDeclarations</td></tr>
      <tr><td align="left">37:let __x17__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11077 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:let lexDeclarations = __x23__</td></tr>
      <tr><td align="left">44:let __x24__ = lexDeclarations</td></tr>
      <tr><td align="left">44:let __x25__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11030 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11066 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:let __x19__ = __x18__</td></tr>
      <tr><td align="left">38:let __x20__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11027 [shape=cds, label=<<font color="black">1:app __x2__ = (module.ResolveExport module e.ExportName)</font>> color="black" fillcolor="white" style=filled]
  node11022 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11081 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">45:let __x27__ = __x26__</td></tr>
      <tr><td align="left">45:let __x28__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11034 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let env = __x3__</td></tr>
      <tr><td align="left">8:module.Environment = env</td></tr>
      <tr><td align="left">9:let __x4__ = module.ImportEntries</td></tr>
      <tr><td align="left">9:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11049 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11094 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">52:__x33__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:[! __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11059 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11076 [shape=cds, label=<<font color="black">43:access __x23__ = (code &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11039 [shape=diamond, label=<<font color="black">(= in.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11091 [shape=cds, label=<<font color="black">51:access __x32__ = (d &quot;InstantiateFunctionObject&quot; env)</font>> color="black" fillcolor="white" style=filled]
  node11082 [shape=diamond, label=<<font color="black">(&lt; __x28__ __x27__.length)</font>> color="black" fillcolor="white" style=filled]
  node11067 [shape=diamond, label=<<font color="black">(&lt; __x20__ __x19__.length)</font>> color="black" fillcolor="white" style=filled]
  node11028 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let resolution = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11086 [shape=cds, label=<<font color="black">47:app __x30__ = (env.CreateImmutableBinding env dn true)</font>> color="black" fillcolor="white" style=filled]
  node11048 [shape=diamond, label=<<font color="black">(|| (= resolution null) (= resolution &quot;ambiguous&quot;))</font>> color="black" fillcolor="white" style=filled]
  node11096 -> node11078 [ color="black"]
  node11082 -> node11083 [label=<<font color="black">true</font>> color="black"]
  node11082 -> node11096 [label=<<font color="black">false</font>> color="black"]
  node11049 -> node11050 [ color="black"]
  node11032 -> node11033 [ color="black"]
  node11046 -> node11047 [ color="black"]
  node11085 -> node11086 [label=<<font color="black">true</font>> color="black"]
  node11085 -> node11088 [label=<<font color="black">false</font>> color="black"]
  node11095 -> node11082 [ color="black"]
  node11025 -> node11026 [label=<<font color="black">true</font>> color="black"]
  node11025 -> node11032 [label=<<font color="black">false</font>> color="black"]
  node11073 -> node11074 [ color="black"]
  node11094 -> node11095 [ color="black"]
  node11092 -> node11093 [ color="black"]
  node11087 -> node11090 [ color="black"]
  node11054 -> node11055 [ color="black"]
  node11080 -> node11081 [ color="black"]
  node11022 -> node11024 [ color="black"]
  node11086 -> node11087 [ color="black"]
  node11044 -> node11045 [ color="black"]
  node11072 -> node11073 [ color="black"]
  node11059 -> node11035 [ color="black"]
  node11048 -> node11049 [label=<<font color="black">true</font>> color="black"]
  node11048 -> node11050 [label=<<font color="black">false</font>> color="black"]
  node11062 -> node11063 [ color="black"]
  node11045 -> node11059 [ color="black"]
  node11034 -> node11035 [ color="black"]
  node11079 -> node11080 [ color="black"]
  node11028 -> node11029 [ color="black"]
  node11066 -> node11067 [ color="black"]
  node11031 -> node11025 [ color="black"]
  node11039 -> node11040 [label=<<font color="black">true</font>> color="black"]
  node11039 -> node11046 [label=<<font color="black">false</font>> color="black"]
  node11038 -> node11039 [ color="black"]
  node11088 -> node11089 [ color="black"]
  node11093 -> node11094 [ color="black"]
  node11081 -> node11082 [ color="black"]
  node11035 -> node11036 [label=<<font color="black">true</font>> color="black"]
  node11035 -> node11060 [label=<<font color="black">false</font>> color="black"]
  node11036 -> node11037 [ color="black"]
  node11041 -> node11042 [ color="black"]
  node11029 -> node11030 [label=<<font color="black">true</font>> color="black"]
  node11029 -> node11031 [label=<<font color="black">false</font>> color="black"]
  node11064 -> node11065 [ color="black"]
  node11074 -> node11067 [ color="black"]
  node11024 -> node11025 [ color="black"]
  node11056 -> node11059 [ color="black"]
  node11078 -> node11079 [label=<<font color="black">true</font>> color="black"]
  node11078 -> node11097 [label=<<font color="black">false</font>> color="black"]
  node11090 -> node11091 [label=<<font color="black">true</font>> color="black"]
  node11090 -> node11095 [label=<<font color="black">false</font>> color="black"]
  node11083 -> node11084 [ color="black"]
  node11061 -> node11062 [ color="black"]
  node11065 -> node11066 [ color="black"]
  node11075 -> node11063 [ color="black"]
  node11052 -> node11053 [ color="black"]
  node11076 -> node11077 [ color="black"]
  node11055 -> node11056 [ color="black"]
  node11047 -> node11048 [ color="black"]
  node11060 -> node11061 [ color="black"]
  node11033 -> node11034 [ color="black"]
  node11042 -> node11043 [ color="black"]
  node11084 -> node11085 [ color="black"]
  node11063 -> node11064 [label=<<font color="black">true</font>> color="black"]
  node11063 -> node11076 [label=<<font color="black">false</font>> color="black"]
  node11050 -> node11051 [label=<<font color="black">true</font>> color="black"]
  node11050 -> node11057 [label=<<font color="black">false</font>> color="black"]
  node11097 -> node11023 [ color="black"]
  node11058 -> node11059 [ color="black"]
  node11057 -> node11058 [ color="black"]
  node11068 -> node11069 [ color="black"]
  node11027 -> node11028 [ color="black"]
  node11030 -> node11031 [ color="black"]
  node11043 -> node11044 [ color="black"]
  node11067 -> node11068 [label=<<font color="black">true</font>> color="black"]
  node11067 -> node11075 [label=<<font color="black">false</font>> color="black"]
  node11051 -> node11052 [ color="black"]
  node11069 -> node11070 [label=<<font color="black">true</font>> color="black"]
  node11069 -> node11074 [label=<<font color="black">false</font>> color="black"]
  node11089 -> node11090 [ color="black"]
  node11053 -> node11054 [ color="black"]
  node11026 -> node11027 [ color="black"]
  node11040 -> node11041 [ color="black"]
  node11037 -> node11038 [ color="black"]
  node11071 -> node11072 [ color="black"]
  node11091 -> node11092 [ color="black"]
  node11077 -> node11078 [ color="black"]
  node11070 -> node11071 [ color="black"]
}
