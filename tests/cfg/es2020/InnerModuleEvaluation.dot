digraph {
  node10976 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10959 [shape=diamond, label=<<font color="black">(= module.Status CONST_evaluated)</font>> color="black" fillcolor="white" style=filled]
  node10955 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10972 [shape=diamond, label=<<font color="black">(= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10954 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10975 [shape=cds, label=<<font color="black">21:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node10958 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10983 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">29:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">30:assert (= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</td></tr>
      <tr><td align="left">31:requiredModule.Status = CONST_evaluated</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10963 [shape=diamond, label=<<font color="black">(= module.Status CONST_evaluating)</font>> color="black" fillcolor="white" style=filled]
  node10974 [shape=diamond, label=<<font color="black">(= requiredModule.Status CONST_evaluating)</font>> color="black" fillcolor="white" style=filled]
  node10980 [shape=diamond, label=<<font color="black">(= module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node10969 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let requiredModule = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10960 [shape=diamond, label=<<font color="black">(= module.EvaluationError undefined)</font>> color="black" fillcolor="white" style=filled]
  node10966 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10982 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node10967 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10965 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= module.Status CONST_linked)</td></tr>
      <tr><td align="left">8:module.Status = CONST_evaluating</td></tr>
      <tr><td align="left">9:module.DFSIndex = index</td></tr>
      <tr><td align="left">10:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">11:index = (+ index 1i)</td></tr>
      <tr><td align="left">12:append module -&gt; stack</td></tr>
      <tr><td align="left">13:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">13:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10977 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10962 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return module.EvaluationError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10986 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10968 [shape=cds, label=<<font color="black">14:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node10961 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10978 [shape=cds, label=<<font color="black">22:app __x6__ = (module.ExecuteModule module)</font>> color="black" fillcolor="white" style=filled]
  node10971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:index = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10957 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Evaluate module)</font>> color="black" fillcolor="white" style=filled]
  node10985 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10970 [shape=cds, label=<<font color="black">16:app __x4__ = (InnerModuleEvaluation requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node10984 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node10979 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:[? __x6__]</td></tr>
      <tr><td align="left">24:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10964 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10973 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:assert (|| (= requiredModule.Status CONST_evaluating) (= requiredModule.Status CONST_evaluated))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10956 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;CyclicModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10981 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10961 -> node10963 [ color="black"]
  node10958 -> node10959 [ color="black"]
  node10962 -> node10963 [ color="black"]
  node10979 -> node10980 [ color="black"]
  node10972 -> node10973 [label=<<font color="black">true</font>> color="black"]
  node10972 -> node10977 [label=<<font color="black">false</font>> color="black"]
  node10980 -> node10981 [label=<<font color="black">true</font>> color="black"]
  node10980 -> node10986 [label=<<font color="black">false</font>> color="black"]
  node10983 -> node10984 [ color="black"]
  node10969 -> node10970 [ color="black"]
  node10968 -> node10969 [ color="black"]
  node10984 -> node10985 [label=<<font color="black">true</font>> color="black"]
  node10984 -> node10982 [label=<<font color="black">false</font>> color="black"]
  node10982 -> node10983 [label=<<font color="black">true</font>> color="black"]
  node10982 -> node10986 [label=<<font color="black">false</font>> color="black"]
  node10964 -> node10965 [ color="black"]
  node10960 -> node10961 [label=<<font color="black">true</font>> color="black"]
  node10960 -> node10962 [label=<<font color="black">false</font>> color="black"]
  node10975 -> node10976 [ color="black"]
  node10977 -> node10966 [ color="black"]
  node10957 -> node10958 [ color="black"]
  node10966 -> node10967 [label=<<font color="black">true</font>> color="black"]
  node10966 -> node10978 [label=<<font color="black">false</font>> color="black"]
  node10965 -> node10966 [ color="black"]
  node10973 -> node10974 [ color="black"]
  node10981 -> node10982 [ color="black"]
  node10970 -> node10971 [ color="black"]
  node10954 -> node10956 [ color="black"]
  node10967 -> node10968 [ color="black"]
  node10971 -> node10972 [ color="black"]
  node10974 -> node10975 [label=<<font color="black">true</font>> color="black"]
  node10974 -> node10977 [label=<<font color="black">false</font>> color="black"]
  node10976 -> node10977 [ color="black"]
  node10978 -> node10979 [ color="black"]
  node10986 -> node10955 [ color="black"]
  node10956 -> node10957 [label=<<font color="black">true</font>> color="black"]
  node10956 -> node10959 [label=<<font color="black">false</font>> color="black"]
  node10985 -> node10982 [ color="black"]
  node10959 -> node10960 [label=<<font color="black">true</font>> color="black"]
  node10959 -> node10963 [label=<<font color="black">false</font>> color="black"]
  node10963 -> node10964 [label=<<font color="black">true</font>> color="black"]
  node10963 -> node10965 [label=<<font color="black">false</font>> color="black"]
}
