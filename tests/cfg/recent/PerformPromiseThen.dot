digraph {
  node19062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:__x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19069 [shape=cds, label=<<font color="black">25:app __x9__ = (HostEnqueuePromiseJob rejectJob.Job rejectJob.Realm)</font>> color="black" fillcolor="white" style=filled]
  node19063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:assert (= promise.PromiseState CONST_rejected)</td></tr>
      <tr><td align="left">22:let reason = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:append fulfillReaction -&gt; promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">15:append rejectReaction -&gt; promise.PromiseRejectReactions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19043 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">resultCapability = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let value = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:__x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19049 [shape=cds, label=<<font color="black">9:app __x3__ = (IsCallable onRejected)</font>> color="black" fillcolor="white" style=filled]
  node19066 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19038 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:promise.PromiseIsHandled = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19039 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let fulfillJob = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19041 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let rejectJob = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let onRejectedJobCallback = CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19072 [shape=diamond, label=<<font color="black">(= resultCapability undefined)</font>> color="black" fillcolor="white" style=filled]
  node19044 [shape=cds, label=<<font color="black">5:app __x1__ = (IsCallable onFulfilled)</font>> color="black" fillcolor="white" style=filled]
  node19059 [shape=cds, label=<<font color="black">18:app __x5__ = (NewPromiseReactionJob fulfillReaction value)</font>> color="black" fillcolor="white" style=filled]
  node19052 [shape=cds, label=<<font color="black">10:app __x4__ = (HostMakeJobCallback onRejected)</font>> color="black" fillcolor="white" style=filled]
  node19065 [shape=cds, label=<<font color="black">app __x7__ = (HostPromiseRejectionTracker promise &quot;handle&quot;)</font>> color="black" fillcolor="white" style=filled]
  node19048 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let onFulfilledJobCallback = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19053 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let onRejectedJobCallback = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19042 [shape=diamond, label=<<font color="black">(= resultCapability absent)</font>> color="black" fillcolor="white" style=filled]
  node19057 [shape=diamond, label=<<font color="black">(= promise.PromiseState CONST_fulfilled)</font>> color="black" fillcolor="white" style=filled]
  node19064 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node19054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let fulfillReaction = (new PromiseReaction(&quot;Capability&quot; -&gt; resultCapability, &quot;Type&quot; -&gt; CONST_Fulfill, &quot;Handler&quot; -&gt; onFulfilledJobCallback))</td></tr>
      <tr><td align="left">12:let rejectReaction = (new PromiseReaction(&quot;Capability&quot; -&gt; resultCapability, &quot;Type&quot; -&gt; CONST_Reject, &quot;Handler&quot; -&gt; onRejectedJobCallback))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19050 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node19067 [shape=cds, label=<<font color="black">24:app __x8__ = (NewPromiseReactionJob rejectReaction reason)</font>> color="black" fillcolor="white" style=filled]
  node19074 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19061 [shape=cds, label=<<font color="black">19:app __x6__ = (HostEnqueuePromiseJob fulfillJob.Job fulfillJob.Realm)</font>> color="black" fillcolor="white" style=filled]
  node19046 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let onFulfilledJobCallback = CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19055 [shape=diamond, label=<<font color="black">(= promise.PromiseState CONST_pending)</font>> color="black" fillcolor="white" style=filled]
  node19040 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPromise promise)</font>> color="black" fillcolor="white" style=filled]
  node19047 [shape=cds, label=<<font color="black">6:app __x2__ = (HostMakeJobCallback onFulfilled)</font>> color="black" fillcolor="white" style=filled]
  node19045 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node19073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19056 -> node19071 [ color="black"]
  node19069 -> node19070 [ color="black"]
  node19040 -> node19041 [ color="black"]
  node19044 -> node19045 [ color="black"]
  node19063 -> node19064 [ color="black"]
  node19066 -> node19067 [ color="black"]
  node19070 -> node19071 [ color="black"]
  node19071 -> node19072 [ color="black"]
  node19050 -> node19051 [label=<<font color="black">true</font>> color="black"]
  node19050 -> node19052 [label=<<font color="black">false</font>> color="black"]
  node19048 -> node19049 [ color="black"]
  node19054 -> node19055 [ color="black"]
  node19042 -> node19043 [label=<<font color="black">true</font>> color="black"]
  node19042 -> node19044 [label=<<font color="black">false</font>> color="black"]
  node19058 -> node19059 [ color="black"]
  node19038 -> node19040 [ color="black"]
  node19053 -> node19054 [ color="black"]
  node19068 -> node19069 [ color="black"]
  node19057 -> node19058 [label=<<font color="black">true</font>> color="black"]
  node19057 -> node19063 [label=<<font color="black">false</font>> color="black"]
  node19059 -> node19060 [ color="black"]
  node19046 -> node19049 [ color="black"]
  node19067 -> node19068 [ color="black"]
  node19043 -> node19044 [ color="black"]
  node19049 -> node19050 [ color="black"]
  node19072 -> node19073 [label=<<font color="black">true</font>> color="black"]
  node19072 -> node19074 [label=<<font color="black">false</font>> color="black"]
  node19047 -> node19048 [ color="black"]
  node19064 -> node19065 [label=<<font color="black">true</font>> color="black"]
  node19064 -> node19067 [label=<<font color="black">false</font>> color="black"]
  node19062 -> node19071 [ color="black"]
  node19051 -> node19054 [ color="black"]
  node19041 -> node19042 [ color="black"]
  node19052 -> node19053 [ color="black"]
  node19045 -> node19046 [label=<<font color="black">true</font>> color="black"]
  node19045 -> node19047 [label=<<font color="black">false</font>> color="black"]
  node19074 -> node19039 [ color="black"]
  node19061 -> node19062 [ color="black"]
  node19060 -> node19061 [ color="black"]
  node19073 -> node19039 [ color="black"]
  node19055 -> node19056 [label=<<font color="black">true</font>> color="black"]
  node19055 -> node19057 [label=<<font color="black">false</font>> color="black"]
  node19065 -> node19066 [ color="black"]
}
