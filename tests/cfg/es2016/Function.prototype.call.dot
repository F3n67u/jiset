digraph {
  node10987 [shape=cds, label=<<font color="black">3:app __x1__ = (PrepareForTailCall )</font>> color="black" fillcolor="white" style=filled]
  node10982 [shape=cds, label=<<font color="black">app args = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node10990 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10986 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let argList = (new [])</td></tr>
      <tr><td align="left">2:??? &quot;If this method was called with more than one argument , then in left to right order , starting with the second argument , append each argument as the last element of id:{argList} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10983 [shape=cds, label=<<font color="black">0:app __x0__ = (IsCallable func)</font>> color="black" fillcolor="white" style=filled]
  node10989 [shape=cds, label=<<font color="black">4:app __x2__ = (Call func thisArg argList)</font>> color="black" fillcolor="white" style=filled]
  node10980 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10985 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10981 [shape=cds, label=<<font color="black">app thisArg = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10988 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10984 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node10979 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10981 -> node10982 [ color="black"]
  node10986 -> node10987 [ color="black"]
  node10984 -> node10985 [label=<<font color="black">true</font>> color="black"]
  node10984 -> node10986 [label=<<font color="black">false</font>> color="black"]
  node10983 -> node10984 [ color="black"]
  node10987 -> node10988 [ color="black"]
  node10982 -> node10983 [ color="black"]
  node10990 -> node10980 [ color="black"]
  node10988 -> node10989 [ color="black"]
  node10989 -> node10990 [ color="black"]
  node10985 -> node10986 [ color="black"]
  node10979 -> node10981 [ color="black"]
}
