{"kind":"Language","params":[],"steps":[{"tokens":["If","the","function","code","for",{"nt":"AsyncFunctionExpression"},"is","strict","mode","code",",","let",{"id":"strict"},"be",{"value":"true"},".","Otherwise","let",{"id":"strict"},"be",{"value":"false"},"."]},{"tokens":["Let",{"id":"scope"},"be","the","LexicalEnvironment","of","the","running","execution","context","."]},{"tokens":["Let",{"id":"closure"},"be","!","AsyncFunctionCreate","(",{"const":"Normal"},",",{"nt":"FormalParameters"},",",{"nt":"AsyncFunctionBody"},",",{"id":"scope"},",",{"id":"strict"},")","."]},{"tokens":["Return",{"id":"closure"},"."]}],"length":0,"filename":"es2000/algorithm/14.6.13RuntimeSemantics:EvaluationAsyncFunctionExpression:asyncnoLineTerminatorherefunction(FormalParameters)AsyncFunctionBody0.json"}