digraph {
  node1354 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return a value of type Reference whose base value is value:{undefined} , whose referenced name is id:{name} , and whose strict reference flag is id:{strict} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1359 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return a value of type Reference whose base value is id:{envRec} , whose referenced name is id:{name} , and whose strict reference flag is id:{strict} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1362 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1351 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let envRec = lex.EnvironmentRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1360 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let outer = lex.Outer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1361 [shape=cds, label=<<font color="black">8:app __x1__ = (GetIdentifierReference outer name strict)</font>> color="black" fillcolor="white" style=filled]
  node1356 [shape=cds, label=<<font color="black">3:app __x0__ = (envRec.HasBinding envRec name)</font>> color="black" fillcolor="white" style=filled]
  node1358 [shape=diamond, label=<<font color="black">(= exists true)</font>> color="black" fillcolor="white" style=filled]
  node1353 [shape=diamond, label=<<font color="black">(= lex null)</font>> color="black" fillcolor="white" style=filled]
  node1352 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1357 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let exists = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1354 -> node1355 [ color="black"]
  node1361 -> node1362 [ color="black"]
  node1362 -> node1352 [ color="black"]
  node1353 -> node1354 [label=<<font color="black">true</font>> color="black"]
  node1353 -> node1355 [label=<<font color="black">false</font>> color="black"]
  node1351 -> node1353 [ color="black"]
  node1358 -> node1359 [label=<<font color="black">true</font>> color="black"]
  node1358 -> node1360 [label=<<font color="black">false</font>> color="black"]
  node1356 -> node1357 [ color="black"]
  node1359 -> node1352 [ color="black"]
  node1355 -> node1356 [ color="black"]
  node1357 -> node1358 [ color="black"]
  node1360 -> node1361 [ color="black"]
}
