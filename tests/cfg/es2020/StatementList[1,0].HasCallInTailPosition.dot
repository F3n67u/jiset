digraph {
  node10121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10117 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10116 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10120 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white" style=filled]
  node10122 [shape=cds, label=<<font color="black">2:access __x1__ = (StatementListItem &quot;HasCallInTailPosition&quot; call)</font>> color="black" fillcolor="white" style=filled]
  node10119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let has = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10123 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10118 [shape=cds, label=<<font color="black">0:access __x0__ = (StatementList &quot;HasCallInTailPosition&quot; call)</font>> color="black" fillcolor="white" style=filled]
  node10116 -> node10118 [ color="black"]
  node10123 -> node10117 [ color="black"]
  node10118 -> node10119 [ color="black"]
  node10119 -> node10120 [ color="black"]
  node10121 -> node10122 [ color="black"]
  node10120 -> node10121 [label=<<font color="black">true</font>> color="black"]
  node10120 -> node10122 [label=<<font color="black">false</font>> color="black"]
  node10122 -> node10123 [ color="black"]
}
