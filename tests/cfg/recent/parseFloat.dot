digraph {
  node11763 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:??? &quot;If the first code unit of id:{trimmedString} is the code unit 0x002D ( HYPHEN - MINUS ) , return value:{-0} .&quot;</td></tr>
      <tr><td align="left">7:return 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11756 [shape=cds, label=<<font color="black">0:app __x0__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node11760 [shape=cds, label=<<font color="black">4:access __x2__ = (numberString &quot;MV&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11762 [shape=diamond, label=<<font color="black">(== mathFloat 0i)</font>> color="black" fillcolor="white" style=filled]
  node11757 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let inputString = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11761 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let mathFloat = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11758 [shape=cds, label=<<font color="black">1:app __x1__ = (TrimString inputString CONST_start)</font>> color="black" fillcolor="white" style=filled]
  node11753 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11755 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11759 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let trimmedString = [! __x1__]</td></tr>
      <tr><td align="left">2:??? &quot;If neither id:{trimmedString} nor any prefix of id:{trimmedString} satisfies the syntax of a nt:{StrDecimalLiteral} ( see link:{unhandled: sec-tonumber-applied-to-the-string-type} ) , return value:{NaN} .&quot;</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{numberString} be the longest prefix of id:{trimmedString} , which might be id:{trimmedString} itself , that satisfies the syntax of a nt:{StrDecimalLiteral} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11764 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return mathFloat</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11754 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11761 -> node11762 [ color="black"]
  node11763 -> node11764 [ color="black"]
  node11760 -> node11761 [ color="black"]
  node11753 -> node11755 [ color="black"]
  node11762 -> node11763 [label=<<font color="black">true</font>> color="black"]
  node11762 -> node11764 [label=<<font color="black">false</font>> color="black"]
  node11759 -> node11760 [ color="black"]
  node11757 -> node11758 [ color="black"]
  node11756 -> node11757 [ color="black"]
  node11755 -> node11756 [ color="black"]
  node11758 -> node11759 [ color="black"]
  node11764 -> node11754 [ color="black"]
}
