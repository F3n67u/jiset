digraph {
  node17437 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17449 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node17453 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17442 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17440 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node17445 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17462 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let nextPromise = [? __x6__]</td></tr>
      <tr><td align="left">21:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.all-resolve-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17450 [shape=cds, label=<<font color="black">13:app __x2__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node17439 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17444 [shape=diamond, label=<<font color="black">__x1__</font>> color="black" fillcolor="white" style=filled]
  node17435 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17455 [shape=cds, label=<<font color="black">16:app __x4__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node17447 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node17443 [shape=cds, label=<<font color="black">7:app __x1__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node17446 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17463 [shape=cds, label=<<font color="black">22:app __x7__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17466 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:[? __x8__]</td></tr>
      <tr><td align="left">30:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17459 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17454 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17436 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17458 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node17451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let valuesArray = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17448 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17461 [shape=cds, label=<<font color="black">20:app __x6__ = (Invoke constructor &quot;resolve&quot; (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node17452 [shape=cds, label=<<font color="black">14:app __x3__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node17438 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17457 [shape=cds, label=<<font color="black">17:app __x5__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node17464 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let resolveElement = __x7__</td></tr>
      <tr><td align="left">23:resolveElement.AlreadyCalled = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">24:resolveElement.Index = index</td></tr>
      <tr><td align="left">25:resolveElement.Values = values</td></tr>
      <tr><td align="left">26:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">27:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">28:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17434 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17460 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? nextValue]</td></tr>
      <tr><td align="left">19:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17465 [shape=cds, label=<<font color="black">29:app __x8__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node17441 [shape=cds, label=<<font color="black">6:app __x0__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node17456 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextValue = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17456 -> node17457 [ color="black"]
  node17460 -> node17461 [ color="black"]
  node17455 -> node17456 [ color="black"]
  node17446 -> node17447 [ color="black"]
  node17450 -> node17451 [ color="black"]
  node17457 -> node17458 [ color="black"]
  node17463 -> node17464 [ color="black"]
  node17452 -> node17453 [ color="black"]
  node17462 -> node17463 [ color="black"]
  node17441 -> node17442 [ color="black"]
  node17439 -> node17440 [ color="black"]
  node17451 -> node17452 [ color="black"]
  node17453 -> node17454 [ color="black"]
  node17443 -> node17444 [ color="black"]
  node17448 -> node17449 [ color="black"]
  node17447 -> node17448 [label=<<font color="black">true</font>> color="black"]
  node17447 -> node17455 [label=<<font color="black">false</font>> color="black"]
  node17436 -> node17437 [ color="black"]
  node17464 -> node17465 [ color="black"]
  node17445 -> node17446 [ color="black"]
  node17438 -> node17439 [ color="black"]
  node17466 -> node17440 [ color="black"]
  node17459 -> node17460 [ color="black"]
  node17442 -> node17443 [ color="black"]
  node17434 -> node17436 [ color="black"]
  node17449 -> node17450 [label=<<font color="black">true</font>> color="black"]
  node17449 -> node17454 [label=<<font color="black">false</font>> color="black"]
  node17444 -> node17445 [label=<<font color="black">true</font>> color="black"]
  node17444 -> node17446 [label=<<font color="black">false</font>> color="black"]
  node17458 -> node17459 [label=<<font color="black">true</font>> color="black"]
  node17458 -> node17460 [label=<<font color="black">false</font>> color="black"]
  node17465 -> node17466 [ color="black"]
  node17461 -> node17462 [ color="black"]
  node17437 -> node17438 [ color="black"]
  node17440 -> node17441 [label=<<font color="black">true</font>> color="black"]
  node17440 -> node17435 [label=<<font color="black">false</font>> color="black"]
  node17454 -> node17455 [ color="black"]
}
