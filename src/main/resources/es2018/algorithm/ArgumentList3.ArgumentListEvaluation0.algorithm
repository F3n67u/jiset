<algorithm>
  <param>ArgumentList</param>
  <param>AssignmentExpression</param>
  <step-list>
    <step>Let <id>precedingArgs</id> be ArgumentListEvaluation of ArgumentList .</step>
    <step>ReturnIfAbrupt ( <id>precedingArgs</id> ).</step>
    <step>Let <id>spreadRef</id> be the result of evaluating AssignmentExpression .</step>
    <step>Let <id>iteratorRecord</id> be ? GetIterator (? GetValue ( <id>spreadRef</id> )).</step>
    <step>Repeat,     <step-list>
      <step>Let <id>next</id> be ? IteratorStep ( <id>iteratorRecord</id> ).</step>
      <step>If <id>next</id> is <value>false</value> , return <id>precedingArgs</id> .</step>
      <step>Let <id>nextArg</id> be ? IteratorValue ( <id>next</id> ).</step>
      <step>Append <id>nextArg</id> as the last element of <id>precedingArgs</id> .</step>
    </step-list></step>
  </step-list>
</algorithm>