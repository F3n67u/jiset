digraph {
  node6355 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6350 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6349 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6353 [shape=cds, label=<<font color="black">access __x0__ = (LabelledStatement &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6352 [shape=cds, label=<<font color="black">access LabelledStatement = (Statement &quot;LabelledStatement&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6354 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6351 [shape=diamond, label=<<font color="black">(is-instance-of Statement Statement10)</font>> color="black" fillcolor="white" style=filled]
  node6352 -> node6353 [ color="black"]
  node6355 -> node6350 [ color="black"]
  node6354 -> node6355 [ color="black"]
  node6351 -> node6352 [label=<<font color="black">true</font>> color="black"]
  node6351 -> node6355 [label=<<font color="black">false</font>> color="black"]
  node6349 -> node6351 [ color="black"]
  node6353 -> node6354 [ color="black"]
}
