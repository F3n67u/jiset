{
  let O = this
  if (! (= (typeof O) Object)) throw TypeError else {}
  ??? "If id:{O} does not have all of the internal slots of a Set Iterator Instance ( 23 . 2 . 5 . 3 ) , throw a value:{TypeError} exception ."
  let s = O.IteratedSet
  let index = O.SetNextIndex
  let itemKind = O.SetIterationKind
  if (= s undefined) {
    app __x0__ = (CreateIterResultObject undefined true)
    return __x0__
  } else {}
  assert (! (= s.SetData absent))
  let entries = s.SetData
  let numEntries = entries.length
  while (< index numEntries) {
    let e = entries[index]
    index = (+ index 1i)
    O.SetNextIndex = index
    if (! (= e CONST_empty)) {
      if (= itemKind CONST_keyPLUSvalue) {
        app __x1__ = (CreateArrayFromList (new [e, e]))
        app __x2__ = (CreateIterResultObject __x1__ false)
        return __x2__
      } else {}
      assert (= itemKind CONST_value)
      app __x3__ = (CreateIterResultObject e false)
      return __x3__
    } else {}
  }
  O.IteratedSet = undefined
  app __x4__ = (CreateIterResultObject undefined true)
  return __x4__
}