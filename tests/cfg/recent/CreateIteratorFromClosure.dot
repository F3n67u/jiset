digraph {
  node19246 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let internalSlotsList = (new [&quot;GeneratorState&quot;, &quot;GeneratorContext&quot;, &quot;GeneratorBrand&quot;])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19250 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x1__]</td></tr>
      <tr><td align="left">6:return generator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19245 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19249 [shape=cds, label=<<font color="black">5:app __x1__ = (GeneratorStart generator closure)</font>> color="black" fillcolor="white" style=filled]
  node19244 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19248 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let generator = [! __x0__]</td></tr>
      <tr><td align="left">3:generator.GeneratorBrand = generatorBrand</td></tr>
      <tr><td align="left">4:generator.GeneratorState = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19247 [shape=cds, label=<<font color="black">2:app __x0__ = (OrdinaryObjectCreate generatorPrototype internalSlotsList)</font>> color="black" fillcolor="white" style=filled]
  node19246 -> node19247 [ color="black"]
  node19250 -> node19245 [ color="black"]
  node19247 -> node19248 [ color="black"]
  node19244 -> node19246 [ color="black"]
  node19249 -> node19250 [ color="black"]
  node19248 -> node19249 [ color="black"]
}
