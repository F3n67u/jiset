digraph {
  node17473 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node17475 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17470 [shape=cds, label=<<font color="black">app promise = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17477 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17471 [shape=cds, label=<<font color="black">app reason = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17468 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17472 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= promise.PromiseState &quot;pending&quot;)</td></tr>
      <tr><td align="left">1:let reactions = promise.PromiseRejectReactions</td></tr>
      <tr><td align="left">2:promise.PromiseResult = reason</td></tr>
      <tr><td align="left">3:promise.PromiseFulfillReactions = undefined</td></tr>
      <tr><td align="left">4:promise.PromiseRejectReactions = undefined</td></tr>
      <tr><td align="left">5:promise.PromiseState = &quot;rejected&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17469 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17474 [shape=cds, label=<<font color="black">app __x0__ = (HostPromiseRejectionTracker promise &quot;reject&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17476 [shape=cds, label=<<font color="black">7:app __x1__ = (TriggerPromiseReactions reactions reason)</font>> color="black" fillcolor="white" style=filled]
  node17471 -> node17472 [ color="black"]
  node17475 -> node17476 [ color="black"]
  node17477 -> node17469 [ color="black"]
  node17474 -> node17475 [ color="black"]
  node17468 -> node17470 [ color="black"]
  node17473 -> node17474 [label=<<font color="black">true</font>> color="black"]
  node17473 -> node17476 [label=<<font color="black">false</font>> color="black"]
  node17476 -> node17477 [ color="black"]
  node17470 -> node17471 [ color="black"]
  node17472 -> node17473 [ color="black"]
}
