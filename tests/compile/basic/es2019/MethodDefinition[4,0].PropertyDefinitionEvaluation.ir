{
  access __x0__ = (PropertyName "Evaluation")
  let propKey = __x0__
  [? propKey]
  if true let strict = true else let strict = false
  let scope = GLOBAL_context.LexicalEnvironment
  ??? "Let id:{formalParameterList} be an instance of the production grammar:{FormalParameters0, []} ."
  app __x1__ = (FunctionCreate CONST_Method formalParameterList FunctionBody scope strict)
  let closure = __x1__
  app __x2__ = (MakeMethod closure object)
  __x2__
  app __x3__ = (SetFunctionName closure propKey "get")
  __x3__
  closure.SourceText = (get-syntax MethodDefinition)
  let desc = (new PropertyDescriptor("Get" -> closure, "Enumerable" -> enumerable, "Configurable" -> true))
  app __x4__ = (DefinePropertyOrThrow object propKey desc)
  return [? __x4__]
}