digraph {
  node10908 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return declarationNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10903 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10907 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append &quot;*default*&quot; -&gt; declarationNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10904 [shape=cds, label=<<font color="black">0:access __x0__ = (ClassDeclaration &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10906 [shape=diamond, label=<<font color="black">(! (contains declarationNames &quot;*default*&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10905 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let declarationNames = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10902 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10906 -> node10907 [label=<<font color="black">true</font>> color="black"]
  node10906 -> node10908 [label=<<font color="black">false</font>> color="black"]
  node10908 -> node10903 [ color="black"]
  node10902 -> node10904 [ color="black"]
  node10905 -> node10906 [ color="black"]
  node10907 -> node10908 [ color="black"]
  node10904 -> node10905 [ color="black"]
}
