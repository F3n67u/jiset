digraph {
  node10022 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10025 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10029 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10026 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node10024 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node10027 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10023 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10028 [shape=cds, label=<<font color="black">2:access __x1__ = (ModuleItem &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node10027 -> node10028 [ color="black"]
  node10029 -> node10023 [ color="black"]
  node10025 -> node10026 [ color="black"]
  node10026 -> node10027 [label=<<font color="black">true</font>> color="black"]
  node10026 -> node10028 [label=<<font color="black">false</font>> color="black"]
  node10022 -> node10024 [ color="black"]
  node10024 -> node10025 [ color="black"]
  node10028 -> node10029 [ color="black"]
}
