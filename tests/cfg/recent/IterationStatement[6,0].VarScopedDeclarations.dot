digraph {
  node7556 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7560 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let __x1__ = __x0__</td></tr>
      <tr><td align="left">1:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7559 [shape=cds, label=<<font color="black">1:access __x0__ = (Statement &quot;VarScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7561 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node7558 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let declarations = (new [ForBinding])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7562 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x3__ = __x1__[__x2__]</td></tr>
      <tr><td align="left">append __x3__ -&gt; declarations</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7557 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7563 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return declarations</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7563 -> node7557 [ color="black"]
  node7558 -> node7559 [ color="black"]
  node7559 -> node7560 [ color="black"]
  node7561 -> node7562 [label=<<font color="black">true</font>> color="black"]
  node7561 -> node7563 [label=<<font color="black">false</font>> color="black"]
  node7560 -> node7561 [ color="black"]
  node7562 -> node7561 [ color="black"]
  node7556 -> node7558 [ color="black"]
}
