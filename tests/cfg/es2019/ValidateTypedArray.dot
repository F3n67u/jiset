digraph {
  node15656 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15651 [shape=cds, label=<<font color="black">app O = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15659 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node15660 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15649 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15657 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (! (= O.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">3:let buffer = O.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15661 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:return buffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15658 [shape=cds, label=<<font color="black">4:app __x1__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15655 [shape=diamond, label=<<font color="black">(= O.TypedArrayName absent)</font>> color="black" fillcolor="white" style=filled]
  node15650 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15653 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15652 [shape=cds, label=<<font color="black">0:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node15656 -> node15657 [ color="black"]
  node15651 -> node15652 [ color="black"]
  node15655 -> node15656 [label=<<font color="black">true</font>> color="black"]
  node15655 -> node15657 [label=<<font color="black">false</font>> color="black"]
  node15660 -> node15661 [ color="black"]
  node15657 -> node15658 [ color="black"]
  node15653 -> node15654 [label=<<font color="black">true</font>> color="black"]
  node15653 -> node15655 [label=<<font color="black">false</font>> color="black"]
  node15658 -> node15659 [ color="black"]
  node15661 -> node15650 [ color="black"]
  node15652 -> node15653 [ color="black"]
  node15659 -> node15660 [label=<<font color="black">true</font>> color="black"]
  node15659 -> node15661 [label=<<font color="black">false</font>> color="black"]
  node15654 -> node15655 [ color="black"]
  node15649 -> node15651 [ color="black"]
}
