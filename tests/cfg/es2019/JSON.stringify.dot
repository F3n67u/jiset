digraph {
  node17046 [shape=diamond, label=<<font color="black">(= __x8__ Number)</font>> color="black" fillcolor="white" style=filled]
  node17049 [shape=cds, label=<<font color="black">app __x10__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node17040 [shape=cds, label=<<font color="black">13:app __x6__ = (Get replacer [! __x5__])</font>> color="black" fillcolor="white" style=filled]
  node17058 [shape=diamond, label=<<font color="black">(! (= space.StringData absent))</font>> color="black" fillcolor="white" style=filled]
  node17061 [shape=cds, label=<<font color="black">32:app __x14__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node17029 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node17050 [shape=diamond, label=<<font color="black">(= __x10__ Object)</font>> color="black" fillcolor="white" style=filled]
  node17028 [shape=cds, label=<<font color="black">6:app __x1__ = (IsCallable replacer)</font>> color="black" fillcolor="white" style=filled]
  node17041 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let v = [? __x6__]</td></tr>
      <tr><td align="left">14:let item = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17066 [shape=cds, label=<<font color="black">app __x17__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node17051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If id:{v} has a [ [ StringData ] ] or [ [ NumberData ] ] internal slot , set id:{item} to ? ToString ( id:{v} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17035 [shape=cds, label=<<font color="black">10:app __x3__ = (Get replacer &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17043 [shape=diamond, label=<<font color="black">(= __x7__ String)</font>> color="black" fillcolor="white" style=filled]
  node17072 [shape=cds, label=<<font color="black">35:app __x19__ = (CreateDataProperty wrapper &quot;&quot; value)</font>> color="black" fillcolor="white" style=filled]
  node17068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If the length of id:{space} is 10 or less , let id:{gap} be id:{space} ; otherwise let id:{gap} be the String value consisting of the first 10 code units of id:{space} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17021 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17053 [shape=cds, label=<<font color="black">22:app __x11__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node17026 [shape=cds, label=<<font color="black">3:app __x0__ = (Type replacer)</font>> color="black" fillcolor="white" style=filled]
  node17075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:return [? __x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17036 [shape=cds, label=<<font color="black">10:app __x4__ = (ToLength [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node17037 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let len = [? __x4__]</td></tr>
      <tr><td align="left">11:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17032 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let isArray = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17042 [shape=cds, label=<<font color="black">17:app __x7__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node17065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:space = __x16__</td></tr>
      <tr><td align="left">29:??? &quot;Let id:{gap} be the String value containing id:{space} occurrences of the code unit 0x0020 ( SPACE ) . This will be the empty String if id:{space} is less than 1 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17074 [shape=cds, label=<<font color="black">37:app __x20__ = (SerializeJSONProperty &quot;&quot; wrapper)</font>> color="black" fillcolor="white" style=filled]
  node17033 [shape=diamond, label=<<font color="black">(= isArray true)</font>> color="black" fillcolor="white" style=filled]
  node17054 [shape=diamond, label=<<font color="black">(= __x11__ Object)</font>> color="black" fillcolor="white" style=filled]
  node17022 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17064 [shape=cds, label=<<font color="black">28:app __x16__ = (min 10i [! __x15__])</font>> color="black" fillcolor="white" style=filled]
  node17069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let gap = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17031 [shape=cds, label=<<font color="black">7:app __x2__ = (IsArray replacer)</font>> color="black" fillcolor="white" style=filled]
  node17048 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">item = [! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17038 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white" style=filled]
  node17070 [shape=cds, label=<<font color="black">34:app __x18__ = (ObjectCreate INTRINSIC_ObjectPrototype)</font>> color="black" fillcolor="white" style=filled]
  node17060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:space = [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17055 [shape=diamond, label=<<font color="black">(! (= space.NumberData absent))</font>> color="black" fillcolor="white" style=filled]
  node17034 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:PropertyList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17045 [shape=cds, label=<<font color="black">app __x8__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node17073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let status = __x19__</td></tr>
      <tr><td align="left">36:assert (= status true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17023 [shape=cds, label=<<font color="black">app replacer = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17057 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:space = [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17025 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let stack = (new [])</td></tr>
      <tr><td align="left">1:let indent = &quot;&quot;</td></tr>
      <tr><td align="left">2:let PropertyList = undefined</td></tr>
      <tr><td align="left">2:let ReplacerFunction = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17027 [shape=diamond, label=<<font color="black">(= __x0__ Object)</font>> color="black" fillcolor="white" style=filled]
  node17044 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">item = v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17067 [shape=diamond, label=<<font color="black">(= __x17__ String)</font>> color="black" fillcolor="white" style=filled]
  node17030 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">ReplacerFunction = replacer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17039 [shape=cds, label=<<font color="black">13:app __x5__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node17063 [shape=cds, label=<<font color="black">28:app __x15__ = (ToInteger space)</font>> color="black" fillcolor="white" style=filled]
  node17047 [shape=cds, label=<<font color="black">app __x9__ = (ToString v)</font>> color="black" fillcolor="white" style=filled]
  node17020 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17052 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;If id:{item} is not value:{undefined} and id:{item} is not currently an element of id:{PropertyList} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">21:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17024 [shape=cds, label=<<font color="black">app space = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17059 [shape=cds, label=<<font color="black">26:app __x13__ = (ToString space)</font>> color="black" fillcolor="white" style=filled]
  node17056 [shape=cds, label=<<font color="black">24:app __x12__ = (ToNumber space)</font>> color="black" fillcolor="white" style=filled]
  node17062 [shape=diamond, label=<<font color="black">(= __x14__ Number)</font>> color="black" fillcolor="white" style=filled]
  node17071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:let wrapper = __x18__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17045 -> node17046 [ color="black"]
  node17058 -> node17059 [label=<<font color="black">true</font>> color="black"]
  node17058 -> node17061 [label=<<font color="black">false</font>> color="black"]
  node17048 -> node17052 [ color="black"]
  node17046 -> node17047 [label=<<font color="black">true</font>> color="black"]
  node17046 -> node17049 [label=<<font color="black">false</font>> color="black"]
  node17052 -> node17038 [ color="black"]
  node17066 -> node17067 [ color="black"]
  node17034 -> node17035 [ color="black"]
  node17024 -> node17025 [ color="black"]
  node17028 -> node17029 [ color="black"]
  node17041 -> node17042 [ color="black"]
  node17072 -> node17073 [ color="black"]
  node17022 -> node17023 [ color="black"]
  node17054 -> node17055 [label=<<font color="black">true</font>> color="black"]
  node17054 -> node17061 [label=<<font color="black">false</font>> color="black"]
  node17056 -> node17057 [ color="black"]
  node17064 -> node17065 [ color="black"]
  node17051 -> node17052 [ color="black"]
  node17075 -> node17021 [ color="black"]
  node17049 -> node17050 [ color="black"]
  node17062 -> node17063 [label=<<font color="black">true</font>> color="black"]
  node17062 -> node17066 [label=<<font color="black">false</font>> color="black"]
  node17036 -> node17037 [ color="black"]
  node17059 -> node17060 [ color="black"]
  node17029 -> node17030 [label=<<font color="black">true</font>> color="black"]
  node17029 -> node17031 [label=<<font color="black">false</font>> color="black"]
  node17047 -> node17048 [ color="black"]
  node17074 -> node17075 [ color="black"]
  node17031 -> node17032 [ color="black"]
  node17020 -> node17022 [ color="black"]
  node17039 -> node17040 [ color="black"]
  node17043 -> node17044 [label=<<font color="black">true</font>> color="black"]
  node17043 -> node17045 [label=<<font color="black">false</font>> color="black"]
  node17063 -> node17064 [ color="black"]
  node17038 -> node17039 [label=<<font color="black">true</font>> color="black"]
  node17038 -> node17053 [label=<<font color="black">false</font>> color="black"]
  node17037 -> node17038 [ color="black"]
  node17040 -> node17041 [ color="black"]
  node17025 -> node17026 [ color="black"]
  node17044 -> node17052 [ color="black"]
  node17042 -> node17043 [ color="black"]
  node17071 -> node17072 [ color="black"]
  node17061 -> node17062 [ color="black"]
  node17057 -> node17061 [ color="black"]
  node17060 -> node17061 [ color="black"]
  node17032 -> node17033 [ color="black"]
  node17068 -> node17070 [ color="black"]
  node17030 -> node17053 [ color="black"]
  node17070 -> node17071 [ color="black"]
  node17073 -> node17074 [ color="black"]
  node17027 -> node17028 [label=<<font color="black">true</font>> color="black"]
  node17027 -> node17053 [label=<<font color="black">false</font>> color="black"]
  node17067 -> node17068 [label=<<font color="black">true</font>> color="black"]
  node17067 -> node17069 [label=<<font color="black">false</font>> color="black"]
  node17050 -> node17051 [label=<<font color="black">true</font>> color="black"]
  node17050 -> node17052 [label=<<font color="black">false</font>> color="black"]
  node17023 -> node17024 [ color="black"]
  node17053 -> node17054 [ color="black"]
  node17033 -> node17034 [label=<<font color="black">true</font>> color="black"]
  node17033 -> node17053 [label=<<font color="black">false</font>> color="black"]
  node17026 -> node17027 [ color="black"]
  node17069 -> node17070 [ color="black"]
  node17065 -> node17070 [ color="black"]
  node17055 -> node17056 [label=<<font color="black">true</font>> color="black"]
  node17055 -> node17058 [label=<<font color="black">false</font>> color="black"]
  node17035 -> node17036 [ color="black"]
}
