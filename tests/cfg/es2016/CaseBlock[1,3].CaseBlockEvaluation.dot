digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=diamond, label=<<font color="black">(= found false)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let V = undefined</td></tr>
      <tr><td align="left">1:??? &quot;Let id:{A} be the List of nt:{CaseClause} items in the first nt:{CaseClauses} , in source text order . If the first nt:{CaseClauses} is not present , id:{A} is &laquo; &raquo; .&quot;</td></tr>
      <tr><td align="left">2:let found = false</td></tr>
      <tr><td align="left">3:let __x0__ = A</td></tr>
      <tr><td align="left">3:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">(= found true)</font>> color="black" fillcolor="white" style=filled]
  node56 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let V = R.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node42 [shape=cds, label=<<font color="black">25:access __x14__ = (DefaultClause &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = __x7__[__x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node37 [shape=cds, label=<<font color="black">app __x13__ = (UpdateEmpty R V)</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=diamond, label=<<font color="black">(= foundInB false)</font>> color="black" fillcolor="white" style=filled]
  node52 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let C = __x17__[__x18__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let V = R.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let foundInB = false</td></tr>
      <tr><td align="left">13:??? &quot;Let id:{B} be the List containing the nt:{CaseClause} items in the second nt:{CaseClauses} , in source text order . If the second nt:{CaseClauses} is not present , id:{B} is &laquo; &raquo; .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node46 [shape=cds, label=<<font color="black">27:app __x15__ = (IsAbruptCompletion R)</font>> color="black" fillcolor="white" style=filled]
  node57 [shape=cds, label=<<font color="black">31:app __x20__ = (IsAbruptCompletion R)</font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let foundInB = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node61 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x18__ = (+ __x18__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=cds, label=<<font color="black">5:access __x2__ = (C &quot;CaseSelectorEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node60 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x21__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=diamond, label=<<font color="black">(= found false)</font>> color="black" fillcolor="white" style=filled]
  node33 [shape=diamond, label=<<font color="black">(! (= R.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=cds, label=<<font color="black">19:app __x10__ = (StrictEqualityComparison input clauseSelector.Value)</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x13__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let found = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node53 [shape=cds, label=<<font color="black">29:access __x19__ = (C &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=diamond, label=<<font color="black">(! (= R.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return V</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node45 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let V = R.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17 [shape=cds, label=<<font color="black">app __x6__ = (UpdateEmpty R V)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let R = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node34 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let V = R.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let __x7__ = B</td></tr>
      <tr><td align="left">15:let __x8__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node44 [shape=diamond, label=<<font color="black">(! (= R.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node59 [shape=cds, label=<<font color="black">app __x21__ = (UpdateEmpty R V)</font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let clauseSelector = __x9__</td></tr>
      <tr><td align="left">18:[? clauseSelector]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let R = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node54 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:let R = __x19__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node49 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x16__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let clauseSelector = __x2__</td></tr>
      <tr><td align="left">6:[? clauseSelector]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node39 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x8__ = (+ __x8__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node35 [shape=cds, label=<<font color="black">23:app __x12__ = (IsAbruptCompletion R)</font>> color="black" fillcolor="white" style=filled]
  node48 [shape=cds, label=<<font color="black">app __x16__ = (UpdateEmpty R V)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node50 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:let __x17__ = B</td></tr>
      <tr><td align="left">28:let __x18__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node31 [shape=cds, label=<<font color="black">21:access __x11__ = (C &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">9:access __x4__ = (C &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node43 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let R = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node40 [shape=diamond, label=<<font color="black">(= foundInB true)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=cds, label=<<font color="black">17:access __x9__ = (C &quot;CaseSelectorEvaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node55 [shape=diamond, label=<<font color="black">(! (= R.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=diamond, label=<<font color="black">(&lt; __x8__ __x7__.length)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">7:app __x3__ = (StrictEqualityComparison input clauseSelector.Value)</font>> color="black" fillcolor="white" style=filled]
  node58 [shape=diamond, label=<<font color="black">__x20__</font>> color="black" fillcolor="white" style=filled]
  node36 [shape=diamond, label=<<font color="black">__x12__</font>> color="black" fillcolor="white" style=filled]
  node30 [shape=diamond, label=<<font color="black">(= foundInB true)</font>> color="black" fillcolor="white" style=filled]
  node51 [shape=diamond, label=<<font color="black">(&lt; __x18__ __x17__.length)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node47 [shape=diamond, label=<<font color="black">__x15__</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">11:app __x5__ = (IsAbruptCompletion R)</font>> color="black" fillcolor="white" style=filled]
  node62 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:return V</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node53 -> node54 [ color="black"]
  node62 -> node1 [ color="black"]
  node33 -> node34 [label=<<font color="black">true</font>> color="black"]
  node33 -> node35 [label=<<font color="black">false</font>> color="black"]
  node12 -> node13 [ color="black"]
  node26 -> node27 [ color="black"]
  node5 -> node6 [label=<<font color="black">true</font>> color="black"]
  node5 -> node10 [label=<<font color="black">false</font>> color="black"]
  node36 -> node37 [label=<<font color="black">true</font>> color="black"]
  node36 -> node39 [label=<<font color="black">false</font>> color="black"]
  node46 -> node47 [ color="black"]
  node49 -> node50 [ color="black"]
  node41 -> node42 [ color="black"]
  node28 -> node29 [ color="black"]
  node29 -> node30 [ color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node19 [label=<<font color="black">false</font>> color="black"]
  node7 -> node8 [ color="black"]
  node54 -> node55 [ color="black"]
  node18 -> node19 [ color="black"]
  node42 -> node43 [ color="black"]
  node34 -> node35 [ color="black"]
  node40 -> node41 [label=<<font color="black">true</font>> color="black"]
  node40 -> node42 [label=<<font color="black">false</font>> color="black"]
  node13 -> node14 [label=<<font color="black">true</font>> color="black"]
  node13 -> node15 [label=<<font color="black">false</font>> color="black"]
  node44 -> node45 [label=<<font color="black">true</font>> color="black"]
  node44 -> node46 [label=<<font color="black">false</font>> color="black"]
  node58 -> node59 [label=<<font color="black">true</font>> color="black"]
  node58 -> node61 [label=<<font color="black">false</font>> color="black"]
  node61 -> node51 [ color="black"]
  node51 -> node52 [label=<<font color="black">true</font>> color="black"]
  node51 -> node62 [label=<<font color="black">false</font>> color="black"]
  node21 -> node22 [label=<<font color="black">true</font>> color="black"]
  node21 -> node40 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node11 -> node12 [ color="black"]
  node25 -> node26 [label=<<font color="black">true</font>> color="black"]
  node25 -> node30 [label=<<font color="black">false</font>> color="black"]
  node35 -> node36 [ color="black"]
  node57 -> node58 [ color="black"]
  node45 -> node46 [ color="black"]
  node0 -> node2 [ color="black"]
  node47 -> node48 [label=<<font color="black">true</font>> color="black"]
  node47 -> node50 [label=<<font color="black">false</font>> color="black"]
  node23 -> node24 [label=<<font color="black">true</font>> color="black"]
  node23 -> node40 [label=<<font color="black">false</font>> color="black"]
  node52 -> node53 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node43 -> node44 [ color="black"]
  node9 -> node10 [ color="black"]
  node19 -> node3 [ color="black"]
  node27 -> node28 [ color="black"]
  node37 -> node38 [ color="black"]
  node14 -> node15 [ color="black"]
  node31 -> node32 [ color="black"]
  node50 -> node51 [ color="black"]
  node4 -> node5 [ color="black"]
  node8 -> node9 [ color="black"]
  node59 -> node60 [ color="black"]
  node30 -> node31 [label=<<font color="black">true</font>> color="black"]
  node30 -> node39 [label=<<font color="black">false</font>> color="black"]
  node20 -> node21 [ color="black"]
  node55 -> node56 [label=<<font color="black">true</font>> color="black"]
  node55 -> node57 [label=<<font color="black">false</font>> color="black"]
  node56 -> node57 [ color="black"]
  node3 -> node4 [label=<<font color="black">true</font>> color="black"]
  node3 -> node20 [label=<<font color="black">false</font>> color="black"]
  node60 -> node61 [ color="black"]
  node24 -> node25 [ color="black"]
  node48 -> node49 [ color="black"]
  node16 -> node17 [label=<<font color="black">true</font>> color="black"]
  node16 -> node19 [label=<<font color="black">false</font>> color="black"]
  node38 -> node39 [ color="black"]
  node39 -> node23 [ color="black"]
  node32 -> node33 [ color="black"]
  node17 -> node18 [ color="black"]
}
