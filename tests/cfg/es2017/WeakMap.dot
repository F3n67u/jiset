digraph {
  node15435 [shape=cds, label=<<font color="black">16:app __x7__ = (IteratorClose iter error)</font>> color="black" fillcolor="white" style=filled]
  node15454 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x16__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15414 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node15428 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15416 [shape=cds, label=<<font color="black">6:app __x1__ = (Get map &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15412 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node15418 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node15440 [shape=diamond, label=<<font color="black">__x9__</font>> color="black" fillcolor="white" style=filled]
  node15413 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15450 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let status = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15408 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15426 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node15441 [shape=cds, label=<<font color="black">app __x10__ = (IteratorClose iter k)</font>> color="black" fillcolor="white" style=filled]
  node15445 [shape=cds, label=<<font color="black">20:app __x12__ = (IsAbruptCompletion v)</font>> color="black" fillcolor="white" style=filled]
  node15430 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15409 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15424 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15449 [shape=cds, label=<<font color="black">21:app __x14__ = (Call adder map (new [k.Value, v.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15434 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let error = (new Completion(&quot;Type&quot; -&gt; CONST_throw, &quot;Value&quot; -&gt; ??? &quot;TypeError&quot;, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15407 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15439 [shape=cds, label=<<font color="black">18:app __x9__ = (IsAbruptCompletion k)</font>> color="black" fillcolor="white" style=filled]
  node15422 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15410 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakMapPrototype (new [&quot;WeakMapData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15421 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15442 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15431 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextItem = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15446 [shape=diamond, label=<<font color="black">__x12__</font>> color="black" fillcolor="white" style=filled]
  node15427 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15423 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node15433 [shape=diamond, label=<<font color="black">(! (= __x6__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15406 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15452 [shape=diamond, label=<<font color="black">__x15__</font>> color="black" fillcolor="white" style=filled]
  node15453 [shape=cds, label=<<font color="black">app __x16__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node15438 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let k = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15420 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15432 [shape=cds, label=<<font color="black">14:app __x6__ = (Type nextItem)</font>> color="black" fillcolor="white" style=filled]
  node15405 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15447 [shape=cds, label=<<font color="black">app __x13__ = (IteratorClose iter v)</font>> color="black" fillcolor="white" style=filled]
  node15415 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15411 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let map = [? __x0__]</td></tr>
      <tr><td align="left">2:map.WeakMapData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15443 [shape=cds, label=<<font color="black">19:app __x11__ = (Get nextItem &quot;1&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15436 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15437 [shape=cds, label=<<font color="black">17:app __x8__ = (Get nextItem &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15451 [shape=cds, label=<<font color="black">22:app __x15__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node15419 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15425 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15448 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15444 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let v = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15429 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15445 -> node15446 [ color="black"]
  node15415 -> node15423 [ color="black"]
  node15410 -> node15411 [ color="black"]
  node15424 -> node15425 [ color="black"]
  node15430 -> node15431 [ color="black"]
  node15452 -> node15453 [label=<<font color="black">true</font>> color="black"]
  node15452 -> node15425 [label=<<font color="black">false</font>> color="black"]
  node15421 -> node15422 [ color="black"]
  node15413 -> node15414 [ color="black"]
  node15414 -> node15415 [label=<<font color="black">true</font>> color="black"]
  node15414 -> node15416 [label=<<font color="black">false</font>> color="black"]
  node15436 -> node15437 [ color="black"]
  node15447 -> node15448 [ color="black"]
  node15416 -> node15417 [ color="black"]
  node15423 -> node15424 [label=<<font color="black">true</font>> color="black"]
  node15423 -> node15425 [label=<<font color="black">false</font>> color="black"]
  node15450 -> node15451 [ color="black"]
  node15438 -> node15439 [ color="black"]
  node15409 -> node15410 [ color="black"]
  node15443 -> node15444 [ color="black"]
  node15431 -> node15432 [ color="black"]
  node15412 -> node15413 [label=<<font color="black">true</font>> color="black"]
  node15412 -> node15414 [label=<<font color="black">false</font>> color="black"]
  node15408 -> node15409 [label=<<font color="black">true</font>> color="black"]
  node15408 -> node15410 [label=<<font color="black">false</font>> color="black"]
  node15435 -> node15436 [ color="black"]
  node15411 -> node15412 [ color="black"]
  node15440 -> node15441 [label=<<font color="black">true</font>> color="black"]
  node15440 -> node15443 [label=<<font color="black">false</font>> color="black"]
  node15420 -> node15421 [ color="black"]
  node15444 -> node15445 [ color="black"]
  node15434 -> node15435 [ color="black"]
  node15453 -> node15454 [ color="black"]
  node15419 -> node15420 [label=<<font color="black">true</font>> color="black"]
  node15419 -> node15421 [label=<<font color="black">false</font>> color="black"]
  node15417 -> node15418 [ color="black"]
  node15418 -> node15419 [ color="black"]
  node15439 -> node15440 [ color="black"]
  node15429 -> node15430 [ color="black"]
  node15428 -> node15429 [label=<<font color="black">true</font>> color="black"]
  node15428 -> node15430 [label=<<font color="black">false</font>> color="black"]
  node15426 -> node15427 [ color="black"]
  node15425 -> node15426 [label=<<font color="black">true</font>> color="black"]
  node15425 -> node15406 [label=<<font color="black">false</font>> color="black"]
  node15446 -> node15447 [label=<<font color="black">true</font>> color="black"]
  node15446 -> node15449 [label=<<font color="black">false</font>> color="black"]
  node15405 -> node15407 [ color="black"]
  node15449 -> node15450 [ color="black"]
  node15427 -> node15428 [ color="black"]
  node15407 -> node15408 [ color="black"]
  node15437 -> node15438 [ color="black"]
  node15454 -> node15425 [ color="black"]
  node15422 -> node15423 [ color="black"]
  node15432 -> node15433 [ color="black"]
  node15433 -> node15434 [label=<<font color="black">true</font>> color="black"]
  node15433 -> node15437 [label=<<font color="black">false</font>> color="black"]
  node15442 -> node15443 [ color="black"]
  node15441 -> node15442 [ color="black"]
  node15451 -> node15452 [ color="black"]
  node15448 -> node15449 [ color="black"]
}
