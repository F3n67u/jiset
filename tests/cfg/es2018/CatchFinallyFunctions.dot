digraph {
  node17875 [shape=cds, label=<<font color="black">5:app __x3__ = (PromiseResolve C result)</font>> color="black" fillcolor="white" style=filled]
  node17871 [shape=cds, label=<<font color="black">2:app __x1__ = (Call onFinally undefined)</font>> color="black" fillcolor="white" style=filled]
  node17867 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17866 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let promise = [? __x3__]</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{thrower} be equivalent to a function that throws id:{reason} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17870 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17873 [shape=cds, label=<<font color="black">4:app __x2__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node17869 [shape=cds, label=<<font color="black">1:app __x0__ = (IsCallable onFinally)</font>> color="black" fillcolor="white" style=filled]
  node17874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (= __x2__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17877 [shape=cds, label=<<font color="black">7:app __x4__ = (Invoke promise &quot;then&quot; (new [thrower]))</font>> color="black" fillcolor="white" style=filled]
  node17872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let result = [? __x1__]</td></tr>
      <tr><td align="left">3:let C = F.Constructor</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17868 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let onFinally = F.OnFinally</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17878 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17877 -> node17878 [ color="black"]
  node17870 -> node17871 [ color="black"]
  node17872 -> node17873 [ color="black"]
  node17873 -> node17874 [ color="black"]
  node17876 -> node17877 [ color="black"]
  node17878 -> node17867 [ color="black"]
  node17868 -> node17869 [ color="black"]
  node17871 -> node17872 [ color="black"]
  node17869 -> node17870 [ color="black"]
  node17866 -> node17868 [ color="black"]
  node17875 -> node17876 [ color="black"]
  node17874 -> node17875 [ color="black"]
}
