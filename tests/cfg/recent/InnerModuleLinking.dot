digraph {
  node10844 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10854 [shape=diamond, label=<<font color="black">(= requiredModule.Status CONST_linking)</font>> color="black" fillcolor="white" style=filled]
  node10850 [shape=cds, label=<<font color="black">13:app __x4__ = (InnerModuleLinking requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node10839 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10855 [shape=cds, label=<<font color="black">18:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node10848 [shape=cds, label=<<font color="black">12:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node10866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10851 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10857 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10842 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10847 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10852 [shape=diamond, label=<<font color="black">(= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10856 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10853 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:assert (|| (|| (= requiredModule.Status CONST_linking) (= requiredModule.Status CONST_linked)) (= requiredModule.Status CONST_evaluated))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10838 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10849 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let requiredModule = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10845 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (= module.Status CONST_unlinked)</td></tr>
      <tr><td align="left">6:module.Status = CONST_linking</td></tr>
      <tr><td align="left">7:module.DFSIndex = index</td></tr>
      <tr><td align="left">8:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">9:index = (+ index 1i)</td></tr>
      <tr><td align="left">10:append module -&gt; stack</td></tr>
      <tr><td align="left">11:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">11:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10864 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node10859 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x6__]</td></tr>
      <tr><td align="left">21:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10865 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10863 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">26:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">27:assert (= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</td></tr>
      <tr><td align="left">28:requiredModule.Status = CONST_linked</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10858 [shape=cds, label=<<font color="black">19:app __x6__ = (module.InitializeEnvironment module)</font>> color="black" fillcolor="white" style=filled]
  node10843 [shape=diamond, label=<<font color="black">(|| (|| (= module.Status CONST_linking) (= module.Status CONST_linked)) (= module.Status CONST_evaluated))</font>> color="black" fillcolor="white" style=filled]
  node10862 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node10840 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;CyclicModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10846 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10860 [shape=diamond, label=<<font color="black">(== module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node10841 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Link module)</font>> color="black" fillcolor="white" style=filled]
  node10861 -> node10862 [ color="black"]
  node10857 -> node10846 [ color="black"]
  node10862 -> node10863 [label=<<font color="black">true</font>> color="black"]
  node10862 -> node10866 [label=<<font color="black">false</font>> color="black"]
  node10840 -> node10841 [label=<<font color="black">true</font>> color="black"]
  node10840 -> node10843 [label=<<font color="black">false</font>> color="black"]
  node10852 -> node10853 [label=<<font color="black">true</font>> color="black"]
  node10852 -> node10857 [label=<<font color="black">false</font>> color="black"]
  node10849 -> node10850 [ color="black"]
  node10850 -> node10851 [ color="black"]
  node10859 -> node10860 [ color="black"]
  node10842 -> node10843 [ color="black"]
  node10846 -> node10847 [label=<<font color="black">true</font>> color="black"]
  node10846 -> node10858 [label=<<font color="black">false</font>> color="black"]
  node10858 -> node10859 [ color="black"]
  node10851 -> node10852 [ color="black"]
  node10854 -> node10855 [label=<<font color="black">true</font>> color="black"]
  node10854 -> node10857 [label=<<font color="black">false</font>> color="black"]
  node10844 -> node10845 [ color="black"]
  node10848 -> node10849 [ color="black"]
  node10847 -> node10848 [ color="black"]
  node10853 -> node10854 [ color="black"]
  node10841 -> node10842 [ color="black"]
  node10855 -> node10856 [ color="black"]
  node10863 -> node10864 [ color="black"]
  node10865 -> node10862 [ color="black"]
  node10860 -> node10861 [label=<<font color="black">true</font>> color="black"]
  node10860 -> node10866 [label=<<font color="black">false</font>> color="black"]
  node10845 -> node10846 [ color="black"]
  node10866 -> node10839 [ color="black"]
  node10864 -> node10865 [label=<<font color="black">true</font>> color="black"]
  node10864 -> node10862 [label=<<font color="black">false</font>> color="black"]
  node10856 -> node10857 [ color="black"]
  node10843 -> node10844 [label=<<font color="black">true</font>> color="black"]
  node10843 -> node10845 [label=<<font color="black">false</font>> color="black"]
  node10838 -> node10840 [ color="black"]
}
