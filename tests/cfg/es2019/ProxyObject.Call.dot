digraph {
  node3230 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3221 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3231 [shape=cds, label=<<font color="black">7:app __x3__ = (CreateArrayFromList argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node3226 [shape=cds, label=<<font color="black">4:app __x1__ = (GetMethod handler &quot;apply&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3229 [shape=cds, label=<<font color="black">6:app __x2__ = (Call target thisArgument argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node3233 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, thisArgument, argArray]))</font>> color="black" fillcolor="white" style=filled]
  node3222 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3225 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">3:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3234 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3223 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3219 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3228 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3224 [shape=cds, label=<<font color="black">2:app __x0__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3220 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3232 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let argArray = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3227 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let trap = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3227 -> node3228 [ color="black"]
  node3231 -> node3232 [ color="black"]
  node3234 -> node3220 [ color="black"]
  node3221 -> node3222 [ color="black"]
  node3228 -> node3229 [label=<<font color="black">true</font>> color="black"]
  node3228 -> node3231 [label=<<font color="black">false</font>> color="black"]
  node3230 -> node3231 [ color="black"]
  node3219 -> node3221 [ color="black"]
  node3223 -> node3224 [ color="black"]
  node3232 -> node3233 [ color="black"]
  node3222 -> node3223 [label=<<font color="black">true</font>> color="black"]
  node3222 -> node3224 [label=<<font color="black">false</font>> color="black"]
  node3224 -> node3225 [ color="black"]
  node3226 -> node3227 [ color="black"]
  node3225 -> node3226 [ color="black"]
  node3229 -> node3230 [ color="black"]
  node3233 -> node3234 [ color="black"]
}
