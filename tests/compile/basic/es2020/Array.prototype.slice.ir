{
  app __x0__ = (ToObject this)
  let O = [? __x0__]
  app __x1__ = (LengthOfArrayLike O)
  let len = [? __x1__]
  app __x2__ = (ToInteger start)
  let relativeStart = [? __x2__]
  if (< relativeStart 0i) {
    app __x3__ = (max (+ len relativeStart) 0i)
    let k = __x3__
  } else {
    app __x4__ = (min relativeStart len)
    let k = __x4__
  }
  if (= end undefined) let relativeEnd = len else {
    app __x5__ = (ToInteger end)
    let relativeEnd = [? __x5__]
  }
  if (< relativeEnd 0i) {
    app __x6__ = (max (+ len relativeEnd) 0i)
    let final = __x6__
  } else {
    app __x7__ = (min relativeEnd len)
    let final = __x7__
  }
  app __x8__ = (max (- final k) 0i)
  let count = __x8__
  app __x9__ = (ArraySpeciesCreate O count)
  let A = [? __x9__]
  let n = 0i
  while (< k final) {
    app __x10__ = (ToString k)
    let Pk = [! __x10__]
    app __x11__ = (HasProperty O Pk)
    let kPresent = [? __x11__]
    if (= kPresent true) {
      app __x12__ = (Get O Pk)
      let kValue = [? __x12__]
      app __x13__ = (ToString n)
      app __x14__ = (CreateDataPropertyOrThrow A [! __x13__] kValue)
      [? __x14__]
    } else {}
    k = (+ k 1i)
    n = (+ n 1i)
  }
  app __x15__ = (Set A "length" n true)
  [? __x15__]
  return A
}