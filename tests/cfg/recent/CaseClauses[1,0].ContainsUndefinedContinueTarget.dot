digraph {
  node7997 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8001 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7999 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7994 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7998 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node8000 [shape=cds, label=<<font color="black">2:access __x1__ = (CaseClause &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7995 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7996 [shape=cds, label=<<font color="black">0:access __x0__ = (CaseClauses &quot;ContainsUndefinedContinueTarget&quot; iterationSet (new []))</font>> color="black" fillcolor="white" style=filled]
  node7998 -> node7999 [label=<<font color="black">true</font>> color="black"]
  node7998 -> node8000 [label=<<font color="black">false</font>> color="black"]
  node7997 -> node7998 [ color="black"]
  node7994 -> node7996 [ color="black"]
  node8001 -> node7995 [ color="black"]
  node7999 -> node8000 [ color="black"]
  node8000 -> node8001 [ color="black"]
  node7996 -> node7997 [ color="black"]
}
