<algorithm>
  <param>iteratorRecord</param>
  <param>completion</param>
  <step-list>
    <step>Assert : Type ( <id>iteratorRecord</id> .[[Iterator]]) is Object.</step>
    <step>Assert : <id>completion</id> is a Completion Record .</step>
    <step>Let <id>iterator</id> be <id>iteratorRecord</id> .[[Iterator]].</step>
    <step>Let <id>return</id> be ? GetMethod ( <id>iterator</id> , <value>"return"</value> ).</step>
    <step>If <id>return</id> is <value>undefined</value> , return Completion ( <id>completion</id> ).</step>
    <step>Let <id>innerResult</id> be Call ( <id>return</id> , <id>iterator</id> , « »).</step>
    <step>If <id>completion</id> .[[Type]] is <value>throw</value> , return Completion ( <id>completion</id> ).</step>
    <step>If <id>innerResult</id> .[[Type]] is <value>throw</value> , return Completion ( <id>innerResult</id> ).</step>
    <step>If Type ( <id>innerResult</id> .[[Value]]) is not Object, throw a <value>TypeError</value> exception.</step>
    <step>Return Completion ( <id>completion</id> ).</step>
  </step-list>
</algorithm>