["Assert", ":", {
  "id": "exemplar"
}, "is", "an", "Object", "that", "has", "[", "[", "TypedArrayName", "]", "]", "and", "[", "[", "ContentType", "]", "]", "internal", "slots", ".", {
  "k": 0
}, "Let", {
  "id": "defaultConstructor"
}, "be", "the", "intrinsic", "object", "listed", "in", "column", "one", "of", {
  "link": ""
}, "for", {
  "id": "exemplar"
}, ".", "[", "[", "TypedArrayName", "]", "]", ".", {
  "k": 1
}, "Let", {
  "id": "constructor"
}, "be", "?", "SpeciesConstructor", "(", {
  "id": "exemplar"
}, ",", {
  "id": "defaultConstructor"
}, ")", ".", {
  "k": 2
}, "Let", {
  "id": "result"
}, "be", "?", "TypedArrayCreate", "(", {
  "id": "constructor"
}, ",", {
  "id": "argumentList"
}, ")", ".", {
  "k": 3
}, "Assert", ":", {
  "id": "result"
}, "has", "[", "[", "TypedArrayName", "]", "]", "and", "[", "[", "ContentType", "]", "]", "internal", "slots", ".", {
  "k": 4
}, "If", {
  "id": "result"
}, ".", "[", "[", "ContentType", "]", "]", "â‰ ", {
  "id": "exemplar"
}, ".", "[", "[", "ContentType", "]", "]", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 5
}, "Return", {
  "id": "result"
}, ".", {
  "k": 6
}]