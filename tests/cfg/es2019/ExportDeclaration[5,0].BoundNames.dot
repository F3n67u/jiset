digraph {
  node10655 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return declarationNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10650 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10652 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let declarationNames = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10651 [shape=cds, label=<<font color="black">0:access __x0__ = (HoistableDeclaration &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10653 [shape=diamond, label=<<font color="black">(! (contains declarationNames &quot;*default*&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10649 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10654 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append &quot;*default*&quot; -&gt; declarationNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10654 -> node10655 [ color="black"]
  node10649 -> node10651 [ color="black"]
  node10655 -> node10650 [ color="black"]
  node10651 -> node10652 [ color="black"]
  node10653 -> node10654 [label=<<font color="black">true</font>> color="black"]
  node10653 -> node10655 [label=<<font color="black">false</font>> color="black"]
  node10652 -> node10653 [ color="black"]
}
