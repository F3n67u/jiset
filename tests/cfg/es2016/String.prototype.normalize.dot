digraph {
  node12062 [shape=cds, label=<<font color="black">3:app __x2__ = (ToString form)</font>> color="black" fillcolor="white" style=filled]
  node12065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12058 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let f = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12059 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12053 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12064 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (= f &quot;NFC&quot;) (= f &quot;NFD&quot;)) (= f &quot;NFKC&quot;)) (= f &quot;NFKD&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node12060 [shape=diamond, label=<<font color="black">(|| (= form absent) (= form undefined))</font>> color="black" fillcolor="white" style=filled]
  node12056 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12054 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12055 [shape=cds, label=<<font color="black">app form = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12057 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12066 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{ns} be the String value that is the result of normalizing id:{S} into the normalization form named by id:{f} as specified in &lt; a href = \&quot; http : / / www . unicode . org / reports / tr15 / tr15 - 29 . html \&quot; &gt; http : / / www . unicode . org / reports / tr15 / tr15 - 29 . html &lt; / a &gt; .&quot;</td></tr>
      <tr><td align="left">6:return ns</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12061 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let form = &quot;NFC&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12062 -> node12063 [ color="black"]
  node12064 -> node12065 [label=<<font color="black">true</font>> color="black"]
  node12064 -> node12066 [label=<<font color="black">false</font>> color="black"]
  node12063 -> node12064 [ color="black"]
  node12061 -> node12062 [ color="black"]
  node12056 -> node12057 [ color="black"]
  node12055 -> node12056 [ color="black"]
  node12057 -> node12058 [ color="black"]
  node12066 -> node12054 [ color="black"]
  node12053 -> node12055 [ color="black"]
  node12060 -> node12061 [label=<<font color="black">true</font>> color="black"]
  node12060 -> node12062 [label=<<font color="black">false</font>> color="black"]
  node12065 -> node12066 [ color="black"]
  node12058 -> node12059 [ color="black"]
  node12059 -> node12060 [ color="black"]
}
