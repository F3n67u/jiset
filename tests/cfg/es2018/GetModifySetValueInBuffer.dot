digraph {
  node16513 [shape=cds, label=<<font color="black">15:app __x3__ = (RawBytesToNumber type rawBytesRead isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16508 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Number)</td></tr>
      <tr><td align="left">4:let block = arrayBuffer.ArrayBufferData</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{elementSize} be the Number value of the Element Size value specified in link:{unhandled: table-49} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rawBytes = __x2__</td></tr>
      <tr><td align="left">8:let execution = GLOBAL_agent.CandidateExecution</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{eventList} be the [ [ EventList ] ] field of the element in id:{execution} . [ [ EventLists ] ] whose [ [ AgentSignifier ] ] is AgentSignifier ( ) .&quot;</td></tr>
      <tr><td align="left">10:??? &quot;Let id:{rawBytesRead} be a List of length id:{elementSize} of nondeterministically chosen byte values .&quot;</td></tr>
      <tr><td align="left">12:let rmwEvent = (new ReadModifyWriteSharedMemory(&quot;Order&quot; -&gt; &quot;SeqCst&quot;, &quot;NoTear&quot; -&gt; true, &quot;Block&quot; -&gt; block, &quot;ByteIndex&quot; -&gt; byteIndex, &quot;ElementSize&quot; -&gt; elementSize, &quot;Payload&quot; -&gt; rawBytes, &quot;ModifyOp&quot; -&gt; op))</td></tr>
      <tr><td align="left">13:append rmwEvent -&gt; eventList</td></tr>
      <tr><td align="left">14:append (new ChosenValueRecord(&quot;Event&quot; -&gt; rmwEvent, &quot;ChosenValue&quot; -&gt; rawBytesRead)) -&gt; execution.ChosenValues</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16504 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16509 [shape=diamond, label=<<font color="black">(= isLittleEndian absent)</font>> color="black" fillcolor="white" style=filled]
  node16505 [shape=cds, label=<<font color="black">0:app __x0__ = (IsSharedArrayBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node16503 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">isLittleEndian = GLOBAL_agent.LittleEndian</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16506 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16507 [shape=cds, label=<<font color="black">3:app __x1__ = (Type value)</font>> color="black" fillcolor="white" style=filled]
  node16511 [shape=cds, label=<<font color="black">7:app __x2__ = (NumberToRawBytes type value isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node16511 -> node16512 [ color="black"]
  node16507 -> node16508 [ color="black"]
  node16514 -> node16504 [ color="black"]
  node16509 -> node16510 [label=<<font color="black">true</font>> color="black"]
  node16509 -> node16511 [label=<<font color="black">false</font>> color="black"]
  node16512 -> node16513 [ color="black"]
  node16503 -> node16505 [ color="black"]
  node16513 -> node16514 [ color="black"]
  node16508 -> node16509 [ color="black"]
  node16510 -> node16511 [ color="black"]
  node16506 -> node16507 [ color="black"]
  node16505 -> node16506 [ color="black"]
}
