digraph {
  node10431 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10433 [shape=cds, label=<<font color="black">8:app __x3__ = (module.ResolveExport module name (new []))</font>> color="black" fillcolor="white" style=filled]
  node10427 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (! (= module.Status &quot;uninstantiated&quot;))</td></tr>
      <tr><td align="left">3:let namespace = module.Namespace</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10437 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10426 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10438 [shape=cds, label=<<font color="black">10:app __x4__ = (ModuleNamespaceCreate module unambiguousNames)</font>> color="black" fillcolor="white" style=filled]
  node10429 [shape=cds, label=<<font color="black">5:app __x0__ = (module.GetExportedNames module (new []))</font>> color="black" fillcolor="white" style=filled]
  node10439 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:namespace = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10428 [shape=diamond, label=<<font color="black">(= namespace undefined)</font>> color="black" fillcolor="white" style=filled]
  node10440 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return namespace</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10434 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let resolution = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10430 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let exportedNames = [? __x0__]</td></tr>
      <tr><td align="left">6:let unambiguousNames = (new [])</td></tr>
      <tr><td align="left">7:let __x1__ = exportedNames</td></tr>
      <tr><td align="left">7:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10425 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10435 [shape=diamond, label=<<font color="black">(= (typeof resolution) &quot;ResolvedBindingRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10436 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append name -&gt; unambiguousNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10432 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10438 -> node10439 [ color="black"]
  node10428 -> node10429 [label=<<font color="black">true</font>> color="black"]
  node10428 -> node10440 [label=<<font color="black">false</font>> color="black"]
  node10430 -> node10431 [ color="black"]
  node10435 -> node10436 [label=<<font color="black">true</font>> color="black"]
  node10435 -> node10437 [label=<<font color="black">false</font>> color="black"]
  node10436 -> node10437 [ color="black"]
  node10433 -> node10434 [ color="black"]
  node10437 -> node10431 [ color="black"]
  node10429 -> node10430 [ color="black"]
  node10425 -> node10427 [ color="black"]
  node10427 -> node10428 [ color="black"]
  node10431 -> node10432 [label=<<font color="black">true</font>> color="black"]
  node10431 -> node10438 [label=<<font color="black">false</font>> color="black"]
  node10439 -> node10440 [ color="black"]
  node10434 -> node10435 [ color="black"]
  node10432 -> node10433 [ color="black"]
  node10440 -> node10426 [ color="black"]
}
