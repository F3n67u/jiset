{
  if (= (typeof ref) "ReferenceRecord") {
    app __x0__ = (IsPropertyReference ref)
    if (= __x0__ true) {
      app __x1__ = (GetThisValue ref)
      let thisValue = __x1__
    } else {
      let refEnv = ref.Base
      app __x2__ = (refEnv.WithBaseObject refEnv)
      let thisValue = __x2__
    }
  } else let thisValue = undefined
  access __x3__ = (arguments "ArgumentListEvaluation")
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let argList = __x3__
  app __x4__ = (Type func)
  if (! (= __x4__ Object)) {
    app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x5__
  } else {}
  app __x6__ = (IsCallable func)
  if (= __x6__ false) {
    app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x7__
  } else {}
  if (= tailPosition true) {
    app __x8__ = (PrepareForTailCall )
    __x8__
  } else {}
  app __x9__ = (Call func thisValue argList)
  let result = __x9__
  app __x10__ = (WrapCompletion result)
  return __x10__
}