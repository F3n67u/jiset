digraph {
  node11029 [shape=cds, label=<<font color="black">1:access __x0__ = (VariableStatement &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11032 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let name = __x1__[__x2__]</td></tr>
      <tr><td align="left">3:append (new ExportEntryRecord(&quot;ModuleRequest&quot; -&gt; null, &quot;ImportName&quot; -&gt; null, &quot;LocalName&quot; -&gt; name, &quot;ExportName&quot; -&gt; name)) -&gt; entries</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11026 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11031 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node11033 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return entries</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11030 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let names = __x0__</td></tr>
      <tr><td align="left">2:let __x1__ = names</td></tr>
      <tr><td align="left">2:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11027 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11028 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let entries = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11032 -> node11031 [ color="black"]
  node11033 -> node11027 [ color="black"]
  node11028 -> node11029 [ color="black"]
  node11026 -> node11028 [ color="black"]
  node11029 -> node11030 [ color="black"]
  node11031 -> node11032 [label=<<font color="black">true</font>> color="black"]
  node11031 -> node11033 [label=<<font color="black">false</font>> color="black"]
  node11030 -> node11031 [ color="black"]
}
