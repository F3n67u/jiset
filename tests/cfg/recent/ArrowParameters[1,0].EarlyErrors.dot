digraph {
  node20722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20721 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node20720 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;All early error rules for nt:{ArrowFormalParameters} and its derived productions also apply to CoveredFormalsList of nt:{CoverParenthesizedExpressionAndArrowParameterList} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20717 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node20718 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20723 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20719 [shape=diamond, label=<<font color="black">(= absent (parse-syntax CoverParenthesizedExpressionAndArrowParameterList &quot;ArrowFormalParameters&quot; (new [])))</font>> color="black" fillcolor="white" style=filled]
  node20716 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node20722 -> node20724 [ color="black"]
  node20718 -> node20719 [ color="black"]
  node20719 -> node20720 [label=<<font color="black">true</font>> color="black"]
  node20719 -> node20721 [label=<<font color="black">false</font>> color="black"]
  node20721 -> node20722 [label=<<font color="black">true</font>> color="black"]
  node20721 -> node20723 [label=<<font color="black">false</font>> color="black"]
  node20716 -> node20718 [ color="black"]
  node20723 -> node20724 [ color="black"]
  node20724 -> node20717 [ color="black"]
  node20720 -> node20721 [ color="black"]
}
