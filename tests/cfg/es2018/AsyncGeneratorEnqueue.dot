digraph {
  node17143 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:[! __x2__]</td></tr>
      <tr><td align="left">5:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17132 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17136 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (is-completion completion)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17139 [shape=cds, label=<<font color="black">2:app __x1__ = (Type generator)</font>> color="black" fillcolor="white" style=filled]
  node17146 [shape=cds, label=<<font color="black">11:app __x3__ = (AsyncGeneratorResumeNext generator)</font>> color="black" fillcolor="white" style=filled]
  node17142 [shape=cds, label=<<font color="black">4:app __x2__ = (Call promiseCapability.Reject undefined (new [badGeneratorError]))</font>> color="black" fillcolor="white" style=filled]
  node17133 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17138 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17141 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let badGeneratorError = ??? &quot;TypeError&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17137 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node17147 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17148 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17140 [shape=diamond, label=<<font color="black">(|| (! (= __x1__ Object)) (= generator.AsyncGeneratorState absent))</font>> color="black" fillcolor="white" style=filled]
  node17135 [shape=cds, label=<<font color="black">app completion = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17145 [shape=diamond, label=<<font color="black">(! (= state &quot;executing&quot;))</font>> color="black" fillcolor="white" style=filled]
  node17144 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let queue = generator.AsyncGeneratorQueue</td></tr>
      <tr><td align="left">7:let request = (new AsyncGeneratorRequest(&quot;Completion&quot; -&gt; completion, &quot;Capability&quot; -&gt; promiseCapability))</td></tr>
      <tr><td align="left">8:append request -&gt; queue</td></tr>
      <tr><td align="left">9:let state = generator.AsyncGeneratorState</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17134 [shape=cds, label=<<font color="black">app generator = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17147 -> node17148 [ color="black"]
  node17139 -> node17140 [ color="black"]
  node17145 -> node17146 [label=<<font color="black">true</font>> color="black"]
  node17145 -> node17148 [label=<<font color="black">false</font>> color="black"]
  node17135 -> node17136 [ color="black"]
  node17132 -> node17134 [ color="black"]
  node17144 -> node17145 [ color="black"]
  node17146 -> node17147 [ color="black"]
  node17141 -> node17142 [ color="black"]
  node17140 -> node17141 [label=<<font color="black">true</font>> color="black"]
  node17140 -> node17144 [label=<<font color="black">false</font>> color="black"]
  node17136 -> node17137 [ color="black"]
  node17134 -> node17135 [ color="black"]
  node17138 -> node17139 [ color="black"]
  node17142 -> node17143 [ color="black"]
  node17148 -> node17133 [ color="black"]
  node17137 -> node17138 [ color="black"]
  node17143 -> node17144 [ color="black"]
}
