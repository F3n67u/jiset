digraph {
  node16972 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (= (typeof R) &quot;ReadSharedMemory&quot;) (= (typeof R) &quot;ReadModifyWriteSharedMemory&quot;))</td></tr>
      <tr><td align="left">1:??? &quot;Let reads - bytes - from be id:{execution} . [ [ ReadsBytesFrom ] ] .&quot;</td></tr>
      <tr><td align="left">2:??? &quot;Let id:{Ws} be reads - bytes - from ( id:{R} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16973 [shape=cds, label=<<font color="black">4:app __x0__ = (ComposeWriteEventBytes execution R.ByteIndex Ws)</font>> color="black" fillcolor="white" style=filled]
  node16970 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16974 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16971 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16970 -> node16972 [ color="black"]
  node16972 -> node16973 [ color="black"]
  node16973 -> node16974 [ color="black"]
  node16974 -> node16971 [ color="black"]
}
