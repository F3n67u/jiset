digraph {
  node13993 [shape=cds, label=<<font color="black">36:app __x10__ = (CreateDataProperty A &quot;input&quot; S)</font>> color="black" fillcolor="white" style=filled]
  node14007 [shape=cds, label=<<font color="black">app __x15__ = (CreateDataProperty A [! __x14__] capturedValue)</font>> color="black" fillcolor="white" style=filled]
  node13987 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:[? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13976 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node13964 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13979 [shape=cds, label=<<font color="black">21:app __x6__ = (AdvanceStringIndex S lastIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node13995 [shape=cds, label=<<font color="black">38:app __x11__ = (CreateDataProperty A &quot;0&quot; matchedSubstr)</font>> color="black" fillcolor="white" style=filled]
  node13980 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:lastIndex = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13963 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13985 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node13954 [shape=diamond, label=<<font color="black">(contains flags &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13977 [shape=cds, label=<<font color="black">19:app __x5__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node13950 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ String)</td></tr>
      <tr><td align="left">2:let length = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13955 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13982 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let e = r.endIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13960 [shape=diamond, label=<<font color="black">(&amp;&amp; (= global false) (= sticky false))</font>> color="black" fillcolor="white" style=filled]
  node13975 [shape=diamond, label=<<font color="black">(= r CONST_failure)</font>> color="black" fillcolor="white" style=filled]
  node13965 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13970 [shape=cds, label=<<font color="black">14:app __x3__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node13997 [shape=cds, label=<<font color="black">43:app __x12__ = (CreateDataProperty A &quot;groups&quot; groups)</font>> color="black" fillcolor="white" style=filled]
  node14002 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13961 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">lastIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13992 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14004 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{capturedValue} be the String value whose code units are the UTF16Encoding of the code points of id:{captureI} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13956 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13949 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node13971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14000 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{captureI} be id:{i} sup:{th} element of id:{r} ' s id:{captures} List .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13981 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">matchSucceeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13996 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:[! __x11__]</td></tr>
      <tr><td align="left">39:??? &quot;If id:{R} contains any nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">41:??? &quot;Else , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14008 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[! __x15__]</td></tr>
      <tr><td align="left">??? &quot;If the id:{i} th capture of id:{R} was defined with a nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13968 [shape=diamond, label=<<font color="black">(&lt; length lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14003 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node13989 [shape=cds, label=<<font color="black">33:app __x8__ = (ArrayCreate (+ n 1i))</font>> color="black" fillcolor="white" style=filled]
  node13947 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13988 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:??? &quot;Let id:{n} be the number of elements in id:{r} ' s id:{captures} List . ( This is the same value as link:{unhandled: sec-notation} ' s id:{NcapturingParens} . )&quot;</td></tr>
      <tr><td align="left">32:assert (&lt; n (- (** 2.0 32i) 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13973 [shape=cds, label=<<font color="black">16:app __x4__ = (matcher S lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node13972 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13999 [shape=diamond, label=<<font color="black">(&lt; i __x13__)</font>> color="black" fillcolor="white" style=filled]
  node13952 [shape=cds, label=<<font color="black">3:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node13953 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let lastIndex = [? __x2__]</td></tr>
      <tr><td align="left">4:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13984 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:??? &quot;id:{e} is an index into the id:{Input} character list , derived from id:{S} , matched by id:{matcher} . Let id:{eUTF} be the smallest index into id:{S} that corresponds to the character at element id:{e} of id:{Input} . If id:{e} is greater than or equal to the number of elements in id:{Input} , then id:{eUTF} is the number of code units in id:{S} .&quot;</td></tr>
      <tr><td align="left">28:e = eUTF</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13958 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13967 [shape=diamond, label=<<font color="black">(= matchSucceeded false)</font>> color="black" fillcolor="white" style=filled]
  node13990 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let A = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13957 [shape=diamond, label=<<font color="black">(contains flags &quot;y&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13948 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13978 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x5__]</td></tr>
      <tr><td align="left">20:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14005 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = captureI</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13983 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node13951 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13994 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:[! __x10__]</td></tr>
      <tr><td align="left">37:??? &quot;Let id:{matchedSubstr} be the matched substring ( i . e . the portion of id:{S} between offset id:{lastIndex} inclusive and offset id:{e} exclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13974 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let r = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14009 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">57:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13959 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13969 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node13998 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:[! __x12__]</td></tr>
      <tr><td align="left">44:let i = (+ 0i 1i)</td></tr>
      <tr><td align="left">44:let __x13__ = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13991 [shape=cds, label=<<font color="black">35:app __x9__ = (CreateDataProperty A &quot;index&quot; lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node13986 [shape=cds, label=<<font color="black">30:app __x7__ = (Set R &quot;lastIndex&quot; e true)</font>> color="black" fillcolor="white" style=filled]
  node14001 [shape=diamond, label=<<font color="black">(= captureI undefined)</font>> color="black" fillcolor="white" style=filled]
  node13966 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let matchSucceeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14006 [shape=cds, label=<<font color="black">app __x14__ = (ToString i)</font>> color="black" fillcolor="white" style=filled]
  node13962 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let matcher = R.RegExpMatcher</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13962 -> node13963 [ color="black"]
  node13949 -> node13950 [ color="black"]
  node13967 -> node13968 [label=<<font color="black">true</font>> color="black"]
  node13967 -> node13982 [label=<<font color="black">false</font>> color="black"]
  node13999 -> node14000 [label=<<font color="black">true</font>> color="black"]
  node13999 -> node14009 [label=<<font color="black">false</font>> color="black"]
  node13985 -> node13986 [label=<<font color="black">true</font>> color="black"]
  node13985 -> node13988 [label=<<font color="black">false</font>> color="black"]
  node13976 -> node13977 [label=<<font color="black">true</font>> color="black"]
  node13976 -> node13979 [label=<<font color="black">false</font>> color="black"]
  node13991 -> node13992 [ color="black"]
  node13981 -> node13967 [ color="black"]
  node13983 -> node13984 [label=<<font color="black">true</font>> color="black"]
  node13983 -> node13985 [label=<<font color="black">false</font>> color="black"]
  node14002 -> node14006 [ color="black"]
  node13975 -> node13976 [label=<<font color="black">true</font>> color="black"]
  node13975 -> node13981 [label=<<font color="black">false</font>> color="black"]
  node13958 -> node13960 [ color="black"]
  node13968 -> node13969 [label=<<font color="black">true</font>> color="black"]
  node13968 -> node13973 [label=<<font color="black">false</font>> color="black"]
  node13951 -> node13952 [ color="black"]
  node14007 -> node14008 [ color="black"]
  node13993 -> node13994 [ color="black"]
  node13982 -> node13983 [ color="black"]
  node13996 -> node13997 [ color="black"]
  node13971 -> node13972 [ color="black"]
  node13973 -> node13974 [ color="black"]
  node14000 -> node14001 [ color="black"]
  node13960 -> node13961 [label=<<font color="black">true</font>> color="black"]
  node13960 -> node13962 [label=<<font color="black">false</font>> color="black"]
  node13966 -> node13967 [ color="black"]
  node13990 -> node13991 [ color="black"]
  node13980 -> node13967 [ color="black"]
  node13969 -> node13970 [label=<<font color="black">true</font>> color="black"]
  node13969 -> node13972 [label=<<font color="black">false</font>> color="black"]
  node13955 -> node13957 [ color="black"]
  node14009 -> node13948 [ color="black"]
  node13947 -> node13949 [ color="black"]
  node13972 -> node13973 [ color="black"]
  node13987 -> node13988 [ color="black"]
  node13964 -> node13966 [ color="black"]
  node13988 -> node13989 [ color="black"]
  node13965 -> node13966 [ color="black"]
  node13995 -> node13996 [ color="black"]
  node14004 -> node14006 [ color="black"]
  node14003 -> node14004 [label=<<font color="black">true</font>> color="black"]
  node14003 -> node14005 [label=<<font color="black">false</font>> color="black"]
  node13977 -> node13978 [ color="black"]
  node13959 -> node13960 [ color="black"]
  node14001 -> node14002 [label=<<font color="black">true</font>> color="black"]
  node14001 -> node14003 [label=<<font color="black">false</font>> color="black"]
  node13978 -> node13979 [ color="black"]
  node13997 -> node13998 [ color="black"]
  node13994 -> node13995 [ color="black"]
  node14005 -> node14006 [ color="black"]
  node14006 -> node14007 [ color="black"]
  node13954 -> node13955 [label=<<font color="black">true</font>> color="black"]
  node13954 -> node13956 [label=<<font color="black">false</font>> color="black"]
  node13950 -> node13951 [ color="black"]
  node13956 -> node13957 [ color="black"]
  node14008 -> node13999 [ color="black"]
  node13952 -> node13953 [ color="black"]
  node13961 -> node13962 [ color="black"]
  node13970 -> node13971 [ color="black"]
  node13957 -> node13958 [label=<<font color="black">true</font>> color="black"]
  node13957 -> node13959 [label=<<font color="black">false</font>> color="black"]
  node13979 -> node13980 [ color="black"]
  node13992 -> node13993 [ color="black"]
  node13998 -> node13999 [ color="black"]
  node13989 -> node13990 [ color="black"]
  node13963 -> node13964 [label=<<font color="black">true</font>> color="black"]
  node13963 -> node13965 [label=<<font color="black">false</font>> color="black"]
  node13986 -> node13987 [ color="black"]
  node13984 -> node13985 [ color="black"]
  node13974 -> node13975 [ color="black"]
  node13953 -> node13954 [ color="black"]
}
