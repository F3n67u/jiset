{
  [0] access __x0__ = (GLOBAL_context "LexicalEnvironment")
  [0] let scope = __x0__
  [1] app __x1__ = (OrdinaryFunctionCreate INTRINSIC_AsyncGenerator FormalParameters AsyncGeneratorBody CONST_nonDASHlexicalDASHthis scope)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [33] {}
  [1] let closure = __x1__
  [2] ??? "Let id:{prototype} be ! OrdinaryObjectCreate ( % AsyncGenerator . prototype % ) ."
  [3] app __x2__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  [3] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [33] {}
  [3] __x2__
  [4] closure.SourceText = (get-syntax AsyncGeneratorExpression)
  [5] app __x3__ = (WrapCompletion closure)
  [5] return __x3__
}