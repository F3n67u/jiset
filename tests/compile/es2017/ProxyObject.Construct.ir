{
  [0] let handler = O.ProxyHandler
  [1] if (= handler null) {
    app __x0__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x0__
  } else [11] {}
  [2] app __x1__ = (Type handler)
  [2] assert (= __x1__ Object)
  [3] let target = O.ProxyTarget
  [4] app __x2__ = (GetMethod handler "construct")
  [4] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [11] {}
  [4] let trap = __x2__
  [5] if (= trap undefined) {
    [6] assert (! (= target.Construct absent))
    [7] app __x3__ = (Construct target argumentsList newTarget)
    [7] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [11] {}
    [7] app __x4__ = (WrapCompletion __x3__)
    [7] return __x4__
  } else [11] {}
  [8] app __x5__ = (CreateArrayFromList argumentsList)
  [8] let argArray = __x5__
  [9] app __x6__ = (Call trap handler (new [target, argArray, newTarget]))
  [9] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [11] {}
  [9] let newObj = __x6__
  [10] app __x7__ = (Type newObj)
  [10] if (! (= __x7__ Object)) {
    app __x8__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x8__
  } else [11] {}
  [11] app __x9__ = (WrapCompletion newObj)
  [11] return __x9__
}