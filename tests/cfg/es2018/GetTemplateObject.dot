digraph {
  node3858 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:__x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3848 [shape=diamond, label=<<font color="black">(&lt; index count)</font>> color="black" fillcolor="white" style=filled]
  node3836 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3840 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node3851 [shape=cds, label=<<font color="black">15:app __x7__ = (template.DefineOwnProperty template prop (new PropertyDescriptor(&quot;Value&quot; -&gt; cookedValue, &quot;Writable&quot; -&gt; false, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node3846 [shape=cds, label=<<font color="black">10:app __x5__ = (ArrayCreate count)</font>> color="black" fillcolor="white" style=filled]
  node3839 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let rawStrings = __x0__</td></tr>
      <tr><td align="left">1:let realm = REALM</td></tr>
      <tr><td align="left">2:let templateRegistry = realm.TemplateMap</td></tr>
      <tr><td align="left">3:let __x1__ = templateRegistry</td></tr>
      <tr><td align="left">3:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3838 [shape=cds, label=<<font color="black">0:access __x0__ = (templateLiteral &quot;TemplateStrings&quot; true)</font>> color="black" fillcolor="white" style=filled]
  node3849 [shape=cds, label=<<font color="black">13:app __x6__ = (ToString index)</font>> color="black" fillcolor="white" style=filled]
  node3842 [shape=cds, label=<<font color="black">6:access __x3__ = (templateLiteral &quot;TemplateStrings&quot; false)</font>> color="black" fillcolor="white" style=filled]
  node3859 [shape=cds, label=<<font color="black">21:app __x11__ = (SetIntegrityLevel template &quot;frozen&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3844 [shape=cds, label=<<font color="black">9:app __x4__ = (ArrayCreate count)</font>> color="black" fillcolor="white" style=filled]
  node3854 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:__x8__</td></tr>
      <tr><td align="left">18:let index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3845 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let template = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3855 [shape=cds, label=<<font color="black">19:app __x9__ = (SetIntegrityLevel rawObj &quot;frozen&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3857 [shape=cds, label=<<font color="black">20:app __x10__ = (template.DefineOwnProperty template &quot;raw&quot; (new PropertyDescriptor(&quot;Value&quot; -&gt; rawObj, &quot;Writable&quot; -&gt; false, &quot;Enumerable&quot; -&gt; false, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node3852 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:__x7__</td></tr>
      <tr><td align="left">16:let rawValue = rawStrings[index]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3856 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:__x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3841 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x1__[__x2__]</td></tr>
      <tr><td align="left">4:??? &quot;If id:{e} . [ [ Site ] ] is the same Parse Node as id:{templateLiteral} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3847 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let rawObj = [! __x5__]</td></tr>
      <tr><td align="left">11:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3853 [shape=cds, label=<<font color="black">17:app __x8__ = (rawObj.DefineOwnProperty rawObj prop (new PropertyDescriptor(&quot;Value&quot; -&gt; rawValue, &quot;Writable&quot; -&gt; false, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; false)))</font>> color="black" fillcolor="white" style=filled]
  node3860 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:__x11__</td></tr>
      <tr><td align="left">22:append (new Record(&quot;Site&quot; -&gt; templateLiteral, &quot;Array&quot; -&gt; template)) -&gt; templateRegistry</td></tr>
      <tr><td align="left">23:return template</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3837 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3850 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let prop = [! __x6__]</td></tr>
      <tr><td align="left">14:let cookedValue = cookedStrings[index]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3843 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let cookedStrings = __x3__</td></tr>
      <tr><td align="left">7:let count = cookedStrings.length</td></tr>
      <tr><td align="left">8:assert (! (&lt; (- (** 2.0 32i) 1i) count))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3836 -> node3838 [ color="black"]
  node3851 -> node3852 [ color="black"]
  node3840 -> node3841 [label=<<font color="black">true</font>> color="black"]
  node3840 -> node3842 [label=<<font color="black">false</font>> color="black"]
  node3841 -> node3840 [ color="black"]
  node3844 -> node3845 [ color="black"]
  node3856 -> node3857 [ color="black"]
  node3858 -> node3859 [ color="black"]
  node3846 -> node3847 [ color="black"]
  node3848 -> node3849 [label=<<font color="black">true</font>> color="black"]
  node3848 -> node3855 [label=<<font color="black">false</font>> color="black"]
  node3853 -> node3854 [ color="black"]
  node3850 -> node3851 [ color="black"]
  node3847 -> node3848 [ color="black"]
  node3843 -> node3844 [ color="black"]
  node3860 -> node3837 [ color="black"]
  node3857 -> node3858 [ color="black"]
  node3859 -> node3860 [ color="black"]
  node3855 -> node3856 [ color="black"]
  node3854 -> node3848 [ color="black"]
  node3852 -> node3853 [ color="black"]
  node3849 -> node3850 [ color="black"]
  node3845 -> node3846 [ color="black"]
  node3838 -> node3839 [ color="black"]
  node3842 -> node3843 [ color="black"]
  node3839 -> node3840 [ color="black"]
}
