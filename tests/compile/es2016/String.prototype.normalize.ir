{
  app form = (GetArgument argumentsList 0i)
  [0] app __x0__ = (RequireObjectCoercible this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [2] {}
  [0] let O = __x0__
  [1] app __x1__ = (ToString O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [2] {}
  [1] let S = __x1__
  [2] if (|| (= form absent) (= form undefined)) let form = "NFC" else [2] {}
  [3] app __x2__ = (ToString form)
  [3] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [2] {}
  [3] let f = __x2__
  [4] if (! (|| (|| (|| (= f "NFC") (= f "NFD")) (= f "NFKC")) (= f "NFKD"))) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else [2] {}
  [5] ??? "Let id:{ns} be the String value that is the result of normalizing id:{S} into the normalization form named by id:{f} as specified in < a href = \" http : / / www . unicode . org / reports / tr15 / tr15 - 29 . html \" > http : / / www . unicode . org / reports / tr15 / tr15 - 29 . html < / a > ."
  [6] app __x4__ = (WrapCompletion ns)
  [6] return __x4__
}