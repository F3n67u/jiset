digraph {
  node518 [shape=cds, label=<<font color="black">9:app __x2__ = (Call exoticToPrim input (new [hint]))</font>> color="black" fillcolor="white" style=filled]
  node514 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let hint = &quot;default&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node512 [shape=diamond, label=<<font color="black">(! (= exoticToPrim undefined))</font>> color="black" fillcolor="white" style=filled]
  node522 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node519 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let result = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node526 [shape=cds, label=<<font color="black">13:app __x4__ = (OrdinaryToPrimitive input preferredType)</font>> color="black" fillcolor="white" style=filled]
  node515 [shape=diamond, label=<<font color="black">(= preferredType CONST_string)</font>> color="black" fillcolor="white" style=filled]
  node508 [shape=cds, label=<<font color="black">1:app __x0__ = (Type input)</font>> color="black" fillcolor="white" style=filled]
  node513 [shape=diamond, label=<<font color="black">(= preferredType absent)</font>> color="black" fillcolor="white" style=filled]
  node509 [shape=diamond, label=<<font color="black">(= __x0__ Object)</font>> color="black" fillcolor="white" style=filled]
  node520 [shape=cds, label=<<font color="black">10:app __x3__ = (Type result)</font>> color="black" fillcolor="white" style=filled]
  node521 [shape=diamond, label=<<font color="black">(! (= __x3__ Object))</font>> color="black" fillcolor="white" style=filled]
  node516 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let hint = &quot;string&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node525 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let preferredType = CONST_number</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node524 [shape=diamond, label=<<font color="black">(= preferredType absent)</font>> color="black" fillcolor="white" style=filled]
  node517 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:assert (= preferredType CONST_number)</td></tr>
      <tr><td align="left">8:let hint = &quot;number&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node510 [shape=cds, label=<<font color="black">2:app __x1__ = (GetMethod input SYMBOL_toPrimitive)</font>> color="black" fillcolor="white" style=filled]
  node506 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node528 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return input</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node523 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node511 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let exoticToPrim = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node507 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node527 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node518 -> node519 [ color="black"]
  node526 -> node527 [ color="black"]
  node516 -> node518 [ color="black"]
  node509 -> node510 [label=<<font color="black">true</font>> color="black"]
  node509 -> node528 [label=<<font color="black">false</font>> color="black"]
  node520 -> node521 [ color="black"]
  node513 -> node514 [label=<<font color="black">true</font>> color="black"]
  node513 -> node515 [label=<<font color="black">false</font>> color="black"]
  node510 -> node511 [ color="black"]
  node522 -> node523 [ color="black"]
  node521 -> node522 [label=<<font color="black">true</font>> color="black"]
  node521 -> node523 [label=<<font color="black">false</font>> color="black"]
  node515 -> node516 [label=<<font color="black">true</font>> color="black"]
  node515 -> node517 [label=<<font color="black">false</font>> color="black"]
  node512 -> node513 [label=<<font color="black">true</font>> color="black"]
  node512 -> node524 [label=<<font color="black">false</font>> color="black"]
  node527 -> node528 [ color="black"]
  node506 -> node508 [ color="black"]
  node517 -> node518 [ color="black"]
  node523 -> node524 [ color="black"]
  node519 -> node520 [ color="black"]
  node511 -> node512 [ color="black"]
  node525 -> node526 [ color="black"]
  node514 -> node518 [ color="black"]
  node528 -> node507 [ color="black"]
  node524 -> node525 [label=<<font color="black">true</font>> color="black"]
  node524 -> node526 [label=<<font color="black">false</font>> color="black"]
  node508 -> node509 [ color="black"]
}
