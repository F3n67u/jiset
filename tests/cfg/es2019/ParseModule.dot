digraph {
  node10319 [shape=diamond, label=<<font color="black">(= ee.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10305 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let importEntries = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10309 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let exportEntries = __x3__</td></tr>
      <tr><td align="left">10:let __x4__ = exportEntries</td></tr>
      <tr><td align="left">10:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10303 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let requestedModules = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10313 [shape=diamond, label=<<font color="black">(! (contains importedBoundNames ee.LocalName))</font>> color="black" fillcolor="white" style=filled]
  node10318 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;Else this is a re - export of a single name , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10301 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;Parse id:{sourceText} using nt:{Module} as the goal symbol and analyse the parse result for any Early Error conditions . If the parse was successful and no early errors were found , let id:{body} be the resulting parse tree . Otherwise , let id:{body} be a List of one or more value:{SyntaxError} or value:{ReferenceError} objects representing the parsing errors and / or early errors . Parsing and early error detection may be interweaved in an implementation - dependent manner . If more than one parsing error or early error is present , the number and ordering of error objects in the list is implementation - dependent , but at least one must be present .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let importedBoundNames = __x2__</td></tr>
      <tr><td align="left">6:let indirectExportEntries = (new [])</td></tr>
      <tr><td align="left">7:let localExportEntries = (new [])</td></tr>
      <tr><td align="left">8:let starExportEntries = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10315 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:??? &quot;Let id:{ie} be the element of id:{importEntries} whose [ [ LocalName ] ] is the same as id:{ee} . [ [ LocalName ] ] .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10312 [shape=diamond, label=<<font color="black">(= ee.ModuleRequest null)</font>> color="black" fillcolor="white" style=filled]
  node10299 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10314 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append ee -&gt; localExportEntries</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10306 [shape=cds, label=<<font color="black">5:app __x2__ = (ImportedLocalNames importEntries)</font>> color="black" fillcolor="white" style=filled]
  node10302 [shape=cds, label=<<font color="black">3:access __x0__ = (body &quot;ModuleRequests&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10310 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node10321 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append ee -&gt; indirectExportEntries</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10317 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append ee -&gt; localExportEntries</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10316 [shape=diamond, label=<<font color="black">(= ie.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10311 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let ee = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10322 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10300 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10320 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append ee -&gt; starExportEntries</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10308 [shape=cds, label=<<font color="black">9:access __x3__ = (body &quot;ExportEntries&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10323 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:return (new SourceTextModuleRecord(&quot;Realm&quot; -&gt; realm, &quot;Environment&quot; -&gt; undefined, &quot;Namespace&quot; -&gt; undefined, &quot;Status&quot; -&gt; &quot;uninstantiated&quot;, &quot;EvaluationError&quot; -&gt; undefined, &quot;HostDefined&quot; -&gt; hostDefined, &quot;ECMAScriptCode&quot; -&gt; body, &quot;RequestedModules&quot; -&gt; requestedModules, &quot;ImportEntries&quot; -&gt; importEntries, &quot;LocalExportEntries&quot; -&gt; localExportEntries, &quot;IndirectExportEntries&quot; -&gt; indirectExportEntries, &quot;StarExportEntries&quot; -&gt; starExportEntries, &quot;DFSIndex&quot; -&gt; undefined, &quot;DFSAncestorIndex&quot; -&gt; undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10304 [shape=cds, label=<<font color="black">4:access __x1__ = (body &quot;ImportEntries&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10322 -> node10310 [ color="black"]
  node10307 -> node10308 [ color="black"]
  node10310 -> node10311 [label=<<font color="black">true</font>> color="black"]
  node10310 -> node10323 [label=<<font color="black">false</font>> color="black"]
  node10321 -> node10322 [ color="black"]
  node10313 -> node10314 [label=<<font color="black">true</font>> color="black"]
  node10313 -> node10315 [label=<<font color="black">false</font>> color="black"]
  node10315 -> node10316 [ color="black"]
  node10311 -> node10312 [ color="black"]
  node10320 -> node10322 [ color="black"]
  node10318 -> node10322 [ color="black"]
  node10312 -> node10313 [label=<<font color="black">true</font>> color="black"]
  node10312 -> node10319 [label=<<font color="black">false</font>> color="black"]
  node10302 -> node10303 [ color="black"]
  node10323 -> node10300 [ color="black"]
  node10304 -> node10305 [ color="black"]
  node10306 -> node10307 [ color="black"]
  node10305 -> node10306 [ color="black"]
  node10314 -> node10322 [ color="black"]
  node10316 -> node10317 [label=<<font color="black">true</font>> color="black"]
  node10316 -> node10318 [label=<<font color="black">false</font>> color="black"]
  node10303 -> node10304 [ color="black"]
  node10301 -> node10302 [ color="black"]
  node10299 -> node10301 [ color="black"]
  node10309 -> node10310 [ color="black"]
  node10317 -> node10318 [ color="black"]
  node10319 -> node10320 [label=<<font color="black">true</font>> color="black"]
  node10319 -> node10321 [label=<<font color="black">false</font>> color="black"]
  node10308 -> node10309 [ color="black"]
}
