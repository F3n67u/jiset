digraph {
  node18575 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18578 [shape=cds, label=<<font color="black">app __x0__ = (HostPromiseRejectionTracker promise &quot;reject&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18576 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= promise.PromiseState CONST_pending)</td></tr>
      <tr><td align="left">1:let reactions = promise.PromiseRejectReactions</td></tr>
      <tr><td align="left">2:promise.PromiseResult = reason</td></tr>
      <tr><td align="left">3:promise.PromiseFulfillReactions = undefined</td></tr>
      <tr><td align="left">4:promise.PromiseRejectReactions = undefined</td></tr>
      <tr><td align="left">5:promise.PromiseState = CONST_rejected</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18581 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18577 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node18580 [shape=cds, label=<<font color="black">7:app __x1__ = (TriggerPromiseReactions reactions reason)</font>> color="black" fillcolor="white" style=filled]
  node18574 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18579 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18576 -> node18577 [ color="black"]
  node18577 -> node18578 [label=<<font color="black">true</font>> color="black"]
  node18577 -> node18580 [label=<<font color="black">false</font>> color="black"]
  node18581 -> node18575 [ color="black"]
  node18579 -> node18580 [ color="black"]
  node18574 -> node18576 [ color="black"]
  node18580 -> node18581 [ color="black"]
  node18578 -> node18579 [ color="black"]
}
