digraph {
  node15720 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15723 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node15706 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15695 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15716 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15697 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15719 [shape=cds, label=<<font color="black">12:app __x6__ = (Call adder set (new [nextValue.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15721 [shape=cds, label=<<font color="black">13:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node15699 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_SetPrototype (new [&quot;SetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15705 [shape=cds, label=<<font color="black">5:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15722 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node15698 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15703 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node15712 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15710 [shape=cds, label=<<font color="black">7:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15702 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15714 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15707 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node15715 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15696 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15718 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15708 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15700 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.SetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15701 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node15713 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node15704 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15717 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15694 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15711 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15709 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15700 -> node15701 [ color="black"]
  node15724 -> node15712 [ color="black"]
  node15721 -> node15722 [ color="black"]
  node15697 -> node15698 [label=<<font color="black">true</font>> color="black"]
  node15697 -> node15699 [label=<<font color="black">false</font>> color="black"]
  node15708 -> node15709 [label=<<font color="black">true</font>> color="black"]
  node15708 -> node15710 [label=<<font color="black">false</font>> color="black"]
  node15702 -> node15703 [ color="black"]
  node15715 -> node15716 [label=<<font color="black">true</font>> color="black"]
  node15715 -> node15717 [label=<<font color="black">false</font>> color="black"]
  node15716 -> node15717 [ color="black"]
  node15699 -> node15700 [ color="black"]
  node15713 -> node15714 [ color="black"]
  node15711 -> node15712 [ color="black"]
  node15701 -> node15702 [label=<<font color="black">true</font>> color="black"]
  node15701 -> node15703 [label=<<font color="black">false</font>> color="black"]
  node15705 -> node15706 [ color="black"]
  node15710 -> node15711 [ color="black"]
  node15694 -> node15696 [ color="black"]
  node15720 -> node15721 [ color="black"]
  node15696 -> node15697 [ color="black"]
  node15706 -> node15707 [ color="black"]
  node15704 -> node15705 [ color="black"]
  node15709 -> node15710 [ color="black"]
  node15722 -> node15723 [label=<<font color="black">true</font>> color="black"]
  node15722 -> node15712 [label=<<font color="black">false</font>> color="black"]
  node15719 -> node15720 [ color="black"]
  node15712 -> node15713 [label=<<font color="black">true</font>> color="black"]
  node15712 -> node15695 [label=<<font color="black">false</font>> color="black"]
  node15723 -> node15724 [ color="black"]
  node15698 -> node15699 [ color="black"]
  node15714 -> node15715 [ color="black"]
  node15718 -> node15719 [ color="black"]
  node15717 -> node15718 [ color="black"]
  node15707 -> node15708 [ color="black"]
  node15703 -> node15704 [label=<<font color="black">true</font>> color="black"]
  node15703 -> node15705 [label=<<font color="black">false</font>> color="black"]
}
