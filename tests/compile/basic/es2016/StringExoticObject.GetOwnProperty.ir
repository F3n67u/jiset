{
  app __x0__ = (IsPropertyKey P)
  assert (= __x0__ true)
  app __x1__ = (OrdinaryGetOwnProperty S P)
  let desc = __x1__
  if (! (= desc undefined)) return desc else {}
  if (! (= (typeof P) String)) return undefined else {}
  app __x2__ = (CanonicalNumericIndexString P)
  let index = [! __x2__]
  if (= index undefined) return undefined else {}
  app __x3__ = (IsInteger index)
  if (= __x3__ false) return undefined else {}
  if (== index -0.0) return undefined else {}
  let str = S.StringData
  let len = str.length
  if (|| (< index 0i) (! (< index len))) return undefined else {}
  ??? "Let id:{resultStr} be a String value of length 1 , containing one code unit from id:{str} , specifically the code unit at index id:{index} ."
  return (new PropertyDescriptor("Value" -> resultStr, "Writable" -> false, "Enumerable" -> true, "Configurable" -> false))
}