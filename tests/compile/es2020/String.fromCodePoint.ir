{
  app codePoints = (GetArgument argumentsList 0i)
  [0] let codePoints = argumentsList
  [1] let length = codePoints.length
  [2] let elements = (new [])
  [3] let nextIndex = 0i
  [4] while (< nextIndex length) {
    [5] let next = codePoints[nextIndex]
    [6] app __x0__ = (ToNumber next)
    [6] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [11] {}
    [6] let nextCP = __x0__
    [7] app __x1__ = (IsInteger nextCP)
    [7] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [11] {}
    [7] if (= __x1__ false) {
      app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x2__
    } else [11] {}
    [8] if (|| (< nextCP 0i) (< 1114111i nextCP)) {
      app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x3__
    } else [11] {}
    [9] access __x4__ = (nextCP "UTF16Encoding")
    [9] let __x5__ = __x4__
    [9] let __x6__ = 0i
    [9] while (< __x6__ __x5__.length) {
      let __x7__ = __x5__[__x6__]
      append __x7__ -> elements
      __x6__ = (+ __x6__ 1i)
    }
    [10] nextIndex = (+ nextIndex 1i)
  }
  [11] ??? "Return the String value whose code units are , in order , the elements in the List id:{elements} . If id:{length} is 0 , the empty String is returned ."
}