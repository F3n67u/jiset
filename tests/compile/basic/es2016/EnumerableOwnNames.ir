{
  app __x0__ = (Type O)
  assert (= __x0__ Object)
  app __x1__ = (O.OwnPropertyKeys O)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let ownKeys = __x1__
  let names = (new [])
  let __x2__ = ownKeys
  let __x3__ = 0i
  while (< __x3__ __x2__.length) {
    let key = __x2__[__x3__]
    app __x4__ = (Type key)
    if (= __x4__ String) {
      app __x5__ = (O.GetOwnProperty O key)
      if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
      let desc = __x5__
      if (! (= desc undefined)) if (= desc.Enumerable true) append key -> names else {} else {}
    } else {}
    __x3__ = (+ __x3__ 1i)
  }
  app __x6__ = (WrapCompletion names)
  return __x6__
}