digraph {
  node3108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3103 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3133 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3110 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3104 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3132 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3120 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3121 [shape=cds, label=<<font color="black">10:app __x6__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3131 [shape=diamond, label=<<font color="black">(= targetDesc.Set undefined)</font>> color="black" fillcolor="white" style=filled]
  node3116 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P, V, Receiver]))</font>> color="black" fillcolor="white" style=filled]
  node3125 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x7__ true) (= targetDesc.Writable false))</font>> color="black" fillcolor="white" style=filled]
  node3105 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node3122 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let targetDesc = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3119 [shape=diamond, label=<<font color="black">(= booleanTrapResult false)</font>> color="black" fillcolor="white" style=filled]
  node3126 [shape=cds, label=<<font color="black">13:app __x8__ = (SameValue V targetDesc.Value)</font>> color="black" fillcolor="white" style=filled]
  node3115 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3109 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3130 [shape=diamond, label=<<font color="black">(= __x9__ true)</font>> color="black" fillcolor="white" style=filled]
  node3111 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3118 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let booleanTrapResult = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3123 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= targetDesc undefined)) (= targetDesc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node3112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3129 [shape=cds, label=<<font color="black">14:app __x9__ = (IsAccessorDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3114 [shape=cds, label=<<font color="black">7:app __x3__ = (target.Set target P V Receiver)</font>> color="black" fillcolor="white" style=filled]
  node3127 [shape=diamond, label=<<font color="black">(= __x8__ false)</font>> color="black" fillcolor="white" style=filled]
  node3107 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3124 [shape=cds, label=<<font color="black">12:app __x7__ = (IsDataDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3117 [shape=cds, label=<<font color="black">8:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node3128 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3113 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3113 -> node3114 [label=<<font color="black">true</font>> color="black"]
  node3113 -> node3116 [label=<<font color="black">false</font>> color="black"]
  node3108 -> node3109 [ color="black"]
  node3124 -> node3125 [ color="black"]
  node3126 -> node3127 [ color="black"]
  node3114 -> node3115 [ color="black"]
  node3110 -> node3111 [ color="black"]
  node3120 -> node3121 [ color="black"]
  node3107 -> node3108 [label=<<font color="black">true</font>> color="black"]
  node3107 -> node3109 [label=<<font color="black">false</font>> color="black"]
  node3117 -> node3118 [ color="black"]
  node3125 -> node3126 [label=<<font color="black">true</font>> color="black"]
  node3125 -> node3129 [label=<<font color="black">false</font>> color="black"]
  node3118 -> node3119 [ color="black"]
  node3103 -> node3105 [ color="black"]
  node3116 -> node3117 [ color="black"]
  node3105 -> node3106 [ color="black"]
  node3121 -> node3122 [ color="black"]
  node3119 -> node3120 [label=<<font color="black">true</font>> color="black"]
  node3119 -> node3121 [label=<<font color="black">false</font>> color="black"]
  node3130 -> node3131 [label=<<font color="black">true</font>> color="black"]
  node3130 -> node3133 [label=<<font color="black">false</font>> color="black"]
  node3111 -> node3112 [ color="black"]
  node3112 -> node3113 [ color="black"]
  node3115 -> node3116 [ color="black"]
  node3127 -> node3128 [label=<<font color="black">true</font>> color="black"]
  node3127 -> node3129 [label=<<font color="black">false</font>> color="black"]
  node3128 -> node3129 [ color="black"]
  node3129 -> node3130 [ color="black"]
  node3106 -> node3107 [ color="black"]
  node3122 -> node3123 [ color="black"]
  node3132 -> node3133 [ color="black"]
  node3109 -> node3110 [ color="black"]
  node3131 -> node3132 [label=<<font color="black">true</font>> color="black"]
  node3131 -> node3133 [label=<<font color="black">false</font>> color="black"]
  node3133 -> node3104 [ color="black"]
  node3123 -> node3124 [label=<<font color="black">true</font>> color="black"]
  node3123 -> node3133 [label=<<font color="black">false</font>> color="black"]
}
