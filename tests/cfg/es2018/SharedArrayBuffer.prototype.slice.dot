digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=diamond, label=<<font color="black">(! (= (typeof O) Object))</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let relativeStart = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=cds, label=<<font color="black">3:app __x0__ = (IsSharedArrayBuffer O)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let len = O.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=cds, label=<<font color="black">app __x3__ = (min relativeStart len)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=diamond, label=<<font color="black">(&lt; relativeStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node42 [shape=diamond, label=<<font color="black">(&lt; new.ArrayBufferByteLength newLen)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=diamond, label=<<font color="black">(&lt; relativeEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node37 [shape=cds, label=<<font color="black">13:app __x10__ = (IsSharedArrayBuffer new)</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=cds, label=<<font color="black">app __x5__ = (max (+ len relativeEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node20 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node46 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x11__</td></tr>
      <tr><td align="left">19:return new</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=cds, label=<<font color="black">9:app __x7__ = (max (- final first) 0i)</font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node33 [shape=cds, label=<<font color="black">11:app __x9__ = (Construct ctor (new [newLen]))</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node38 [shape=diamond, label=<<font color="black">(= __x10__ false)</font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">5:app __x1__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node45 [shape=cds, label=<<font color="black">18:app __x11__ = (CopyDataBlockBytes toBuf 0i fromBuf first newLen)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let ctor = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node34 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let new = [? __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">app __x4__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let fromBuf = O.ArrayBufferData</td></tr>
      <tr><td align="left">17:let toBuf = new.ArrayBufferData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=cds, label=<<font color="black">app __x6__ = (min relativeEnd len)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=diamond, label=<<font color="black">(= O.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node39 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node35 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=cds, label=<<font color="black">app __x2__ = (max (+ len relativeStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node31 [shape=cds, label=<<font color="black">10:app __x8__ = (SpeciesConstructor O INTRINSIC_SharedArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node43 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node40 [shape=diamond, label=<<font color="black">(= new.ArrayBufferData O.ArrayBufferData)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node36 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let newLen = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let first = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 -> node4 [ color="black"]
  node46 -> node1 [ color="black"]
  node2 -> node3 [ color="black"]
  node11 -> node12 [ color="black"]
  node12 -> node13 [ color="black"]
  node30 -> node31 [ color="black"]
  node42 -> node43 [label=<<font color="black">true</font>> color="black"]
  node42 -> node44 [label=<<font color="black">false</font>> color="black"]
  node25 -> node26 [ color="black"]
  node16 -> node17 [ color="black"]
  node24 -> node25 [label=<<font color="black">true</font>> color="black"]
  node24 -> node27 [label=<<font color="black">false</font>> color="black"]
  node32 -> node33 [ color="black"]
  node38 -> node39 [label=<<font color="black">true</font>> color="black"]
  node38 -> node40 [label=<<font color="black">false</font>> color="black"]
  node28 -> node29 [ color="black"]
  node29 -> node30 [ color="black"]
  node39 -> node40 [ color="black"]
  node34 -> node35 [ color="black"]
  node18 -> node19 [ color="black"]
  node40 -> node41 [label=<<font color="black">true</font>> color="black"]
  node40 -> node42 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node12 [label=<<font color="black">false</font>> color="black"]
  node7 -> node8 [label=<<font color="black">true</font>> color="black"]
  node7 -> node9 [label=<<font color="black">false</font>> color="black"]
  node35 -> node36 [label=<<font color="black">true</font>> color="black"]
  node35 -> node37 [label=<<font color="black">false</font>> color="black"]
  node19 -> node20 [ color="black"]
  node13 -> node14 [ color="black"]
  node45 -> node46 [ color="black"]
  node0 -> node2 [ color="black"]
  node36 -> node37 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node43 -> node44 [ color="black"]
  node9 -> node10 [ color="black"]
  node44 -> node45 [ color="black"]
  node27 -> node28 [ color="black"]
  node37 -> node38 [ color="black"]
  node17 -> node20 [ color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
  node31 -> node32 [ color="black"]
  node20 -> node21 [label=<<font color="black">true</font>> color="black"]
  node20 -> node22 [label=<<font color="black">false</font>> color="black"]
  node4 -> node5 [ color="black"]
  node8 -> node9 [ color="black"]
  node26 -> node29 [ color="black"]
  node15 -> node16 [label=<<font color="black">true</font>> color="black"]
  node15 -> node18 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [label=<<font color="black">true</font>> color="black"]
  node5 -> node7 [label=<<font color="black">false</font>> color="black"]
  node21 -> node24 [ color="black"]
  node33 -> node34 [ color="black"]
  node41 -> node42 [ color="black"]
}
