digraph {
  node10561 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let tag = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10548 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;Function&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10543 [shape=diamond, label=<<font color="black">(= (typeof O) &quot;StringExoticObject&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10539 [shape=cds, label=<<font color="black">3:app __x1__ = (IsArray O)</font>> color="black" fillcolor="white" style=filled]
  node10556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;Date&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10541 [shape=diamond, label=<<font color="black">(= isArray true)</font>> color="black" fillcolor="white" style=filled]
  node10546 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;Arguments&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10563 [shape=diamond, label=<<font color="black">(! (= __x3__ String))</font>> color="black" fillcolor="white" style=filled]
  node10537 [shape=cds, label=<<font color="black">2:app __x0__ = (ToObject this)</font>> color="black" fillcolor="white" style=filled]
  node10542 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;Array&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10562 [shape=cds, label=<<font color="black">15:app __x3__ = (Type tag)</font>> color="black" fillcolor="white" style=filled]
  node10545 [shape=diamond, label=<<font color="black">(! (= O.ParameterMap absent))</font>> color="black" fillcolor="white" style=filled]
  node10559 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;Object&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10534 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10555 [shape=diamond, label=<<font color="black">(! (= O.DateValue absent))</font>> color="black" fillcolor="white" style=filled]
  node10551 [shape=diamond, label=<<font color="black">(! (= O.BooleanData absent))</font>> color="black" fillcolor="white" style=filled]
  node10538 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let O = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10560 [shape=cds, label=<<font color="black">14:app __x2__ = (Get O SYMBOL_toStringTag)</font>> color="black" fillcolor="white" style=filled]
  node10550 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;Error&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10547 [shape=diamond, label=<<font color="black">(! (= O.Call absent))</font>> color="black" fillcolor="white" style=filled]
  node10557 [shape=diamond, label=<<font color="black">(! (= O.RegExpMatcher absent))</font>> color="black" fillcolor="white" style=filled]
  node10565 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:??? &quot;Return the String that is the result of concatenating ` \&quot; [ object \&quot; ` , id:{tag} , and code:{\&quot;]\&quot;} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10564 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let tag = builtinTag</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10549 [shape=diamond, label=<<font color="black">(! (= O.ErrorData absent))</font>> color="black" fillcolor="white" style=filled]
  node10544 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;String&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10540 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let isArray = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10553 [shape=diamond, label=<<font color="black">(! (= O.NumberData absent))</font>> color="black" fillcolor="white" style=filled]
  node10536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;If the value:{this} value is value:{undefined} , return ` \&quot; [ object Undefined ] \&quot; ` .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;If the value:{this} value is value:{null} , return ` \&quot; [ object Null ] \&quot; ` .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10558 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;RegExp&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10554 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;Number&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10535 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10552 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let builtinTag = &quot;Boolean&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10539 -> node10540 [ color="black"]
  node10549 -> node10550 [label=<<font color="black">true</font>> color="black"]
  node10549 -> node10551 [label=<<font color="black">false</font>> color="black"]
  node10562 -> node10563 [ color="black"]
  node10551 -> node10552 [label=<<font color="black">true</font>> color="black"]
  node10551 -> node10553 [label=<<font color="black">false</font>> color="black"]
  node10543 -> node10544 [label=<<font color="black">true</font>> color="black"]
  node10543 -> node10545 [label=<<font color="black">false</font>> color="black"]
  node10548 -> node10560 [ color="black"]
  node10538 -> node10539 [ color="black"]
  node10546 -> node10560 [ color="black"]
  node10561 -> node10562 [ color="black"]
  node10541 -> node10542 [label=<<font color="black">true</font>> color="black"]
  node10541 -> node10543 [label=<<font color="black">false</font>> color="black"]
  node10537 -> node10538 [ color="black"]
  node10564 -> node10565 [ color="black"]
  node10565 -> node10535 [ color="black"]
  node10559 -> node10560 [ color="black"]
  node10536 -> node10537 [ color="black"]
  node10534 -> node10536 [ color="black"]
  node10560 -> node10561 [ color="black"]
  node10555 -> node10556 [label=<<font color="black">true</font>> color="black"]
  node10555 -> node10557 [label=<<font color="black">false</font>> color="black"]
  node10540 -> node10541 [ color="black"]
  node10542 -> node10560 [ color="black"]
  node10558 -> node10560 [ color="black"]
  node10556 -> node10560 [ color="black"]
  node10557 -> node10558 [label=<<font color="black">true</font>> color="black"]
  node10557 -> node10559 [label=<<font color="black">false</font>> color="black"]
  node10550 -> node10560 [ color="black"]
  node10544 -> node10560 [ color="black"]
  node10563 -> node10564 [label=<<font color="black">true</font>> color="black"]
  node10563 -> node10565 [label=<<font color="black">false</font>> color="black"]
  node10545 -> node10546 [label=<<font color="black">true</font>> color="black"]
  node10545 -> node10547 [label=<<font color="black">false</font>> color="black"]
  node10554 -> node10560 [ color="black"]
  node10547 -> node10548 [label=<<font color="black">true</font>> color="black"]
  node10547 -> node10549 [label=<<font color="black">false</font>> color="black"]
  node10553 -> node10554 [label=<<font color="black">true</font>> color="black"]
  node10553 -> node10555 [label=<<font color="black">false</font>> color="black"]
  node10552 -> node10560 [ color="black"]
}
