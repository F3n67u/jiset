{
  access __x0__ = (BindingElement "ContainsExpression")
  if (= __x0__ false) {
    access __x1__ = (BindingElement "IteratorBindingInitialization" iteratorRecord environment)
    return __x1__
  } else {}
  let currentContext = GLOBAL_context
  access __x2__ = (currentContext "VariableEnvironment")
  let originalEnv = __x2__
  assert (= currentContext.VariableEnvironment currentContext.LexicalEnvironment)
  assert (= environment originalEnv)
  app __x3__ = (NewDeclarativeEnvironment originalEnv)
  let paramVarEnv = __x3__
  currentContext.VariableEnvironment = paramVarEnv
  currentContext.LexicalEnvironment = paramVarEnv
  access __x4__ = (BindingElement "IteratorBindingInitialization" iteratorRecord environment)
  let result = __x4__
  currentContext.VariableEnvironment = originalEnv
  currentContext.LexicalEnvironment = originalEnv
  return result
}