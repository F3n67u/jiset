{
  app __x0__ = (IsCallable C)
  if (= __x0__ false) return false else {}
  if (! (= C.BoundTargetFunction absent)) {
    let BC = C.BoundTargetFunction
    app __x1__ = (InstanceofOperator O BC)
    return [? __x1__]
  } else {}
  app __x2__ = (Type O)
  if (! (= __x2__ Object)) return false else {}
  app __x3__ = (Get C "prototype")
  let P = [? __x3__]
  app __x4__ = (Type P)
  if (! (= __x4__ Object)) throw INTRINSIC_TypeError else {}
  while true {
    app __x5__ = (O.GetPrototypeOf O)
    let O = [? __x5__]
    if (= O ??? "null") return false else {}
    app __x6__ = (SameValue P O)
    if (= __x6__ true) return true else {}
  }
}