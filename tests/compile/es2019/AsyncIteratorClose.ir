{
  [0] app __x0__ = (Type iteratorRecord.Iterator)
  [0] assert (= __x0__ Object)
  [1] assert (is-completion completion)
  [2] let iterator = iteratorRecord.Iterator
  [3] app __x1__ = (GetMethod iterator "return")
  [3] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [1] {}
  [3] let return = __x1__
  [4] if (= return undefined) {
    app __x2__ = (Completion completion)
    app __x3__ = (WrapCompletion __x2__)
    return __x3__
  } else [1] {}
  [5] app __x4__ = (Call return iterator (new []))
  [5] let innerResult = __x4__
  [6] if (= innerResult.Type CONST_normal) {
    app __x5__ = (Await innerResult.Value)
    innerResult = __x5__
  } else [1] {}
  [7] if (= completion.Type CONST_throw) {
    app __x6__ = (Completion completion)
    app __x7__ = (WrapCompletion __x6__)
    return __x7__
  } else [1] {}
  [8] if (= innerResult.Type CONST_throw) {
    app __x8__ = (Completion innerResult)
    app __x9__ = (WrapCompletion __x8__)
    return __x9__
  } else [1] {}
  [9] app __x10__ = (Type innerResult.Value)
  [9] if (! (= __x10__ Object)) {
    app __x11__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x11__
  } else [1] {}
  [10] app __x12__ = (Completion completion)
  [10] app __x13__ = (WrapCompletion __x12__)
  [10] return __x13__
}