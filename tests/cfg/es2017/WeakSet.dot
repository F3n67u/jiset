digraph {
  node15331 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15311 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakSetPrototype (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15313 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node15312 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15307 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15334 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15320 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15329 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15316 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15326 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15309 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15337 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node15324 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node15314 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15325 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15335 [shape=cds, label=<<font color="black">15:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node15318 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15306 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15338 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15328 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15321 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15322 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15317 [shape=cds, label=<<font color="black">6:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15308 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15333 [shape=cds, label=<<font color="black">14:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node15323 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15332 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15319 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node15315 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node15336 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node15310 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15327 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node15321 -> node15322 [ color="black"]
  node15330 -> node15331 [ color="black"]
  node15338 -> node15326 [ color="black"]
  node15309 -> node15310 [label=<<font color="black">true</font>> color="black"]
  node15309 -> node15311 [label=<<font color="black">false</font>> color="black"]
  node15311 -> node15312 [ color="black"]
  node15323 -> node15324 [ color="black"]
  node15315 -> node15316 [label=<<font color="black">true</font>> color="black"]
  node15315 -> node15317 [label=<<font color="black">false</font>> color="black"]
  node15336 -> node15337 [label=<<font color="black">true</font>> color="black"]
  node15336 -> node15326 [label=<<font color="black">false</font>> color="black"]
  node15334 -> node15335 [ color="black"]
  node15306 -> node15308 [ color="black"]
  node15314 -> node15315 [ color="black"]
  node15329 -> node15330 [label=<<font color="black">true</font>> color="black"]
  node15329 -> node15331 [label=<<font color="black">false</font>> color="black"]
  node15326 -> node15327 [label=<<font color="black">true</font>> color="black"]
  node15326 -> node15307 [label=<<font color="black">false</font>> color="black"]
  node15310 -> node15311 [ color="black"]
  node15324 -> node15325 [label=<<font color="black">true</font>> color="black"]
  node15324 -> node15326 [label=<<font color="black">false</font>> color="black"]
  node15328 -> node15329 [ color="black"]
  node15333 -> node15334 [ color="black"]
  node15312 -> node15313 [ color="black"]
  node15337 -> node15338 [ color="black"]
  node15332 -> node15333 [ color="black"]
  node15313 -> node15314 [label=<<font color="black">true</font>> color="black"]
  node15313 -> node15315 [label=<<font color="black">false</font>> color="black"]
  node15322 -> node15323 [ color="black"]
  node15327 -> node15328 [ color="black"]
  node15318 -> node15319 [ color="black"]
  node15320 -> node15321 [label=<<font color="black">true</font>> color="black"]
  node15320 -> node15322 [label=<<font color="black">false</font>> color="black"]
  node15335 -> node15336 [ color="black"]
  node15319 -> node15320 [ color="black"]
  node15308 -> node15309 [ color="black"]
  node15325 -> node15326 [ color="black"]
  node15331 -> node15332 [ color="black"]
  node15317 -> node15318 [ color="black"]
  node15316 -> node15324 [ color="black"]
}
