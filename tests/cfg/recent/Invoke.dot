digraph {
  node1275 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1279 [shape=diamond, label=<<font color="black">(= argumentsList absent)</font>> color="black" fillcolor="white" style=filled]
  node1283 [shape=cds, label=<<font color="black">3:app __x2__ = (Call func V argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node1281 [shape=cds, label=<<font color="black">2:app __x1__ = (GetV V P)</font>> color="black" fillcolor="white" style=filled]
  node1278 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1282 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let func = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1277 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node1284 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1276 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1280 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">argumentsList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1280 -> node1281 [ color="black"]
  node1279 -> node1280 [label=<<font color="black">true</font>> color="black"]
  node1279 -> node1281 [label=<<font color="black">false</font>> color="black"]
  node1281 -> node1282 [ color="black"]
  node1278 -> node1279 [ color="black"]
  node1284 -> node1276 [ color="black"]
  node1277 -> node1278 [ color="black"]
  node1283 -> node1284 [ color="black"]
  node1275 -> node1277 [ color="black"]
  node1282 -> node1283 [ color="black"]
}
