{
  if true let strict = true else let strict = false
  access __x0__ = (GLOBAL_context "LexicalEnvironment")
  let scope = __x0__
  app __x1__ = (NewDeclarativeEnvironment scope)
  let funcEnv = [! __x1__]
  let envRec = funcEnv.EnvironmentRecord
  access __x2__ = (BindingIdentifier "StringValue")
  let name = __x2__
  app __x3__ = (envRec.CreateImmutableBinding envRec name)
  [! __x3__]
  app __x4__ = (AsyncFunctionCreate CONST_Normal FormalParameters AsyncFunctionBody funcEnv strict)
  let closure = [! __x4__]
  app __x5__ = (SetFunctionName closure name)
  [! __x5__]
  app __x6__ = (envRec.InitializeBinding envRec name closure)
  [! __x6__]
  return closure
}