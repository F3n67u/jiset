digraph {
  node17206 [shape=cds, label=<<font color="black">1:app __x0__ = (RequireInternalSlot set &quot;SetData&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17207 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:??? &quot;Let id:{closure} be a new Abstract Closure with no parameters that captures id:{set} and id:{kind} and performs the following steps when called : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17203 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17208 [shape=cds, label=<<font color="black">18:app __x1__ = (CreateIteratorFromClosure closure &quot;%SetIteratorPrototype%&quot; INTRINSIC_SetIteratorPrototype)</font>> color="black" fillcolor="white" style=filled]
  node17205 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (|| (= kind CONST_keyPLUSvalue) (= kind CONST_value))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17209 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:return [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17204 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17206 -> node17207 [ color="black"]
  node17209 -> node17204 [ color="black"]
  node17208 -> node17209 [ color="black"]
  node17205 -> node17206 [ color="black"]
  node17203 -> node17205 [ color="black"]
  node17207 -> node17208 [ color="black"]
}
