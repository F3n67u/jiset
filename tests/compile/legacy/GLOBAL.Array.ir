if (== argumentsList.length 0i) {
  let numberOfArgs = argumentsList.length
  assert (== numberOfArgs 0i)
  if (= NewTarget undefined) let newTarget = GLOBAL_context.Function else let newTarget = NewTarget
  app __x0__ = (GetPrototypeFromConstructor newTarget "%Array.prototype%")
  let proto = [? __x0__]
  app __x1__ = (ArrayCreate 0i proto)
  return [! __x1__]
} else if (== argumentsList.length 1i) {
  app __x2__ = (GetArgument argumentsList 0i)
  let len = __x2__
  let numberOfArgs = argumentsList.length
  assert (== numberOfArgs 1i)
  if (= NewTarget undefined) let newTarget = GLOBAL_context.Function else let newTarget = NewTarget
  app __x3__ = (GetPrototypeFromConstructor newTarget "%Array.prototype%")
  let proto = [? __x3__]
  app __x4__ = (ArrayCreate 0i proto)
  let array = [! __x4__]
  if (! (= (typeof len) Number)) {
    app __x5__ = (CreateDataPropertyOrThrow array "0" len)
    [! __x5__]
    let intLen = 1i
  } else {
    app __x6__ = (ToUint32 len)
    let intLen = __x6__
    if (! (== intLen len)) throw RangeError else {}
  }
  app __x7__ = (Set array "length" intLen true)
  [! __x7__]
  return array
} else {
  let numberOfArgs = argumentsList.length
  assert (! (< numberOfArgs 2i))
  if (= NewTarget undefined) let newTarget = GLOBAL_context.Function else let newTarget = NewTarget
  app __x8__ = (GetPrototypeFromConstructor newTarget "%Array.prototype%")
  let proto = [? __x8__]
  app __x9__ = (ArrayCreate numberOfArgs proto)
  let array = [? __x9__]
  let k = 0i
  ??? "Let id:{items} be a zero - origined List containing the argument items in order ."
  while (< k numberOfArgs) {
    app __x10__ = (ToString k)
    let Pk = [! __x10__]
    let itemK = items[k]
    app __x11__ = (CreateDataPropertyOrThrow array Pk itemK)
    [! __x11__]
    k = (+ k 1i)
  }
  return array
}