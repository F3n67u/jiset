digraph {
  node17036 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x1__ = (- GLOBAL_executionStack.length 1i)</td></tr>
      <tr><td align="left">(pop GLOBAL_executionStack __x1__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17033 [shape=cds, label=<<font color="black">4:app __x0__ = (GetGeneratorKind)</font>> color="black" fillcolor="white" style=filled]
  node17031 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17034 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:assert (= __x0__ CONST_sync)</td></tr>
      <tr><td align="left">5:generator.GeneratorState = &quot;suspendedYield&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17030 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17035 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] genContext)</font>> color="black" fillcolor="white" style=filled]
  node17037 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">7:??? &quot;Set the code evaluation state of id:{genContext} such that when evaluation is resumed with a Completion id:{resumptionValue} the following steps will be performed : in:{} out:{}&quot;</td></tr>
      <tr><td align="left">10:return iterNextObj</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17032 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let genContext = GLOBAL_context</td></tr>
      <tr><td align="left">3:let generator = genContext.Generator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17036 -> node17037 [ color="black"]
  node17033 -> node17034 [ color="black"]
  node17030 -> node17032 [ color="black"]
  node17032 -> node17033 [ color="black"]
  node17035 -> node17036 [label=<<font color="black">true</font>> color="black"]
  node17035 -> node17037 [label=<<font color="black">false</font>> color="black"]
  node17034 -> node17035 [ color="black"]
  node17037 -> node17031 [ color="black"]
}
