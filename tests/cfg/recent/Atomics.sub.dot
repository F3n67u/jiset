digraph {
  node18015 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18017 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18016 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18019 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{type} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{typedArray} . [ [ TypedArrayName ] ] .&quot;</td></tr>
      <tr><td align="left">1:let isLittleEndian = GLOBAL_agent.LittleEndian</td></tr>
      <tr><td align="left">2:??? &quot;Let id:{subtract} be a new read - modify - write modification function with parameters ( id:{xBytes} , id:{yBytes} ) that captures id:{type} and id:{isLittleEndian} and performs the following steps atomically when called : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18021 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18014 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18018 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18020 [shape=cds, label=<<font color="black">10:app __x0__ = (AtomicReadModifyWrite typedArray index value subtract)</font>> color="black" fillcolor="white" style=filled]
  node18014 -> node18016 [ color="black"]
  node18017 -> node18018 [ color="black"]
  node18018 -> node18019 [ color="black"]
  node18016 -> node18017 [ color="black"]
  node18019 -> node18020 [ color="black"]
  node18021 -> node18015 [ color="black"]
  node18020 -> node18021 [ color="black"]
}
