digraph {
  node10542 [shape=cds, label=<<font color="black">12:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node10548 [shape=cds, label=<<font color="black">18:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node10543 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let requiredModule = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10539 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (= module.Status &quot;uninstantiated&quot;)</td></tr>
      <tr><td align="left">6:module.Status = &quot;instantiating&quot;</td></tr>
      <tr><td align="left">7:module.DFSIndex = index</td></tr>
      <tr><td align="left">8:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">9:index = (+ index 1i)</td></tr>
      <tr><td align="left">10:append module -&gt; stack</td></tr>
      <tr><td align="left">11:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">11:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">26:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">27:requiredModule.Status = &quot;instantiated&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10532 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10541 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10546 [shape=diamond, label=<<font color="black">(= requiredModule.Status &quot;instantiating&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10537 [shape=diamond, label=<<font color="black">(|| (|| (= module.Status &quot;instantiating&quot;) (= module.Status &quot;instantiated&quot;)) (= module.Status &quot;evaluated&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10545 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = [? __x4__]</td></tr>
      <tr><td align="left">14:assert (|| (|| (= requiredModule.Status &quot;instantiating&quot;) (= requiredModule.Status &quot;instantiated&quot;)) (= requiredModule.Status &quot;evaluated&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10559 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10534 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;CyclicModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10555 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node10551 [shape=cds, label=<<font color="black">19:app __x6__ = (module.InitializeEnvironment module)</font>> color="black" fillcolor="white" style=filled]
  node10538 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10533 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10550 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10547 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:assert (= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10557 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node10549 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10544 [shape=cds, label=<<font color="black">13:app __x4__ = (InnerModuleInstantiation requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node10540 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10553 [shape=diamond, label=<<font color="black">(= module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node10536 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10558 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10554 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10535 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Instantiate module)</font>> color="black" fillcolor="white" style=filled]
  node10552 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x6__]</td></tr>
      <tr><td align="left">21:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10539 -> node10540 [ color="black"]
  node10548 -> node10549 [ color="black"]
  node10540 -> node10541 [label=<<font color="black">true</font>> color="black"]
  node10540 -> node10551 [label=<<font color="black">false</font>> color="black"]
  node10553 -> node10554 [label=<<font color="black">true</font>> color="black"]
  node10553 -> node10559 [label=<<font color="black">false</font>> color="black"]
  node10554 -> node10555 [ color="black"]
  node10550 -> node10540 [ color="black"]
  node10537 -> node10538 [label=<<font color="black">true</font>> color="black"]
  node10537 -> node10539 [label=<<font color="black">false</font>> color="black"]
  node10556 -> node10557 [ color="black"]
  node10551 -> node10552 [ color="black"]
  node10547 -> node10548 [ color="black"]
  node10545 -> node10546 [ color="black"]
  node10532 -> node10534 [ color="black"]
  node10544 -> node10545 [ color="black"]
  node10536 -> node10537 [ color="black"]
  node10543 -> node10544 [ color="black"]
  node10559 -> node10533 [ color="black"]
  node10541 -> node10542 [ color="black"]
  node10558 -> node10555 [ color="black"]
  node10552 -> node10553 [ color="black"]
  node10549 -> node10550 [ color="black"]
  node10542 -> node10543 [ color="black"]
  node10557 -> node10558 [label=<<font color="black">true</font>> color="black"]
  node10557 -> node10555 [label=<<font color="black">false</font>> color="black"]
  node10535 -> node10536 [ color="black"]
  node10538 -> node10539 [ color="black"]
  node10546 -> node10547 [label=<<font color="black">true</font>> color="black"]
  node10546 -> node10550 [label=<<font color="black">false</font>> color="black"]
  node10555 -> node10556 [label=<<font color="black">true</font>> color="black"]
  node10555 -> node10559 [label=<<font color="black">false</font>> color="black"]
  node10534 -> node10535 [label=<<font color="black">true</font>> color="black"]
  node10534 -> node10537 [label=<<font color="black">false</font>> color="black"]
}
