digraph {
  node15055 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let S = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15061 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let entries = S.SetData</td></tr>
      <tr><td align="left">4:let __x1__ = entries</td></tr>
      <tr><td align="left">4:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15054 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x1__[__x2__]</td></tr>
      <tr><td align="left">5:??? &quot;Replace the element of id:{entries} whose value is id:{e} with an element whose value is const:{empty} .&quot;</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15056 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node15064 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15059 [shape=diamond, label=<<font color="black">(= S.SetData absent)</font>> color="black" fillcolor="white" style=filled]
  node15062 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node15057 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15053 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15063 -> node15062 [ color="black"]
  node15058 -> node15059 [ color="black"]
  node15064 -> node15054 [ color="black"]
  node15061 -> node15062 [ color="black"]
  node15053 -> node15055 [ color="black"]
  node15056 -> node15057 [ color="black"]
  node15057 -> node15058 [label=<<font color="black">true</font>> color="black"]
  node15057 -> node15059 [label=<<font color="black">false</font>> color="black"]
  node15055 -> node15056 [ color="black"]
  node15062 -> node15063 [label=<<font color="black">true</font>> color="black"]
  node15062 -> node15064 [label=<<font color="black">false</font>> color="black"]
  node15060 -> node15061 [ color="black"]
  node15059 -> node15060 [label=<<font color="black">true</font>> color="black"]
  node15059 -> node15061 [label=<<font color="black">false</font>> color="black"]
}
