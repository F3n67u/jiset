[{
  "tokens": ["Let", {
    "id": "handler"
  }, "be", {
    "id": "O"
  }, ".", "[", "[", "ProxyHandler", "]", "]", "."]
}, {
  "tokens": ["If", {
    "id": "handler"
  }, "is", {
    "value": "null"
  }, ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Assert", ":", "Type", "(", {
    "id": "handler"
  }, ")", "is", "Object", "."]
}, {
  "tokens": ["Let", {
    "id": "target"
  }, "be", {
    "id": "O"
  }, ".", "[", "[", "ProxyTarget", "]", "]", "."]
}, {
  "tokens": ["Let", {
    "id": "trap"
  }, "be", "?", "GetMethod", "(", {
    "id": "handler"
  }, ",", {
    "code": "\"construct\""
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "trap"
  }, "is", {
    "value": "undefined"
  }, ",", "then"]
}, {
  "tokens": ["Assert", ":", {
    "id": "target"
  }, "has", "a", "[", "[", "Construct", "]", "]", "internal", "method", "."]
}, {
  "tokens": ["Return", "?", "Construct", "(", {
    "id": "target"
  }, ",", {
    "id": "argumentsList"
  }, ",", {
    "id": "newTarget"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "argArray"
  }, "be", "CreateArrayFromList", "(", {
    "id": "argumentsList"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "newObj"
  }, "be", "?", "Call", "(", {
    "id": "trap"
  }, ",", {
    "id": "handler"
  }, ",", "«", {
    "id": "target"
  }, ",", {
    "id": "argArray"
  }, ",", {
    "id": "newTarget"
  }, "»", ")", "."]
}, {
  "tokens": ["If", "Type", "(", {
    "id": "newObj"
  }, ")", "is", "not", "Object", ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Return", {
    "id": "newObj"
  }, "."]
}]