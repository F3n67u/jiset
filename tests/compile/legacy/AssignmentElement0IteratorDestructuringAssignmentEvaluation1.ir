{
  if (! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral))) {
    access __x0__ = (DestructuringAssignmentTarget "Evaluation")
    let lref = __x0__
    [? lref]
  } else {}
  if (= iteratorRecord.Done false) {
    app __x1__ = (IteratorStep iteratorRecord)
    let next = __x1__
    app __x2__ = (IsAbruptCompletion next)
    if __x2__ iteratorRecord.Done = true else {}
    [? next]
    if (= next false) iteratorRecord.Done = true else {
      app __x3__ = (IteratorValue next)
      let value = __x3__
      app __x4__ = (IsAbruptCompletion value)
      if __x4__ iteratorRecord.Done = true else {}
      [? value]
    }
  } else {}
  if (= iteratorRecord.Done true) let value = undefined else {}
  if (&& (! (= Initializer absent)) (= value undefined)) {
    app __x5__ = (IsAnonymousFunctionDefinition Initializer)
    access __x6__ = (DestructuringAssignmentTarget "IsIdentifierRef")
    if (&& (= __x5__ true) (= __x6__ true)) {
      app __x7__ = (GetReferencedName lref)
      access __x8__ = (Initializer "NamedEvaluation")
      app __x9__ = (__x8__ __x7__)
      let v = __x9__
    } else {
      access __x10__ = (Initializer "Evaluation")
      let defaultValue = __x10__
      app __x11__ = (GetValue defaultValue)
      let v = [? __x11__]
    }
  } else let v = value
  if (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)) {
    let nestedAssignmentPattern = (parse-syntax DestructuringAssignmentTarget "AssignmentPattern" (new []))
    access __x12__ = (nestedAssignmentPattern "DestructuringAssignmentEvaluation")
    app __x13__ = (__x12__ v)
    return __x13__
  } else {}
  app __x14__ = (PutValue lref v)
  return [? __x14__]
}