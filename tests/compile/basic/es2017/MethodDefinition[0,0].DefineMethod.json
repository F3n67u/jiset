["Let", {
  "id": "propKey"
}, "be", "the", "result", "of", "evaluating", {
  "nt": "PropertyName"
}, ".", {
  "k": 0
}, "ReturnIfAbrupt", "(", {
  "id": "propKey"
}, ")", ".", {
  "k": 1
}, "If", "the", "function", "code", "for", "this", {
  "nt": "MethodDefinition"
}, "is", "strict", "mode", "code", ",", "let", {
  "id": "strict"
}, "be", {
  "value": "true"
}, ".", "Otherwise", "let", {
  "id": "strict"
}, "be", {
  "value": "false"
}, ".", {
  "k": 2
}, "Let", {
  "id": "scope"
}, "be", "the", "running", "execution", "context", "'", "s", "LexicalEnvironment", ".", {
  "k": 3
}, "If", {
  "id": "functionPrototype"
}, "was", "passed", "as", "a", "parameter", ",", "then", true, "Let", {
  "id": "kind"
}, "be", {
  "const": "Normal"
}, ".", {
  "k": 5
}, "Let", {
  "id": "prototype"
}, "be", {
  "id": "functionPrototype"
}, ".", {
  "k": 6
}, false, {
  "k": 4
}, "Else", ",", true, "Let", {
  "id": "kind"
}, "be", {
  "const": "Method"
}, ".", {
  "k": 8
}, "Let", {
  "id": "prototype"
}, "be", "the", "intrinsic", "object", "%", "FunctionPrototype", "%", ".", {
  "k": 9
}, false, {
  "k": 7
}, "Let", {
  "id": "closure"
}, "be", "FunctionCreate", "(", {
  "id": "kind"
}, ",", {
  "nt": "UniqueFormalParameters"
}, ",", {
  "nt": "FunctionBody"
}, ",", {
  "id": "scope"
}, ",", {
  "id": "strict"
}, ",", {
  "id": "prototype"
}, ")", ".", {
  "k": 10
}, "Perform", "MakeMethod", "(", {
  "id": "closure"
}, ",", {
  "id": "object"
}, ")", ".", {
  "k": 11
}, "Return", "the", "Record", "{", "[", "[", "Key", "]", "]", ":", {
  "id": "propKey"
}, ",", "[", "[", "Closure", "]", "]", ":", {
  "id": "closure"
}, "}", ".", {
  "k": 12
}]