digraph {
  node2444 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2450 [shape=cds, label=<<font color="black">3:app __x2__ = (CanonicalNumericIndexString P)</font>> color="black" fillcolor="white" style=filled]
  node2457 [shape=diamond, label=<<font color="black">(== index -0.0)</font>> color="black" fillcolor="white" style=filled]
  node2449 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2454 [shape=cds, label=<<font color="black">5:app __x3__ = (IsInteger index)</font>> color="black" fillcolor="white" style=filled]
  node2458 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2443 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2453 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2452 [shape=diamond, label=<<font color="black">(= index undefined)</font>> color="black" fillcolor="white" style=filled]
  node2463 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2448 [shape=diamond, label=<<font color="black">(! (= __x1__ String))</font>> color="black" fillcolor="white" style=filled]
  node2459 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let str = S.StringData</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2456 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let index = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2445 [shape=cds, label=<<font color="black">1:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node2464 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:??? &quot;Let id:{resultStr} be the String value of length 1 , containing one code unit from id:{str} , specifically the code unit at index id:{index} .&quot;</td></tr>
      <tr><td align="left">12:return (new PropertyDescriptor(&quot;Value&quot; -&gt; resultStr, &quot;Writable&quot; -&gt; false, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; false))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2460 [shape=cds, label=<<font color="black">8:app __x4__ = (Type str)</font>> color="black" fillcolor="white" style=filled]
  node2455 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node2446 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2461 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:assert (= __x4__ String)</td></tr>
      <tr><td align="left">9:let len = str.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2447 [shape=cds, label=<<font color="black">2:app __x1__ = (Type P)</font>> color="black" fillcolor="white" style=filled]
  node2462 [shape=diamond, label=<<font color="black">(|| (&lt; index 0i) (! (&lt; index len)))</font>> color="black" fillcolor="white" style=filled]
  node2455 -> node2456 [label=<<font color="black">true</font>> color="black"]
  node2455 -> node2457 [label=<<font color="black">false</font>> color="black"]
  node2458 -> node2459 [ color="black"]
  node2445 -> node2446 [ color="black"]
  node2459 -> node2460 [ color="black"]
  node2464 -> node2444 [ color="black"]
  node2449 -> node2450 [ color="black"]
  node2451 -> node2452 [ color="black"]
  node2454 -> node2455 [ color="black"]
  node2446 -> node2447 [ color="black"]
  node2452 -> node2453 [label=<<font color="black">true</font>> color="black"]
  node2452 -> node2454 [label=<<font color="black">false</font>> color="black"]
  node2460 -> node2461 [ color="black"]
  node2450 -> node2451 [ color="black"]
  node2447 -> node2448 [ color="black"]
  node2457 -> node2458 [label=<<font color="black">true</font>> color="black"]
  node2457 -> node2459 [label=<<font color="black">false</font>> color="black"]
  node2443 -> node2445 [ color="black"]
  node2461 -> node2462 [ color="black"]
  node2462 -> node2463 [label=<<font color="black">true</font>> color="black"]
  node2462 -> node2464 [label=<<font color="black">false</font>> color="black"]
  node2453 -> node2454 [ color="black"]
  node2456 -> node2457 [ color="black"]
  node2448 -> node2449 [label=<<font color="black">true</font>> color="black"]
  node2448 -> node2450 [label=<<font color="black">false</font>> color="black"]
  node2463 -> node2464 [ color="black"]
}
