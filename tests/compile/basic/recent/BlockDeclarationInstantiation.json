["Assert", ":", {
  "id": "env"
}, "is", "a", "declarative", "Environment", "Record", ".", {
  "k": 0
}, "Let", {
  "id": "declarations"
}, "be", "the", "LexicallyScopedDeclarations", "of", {
  "id": "code"
}, ".", {
  "k": 1
}, "For", "each", "element", {
  "id": "d"
}, "of", {
  "id": "declarations"
}, ",", "do", true, "For", "each", "element", {
  "id": "dn"
}, "of", "the", "BoundNames", "of", {
  "id": "d"
}, ",", "do", true, "If", "IsConstantDeclaration", "of", {
  "id": "d"
}, "is", {
  "value": "true"
}, ",", "then", true, "Perform", "!", {
  "id": "env"
}, ".", "CreateImmutableBinding", "(", {
  "id": "dn"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 5
}, false, {
  "k": 4
}, "Else", ",", true, "Perform", "!", {
  "id": "env"
}, ".", "CreateMutableBinding", "(", {
  "id": "dn"
}, ",", {
  "value": "false"
}, ")", ".", "NOTE", ":", "This", "step", "is", "replaced", "in", "section", {
  "link": ""
}, ".", {
  "k": 7
}, false, {
  "k": 6
}, false, {
  "k": 3
}, "If", {
  "id": "d"
}, "is", "a", {
  "nt": "FunctionDeclaration"
}, ",", "a", {
  "nt": "GeneratorDeclaration"
}, ",", "an", {
  "nt": "AsyncFunctionDeclaration"
}, ",", "or", "an", {
  "nt": "AsyncGeneratorDeclaration"
}, ",", "then", true, "Let", {
  "id": "fn"
}, "be", "the", "sole", "element", "of", "the", "BoundNames", "of", {
  "id": "d"
}, ".", {
  "k": 9
}, "Let", {
  "id": "fo"
}, "be", "InstantiateFunctionObject", "of", {
  "id": "d"
}, "with", "argument", {
  "id": "env"
}, ".", {
  "k": 10
}, "Perform", {
  "id": "env"
}, ".", "InitializeBinding", "(", {
  "id": "fn"
}, ",", {
  "id": "fo"
}, ")", ".", "NOTE", ":", "This", "step", "is", "replaced", "in", "section", {
  "link": ""
}, ".", {
  "k": 11
}, false, {
  "k": 8
}, false, {
  "k": 2
}]