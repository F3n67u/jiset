digraph {
  node16972 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:??? &quot;Let id:{value} be the byte elements of id:{rawBytes} concatenated and interpreted as a little - endian bit string encoding of an IEEE 754 - 2019 binary32 value .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;If id:{value} is an IEEE 754 - 2019 binary32 NaN value , return the value:{NaN} Number value .&quot;</td></tr>
      <tr><td align="left">5:return value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16979 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:??? &quot;If ! IsBigIntElementType ( id:{type} ) is value:{true} , return the BigInt value that corresponds to id:{intValue} .&quot;</td></tr>
      <tr><td align="left">15:??? &quot;Otherwise , return the Number value that corresponds to id:{intValue} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16976 [shape=diamond, label=<<font color="black">(= [! __x0__] true)</font>> color="black" fillcolor="white" style=filled]
  node16978 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{intValue} be the byte elements of id:{rawBytes} concatenated and interpreted as a bit string encoding of a binary little - endian 2 ' s complement number of bit length id:{elementSize} &times; 8 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16973 [shape=diamond, label=<<font color="black">(= type CONST_Float64)</font>> color="black" fillcolor="white" style=filled]
  node16968 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16969 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16977 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{intValue} be the byte elements of id:{rawBytes} concatenated and interpreted as a bit string encoding of an unsigned little - endian binary number .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16970 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;If id:{isLittleEndian} is value:{false} , reverse the order of the elements of id:{rawBytes} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16974 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{value} be the byte elements of id:{rawBytes} concatenated and interpreted as a little - endian bit string encoding of an IEEE 754 - 2019 binary64 value .&quot;</td></tr>
      <tr><td align="left">8:??? &quot;If id:{value} is an IEEE 754 - 2019 binary64 NaN value , return the value:{NaN} Number value .&quot;</td></tr>
      <tr><td align="left">9:return value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16975 [shape=cds, label=<<font color="black">12:app __x0__ = (IsUnsignedElementType type)</font>> color="black" fillcolor="white" style=filled]
  node16971 [shape=diamond, label=<<font color="black">(= type CONST_Float32)</font>> color="black" fillcolor="white" style=filled]
  node16974 -> node16975 [ color="black"]
  node16977 -> node16979 [ color="black"]
  node16976 -> node16977 [label=<<font color="black">true</font>> color="black"]
  node16976 -> node16978 [label=<<font color="black">false</font>> color="black"]
  node16972 -> node16973 [ color="black"]
  node16971 -> node16972 [label=<<font color="black">true</font>> color="black"]
  node16971 -> node16973 [label=<<font color="black">false</font>> color="black"]
  node16978 -> node16979 [ color="black"]
  node16970 -> node16971 [ color="black"]
  node16979 -> node16969 [ color="black"]
  node16973 -> node16974 [label=<<font color="black">true</font>> color="black"]
  node16973 -> node16975 [label=<<font color="black">false</font>> color="black"]
  node16975 -> node16976 [ color="black"]
  node16968 -> node16970 [ color="black"]
}
