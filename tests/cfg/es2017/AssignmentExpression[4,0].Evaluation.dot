digraph {
  node4877 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let rval = [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4866 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let hasNameProperty = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4862 [shape=cds, label=<<font color="black">5:app __x3__ = (IsAnonymousFunctionDefinition AssignmentExpression)</font>> color="black" fillcolor="white" style=filled]
  node4853 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4878 [shape=cds, label=<<font color="black">13:access __x11__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; rval)</font>> color="black" fillcolor="white" style=filled]
  node4854 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4864 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x3__ true) (= __x4__ true))</font>> color="black" fillcolor="white" style=filled]
  node4875 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rref = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4873 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:??? &quot;Let id:{assignmentPattern} be the parse of the source text corresponding to nt:{LeftHandSideExpression} using nt:{AssignmentPattern} as the goal symbol with its sub:{[ Yield ]} and sub:{[ Await ]} parameters set to the values used when parsing nt:{LeftHandSideExpression} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4865 [shape=cds, label=<<font color="black">6:app __x5__ = (HasOwnProperty rval &quot;name&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4876 [shape=cds, label=<<font color="black">12:app __x10__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node4870 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4856 [shape=cds, label=<<font color="black">1:access __x0__ = (LeftHandSideExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4857 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4871 [shape=cds, label=<<font color="black">8:app __x8__ = (PutValue lref rval)</font>> color="black" fillcolor="white" style=filled]
  node4860 [shape=cds, label=<<font color="black">4:app __x2__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node4861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let rval = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4867 [shape=diamond, label=<<font color="black">(= hasNameProperty false)</font>> color="black" fillcolor="white" style=filled]
  node4872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x8__]</td></tr>
      <tr><td align="left">9:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4874 [shape=cds, label=<<font color="black">11:access __x9__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4868 [shape=cds, label=<<font color="black">app __x6__ = (GetReferencedName lref)</font>> color="black" fillcolor="white" style=filled]
  node4879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let status = __x11__</td></tr>
      <tr><td align="left">14:[? status]</td></tr>
      <tr><td align="left">15:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4859 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let rref = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4855 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node4869 [shape=cds, label=<<font color="black">app __x7__ = (SetFunctionName rval __x6__)</font>> color="black" fillcolor="white" style=filled]
  node4863 [shape=cds, label=<<font color="black">5:access __x4__ = (LeftHandSideExpression &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4858 [shape=cds, label=<<font color="black">3:access __x1__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4860 -> node4861 [ color="black"]
  node4866 -> node4867 [ color="black"]
  node4870 -> node4871 [ color="black"]
  node4863 -> node4864 [ color="black"]
  node4872 -> node4873 [ color="black"]
  node4869 -> node4870 [ color="black"]
  node4876 -> node4877 [ color="black"]
  node4859 -> node4860 [ color="black"]
  node4873 -> node4874 [ color="black"]
  node4857 -> node4858 [ color="black"]
  node4875 -> node4876 [ color="black"]
  node4865 -> node4866 [ color="black"]
  node4879 -> node4854 [ color="black"]
  node4855 -> node4856 [label=<<font color="black">true</font>> color="black"]
  node4855 -> node4873 [label=<<font color="black">false</font>> color="black"]
  node4867 -> node4868 [label=<<font color="black">true</font>> color="black"]
  node4867 -> node4871 [label=<<font color="black">false</font>> color="black"]
  node4868 -> node4869 [ color="black"]
  node4861 -> node4862 [ color="black"]
  node4864 -> node4865 [label=<<font color="black">true</font>> color="black"]
  node4864 -> node4871 [label=<<font color="black">false</font>> color="black"]
  node4871 -> node4872 [ color="black"]
  node4874 -> node4875 [ color="black"]
  node4856 -> node4857 [ color="black"]
  node4862 -> node4863 [ color="black"]
  node4853 -> node4855 [ color="black"]
  node4877 -> node4878 [ color="black"]
  node4858 -> node4859 [ color="black"]
  node4878 -> node4879 [ color="black"]
}
