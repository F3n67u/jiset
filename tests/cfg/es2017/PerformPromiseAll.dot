digraph {
  node16559 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16566 [shape=cds, label=<<font color="black">20:app __x6__ = (Invoke constructor &quot;resolve&quot; (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node16555 [shape=cds, label=<<font color="black">13:app __x2__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node16552 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node16560 [shape=cds, label=<<font color="black">16:app __x4__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node16553 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16542 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16557 [shape=cds, label=<<font color="black">14:app __x3__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node16567 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let nextPromise = [? __x6__]</td></tr>
      <tr><td align="left">21:let resolveElement = (new BuiltinFunctionObject(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">22:resolveElement.AlreadyCalled = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">23:resolveElement.Index = index</td></tr>
      <tr><td align="left">24:resolveElement.Values = values</td></tr>
      <tr><td align="left">25:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">26:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">27:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16550 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16554 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node16540 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16545 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node16544 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16562 [shape=cds, label=<<font color="black">17:app __x5__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node16565 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? nextValue]</td></tr>
      <tr><td align="left">19:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let valuesArray = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16569 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:[? __x7__]</td></tr>
      <tr><td align="left">29:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16568 [shape=cds, label=<<font color="black">28:app __x7__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node16541 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16551 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16561 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextValue = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16548 [shape=cds, label=<<font color="black">7:app __x1__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node16564 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16547 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16558 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16539 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16563 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node16546 [shape=cds, label=<<font color="black">6:app __x0__ = (IteratorStep iteratorRecord.Iterator)</font>> color="black" fillcolor="white" style=filled]
  node16549 [shape=diamond, label=<<font color="black">__x1__</font>> color="black" fillcolor="white" style=filled]
  node16543 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16561 -> node16562 [ color="black"]
  node16547 -> node16548 [ color="black"]
  node16569 -> node16545 [ color="black"]
  node16545 -> node16546 [label=<<font color="black">true</font>> color="black"]
  node16545 -> node16540 [label=<<font color="black">false</font>> color="black"]
  node16552 -> node16553 [label=<<font color="black">true</font>> color="black"]
  node16552 -> node16560 [label=<<font color="black">false</font>> color="black"]
  node16563 -> node16564 [label=<<font color="black">true</font>> color="black"]
  node16563 -> node16565 [label=<<font color="black">false</font>> color="black"]
  node16554 -> node16555 [label=<<font color="black">true</font>> color="black"]
  node16554 -> node16559 [label=<<font color="black">false</font>> color="black"]
  node16543 -> node16544 [ color="black"]
  node16558 -> node16559 [ color="black"]
  node16550 -> node16551 [ color="black"]
  node16553 -> node16554 [ color="black"]
  node16549 -> node16550 [label=<<font color="black">true</font>> color="black"]
  node16549 -> node16551 [label=<<font color="black">false</font>> color="black"]
  node16551 -> node16552 [ color="black"]
  node16560 -> node16561 [ color="black"]
  node16566 -> node16567 [ color="black"]
  node16544 -> node16545 [ color="black"]
  node16557 -> node16558 [ color="black"]
  node16541 -> node16542 [ color="black"]
  node16562 -> node16563 [ color="black"]
  node16568 -> node16569 [ color="black"]
  node16539 -> node16541 [ color="black"]
  node16556 -> node16557 [ color="black"]
  node16546 -> node16547 [ color="black"]
  node16565 -> node16566 [ color="black"]
  node16548 -> node16549 [ color="black"]
  node16567 -> node16568 [ color="black"]
  node16555 -> node16556 [ color="black"]
  node16564 -> node16565 [ color="black"]
  node16542 -> node16543 [ color="black"]
  node16559 -> node16560 [ color="black"]
}
