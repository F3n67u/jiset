digraph {
  node16701 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16704 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node16700 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16705 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16703 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16706 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node16699 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16707 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16702 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16702 -> node16703 [label=<<font color="black">true</font>> color="black"]
  node16702 -> node16704 [label=<<font color="black">false</font>> color="black"]
  node16707 -> node16700 [ color="black"]
  node16706 -> node16707 [ color="black"]
  node16699 -> node16701 [ color="black"]
  node16705 -> node16706 [ color="black"]
  node16703 -> node16704 [ color="black"]
  node16701 -> node16702 [ color="black"]
  node16704 -> node16705 [ color="black"]
}
