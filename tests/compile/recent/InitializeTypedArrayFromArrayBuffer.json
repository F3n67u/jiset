[{
  "tokens": ["Assert", ":", {
    "id": "O"
  }, "is", "an", "Object", "that", "has", "a", "[", "[", "TypedArrayName", "]", "]", "internal", "slot", "."]
}, {
  "tokens": ["Assert", ":", {
    "id": "buffer"
  }, "is", "an", "Object", "that", "has", "an", "[", "[", "ArrayBufferData", "]", "]", "internal", "slot", "."]
}, {
  "tokens": ["Let", {
    "id": "constructorName"
  }, "be", "the", "String", "value", "of", {
    "id": "O"
  }, ".", "[", "[", "TypedArrayName", "]", "]", "."]
}, {
  "tokens": ["Let", {
    "id": "elementSize"
  }, "be", "the", "Element", "Size", "value", "specified", "in", {
    "link": ""
  }, "for", {
    "id": "constructorName"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "offset"
  }, "be", "?", "ToIndex", "(", {
    "id": "byteOffset"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "offset"
  }, "modulo", {
    "id": "elementSize"
  }, "≠", "0", ",", "throw", "a", {
    "value": "RangeError"
  }, "exception", "."]
}, {
  "tokens": ["If", {
    "id": "length"
  }, "is", "not", {
    "value": "undefined"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "newLength"
  }, "be", "?", "ToIndex", "(", {
    "id": "length"
  }, ")", "."]
}, {
  "tokens": ["If", "IsDetachedBuffer", "(", {
    "id": "buffer"
  }, ")", "is", {
    "value": "true"
  }, ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Let", {
    "id": "bufferByteLength"
  }, "be", {
    "id": "buffer"
  }, ".", "[", "[", "ArrayBufferByteLength", "]", "]", "."]
}, {
  "tokens": ["If", {
    "id": "length"
  }, "is", {
    "value": "undefined"
  }, ",", "then"]
}, {
  "tokens": ["If", {
    "id": "bufferByteLength"
  }, "modulo", {
    "id": "elementSize"
  }, "≠", "0", ",", "throw", "a", {
    "value": "RangeError"
  }, "exception", "."]
}, {
  "tokens": ["Let", {
    "id": "newByteLength"
  }, "be", {
    "id": "bufferByteLength"
  }, "-", {
    "id": "offset"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "newByteLength"
  }, "<", "0", ",", "throw", "a", {
    "value": "RangeError"
  }, "exception", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "newByteLength"
  }, "be", {
    "id": "newLength"
  }, "×", {
    "id": "elementSize"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "offset"
  }, "+", {
    "id": "newByteLength"
  }, ">", {
    "id": "bufferByteLength"
  }, ",", "throw", "a", {
    "value": "RangeError"
  }, "exception", "."]
}, {
  "tokens": ["Set", {
    "id": "O"
  }, ".", "[", "[", "ViewedArrayBuffer", "]", "]", "to", {
    "id": "buffer"
  }, "."]
}, {
  "tokens": ["Set", {
    "id": "O"
  }, ".", "[", "[", "ByteLength", "]", "]", "to", {
    "id": "newByteLength"
  }, "."]
}, {
  "tokens": ["Set", {
    "id": "O"
  }, ".", "[", "[", "ByteOffset", "]", "]", "to", {
    "id": "offset"
  }, "."]
}, {
  "tokens": ["Set", {
    "id": "O"
  }, ".", "[", "[", "ArrayLength", "]", "]", "to", {
    "id": "newByteLength"
  }, "/", {
    "id": "elementSize"
  }, "."]
}]