digraph {
  node15170 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15175 [shape=cds, label=<<font color="black">4:app __x2__ = (ToInteger numberOffset)</font>> color="black" fillcolor="white" style=filled]
  node15178 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15171 [shape=diamond, label=<<font color="black">(= buffer.ArrayBufferData absent)</font>> color="black" fillcolor="white" style=filled]
  node15179 [shape=cds, label=<<font color="black">6:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15169 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15174 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let numberOffset = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15189 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength (+ offset viewByteLength))</font>> color="black" fillcolor="white" style=filled]
  node15183 [shape=diamond, label=<<font color="black">(&lt; bufferByteLength offset)</font>> color="black" fillcolor="white" style=filled]
  node15180 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node15192 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let O = [? __x5__]</td></tr>
      <tr><td align="left">15:O.DataView = true</td></tr>
      <tr><td align="left">16:O.ViewedArrayBuffer = buffer</td></tr>
      <tr><td align="left">17:O.ByteLength = viewByteLength</td></tr>
      <tr><td align="left">18:O.ByteOffset = offset</td></tr>
      <tr><td align="left">19:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15173 [shape=cds, label=<<font color="black">3:app __x1__ = (ToNumber byteOffset)</font>> color="black" fillcolor="white" style=filled]
  node15188 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let viewByteLength = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15163 [shape=cds, label=<<font color="black">app buffer = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15191 [shape=cds, label=<<font color="black">14:app __x5__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_DataViewPrototype (new [&quot;DataView&quot;, &quot;ViewedArrayBuffer&quot;, &quot;ByteLength&quot;, &quot;ByteOffset&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let offset = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15187 [shape=cds, label=<<font color="black">12:app __x4__ = (ToLength byteLength)</font>> color="black" fillcolor="white" style=filled]
  node15190 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15185 [shape=diamond, label=<<font color="black">(= byteLength undefined)</font>> color="black" fillcolor="white" style=filled]
  node15182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let bufferByteLength = buffer.ArrayBufferByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15161 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15167 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15186 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let viewByteLength = (- bufferByteLength offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15165 [shape=cds, label=<<font color="black">app byteLength = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node15168 [shape=cds, label=<<font color="black">1:app __x0__ = (Type buffer)</font>> color="black" fillcolor="white" style=filled]
  node15162 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15172 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15177 [shape=diamond, label=<<font color="black">(|| (! (== numberOffset offset)) (&lt; offset 0i))</font>> color="black" fillcolor="white" style=filled]
  node15181 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15164 [shape=cds, label=<<font color="black">app byteOffset = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15166 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15192 -> node15162 [ color="black"]
  node15172 -> node15173 [ color="black"]
  node15179 -> node15180 [ color="black"]
  node15191 -> node15192 [ color="black"]
  node15178 -> node15179 [ color="black"]
  node15161 -> node15163 [ color="black"]
  node15170 -> node15171 [ color="black"]
  node15174 -> node15175 [ color="black"]
  node15168 -> node15169 [ color="black"]
  node15185 -> node15186 [label=<<font color="black">true</font>> color="black"]
  node15185 -> node15187 [label=<<font color="black">false</font>> color="black"]
  node15183 -> node15184 [label=<<font color="black">true</font>> color="black"]
  node15183 -> node15185 [label=<<font color="black">false</font>> color="black"]
  node15175 -> node15176 [ color="black"]
  node15188 -> node15189 [ color="black"]
  node15177 -> node15178 [label=<<font color="black">true</font>> color="black"]
  node15177 -> node15179 [label=<<font color="black">false</font>> color="black"]
  node15166 -> node15167 [label=<<font color="black">true</font>> color="black"]
  node15166 -> node15168 [label=<<font color="black">false</font>> color="black"]
  node15181 -> node15182 [ color="black"]
  node15190 -> node15191 [ color="black"]
  node15186 -> node15191 [ color="black"]
  node15187 -> node15188 [ color="black"]
  node15184 -> node15185 [ color="black"]
  node15163 -> node15164 [ color="black"]
  node15180 -> node15181 [label=<<font color="black">true</font>> color="black"]
  node15180 -> node15182 [label=<<font color="black">false</font>> color="black"]
  node15171 -> node15172 [label=<<font color="black">true</font>> color="black"]
  node15171 -> node15173 [label=<<font color="black">false</font>> color="black"]
  node15189 -> node15190 [label=<<font color="black">true</font>> color="black"]
  node15189 -> node15191 [label=<<font color="black">false</font>> color="black"]
  node15176 -> node15177 [ color="black"]
  node15169 -> node15170 [label=<<font color="black">true</font>> color="black"]
  node15169 -> node15171 [label=<<font color="black">false</font>> color="black"]
  node15167 -> node15168 [ color="black"]
  node15182 -> node15183 [ color="black"]
  node15165 -> node15166 [ color="black"]
  node15173 -> node15174 [ color="black"]
  node15164 -> node15165 [ color="black"]
}
