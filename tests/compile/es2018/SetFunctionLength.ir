{
  [1] app __x0__ = (Type length)
  [1] assert (= __x0__ Number)
  [2] let __x1__ = (! (< length 0i))
  [2] if __x1__ {
    app __x2__ = (ToInteger length)
    if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [0] {}
    __x1__ = (= __x2__ length)
  } else [0] {}
  [2] assert __x1__
  [3] app __x3__ = (DefinePropertyOrThrow F "length" (new PropertyDescriptor("Value" -> length, "Writable" -> false, "Enumerable" -> false, "Configurable" -> true)))
  [3] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [0] {}
  [3] app __x4__ = (WrapCompletion __x3__)
  [3] return __x4__
}