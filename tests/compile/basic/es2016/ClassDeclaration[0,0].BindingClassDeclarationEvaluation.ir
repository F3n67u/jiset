{
  access __x0__ = (BindingIdentifier "StringValue")
  let className = __x0__
  access __x1__ = (ClassTail "ClassDefinitionEvaluation")
  app __x2__ = (__x1__ className)
  let value = __x2__
  if (is-completion value) if (= value.Type CONST_normal) value = value.Value else return value else {}
  value
  app __x3__ = (HasOwnProperty value "name")
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  let hasNameProperty = __x3__
  if (= hasNameProperty false) {
    app __x4__ = (SetFunctionName value className)
    __x4__
  } else {}
  let env = GLOBAL_context.LexicalEnvironment
  app __x5__ = (InitializeBoundName className value env)
  if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
  __x5__
  app __x6__ = (WrapCompletion value)
  return __x6__
}