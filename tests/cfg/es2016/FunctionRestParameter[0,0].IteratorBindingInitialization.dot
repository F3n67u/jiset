digraph {
  node7798 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let paramVarEnv = __x3__</td></tr>
      <tr><td align="left">6:currentContext.VariableEnvironment = paramVarEnv</td></tr>
      <tr><td align="left">7:currentContext.LexicalEnvironment = paramVarEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7793 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7790 [shape=cds, label=<<font color="black">0:access __x0__ = (BindingRestElement &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7792 [shape=cds, label=<<font color="black">access __x1__ = (BindingRestElement &quot;IteratorBindingInitialization&quot; iteratorRecord environment)</font>> color="black" fillcolor="white" style=filled]
  node7794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let currentContext = GLOBAL_context</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7799 [shape=cds, label=<<font color="black">8:access __x4__ = (BindingRestElement &quot;IteratorBindingInitialization&quot; iteratorRecord environment)</font>> color="black" fillcolor="white" style=filled]
  node7789 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7788 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node7796 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let originalEnv = __x2__</td></tr>
      <tr><td align="left">3:assert (= currentContext.VariableEnvironment currentContext.LexicalEnvironment)</td></tr>
      <tr><td align="left">4:assert (= environment originalEnv)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7797 [shape=cds, label=<<font color="black">5:app __x3__ = (NewDeclarativeEnvironment originalEnv)</font>> color="black" fillcolor="white" style=filled]
  node7791 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node7795 [shape=cds, label=<<font color="black">2:access __x2__ = (currentContext &quot;VariableEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node7800 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let result = __x4__</td></tr>
      <tr><td align="left">9:currentContext.VariableEnvironment = originalEnv</td></tr>
      <tr><td align="left">10:currentContext.LexicalEnvironment = originalEnv</td></tr>
      <tr><td align="left">11:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7792 -> node7793 [ color="black"]
  node7794 -> node7795 [ color="black"]
  node7796 -> node7797 [ color="black"]
  node7790 -> node7791 [ color="black"]
  node7798 -> node7799 [ color="black"]
  node7791 -> node7792 [label=<<font color="black">true</font>> color="black"]
  node7791 -> node7794 [label=<<font color="black">false</font>> color="black"]
  node7797 -> node7798 [ color="black"]
  node7799 -> node7800 [ color="black"]
  node7788 -> node7790 [ color="black"]
  node7795 -> node7796 [ color="black"]
  node7800 -> node7789 [ color="black"]
  node7793 -> node7794 [ color="black"]
}
