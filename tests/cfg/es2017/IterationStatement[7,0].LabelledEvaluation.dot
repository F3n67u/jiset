digraph {
  node6690 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6685 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6684 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let keyResult = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6687 [shape=cds, label=<<font color="black">0:app __x1__ = (ForInOfHeadEvaluation __x0__ Expression CONST_enumerate)</font>> color="black" fillcolor="white" style=filled]
  node6689 [shape=cds, label=<<font color="black">1:app __x2__ = (ForInOfBodyEvaluation ForDeclaration Statement keyResult CONST_enumerate CONST_lexicalBinding labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6686 [shape=cds, label=<<font color="black">0:access __x0__ = (ForDeclaration &quot;BoundNames&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6688 -> node6689 [ color="black"]
  node6687 -> node6688 [ color="black"]
  node6690 -> node6685 [ color="black"]
  node6689 -> node6690 [ color="black"]
  node6686 -> node6687 [ color="black"]
  node6684 -> node6686 [ color="black"]
}
