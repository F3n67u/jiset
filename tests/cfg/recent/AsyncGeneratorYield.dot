digraph {
  node19291 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">7:??? &quot;Set the code evaluation state of id:{genContext} such that when evaluation is resumed with a Completion id:{resumptionValue} the following steps will be performed : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19282 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19286 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x0__ CONST_async)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19290 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x2__ = (- GLOBAL_executionStack.length 1i)</td></tr>
      <tr><td align="left">(pop GLOBAL_executionStack __x2__)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19287 [shape=cds, label=<<font color="black">4:app __x1__ = (Await value)</font>> color="black" fillcolor="white" style=filled]
  node19283 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19289 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] genContext)</font>> color="black" fillcolor="white" style=filled]
  node19288 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:value = [? __x1__]</td></tr>
      <tr><td align="left">5:generator.AsyncGeneratorState = CONST_suspendedYield</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19293 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19284 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let genContext = GLOBAL_context</td></tr>
      <tr><td align="left">2:let generator = genContext.Generator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19285 [shape=cds, label=<<font color="black">3:app __x0__ = (GetGeneratorKind)</font>> color="black" fillcolor="white" style=filled]
  node19292 [shape=cds, label=<<font color="black">14:app __x3__ = (AsyncGeneratorResolve generator value false)</font>> color="black" fillcolor="white" style=filled]
  node19293 -> node19283 [ color="black"]
  node19289 -> node19290 [label=<<font color="black">true</font>> color="black"]
  node19289 -> node19291 [label=<<font color="black">false</font>> color="black"]
  node19291 -> node19292 [ color="black"]
  node19284 -> node19285 [ color="black"]
  node19282 -> node19284 [ color="black"]
  node19292 -> node19293 [ color="black"]
  node19290 -> node19291 [ color="black"]
  node19285 -> node19286 [ color="black"]
  node19286 -> node19287 [ color="black"]
  node19287 -> node19288 [ color="black"]
  node19288 -> node19289 [ color="black"]
}
