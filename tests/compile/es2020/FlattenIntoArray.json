[{
  "tokens": ["Assert", ":", "Type", "(", {
    "id": "target"
  }, ")", "is", "Object", "."]
}, {
  "tokens": ["Assert", ":", "Type", "(", {
    "id": "source"
  }, ")", "is", "Object", "."]
}, {
  "tokens": ["Assert", ":", "!", "IsNonNegativeInteger", "(", {
    "id": "sourceLen"
  }, ")", "is", {
    "value": "true"
  }, "."]
}, {
  "tokens": ["Assert", ":", "!", "IsNonNegativeInteger", "(", {
    "id": "start"
  }, ")", "is", {
    "value": "true"
  }, "."]
}, {
  "tokens": ["Assert", ":", "!", "IsInteger", "(", {
    "id": "depth"
  }, ")", "is", {
    "value": "true"
  }, ",", "or", {
    "id": "depth"
  }, "is", "either", {
    "value": "+∞"
  }, "or", {
    "value": "-∞"
  }, "."]
}, {
  "tokens": ["Assert", ":", "If", {
    "id": "mapperFunction"
  }, "is", "present", ",", "then", "!", "IsCallable", "(", {
    "id": "mapperFunction"
  }, ")", "is", {
    "value": "true"
  }, ",", {
    "id": "thisArg"
  }, "is", "present", ",", "and", {
    "id": "depth"
  }, "is", {
    "value": "1"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "targetIndex"
  }, "be", {
    "id": "start"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "sourceIndex"
  }, "be", "0", "."]
}, {
  "tokens": ["Repeat", ",", "while", {
    "id": "sourceIndex"
  }, "<", {
    "id": "sourceLen"
  }]
}, {
  "tokens": ["Let", {
    "id": "P"
  }, "be", "!", "ToString", "(", {
    "id": "sourceIndex"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "exists"
  }, "be", "?", "HasProperty", "(", {
    "id": "source"
  }, ",", {
    "id": "P"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "exists"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "element"
  }, "be", "?", "Get", "(", {
    "id": "source"
  }, ",", {
    "id": "P"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "mapperFunction"
  }, "is", "present", ",", "then"]
}, {
  "tokens": ["Set", {
    "id": "element"
  }, "to", "?", "Call", "(", {
    "id": "mapperFunction"
  }, ",", {
    "id": "thisArg"
  }, ",", "«", {
    "id": "element"
  }, ",", {
    "id": "sourceIndex"
  }, ",", {
    "id": "source"
  }, "»", ")", "."]
}, {
  "tokens": ["Let", {
    "id": "shouldFlatten"
  }, "be", {
    "value": "false"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "depth"
  }, ">", "0", ",", "then"]
}, {
  "tokens": ["Set", {
    "id": "shouldFlatten"
  }, "to", "?", "IsArray", "(", {
    "id": "element"
  }, ")", "."]
}, {
  "tokens": ["If", {
    "id": "shouldFlatten"
  }, "is", {
    "value": "true"
  }, ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "elementLen"
  }, "be", "?", "LengthOfArrayLike", "(", {
    "id": "element"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "targetIndex"
  }, "to", "?", "FlattenIntoArray", "(", {
    "id": "target"
  }, ",", {
    "id": "element"
  }, ",", {
    "id": "elementLen"
  }, ",", {
    "id": "targetIndex"
  }, ",", {
    "id": "depth"
  }, "-", "1", ")", "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["If", {
    "id": "targetIndex"
  }, "≥", "2", {
    "sup": {
      "tokens": ["53"]
    }
  }, "-", "1", ",", "throw", "a", {
    "value": "TypeError"
  }, "exception", "."]
}, {
  "tokens": ["Perform", "?", "CreateDataPropertyOrThrow", "(", {
    "id": "target"
  }, ",", "!", "ToString", "(", {
    "id": "targetIndex"
  }, ")", ",", {
    "id": "element"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "targetIndex"
  }, "to", {
    "id": "targetIndex"
  }, "+", "1", "."]
}, {
  "tokens": ["Set", {
    "id": "sourceIndex"
  }, "to", {
    "id": "sourceIndex"
  }, "+", "1", "."]
}, {
  "tokens": ["Return", {
    "id": "targetIndex"
  }, "."]
}]