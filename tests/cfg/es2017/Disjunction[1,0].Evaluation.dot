digraph {
  node12960 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let m1 = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12961 [shape=cds, label=<<font color="black">1:access __x1__ = (Disjunction &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12959 [shape=cds, label=<<font color="black">0:access __x0__ = (Alternative &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node12962 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let m2 = __x1__</td></tr>
      <tr><td align="left">2:??? &quot;Return an internal Matcher closure that takes two arguments , a State id:{x} and a Continuation id:{c} , and performs the following steps when evaluated : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12958 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12957 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12957 -> node12959 [ color="black"]
  node12961 -> node12962 [ color="black"]
  node12959 -> node12960 [ color="black"]
  node12962 -> node12958 [ color="black"]
  node12960 -> node12961 [ color="black"]
}
