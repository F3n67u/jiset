digraph {
  node17888 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17884 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17882 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17885 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node17887 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node17889 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node17890 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17883 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17888 -> node17889 [ color="black"]
  node17890 -> node17883 [ color="black"]
  node17886 -> node17887 [ color="black"]
  node17882 -> node17884 [ color="black"]
  node17884 -> node17885 [ color="black"]
  node17885 -> node17886 [label=<<font color="black">true</font>> color="black"]
  node17885 -> node17887 [label=<<font color="black">false</font>> color="black"]
  node17889 -> node17890 [ color="black"]
  node17887 -> node17888 [ color="black"]
}
