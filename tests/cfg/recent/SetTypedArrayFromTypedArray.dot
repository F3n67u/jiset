digraph {
  node17072 [shape=cds, label=<<font color="black">app __x4__ = (SameValue srcBuffer targetBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let srcByteLength = source.ByteLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17082 [shape=cds, label=<<font color="black">32:app __x6__ = (GetValueFromBuffer srcBuffer srcByteIndex CONST_Uint8 true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node17061 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17086 [shape=diamond, label=<<font color="black">(&lt; targetByteIndex limit)</font>> color="black" fillcolor="white" style=filled]
  node17065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17074 [shape=diamond, label=<<font color="black">(= same true)</font>> color="black" fillcolor="white" style=filled]
  node17050 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17083 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">32:let value = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17077 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:srcBuffer = [? __x5__]</td></tr>
      <tr><td align="left">25:let srcByteIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17066 [shape=cds, label=<<font color="black">20:app __x2__ = (IsSharedArrayBuffer srcBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17051 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let targetBuffer = target.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let same = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17088 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:let value = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17063 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17084 [shape=cds, label=<<font color="black">33:app __x7__ = (SetValueInBuffer targetBuffer targetByteIndex CONST_Uint8 value true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node17076 [shape=cds, label=<<font color="black">23:app __x5__ = (CloneArrayBuffer srcBuffer srcByteOffset srcByteLength INTRINSIC_ArrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17079 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let targetByteIndex = (+ (* targetOffset targetElementSize) targetByteOffset)</td></tr>
      <tr><td align="left">28:let limit = (* (+ targetByteIndex targetElementSize) srcLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17068 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x2__ true) (= __x3__ true))</font>> color="black" fillcolor="white" style=filled]
  node17081 [shape=diamond, label=<<font color="black">(&lt; targetByteIndex limit)</font>> color="black" fillcolor="white" style=filled]
  node17053 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node17049 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17085 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:__x7__</td></tr>
      <tr><td align="left">34:srcByteIndex = (+ srcByteIndex 1i)</td></tr>
      <tr><td align="left">35:targetByteIndex = (+ targetByteIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17090 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:__x9__</td></tr>
      <tr><td align="left">40:srcByteIndex = (+ srcByteIndex srcElementSize)</td></tr>
      <tr><td align="left">41:targetByteIndex = (+ targetByteIndex targetElementSize)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17078 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let srcByteIndex = srcByteOffset</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17064 [shape=diamond, label=<<font color="black">(! (== target.ContentType source.ContentType))</font>> color="black" fillcolor="white" style=filled]
  node17069 [shape=diamond, label=<<font color="black">(= srcBuffer.ArrayBufferData targetBuffer.ArrayBufferData)</font>> color="black" fillcolor="white" style=filled]
  node17070 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let same = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17080 [shape=diamond, label=<<font color="black">(= srcType targetType)</font>> color="black" fillcolor="white" style=filled]
  node17055 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let targetLength = target.ArrayLength</td></tr>
      <tr><td align="left">4:let srcBuffer = source.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17087 [shape=cds, label=<<font color="black">38:app __x8__ = (GetValueFromBuffer srcBuffer srcByteIndex srcType true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node17060 [shape=diamond, label=<<font color="black">(= targetOffset Infinity)</font>> color="black" fillcolor="white" style=filled]
  node17057 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node17089 [shape=cds, label=<<font color="black">39:app __x9__ = (SetValueInBuffer targetBuffer targetByteIndex targetType value true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node17067 [shape=cds, label=<<font color="black">20:app __x3__ = (IsSharedArrayBuffer targetBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17052 [shape=cds, label=<<font color="black">2:app __x0__ = (IsDetachedBuffer targetBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17059 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let targetName = target.TypedArrayName</td></tr>
      <tr><td align="left">7:??? &quot;Let id:{targetType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{targetName} .&quot;</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{targetElementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{targetName} .&quot;</td></tr>
      <tr><td align="left">9:let targetByteOffset = target.ByteOffset</td></tr>
      <tr><td align="left">10:let srcName = source.TypedArrayName</td></tr>
      <tr><td align="left">11:??? &quot;Let id:{srcType} be the Element Type value in link:{unhandled: table-the-typedarray-constructors} for id:{srcName} .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;Let id:{srcElementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{srcName} .&quot;</td></tr>
      <tr><td align="left">13:let srcLength = source.ArrayLength</td></tr>
      <tr><td align="left">14:let srcByteOffset = source.ByteOffset</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17056 [shape=cds, label=<<font color="black">5:app __x1__ = (IsDetachedBuffer srcBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17062 [shape=diamond, label=<<font color="black">(&lt; targetLength (+ srcLength targetOffset))</font>> color="black" fillcolor="white" style=filled]
  node17071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let same = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17087 -> node17088 [ color="black"]
  node17072 -> node17073 [ color="black"]
  node17088 -> node17089 [ color="black"]
  node17060 -> node17061 [label=<<font color="black">true</font>> color="black"]
  node17060 -> node17062 [label=<<font color="black">false</font>> color="black"]
  node17058 -> node17059 [ color="black"]
  node17065 -> node17066 [ color="black"]
  node17055 -> node17056 [ color="black"]
  node17079 -> node17080 [ color="black"]
  node17066 -> node17067 [ color="black"]
  node17071 -> node17074 [ color="black"]
  node17073 -> node17074 [ color="black"]
  node17068 -> node17069 [label=<<font color="black">true</font>> color="black"]
  node17068 -> node17072 [label=<<font color="black">false</font>> color="black"]
  node17057 -> node17058 [label=<<font color="black">true</font>> color="black"]
  node17057 -> node17059 [label=<<font color="black">false</font>> color="black"]
  node17056 -> node17057 [ color="black"]
  node17051 -> node17052 [ color="black"]
  node17053 -> node17054 [label=<<font color="black">true</font>> color="black"]
  node17053 -> node17055 [label=<<font color="black">false</font>> color="black"]
  node17077 -> node17079 [ color="black"]
  node17059 -> node17060 [ color="black"]
  node17069 -> node17070 [label=<<font color="black">true</font>> color="black"]
  node17069 -> node17071 [label=<<font color="black">false</font>> color="black"]
  node17049 -> node17051 [ color="black"]
  node17062 -> node17063 [label=<<font color="black">true</font>> color="black"]
  node17062 -> node17064 [label=<<font color="black">false</font>> color="black"]
  node17078 -> node17079 [ color="black"]
  node17089 -> node17090 [ color="black"]
  node17063 -> node17064 [ color="black"]
  node17052 -> node17053 [ color="black"]
  node17075 -> node17076 [ color="black"]
  node17082 -> node17083 [ color="black"]
  node17070 -> node17074 [ color="black"]
  node17083 -> node17084 [ color="black"]
  node17061 -> node17062 [ color="black"]
  node17081 -> node17082 [label=<<font color="black">true</font>> color="black"]
  node17081 -> node17050 [label=<<font color="black">false</font>> color="black"]
  node17080 -> node17081 [label=<<font color="black">true</font>> color="black"]
  node17080 -> node17086 [label=<<font color="black">false</font>> color="black"]
  node17074 -> node17075 [label=<<font color="black">true</font>> color="black"]
  node17074 -> node17078 [label=<<font color="black">false</font>> color="black"]
  node17067 -> node17068 [ color="black"]
  node17054 -> node17055 [ color="black"]
  node17084 -> node17085 [ color="black"]
  node17064 -> node17065 [label=<<font color="black">true</font>> color="black"]
  node17064 -> node17066 [label=<<font color="black">false</font>> color="black"]
  node17085 -> node17081 [ color="black"]
  node17090 -> node17086 [ color="black"]
  node17086 -> node17087 [label=<<font color="black">true</font>> color="black"]
  node17086 -> node17050 [label=<<font color="black">false</font>> color="black"]
  node17076 -> node17077 [ color="black"]
}
