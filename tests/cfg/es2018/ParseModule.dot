digraph {
  node10174 [shape=diamond, label=<<font color="black">(= ee.ModuleRequest null)</font>> color="black" fillcolor="white" style=filled]
  node10165 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let requestedModules = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10171 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let exportEntries = __x3__</td></tr>
      <tr><td align="left">10:let __x4__ = exportEntries</td></tr>
      <tr><td align="left">10:let __x5__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10180 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;Else this is a re - export of a single name , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10175 [shape=diamond, label=<<font color="black">(! (contains importedBoundNames ee.LocalName))</font>> color="black" fillcolor="white" style=filled]
  node10178 [shape=diamond, label=<<font color="black">(= ie.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10167 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let importEntries = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10173 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let ee = __x4__[__x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10168 [shape=cds, label=<<font color="black">5:app __x2__ = (ImportedLocalNames importEntries)</font>> color="black" fillcolor="white" style=filled]
  node10161 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10166 [shape=cds, label=<<font color="black">4:access __x1__ = (body &quot;ImportEntries&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10177 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:??? &quot;Let id:{ie} be the element of id:{importEntries} whose [ [ LocalName ] ] is the same as id:{ee} . [ [ LocalName ] ] .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10181 [shape=diamond, label=<<font color="black">(= ee.ImportName &quot;*&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10170 [shape=cds, label=<<font color="black">9:access __x3__ = (body &quot;ExportEntries&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10185 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:return (new SourceTextModuleRecord(&quot;Realm&quot; -&gt; realm, &quot;Environment&quot; -&gt; undefined, &quot;Namespace&quot; -&gt; undefined, &quot;Status&quot; -&gt; &quot;uninstantiated&quot;, &quot;EvaluationError&quot; -&gt; undefined, &quot;HostDefined&quot; -&gt; hostDefined, &quot;ECMAScriptCode&quot; -&gt; body, &quot;RequestedModules&quot; -&gt; requestedModules, &quot;ImportEntries&quot; -&gt; importEntries, &quot;LocalExportEntries&quot; -&gt; localExportEntries, &quot;IndirectExportEntries&quot; -&gt; indirectExportEntries, &quot;StarExportEntries&quot; -&gt; starExportEntries, &quot;DFSIndex&quot; -&gt; undefined, &quot;DFSAncestorIndex&quot; -&gt; undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10163 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;Parse id:{sourceText} using nt:{Module} as the goal symbol and analyse the parse result for any Early Error conditions . If the parse was successful and no early errors were found , let id:{body} be the resulting parse tree . Otherwise , let id:{body} be a List of one or more value:{SyntaxError} or value:{ReferenceError} objects representing the parsing errors and / or early errors . Parsing and early error detection may be interweaved in an implementation - dependent manner . If more than one parsing error or early error is present , the number and ordering of error objects in the list is implementation - dependent , but at least one must be present .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10183 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append ee -&gt; indirectExportEntries</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append ee -&gt; localExportEntries</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append ee -&gt; localExportEntries</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10172 [shape=diamond, label=<<font color="black">(&lt; __x5__ __x4__.length)</font>> color="black" fillcolor="white" style=filled]
  node10162 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10164 [shape=cds, label=<<font color="black">3:access __x0__ = (body &quot;ModuleRequests&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10169 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let importedBoundNames = __x2__</td></tr>
      <tr><td align="left">6:let indirectExportEntries = (new [])</td></tr>
      <tr><td align="left">7:let localExportEntries = (new [])</td></tr>
      <tr><td align="left">8:let starExportEntries = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append ee -&gt; starExportEntries</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10181 -> node10182 [label=<<font color="black">true</font>> color="black"]
  node10181 -> node10183 [label=<<font color="black">false</font>> color="black"]
  node10164 -> node10165 [ color="black"]
  node10161 -> node10163 [ color="black"]
  node10177 -> node10178 [ color="black"]
  node10176 -> node10184 [ color="black"]
  node10183 -> node10184 [ color="black"]
  node10172 -> node10173 [label=<<font color="black">true</font>> color="black"]
  node10172 -> node10185 [label=<<font color="black">false</font>> color="black"]
  node10185 -> node10162 [ color="black"]
  node10182 -> node10184 [ color="black"]
  node10180 -> node10184 [ color="black"]
  node10173 -> node10174 [ color="black"]
  node10165 -> node10166 [ color="black"]
  node10166 -> node10167 [ color="black"]
  node10170 -> node10171 [ color="black"]
  node10169 -> node10170 [ color="black"]
  node10168 -> node10169 [ color="black"]
  node10175 -> node10176 [label=<<font color="black">true</font>> color="black"]
  node10175 -> node10177 [label=<<font color="black">false</font>> color="black"]
  node10184 -> node10172 [ color="black"]
  node10174 -> node10175 [label=<<font color="black">true</font>> color="black"]
  node10174 -> node10181 [label=<<font color="black">false</font>> color="black"]
  node10163 -> node10164 [ color="black"]
  node10167 -> node10168 [ color="black"]
  node10178 -> node10179 [label=<<font color="black">true</font>> color="black"]
  node10178 -> node10180 [label=<<font color="black">false</font>> color="black"]
  node10179 -> node10180 [ color="black"]
  node10171 -> node10172 [ color="black"]
}
