digraph {
  node16808 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16809 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:assert (! (= typedArray.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">9:let buffer = typedArray.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16822 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return buffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16812 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let typeName = typedArray.TypedArrayName</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16819 [shape=cds, label=<<font color="black">10:app __x1__ = (IsSharedArrayBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16806 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">onlyInt32 = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16811 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16820 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node16803 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16804 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16816 [shape=diamond, label=<<font color="black">(! (|| (|| (|| (|| (|| (= typeName &quot;Int8Array&quot;) (= typeName &quot;Uint8Array&quot;)) (= typeName &quot;Int16Array&quot;)) (= typeName &quot;Uint16Array&quot;)) (= typeName &quot;Int32Array&quot;)) (= typeName &quot;Uint32Array&quot;)))</font>> color="black" fillcolor="white" style=filled]
  node16821 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16805 [shape=diamond, label=<<font color="black">(= onlyInt32 absent)</font>> color="black" fillcolor="white" style=filled]
  node16815 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16807 [shape=cds, label=<<font color="black">1:app __x0__ = (Type typedArray)</font>> color="black" fillcolor="white" style=filled]
  node16814 [shape=diamond, label=<<font color="black">(! (= typeName &quot;Int32Array&quot;))</font>> color="black" fillcolor="white" style=filled]
  node16813 [shape=diamond, label=<<font color="black">(= onlyInt32 true)</font>> color="black" fillcolor="white" style=filled]
  node16810 [shape=diamond, label=<<font color="black">(= typedArray.TypedArrayName absent)</font>> color="black" fillcolor="white" style=filled]
  node16818 -> node16819 [ color="black"]
  node16803 -> node16805 [ color="black"]
  node16811 -> node16812 [ color="black"]
  node16821 -> node16822 [ color="black"]
  node16807 -> node16808 [ color="black"]
  node16819 -> node16820 [ color="black"]
  node16805 -> node16806 [label=<<font color="black">true</font>> color="black"]
  node16805 -> node16807 [label=<<font color="black">false</font>> color="black"]
  node16809 -> node16810 [ color="black"]
  node16806 -> node16807 [ color="black"]
  node16814 -> node16815 [label=<<font color="black">true</font>> color="black"]
  node16814 -> node16818 [label=<<font color="black">false</font>> color="black"]
  node16812 -> node16813 [ color="black"]
  node16820 -> node16821 [label=<<font color="black">true</font>> color="black"]
  node16820 -> node16822 [label=<<font color="black">false</font>> color="black"]
  node16815 -> node16818 [ color="black"]
  node16813 -> node16814 [label=<<font color="black">true</font>> color="black"]
  node16813 -> node16816 [label=<<font color="black">false</font>> color="black"]
  node16816 -> node16817 [label=<<font color="black">true</font>> color="black"]
  node16816 -> node16818 [label=<<font color="black">false</font>> color="black"]
  node16817 -> node16818 [ color="black"]
  node16810 -> node16811 [label=<<font color="black">true</font>> color="black"]
  node16810 -> node16812 [label=<<font color="black">false</font>> color="black"]
  node16822 -> node16804 [ color="black"]
  node16808 -> node16809 [label=<<font color="black">true</font>> color="black"]
  node16808 -> node16810 [label=<<font color="black">false</font>> color="black"]
}
