{
  app string = (GetArgument argumentsList 0i)
  [0] app __x0__ = (ToString string)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [71] {}
  [0] let inputString = __x0__
  [1] app __x1__ = (TrimString inputString CONST_start)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [71] {}
  [1] let trimmedString = __x1__
  [2] ??? "If neither id:{trimmedString} nor any prefix of id:{trimmedString} satisfies the syntax of a nt:{StrDecimalLiteral} ( see link:{} ) , return value:{NaN} ."
  [3] ??? "Let id:{numberString} be the longest prefix of id:{trimmedString} , which might be id:{trimmedString} itself , that satisfies the syntax of a nt:{StrDecimalLiteral} ."
  [4] access __x2__ = (numberString "MV")
  [4] let mathFloat = __x2__
  [5] if (== mathFloat 0i) {
    [6] ??? "If the first code unit of id:{trimmedString} is the code unit 0x002D ( HYPHEN - MINUS ) , return value:{-0} ."
    [7] app __x3__ = (WrapCompletion 0i)
    [7] return __x3__
  } else [71] {}
  [8] ??? "Return ùîΩ ( id:{mathFloat} ) ."
}