["Let", {
  "id": "stack"
}, "be", "a", "new", "empty", "List", ".", {
  "k": 0
}, "Let", {
  "id": "indent"
}, "be", "the", "empty", "String", ".", {
  "k": 1
}, "Let", {
  "id": "PropertyList"
}, "and", {
  "id": "ReplacerFunction"
}, "be", {
  "value": "undefined"
}, ".", {
  "k": 2
}, "If", "Type", "(", {
  "id": "replacer"
}, ")", "is", "Object", ",", "then", true, "If", "IsCallable", "(", {
  "id": "replacer"
}, ")", "is", {
  "value": "true"
}, ",", "then", true, "Let", {
  "id": "ReplacerFunction"
}, "be", {
  "id": "replacer"
}, ".", {
  "k": 5
}, false, {
  "k": 4
}, "Else", ",", true, "Let", {
  "id": "isArray"
}, "be", "?", "IsArray", "(", {
  "id": "replacer"
}, ")", ".", {
  "k": 7
}, "If", {
  "id": "isArray"
}, "is", {
  "value": "true"
}, ",", "then", true, "Let", {
  "id": "PropertyList"
}, "be", "a", "new", "empty", "List", ".", {
  "k": 9
}, "Let", {
  "id": "len"
}, "be", "?", "ToLength", "(", "?", "Get", "(", {
  "id": "replacer"
}, ",", {
  "code": "\"length\""
}, ")", ")", ".", {
  "k": 10
}, "Let", {
  "id": "k"
}, "be", "0", ".", {
  "k": 11
}, "Repeat", ",", "while", {
  "id": "k"
}, "<", {
  "id": "len"
}, ",", true, "Let", {
  "id": "v"
}, "be", "?", "Get", "(", {
  "id": "replacer"
}, ",", "!", "ToString", "(", {
  "id": "k"
}, ")", ")", ".", {
  "k": 13
}, "Let", {
  "id": "item"
}, "be", {
  "value": "undefined"
}, ".", {
  "k": 14
}, "If", "Type", "(", {
  "id": "v"
}, ")", "is", "String", ",", "let", {
  "id": "item"
}, "be", {
  "id": "v"
}, ".", {
  "k": 15
}, "Else", "if", "Type", "(", {
  "id": "v"
}, ")", "is", "Number", ",", "let", {
  "id": "item"
}, "be", "!", "ToString", "(", {
  "id": "v"
}, ")", ".", {
  "k": 16
}, "Else", "if", "Type", "(", {
  "id": "v"
}, ")", "is", "Object", ",", "then", true, "If", {
  "id": "v"
}, "has", "a", "[", "[", "StringData", "]", "]", "or", "[", "[", "NumberData", "]", "]", "internal", "slot", ",", "let", {
  "id": "item"
}, "be", "?", "ToString", "(", {
  "id": "v"
}, ")", ".", {
  "k": 18
}, false, {
  "k": 17
}, "If", {
  "id": "item"
}, "is", "not", {
  "value": "undefined"
}, "and", {
  "id": "item"
}, "is", "not", "currently", "an", "element", "of", {
  "id": "PropertyList"
}, ",", "then", true, "Append", {
  "id": "item"
}, "to", "the", "end", "of", {
  "id": "PropertyList"
}, ".", {
  "k": 20
}, false, {
  "k": 19
}, "Let", {
  "id": "k"
}, "be", {
  "id": "k"
}, "+", "1", ".", {
  "k": 21
}, false, {
  "k": 12
}, false, {
  "k": 8
}, false, {
  "k": 6
}, false, {
  "k": 3
}, "If", "Type", "(", {
  "id": "space"
}, ")", "is", "Object", ",", "then", true, "If", {
  "id": "space"
}, "has", "a", "[", "[", "NumberData", "]", "]", "internal", "slot", ",", "then", true, "Let", {
  "id": "space"
}, "be", "?", "ToNumber", "(", {
  "id": "space"
}, ")", ".", {
  "k": 24
}, false, {
  "k": 23
}, "Else", "if", {
  "id": "space"
}, "has", "a", "[", "[", "StringData", "]", "]", "internal", "slot", ",", "then", true, "Let", {
  "id": "space"
}, "be", "?", "ToString", "(", {
  "id": "space"
}, ")", ".", {
  "k": 26
}, false, {
  "k": 25
}, false, {
  "k": 22
}, "If", "Type", "(", {
  "id": "space"
}, ")", "is", "Number", ",", "then", true, "Let", {
  "id": "space"
}, "be", "min", "(", "10", ",", "ToInteger", "(", {
  "id": "space"
}, ")", ")", ".", {
  "k": 28
}, "Set", {
  "id": "gap"
}, "to", "the", "String", "value", "containing", {
  "id": "space"
}, "occurrences", "of", "the", "code", "unit", "0x0020", "(", "SPACE", ")", ".", "This", "will", "be", "the", "empty", "String", "if", {
  "id": "space"
}, "is", "less", "than", "1", ".", {
  "k": 29
}, false, {
  "k": 27
}, "Else", "if", "Type", "(", {
  "id": "space"
}, ")", "is", "String", ",", "then", true, "If", "the", "length", "of", {
  "id": "space"
}, "is", "10", "or", "less", ",", "set", {
  "id": "gap"
}, "to", {
  "id": "space"
}, ";", "otherwise", "set", {
  "id": "gap"
}, "to", "the", "String", "value", "consisting", "of", "the", "first", "10", "elements", "of", {
  "id": "space"
}, ".", {
  "k": 31
}, false, {
  "k": 30
}, "Else", ",", true, "Set", {
  "id": "gap"
}, "to", "the", "empty", "String", ".", {
  "k": 33
}, false, {
  "k": 32
}, "Let", {
  "id": "wrapper"
}, "be", "ObjectCreate", "(", "%", "ObjectPrototype", "%", ")", ".", {
  "k": 34
}, "Let", {
  "id": "status"
}, "be", "CreateDataProperty", "(", {
  "id": "wrapper"
}, ",", "the", "empty", "String", ",", {
  "id": "value"
}, ")", ".", {
  "k": 35
}, "Assert", ":", {
  "id": "status"
}, "is", {
  "value": "true"
}, ".", {
  "k": 36
}, "Return", "?", "SerializeJSONProperty", "(", "the", "empty", "String", ",", {
  "id": "wrapper"
}, ")", ".", {
  "k": 37
}]