digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return parseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node2 [shape=diamond, label=<<font color="black">(= u true)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{parseResult} be ParseText ( id:{patternText} , | Pattern [ + U , + N ] | ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:??? &quot;Let id:{parseResult} be ParseText ( id:{patternText} , | Pattern [ ~ U , ~ N ] | ) .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;If id:{parseResult} is a Parse Node and id:{parseResult} contains a nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node0 -> node2 [ color="black"]
  node2 -> node3 [label=<<font color="black">true</font>> color="black"]
  node2 -> node4 [label=<<font color="black">false</font>> color="black"]
  node4 -> node5 [ color="black"]
  node3 -> node5 [ color="black"]
  node5 -> node1 [ color="black"]
}
