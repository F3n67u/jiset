{
  [0] if (= max 0i) {
    app __x0__ = (c x)
    app __x1__ = (WrapCompletion __x0__)
    return __x1__
  } else [6] {}
  [1] ??? "Let id:{d} be an internal Continuation closure that takes one State argument id:{y} and performs the following steps when evaluated : step-list:{...}"
  [6] ??? "Let id:{cap} be a fresh copy of id:{x} ' s id:{captures} List ."
  [7] let k = (+ parenIndex 1i)
  [7] let __x2__ = (+ (+ parenIndex parenCount) 1i)
  [7] while (< k __x2__) cap[k] = undefined
  [8] let e = x.endIndex
  [9] let xr = (new [e, cap])
  [10] if (! (= min 0i)) {
    app __x3__ = (m xr d)
    app __x4__ = (WrapCompletion __x3__)
    return __x4__
  } else [6] {}
  [11] if (= greedy false) {
    [12] app __x5__ = (c x)
    [12] let z = __x5__
    [13] if (! (= z CONST_failure)) {
      app __x6__ = (WrapCompletion z)
      return __x6__
    } else [6] {}
    [14] app __x7__ = (m xr d)
    [14] return __x7__
  } else [6] {}
  [15] app __x8__ = (m xr d)
  [15] let z = __x8__
  [16] if (! (= z CONST_failure)) {
    app __x9__ = (WrapCompletion z)
    return __x9__
  } else [6] {}
  [17] app __x10__ = (c x)
  [17] return __x10__
}