{
  [0] if (= Desc.Value absent) {
    [1] app __x0__ = (OrdinaryDefineOwnProperty A "length" Desc)
    [1] app __x1__ = (WrapCompletion __x0__)
    [1] return __x1__
  } else [16] {}
  [2] let newLenDesc = (copy-obj Desc)
  [3] app __x2__ = (ToUint32 Desc.Value)
  [3] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [16] {}
  [3] let newLen = __x2__
  [4] app __x3__ = (ToNumber Desc.Value)
  [4] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [16] {}
  [4] let numberLen = __x3__
  [5] ??? "If id:{newLen} is not the same value as id:{numberLen} , throw a value:{RangeError} exception ."
  [6] newLenDesc.Value = newLen
  [7] app __x4__ = (OrdinaryGetOwnProperty A "length")
  [7] let oldLenDesc = __x4__
  [8] app __x5__ = (IsDataDescriptor oldLenDesc)
  [8] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [16] {}
  [8] assert (= __x5__ true)
  [9] assert (= oldLenDesc.Configurable false)
  [10] let oldLen = oldLenDesc.Value
  [11] if (! (< newLen oldLen)) {
    [12] app __x6__ = (OrdinaryDefineOwnProperty A "length" newLenDesc)
    [12] app __x7__ = (WrapCompletion __x6__)
    [12] return __x7__
  } else [16] {}
  [13] if (= oldLenDesc.Writable false) {
    app __x8__ = (WrapCompletion false)
    return __x8__
  } else [16] {}
  [15] if (|| (= newLenDesc.Writable absent) (= newLenDesc.Writable true)) let newWritable = true else {
    [17] let newWritable = false
    [18] newLenDesc.Writable = true
  }
  [19] app __x9__ = (OrdinaryDefineOwnProperty A "length" newLenDesc)
  [19] if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else [16] {}
  [19] let succeeded = __x9__
  [20] if (= succeeded false) {
    app __x10__ = (WrapCompletion false)
    return __x10__
  } else [16] {}
  [21] ??? "For each own property key id:{P} of id:{A} that is an array index , whose numeric value is greater than or equal to id:{newLen} , in descending numeric index order , do step-list:{...}"
  [28] if (= newWritable false) {
    [29] app __x11__ = (OrdinaryDefineOwnProperty A "length" (new PropertyDescriptor("Writable" -> false)))
    [29] if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else [16] {}
    [29] let succeeded = __x11__
    [30] assert (= succeeded true)
  } else [16] {}
  [31] app __x12__ = (WrapCompletion true)
  [31] return __x12__
}