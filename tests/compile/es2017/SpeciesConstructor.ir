{
  [0] app __x0__ = (Type O)
  [0] assert (= __x0__ Object)
  [1] app __x1__ = (Get O "constructor")
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [0] {}
  [1] let C = __x1__
  [2] if (= C undefined) {
    app __x2__ = (WrapCompletion defaultConstructor)
    return __x2__
  } else [0] {}
  [3] app __x3__ = (Type C)
  [3] if (! (= __x3__ Object)) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [0] {}
  [4] app __x5__ = (Get C SYMBOL_species)
  [4] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [0] {}
  [4] let S = __x5__
  [5] if (|| (= S undefined) (= S null)) {
    app __x6__ = (WrapCompletion defaultConstructor)
    return __x6__
  } else [0] {}
  [6] app __x7__ = (IsConstructor S)
  [6] if (= __x7__ true) {
    app __x8__ = (WrapCompletion S)
    return __x8__
  } else [0] {}
  [7] app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
  [7] return __x9__
}