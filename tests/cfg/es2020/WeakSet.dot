digraph {
  node16836 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16849 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node16848 [shape=cds, label=<<font color="black">12:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node16840 [shape=cds, label=<<font color="black">8:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node16829 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.WeakSetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16837 [shape=cds, label=<<font color="black">6:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node16825 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16823 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16851 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16834 [shape=cds, label=<<font color="black">5:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node16835 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node16830 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node16845 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16826 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node16841 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16850 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node16847 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16832 [shape=cds, label=<<font color="black">4:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16844 [shape=cds, label=<<font color="black">10:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node16838 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16828 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget &quot;%WeakSet.prototype%&quot; (new [&quot;WeakSetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16843 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16839 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node16824 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16846 [shape=cds, label=<<font color="black">11:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node16827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16842 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node16848 -> node16849 [ color="black"]
  node16842 -> node16843 [label=<<font color="black">true</font>> color="black"]
  node16842 -> node16844 [label=<<font color="black">false</font>> color="black"]
  node16835 -> node16836 [label=<<font color="black">true</font>> color="black"]
  node16835 -> node16837 [label=<<font color="black">false</font>> color="black"]
  node16849 -> node16850 [label=<<font color="black">true</font>> color="black"]
  node16849 -> node16839 [label=<<font color="black">false</font>> color="black"]
  node16844 -> node16845 [ color="black"]
  node16840 -> node16841 [ color="black"]
  node16839 -> node16840 [label=<<font color="black">true</font>> color="black"]
  node16839 -> node16824 [label=<<font color="black">false</font>> color="black"]
  node16837 -> node16838 [ color="black"]
  node16846 -> node16847 [ color="black"]
  node16825 -> node16826 [ color="black"]
  node16833 -> node16834 [ color="black"]
  node16831 -> node16832 [ color="black"]
  node16850 -> node16851 [ color="black"]
  node16845 -> node16846 [ color="black"]
  node16836 -> node16837 [ color="black"]
  node16841 -> node16842 [ color="black"]
  node16823 -> node16825 [ color="black"]
  node16826 -> node16827 [label=<<font color="black">true</font>> color="black"]
  node16826 -> node16828 [label=<<font color="black">false</font>> color="black"]
  node16843 -> node16844 [ color="black"]
  node16847 -> node16848 [ color="black"]
  node16830 -> node16831 [label=<<font color="black">true</font>> color="black"]
  node16830 -> node16832 [label=<<font color="black">false</font>> color="black"]
  node16827 -> node16828 [ color="black"]
  node16829 -> node16830 [ color="black"]
  node16832 -> node16833 [ color="black"]
  node16828 -> node16829 [ color="black"]
  node16851 -> node16839 [ color="black"]
  node16834 -> node16835 [ color="black"]
  node16838 -> node16839 [ color="black"]
}
