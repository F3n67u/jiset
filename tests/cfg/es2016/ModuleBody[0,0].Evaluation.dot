digraph {
  node9818 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9813 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9817 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type CONST_normal) (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node9814 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9815 [shape=cds, label=<<font color="black">0:access __x0__ = (ModuleItemList &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9816 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let result = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9813 -> node9815 [ color="black"]
  node9819 -> node9814 [ color="black"]
  node9818 -> node9819 [ color="black"]
  node9815 -> node9816 [ color="black"]
  node9816 -> node9817 [ color="black"]
  node9817 -> node9818 [label=<<font color="black">true</font>> color="black"]
  node9817 -> node9819 [label=<<font color="black">false</font>> color="black"]
}
