{
  if (= NewTarget undefined) throw INTRINSIC_TypeError else {}
  app __x0__ = (IsCallable executor)
  if (= __x0__ false) throw INTRINSIC_TypeError else {}
  app __x1__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_PromisePrototype (new ["PromiseState", "PromiseResult", "PromiseFulfillReactions", "PromiseRejectReactions", "PromiseIsHandled"]))
  let promise = [? __x1__]
  promise.PromiseState = "pending"
  promise.PromiseFulfillReactions = (new [])
  promise.PromiseRejectReactions = (new [])
  promise.PromiseIsHandled = false
  app __x2__ = (CreateResolvingFunctions promise)
  let resolvingFunctions = __x2__
  app __x3__ = (Call executor undefined (new [resolvingFunctions.Resolve, resolvingFunctions.Reject]))
  let completion = __x3__
  app __x4__ = (IsAbruptCompletion completion)
  if __x4__ {
    app __x5__ = (Call resolvingFunctions.Reject undefined (new [completion.Value]))
    [? __x5__]
  } else {}
  return promise
}