digraph {
  node16619 [shape=cds, label=<<font color="black">7:app __x1__ = (RejectPromise promise selfResolutionError)</font>> color="black" fillcolor="white" style=filled]
  node16626 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let then = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16632 [shape=cds, label=<<font color="black">14:app __x7__ = (IsCallable thenAction)</font>> color="black" fillcolor="white" style=filled]
  node16611 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16621 [shape=cds, label=<<font color="black">8:app __x2__ = (Type resolution)</font>> color="black" fillcolor="white" style=filled]
  node16628 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node16610 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16613 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node16630 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16623 [shape=cds, label=<<font color="black">9:app __x3__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node16636 [shape=cds, label=<<font color="black">16:app __x9__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseResolveThenableJob (new [promise, resolution, thenAction]))</font>> color="black" fillcolor="white" style=filled]
  node16633 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node16616 [shape=cds, label=<<font color="black">5:app __x0__ = (SameValue resolution promise)</font>> color="black" fillcolor="white" style=filled]
  node16629 [shape=cds, label=<<font color="black">12:app __x6__ = (RejectPromise promise then.Value)</font>> color="black" fillcolor="white" style=filled]
  node16620 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16625 [shape=cds, label=<<font color="black">10:app __x4__ = (Get resolution &quot;then&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16624 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16615 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:__x9__</td></tr>
      <tr><td align="left">17:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16612 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promise = F.Promise</td></tr>
      <tr><td align="left">2:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16617 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node16634 [shape=cds, label=<<font color="black">15:app __x8__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node16631 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let thenAction = then.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16618 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let selfResolutionError = ??? &quot;TypeError&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16614 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16627 [shape=cds, label=<<font color="black">11:app __x5__ = (IsAbruptCompletion then)</font>> color="black" fillcolor="white" style=filled]
  node16622 [shape=diamond, label=<<font color="black">(! (= __x2__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16624 -> node16625 [ color="black"]
  node16615 -> node16616 [ color="black"]
  node16612 -> node16613 [ color="black"]
  node16637 -> node16611 [ color="black"]
  node16631 -> node16632 [ color="black"]
  node16619 -> node16620 [ color="black"]
  node16626 -> node16627 [ color="black"]
  node16613 -> node16614 [label=<<font color="black">true</font>> color="black"]
  node16613 -> node16615 [label=<<font color="black">false</font>> color="black"]
  node16630 -> node16631 [ color="black"]
  node16616 -> node16617 [ color="black"]
  node16634 -> node16635 [ color="black"]
  node16620 -> node16621 [ color="black"]
  node16635 -> node16636 [ color="black"]
  node16632 -> node16633 [ color="black"]
  node16617 -> node16618 [label=<<font color="black">true</font>> color="black"]
  node16617 -> node16621 [label=<<font color="black">false</font>> color="black"]
  node16628 -> node16629 [label=<<font color="black">true</font>> color="black"]
  node16628 -> node16631 [label=<<font color="black">false</font>> color="black"]
  node16625 -> node16626 [ color="black"]
  node16614 -> node16615 [ color="black"]
  node16610 -> node16612 [ color="black"]
  node16623 -> node16624 [ color="black"]
  node16633 -> node16634 [label=<<font color="black">true</font>> color="black"]
  node16633 -> node16636 [label=<<font color="black">false</font>> color="black"]
  node16629 -> node16630 [ color="black"]
  node16636 -> node16637 [ color="black"]
  node16618 -> node16619 [ color="black"]
  node16627 -> node16628 [ color="black"]
  node16621 -> node16622 [ color="black"]
  node16622 -> node16623 [label=<<font color="black">true</font>> color="black"]
  node16622 -> node16625 [label=<<font color="black">false</font>> color="black"]
}
