digraph {
  node12575 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let z = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12568 [shape=cds, label=<<font color="black">12:app __x2__ = (c x)</font>> color="black" fillcolor="white" style=filled]
  node12578 [shape=cds, label=<<font color="black">17:app __x5__ = (c x)</font>> color="black" fillcolor="white" style=filled]
  node12559 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12565 [shape=cds, label=<<font color="black">app __x1__ = (m xr d)</font>> color="black" fillcolor="white" style=filled]
  node12571 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return z</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12558 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12577 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return z</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12566 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12574 [shape=cds, label=<<font color="black">15:app __x4__ = (m xr d)</font>> color="black" fillcolor="white" style=filled]
  node12567 [shape=diamond, label=<<font color="black">(= greedy false)</font>> color="black" fillcolor="white" style=filled]
  node12560 [shape=diamond, label=<<font color="black">(= max 0i)</font>> color="black" fillcolor="white" style=filled]
  node12579 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12564 [shape=diamond, label=<<font color="black">(! (= min 0i))</font>> color="black" fillcolor="white" style=filled]
  node12570 [shape=diamond, label=<<font color="black">(! (= z CONST_failure))</font>> color="black" fillcolor="white" style=filled]
  node12561 [shape=cds, label=<<font color="black">app __x0__ = (c x)</font>> color="black" fillcolor="white" style=filled]
  node12576 [shape=diamond, label=<<font color="black">(! (= z CONST_failure))</font>> color="black" fillcolor="white" style=filled]
  node12572 [shape=cds, label=<<font color="black">14:app __x3__ = (m xr d)</font>> color="black" fillcolor="white" style=filled]
  node12562 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12573 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12563 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;Create an internal Continuation closure id:{d} that takes one State argument id:{y} and performs the following steps when evaluated : in:{} out:{}&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{cap} be a fresh copy of id:{x} ' s id:{captures} List .&quot;</td></tr>
      <tr><td align="left">7:??? &quot;For every integer id:{k} that satisfies id:{parenIndex} &lt; id:{k} and id:{k} &le; id:{parenIndex} + id:{parenCount} , set id:{cap} [ id:{k} ] to value:{undefined} .&quot;</td></tr>
      <tr><td align="left">8:let e = x.endIndex</td></tr>
      <tr><td align="left">9:let xr = (new [e, cap])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12569 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let z = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12562 -> node12563 [ color="black"]
  node12560 -> node12561 [label=<<font color="black">true</font>> color="black"]
  node12560 -> node12563 [label=<<font color="black">false</font>> color="black"]
  node12563 -> node12564 [ color="black"]
  node12575 -> node12576 [ color="black"]
  node12579 -> node12559 [ color="black"]
  node12569 -> node12570 [ color="black"]
  node12566 -> node12567 [ color="black"]
  node12564 -> node12565 [label=<<font color="black">true</font>> color="black"]
  node12564 -> node12567 [label=<<font color="black">false</font>> color="black"]
  node12573 -> node12574 [ color="black"]
  node12565 -> node12566 [ color="black"]
  node12578 -> node12579 [ color="black"]
  node12561 -> node12562 [ color="black"]
  node12572 -> node12573 [ color="black"]
  node12571 -> node12572 [ color="black"]
  node12570 -> node12571 [label=<<font color="black">true</font>> color="black"]
  node12570 -> node12572 [label=<<font color="black">false</font>> color="black"]
  node12574 -> node12575 [ color="black"]
  node12558 -> node12560 [ color="black"]
  node12577 -> node12578 [ color="black"]
  node12567 -> node12568 [label=<<font color="black">true</font>> color="black"]
  node12567 -> node12574 [label=<<font color="black">false</font>> color="black"]
  node12576 -> node12577 [label=<<font color="black">true</font>> color="black"]
  node12576 -> node12578 [label=<<font color="black">false</font>> color="black"]
  node12568 -> node12569 [ color="black"]
}
