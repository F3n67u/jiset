{
  [0] if (is-completion V) if (= V.Type CONST_normal) V = V.Value else return V else [14] {}
  [0] V
  [1] if (is-completion W) if (= W.Type CONST_normal) W = W.Value else return W else [14] {}
  [1] W
  [2] ??? "If id:{V} is not a Reference Record , throw a value:{ReferenceError} exception ."
  [3] app __x0__ = (IsUnresolvableReference V)
  [3] if (= __x0__ true) {
    [4] if (= V.Strict true) {
      app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_ReferenceError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x1__
    } else [14] {}
    [5] app __x2__ = (GetGlobalObject )
    [5] let globalObj = __x2__
    [6] app __x3__ = (Set globalObj V.ReferencedName W false)
    [6] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [14] {}
    [6] app __x4__ = (WrapCompletion __x3__)
    [6] return __x4__
  } else [14] {}
  [12] app __x5__ = (IsPropertyReference V)
  [12] if (= __x5__ true) {
    [8] app __x6__ = (ToObject V.Base)
    [8] if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else [14] {}
    [8] let baseObj = __x6__
    [9] app __x7__ = (GetThisValue V)
    [9] app __x8__ = (baseObj.Set baseObj V.ReferencedName W __x7__)
    [9] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [14] {}
    [9] let succeeded = __x8__
    [10] if (&& (= succeeded false) (= V.Strict true)) {
      app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
      return __x9__
    } else [14] {}
    [11] app __x10__ = (NormalCompletion undefined)
    [11] return __x10__
  } else {
    [13] let base = V.Base
    [15] app __x11__ = (base.SetMutableBinding base V.ReferencedName W V.Strict)
    [15] if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else [14] {}
    [15] app __x12__ = (WrapCompletion __x11__)
    [15] return __x12__
  }
}