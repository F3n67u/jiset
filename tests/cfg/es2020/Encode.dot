digraph {
  node12221 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let cp = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12215 [shape=diamond, label=<<font color="black">(= k strLen)</font>> color="black" fillcolor="white" style=filled]
  node12211 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12223 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw URIError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12218 [shape=diamond, label=<<font color="black">(contains unescapedSet C)</font>> color="black" fillcolor="white" style=filled]
  node12214 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node12224 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:k = (+ k cp.CodeUnitCount)</td></tr>
      <tr><td align="left">13:??? &quot;Let id:{Octets} be the List of octets resulting by applying the UTF - 8 transformation to id:{cp} . [ [ CodePoint ] ] .&quot;</td></tr>
      <tr><td align="left">14:let __x1__ = Octets</td></tr>
      <tr><td align="left">14:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12219 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:k = (+ k 1i)</td></tr>
      <tr><td align="left">8:R = (+ R C)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12226 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let octet = __x1__[__x2__]</td></tr>
      <tr><td align="left">15:R = (+ (+ ??? &quot;StringOp&quot; &quot;%&quot;) ??? &quot;StringOp&quot;)</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12209 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12213 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let strLen = string.length</td></tr>
      <tr><td align="left">1:let R = &quot;&quot;</td></tr>
      <tr><td align="left">2:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12220 [shape=cds, label=<<font color="black">10:app __x0__ = (CodePointAt string k)</font>> color="black" fillcolor="white" style=filled]
  node12225 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node12212 [shape=cds, label=<<font color="black">app unescapedSet = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12217 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let C = string[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12222 [shape=diamond, label=<<font color="black">(= cp.IsUnpairedSurrogate true)</font>> color="black" fillcolor="white" style=filled]
  node12216 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return R</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12210 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12213 -> node12214 [ color="black"]
  node12220 -> node12221 [ color="black"]
  node12217 -> node12218 [ color="black"]
  node12222 -> node12223 [label=<<font color="black">true</font>> color="black"]
  node12222 -> node12224 [label=<<font color="black">false</font>> color="black"]
  node12211 -> node12212 [ color="black"]
  node12223 -> node12224 [ color="black"]
  node12225 -> node12226 [label=<<font color="black">true</font>> color="black"]
  node12225 -> node12214 [label=<<font color="black">false</font>> color="black"]
  node12214 -> node12215 [label=<<font color="black">true</font>> color="black"]
  node12214 -> node12210 [label=<<font color="black">false</font>> color="black"]
  node12215 -> node12216 [label=<<font color="black">true</font>> color="black"]
  node12215 -> node12217 [label=<<font color="black">false</font>> color="black"]
  node12212 -> node12213 [ color="black"]
  node12219 -> node12214 [ color="black"]
  node12218 -> node12219 [label=<<font color="black">true</font>> color="black"]
  node12218 -> node12220 [label=<<font color="black">false</font>> color="black"]
  node12216 -> node12217 [ color="black"]
  node12226 -> node12225 [ color="black"]
  node12209 -> node12211 [ color="black"]
  node12224 -> node12225 [ color="black"]
  node12221 -> node12222 [ color="black"]
}
