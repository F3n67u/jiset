{
  app __x0__ = (NewPromiseCapability INTRINSIC_Promise)
  let promiseCapability = [! __x0__]
  app __x1__ = (FunctionDeclarationInstantiation functionObject argumentsList)
  let declResult = __x1__
  app __x2__ = (IsAbruptCompletion declResult)
  if (! __x2__) {
    app __x3__ = (AsyncFunctionStart promiseCapability AssignmentExpression)
    [! __x3__]
  } else {
    app __x4__ = (Call promiseCapability.Reject undefined (new [declResult.Value]))
    [! __x4__]
  }
  return (new Completion("Type" -> CONST_return, "Value" -> promiseCapability.Promise, "Target" -> CONST_empty))
}