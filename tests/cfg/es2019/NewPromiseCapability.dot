digraph {
  node17437 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor C)</font>> color="black" fillcolor="white" style=filled]
  node17446 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node17449 [shape=diamond, label=<<font color="black">(= __x4__ false)</font>> color="black" fillcolor="white" style=filled]
  node17442 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let executor = __x1__</td></tr>
      <tr><td align="left">5:executor.Capability = promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17440 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = (new PromiseCapability(&quot;Promise&quot; -&gt; undefined, &quot;Resolve&quot; -&gt; undefined, &quot;Reject&quot; -&gt; undefined))</td></tr>
      <tr><td align="left">3:let steps = GetCapabilitiesExecutorFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17445 [shape=cds, label=<<font color="black">7:app __x3__ = (IsCallable promiseCapability.Resolve)</font>> color="black" fillcolor="white" style=filled]
  node17450 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17436 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17439 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:promiseCapability.Promise = promise</td></tr>
      <tr><td align="left">10:return promiseCapability</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17448 [shape=cds, label=<<font color="black">8:app __x4__ = (IsCallable promiseCapability.Reject)</font>> color="black" fillcolor="white" style=filled]
  node17444 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let promise = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17435 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17438 [shape=diamond, label=<<font color="black">(= __x0__ false)</font>> color="black" fillcolor="white" style=filled]
  node17447 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17443 [shape=cds, label=<<font color="black">6:app __x2__ = (Construct C (new [executor]))</font>> color="black" fillcolor="white" style=filled]
  node17441 [shape=cds, label=<<font color="black">4:app __x1__ = (CreateBuiltinFunction steps (new [&quot;Capability&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17444 -> node17445 [ color="black"]
  node17445 -> node17446 [ color="black"]
  node17446 -> node17447 [label=<<font color="black">true</font>> color="black"]
  node17446 -> node17448 [label=<<font color="black">false</font>> color="black"]
  node17442 -> node17443 [ color="black"]
  node17440 -> node17441 [ color="black"]
  node17450 -> node17451 [ color="black"]
  node17447 -> node17448 [ color="black"]
  node17438 -> node17439 [label=<<font color="black">true</font>> color="black"]
  node17438 -> node17440 [label=<<font color="black">false</font>> color="black"]
  node17441 -> node17442 [ color="black"]
  node17449 -> node17450 [label=<<font color="black">true</font>> color="black"]
  node17449 -> node17451 [label=<<font color="black">false</font>> color="black"]
  node17443 -> node17444 [ color="black"]
  node17448 -> node17449 [ color="black"]
  node17437 -> node17438 [ color="black"]
  node17435 -> node17437 [ color="black"]
  node17439 -> node17440 [ color="black"]
  node17451 -> node17436 [ color="black"]
}
