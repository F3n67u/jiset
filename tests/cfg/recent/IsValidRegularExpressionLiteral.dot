digraph {
  node4110 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let patternText = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let parseResult = __x3__</td></tr>
      <tr><td align="left">8:??? &quot;If id:{parseResult} is a Parse Node , return value:{true} ; else return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4115 [shape=diamond, label=<<font color="black">(= u false)</font>> color="black" fillcolor="white" style=filled]
  node4116 [shape=cds, label=<<font color="black">5:app __x2__ = (CodePointsToString patternText)</font>> color="black" fillcolor="white" style=filled]
  node4112 [shape=diamond, label=<<font color="black">(contains __x1__ ??? &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4107 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4113 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let u = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4117 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let stringValue = __x2__</td></tr>
      <tr><td align="left">6:??? &quot;Set id:{patternText} to the sequence of code points resulting from interpreting each of the 16 - bit elements of id:{stringValue} as a Unicode BMP code point . UTF - 16 decoding is not applied to the elements .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let u = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4118 [shape=cds, label=<<font color="black">7:app __x3__ = (ParsePattern patternText u)</font>> color="black" fillcolor="white" style=filled]
  node4108 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (is-instance-of literal RegularExpressionLiteral)</td></tr>
      <tr><td align="left">1:??? &quot;If FlagText of id:{literal} contains any code points other than code:{g} , code:{i} , code:{m} , code:{s} , code:{u} , or code:{y} , or if it contains the same code point more than once , return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4109 [shape=cds, label=<<font color="black">2:access __x0__ = (literal &quot;BodyText&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4106 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4111 [shape=cds, label=<<font color="black">3:access __x1__ = (literal &quot;FlagText&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4109 -> node4110 [ color="black"]
  node4106 -> node4108 [ color="black"]
  node4119 -> node4107 [ color="black"]
  node4114 -> node4115 [ color="black"]
  node4116 -> node4117 [ color="black"]
  node4115 -> node4116 [label=<<font color="black">true</font>> color="black"]
  node4115 -> node4118 [label=<<font color="black">false</font>> color="black"]
  node4108 -> node4109 [ color="black"]
  node4118 -> node4119 [ color="black"]
  node4110 -> node4111 [ color="black"]
  node4111 -> node4112 [ color="black"]
  node4112 -> node4113 [label=<<font color="black">true</font>> color="black"]
  node4112 -> node4114 [label=<<font color="black">false</font>> color="black"]
  node4117 -> node4118 [ color="black"]
  node4113 -> node4115 [ color="black"]
}
