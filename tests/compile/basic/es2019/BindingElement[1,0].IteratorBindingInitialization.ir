{
  if (= iteratorRecord.Done false) {
    app __x0__ = (IteratorStep iteratorRecord)
    let next = __x0__
    app __x1__ = (IsAbruptCompletion next)
    if __x1__ iteratorRecord.Done = true else {}
    [? next]
    if (= next false) iteratorRecord.Done = true else {
      app __x2__ = (IteratorValue next)
      let v = __x2__
      app __x3__ = (IsAbruptCompletion v)
      if __x3__ iteratorRecord.Done = true else {}
      [? v]
    }
  } else {}
  if (= iteratorRecord.Done true) let v = undefined else {}
  if (&& (! (= Initializer absent)) (= v undefined)) {
    access __x4__ = (Initializer "Evaluation")
    let defaultValue = __x4__
    app __x5__ = (GetValue defaultValue)
    v = [? __x5__]
  } else {}
  access __x6__ = (BindingPattern "BindingInitialization")
  app __x7__ = (__x6__ v environment)
  return __x7__
}