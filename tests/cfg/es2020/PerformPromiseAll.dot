digraph {
  node18614 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18627 [shape=cds, label=<<font color="black">16:app __x6__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node18636 [shape=cds, label=<<font color="black">22:app __x9__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node18609 [shape=cds, label=<<font color="black">4:app __x1__ = (Get constructor &quot;resolve&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18632 [shape=cds, label=<<font color="black">19:app __x8__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node18613 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18618 [shape=cds, label=<<font color="black">9:app __x4__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node18608 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18616 [shape=cds, label=<<font color="black">8:app __x3__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18633 [shape=diamond, label=<<font color="black">__x8__</font>> color="black" fillcolor="white" style=filled]
  node18625 [shape=cds, label=<<font color="black">15:app __x5__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node18615 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node18630 [shape=cds, label=<<font color="black">18:app __x7__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node18611 [shape=cds, label=<<font color="black">5:app __x2__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18623 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">13:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18606 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18620 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18610 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let promiseResolve = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18629 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:[? nextValue]</td></tr>
      <tr><td align="left">21:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18603 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18617 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let next = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18624 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node18604 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:let resolveElement = [! __x10__]</td></tr>
      <tr><td align="left">25:resolveElement.AlreadyCalled = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">26:resolveElement.Index = index</td></tr>
      <tr><td align="left">27:resolveElement.Values = values</td></tr>
      <tr><td align="left">28:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">29:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">30:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18607 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node18640 [shape=cds, label=<<font color="black">31:app __x11__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node18626 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let valuesArray = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18641 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:[? __x11__]</td></tr>
      <tr><td align="left">32:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18612 [shape=diamond, label=<<font color="black">(= [! __x2__] false)</font>> color="black" fillcolor="white" style=filled]
  node18631 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let nextValue = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18602 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let nextPromise = [? __x9__]</td></tr>
      <tr><td align="left">23:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.all-resolve-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18622 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node18619 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18605 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18638 [shape=cds, label=<<font color="black">24:app __x10__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18628 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:[? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18629 -> node18630 [ color="black"]
  node18634 -> node18635 [ color="black"]
  node18630 -> node18631 [ color="black"]
  node18631 -> node18632 [ color="black"]
  node18617 -> node18618 [ color="black"]
  node18628 -> node18629 [ color="black"]
  node18607 -> node18608 [ color="black"]
  node18606 -> node18607 [ color="black"]
  node18619 -> node18620 [label=<<font color="black">true</font>> color="black"]
  node18619 -> node18621 [label=<<font color="black">false</font>> color="black"]
  node18639 -> node18640 [ color="black"]
  node18627 -> node18628 [ color="black"]
  node18611 -> node18612 [ color="black"]
  node18637 -> node18638 [ color="black"]
  node18622 -> node18623 [label=<<font color="black">true</font>> color="black"]
  node18622 -> node18630 [label=<<font color="black">false</font>> color="black"]
  node18621 -> node18622 [ color="black"]
  node18626 -> node18627 [ color="black"]
  node18625 -> node18626 [ color="black"]
  node18616 -> node18617 [ color="black"]
  node18624 -> node18625 [label=<<font color="black">true</font>> color="black"]
  node18624 -> node18629 [label=<<font color="black">false</font>> color="black"]
  node18610 -> node18611 [ color="black"]
  node18609 -> node18610 [ color="black"]
  node18620 -> node18621 [ color="black"]
  node18640 -> node18641 [ color="black"]
  node18641 -> node18615 [ color="black"]
  node18618 -> node18619 [ color="black"]
  node18636 -> node18637 [ color="black"]
  node18614 -> node18615 [ color="black"]
  node18612 -> node18613 [label=<<font color="black">true</font>> color="black"]
  node18612 -> node18614 [label=<<font color="black">false</font>> color="black"]
  node18633 -> node18634 [label=<<font color="black">true</font>> color="black"]
  node18633 -> node18635 [label=<<font color="black">false</font>> color="black"]
  node18615 -> node18616 [label=<<font color="black">true</font>> color="black"]
  node18615 -> node18603 [label=<<font color="black">false</font>> color="black"]
  node18638 -> node18639 [ color="black"]
  node18632 -> node18633 [ color="black"]
  node18623 -> node18624 [ color="black"]
  node18608 -> node18609 [ color="black"]
  node18602 -> node18604 [ color="black"]
  node18605 -> node18606 [ color="black"]
  node18613 -> node18614 [ color="black"]
  node18604 -> node18605 [ color="black"]
  node18635 -> node18636 [ color="black"]
}
