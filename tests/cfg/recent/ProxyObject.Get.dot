digraph {
  node3370 [shape=cds, label=<<font color="black">3:app __x1__ = (Type handler)</font>> color="black" fillcolor="white" style=filled]
  node3371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (= __x1__ Object)</td></tr>
      <tr><td align="left">4:let target = O.ProxyTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3375 [shape=cds, label=<<font color="black">7:app __x3__ = (target.Get target P Receiver)</font>> color="black" fillcolor="white" style=filled]
  node3384 [shape=cds, label=<<font color="black">12:app __x7__ = (SameValue trapResult targetDesc.Value)</font>> color="black" fillcolor="white" style=filled]
  node3380 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let targetDesc = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3377 [shape=cds, label=<<font color="black">8:app __x4__ = (Call trap handler (new [target, P, Receiver]))</font>> color="black" fillcolor="white" style=filled]
  node3382 [shape=cds, label=<<font color="black">11:app __x6__ = (IsDataDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3367 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
      <tr><td align="left">1:let handler = O.ProxyHandler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3365 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3374 [shape=diamond, label=<<font color="black">(= trap undefined)</font>> color="black" fillcolor="white" style=filled]
  node3385 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node3389 [shape=diamond, label=<<font color="black">(! (= trapResult undefined))</font>> color="black" fillcolor="white" style=filled]
  node3378 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let trapResult = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3381 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= targetDesc undefined)) (= targetDesc.Configurable false))</font>> color="black" fillcolor="white" style=filled]
  node3386 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3390 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3364 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node3372 [shape=cds, label=<<font color="black">5:app __x2__ = (GetMethod handler &quot;get&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3387 [shape=cds, label=<<font color="black">13:app __x8__ = (IsAccessorDescriptor targetDesc)</font>> color="black" fillcolor="white" style=filled]
  node3391 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return trapResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3376 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3388 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x8__ true) (= targetDesc.Get undefined))</font>> color="black" fillcolor="white" style=filled]
  node3366 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node3383 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x6__ true) (= targetDesc.Writable false))</font>> color="black" fillcolor="white" style=filled]
  node3369 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3368 [shape=diamond, label=<<font color="black">(= handler null)</font>> color="black" fillcolor="white" style=filled]
  node3379 [shape=cds, label=<<font color="black">9:app __x5__ = (target.GetOwnProperty target P)</font>> color="black" fillcolor="white" style=filled]
  node3373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let trap = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3375 -> node3376 [ color="black"]
  node3371 -> node3372 [ color="black"]
  node3370 -> node3371 [ color="black"]
  node3379 -> node3380 [ color="black"]
  node3380 -> node3381 [ color="black"]
  node3382 -> node3383 [ color="black"]
  node3391 -> node3365 [ color="black"]
  node3388 -> node3389 [label=<<font color="black">true</font>> color="black"]
  node3388 -> node3391 [label=<<font color="black">false</font>> color="black"]
  node3378 -> node3379 [ color="black"]
  node3383 -> node3384 [label=<<font color="black">true</font>> color="black"]
  node3383 -> node3387 [label=<<font color="black">false</font>> color="black"]
  node3373 -> node3374 [ color="black"]
  node3369 -> node3370 [ color="black"]
  node3364 -> node3366 [ color="black"]
  node3367 -> node3368 [ color="black"]
  node3377 -> node3378 [ color="black"]
  node3372 -> node3373 [ color="black"]
  node3381 -> node3382 [label=<<font color="black">true</font>> color="black"]
  node3381 -> node3391 [label=<<font color="black">false</font>> color="black"]
  node3384 -> node3385 [ color="black"]
  node3374 -> node3375 [label=<<font color="black">true</font>> color="black"]
  node3374 -> node3377 [label=<<font color="black">false</font>> color="black"]
  node3387 -> node3388 [ color="black"]
  node3385 -> node3386 [label=<<font color="black">true</font>> color="black"]
  node3385 -> node3387 [label=<<font color="black">false</font>> color="black"]
  node3366 -> node3367 [ color="black"]
  node3376 -> node3377 [ color="black"]
  node3368 -> node3369 [label=<<font color="black">true</font>> color="black"]
  node3368 -> node3370 [label=<<font color="black">false</font>> color="black"]
  node3386 -> node3387 [ color="black"]
  node3389 -> node3390 [label=<<font color="black">true</font>> color="black"]
  node3389 -> node3391 [label=<<font color="black">false</font>> color="black"]
  node3390 -> node3391 [ color="black"]
}
