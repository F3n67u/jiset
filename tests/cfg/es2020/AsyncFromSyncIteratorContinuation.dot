digraph {
  node17820 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let done = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17843 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">valueWrapper = valueWrapper.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17852 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[! __x7__]</td></tr>
      <tr><td align="left">10:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17835 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17816 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17837 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17841 [shape=diamond, label=<<font color="black">(is-completion valueWrapper)</font>> color="black" fillcolor="white" style=filled]
  node17826 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17817 [shape=cds, label=<<font color="black">app result = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17842 [shape=diamond, label=<<font color="black">(= valueWrapper.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17847 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17815 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17824 [shape=cds, label=<<font color="black">app __x1__ = (Call promiseCapability.Reject undefined (new [done.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17830 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let value = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17838 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17831 [shape=diamond, label=<<font color="black">(is-completion value)</font>> color="black" fillcolor="white" style=filled]
  node17844 [shape=cds, label=<<font color="black">app __x5__ = (Call promiseCapability.Reject undefined (new [valueWrapper.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17827 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17819 [shape=cds, label=<<font color="black">0:app __x0__ = (IteratorComplete result)</font>> color="black" fillcolor="white" style=filled]
  node17825 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x1__) (! (= __x1__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17823 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = done.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17848 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:valueWrapper</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-async-from-sync-iterator-value-unwrap-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17834 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [value.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17851 [shape=cds, label=<<font color="black">9:app __x7__ = (PerformPromiseThen valueWrapper onFulfilled undefined promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node17818 [shape=cds, label=<<font color="black">app promiseCapability = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:done</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17840 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let valueWrapper = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17845 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x5__) (! (= __x5__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node17850 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let onFulfilled = [! __x6__]</td></tr>
      <tr><td align="left">8:onFulfilled.Done = done</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">value = value.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17822 [shape=diamond, label=<<font color="black">(= done.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17832 [shape=diamond, label=<<font color="black">(= value.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node17829 [shape=cds, label=<<font color="black">2:app __x2__ = (IteratorValue result)</font>> color="black" fillcolor="white" style=filled]
  node17846 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17839 [shape=cds, label=<<font color="black">4:app __x4__ = (PromiseResolve INTRINSIC_Promise value)</font>> color="black" fillcolor="white" style=filled]
  node17836 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17821 [shape=diamond, label=<<font color="black">(is-completion done)</font>> color="black" fillcolor="white" style=filled]
  node17849 [shape=cds, label=<<font color="black">7:app __x6__ = (CreateBuiltinFunction steps (new [&quot;Done&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17842 -> node17843 [label=<<font color="black">true</font>> color="black"]
  node17842 -> node17844 [label=<<font color="black">false</font>> color="black"]
  node17826 -> node17827 [ color="black"]
  node17839 -> node17840 [ color="black"]
  node17843 -> node17848 [ color="black"]
  node17834 -> node17835 [ color="black"]
  node17851 -> node17852 [ color="black"]
  node17819 -> node17820 [ color="black"]
  node17850 -> node17851 [ color="black"]
  node17824 -> node17825 [ color="black"]
  node17818 -> node17819 [ color="black"]
  node17847 -> node17848 [ color="black"]
  node17849 -> node17850 [ color="black"]
  node17836 -> node17837 [ color="black"]
  node17815 -> node17817 [ color="black"]
  node17831 -> node17832 [label=<<font color="black">true</font>> color="black"]
  node17831 -> node17838 [label=<<font color="black">false</font>> color="black"]
  node17841 -> node17842 [label=<<font color="black">true</font>> color="black"]
  node17841 -> node17848 [label=<<font color="black">false</font>> color="black"]
  node17845 -> node17846 [label=<<font color="black">true</font>> color="black"]
  node17845 -> node17847 [label=<<font color="black">false</font>> color="black"]
  node17825 -> node17826 [label=<<font color="black">true</font>> color="black"]
  node17825 -> node17827 [label=<<font color="black">false</font>> color="black"]
  node17830 -> node17831 [ color="black"]
  node17832 -> node17833 [label=<<font color="black">true</font>> color="black"]
  node17832 -> node17834 [label=<<font color="black">false</font>> color="black"]
  node17833 -> node17838 [ color="black"]
  node17838 -> node17839 [ color="black"]
  node17846 -> node17847 [ color="black"]
  node17852 -> node17816 [ color="black"]
  node17848 -> node17849 [ color="black"]
  node17844 -> node17845 [ color="black"]
  node17820 -> node17821 [ color="black"]
  node17837 -> node17838 [ color="black"]
  node17823 -> node17828 [ color="black"]
  node17817 -> node17818 [ color="black"]
  node17827 -> node17828 [ color="black"]
  node17840 -> node17841 [ color="black"]
  node17829 -> node17830 [ color="black"]
  node17828 -> node17829 [ color="black"]
  node17821 -> node17822 [label=<<font color="black">true</font>> color="black"]
  node17821 -> node17828 [label=<<font color="black">false</font>> color="black"]
  node17822 -> node17823 [label=<<font color="black">true</font>> color="black"]
  node17822 -> node17824 [label=<<font color="black">false</font>> color="black"]
  node17835 -> node17836 [label=<<font color="black">true</font>> color="black"]
  node17835 -> node17837 [label=<<font color="black">false</font>> color="black"]
}
