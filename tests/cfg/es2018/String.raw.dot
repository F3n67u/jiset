digraph {
  node13098 [shape=cds, label=<<font color="black">3:app __x1__ = (Get cooked &quot;raw&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13091 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13106 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let stringElements = (new [])</td></tr>
      <tr><td align="left">7:let nextIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13094 [shape=cds, label=<<font color="black">app substitutions = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13122 [shape=diamond, label=<<font color="black">(&lt; __x13__ __x12__.length)</font>> color="black" fillcolor="white" style=filled]
  node13093 [shape=cds, label=<<font color="black">app template = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13100 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let raw = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13112 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextSeg = [? __x7__]</td></tr>
      <tr><td align="left">11:let __x8__ = nextSeg</td></tr>
      <tr><td align="left">11:let __x9__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13117 [shape=diamond, label=<<font color="black">(&lt; nextIndex numberOfSubstitutions)</font>> color="black" fillcolor="white" style=filled]
  node13119 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13092 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13107 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node13110 [shape=cds, label=<<font color="black">10:app __x6__ = (Get raw nextKey)</font>> color="black" fillcolor="white" style=filled]
  node13120 [shape=cds, label=<<font color="black">16:app __x11__ = (ToString next)</font>> color="black" fillcolor="white" style=filled]
  node13095 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{substitutions} be a List consisting of all of the arguments passed to this function , starting with the second argument . If fewer than two arguments were passed , the List is empty .&quot;</td></tr>
      <tr><td align="left">1:let numberOfSubstitutions = substitutions.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13115 [shape=diamond, label=<<font color="black">(== (+ nextIndex 1i) literalSegments)</font>> color="black" fillcolor="white" style=filled]
  node13113 [shape=diamond, label=<<font color="black">(&lt; __x9__ __x8__.length)</font>> color="black" fillcolor="white" style=filled]
  node13123 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x14__ = __x12__[__x13__]</td></tr>
      <tr><td align="left">append __x14__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x13__ = (+ __x13__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13102 [shape=cds, label=<<font color="black">4:app __x4__ = (ToLength [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node13104 [shape=diamond, label=<<font color="black">(! (&lt; 0i literalSegments))</font>> color="black" fillcolor="white" style=filled]
  node13109 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextKey = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13116 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return the String value whose code units are , in order , the elements in the List id:{stringElements} . If id:{stringElements} has no elements , the empty string is returned .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13099 [shape=cds, label=<<font color="black">3:app __x2__ = (ToObject [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node13103 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let literalSegments = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13105 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13108 [shape=cds, label=<<font color="black">9:app __x5__ = (ToString nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node13121 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextSub = [? __x11__]</td></tr>
      <tr><td align="left">17:let __x12__ = nextSub</td></tr>
      <tr><td align="left">17:let __x13__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13114 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x10__ = __x8__[__x9__]</td></tr>
      <tr><td align="left">append __x10__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x9__ = (+ __x9__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13097 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let cooked = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13124 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let nextIndex = (+ nextIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13118 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = substitutions[nextIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13096 [shape=cds, label=<<font color="black">2:app __x0__ = (ToObject template)</font>> color="black" fillcolor="white" style=filled]
  node13101 [shape=cds, label=<<font color="black">4:app __x3__ = (Get raw &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13111 [shape=cds, label=<<font color="black">10:app __x7__ = (ToString [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node13114 -> node13113 [ color="black"]
  node13093 -> node13094 [ color="black"]
  node13112 -> node13113 [ color="black"]
  node13098 -> node13099 [ color="black"]
  node13118 -> node13120 [ color="black"]
  node13110 -> node13111 [ color="black"]
  node13119 -> node13120 [ color="black"]
  node13105 -> node13106 [ color="black"]
  node13115 -> node13116 [label=<<font color="black">true</font>> color="black"]
  node13115 -> node13117 [label=<<font color="black">false</font>> color="black"]
  node13121 -> node13122 [ color="black"]
  node13120 -> node13121 [ color="black"]
  node13111 -> node13112 [ color="black"]
  node13097 -> node13098 [ color="black"]
  node13095 -> node13096 [ color="black"]
  node13123 -> node13122 [ color="black"]
  node13113 -> node13114 [label=<<font color="black">true</font>> color="black"]
  node13113 -> node13115 [label=<<font color="black">false</font>> color="black"]
  node13091 -> node13093 [ color="black"]
  node13103 -> node13104 [ color="black"]
  node13096 -> node13097 [ color="black"]
  node13107 -> node13108 [label=<<font color="black">true</font>> color="black"]
  node13107 -> node13092 [label=<<font color="black">false</font>> color="black"]
  node13102 -> node13103 [ color="black"]
  node13108 -> node13109 [ color="black"]
  node13099 -> node13100 [ color="black"]
  node13124 -> node13107 [ color="black"]
  node13117 -> node13118 [label=<<font color="black">true</font>> color="black"]
  node13117 -> node13119 [label=<<font color="black">false</font>> color="black"]
  node13100 -> node13101 [ color="black"]
  node13106 -> node13107 [ color="black"]
  node13101 -> node13102 [ color="black"]
  node13104 -> node13105 [label=<<font color="black">true</font>> color="black"]
  node13104 -> node13106 [label=<<font color="black">false</font>> color="black"]
  node13109 -> node13110 [ color="black"]
  node13122 -> node13123 [label=<<font color="black">true</font>> color="black"]
  node13122 -> node13124 [label=<<font color="black">false</font>> color="black"]
  node13116 -> node13117 [ color="black"]
  node13094 -> node13095 [ color="black"]
}
