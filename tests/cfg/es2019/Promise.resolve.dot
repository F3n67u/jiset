digraph {
  node17684 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17688 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node17691 [shape=cds, label=<<font color="black">2:app __x1__ = (PromiseResolve C x)</font>> color="black" fillcolor="white" style=filled]
  node17687 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17692 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17686 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17689 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node17685 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17690 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17691 -> node17692 [ color="black"]
  node17688 -> node17689 [ color="black"]
  node17686 -> node17687 [ color="black"]
  node17692 -> node17685 [ color="black"]
  node17689 -> node17690 [label=<<font color="black">true</font>> color="black"]
  node17689 -> node17691 [label=<<font color="black">false</font>> color="black"]
  node17687 -> node17688 [ color="black"]
  node17684 -> node17686 [ color="black"]
  node17690 -> node17691 [ color="black"]
}
