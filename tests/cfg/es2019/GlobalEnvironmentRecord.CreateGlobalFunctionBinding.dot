digraph {
  node1486 [shape=cds, label=<<font color="black">3:app __x0__ = (globalObject.GetOwnProperty globalObject N)</font>> color="black" fillcolor="white" style=filled]
  node1497 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1494 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x2__]</td></tr>
      <tr><td align="left">11:let varDeclaredNames = envRec.VarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1489 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let desc = (new PropertyDescriptor(&quot;Value&quot; -&gt; V, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; D))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1487 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let existingProp = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1493 [shape=cds, label=<<font color="black">10:app __x2__ = (Set globalObject N V false)</font>> color="black" fillcolor="white" style=filled]
  node1483 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1488 [shape=diamond, label=<<font color="black">(|| (= existingProp undefined) (= existingProp.Configurable true))</font>> color="black" fillcolor="white" style=filled]
  node1492 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x1__]</td></tr>
      <tr><td align="left">9:??? &quot;Record that the binding for id:{N} in id:{ObjRec} has been initialized .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1496 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append N -&gt; varDeclaredNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1484 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let ObjRec = envRec.ObjectRecord</td></tr>
      <tr><td align="left">2:let globalObject = ObjRec.BindingObject</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1491 [shape=cds, label=<<font color="black">8:app __x1__ = (DefinePropertyOrThrow globalObject N desc)</font>> color="black" fillcolor="white" style=filled]
  node1495 [shape=diamond, label=<<font color="black">(! (contains varDeclaredNames N))</font>> color="black" fillcolor="white" style=filled]
  node1490 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let desc = (new PropertyDescriptor(&quot;Value&quot; -&gt; V))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1486 -> node1487 [ color="black"]
  node1492 -> node1493 [ color="black"]
  node1489 -> node1491 [ color="black"]
  node1497 -> node1484 [ color="black"]
  node1494 -> node1495 [ color="black"]
  node1483 -> node1485 [ color="black"]
  node1485 -> node1486 [ color="black"]
  node1496 -> node1497 [ color="black"]
  node1487 -> node1488 [ color="black"]
  node1491 -> node1492 [ color="black"]
  node1495 -> node1496 [label=<<font color="black">true</font>> color="black"]
  node1495 -> node1497 [label=<<font color="black">false</font>> color="black"]
  node1493 -> node1494 [ color="black"]
  node1488 -> node1489 [label=<<font color="black">true</font>> color="black"]
  node1488 -> node1490 [label=<<font color="black">false</font>> color="black"]
  node1490 -> node1491 [ color="black"]
}
