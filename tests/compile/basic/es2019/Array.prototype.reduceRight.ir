{
  app __x0__ = (ToObject this)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let O = __x0__
  app __x1__ = (Get O "length")
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  app __x2__ = (ToLength __x1__)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let len = __x2__
  app __x3__ = (IsCallable callbackfn)
  if (= __x3__ false) throw INTRINSIC_TypeError else {}
  if (&& (= len 0i) (= initialValue absent)) throw INTRINSIC_TypeError else {}
  let k = (- len 1i)
  let accumulator = undefined
  if (! (= initialValue absent)) accumulator = initialValue else {
    let kPresent = false
    while (&& (= kPresent false) (! (< k 0i))) {
      app __x4__ = (ToString k)
      if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
      let Pk = __x4__
      app __x5__ = (HasProperty O Pk)
      if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
      kPresent = __x5__
      if (= kPresent true) {
        app __x6__ = (Get O Pk)
        if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
        accumulator = __x6__
      } else {}
      k = (- k 1i)
    }
    if (= kPresent false) throw INTRINSIC_TypeError else {}
  }
  while (! (< k 0i)) {
    app __x7__ = (ToString k)
    if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
    let Pk = __x7__
    app __x8__ = (HasProperty O Pk)
    if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else {}
    let kPresent = __x8__
    if (= kPresent true) {
      app __x9__ = (Get O Pk)
      if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
      let kValue = __x9__
      app __x10__ = (Call callbackfn undefined (new [accumulator, kValue, k, O]))
      if (is-completion __x10__) if (= __x10__.Type CONST_normal) __x10__ = __x10__.Value else return __x10__ else {}
      accumulator = __x10__
    } else {}
    k = (- k 1i)
  }
  app __x11__ = (WrapCompletion accumulator)
  return __x11__
}