{
  access __x0__ = (AdditiveExpression "Evaluation")
  let lref = __x0__
  app __x1__ = (GetValue lref)
  let lval = [? __x1__]
  access __x2__ = (MultiplicativeExpression "Evaluation")
  let rref = __x2__
  app __x3__ = (GetValue rref)
  let rval = [? __x3__]
  app __x4__ = (ToPrimitive lval)
  let lprim = [? __x4__]
  app __x5__ = (ToPrimitive rval)
  let rprim = [? __x5__]
  let __x6__ = true
  app __x7__ = (Type lprim)
  __x6__ = (= __x7__ String)
  if __x6__ {} else {
    app __x8__ = (Type rprim)
    __x6__ = (= __x8__ String)
  }
  if __x6__ {
    app __x9__ = (ToString lprim)
    let lstr = [? __x9__]
    app __x10__ = (ToString rprim)
    let rstr = [? __x10__]
    return (+ lstr rstr)
  } else {}
  app __x11__ = (ToNumber lprim)
  let lnum = [? __x11__]
  app __x12__ = (ToNumber rprim)
  let rnum = [? __x12__]
  return (+ lnum rnum)
}