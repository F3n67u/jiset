{
  [0] let V = undefined
  [1] ??? "Let id:{A} be the List of nt:{CaseClause} items in nt:{CaseClauses} , in source text order ."
  [2] let found = false
  [3] let __x0__ = A
  [3] let __x1__ = 0i
  [3] while (< __x1__ __x0__.length) {
    let C = __x0__[__x1__]
    [4] if (= found false) {
      [5] app __x2__ = (CaseClauseIsSelected C input)
      [5] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [22] {}
      [5] found = __x2__
    } else [22] {}
    [6] if (= found true) {
      [7] access __x3__ = (C "Evaluation")
      [7] let R = __x3__
      [8] if (! (= R.Value CONST_empty)) V = R.Value else [22] {}
      [9] app __x4__ = (IsAbruptCompletion R)
      [9] if __x4__ {
        app __x5__ = (UpdateEmpty R V)
        app __x6__ = (Completion __x5__)
        app __x7__ = (WrapCompletion __x6__)
        return __x7__
      } else [22] {}
    } else [22] {}
    __x1__ = (+ __x1__ 1i)
  }
  [10] app __x8__ = (NormalCompletion V)
  [10] app __x9__ = (WrapCompletion __x8__)
  [10] return __x9__
}