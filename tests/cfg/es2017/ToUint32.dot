digraph {
  node316 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let number = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node317 [shape=diamond, label=<<font color="black">(|| (|| (|| (|| (= number NaN) (= number 0i)) (= number -0.0)) (= number Infinity)) (= number -Infinity))</font>> color="black" fillcolor="white" style=filled]
  node313 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node318 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node314 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node319 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let int = (convert number num2int )</td></tr>
      <tr><td align="left">3:let int32bit = (%% int (** 2.0 32i))</td></tr>
      <tr><td align="left">4:return int32bit</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node315 [shape=cds, label=<<font color="black">0:app __x0__ = (ToNumber argument)</font>> color="black" fillcolor="white" style=filled]
  node315 -> node316 [ color="black"]
  node318 -> node319 [ color="black"]
  node317 -> node318 [label=<<font color="black">true</font>> color="black"]
  node317 -> node319 [label=<<font color="black">false</font>> color="black"]
  node319 -> node314 [ color="black"]
  node316 -> node317 [ color="black"]
  node313 -> node315 [ color="black"]
}
