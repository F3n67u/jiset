{
  app tv = (GetArgument argumentsList 0i)
  [0] app __x0__ = (Type tv)
  [0] assert (= __x0__ Number)
  [1] assert (! (= tv NaN))
  [2] app __x1__ = (LocalTZA tv true)
  [2] let offset = __x1__
  [3] if (! (< offset 0i)) let offsetSign = "+" else let offsetSign = "-"
  [4] ??? "Let id:{offsetMin} be the String representation of MinFromTime ( abs ( id:{offset} ) ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary ."
  [5] ??? "Let id:{offsetHour} be the String representation of HourFromTime ( abs ( id:{offset} ) ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary ."
  [6] ??? "Let id:{tzName} be an implementation - defined string that is either the empty string or the string - concatenation of the code unit 0x0020 ( SPACE ) , the code unit 0x0028 ( LEFT PARENTHESIS ) , an implementation - dependent timezone name , and the code unit 0x0029 ( RIGHT PARENTHESIS ) ."
  [7] app __x2__ = (WrapCompletion (+ (+ (+ offsetSign offsetHour) offsetMin) tzName))
  [7] return __x2__
}