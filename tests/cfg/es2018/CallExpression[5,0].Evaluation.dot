digraph {
  node4386 [shape=cds, label=<<font color="black">3:app __x2__ = (IsInTailPosition thisCall)</font>> color="black" fillcolor="white" style=filled]
  node4383 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let tagRef = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4385 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let tagFunc = [? __x1__]</td></tr>
      <tr><td align="left">2:let thisCall = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4389 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4384 [shape=cds, label=<<font color="black">1:app __x1__ = (GetValue tagRef)</font>> color="black" fillcolor="white" style=filled]
  node4380 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4381 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node4388 [shape=cds, label=<<font color="black">4:app __x3__ = (EvaluateCall tagFunc tagRef TemplateLiteral tailCall)</font>> color="black" fillcolor="white" style=filled]
  node4387 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let tailCall = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4382 [shape=cds, label=<<font color="black">0:access __x0__ = (CallExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node4388 -> node4389 [ color="black"]
  node4382 -> node4383 [ color="black"]
  node4389 -> node4381 [ color="black"]
  node4386 -> node4387 [ color="black"]
  node4384 -> node4385 [ color="black"]
  node4387 -> node4388 [ color="black"]
  node4385 -> node4386 [ color="black"]
  node4380 -> node4382 [ color="black"]
  node4383 -> node4384 [ color="black"]
}
