digraph {
  node10074 [shape=cds, label=<<font color="black">3:app __x3__ = (AsyncFunctionStart promiseCapability ExpressionBody)</font>> color="black" fillcolor="white" style=filled]
  node10070 [shape=cds, label=<<font color="black">1:app __x1__ = (FunctionDeclarationInstantiation functionObject argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node10067 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10075 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let promiseCapability = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10068 [shape=cds, label=<<font color="black">0:app __x0__ = (NewPromiseCapability INTRINSIC_Promise)</font>> color="black" fillcolor="white" style=filled]
  node10066 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10076 [shape=cds, label=<<font color="black">5:app __x4__ = (Call promiseCapability.Reject undefined (new [declResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node10073 [shape=diamond, label=<<font color="black">(! __x2__)</font>> color="black" fillcolor="white" style=filled]
  node10078 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return (new Completion(&quot;Type&quot; -&gt; CONST_return, &quot;Value&quot; -&gt; promiseCapability.Promise, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let declResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10072 [shape=cds, label=<<font color="black">4:app __x2__ = (IsAbruptCompletion declResult)</font>> color="black" fillcolor="white" style=filled]
  node10077 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:[! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10071 -> node10072 [ color="black"]
  node10078 -> node10067 [ color="black"]
  node10077 -> node10078 [ color="black"]
  node10074 -> node10075 [ color="black"]
  node10072 -> node10073 [ color="black"]
  node10073 -> node10074 [label=<<font color="black">true</font>> color="black"]
  node10073 -> node10076 [label=<<font color="black">false</font>> color="black"]
  node10066 -> node10068 [ color="black"]
  node10068 -> node10069 [ color="black"]
  node10075 -> node10078 [ color="black"]
  node10070 -> node10071 [ color="black"]
  node10076 -> node10077 [ color="black"]
  node10069 -> node10070 [ color="black"]
}
