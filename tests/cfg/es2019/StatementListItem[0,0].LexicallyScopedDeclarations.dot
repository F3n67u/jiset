digraph {
  node5683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5679 [shape=diamond, label=<<font color="black">(is-instance-of Statement Statement10)</font>> color="black" fillcolor="white" style=filled]
  node5678 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5677 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5681 [shape=cds, label=<<font color="black">access __x0__ = (LabelledStatement &quot;LexicallyScopedDeclarations&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5682 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5680 [shape=cds, label=<<font color="black">access LabelledStatement = (Statement &quot;LabelledStatement&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5681 -> node5682 [ color="black"]
  node5679 -> node5680 [label=<<font color="black">true</font>> color="black"]
  node5679 -> node5683 [label=<<font color="black">false</font>> color="black"]
  node5683 -> node5678 [ color="black"]
  node5677 -> node5679 [ color="black"]
  node5682 -> node5683 [ color="black"]
  node5680 -> node5681 [ color="black"]
}
