digraph {
  node9497 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9501 [shape=cds, label=<<font color="black">6:app __x2__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node9493 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9508 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] moduleCxt)</font>> color="black" fillcolor="white" style=filled]
  node9498 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:module.Evaluated = true</td></tr>
      <tr><td align="left">5:let __x0__ = module.RequestedModules</td></tr>
      <tr><td align="left">5:let __x1__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9502 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let requiredModule = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9503 [shape=cds, label=<<font color="black">7:app __x3__ = (requiredModule.ModuleEvaluation requiredModule)</font>> color="black" fillcolor="white" style=filled]
  node9507 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let result = __x4__</td></tr>
      <tr><td align="left">18:GLOBAL_context = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9499 [shape=diamond, label=<<font color="black">(&lt; __x1__ __x0__.length)</font>> color="black" fillcolor="white" style=filled]
  node9510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">20:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9504 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? __x3__]</td></tr>
      <tr><td align="left">__x1__ = (+ __x1__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9494 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9509 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">(pop GLOBAL_executionStack (- GLOBAL_executionStack.length 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9506 [shape=cds, label=<<font color="black">17:access __x4__ = (module.ECMAScriptCode &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9496 [shape=diamond, label=<<font color="black">(= module.Evaluated true)</font>> color="black" fillcolor="white" style=filled]
  node9495 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let module = this</td></tr>
      <tr><td align="left">2:assert (! (= module.Realm undefined))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9505 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let moduleCxt = (new ExecutionContext(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">9:moduleCxt.Function = null</td></tr>
      <tr><td align="left">10:moduleCxt.Realm = module.Realm</td></tr>
      <tr><td align="left">11:moduleCxt.ScriptOrModule = module</td></tr>
      <tr><td align="left">13:moduleCxt.VariableEnvironment = module.Environment</td></tr>
      <tr><td align="left">14:moduleCxt.LexicalEnvironment = module.Environment</td></tr>
      <tr><td align="left">15:GLOBAL_context = null</td></tr>
      <tr><td align="left">16:append moduleCxt -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">16:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9500 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x0__[__x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9495 -> node9496 [ color="black"]
  node9498 -> node9499 [ color="black"]
  node9509 -> node9510 [ color="black"]
  node9502 -> node9503 [ color="black"]
  node9499 -> node9500 [label=<<font color="black">true</font>> color="black"]
  node9499 -> node9505 [label=<<font color="black">false</font>> color="black"]
  node9500 -> node9501 [ color="black"]
  node9505 -> node9506 [ color="black"]
  node9510 -> node9494 [ color="black"]
  node9501 -> node9502 [ color="black"]
  node9506 -> node9507 [ color="black"]
  node9493 -> node9495 [ color="black"]
  node9507 -> node9508 [ color="black"]
  node9508 -> node9509 [label=<<font color="black">true</font>> color="black"]
  node9508 -> node9510 [label=<<font color="black">false</font>> color="black"]
  node9503 -> node9504 [ color="black"]
  node9496 -> node9497 [label=<<font color="black">true</font>> color="black"]
  node9496 -> node9498 [label=<<font color="black">false</font>> color="black"]
  node9497 -> node9498 [ color="black"]
  node9504 -> node9499 [ color="black"]
}
