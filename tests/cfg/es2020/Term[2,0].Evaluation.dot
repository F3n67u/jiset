digraph {
  node14602 [shape=cds, label=<<font color="black">1:access __x2__ = (Quantifier &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14597 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14601 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let m = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14598 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14599 [shape=cds, label=<<font color="black">0:access __x0__ = (Atom &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14600 [shape=cds, label=<<font color="black">0:app __x1__ = (__x0__ direction)</font>> color="black" fillcolor="white" style=filled]
  node14603 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let min = __x2__[0i]</td></tr>
      <tr><td align="left">1:let max = __x2__[1i]</td></tr>
      <tr><td align="left">1:let greedy = __x2__[2i]</td></tr>
      <tr><td align="left">3:??? &quot;Let id:{parenIndex} be the number of left - capturing parentheses in the entire regular expression that occur to the left of this nt:{Term} . This is the total number of grammar:{Atom4, [GroupSpecifier, Disjunction]} Parse Nodes prior to or enclosing this nt:{Term} .&quot;</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{parenCount} be the number of left - capturing parentheses in nt:{Atom} . This is the total number of grammar:{Atom4, [GroupSpecifier, Disjunction]} Parse Nodes enclosed by nt:{Atom} .&quot;</td></tr>
      <tr><td align="left">5:??? &quot;Return a new Matcher with parameters ( id:{x} , id:{c} ) that captures id:{m} , id:{min} , id:{max} , id:{greedy} , id:{parenIndex} , and id:{parenCount} and performs the following steps when called : in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14601 -> node14602 [ color="black"]
  node14602 -> node14603 [ color="black"]
  node14603 -> node14598 [ color="black"]
  node14599 -> node14600 [ color="black"]
  node14600 -> node14601 [ color="black"]
  node14597 -> node14599 [ color="black"]
}
