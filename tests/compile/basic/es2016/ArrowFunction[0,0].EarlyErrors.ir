{
  access __x0__ = (__x0__ "Contains" "YieldExpression")
  if (= __x0__ true) throw SyntaxError else return undefined
  let __x1__ = true
  access __x2__ = (ConciseBody "ContainsUseStrict")
  __x1__ = (= __x2__ true)
  if __x1__ {
    access __x3__ = (ArrowParameters "IsSimpleParameterList")
    __x1__ = (= __x3__ false)
  } else {}
  if __x1__ throw SyntaxError else return undefined
  access __x4__ = (ArrowParameters "BoundNames")
  access __x5__ = (ConciseBody "LexicallyDeclaredNames")
  let __x6__ = __x4__
  let __x7__ = __x5__
  let __x8__ = 0i
  let __x9__ = 0i
  let __x10__ = false
  while (< __x8__ __x6__.length) {
    __x9__ = 0i
    while (< __x9__ __x7__.length) if (= __x6__[__x8__] __x7__[__x9__]) __x10__ = true else {}
  }
  if __x10__ throw SyntaxError else return undefined
}