digraph {
  node15889 [shape=cds, label=<<font color="black">7:app __x2__ = (ToString len)</font>> color="black" fillcolor="white" style=filled]
  node15885 [shape=diamond, label=<<font color="black">(&lt; (- (** 2.0 53i) 1i) (+ len argCount))</font>> color="black" fillcolor="white" style=filled]
  node15881 [shape=cds, label=<<font color="black">0:app __x0__ = (ToObject this)</font>> color="black" fillcolor="white" style=filled]
  node15892 [shape=cds, label=<<font color="black">9:app __x4__ = (Set O &quot;length&quot; len true)</font>> color="black" fillcolor="white" style=filled]
  node15886 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15882 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15887 [shape=diamond, label=<<font color="black">(&lt; 0i items.length)</font>> color="black" fillcolor="white" style=filled]
  node15890 [shape=cds, label=<<font color="black">7:app __x3__ = (Set O [! __x2__] E true)</font>> color="black" fillcolor="white" style=filled]
  node15878 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15893 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[? __x4__]</td></tr>
      <tr><td align="left">10:return len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15880 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? __x3__]</td></tr>
      <tr><td align="left">8:len = (+ len 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15883 [shape=cds, label=<<font color="black">1:app __x1__ = (LengthOfArrayLike O)</font>> color="black" fillcolor="white" style=filled]
  node15888 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let E = (pop items 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15884 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let len = [? __x1__]</td></tr>
      <tr><td align="left">2:let items = argumentsList</td></tr>
      <tr><td align="left">3:let argCount = items.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15879 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15887 -> node15888 [label=<<font color="black">true</font>> color="black"]
  node15887 -> node15892 [label=<<font color="black">false</font>> color="black"]
  node15892 -> node15893 [ color="black"]
  node15885 -> node15886 [label=<<font color="black">true</font>> color="black"]
  node15885 -> node15887 [label=<<font color="black">false</font>> color="black"]
  node15891 -> node15887 [ color="black"]
  node15883 -> node15884 [ color="black"]
  node15884 -> node15885 [ color="black"]
  node15893 -> node15879 [ color="black"]
  node15888 -> node15889 [ color="black"]
  node15886 -> node15887 [ color="black"]
  node15882 -> node15883 [ color="black"]
  node15889 -> node15890 [ color="black"]
  node15880 -> node15881 [ color="black"]
  node15878 -> node15880 [ color="black"]
  node15881 -> node15882 [ color="black"]
  node15890 -> node15891 [ color="black"]
}
