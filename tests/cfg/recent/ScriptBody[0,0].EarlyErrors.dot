digraph {
  node21175 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21171 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node21181 [shape=cds, label=<<font color="black">4:access __x2__ = (StatementList &quot;ContainsUndefinedContinueTarget&quot; (new []) (new []))</font>> color="black" fillcolor="white" style=filled]
  node21174 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node21178 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node21182 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node21173 [shape=cds, label=<<font color="black">2:access __x0__ = (StatementList &quot;ContainsDuplicateLabels&quot; (new []))</font>> color="black" fillcolor="white" style=filled]
  node21183 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21180 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21170 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node21177 [shape=cds, label=<<font color="black">3:access __x1__ = (StatementList &quot;ContainsUndefinedBreakTarget&quot; (new []))</font>> color="black" fillcolor="white" style=filled]
  node21172 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;It is a Syntax Error if nt:{StatementList} Contains code:{super} unless the source code containing code:{super} is eval code that is being processed by a direct eval . Additional early error rules for code:{super} within direct eval are defined in PerformEval .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;It is a Syntax Error if nt:{StatementList} Contains nt:{NewTarget} unless the source code containing nt:{NewTarget} is eval code that is being processed by a direct eval . Additional early error rules for nt:{NewTarget} in direct eval are defined in PerformEval .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21181 -> node21182 [ color="black"]
  node21170 -> node21172 [ color="black"]
  node21173 -> node21174 [ color="black"]
  node21178 -> node21179 [label=<<font color="black">true</font>> color="black"]
  node21178 -> node21180 [label=<<font color="black">false</font>> color="black"]
  node21184 -> node21171 [ color="black"]
  node21179 -> node21181 [ color="black"]
  node21174 -> node21175 [label=<<font color="black">true</font>> color="black"]
  node21174 -> node21176 [label=<<font color="black">false</font>> color="black"]
  node21172 -> node21173 [ color="black"]
  node21177 -> node21178 [ color="black"]
  node21180 -> node21181 [ color="black"]
  node21175 -> node21177 [ color="black"]
  node21176 -> node21177 [ color="black"]
  node21183 -> node21171 [ color="black"]
  node21182 -> node21183 [label=<<font color="black">true</font>> color="black"]
  node21182 -> node21184 [label=<<font color="black">false</font>> color="black"]
}
