["Assert", ":", {
  "id": "generator"
}, "is", "an", "AsyncGenerator", "instance", ".", {
  "k": 0
}, "Let", {
  "id": "state"
}, "be", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorState", "]", "]", ".", {
  "k": 1
}, "Assert", ":", {
  "id": "state"
}, "is", "not", {
  "code": "\"executing\""
}, ".", {
  "k": 2
}, "If", {
  "id": "state"
}, "is", {
  "code": "\"awaiting-return\""
}, ",", "return", {
  "value": "undefined"
}, ".", {
  "k": 3
}, "Let", {
  "id": "queue"
}, "be", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorQueue", "]", "]", ".", {
  "k": 4
}, "If", {
  "id": "queue"
}, "is", "an", "empty", "List", ",", "return", {
  "value": "undefined"
}, ".", {
  "k": 5
}, "Let", {
  "id": "next"
}, "be", "the", "value", "of", "the", "first", "element", "of", {
  "id": "queue"
}, ".", {
  "k": 6
}, "Assert", ":", {
  "id": "next"
}, "is", "an", "AsyncGeneratorRequest", "record", ".", {
  "k": 7
}, "Let", {
  "id": "completion"
}, "be", {
  "id": "next"
}, ".", "[", "[", "Completion", "]", "]", ".", {
  "k": 8
}, "If", {
  "id": "completion"
}, "is", "an", "abrupt", "completion", ",", "then", {
  "in": null
}, "If", {
  "id": "state"
}, "is", {
  "code": "\"suspendedStart\""
}, ",", "then", {
  "in": null
}, "Set", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorState", "]", "]", "to", {
  "code": "\"completed\""
}, ".", {
  "k": 11
}, "Set", {
  "id": "state"
}, "to", {
  "code": "\"completed\""
}, ".", {
  "k": 12
}, {
  "out": null
}, {
  "k": 10
}, "If", {
  "id": "state"
}, "is", {
  "code": "\"completed\""
}, ",", "then", {
  "in": null
}, "If", {
  "id": "completion"
}, ".", "[", "[", "Type", "]", "]", "is", {
  "const": "return"
}, ",", "then", {
  "in": null
}, "Set", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorState", "]", "]", "to", {
  "code": "\"awaiting-return\""
}, ".", {
  "k": 15
}, "Let", {
  "id": "promise"
}, "be", "?", "PromiseResolve", "(", "%", "Promise", "%", ",", "«", {
  "id": "completion"
}, ".", "[", "[", "Value", "]", "]", "»", ")", ".", {
  "k": 16
}, "Let", {
  "id": "stepsFulfilled"
}, "be", "the", "algorithm", "steps", "defined", "in", {
  "link": ""
}, ".", {
  "k": 17
}, "Let", {
  "id": "onFulfilled"
}, "be", "CreateBuiltinFunction", "(", {
  "id": "stepsFulfilled"
}, ",", "«", "[", "[", "Generator", "]", "]", "»", ")", ".", {
  "k": 18
}, "Set", {
  "id": "onFulfilled"
}, ".", "[", "[", "Generator", "]", "]", "to", {
  "id": "generator"
}, ".", {
  "k": 19
}, "Let", {
  "id": "stepsRejected"
}, "be", "the", "algorithm", "steps", "defined", "in", {
  "link": ""
}, ".", {
  "k": 20
}, "Let", {
  "id": "onRejected"
}, "be", "CreateBuiltinFunction", "(", {
  "id": "stepsRejected"
}, ",", "«", "[", "[", "Generator", "]", "]", "»", ")", ".", {
  "k": 21
}, "Set", {
  "id": "onRejected"
}, ".", "[", "[", "Generator", "]", "]", "to", {
  "id": "generator"
}, ".", {
  "k": 22
}, "Perform", "!", "PerformPromiseThen", "(", {
  "id": "promise"
}, ",", {
  "id": "onFulfilled"
}, ",", {
  "id": "onRejected"
}, ")", ".", {
  "k": 23
}, "Return", {
  "value": "undefined"
}, ".", {
  "k": 24
}, {
  "out": null
}, {
  "k": 14
}, "Else", ",", {
  "in": null
}, "Assert", ":", {
  "id": "completion"
}, ".", "[", "[", "Type", "]", "]", "is", {
  "const": "throw"
}, ".", {
  "k": 26
}, "Perform", "!", "AsyncGeneratorReject", "(", {
  "id": "generator"
}, ",", {
  "id": "completion"
}, ".", "[", "[", "Value", "]", "]", ")", ".", {
  "k": 27
}, "Return", {
  "value": "undefined"
}, ".", {
  "k": 28
}, {
  "out": null
}, {
  "k": 25
}, {
  "out": null
}, {
  "k": 13
}, {
  "out": null
}, {
  "k": 9
}, "Else", "if", {
  "id": "state"
}, "is", {
  "code": "\"completed\""
}, ",", "return", "!", "AsyncGeneratorResolve", "(", {
  "id": "generator"
}, ",", {
  "value": "undefined"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 29
}, "Assert", ":", {
  "id": "state"
}, "is", "either", {
  "code": "\"suspendedStart\""
}, "or", {
  "code": "\"suspendedYield\""
}, ".", {
  "k": 30
}, "Let", {
  "id": "genContext"
}, "be", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorContext", "]", "]", ".", {
  "k": 31
}, "Let", {
  "id": "callerContext"
}, "be", "the", "running", "execution", "context", ".", {
  "k": 32
}, "Suspend", {
  "id": "callerContext"
}, ".", {
  "k": 33
}, "Set", {
  "id": "generator"
}, ".", "[", "[", "AsyncGeneratorState", "]", "]", "to", {
  "code": "\"executing\""
}, ".", {
  "k": 34
}, "Push", {
  "id": "genContext"
}, "onto", "the", "execution", "context", "stack", ";", {
  "id": "genContext"
}, "is", "now", "the", "running", "execution", "context", ".", {
  "k": 35
}, "Resume", "the", "suspended", "evaluation", "of", {
  "id": "genContext"
}, "using", {
  "id": "completion"
}, "as", "the", "result", "of", "the", "operation", "that", "suspended", "it", ".", "Let", {
  "id": "result"
}, "be", "the", "completion", "record", "returned", "by", "the", "resumed", "computation", ".", {
  "k": 36
}, "Assert", ":", {
  "id": "result"
}, "is", "never", "an", "abrupt", "completion", ".", {
  "k": 37
}, "Assert", ":", "When", "we", "return", "here", ",", {
  "id": "genContext"
}, "has", "already", "been", "removed", "from", "the", "execution", "context", "stack", "and", {
  "id": "callerContext"
}, "is", "the", "currently", "running", "execution", "context", ".", {
  "k": 38
}, "Return", {
  "value": "undefined"
}, ".", {
  "k": 39
}]