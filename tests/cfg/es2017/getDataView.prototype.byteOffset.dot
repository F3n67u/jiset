digraph {
  node15791 [shape=cds, label=<<font color="black">5:app __x1__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node15787 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15784 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let offset = O.ByteOffset</td></tr>
      <tr><td align="left">7:return offset</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15792 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node15793 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15788 [shape=diamond, label=<<font color="black">(= O.DataView absent)</font>> color="black" fillcolor="white" style=filled]
  node15783 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15789 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15782 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15785 [shape=cds, label=<<font color="black">1:app __x0__ = (Type O)</font>> color="black" fillcolor="white" style=filled]
  node15790 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:assert (! (= O.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">4:let buffer = O.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15786 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15794 -> node15783 [ color="black"]
  node15784 -> node15785 [ color="black"]
  node15786 -> node15787 [label=<<font color="black">true</font>> color="black"]
  node15786 -> node15788 [label=<<font color="black">false</font>> color="black"]
  node15789 -> node15790 [ color="black"]
  node15792 -> node15793 [label=<<font color="black">true</font>> color="black"]
  node15792 -> node15794 [label=<<font color="black">false</font>> color="black"]
  node15793 -> node15794 [ color="black"]
  node15791 -> node15792 [ color="black"]
  node15785 -> node15786 [ color="black"]
  node15790 -> node15791 [ color="black"]
  node15782 -> node15784 [ color="black"]
  node15787 -> node15788 [ color="black"]
  node15788 -> node15789 [label=<<font color="black">true</font>> color="black"]
  node15788 -> node15790 [label=<<font color="black">false</font>> color="black"]
}
