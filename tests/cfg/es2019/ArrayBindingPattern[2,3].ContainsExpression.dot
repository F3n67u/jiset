digraph {
  node6066 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6070 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white" style=filled]
  node6069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let has = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6068 [shape=cds, label=<<font color="black">0:access __x0__ = (BindingElementList &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6072 [shape=cds, label=<<font color="black">2:access __x1__ = (BindingRestElement &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6067 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6069 -> node6070 [ color="black"]
  node6072 -> node6073 [ color="black"]
  node6073 -> node6067 [ color="black"]
  node6070 -> node6071 [label=<<font color="black">true</font>> color="black"]
  node6070 -> node6072 [label=<<font color="black">false</font>> color="black"]
  node6071 -> node6072 [ color="black"]
  node6068 -> node6069 [ color="black"]
  node6066 -> node6068 [ color="black"]
}
