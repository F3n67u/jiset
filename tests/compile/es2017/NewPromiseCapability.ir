{
  [0] app __x0__ = (IsConstructor C)
  [0] if (= __x0__ false) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [1] {}
  [2] let promiseCapability = (new PromiseCapability("Promise" -> undefined, "Resolve" -> undefined, "Reject" -> undefined))
  [3] let executor = (new BuiltinFunctionObject("SubMap" -> (new SubMap())))
  [4] executor.Capability = promiseCapability
  [5] app __x2__ = (Construct C (new [executor]))
  [5] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [1] {}
  [5] let promise = __x2__
  [6] app __x3__ = (IsCallable promiseCapability.Resolve)
  [6] if (= __x3__ false) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [1] {}
  [7] app __x5__ = (IsCallable promiseCapability.Reject)
  [7] if (= __x5__ false) {
    app __x6__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x6__
  } else [1] {}
  [8] promiseCapability.Promise = promise
  [9] app __x7__ = (WrapCompletion promiseCapability)
  [9] return __x7__
}