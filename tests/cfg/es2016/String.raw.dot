digraph {
  node11866 [shape=cds, label=<<font color="black">9:app __x5__ = (ToString nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node11863 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11870 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextSeg = [? __x7__]</td></tr>
      <tr><td align="left">11:let __x8__ = nextSeg</td></tr>
      <tr><td align="left">11:let __x9__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11852 [shape=cds, label=<<font color="black">app substitutions = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node11865 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node11877 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11873 [shape=diamond, label=<<font color="black">(== (+ nextIndex 1i) literalSegments)</font>> color="black" fillcolor="white" style=filled]
  node11856 [shape=cds, label=<<font color="black">3:app __x1__ = (Get cooked &quot;raw&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11878 [shape=cds, label=<<font color="black">16:app __x11__ = (ToString next)</font>> color="black" fillcolor="white" style=filled]
  node11868 [shape=cds, label=<<font color="black">10:app __x6__ = (Get raw nextKey)</font>> color="black" fillcolor="white" style=filled]
  node11874 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return the String value whose code units are , in order , the elements in the List id:{stringElements} . If id:{stringElements} has no elements , the empty string is returned .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11872 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x10__ = __x8__[__x9__]</td></tr>
      <tr><td align="left">append __x10__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x9__ = (+ __x9__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11867 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextKey = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11850 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11871 [shape=diamond, label=<<font color="black">(&lt; __x9__ __x8__.length)</font>> color="black" fillcolor="white" style=filled]
  node11854 [shape=cds, label=<<font color="black">2:app __x0__ = (ToObject template)</font>> color="black" fillcolor="white" style=filled]
  node11875 [shape=diamond, label=<<font color="black">(&lt; nextIndex numberOfSubstitutions)</font>> color="black" fillcolor="white" style=filled]
  node11858 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let raw = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11880 [shape=diamond, label=<<font color="black">(&lt; __x13__ __x12__.length)</font>> color="black" fillcolor="white" style=filled]
  node11881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x14__ = __x12__[__x13__]</td></tr>
      <tr><td align="left">append __x14__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x13__ = (+ __x13__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11859 [shape=cds, label=<<font color="black">4:app __x3__ = (Get raw &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node11849 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11876 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = substitutions[nextIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11853 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{substitutions} be a List consisting of all of the arguments passed to this function , starting with the second argument . If fewer than two arguments were passed , the List is empty .&quot;</td></tr>
      <tr><td align="left">1:let numberOfSubstitutions = substitutions.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11860 [shape=cds, label=<<font color="black">4:app __x4__ = (ToLength [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node11869 [shape=cds, label=<<font color="black">10:app __x7__ = (ToString [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node11861 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let literalSegments = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11851 [shape=cds, label=<<font color="black">app template = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11857 [shape=cds, label=<<font color="black">3:app __x2__ = (ToObject [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node11855 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let cooked = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11882 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let nextIndex = (+ nextIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11879 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextSub = [? __x11__]</td></tr>
      <tr><td align="left">17:let __x12__ = nextSub</td></tr>
      <tr><td align="left">17:let __x13__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11864 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let stringElements = (new [])</td></tr>
      <tr><td align="left">7:let nextIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11862 [shape=diamond, label=<<font color="black">(! (&lt; 0i literalSegments))</font>> color="black" fillcolor="white" style=filled]
  node11878 -> node11879 [ color="black"]
  node11867 -> node11868 [ color="black"]
  node11851 -> node11852 [ color="black"]
  node11857 -> node11858 [ color="black"]
  node11868 -> node11869 [ color="black"]
  node11855 -> node11856 [ color="black"]
  node11861 -> node11862 [ color="black"]
  node11871 -> node11872 [label=<<font color="black">true</font>> color="black"]
  node11871 -> node11873 [label=<<font color="black">false</font>> color="black"]
  node11864 -> node11865 [ color="black"]
  node11880 -> node11881 [label=<<font color="black">true</font>> color="black"]
  node11880 -> node11882 [label=<<font color="black">false</font>> color="black"]
  node11863 -> node11864 [ color="black"]
  node11865 -> node11866 [label=<<font color="black">true</font>> color="black"]
  node11865 -> node11850 [label=<<font color="black">false</font>> color="black"]
  node11882 -> node11865 [ color="black"]
  node11876 -> node11878 [ color="black"]
  node11862 -> node11863 [label=<<font color="black">true</font>> color="black"]
  node11862 -> node11864 [label=<<font color="black">false</font>> color="black"]
  node11877 -> node11878 [ color="black"]
  node11853 -> node11854 [ color="black"]
  node11849 -> node11851 [ color="black"]
  node11869 -> node11870 [ color="black"]
  node11879 -> node11880 [ color="black"]
  node11872 -> node11871 [ color="black"]
  node11856 -> node11857 [ color="black"]
  node11873 -> node11874 [label=<<font color="black">true</font>> color="black"]
  node11873 -> node11875 [label=<<font color="black">false</font>> color="black"]
  node11866 -> node11867 [ color="black"]
  node11854 -> node11855 [ color="black"]
  node11875 -> node11876 [label=<<font color="black">true</font>> color="black"]
  node11875 -> node11877 [label=<<font color="black">false</font>> color="black"]
  node11881 -> node11880 [ color="black"]
  node11852 -> node11853 [ color="black"]
  node11870 -> node11871 [ color="black"]
  node11859 -> node11860 [ color="black"]
  node11874 -> node11875 [ color="black"]
  node11860 -> node11861 [ color="black"]
  node11858 -> node11859 [ color="black"]
}
