digraph {
  node9818 [shape=cds, label=<<font color="black">2:app __x1__ = (OrdinaryFunctionCreate INTRINSIC_AsyncFunction_prototype sourceText FormalParameters AsyncFunctionBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node9817 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let name = __x0__</td></tr>
      <tr><td align="left">1:let sourceText = (get-syntax AsyncFunctionDeclaration)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9814 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9821 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[! __x2__]</td></tr>
      <tr><td align="left">4:return F</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9820 [shape=cds, label=<<font color="black">3:app __x2__ = (SetFunctionName F name)</font>> color="black" fillcolor="white" style=filled]
  node9815 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let F = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9816 [shape=cds, label=<<font color="black">0:access __x0__ = (BindingIdentifier &quot;StringValue&quot;)</font>> color="black" fillcolor="white" style=filled]
  node9819 -> node9820 [ color="black"]
  node9821 -> node9815 [ color="black"]
  node9818 -> node9819 [ color="black"]
  node9814 -> node9816 [ color="black"]
  node9816 -> node9817 [ color="black"]
  node9817 -> node9818 [ color="black"]
  node9820 -> node9821 [ color="black"]
}
