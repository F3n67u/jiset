{
  if (= O.ContentType CONST_BigInt) {
    app __x0__ = (ToBigInt value)
    if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
    let numValue = __x0__
  } else {
    app __x1__ = (ToNumber value)
    if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
    let numValue = __x1__
  }
  app __x2__ = (IsValidIntegerIndex O index)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  if (= __x2__ true) {
    let offset = O.ByteOffset
    let arrayTypeName = O.TypedArrayName
    ??? "Let id:{elementSize} be the Element Size value specified in link:{} for id:{arrayTypeName} ."
    let indexedPosition = (+ (* index elementSize) offset)
    ??? "Let id:{elementType} be the Element Type value in link:{} for id:{arrayTypeName} ."
    app __x3__ = (SetValueInBuffer O.ViewedArrayBuffer indexedPosition elementType numValue true CONST_Unordered)
    __x3__
  } else {}
  app __x4__ = (NormalCompletion undefined)
  app __x5__ = (WrapCompletion __x4__)
  return __x5__
}