["Let", {
  "id": "F"
}, "be", "the", "active", "function", "object", ".", {
  "k": 0
}, "Assert", ":", {
  "id": "F"
}, "has", "a", "[", "[", "Capability", "]", "]", "internal", "slot", "whose", "value", "is", "a", "PromiseCapability", "Record", ".", {
  "k": 1
}, "Let", {
  "id": "promiseCapability"
}, "be", {
  "id": "F"
}, ".", "[", "[", "Capability", "]", "]", ".", {
  "k": 2
}, "If", {
  "id": "promiseCapability"
}, ".", "[", "[", "Resolve", "]", "]", "is", "not", {
  "value": "undefined"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 3
}, "If", {
  "id": "promiseCapability"
}, ".", "[", "[", "Reject", "]", "]", "is", "not", {
  "value": "undefined"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 4
}, "Set", {
  "id": "promiseCapability"
}, ".", "[", "[", "Resolve", "]", "]", "to", {
  "id": "resolve"
}, ".", {
  "k": 5
}, "Set", {
  "id": "promiseCapability"
}, ".", "[", "[", "Reject", "]", "]", "to", {
  "id": "reject"
}, ".", {
  "k": 6
}, "Return", {
  "value": "undefined"
}, ".", {
  "k": 7
}]