digraph {
  node5820 [shape=cds, label=<<font color="black">1:app __x1__ = (ResolveBinding P)</font>> color="black" fillcolor="white" style=filled]
  node5825 [shape=cds, label=<<font color="black">6:app __x3__ = (IsAnonymousFunctionDefinition Initializer)</font>> color="black" fillcolor="white" style=filled]
  node5829 [shape=cds, label=<<font color="black">7:access __x5__ = (Initializer &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5834 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[? __x7__]</td></tr>
      <tr><td align="left">10:return (new [P])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5826 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node5823 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let v = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5833 [shape=cds, label=<<font color="black">9:app __x7__ = (PutValue lref v)</font>> color="black" fillcolor="white" style=filled]
  node5831 [shape=cds, label=<<font color="black">8:app __x6__ = (GetValue defaultValue)</font>> color="black" fillcolor="white" style=filled]
  node5827 [shape=cds, label=<<font color="black">5:access __x4__ = (Initializer &quot;NamedEvaluation&quot; P)</font>> color="black" fillcolor="white" style=filled]
  node5816 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5817 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5822 [shape=cds, label=<<font color="black">2:app __x2__ = (GetV value P)</font>> color="black" fillcolor="white" style=filled]
  node5832 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:v = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:v = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5821 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5819 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let P = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5824 [shape=diamond, label=<<font color="black">(&amp;&amp; (! (= Initializer absent)) (= v undefined))</font>> color="black" fillcolor="white" style=filled]
  node5830 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let defaultValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5818 [shape=cds, label=<<font color="black">0:access __x0__ = (IdentifierReference &quot;StringValue&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5822 -> node5823 [ color="black"]
  node5827 -> node5828 [ color="black"]
  node5823 -> node5824 [ color="black"]
  node5816 -> node5818 [ color="black"]
  node5821 -> node5822 [ color="black"]
  node5826 -> node5827 [label=<<font color="black">true</font>> color="black"]
  node5826 -> node5829 [label=<<font color="black">false</font>> color="black"]
  node5830 -> node5831 [ color="black"]
  node5820 -> node5821 [ color="black"]
  node5829 -> node5830 [ color="black"]
  node5828 -> node5833 [ color="black"]
  node5834 -> node5817 [ color="black"]
  node5824 -> node5825 [label=<<font color="black">true</font>> color="black"]
  node5824 -> node5833 [label=<<font color="black">false</font>> color="black"]
  node5833 -> node5834 [ color="black"]
  node5819 -> node5820 [ color="black"]
  node5832 -> node5833 [ color="black"]
  node5831 -> node5832 [ color="black"]
  node5818 -> node5819 [ color="black"]
  node5825 -> node5826 [ color="black"]
}
