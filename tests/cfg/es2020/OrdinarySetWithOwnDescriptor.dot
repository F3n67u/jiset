digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">2:app __x1__ = (O.GetPrototypeOf O)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">ownDesc = (new PropertyDescriptor(&quot;Value&quot; -&gt; undefined, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; true))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let parent = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=diamond, label=<<font color="black">(= ownDesc.Writable false)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPropertyKey P)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=diamond, label=<<font color="black">(! (= parent null))</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=cds, label=<<font color="black">10:app __x5__ = (Receiver.GetOwnProperty Receiver P)</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">7:app __x3__ = (IsDataDescriptor ownDesc)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">4:app __x2__ = (parent.Set parent P V Receiver)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=diamond, label=<<font color="black">(= ownDesc undefined)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">9:app __x4__ = (Type Receiver)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=diamond, label=<<font color="black">(= existingDescriptor.Writable false)</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=diamond, label=<<font color="black">(! (= existingDescriptor undefined))</font>> color="black" fillcolor="white" style=filled]
  node29 [shape=cds, label=<<font color="black">18:app __x8__ = (CreateDataProperty Receiver P V)</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=cds, label=<<font color="black">12:app __x6__ = (IsAccessorDescriptor existingDescriptor)</font>> color="black" fillcolor="white" style=filled]
  node33 [shape=diamond, label=<<font color="black">(= setter undefined)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node32 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:assert (= __x9__ true)</td></tr>
      <tr><td align="left">20:let setter = ownDesc.Set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node34 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=diamond, label=<<font color="black">(= __x6__ true)</font>> color="black" fillcolor="white" style=filled]
  node27 [shape=cds, label=<<font color="black">15:app __x7__ = (Receiver.DefineOwnProperty Receiver P valueDesc)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node35 [shape=cds, label=<<font color="black">22:app __x10__ = (Call setter Receiver (new [V]))</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=diamond, label=<<font color="black">(! (= __x4__ Object))</font>> color="black" fillcolor="white" style=filled]
  node31 [shape=cds, label=<<font color="black">19:app __x9__ = (IsAccessorDescriptor ownDesc)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let valueDesc = (new PropertyDescriptor(&quot;Value&quot; -&gt; V))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node36 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:[? __x10__]</td></tr>
      <tr><td align="left">23:return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let existingDescriptor = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 -> node30 [ color="black"]
  node13 -> node14 [label=<<font color="black">true</font>> color="black"]
  node13 -> node15 [label=<<font color="black">false</font>> color="black"]
  node7 -> node8 [label=<<font color="black">true</font>> color="black"]
  node7 -> node10 [label=<<font color="black">false</font>> color="black"]
  node0 -> node2 [ color="black"]
  node6 -> node7 [ color="black"]
  node27 -> node28 [ color="black"]
  node30 -> node31 [ color="black"]
  node26 -> node27 [ color="black"]
  node25 -> node26 [ color="black"]
  node24 -> node25 [label=<<font color="black">true</font>> color="black"]
  node24 -> node26 [label=<<font color="black">false</font>> color="black"]
  node9 -> node11 [ color="black"]
  node20 -> node21 [label=<<font color="black">true</font>> color="black"]
  node20 -> node29 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node36 -> node1 [ color="black"]
  node34 -> node35 [ color="black"]
  node18 -> node19 [ color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node22 -> node23 [label=<<font color="black">true</font>> color="black"]
  node22 -> node24 [label=<<font color="black">false</font>> color="black"]
  node11 -> node12 [ color="black"]
  node33 -> node34 [label=<<font color="black">true</font>> color="black"]
  node33 -> node35 [label=<<font color="black">false</font>> color="black"]
  node12 -> node13 [label=<<font color="black">true</font>> color="black"]
  node12 -> node31 [label=<<font color="black">false</font>> color="black"]
  node19 -> node20 [ color="black"]
  node35 -> node36 [ color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
  node31 -> node32 [ color="black"]
  node10 -> node11 [ color="black"]
  node16 -> node17 [label=<<font color="black">true</font>> color="black"]
  node16 -> node18 [label=<<font color="black">false</font>> color="black"]
  node8 -> node9 [ color="black"]
  node21 -> node22 [ color="black"]
  node4 -> node5 [label=<<font color="black">true</font>> color="black"]
  node4 -> node11 [label=<<font color="black">false</font>> color="black"]
  node32 -> node33 [ color="black"]
  node17 -> node18 [ color="black"]
  node28 -> node31 [ color="black"]
}
