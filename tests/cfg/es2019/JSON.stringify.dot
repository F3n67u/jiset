digraph {
  node16962 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16985 [shape=cds, label=<<font color="black">app __x8__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node17004 [shape=cds, label=<<font color="black">28:app __x16__ = (min 10i [! __x15__])</font>> color="black" fillcolor="white" style=filled]
  node16989 [shape=cds, label=<<font color="black">app __x10__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node16973 [shape=diamond, label=<<font color="black">(= isArray true)</font>> color="black" fillcolor="white" style=filled]
  node16964 [shape=cds, label=<<font color="black">app space = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node16967 [shape=diamond, label=<<font color="black">(= __x0__ Object)</font>> color="black" fillcolor="white" style=filled]
  node16987 [shape=cds, label=<<font color="black">app __x9__ = (ToString v)</font>> color="black" fillcolor="white" style=filled]
  node16966 [shape=cds, label=<<font color="black">3:app __x0__ = (Type replacer)</font>> color="black" fillcolor="white" style=filled]
  node16975 [shape=cds, label=<<font color="black">10:app __x3__ = (Get replacer &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17003 [shape=cds, label=<<font color="black">28:app __x15__ = (ToInteger space)</font>> color="black" fillcolor="white" style=filled]
  node16971 [shape=cds, label=<<font color="black">7:app __x2__ = (IsArray replacer)</font>> color="black" fillcolor="white" style=filled]
  node17014 [shape=cds, label=<<font color="black">37:app __x20__ = (SerializeJSONProperty &quot;&quot; wrapper)</font>> color="black" fillcolor="white" style=filled]
  node16972 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let isArray = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17011 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:let wrapper = __x18__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16982 [shape=cds, label=<<font color="black">17:app __x7__ = (Type v)</font>> color="black" fillcolor="white" style=filled]
  node16965 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let stack = (new [])</td></tr>
      <tr><td align="left">1:let indent = &quot;&quot;</td></tr>
      <tr><td align="left">2:let PropertyList = undefined</td></tr>
      <tr><td align="left">2:let ReplacerFunction = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16994 [shape=diamond, label=<<font color="black">(= __x11__ Object)</font>> color="black" fillcolor="white" style=filled]
  node16979 [shape=cds, label=<<font color="black">13:app __x5__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node16976 [shape=cds, label=<<font color="black">10:app __x4__ = (ToLength [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node17008 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If the length of id:{space} is 10 or less , let id:{gap} be id:{space} ; otherwise let id:{gap} be the String value consisting of the first 10 code units of id:{space} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16978 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white" style=filled]
  node17000 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:space = [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17005 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">28:space = __x16__</td></tr>
      <tr><td align="left">29:??? &quot;Let id:{gap} be the String value containing id:{space} occurrences of the code unit 0x0020 ( SPACE ) . This will be the empty String if id:{space} is less than 1 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16981 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let v = [? __x6__]</td></tr>
      <tr><td align="left">14:let item = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16968 [shape=cds, label=<<font color="black">6:app __x1__ = (IsCallable replacer)</font>> color="black" fillcolor="white" style=filled]
  node17010 [shape=cds, label=<<font color="black">34:app __x18__ = (ObjectCreate INTRINSIC_ObjectPrototype)</font>> color="black" fillcolor="white" style=filled]
  node16986 [shape=diamond, label=<<font color="black">(= __x8__ Number)</font>> color="black" fillcolor="white" style=filled]
  node17001 [shape=cds, label=<<font color="black">32:app __x14__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node16969 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node16996 [shape=cds, label=<<font color="black">24:app __x12__ = (ToNumber space)</font>> color="black" fillcolor="white" style=filled]
  node16997 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:space = [? __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16990 [shape=diamond, label=<<font color="black">(= __x10__ Object)</font>> color="black" fillcolor="white" style=filled]
  node16977 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let len = [? __x4__]</td></tr>
      <tr><td align="left">11:let k = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17009 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let gap = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16984 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">item = v</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16999 [shape=cds, label=<<font color="black">26:app __x13__ = (ToString space)</font>> color="black" fillcolor="white" style=filled]
  node16970 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">ReplacerFunction = replacer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17006 [shape=cds, label=<<font color="black">app __x17__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node16980 [shape=cds, label=<<font color="black">13:app __x6__ = (Get replacer [! __x5__])</font>> color="black" fillcolor="white" style=filled]
  node16991 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;If id:{v} has a [ [ StringData ] ] or [ [ NumberData ] ] internal slot , set id:{item} to ? ToString ( id:{v} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17012 [shape=cds, label=<<font color="black">35:app __x19__ = (CreateDataProperty wrapper &quot;&quot; value)</font>> color="black" fillcolor="white" style=filled]
  node16974 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:PropertyList = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17013 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:let status = __x19__</td></tr>
      <tr><td align="left">36:assert (= status true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17002 [shape=diamond, label=<<font color="black">(= __x14__ Number)</font>> color="black" fillcolor="white" style=filled]
  node16998 [shape=diamond, label=<<font color="black">(! (= space.StringData absent))</font>> color="black" fillcolor="white" style=filled]
  node16988 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">item = [! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16995 [shape=diamond, label=<<font color="black">(! (= space.NumberData absent))</font>> color="black" fillcolor="white" style=filled]
  node16983 [shape=diamond, label=<<font color="black">(= __x7__ String)</font>> color="black" fillcolor="white" style=filled]
  node16961 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16993 [shape=cds, label=<<font color="black">22:app __x11__ = (Type space)</font>> color="black" fillcolor="white" style=filled]
  node16963 [shape=cds, label=<<font color="black">app replacer = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17015 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:return [? __x20__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17007 [shape=diamond, label=<<font color="black">(= __x17__ String)</font>> color="black" fillcolor="white" style=filled]
  node16992 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:??? &quot;If id:{item} is not value:{undefined} and id:{item} is not currently an element of id:{PropertyList} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">21:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16960 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16968 -> node16969 [ color="black"]
  node16994 -> node16995 [label=<<font color="black">true</font>> color="black"]
  node16994 -> node17001 [label=<<font color="black">false</font>> color="black"]
  node16969 -> node16970 [label=<<font color="black">true</font>> color="black"]
  node16969 -> node16971 [label=<<font color="black">false</font>> color="black"]
  node16965 -> node16966 [ color="black"]
  node17013 -> node17014 [ color="black"]
  node16998 -> node16999 [label=<<font color="black">true</font>> color="black"]
  node16998 -> node17001 [label=<<font color="black">false</font>> color="black"]
  node16980 -> node16981 [ color="black"]
  node16962 -> node16963 [ color="black"]
  node16970 -> node16993 [ color="black"]
  node16989 -> node16990 [ color="black"]
  node16981 -> node16982 [ color="black"]
  node16974 -> node16975 [ color="black"]
  node16985 -> node16986 [ color="black"]
  node17009 -> node17010 [ color="black"]
  node17007 -> node17008 [label=<<font color="black">true</font>> color="black"]
  node17007 -> node17009 [label=<<font color="black">false</font>> color="black"]
  node17012 -> node17013 [ color="black"]
  node16992 -> node16978 [ color="black"]
  node16976 -> node16977 [ color="black"]
  node16995 -> node16996 [label=<<font color="black">true</font>> color="black"]
  node16995 -> node16998 [label=<<font color="black">false</font>> color="black"]
  node17015 -> node16961 [ color="black"]
  node17002 -> node17003 [label=<<font color="black">true</font>> color="black"]
  node17002 -> node17006 [label=<<font color="black">false</font>> color="black"]
  node16964 -> node16965 [ color="black"]
  node16967 -> node16968 [label=<<font color="black">true</font>> color="black"]
  node16967 -> node16993 [label=<<font color="black">false</font>> color="black"]
  node16988 -> node16992 [ color="black"]
  node16982 -> node16983 [ color="black"]
  node16972 -> node16973 [ color="black"]
  node17014 -> node17015 [ color="black"]
  node17006 -> node17007 [ color="black"]
  node17011 -> node17012 [ color="black"]
  node16966 -> node16967 [ color="black"]
  node16990 -> node16991 [label=<<font color="black">true</font>> color="black"]
  node16990 -> node16992 [label=<<font color="black">false</font>> color="black"]
  node16983 -> node16984 [label=<<font color="black">true</font>> color="black"]
  node16983 -> node16985 [label=<<font color="black">false</font>> color="black"]
  node16971 -> node16972 [ color="black"]
  node17000 -> node17001 [ color="black"]
  node16979 -> node16980 [ color="black"]
  node16978 -> node16979 [label=<<font color="black">true</font>> color="black"]
  node16978 -> node16993 [label=<<font color="black">false</font>> color="black"]
  node16996 -> node16997 [ color="black"]
  node17010 -> node17011 [ color="black"]
  node16986 -> node16987 [label=<<font color="black">true</font>> color="black"]
  node16986 -> node16989 [label=<<font color="black">false</font>> color="black"]
  node17005 -> node17010 [ color="black"]
  node17008 -> node17010 [ color="black"]
  node16975 -> node16976 [ color="black"]
  node17001 -> node17002 [ color="black"]
  node16999 -> node17000 [ color="black"]
  node16993 -> node16994 [ color="black"]
  node16977 -> node16978 [ color="black"]
  node16960 -> node16962 [ color="black"]
  node16984 -> node16992 [ color="black"]
  node17004 -> node17005 [ color="black"]
  node16987 -> node16988 [ color="black"]
  node17003 -> node17004 [ color="black"]
  node16991 -> node16992 [ color="black"]
  node16973 -> node16974 [label=<<font color="black">true</font>> color="black"]
  node16973 -> node16993 [label=<<font color="black">false</font>> color="black"]
  node16963 -> node16964 [ color="black"]
  node16997 -> node17001 [ color="black"]
}
