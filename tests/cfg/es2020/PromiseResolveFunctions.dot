digraph {
  node18459 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let then = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18463 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let selfResolutionError = ??? &quot;TypeError&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18446 [shape=diamond, label=<<font color="black">(= alreadyResolved.Value true)</font>> color="black" fillcolor="white" style=filled]
  node18471 [shape=cds, label=<<font color="black">18:app __x10__ = (HostEnqueuePromiseJob job.Job job.Realm)</font>> color="black" fillcolor="white" style=filled]
  node18452 [shape=cds, label=<<font color="black">8:app __x1__ = (RejectPromise promise selfResolutionError)</font>> color="black" fillcolor="white" style=filled]
  node18461 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node18444 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18457 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18448 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:alreadyResolved.Value = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18466 [shape=diamond, label=<<font color="black">(= __x7__ false)</font>> color="black" fillcolor="white" style=filled]
  node18449 [shape=cds, label=<<font color="black">6:app __x0__ = (SameValue resolution promise)</font>> color="black" fillcolor="white" style=filled]
  node18456 [shape=cds, label=<<font color="black">10:app __x3__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node18454 [shape=cds, label=<<font color="black">9:app __x2__ = (Type resolution)</font>> color="black" fillcolor="white" style=filled]
  node18467 [shape=cds, label=<<font color="black">16:app __x8__ = (FulfillPromise promise resolution)</font>> color="black" fillcolor="white" style=filled]
  node18468 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18469 [shape=cds, label=<<font color="black">17:app __x9__ = (NewPromiseResolveThenableJob promise resolution thenAction)</font>> color="black" fillcolor="white" style=filled]
  node18445 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let F = GLOBAL_context.Function</td></tr>
      <tr><td align="left">2:let promise = F.Promise</td></tr>
      <tr><td align="left">3:let alreadyResolved = F.AlreadyResolved</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18458 [shape=cds, label=<<font color="black">11:app __x4__ = (Get resolution &quot;then&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18465 [shape=cds, label=<<font color="black">15:app __x7__ = (IsCallable thenAction)</font>> color="black" fillcolor="white" style=filled]
  node18462 [shape=cds, label=<<font color="black">13:app __x6__ = (RejectPromise promise then.Value)</font>> color="black" fillcolor="white" style=filled]
  node18472 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x10__</td></tr>
      <tr><td align="left">19:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18455 [shape=diamond, label=<<font color="black">(! (= __x2__ Object))</font>> color="black" fillcolor="white" style=filled]
  node18443 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18460 [shape=cds, label=<<font color="black">12:app __x5__ = (IsAbruptCompletion then)</font>> color="black" fillcolor="white" style=filled]
  node18447 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18464 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let thenAction = then.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18470 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let job = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18453 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18450 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node18459 -> node18460 [ color="black"]
  node18468 -> node18469 [ color="black"]
  node18460 -> node18461 [ color="black"]
  node18449 -> node18450 [ color="black"]
  node18470 -> node18471 [ color="black"]
  node18453 -> node18454 [ color="black"]
  node18451 -> node18452 [ color="black"]
  node18466 -> node18467 [label=<<font color="black">true</font>> color="black"]
  node18466 -> node18469 [label=<<font color="black">false</font>> color="black"]
  node18462 -> node18463 [ color="black"]
  node18463 -> node18464 [ color="black"]
  node18467 -> node18468 [ color="black"]
  node18448 -> node18449 [ color="black"]
  node18447 -> node18448 [ color="black"]
  node18469 -> node18470 [ color="black"]
  node18454 -> node18455 [ color="black"]
  node18443 -> node18445 [ color="black"]
  node18465 -> node18466 [ color="black"]
  node18446 -> node18447 [label=<<font color="black">true</font>> color="black"]
  node18446 -> node18448 [label=<<font color="black">false</font>> color="black"]
  node18445 -> node18446 [ color="black"]
  node18471 -> node18472 [ color="black"]
  node18455 -> node18456 [label=<<font color="black">true</font>> color="black"]
  node18455 -> node18458 [label=<<font color="black">false</font>> color="black"]
  node18464 -> node18465 [ color="black"]
  node18456 -> node18457 [ color="black"]
  node18461 -> node18462 [label=<<font color="black">true</font>> color="black"]
  node18461 -> node18464 [label=<<font color="black">false</font>> color="black"]
  node18472 -> node18444 [ color="black"]
  node18457 -> node18458 [ color="black"]
  node18450 -> node18451 [label=<<font color="black">true</font>> color="black"]
  node18450 -> node18454 [label=<<font color="black">false</font>> color="black"]
  node18452 -> node18453 [ color="black"]
  node18458 -> node18459 [ color="black"]
}
