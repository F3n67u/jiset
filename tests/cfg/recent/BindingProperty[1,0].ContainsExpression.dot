digraph {
  node6791 [shape=diamond, label=<<font color="black">(= has true)</font>> color="black" fillcolor="white" style=filled]
  node6787 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6788 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6792 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6794 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6789 [shape=cds, label=<<font color="black">0:access __x0__ = (PropertyName &quot;IsComputedPropertyKey&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6793 [shape=cds, label=<<font color="black">2:access __x1__ = (BindingElement &quot;ContainsExpression&quot;)</font>> color="black" fillcolor="white" style=filled]
  node6790 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let has = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6792 -> node6793 [ color="black"]
  node6790 -> node6791 [ color="black"]
  node6789 -> node6790 [ color="black"]
  node6791 -> node6792 [label=<<font color="black">true</font>> color="black"]
  node6791 -> node6793 [label=<<font color="black">false</font>> color="black"]
  node6794 -> node6788 [ color="black"]
  node6787 -> node6789 [ color="black"]
  node6793 -> node6794 [ color="black"]
}
