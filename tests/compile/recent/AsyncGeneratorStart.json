[{
  "tokens": ["Assert", ":", {
    "id": "generator"
  }, "is", "an", "AsyncGenerator", "instance", "."]
}, {
  "tokens": ["Assert", ":", {
    "id": "generator"
  }, ".", "[", "[", "AsyncGeneratorState", "]", "]", "is", {
    "value": "undefined"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "genContext"
  }, "be", "the", "running", "execution", "context", "."]
}, {
  "tokens": ["Set", "the", "Generator", "component", "of", {
    "id": "genContext"
  }, "to", {
    "id": "generator"
  }, "."]
}, {
  "tokens": ["Set", "the", "code", "evaluation", "state", "of", {
    "id": "genContext"
  }, "such", "that", "when", "evaluation", "is", "resumed", "for", "that", "execution", "context", "the", "following", "steps", "will", "be", "performed", ":"]
}, {
  "tokens": ["If", {
    "id": "generatorBody"
  }, "is", "a", "Parse", "Node", ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "result"
  }, "be", "the", "result", "of", "evaluating", {
    "id": "generatorBody"
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Assert", ":", {
    "id": "generatorBody"
  }, "is", "an", "Abstract", "Closure", "with", "no", "parameters", "."]
}, {
  "tokens": ["Let", {
    "id": "result"
  }, "be", {
    "id": "generatorBody"
  }, "(", ")", "."]
}, {
  "tokens": ["Assert", ":", "If", "we", "return", "here", ",", "the", "async", "generator", "either", "threw", "an", "exception", "or", "performed", "either", "an", "implicit", "or", "explicit", "return", "."]
}, {
  "tokens": ["Remove", {
    "id": "genContext"
  }, "from", "the", "execution", "context", "stack", "and", "restore", "the", "execution", "context", "that", "is", "at", "the", "top", "of", "the", "execution", "context", "stack", "as", "the", "running", "execution", "context", "."]
}, {
  "tokens": ["Set", {
    "id": "generator"
  }, ".", "[", "[", "AsyncGeneratorState", "]", "]", "to", {
    "const": "completed"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "result"
  }, "is", "a", "normal", "completion", ",", "let", {
    "id": "resultValue"
  }, "be", {
    "value": "undefined"
  }, "."]
}, {
  "tokens": ["Else", ","]
}, {
  "tokens": ["Let", {
    "id": "resultValue"
  }, "be", {
    "id": "result"
  }, ".", "[", "[", "Value", "]", "]", "."]
}, {
  "tokens": ["If", {
    "id": "result"
  }, ".", "[", "[", "Type", "]", "]", "is", "not", {
    "const": "return"
  }, ",", "then"]
}, {
  "tokens": ["Return", "!", "AsyncGeneratorReject", "(", {
    "id": "generator"
  }, ",", {
    "id": "resultValue"
  }, ")", "."]
}, {
  "tokens": ["Return", "!", "AsyncGeneratorResolve", "(", {
    "id": "generator"
  }, ",", {
    "id": "resultValue"
  }, ",", {
    "value": "true"
  }, ")", "."]
}, {
  "tokens": ["Set", {
    "id": "generator"
  }, ".", "[", "[", "AsyncGeneratorContext", "]", "]", "to", {
    "id": "genContext"
  }, "."]
}, {
  "tokens": ["Set", {
    "id": "generator"
  }, ".", "[", "[", "AsyncGeneratorState", "]", "]", "to", {
    "const": "suspendedStart"
  }, "."]
}, {
  "tokens": ["Set", {
    "id": "generator"
  }, ".", "[", "[", "AsyncGeneratorQueue", "]", "]", "to", "a", "new", "empty", "List", "."]
}, {
  "tokens": ["Return", {
    "value": "undefined"
  }, "."]
}]