digraph {
  node13834 [shape=diamond, label=<<font color="black">(! (&lt; offset 0i))</font>> color="black" fillcolor="white" style=filled]
  node13830 [shape=cds, label=<<font color="black">0:app __x0__ = (Type tv)</font>> color="black" fillcolor="white" style=filled]
  node13833 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let offset = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13829 [shape=cds, label=<<font color="black">app tv = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13835 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let offsetSign = &quot;+&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13832 [shape=cds, label=<<font color="black">2:app __x1__ = (LocalTZA tv true)</font>> color="black" fillcolor="white" style=filled]
  node13836 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let offsetSign = &quot;-&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13828 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Number)</td></tr>
      <tr><td align="left">1:assert (! (= tv NaN))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13837 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;Let id:{offsetMin} be the String representation of MinFromTime ( abs ( id:{offset} ) ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary .&quot;</td></tr>
      <tr><td align="left">5:??? &quot;Let id:{offsetHour} be the String representation of HourFromTime ( abs ( id:{offset} ) ) , formatted as a two - digit decimal number , padded to the left with a zero if necessary .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{tzName} be an implementation - defined string that is either the empty String or the string - concatenation of the code unit 0x0020 ( SPACE ) , the code unit 0x0028 ( LEFT PARENTHESIS ) , an implementation - dependent timezone name , and the code unit 0x0029 ( RIGHT PARENTHESIS ) .&quot;</td></tr>
      <tr><td align="left">7:return (+ (+ (+ offsetSign offsetHour) offsetMin) tzName)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13827 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13834 -> node13835 [label=<<font color="black">true</font>> color="black"]
  node13834 -> node13836 [label=<<font color="black">false</font>> color="black"]
  node13837 -> node13828 [ color="black"]
  node13833 -> node13834 [ color="black"]
  node13832 -> node13833 [ color="black"]
  node13836 -> node13837 [ color="black"]
  node13829 -> node13830 [ color="black"]
  node13827 -> node13829 [ color="black"]
  node13830 -> node13831 [ color="black"]
  node13835 -> node13837 [ color="black"]
  node13831 -> node13832 [ color="black"]
}
