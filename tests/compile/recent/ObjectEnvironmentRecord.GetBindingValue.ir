{
  [0] let bindings = envRec.BindingObject
  [1] app __x0__ = (HasProperty bindings N)
  [1] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [0] {}
  [1] let value = __x0__
  [2] if (= value false) if (= S false) {
    app __x1__ = (WrapCompletion undefined)
    return __x1__
  } else {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_ReferenceError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [0] {}
  [4] app __x3__ = (Get bindings N)
  [4] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [0] {}
  [4] app __x4__ = (WrapCompletion __x3__)
  [4] return __x4__
}