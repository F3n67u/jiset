{
  [? V]
  if (! (= (typeof V) "ReferenceRecord")) return V else {}
  app __x0__ = (IsUnresolvableReference V)
  if (= __x0__ true) throw INTRINSIC_ReferenceError else {}
  app __x1__ = (IsPropertyReference V)
  if (= __x1__ true) {
    app __x2__ = (ToObject V.Base)
    let baseObj = [! __x2__]
    app __x3__ = (GetThisValue V)
    app __x4__ = (baseObj.Get baseObj V.ReferencedName __x3__)
    return [? __x4__]
  } else {
    let base = V.Base
    app __x5__ = (base.GetBindingValue base V.ReferencedName V.Strict)
    return [? __x5__]
  }
}