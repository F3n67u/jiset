{
  app __x0__ = (ToObject this)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let O = __x0__
  app __x1__ = (LengthOfArrayLike O)
  if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else {}
  let len = __x1__
  let argCount = items.length
  if (< (- (** 2.0 53i) 1i) (+ len argCount)) throw INTRINSIC_TypeError else {}
  let __x2__ = items
  let __x3__ = 0i
  while (< __x3__ __x2__.length) {
    let E = __x2__[__x3__]
    app __x4__ = (ToString len)
    if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
    app __x5__ = (Set O __x4__ E true)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
    __x5__
    len = (+ len 1i)
    __x3__ = (+ __x3__ 1i)
  }
  app __x6__ = (Set O "length" len true)
  if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
  __x6__
  app __x7__ = (WrapCompletion len)
  return __x7__
}