digraph {
  node18610 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18603 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18601 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18608 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node18594 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18599 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x1__ = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18602 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18605 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node18593 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18598 [shape=diamond, label=<<font color="black">(= absent (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new [])))</font>> color="black" fillcolor="white" style=filled]
  node18596 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node18606 [shape=cds, label=<<font color="black">access __x3__ = (LeftHandSideExpression &quot;AssignmentTargetType&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18597 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x1__ = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18595 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let __x0__ = true</td></tr>
      <tr><td align="left">0:__x0__ = (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18604 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:??? &quot;It is an early Reference Error if nt:{LeftHandSideExpression} is neither an nt:{ObjectLiteral} nor an nt:{ArrayLiteral} and AssignmentTargetType of nt:{LeftHandSideExpression} is const:{invalid} .&quot;</td></tr>
      <tr><td align="left">2:let __x2__ = true</td></tr>
      <tr><td align="left">2:__x2__ = (! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18607 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (= __x3__ CONST_strict)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18609 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18600 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x0__ = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18609 -> node18594 [ color="black"]
  node18605 -> node18606 [label=<<font color="black">true</font>> color="black"]
  node18605 -> node18608 [label=<<font color="black">false</font>> color="black"]
  node18607 -> node18608 [ color="black"]
  node18596 -> node18597 [label=<<font color="black">true</font>> color="black"]
  node18596 -> node18601 [label=<<font color="black">false</font>> color="black"]
  node18595 -> node18596 [ color="black"]
  node18599 -> node18600 [ color="black"]
  node18606 -> node18607 [ color="black"]
  node18598 -> node18599 [label=<<font color="black">true</font>> color="black"]
  node18598 -> node18600 [label=<<font color="black">false</font>> color="black"]
  node18608 -> node18609 [label=<<font color="black">true</font>> color="black"]
  node18608 -> node18610 [label=<<font color="black">false</font>> color="black"]
  node18601 -> node18602 [label=<<font color="black">true</font>> color="black"]
  node18601 -> node18603 [label=<<font color="black">false</font>> color="black"]
  node18602 -> node18604 [ color="black"]
  node18593 -> node18595 [ color="black"]
  node18610 -> node18594 [ color="black"]
  node18600 -> node18601 [ color="black"]
  node18603 -> node18604 [ color="black"]
  node18604 -> node18605 [ color="black"]
  node18597 -> node18598 [ color="black"]
}
