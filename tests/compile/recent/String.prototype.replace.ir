{
  app searchValue = (GetArgument argumentsList 0i)
  app replaceValue = (GetArgument argumentsList 1i)
  [0] app __x0__ = (RequireObjectCoercible this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [4] {}
  [0] let O = __x0__
  [1] if (! (|| (= searchValue undefined) (= searchValue null))) {
    [2] app __x1__ = (GetMethod searchValue SYMBOL_replace)
    [2] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [4] {}
    [2] let replacer = __x1__
    [3] if (! (= replacer undefined)) {
      [4] app __x2__ = (Call replacer searchValue (new [O, replaceValue]))
      [4] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [4] {}
      [4] app __x3__ = (WrapCompletion __x2__)
      [4] return __x3__
    } else [4] {}
  } else [4] {}
  [5] app __x4__ = (ToString O)
  [5] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [4] {}
  [5] let string = __x4__
  [6] app __x5__ = (ToString searchValue)
  [6] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [4] {}
  [6] let searchString = __x5__
  [7] app __x6__ = (IsCallable replaceValue)
  [7] let functionalReplace = __x6__
  [8] if (= functionalReplace false) {
    [9] app __x7__ = (ToString replaceValue)
    [9] if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else [4] {}
    [9] replaceValue = __x7__
  } else [4] {}
  [10] let searchLength = searchString.length
  [11] app __x8__ = (StringIndexOf string searchString 0i)
  [11] if (is-completion __x8__) if (= __x8__.Type CONST_normal) __x8__ = __x8__.Value else return __x8__ else [4] {}
  [11] let position = __x8__
  [12] if (= position -1i) {
    app __x9__ = (WrapCompletion string)
    return __x9__
  } else [4] {}
  [13] ??? "Let id:{preserved} be the substring of id:{string} from 0 to id:{position} ."
  [16] if (= functionalReplace true) ??? "Let id:{replacement} be ? ToString ( ? Call ( id:{replaceValue} , value:{undefined} , ¬´ id:{searchString} , ùîΩ ( id:{position} ) , id:{string} ¬ª ) ) ." else {
    [17] app __x10__ = (Type replaceValue)
    [17] assert (= __x10__ String)
    [18] let captures = (new [])
    [19] app __x11__ = (GetSubstitution searchString string position captures undefined replaceValue)
    [19] if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else [4] {}
    [19] let replacement = __x11__
  }
  [20] ??? "Return the string - concatenation of id:{preserved} , id:{replacement} , and the substring of id:{string} from id:{position} + id:{searchLength} ."
}