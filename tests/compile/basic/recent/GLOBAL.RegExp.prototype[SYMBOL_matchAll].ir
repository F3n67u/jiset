{
  let R = this
  if (! (= (typeof R) Object)) throw TypeError else {}
  app __x0__ = (ToString string)
  let S = [? __x0__]
  app __x1__ = (SpeciesConstructor R INTRINSIC_RegExp)
  let C = [? __x1__]
  app __x2__ = (Get R "flags")
  app __x3__ = (ToString [? __x2__])
  let flags = [? __x3__]
  app __x4__ = (Construct C (new [R, flags]))
  let matcher = [? __x4__]
  app __x5__ = (Get R "lastIndex")
  app __x6__ = (ToLength [? __x5__])
  let lastIndex = [? __x6__]
  app __x7__ = (Set matcher "lastIndex" lastIndex true)
  [? __x7__]
  if (contains flags "g") let global = true else let global = false
  if (contains flags "u") let fullUnicode = true else let fullUnicode = false
  app __x8__ = (CreateRegExpStringIterator matcher S global fullUnicode)
  return [! __x8__]
}