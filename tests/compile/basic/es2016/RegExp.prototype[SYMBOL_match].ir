{
  let rx = this
  app __x0__ = (Type rx)
  if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else {}
  app __x2__ = (ToString string)
  if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else {}
  let S = __x2__
  app __x3__ = (Get rx "global")
  if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else {}
  app __x4__ = (ToBoolean __x3__)
  let global = __x4__
  if (= global false) {
    app __x5__ = (RegExpExec rx S)
    if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else {}
    app __x6__ = (WrapCompletion __x5__)
    return __x6__
  } else {
    app __x7__ = (Get rx "unicode")
    if (is-completion __x7__) if (= __x7__.Type CONST_normal) __x7__ = __x7__.Value else return __x7__ else {}
    app __x8__ = (ToBoolean __x7__)
    let fullUnicode = __x8__
    app __x9__ = (Set rx "lastIndex" 0i true)
    if (is-completion __x9__) if (= __x9__.Type CONST_normal) __x9__ = __x9__.Value else return __x9__ else {}
    __x9__
    app __x10__ = (ArrayCreate 0i)
    let A = __x10__
    let n = 0i
    while true {
      app __x11__ = (RegExpExec rx S)
      if (is-completion __x11__) if (= __x11__.Type CONST_normal) __x11__ = __x11__.Value else return __x11__ else {}
      let result = __x11__
      if (= result null) if (== n 0i) {
        app __x12__ = (WrapCompletion null)
        return __x12__
      } else {
        app __x13__ = (WrapCompletion A)
        return __x13__
      } else {
        app __x14__ = (Get result "0")
        if (is-completion __x14__) if (= __x14__.Type CONST_normal) __x14__ = __x14__.Value else return __x14__ else {}
        app __x15__ = (ToString __x14__)
        if (is-completion __x15__) if (= __x15__.Type CONST_normal) __x15__ = __x15__.Value else return __x15__ else {}
        let matchStr = __x15__
        app __x16__ = (ToString n)
        if (is-completion __x16__) if (= __x16__.Type CONST_normal) __x16__ = __x16__.Value else return __x16__ else {}
        app __x17__ = (CreateDataProperty A __x16__ matchStr)
        let status = __x17__
        assert (= status true)
        if (= matchStr "") {
          app __x18__ = (Get rx "lastIndex")
          if (is-completion __x18__) if (= __x18__.Type CONST_normal) __x18__ = __x18__.Value else return __x18__ else {}
          app __x19__ = (ToLength __x18__)
          if (is-completion __x19__) if (= __x19__.Type CONST_normal) __x19__ = __x19__.Value else return __x19__ else {}
          let thisIndex = __x19__
          app __x20__ = (AdvanceStringIndex S thisIndex fullUnicode)
          let nextIndex = __x20__
          app __x21__ = (Set rx "lastIndex" nextIndex true)
          if (is-completion __x21__) if (= __x21__.Type CONST_normal) __x21__ = __x21__.Value else return __x21__ else {}
          __x21__
        } else {}
        n = (+ n 1i)
      }
    }
  }
}