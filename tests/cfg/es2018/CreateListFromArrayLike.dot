digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">(&lt; index len)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let len = [? __x2__]</td></tr>
      <tr><td align="left">3:let list = (new [])</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">7:app __x4__ = (Get obj indexName)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=diamond, label=<<font color="black">(= elementTypes absent)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let indexName = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">2:app __x1__ = (Get obj &quot;length&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">elementTypes = (new [Undefined, Null, Boolean, String, Symbol, Number, Object])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:append next -&gt; list</td></tr>
      <tr><td align="left">10:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=diamond, label=<<font color="black">(! (contains elementTypes __x5__))</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=cds, label=<<font color="black">6:app __x3__ = (ToString index)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">2:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return list</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">1:app __x0__ = (Type obj)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">8:app __x5__ = (Type next)</font>> color="black" fillcolor="white" style=filled]
  node3 -> node4 [ color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node19 [label=<<font color="black">false</font>> color="black"]
  node7 -> node8 [ color="black"]
  node15 -> node16 [ color="black"]
  node11 -> node12 [ color="black"]
  node13 -> node14 [ color="black"]
  node12 -> node13 [ color="black"]
  node0 -> node2 [ color="black"]
  node9 -> node10 [ color="black"]
  node14 -> node15 [ color="black"]
  node19 -> node1 [ color="black"]
  node16 -> node17 [label=<<font color="black">true</font>> color="black"]
  node16 -> node18 [label=<<font color="black">false</font>> color="black"]
  node4 -> node5 [ color="black"]
  node8 -> node9 [ color="black"]
  node5 -> node6 [label=<<font color="black">true</font>> color="black"]
  node5 -> node7 [label=<<font color="black">false</font>> color="black"]
  node18 -> node10 [ color="black"]
  node17 -> node18 [ color="black"]
  node2 -> node3 [label=<<font color="black">true</font>> color="black"]
  node2 -> node4 [label=<<font color="black">false</font>> color="black"]
  node6 -> node7 [ color="black"]
}
