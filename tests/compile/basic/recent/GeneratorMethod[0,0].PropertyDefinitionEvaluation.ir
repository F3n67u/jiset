{
  access __x0__ = (PropertyName "Evaluation")
  let propKey = __x0__
  if (is-completion propKey) if (= propKey.Type CONST_normal) propKey = propKey.Value else return propKey else {}
  propKey
  let scope = GLOBAL_context.LexicalEnvironment
  let sourceText = (get-syntax GeneratorMethod)
  app __x1__ = (OrdinaryFunctionCreate INTRINSIC_GeneratorFunction_prototype sourceText UniqueFormalParameters GeneratorBody CONST_nonDASHlexicalDASHthis scope)
  let closure = __x1__
  app __x2__ = (MakeMethod closure object)
  __x2__
  app __x3__ = (SetFunctionName closure propKey)
  __x3__
  app __x4__ = (OrdinaryObjectCreate INTRINSIC_GeneratorFunction_prototype_prototype)
  if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else {}
  let prototype = __x4__
  app __x5__ = (DefinePropertyOrThrow closure "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  __x5__
  let desc = (new PropertyDescriptor("Value" -> closure, "Writable" -> true, "Enumerable" -> enumerable, "Configurable" -> true))
  app __x6__ = (DefinePropertyOrThrow object propKey desc)
  if (is-completion __x6__) if (= __x6__.Type CONST_normal) __x6__ = __x6__.Value else return __x6__ else {}
  app __x7__ = (WrapCompletion __x6__)
  return __x7__
}