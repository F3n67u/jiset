digraph {
  node14552 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14558 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14556 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14561 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x1__[__x2__]</td></tr>
      <tr><td align="left">5:??? &quot;Replace the element of id:{entries} whose value is id:{e} with an element whose value is const:{empty} .&quot;</td></tr>
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14555 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node14554 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node14560 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node14551 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14559 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let entries = S.SetData</td></tr>
      <tr><td align="left">4:let __x1__ = entries</td></tr>
      <tr><td align="left">4:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14553 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let S = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14562 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14557 [shape=diamond, label=<<font color="black">(= S.SetData absent)</font>> color="black" fillcolor="white" style=filled]
  node14560 -> node14561 [label=<<font color="black">true</font>> color="black"]
  node14560 -> node14562 [label=<<font color="black">false</font>> color="black"]
  node14554 -> node14555 [ color="black"]
  node14558 -> node14559 [ color="black"]
  node14561 -> node14560 [ color="black"]
  node14553 -> node14554 [ color="black"]
  node14556 -> node14557 [ color="black"]
  node14557 -> node14558 [label=<<font color="black">true</font>> color="black"]
  node14557 -> node14559 [label=<<font color="black">false</font>> color="black"]
  node14555 -> node14556 [label=<<font color="black">true</font>> color="black"]
  node14555 -> node14557 [label=<<font color="black">false</font>> color="black"]
  node14551 -> node14553 [ color="black"]
  node14559 -> node14560 [ color="black"]
  node14562 -> node14552 [ color="black"]
}
