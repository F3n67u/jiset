digraph {
  node6251 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6253 [shape=cds, label=<<font color="black">0:access __x0__ = (StatementList &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6255 [shape=diamond, label=<<font color="black">(= hasUndefinedLabels true)</font>> color="black" fillcolor="white" style=filled]
  node6258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6254 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let hasUndefinedLabels = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node6257 [shape=cds, label=<<font color="black">2:access __x1__ = (StatementListItem &quot;ContainsUndefinedBreakTarget&quot; labelSet)</font>> color="black" fillcolor="white" style=filled]
  node6252 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6257 -> node6258 [ color="black"]
  node6258 -> node6252 [ color="black"]
  node6251 -> node6253 [ color="black"]
  node6254 -> node6255 [ color="black"]
  node6253 -> node6254 [ color="black"]
  node6255 -> node6256 [label=<<font color="black">true</font>> color="black"]
  node6255 -> node6257 [label=<<font color="black">false</font>> color="black"]
  node6256 -> node6257 [ color="black"]
}
