digraph {
  node13475 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13484 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13474 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13479 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13476 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13487 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13483 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;(?:)&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13480 [shape=diamond, label=<<font color="black">(= R.OriginalSource absent)</font>> color="black" fillcolor="white" style=filled]
  node13482 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node13486 [shape=cds, label=<<font color="black">8:app __x2__ = (EscapeRegExpPattern src flags)</font>> color="black" fillcolor="white" style=filled]
  node13477 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node13481 [shape=cds, label=<<font color="black">4:app __x1__ = (SameValue R INTRINSIC_RegExpPrototype)</font>> color="black" fillcolor="white" style=filled]
  node13485 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (! (= R.OriginalFlags absent))</td></tr>
      <tr><td align="left">6:let src = R.OriginalSource</td></tr>
      <tr><td align="left">7:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13478 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node13476 -> node13477 [ color="black"]
  node13486 -> node13487 [ color="black"]
  node13487 -> node13475 [ color="black"]
  node13477 -> node13478 [ color="black"]
  node13479 -> node13480 [ color="black"]
  node13484 -> node13485 [ color="black"]
  node13480 -> node13481 [label=<<font color="black">true</font>> color="black"]
  node13480 -> node13485 [label=<<font color="black">false</font>> color="black"]
  node13474 -> node13476 [ color="black"]
  node13485 -> node13486 [ color="black"]
  node13478 -> node13479 [label=<<font color="black">true</font>> color="black"]
  node13478 -> node13480 [label=<<font color="black">false</font>> color="black"]
  node13483 -> node13485 [ color="black"]
  node13481 -> node13482 [ color="black"]
  node13482 -> node13483 [label=<<font color="black">true</font>> color="black"]
  node13482 -> node13484 [label=<<font color="black">false</font>> color="black"]
}
