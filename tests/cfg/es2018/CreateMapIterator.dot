digraph {
  node15684 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15691 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15686 [shape=cds, label=<<font color="black">app kind = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15689 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15693 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = __x1__</td></tr>
      <tr><td align="left">3:iterator.Map = map</td></tr>
      <tr><td align="left">4:iterator.MapNextIndex = 0i</td></tr>
      <tr><td align="left">5:iterator.MapIterationKind = kind</td></tr>
      <tr><td align="left">6:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15685 [shape=cds, label=<<font color="black">app map = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15690 [shape=diamond, label=<<font color="black">(= map.MapData absent)</font>> color="black" fillcolor="white" style=filled]
  node15683 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15688 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15687 [shape=cds, label=<<font color="black">0:app __x0__ = (Type map)</font>> color="black" fillcolor="white" style=filled]
  node15692 [shape=cds, label=<<font color="black">2:app __x1__ = (ObjectCreate INTRINSIC_MapIteratorPrototype (new [&quot;Map&quot;, &quot;MapNextIndex&quot;, &quot;MapIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15683 -> node15685 [ color="black"]
  node15691 -> node15692 [ color="black"]
  node15688 -> node15689 [label=<<font color="black">true</font>> color="black"]
  node15688 -> node15690 [label=<<font color="black">false</font>> color="black"]
  node15690 -> node15691 [label=<<font color="black">true</font>> color="black"]
  node15690 -> node15692 [label=<<font color="black">false</font>> color="black"]
  node15686 -> node15687 [ color="black"]
  node15687 -> node15688 [ color="black"]
  node15689 -> node15690 [ color="black"]
  node15693 -> node15684 [ color="black"]
  node15685 -> node15686 [ color="black"]
  node15692 -> node15693 [ color="black"]
}
