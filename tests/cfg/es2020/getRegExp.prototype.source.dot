digraph {
  node15435 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;(?:)&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15426 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15430 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15431 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15427 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15433 [shape=cds, label=<<font color="black">4:app __x1__ = (SameValue R INTRINSIC_RegExp_prototype)</font>> color="black" fillcolor="white" style=filled]
  node15428 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15438 [shape=cds, label=<<font color="black">8:app __x2__ = (EscapeRegExpPattern src flags)</font>> color="black" fillcolor="white" style=filled]
  node15432 [shape=diamond, label=<<font color="black">(= R.OriginalSource absent)</font>> color="black" fillcolor="white" style=filled]
  node15429 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node15434 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node15439 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15436 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15437 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (! (= R.OriginalFlags absent))</td></tr>
      <tr><td align="left">6:let src = R.OriginalSource</td></tr>
      <tr><td align="left">7:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15439 -> node15427 [ color="black"]
  node15438 -> node15439 [ color="black"]
  node15432 -> node15433 [label=<<font color="black">true</font>> color="black"]
  node15432 -> node15437 [label=<<font color="black">false</font>> color="black"]
  node15426 -> node15428 [ color="black"]
  node15434 -> node15435 [label=<<font color="black">true</font>> color="black"]
  node15434 -> node15436 [label=<<font color="black">false</font>> color="black"]
  node15435 -> node15437 [ color="black"]
  node15429 -> node15430 [ color="black"]
  node15430 -> node15431 [label=<<font color="black">true</font>> color="black"]
  node15430 -> node15432 [label=<<font color="black">false</font>> color="black"]
  node15428 -> node15429 [ color="black"]
  node15437 -> node15438 [ color="black"]
  node15436 -> node15437 [ color="black"]
  node15433 -> node15434 [ color="black"]
  node15431 -> node15432 [ color="black"]
}
