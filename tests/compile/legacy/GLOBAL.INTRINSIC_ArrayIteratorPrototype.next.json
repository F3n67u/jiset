["Let", {
  "id": "O"
}, "be", "the", {
  "value": "this"
}, "value", ".", {
  "k": 0
}, "If", "Type", "(", {
  "id": "O"
}, ")", "is", "not", "Object", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 1
}, "If", {
  "id": "O"
}, "does", "not", "have", "all", "of", "the", "internal", "slots", "of", "an", "Array", "Iterator", "Instance", "(", "22", ".", "1", ".", "5", ".", "3", ")", ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", {
  "k": 2
}, "Let", {
  "id": "a"
}, "be", {
  "id": "O"
}, ".", "[", "[", "IteratedArrayLike", "]", "]", ".", {
  "k": 3
}, "If", {
  "id": "a"
}, "is", {
  "value": "undefined"
}, ",", "return", "CreateIterResultObject", "(", {
  "value": "undefined"
}, ",", {
  "value": "true"
}, ")", ".", {
  "k": 4
}, "Let", {
  "id": "index"
}, "be", {
  "id": "O"
}, ".", "[", "[", "ArrayLikeNextIndex", "]", "]", ".", {
  "k": 5
}, "Let", {
  "id": "itemKind"
}, "be", {
  "id": "O"
}, ".", "[", "[", "ArrayLikeIterationKind", "]", "]", ".", {
  "k": 6
}, "If", {
  "id": "a"
}, "has", "a", "[", "[", "TypedArrayName", "]", "]", "internal", "slot", ",", "then", {
  "in": null
}, "If", "IsDetachedBuffer", "(", {
  "id": "a"
}, ".", "[", "[", "ViewedArrayBuffer", "]", "]", ")", "is", {
  "value": "true"
}, ",", "throw", "a", {
  "value": "TypeError"
}, "exception", ".", "Let", {
  "id": "len"
}, "be", {
  "id": "a"
}, ".", "[", "[", "ArrayLength", "]", "]", ".", {
  "out": null
}, {
  "k": 7
}, "Else", ",", {
  "in": null
}, "Let", {
  "id": "len"
}, "be", "?", "LengthOfArrayLike", "(", {
  "id": "a"
}, ")", ".", {
  "out": null
}, {
  "k": 8
}, "If", {
  "id": "index"
}, "≥", {
  "id": "len"
}, ",", "then", {
  "in": null
}, "Set", {
  "id": "O"
}, ".", "[", "[", "IteratedArrayLike", "]", "]", "to", {
  "value": "undefined"
}, ".", "Return", "CreateIterResultObject", "(", {
  "value": "undefined"
}, ",", {
  "value": "true"
}, ")", ".", {
  "out": null
}, {
  "k": 9
}, "Set", {
  "id": "O"
}, ".", "[", "[", "ArrayLikeNextIndex", "]", "]", "to", {
  "id": "index"
}, "+", "1", ".", {
  "k": 10
}, "If", {
  "id": "itemKind"
}, "is", {
  "const": "key"
}, ",", "return", "CreateIterResultObject", "(", {
  "id": "index"
}, ",", {
  "value": "false"
}, ")", ".", {
  "k": 11
}, "Let", {
  "id": "elementKey"
}, "be", "!", "ToString", "(", {
  "id": "index"
}, ")", ".", {
  "k": 12
}, "Let", {
  "id": "elementValue"
}, "be", "?", "Get", "(", {
  "id": "a"
}, ",", {
  "id": "elementKey"
}, ")", ".", {
  "k": 13
}, "If", {
  "id": "itemKind"
}, "is", {
  "const": "value"
}, ",", "let", {
  "id": "result"
}, "be", {
  "id": "elementValue"
}, ".", {
  "k": 14
}, "Else", ",", {
  "in": null
}, "Assert", ":", {
  "id": "itemKind"
}, "is", {
  "const": "key+value"
}, ".", "Let", {
  "id": "result"
}, "be", "!", "CreateArrayFromList", "(", "«", {
  "id": "index"
}, ",", {
  "id": "elementValue"
}, "»", ")", ".", {
  "out": null
}, {
  "k": 15
}, "Return", "CreateIterResultObject", "(", {
  "id": "result"
}, ",", {
  "value": "false"
}, ")", ".", {
  "k": 16
}]