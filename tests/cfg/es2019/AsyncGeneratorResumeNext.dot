digraph {
  node17307 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:generator.AsyncGeneratorState = &quot;awaiting-return&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17310 [shape=cds, label=<<font color="black">18:app __x2__ = (CreateBuiltinFunction stepsFulfilled (new [&quot;Generator&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17303 [shape=diamond, label=<<font color="black">(= state &quot;suspendedStart&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17296 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17318 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:[! __x5__]</td></tr>
      <tr><td align="left">28:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17293 [shape=cds, label=<<font color="black">app generator = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17305 [shape=diamond, label=<<font color="black">(= state &quot;completed&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17312 [shape=cds, label=<<font color="black">21:app __x3__ = (CreateBuiltinFunction stepsRejected (new [&quot;Generator&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node17294 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let state = generator.AsyncGeneratorState</td></tr>
      <tr><td align="left">2:assert (! (= state &quot;executing&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17291 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let queue = generator.AsyncGeneratorQueue</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17295 [shape=diamond, label=<<font color="black">(= state &quot;awaiting-return&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17317 [shape=cds, label=<<font color="black">27:app __x5__ = (AsyncGeneratorReject generator completion.Value)</font>> color="black" fillcolor="white" style=filled]
  node17302 [shape=diamond, label=<<font color="black">__x0__</font>> color="black" fillcolor="white" style=filled]
  node17322 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:assert (|| (= state &quot;suspendedStart&quot;) (= state &quot;suspendedYield&quot;))</td></tr>
      <tr><td align="left">31:let genContext = generator.AsyncGeneratorContext</td></tr>
      <tr><td align="left">32:let callerContext = GLOBAL_context</td></tr>
      <tr><td align="left">33:GLOBAL_context = null</td></tr>
      <tr><td align="left">34:generator.AsyncGeneratorState = &quot;executing&quot;</td></tr>
      <tr><td align="left">35:append genContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">35:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">36:??? &quot;Resume the suspended evaluation of id:{genContext} using id:{completion} as the result of the operation that suspended it . Let id:{result} be the completion record returned by the resumed computation .&quot;</td></tr>
      <tr><td align="left">39:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17298 [shape=diamond, label=<<font color="black">(= queue.length 0i)</font>> color="black" fillcolor="white" style=filled]
  node17314 [shape=cds, label=<<font color="black">23:app __x4__ = (PerformPromiseThen promise onFulfilled onRejected)</font>> color="black" fillcolor="white" style=filled]
  node17306 [shape=diamond, label=<<font color="black">(= completion.Type CONST_return)</font>> color="black" fillcolor="white" style=filled]
  node17299 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17321 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17315 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:[! __x4__]</td></tr>
      <tr><td align="left">24:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17292 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17313 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let onRejected = __x3__</td></tr>
      <tr><td align="left">22:onRejected.Generator = generator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17300 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = queue[0i]</td></tr>
      <tr><td align="left">8:let completion = next.Completion</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17309 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let promise = [? __x1__]</td></tr>
      <tr><td align="left">17:let stepsFulfilled = AsyncGeneratorResumeNextReturnProcessorFulfilledFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17319 [shape=diamond, label=<<font color="black">(= state &quot;completed&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17304 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:generator.AsyncGeneratorState = &quot;completed&quot;</td></tr>
      <tr><td align="left">12:state = &quot;completed&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17320 [shape=cds, label=<<font color="black">app __x6__ = (AsyncGeneratorResolve generator undefined true)</font>> color="black" fillcolor="white" style=filled]
  node17308 [shape=cds, label=<<font color="black">16:app __x1__ = (PromiseResolve INTRINSIC_Promise (new [completion.Value]))</font>> color="black" fillcolor="white" style=filled]
  node17316 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">26:assert (= completion.Type CONST_throw)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17301 [shape=cds, label=<<font color="black">29:app __x0__ = (IsAbruptCompletion completion)</font>> color="black" fillcolor="white" style=filled]
  node17311 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let onFulfilled = __x2__</td></tr>
      <tr><td align="left">19:onFulfilled.Generator = generator</td></tr>
      <tr><td align="left">20:let stepsRejected = AsyncGeneratorResumeNextReturnProcessorRejectedFunctions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17305 -> node17306 [label=<<font color="black">true</font>> color="black"]
  node17305 -> node17322 [label=<<font color="black">false</font>> color="black"]
  node17310 -> node17311 [ color="black"]
  node17304 -> node17305 [ color="black"]
  node17317 -> node17318 [ color="black"]
  node17296 -> node17297 [ color="black"]
  node17309 -> node17310 [ color="black"]
  node17312 -> node17313 [ color="black"]
  node17321 -> node17322 [ color="black"]
  node17311 -> node17312 [ color="black"]
  node17302 -> node17303 [label=<<font color="black">true</font>> color="black"]
  node17302 -> node17319 [label=<<font color="black">false</font>> color="black"]
  node17299 -> node17300 [ color="black"]
  node17315 -> node17322 [ color="black"]
  node17313 -> node17314 [ color="black"]
  node17318 -> node17322 [ color="black"]
  node17306 -> node17307 [label=<<font color="black">true</font>> color="black"]
  node17306 -> node17316 [label=<<font color="black">false</font>> color="black"]
  node17297 -> node17298 [ color="black"]
  node17303 -> node17304 [label=<<font color="black">true</font>> color="black"]
  node17303 -> node17305 [label=<<font color="black">false</font>> color="black"]
  node17300 -> node17301 [ color="black"]
  node17291 -> node17293 [ color="black"]
  node17298 -> node17299 [label=<<font color="black">true</font>> color="black"]
  node17298 -> node17300 [label=<<font color="black">false</font>> color="black"]
  node17295 -> node17296 [label=<<font color="black">true</font>> color="black"]
  node17295 -> node17297 [label=<<font color="black">false</font>> color="black"]
  node17322 -> node17292 [ color="black"]
  node17314 -> node17315 [ color="black"]
  node17320 -> node17321 [ color="black"]
  node17301 -> node17302 [ color="black"]
  node17307 -> node17308 [ color="black"]
  node17316 -> node17317 [ color="black"]
  node17294 -> node17295 [ color="black"]
  node17308 -> node17309 [ color="black"]
  node17319 -> node17320 [label=<<font color="black">true</font>> color="black"]
  node17319 -> node17322 [label=<<font color="black">false</font>> color="black"]
  node17293 -> node17294 [ color="black"]
}
