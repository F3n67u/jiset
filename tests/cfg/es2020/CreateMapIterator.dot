digraph {
  node16594 [shape=cds, label=<<font color="black">app kind = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16593 [shape=cds, label=<<font color="black">app map = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16596 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16595 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot map &quot;MapData&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16598 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let iterator = __x1__</td></tr>
      <tr><td align="left">2:iterator.IteratedMap = map</td></tr>
      <tr><td align="left">3:iterator.MapNextIndex = 0i</td></tr>
      <tr><td align="left">4:iterator.MapIterationKind = kind</td></tr>
      <tr><td align="left">5:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16591 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16592 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16597 [shape=cds, label=<<font color="black">1:app __x1__ = (OrdinaryObjectCreate INTRINSIC_MapIteratorPrototype (new [&quot;IteratedMap&quot;, &quot;MapNextIndex&quot;, &quot;MapIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16597 -> node16598 [ color="black"]
  node16596 -> node16597 [ color="black"]
  node16593 -> node16594 [ color="black"]
  node16591 -> node16593 [ color="black"]
  node16595 -> node16596 [ color="black"]
  node16594 -> node16595 [ color="black"]
  node16598 -> node16592 [ color="black"]
}
