{
  app items = (GetArgument argumentsList 0i)
  [0] let numberOfArgs = argumentsList.length
  [1] assert (! (< numberOfArgs 2i))
  [2] if (= NewTarget undefined) let newTarget = GLOBAL_context.Function else let newTarget = NewTarget
  [3] app __x0__ = (GetPrototypeFromConstructor newTarget "%Array.prototype%")
  [3] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [12] {}
  [3] let proto = __x0__
  [4] app __x1__ = (ArrayCreate numberOfArgs proto)
  [4] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [12] {}
  [4] let array = __x1__
  [5] let k = 0i
  [6] ??? "Let id:{items} be a zero - origined List containing the argument items in order ."
  [7] while (< k numberOfArgs) {
    [8] app __x2__ = (ToString k)
    [8] if (is-completion __x2__) if (= __x2__.Type CONST_normal) __x2__ = __x2__.Value else return __x2__ else [12] {}
    [8] let Pk = __x2__
    [9] let itemK = items[k]
    [10] app __x3__ = (CreateDataPropertyOrThrow array Pk itemK)
    [10] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [12] {}
    [10] __x3__
    [11] k = (+ k 1i)
  }
  [13] app __x4__ = (WrapCompletion array)
  [13] return __x4__
}