digraph {
  node16444 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let iterator = __x1__</td></tr>
      <tr><td align="left">3:iterator.IteratedArrayLike = array</td></tr>
      <tr><td align="left">4:iterator.ArrayLikeNextIndex = 0i</td></tr>
      <tr><td align="left">5:iterator.ArrayLikeIterationKind = kind</td></tr>
      <tr><td align="left">6:return iterator</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16437 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16440 [shape=cds, label=<<font color="black">app kind = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node16441 [shape=cds, label=<<font color="black">0:app __x0__ = (Type array)</font>> color="black" fillcolor="white" style=filled]
  node16439 [shape=cds, label=<<font color="black">app array = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16442 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Object)</td></tr>
      <tr><td align="left">1:assert (|| (|| (= kind CONST_keyPLUSvalue) (= kind CONST_key)) (= kind CONST_value))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16443 [shape=cds, label=<<font color="black">2:app __x1__ = (OrdinaryObjectCreate INTRINSIC_ArrayIteratorPrototype (new [&quot;IteratedArrayLike&quot;, &quot;ArrayLikeNextIndex&quot;, &quot;ArrayLikeIterationKind&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node16438 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16441 -> node16442 [ color="black"]
  node16444 -> node16438 [ color="black"]
  node16437 -> node16439 [ color="black"]
  node16440 -> node16441 [ color="black"]
  node16443 -> node16444 [ color="black"]
  node16442 -> node16443 [ color="black"]
  node16439 -> node16440 [ color="black"]
}
