{
  access __x0__ = (BindingIdentifier "StringValue")
  let bindingId = __x0__
  app __x1__ = (ResolveBinding bindingId environment)
  let lhs = [? __x1__]
  if (= iteratorRecord.Done false) {
    app __x2__ = (IteratorStep iteratorRecord.Iterator)
    let next = __x2__
    app __x3__ = (IsAbruptCompletion next)
    if __x3__ iteratorRecord.Done = true else {}
    [? next]
    if (= next false) iteratorRecord.Done = true else {
      app __x4__ = (IteratorValue next)
      let v = __x4__
      app __x5__ = (IsAbruptCompletion v)
      if __x5__ iteratorRecord.Done = true else {}
      [? v]
    }
  } else {}
  if (= iteratorRecord.Done true) let v = undefined else {}
  if (&& (! (= Initializer absent)) (= v undefined)) {
    access __x6__ = (Initializer "Evaluation")
    let defaultValue = __x6__
    app __x7__ = (GetValue defaultValue)
    v = [? __x7__]
    app __x8__ = (IsAnonymousFunctionDefinition Initializer)
    if (= __x8__ true) {
      app __x9__ = (HasOwnProperty v "name")
      let hasNameProperty = [? __x9__]
      if (= hasNameProperty false) {
        app __x10__ = (SetFunctionName v bindingId)
        __x10__
      } else {}
    } else {}
  } else {}
  if (= environment undefined) {
    app __x11__ = (PutValue lhs v)
    return [? __x11__]
  } else {}
  app __x12__ = (InitializeReferencedBinding lhs v)
  return __x12__
}