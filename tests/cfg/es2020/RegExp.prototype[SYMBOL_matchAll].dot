digraph {
  node15267 [shape=cds, label=<<font color="black">5:app __x5__ = (Construct C (new [R, flags]))</font>> color="black" fillcolor="white" style=filled]
  node15264 [shape=cds, label=<<font color="black">4:app __x3__ = (Get R &quot;flags&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15271 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let lastIndex = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15258 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15281 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:return [! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15276 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15269 [shape=cds, label=<<font color="black">6:app __x6__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15278 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15257 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node15263 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let C = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15254 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15274 [shape=diamond, label=<<font color="black">(contains flags &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15261 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15253 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15279 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let flags = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15265 [shape=cds, label=<<font color="black">4:app __x4__ = (ToString [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node15270 [shape=cds, label=<<font color="black">6:app __x7__ = (ToLength [? __x6__])</font>> color="black" fillcolor="white" style=filled]
  node15275 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15280 [shape=cds, label=<<font color="black">12:app __x9__ = (CreateRegExpStringIterator matcher S global fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node15259 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15255 [shape=cds, label=<<font color="black">app string = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15260 [shape=cds, label=<<font color="black">2:app __x1__ = (ToString string)</font>> color="black" fillcolor="white" style=filled]
  node15277 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15262 [shape=cds, label=<<font color="black">3:app __x2__ = (SpeciesConstructor R INTRINSIC_RegExp)</font>> color="black" fillcolor="white" style=filled]
  node15268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let matcher = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15272 [shape=cds, label=<<font color="black">7:app __x8__ = (Set matcher &quot;lastIndex&quot; lastIndex true)</font>> color="black" fillcolor="white" style=filled]
  node15273 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15265 -> node15266 [ color="black"]
  node15263 -> node15264 [ color="black"]
  node15258 -> node15259 [label=<<font color="black">true</font>> color="black"]
  node15258 -> node15260 [label=<<font color="black">false</font>> color="black"]
  node15273 -> node15274 [ color="black"]
  node15281 -> node15254 [ color="black"]
  node15268 -> node15269 [ color="black"]
  node15279 -> node15280 [ color="black"]
  node15269 -> node15270 [ color="black"]
  node15280 -> node15281 [ color="black"]
  node15256 -> node15257 [ color="black"]
  node15257 -> node15258 [ color="black"]
  node15267 -> node15268 [ color="black"]
  node15262 -> node15263 [ color="black"]
  node15278 -> node15280 [ color="black"]
  node15253 -> node15255 [ color="black"]
  node15255 -> node15256 [ color="black"]
  node15266 -> node15267 [ color="black"]
  node15276 -> node15277 [ color="black"]
  node15260 -> node15261 [ color="black"]
  node15277 -> node15278 [label=<<font color="black">true</font>> color="black"]
  node15277 -> node15279 [label=<<font color="black">false</font>> color="black"]
  node15274 -> node15275 [label=<<font color="black">true</font>> color="black"]
  node15274 -> node15276 [label=<<font color="black">false</font>> color="black"]
  node15272 -> node15273 [ color="black"]
  node15275 -> node15277 [ color="black"]
  node15261 -> node15262 [ color="black"]
  node15259 -> node15260 [ color="black"]
  node15271 -> node15272 [ color="black"]
  node15270 -> node15271 [ color="black"]
  node15264 -> node15265 [ color="black"]
}
