{
  let length = typedArray.ArrayLength
  app __x0__ = (ToIndex requestIndex)
  if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else {}
  let accessIndex = __x0__
  assert (! (< accessIndex 0i))
  if (! (< accessIndex length)) throw INTRINSIC_RangeError else {}
  let arrayTypeName = typedArray.TypedArrayName
  ??? "Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} ."
  let offset = typedArray.ByteOffset
  app __x1__ = (WrapCompletion (+ (* accessIndex elementSize) offset))
  return __x1__
}