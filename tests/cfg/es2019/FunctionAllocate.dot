digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let needsConstruct = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">(= needsConstruct true)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let needsConstruct = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:??? &quot;Let id:{F} be a newly created ECMAScript function object with the internal slots listed in link:{unhandled: table-27} . All of those internal slots are initialized to value:{undefined} .&quot;</td></tr>
      <tr><td align="left">7:F.Call = ECMAScriptFunctionObjectDOTCall</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">0:app __x0__ = (Type functionPrototype)</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:F.Strict = strict</td></tr>
      <tr><td align="left">12:F.FunctionKind = functionKind</td></tr>
      <tr><td align="left">13:F.Prototype = functionPrototype</td></tr>
      <tr><td align="left">14:F.Extensible = true</td></tr>
      <tr><td align="left">15:F.Realm = REALM</td></tr>
      <tr><td align="left">16:return F</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node7 [shape=diamond, label=<<font color="black">(= functionKind &quot;non-constructor&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ Object)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:F.Construct = ECMAScriptFunctionObjectDOTConstruct</td></tr>
      <tr><td align="left">10:F.ConstructorKind = &quot;base&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">functionKind = &quot;normal&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node4 [shape=diamond, label=<<font color="black">(= functionKind &quot;normal&quot;)</font>> color="black" fillcolor="white" style=filled]
  node3 -> node4 [ color="black"]
  node12 -> node1 [ color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node12 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node11 -> node12 [ color="black"]
  node7 -> node8 [label=<<font color="black">true</font>> color="black"]
  node7 -> node9 [label=<<font color="black">false</font>> color="black"]
  node0 -> node2 [ color="black"]
  node6 -> node7 [ color="black"]
  node9 -> node10 [ color="black"]
  node4 -> node5 [label=<<font color="black">true</font>> color="black"]
  node4 -> node6 [label=<<font color="black">false</font>> color="black"]
  node8 -> node9 [ color="black"]
  node5 -> node7 [ color="black"]
}
