digraph {
  node142 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node141 [shape=diamond, label=<<font color="black">(= d ??? &quot;0n&quot;)</font>> color="black" fillcolor="white" style=filled]
  node144 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return ??? &quot;0n&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node140 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:??? &quot;Let id:{r} be the BigInt defined by the mathematical relation id:{r} = id:{n} - ( id:{d} &times; id:{q} ) where id:{q} is a BigInt that is negative only if id:{n} / id:{d} is negative and positive only if id:{n} / id:{d} is positive , and whose magnitude is as large as possible without exceeding the magnitude of the true mathematical quotient of id:{n} and id:{d} .&quot;</td></tr>
      <tr><td align="left">3:return r</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node143 [shape=diamond, label=<<font color="black">(= n ??? &quot;0n&quot;)</font>> color="black" fillcolor="white" style=filled]
  node139 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node142 -> node143 [ color="black"]
  node144 -> node145 [ color="black"]
  node141 -> node142 [label=<<font color="black">true</font>> color="black"]
  node141 -> node143 [label=<<font color="black">false</font>> color="black"]
  node143 -> node144 [label=<<font color="black">true</font>> color="black"]
  node143 -> node145 [label=<<font color="black">false</font>> color="black"]
  node139 -> node141 [ color="black"]
  node145 -> node140 [ color="black"]
}
