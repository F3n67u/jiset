digraph {
  node18180 [shape=cds, label=<<font color="black">app __x1__ = (Call promiseCapability.Reject undefined (new [done.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18193 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18171 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18187 [shape=diamond, label=<<font color="black">(is-completion value)</font>> color="black" fillcolor="white" style=filled]
  node18207 [shape=cds, label=<<font color="black">9:app __x7__ = (PerformPromiseThen valueWrapper onFulfilled undefined promiseCapability)</font>> color="black" fillcolor="white" style=filled]
  node18197 [shape=diamond, label=<<font color="black">(is-completion valueWrapper)</font>> color="black" fillcolor="white" style=filled]
  node18177 [shape=diamond, label=<<font color="black">(is-completion done)</font>> color="black" fillcolor="white" style=filled]
  node18200 [shape=cds, label=<<font color="black">app __x5__ = (Call promiseCapability.Reject undefined (new [valueWrapper.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18183 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18188 [shape=diamond, label=<<font color="black">(= value.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18191 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x3__) (! (= __x3__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18196 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let valueWrapper = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18195 [shape=cds, label=<<font color="black">4:app __x4__ = (PromiseResolve INTRINSIC_Promise value)</font>> color="black" fillcolor="white" style=filled]
  node18182 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18199 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">valueWrapper = valueWrapper.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18189 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">value = value.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18173 [shape=cds, label=<<font color="black">app result = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18185 [shape=cds, label=<<font color="black">2:app __x2__ = (IteratorValue result)</font>> color="black" fillcolor="white" style=filled]
  node18192 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18202 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18198 [shape=diamond, label=<<font color="black">(= valueWrapper.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18179 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = done.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18194 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18174 [shape=cds, label=<<font color="black">app promiseCapability = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18178 [shape=diamond, label=<<font color="black">(= done.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18184 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:done</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18190 [shape=cds, label=<<font color="black">app __x3__ = (Call promiseCapability.Reject undefined (new [value.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18175 [shape=cds, label=<<font color="black">0:app __x0__ = (IteratorComplete result)</font>> color="black" fillcolor="white" style=filled]
  node18204 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:valueWrapper</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-async-from-sync-iterator-value-unwrap-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18172 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18205 [shape=cds, label=<<font color="black">7:app __x6__ = (CreateBuiltinFunction steps (new [&quot;Done&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node18208 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:[! __x7__]</td></tr>
      <tr><td align="left">10:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let done = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18201 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x5__) (! (= __x5__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18206 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let onFulfilled = [! __x6__]</td></tr>
      <tr><td align="left">8:onFulfilled.Done = done</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18203 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18186 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let value = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18181 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x1__) (! (= __x1__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18206 -> node18207 [ color="black"]
  node18190 -> node18191 [ color="black"]
  node18178 -> node18179 [label=<<font color="black">true</font>> color="black"]
  node18178 -> node18180 [label=<<font color="black">false</font>> color="black"]
  node18176 -> node18177 [ color="black"]
  node18194 -> node18195 [ color="black"]
  node18202 -> node18203 [ color="black"]
  node18174 -> node18175 [ color="black"]
  node18185 -> node18186 [ color="black"]
  node18181 -> node18182 [label=<<font color="black">true</font>> color="black"]
  node18181 -> node18183 [label=<<font color="black">false</font>> color="black"]
  node18182 -> node18183 [ color="black"]
  node18199 -> node18204 [ color="black"]
  node18192 -> node18193 [ color="black"]
  node18191 -> node18192 [label=<<font color="black">true</font>> color="black"]
  node18191 -> node18193 [label=<<font color="black">false</font>> color="black"]
  node18180 -> node18181 [ color="black"]
  node18189 -> node18194 [ color="black"]
  node18175 -> node18176 [ color="black"]
  node18198 -> node18199 [label=<<font color="black">true</font>> color="black"]
  node18198 -> node18200 [label=<<font color="black">false</font>> color="black"]
  node18207 -> node18208 [ color="black"]
  node18203 -> node18204 [ color="black"]
  node18173 -> node18174 [ color="black"]
  node18177 -> node18178 [label=<<font color="black">true</font>> color="black"]
  node18177 -> node18184 [label=<<font color="black">false</font>> color="black"]
  node18193 -> node18194 [ color="black"]
  node18179 -> node18184 [ color="black"]
  node18204 -> node18205 [ color="black"]
  node18200 -> node18201 [ color="black"]
  node18186 -> node18187 [ color="black"]
  node18184 -> node18185 [ color="black"]
  node18183 -> node18184 [ color="black"]
  node18196 -> node18197 [ color="black"]
  node18187 -> node18188 [label=<<font color="black">true</font>> color="black"]
  node18187 -> node18194 [label=<<font color="black">false</font>> color="black"]
  node18197 -> node18198 [label=<<font color="black">true</font>> color="black"]
  node18197 -> node18204 [label=<<font color="black">false</font>> color="black"]
  node18195 -> node18196 [ color="black"]
  node18188 -> node18189 [label=<<font color="black">true</font>> color="black"]
  node18188 -> node18190 [label=<<font color="black">false</font>> color="black"]
  node18171 -> node18173 [ color="black"]
  node18205 -> node18206 [ color="black"]
  node18208 -> node18172 [ color="black"]
  node18201 -> node18202 [label=<<font color="black">true</font>> color="black"]
  node18201 -> node18203 [label=<<font color="black">false</font>> color="black"]
}
