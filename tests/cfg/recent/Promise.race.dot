digraph {
  node19254 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19259 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node19250 [shape=cds, label=<<font color="black">app __x4__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node19238 [shape=diamond, label=<<font color="black">(= promiseResolve.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node19231 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node19235 [shape=cds, label=<<font color="black">2:app __x1__ = (GetPromiseResolve C)</font>> color="black" fillcolor="white" style=filled]
  node19241 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x2__) (! (= __x2__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node19245 [shape=cds, label=<<font color="black">4:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node19257 [shape=cds, label=<<font color="black">7:app __x6__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node19252 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19261 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19240 [shape=cds, label=<<font color="black">app __x2__ = (Call promiseCapability.Reject undefined (new [promiseResolve.Value]))</font>> color="black" fillcolor="white" style=filled]
  node19266 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x8__) (! (= __x8__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node19237 [shape=diamond, label=<<font color="black">(is-completion promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node19230 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19236 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseResolve = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19242 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19267 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19246 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let iteratorRecord = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19263 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node19233 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node19255 [shape=cds, label=<<font color="black">6:app __x5__ = (PerformPromiseRace iteratorRecord C promiseCapability promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node19258 [shape=diamond, label=<<font color="black">__x6__</font>> color="black" fillcolor="white" style=filled]
  node19251 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x4__) (! (= __x4__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node19262 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node19270 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19249 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19264 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19269 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19234 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19244 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:promiseResolve</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19239 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">promiseResolve = promiseResolve.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19265 [shape=cds, label=<<font color="black">app __x8__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node19248 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node19229 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19243 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19260 [shape=cds, label=<<font color="black">app __x7__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node19253 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19232 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19247 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node19234 -> node19235 [ color="black"]
  node19251 -> node19252 [label=<<font color="black">true</font>> color="black"]
  node19251 -> node19253 [label=<<font color="black">false</font>> color="black"]
  node19232 -> node19233 [ color="black"]
  node19229 -> node19231 [ color="black"]
  node19235 -> node19236 [ color="black"]
  node19257 -> node19258 [ color="black"]
  node19238 -> node19239 [label=<<font color="black">true</font>> color="black"]
  node19238 -> node19240 [label=<<font color="black">false</font>> color="black"]
  node19243 -> node19244 [ color="black"]
  node19262 -> node19263 [label=<<font color="black">true</font>> color="black"]
  node19262 -> node19269 [label=<<font color="black">false</font>> color="black"]
  node19247 -> node19248 [label=<<font color="black">true</font>> color="black"]
  node19247 -> node19254 [label=<<font color="black">false</font>> color="black"]
  node19255 -> node19256 [ color="black"]
  node19270 -> node19230 [ color="black"]
  node19259 -> node19260 [label=<<font color="black">true</font>> color="black"]
  node19259 -> node19262 [label=<<font color="black">false</font>> color="black"]
  node19237 -> node19238 [label=<<font color="black">true</font>> color="black"]
  node19237 -> node19244 [label=<<font color="black">false</font>> color="black"]
  node19231 -> node19232 [ color="black"]
  node19252 -> node19253 [ color="black"]
  node19240 -> node19241 [ color="black"]
  node19245 -> node19246 [ color="black"]
  node19268 -> node19269 [ color="black"]
  node19253 -> node19254 [ color="black"]
  node19246 -> node19247 [ color="black"]
  node19249 -> node19254 [ color="black"]
  node19265 -> node19266 [ color="black"]
  node19248 -> node19249 [label=<<font color="black">true</font>> color="black"]
  node19248 -> node19250 [label=<<font color="black">false</font>> color="black"]
  node19242 -> node19243 [ color="black"]
  node19261 -> node19262 [ color="black"]
  node19267 -> node19268 [ color="black"]
  node19254 -> node19255 [ color="black"]
  node19269 -> node19270 [ color="black"]
  node19263 -> node19264 [label=<<font color="black">true</font>> color="black"]
  node19263 -> node19265 [label=<<font color="black">false</font>> color="black"]
  node19239 -> node19244 [ color="black"]
  node19236 -> node19237 [ color="black"]
  node19250 -> node19251 [ color="black"]
  node19241 -> node19242 [label=<<font color="black">true</font>> color="black"]
  node19241 -> node19243 [label=<<font color="black">false</font>> color="black"]
  node19256 -> node19257 [ color="black"]
  node19264 -> node19269 [ color="black"]
  node19244 -> node19245 [ color="black"]
  node19258 -> node19259 [label=<<font color="black">true</font>> color="black"]
  node19258 -> node19270 [label=<<font color="black">false</font>> color="black"]
  node19233 -> node19234 [ color="black"]
  node19260 -> node19261 [ color="black"]
  node19266 -> node19267 [label=<<font color="black">true</font>> color="black"]
  node19266 -> node19268 [label=<<font color="black">false</font>> color="black"]
}
