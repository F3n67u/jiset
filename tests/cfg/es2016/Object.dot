digraph {
  node10282 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node10286 [shape=diamond, label=<<font color="black">(|| (|| (= value null) (= value undefined)) (= value absent))</font>> color="black" fillcolor="white" style=filled]
  node10281 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10285 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:return [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10289 [shape=cds, label=<<font color="black">3:app __x2__ = (ToObject value)</font>> color="black" fillcolor="white" style=filled]
  node10284 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_ObjectPrototype)</font>> color="black" fillcolor="white" style=filled]
  node10290 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10288 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10283 [shape=diamond, label=<<font color="black">(! (|| (= NewTarget undefined) (= NewTarget GLOBAL_context.Function)))</font>> color="black" fillcolor="white" style=filled]
  node10280 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10287 [shape=cds, label=<<font color="black">app __x1__ = (ObjectCreate INTRINSIC_ObjectPrototype)</font>> color="black" fillcolor="white" style=filled]
  node10285 -> node10286 [ color="black"]
  node10280 -> node10282 [ color="black"]
  node10284 -> node10285 [ color="black"]
  node10290 -> node10281 [ color="black"]
  node10282 -> node10283 [ color="black"]
  node10287 -> node10288 [ color="black"]
  node10288 -> node10289 [ color="black"]
  node10283 -> node10284 [label=<<font color="black">true</font>> color="black"]
  node10283 -> node10286 [label=<<font color="black">false</font>> color="black"]
  node10289 -> node10290 [ color="black"]
  node10286 -> node10287 [label=<<font color="black">true</font>> color="black"]
  node10286 -> node10289 [label=<<font color="black">false</font>> color="black"]
}
