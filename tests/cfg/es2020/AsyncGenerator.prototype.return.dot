digraph {
  node18297 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let generator = this</td></tr>
      <tr><td align="left">1:let completion = (new Completion(&quot;Type&quot; -&gt; CONST_return, &quot;Value&quot; -&gt; value, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18296 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18299 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18294 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18295 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18298 [shape=cds, label=<<font color="black">2:app __x0__ = (AsyncGeneratorEnqueue generator completion)</font>> color="black" fillcolor="white" style=filled]
  node18294 -> node18296 [ color="black"]
  node18299 -> node18295 [ color="black"]
  node18298 -> node18299 [ color="black"]
  node18297 -> node18298 [ color="black"]
  node18296 -> node18297 [ color="black"]
}
