digraph {
  node8887 [shape=cds, label=<<font color="black">0:access __x0__ = (GLOBAL_context &quot;LexicalEnvironment&quot;)</font>> color="black" fillcolor="white" style=filled]
  node8892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:__x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8888 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let scope = __x0__</td></tr>
      <tr><td align="left">1:let sourceText = (get-syntax FunctionExpression)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8891 [shape=cds, label=<<font color="black">3:app __x2__ = (SetFunctionName closure name)</font>> color="black" fillcolor="white" style=filled]
  node8894 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:__x3__</td></tr>
      <tr><td align="left">5:return closure</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8885 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8890 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let closure = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8893 [shape=cds, label=<<font color="black">4:app __x3__ = (MakeConstructor closure)</font>> color="black" fillcolor="white" style=filled]
  node8886 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node8889 [shape=cds, label=<<font color="black">2:app __x1__ = (OrdinaryFunctionCreate INTRINSIC_Function_prototype sourceText FormalParameters FunctionBody CONST_nonDASHlexicalDASHthis scope)</font>> color="black" fillcolor="white" style=filled]
  node8887 -> node8888 [ color="black"]
  node8892 -> node8893 [ color="black"]
  node8889 -> node8890 [ color="black"]
  node8893 -> node8894 [ color="black"]
  node8894 -> node8886 [ color="black"]
  node8891 -> node8892 [ color="black"]
  node8888 -> node8889 [ color="black"]
  node8890 -> node8891 [ color="black"]
  node8885 -> node8887 [ color="black"]
}
