digraph {
  node13722 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13715 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13718 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13726 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let pos = [? __x3__]</td></tr>
      <tr><td align="left">5:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13721 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13716 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13719 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13725 [shape=cds, label=<<font color="black">3:app __x3__ = (ToInteger position)</font>> color="black" fillcolor="white" style=filled]
  node13717 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13727 [shape=cds, label=<<font color="black">6:app __x4__ = (max pos 0i)</font>> color="black" fillcolor="white" style=filled]
  node13729 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let start = __x5__</td></tr>
      <tr><td align="left">7:let searchLen = searchStr.length</td></tr>
      <tr><td align="left">8:??? &quot;Return the smallest possible integer id:{k} not smaller than id:{start} such that id:{k} + id:{searchLen} is not greater than id:{len} , and for all nonnegative integers id:{j} less than id:{searchLen} , the code unit at index id:{k} + id:{j} within id:{S} is the same as the code unit at index id:{j} within id:{searchStr} ; but if there is no such integer id:{k} , return the value - 1 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13724 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let searchStr = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13728 [shape=cds, label=<<font color="black">6:app __x5__ = (min __x4__ len)</font>> color="black" fillcolor="white" style=filled]
  node13720 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13723 [shape=cds, label=<<font color="black">2:app __x2__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node13726 -> node13727 [ color="black"]
  node13729 -> node13716 [ color="black"]
  node13728 -> node13729 [ color="black"]
  node13721 -> node13722 [ color="black"]
  node13723 -> node13724 [ color="black"]
  node13719 -> node13720 [ color="black"]
  node13724 -> node13725 [ color="black"]
  node13715 -> node13717 [ color="black"]
  node13722 -> node13723 [ color="black"]
  node13727 -> node13728 [ color="black"]
  node13718 -> node13719 [ color="black"]
  node13725 -> node13726 [ color="black"]
  node13717 -> node13718 [ color="black"]
  node13720 -> node13721 [ color="black"]
}
