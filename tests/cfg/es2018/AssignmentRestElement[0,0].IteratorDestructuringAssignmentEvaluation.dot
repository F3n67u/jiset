digraph {
  node5329 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node5348 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? nextValue]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5333 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5334 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5349 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let nestedAssignmentPattern = (parse-syntax DestructuringAssignmentTarget &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5345 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let status = __x7__</td></tr>
      <tr><td align="left">15:assert (= status true)</td></tr>
      <tr><td align="left">16:n = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5337 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node5327 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let A = [! __x1__]</td></tr>
      <tr><td align="left">4:let n = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5350 [shape=cds, label=<<font color="black">20:access __x9__ = (nestedAssignmentPattern &quot;DestructuringAssignmentEvaluation&quot; A)</font>> color="black" fillcolor="white" style=filled]
  node5331 [shape=cds, label=<<font color="black">7:app __x3__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node5335 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node5347 [shape=cds, label=<<font color="black">18:app __x8__ = (PutValue lref A)</font>> color="black" fillcolor="white" style=filled]
  node5332 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node5351 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:return __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5336 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5344 [shape=cds, label=<<font color="black">14:app __x7__ = (CreateDataProperty A [! __x6__] nextValue)</font>> color="black" fillcolor="white" style=filled]
  node5338 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5323 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5328 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node5343 [shape=cds, label=<<font color="black">14:app __x6__ = (ToString n)</font>> color="black" fillcolor="white" style=filled]
  node5321 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5341 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5325 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5346 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of DestructuringAssignmentTarget ObjectLiteral) (is-instance-of DestructuringAssignmentTarget ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5340 [shape=diamond, label=<<font color="black">__x5__</font>> color="black" fillcolor="white" style=filled]
  node5326 [shape=cds, label=<<font color="black">3:app __x1__ = (ArrayCreate 0i)</font>> color="black" fillcolor="white" style=filled]
  node5339 [shape=cds, label=<<font color="black">12:app __x5__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node5322 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5324 [shape=cds, label=<<font color="black">1:access __x0__ = (DestructuringAssignmentTarget &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5324 -> node5325 [ color="black"]
  node5326 -> node5327 [ color="black"]
  node5332 -> node5333 [label=<<font color="black">true</font>> color="black"]
  node5332 -> node5334 [label=<<font color="black">false</font>> color="black"]
  node5321 -> node5323 [ color="black"]
  node5325 -> node5326 [ color="black"]
  node5337 -> node5338 [ color="black"]
  node5341 -> node5342 [ color="black"]
  node5329 -> node5330 [ color="black"]
  node5345 -> node5328 [ color="black"]
  node5336 -> node5328 [ color="black"]
  node5323 -> node5324 [label=<<font color="black">true</font>> color="black"]
  node5323 -> node5326 [label=<<font color="black">false</font>> color="black"]
  node5350 -> node5351 [ color="black"]
  node5327 -> node5328 [ color="black"]
  node5340 -> node5341 [label=<<font color="black">true</font>> color="black"]
  node5340 -> node5342 [label=<<font color="black">false</font>> color="black"]
  node5328 -> node5329 [label=<<font color="black">true</font>> color="black"]
  node5328 -> node5346 [label=<<font color="black">false</font>> color="black"]
  node5344 -> node5345 [ color="black"]
  node5339 -> node5340 [ color="black"]
  node5351 -> node5322 [ color="black"]
  node5330 -> node5331 [ color="black"]
  node5342 -> node5343 [ color="black"]
  node5346 -> node5347 [label=<<font color="black">true</font>> color="black"]
  node5346 -> node5349 [label=<<font color="black">false</font>> color="black"]
  node5349 -> node5350 [ color="black"]
  node5343 -> node5344 [ color="black"]
  node5334 -> node5335 [ color="black"]
  node5338 -> node5339 [ color="black"]
  node5347 -> node5348 [ color="black"]
  node5335 -> node5336 [label=<<font color="black">true</font>> color="black"]
  node5335 -> node5337 [label=<<font color="black">false</font>> color="black"]
  node5331 -> node5332 [ color="black"]
  node5333 -> node5334 [ color="black"]
  node5348 -> node5349 [ color="black"]
}
