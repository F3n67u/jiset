digraph {
  node17788 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17791 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17779 [shape=cds, label=<<font color="black">2:app __x1__ = (ToIndex requestIndex)</font>> color="black" fillcolor="white" style=filled]
  node17783 [shape=cds, label=<<font color="black">5:app __x3__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node17787 [shape=diamond, label=<<font color="black">(&lt; viewSize (+ getIndex elementSize))</font>> color="black" fillcolor="white" style=filled]
  node17780 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let getIndex = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17784 [shape=diamond, label=<<font color="black">(= __x3__ true)</font>> color="black" fillcolor="white" style=filled]
  node17776 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17781 [shape=cds, label=<<font color="black">3:app __x2__ = (ToBoolean isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17775 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17778 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">1:assert (! (= view.ViewedArrayBuffer absent))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17789 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let bufferIndex = (+ getIndex viewOffset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17786 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let viewOffset = view.ByteOffset</td></tr>
      <tr><td align="left">7:let viewSize = view.ByteLength</td></tr>
      <tr><td align="left">8:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17777 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot view &quot;DataView&quot;)</font>> color="black" fillcolor="white" style=filled]
  node17790 [shape=cds, label=<<font color="black">11:app __x4__ = (GetValueFromBuffer buffer bufferIndex type false CONST_Unordered isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17785 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17782 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:isLittleEndian = [! __x2__]</td></tr>
      <tr><td align="left">4:let buffer = view.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17784 -> node17785 [label=<<font color="black">true</font>> color="black"]
  node17784 -> node17786 [label=<<font color="black">false</font>> color="black"]
  node17788 -> node17789 [ color="black"]
  node17775 -> node17777 [ color="black"]
  node17790 -> node17791 [ color="black"]
  node17777 -> node17778 [ color="black"]
  node17778 -> node17779 [ color="black"]
  node17780 -> node17781 [ color="black"]
  node17786 -> node17787 [ color="black"]
  node17783 -> node17784 [ color="black"]
  node17789 -> node17790 [ color="black"]
  node17779 -> node17780 [ color="black"]
  node17782 -> node17783 [ color="black"]
  node17781 -> node17782 [ color="black"]
  node17787 -> node17788 [label=<<font color="black">true</font>> color="black"]
  node17787 -> node17789 [label=<<font color="black">false</font>> color="black"]
  node17791 -> node17776 [ color="black"]
  node17785 -> node17786 [ color="black"]
}
