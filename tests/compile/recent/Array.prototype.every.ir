{
  app callbackfn = (GetArgument argumentsList 0i)
  app thisArg = (GetArgument argumentsList 1i)
  [0] app __x0__ = (ToObject this)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [19] {}
  [0] let O = __x0__
  [1] app __x1__ = (LengthOfArrayLike O)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [19] {}
  [1] let len = __x1__
  [2] app __x2__ = (IsCallable callbackfn)
  [2] if (= __x2__ false) {
    app __x3__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x3__
  } else [19] {}
  [3] let k = 0i
  [4] while (< k len) {
    [5] ??? "Let id:{Pk} be ! ToString ( 𝔽 ( id:{k} ) ) ."
    [6] app __x4__ = (HasProperty O Pk)
    [6] if (is-completion __x4__) if (= __x4__.Type CONST_normal) __x4__ = __x4__.Value else return __x4__ else [19] {}
    [6] let kPresent = __x4__
    [7] if (= kPresent true) {
      [8] app __x5__ = (Get O Pk)
      [8] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [19] {}
      [8] let kValue = __x5__
      [9] ??? "Let id:{testResult} be ! ToBoolean ( ? Call ( id:{callbackfn} , id:{thisArg} , « id:{kValue} , 𝔽 ( id:{k} ) , id:{O} » ) ) ."
      [10] if (= testResult false) {
        app __x6__ = (WrapCompletion false)
        return __x6__
      } else [19] {}
    } else [19] {}
    [11] k = (+ k 1i)
  }
  [12] app __x7__ = (WrapCompletion true)
  [12] return __x7__
}