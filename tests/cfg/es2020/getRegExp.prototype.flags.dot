digraph {
  node15170 [shape=diamond, label=<<font color="black">(= unicode true)</font>> color="black" fillcolor="white" style=filled]
  node15150 [shape=diamond, label=<<font color="black">(= global true)</font>> color="black" fillcolor="white" style=filled]
  node15165 [shape=diamond, label=<<font color="black">(= dotAll true)</font>> color="black" fillcolor="white" style=filled]
  node15169 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let unicode = [! __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;g&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15147 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;global&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15160 [shape=diamond, label=<<font color="black">(= multiline true)</font>> color="black" fillcolor="white" style=filled]
  node15155 [shape=diamond, label=<<font color="black">(= ignoreCase true)</font>> color="black" fillcolor="white" style=filled]
  node15152 [shape=cds, label=<<font color="black">5:app __x3__ = (Get R &quot;ignoreCase&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15163 [shape=cds, label=<<font color="black">9:app __x8__ = (ToBoolean [? __x7__])</font>> color="black" fillcolor="white" style=filled]
  node15148 [shape=cds, label=<<font color="black">3:app __x2__ = (ToBoolean [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node15144 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node15176 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;y&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15143 [shape=cds, label=<<font color="black">1:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node15153 [shape=cds, label=<<font color="black">5:app __x4__ = (ToBoolean [? __x3__])</font>> color="black" fillcolor="white" style=filled]
  node15158 [shape=cds, label=<<font color="black">7:app __x6__ = (ToBoolean [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node15175 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node15171 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;u&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15146 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let result = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15161 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;m&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15167 [shape=cds, label=<<font color="black">11:app __x9__ = (Get R &quot;unicode&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15174 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let sticky = [! __x12__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15142 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let R = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15156 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;i&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15157 [shape=cds, label=<<font color="black">7:app __x5__ = (Get R &quot;multiline&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15168 [shape=cds, label=<<font color="black">11:app __x10__ = (ToBoolean [? __x9__])</font>> color="black" fillcolor="white" style=filled]
  node15162 [shape=cds, label=<<font color="black">9:app __x7__ = (Get R &quot;dotAll&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15141 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15173 [shape=cds, label=<<font color="black">13:app __x12__ = (ToBoolean [? __x11__])</font>> color="black" fillcolor="white" style=filled]
  node15140 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15149 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let global = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15154 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let ignoreCase = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15159 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let multiline = [! __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15172 [shape=cds, label=<<font color="black">13:app __x11__ = (Get R &quot;sticky&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15177 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15164 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let dotAll = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15166 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let result = (+ result &quot;s&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15172 -> node15173 [ color="black"]
  node15162 -> node15163 [ color="black"]
  node15147 -> node15148 [ color="black"]
  node15153 -> node15154 [ color="black"]
  node15160 -> node15161 [label=<<font color="black">true</font>> color="black"]
  node15160 -> node15162 [label=<<font color="black">false</font>> color="black"]
  node15177 -> node15141 [ color="black"]
  node15151 -> node15152 [ color="black"]
  node15166 -> node15167 [ color="black"]
  node15156 -> node15157 [ color="black"]
  node15155 -> node15156 [label=<<font color="black">true</font>> color="black"]
  node15155 -> node15157 [label=<<font color="black">false</font>> color="black"]
  node15174 -> node15175 [ color="black"]
  node15168 -> node15169 [ color="black"]
  node15175 -> node15176 [label=<<font color="black">true</font>> color="black"]
  node15175 -> node15177 [label=<<font color="black">false</font>> color="black"]
  node15140 -> node15142 [ color="black"]
  node15157 -> node15158 [ color="black"]
  node15142 -> node15143 [ color="black"]
  node15158 -> node15159 [ color="black"]
  node15154 -> node15155 [ color="black"]
  node15146 -> node15147 [ color="black"]
  node15165 -> node15166 [label=<<font color="black">true</font>> color="black"]
  node15165 -> node15167 [label=<<font color="black">false</font>> color="black"]
  node15170 -> node15171 [label=<<font color="black">true</font>> color="black"]
  node15170 -> node15172 [label=<<font color="black">false</font>> color="black"]
  node15144 -> node15145 [label=<<font color="black">true</font>> color="black"]
  node15144 -> node15146 [label=<<font color="black">false</font>> color="black"]
  node15163 -> node15164 [ color="black"]
  node15148 -> node15149 [ color="black"]
  node15150 -> node15151 [label=<<font color="black">true</font>> color="black"]
  node15150 -> node15152 [label=<<font color="black">false</font>> color="black"]
  node15159 -> node15160 [ color="black"]
  node15169 -> node15170 [ color="black"]
  node15171 -> node15172 [ color="black"]
  node15145 -> node15146 [ color="black"]
  node15176 -> node15177 [ color="black"]
  node15143 -> node15144 [ color="black"]
  node15161 -> node15162 [ color="black"]
  node15167 -> node15168 [ color="black"]
  node15173 -> node15174 [ color="black"]
  node15164 -> node15165 [ color="black"]
  node15149 -> node15150 [ color="black"]
  node15152 -> node15153 [ color="black"]
}
