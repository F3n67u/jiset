digraph {
  node10944 [shape=diamond, label=<<font color="black">(= strictCaller true)</font>> color="black" fillcolor="white" style=filled]
  node10927 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return x</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10923 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10950 [shape=cds, label=<<font color="black">20:app __x6__ = (NewDeclarativeEnvironment ctx.LexicalEnvironment)</font>> color="black" fillcolor="white" style=filled]
  node10962 [shape=cds, label=<<font color="black">36:access __x9__ = (body &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10963 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:result = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10952 [shape=cds, label=<<font color="black">23:app __x7__ = (NewDeclarativeEnvironment evalRealm.GlobalEnv)</font>> color="black" fillcolor="white" style=filled]
  node10964 [shape=diamond, label=<<font color="black">(&amp;&amp; (= result.Type CONST_normal) (= result.Value CONST_empty))</font>> color="black" fillcolor="white" style=filled]
  node10928 [shape=cds, label=<<font color="black">2:app __x1__ = (GetThisEnvironment)</font>> color="black" fillcolor="white" style=filled]
  node10969 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">(pop GLOBAL_executionStack (- GLOBAL_executionStack.length 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10966 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:result = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10959 [shape=cds, label=<<font color="black">34:app __x8__ = (EvalDeclarationInstantiation body varEnv lexEnv strictEval)</font>> color="black" fillcolor="white" style=filled]
  node10940 [shape=diamond, label=<<font color="black">(= __x3__ false)</font>> color="black" fillcolor="white" style=filled]
  node10955 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">varEnv = lexEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10935 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let inDerivedConstructor = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10967 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">39:GLOBAL_context = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10945 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strictEval = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10965 [shape=cds, label=<<font color="black">38:app __x10__ = (NormalCompletion undefined)</font>> color="black" fillcolor="white" style=filled]
  node10932 [shape=cds, label=<<font color="black">6:app __x2__ = (thisEnvRec.HasSuperBinding thisEnvRec)</font>> color="black" fillcolor="white" style=filled]
  node10933 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let inMethod = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10943 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let body = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10954 [shape=diamond, label=<<font color="black">(= strictEval true)</font>> color="black" fillcolor="white" style=filled]
  node10947 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let strictEval = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10939 [shape=cds, label=<<font color="black">13:access __x3__ = (__x3__ &quot;Contains&quot; &quot;ScriptBody&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10958 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let evalCxt = (new ExecutionContext(&quot;SubMap&quot; -&gt; (new SubMap())))</td></tr>
      <tr><td align="left">28:evalCxt.Function = null</td></tr>
      <tr><td align="left">29:evalCxt.Realm = evalRealm</td></tr>
      <tr><td align="left">30:evalCxt.ScriptOrModule = ctx.ScriptOrModule</td></tr>
      <tr><td align="left">31:evalCxt.VariableEnvironment = varEnv</td></tr>
      <tr><td align="left">32:evalCxt.LexicalEnvironment = lexEnv</td></tr>
      <tr><td align="left">33:append evalCxt -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">33:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10926 [shape=diamond, label=<<font color="black">(! (= __x0__ String))</font>> color="black" fillcolor="white" style=filled]
  node10946 [shape=cds, label=<<font color="black">access __x5__ = (script &quot;IsStrict&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10936 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let inDerivedConstructor = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10968 [shape=diamond, label=<<font color="black">(= GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)] evalCxt)</font>> color="black" fillcolor="white" style=filled]
  node10961 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node10929 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let thisEnvRec = [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10951 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let lexEnv = __x6__</td></tr>
      <tr><td align="left">21:let varEnv = ctx.VariableEnvironment</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10948 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let ctx = GLOBAL_context</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10938 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:??? &quot;Let id:{script} be the ECMAScript code that is the result of parsing id:{x} , interpreted as UTF - 16 encoded Unicode text as described in link:{unhandled: sec-ecmascript-language-types-string-type} , for the goal symbol nt:{Script} . If id:{inFunction} is value:{false} , additional early error rules from link:{unhandled: sec-performeval-rules-outside-functions} are applied . If id:{inMethod} is value:{false} , additional early error rules from link:{unhandled: sec-performeval-rules-outside-methods} are applied . If id:{inDerivedConstructor} is value:{false} , additional early error rules from link:{unhandled: sec-performeval-rules-outside-constructors} are applied . If the parse fails , throw a value:{SyntaxError} exception . If any early errors are detected , throw a value:{SyntaxError} or a value:{ReferenceError} exception , depending on the type of the error ( but see also clause link:{unhandled: sec-error-handling-and-language-extensions} ) . Parsing and early error detection may be interweaved in an implementation - dependent manner .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10953 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let lexEnv = __x7__</td></tr>
      <tr><td align="left">24:let varEnv = evalRealm.GlobalEnv</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10957 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">GLOBAL_context = null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10942 [shape=cds, label=<<font color="black">14:access __x4__ = (script &quot;ScriptBody&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10970 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">40:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">41:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10925 [shape=cds, label=<<font color="black">1:app __x0__ = (Type x)</font>> color="black" fillcolor="white" style=filled]
  node10930 [shape=diamond, label=<<font color="black">(= (typeof thisEnvRec) &quot;FunctionEnvironmentRecord&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10937 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let inFunction = false</td></tr>
      <tr><td align="left">10:let inMethod = false</td></tr>
      <tr><td align="left">11:let inDerivedConstructor = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10960 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:let result = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10924 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10941 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10956 [shape=diamond, label=<<font color="black">(= ctx null)</font>> color="black" fillcolor="white" style=filled]
  node10931 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let F = thisEnvRec.FunctionObject</td></tr>
      <tr><td align="left">5:let inFunction = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10934 [shape=diamond, label=<<font color="black">(= F.ConstructorKind &quot;derived&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10949 [shape=diamond, label=<<font color="black">(= direct true)</font>> color="black" fillcolor="white" style=filled]
  node10935 -> node10938 [ color="black"]
  node10951 -> node10954 [ color="black"]
  node10969 -> node10970 [ color="black"]
  node10929 -> node10930 [ color="black"]
  node10945 -> node10948 [ color="black"]
  node10937 -> node10938 [ color="black"]
  node10966 -> node10967 [ color="black"]
  node10946 -> node10947 [ color="black"]
  node10934 -> node10935 [label=<<font color="black">true</font>> color="black"]
  node10934 -> node10936 [label=<<font color="black">false</font>> color="black"]
  node10931 -> node10932 [ color="black"]
  node10950 -> node10951 [ color="black"]
  node10923 -> node10925 [ color="black"]
  node10932 -> node10933 [ color="black"]
  node10954 -> node10955 [label=<<font color="black">true</font>> color="black"]
  node10954 -> node10956 [label=<<font color="black">false</font>> color="black"]
  node10958 -> node10959 [ color="black"]
  node10962 -> node10963 [ color="black"]
  node10970 -> node10924 [ color="black"]
  node10928 -> node10929 [ color="black"]
  node10953 -> node10954 [ color="black"]
  node10925 -> node10926 [ color="black"]
  node10965 -> node10966 [ color="black"]
  node10942 -> node10943 [ color="black"]
  node10949 -> node10950 [label=<<font color="black">true</font>> color="black"]
  node10949 -> node10952 [label=<<font color="black">false</font>> color="black"]
  node10938 -> node10939 [ color="black"]
  node10933 -> node10934 [ color="black"]
  node10943 -> node10944 [ color="black"]
  node10941 -> node10942 [ color="black"]
  node10930 -> node10931 [label=<<font color="black">true</font>> color="black"]
  node10930 -> node10937 [label=<<font color="black">false</font>> color="black"]
  node10961 -> node10962 [label=<<font color="black">true</font>> color="black"]
  node10961 -> node10964 [label=<<font color="black">false</font>> color="black"]
  node10927 -> node10928 [ color="black"]
  node10940 -> node10941 [label=<<font color="black">true</font>> color="black"]
  node10940 -> node10942 [label=<<font color="black">false</font>> color="black"]
  node10955 -> node10956 [ color="black"]
  node10967 -> node10968 [ color="black"]
  node10948 -> node10949 [ color="black"]
  node10939 -> node10940 [ color="black"]
  node10956 -> node10957 [label=<<font color="black">true</font>> color="black"]
  node10956 -> node10958 [label=<<font color="black">false</font>> color="black"]
  node10959 -> node10960 [ color="black"]
  node10964 -> node10965 [label=<<font color="black">true</font>> color="black"]
  node10964 -> node10967 [label=<<font color="black">false</font>> color="black"]
  node10936 -> node10938 [ color="black"]
  node10968 -> node10969 [label=<<font color="black">true</font>> color="black"]
  node10968 -> node10970 [label=<<font color="black">false</font>> color="black"]
  node10952 -> node10953 [ color="black"]
  node10960 -> node10961 [ color="black"]
  node10926 -> node10927 [label=<<font color="black">true</font>> color="black"]
  node10926 -> node10928 [label=<<font color="black">false</font>> color="black"]
  node10944 -> node10945 [label=<<font color="black">true</font>> color="black"]
  node10944 -> node10946 [label=<<font color="black">false</font>> color="black"]
  node10947 -> node10948 [ color="black"]
  node10957 -> node10958 [ color="black"]
  node10963 -> node10964 [ color="black"]
}
