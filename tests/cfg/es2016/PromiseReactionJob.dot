digraph {
  node15579 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = reaction.Capabilities</td></tr>
      <tr><td align="left">2:let handler = reaction.Handler</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15590 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let status = __x3__</td></tr>
      <tr><td align="left">8:??? &quot;NextJob Completion ( id:{status} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15586 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15591 [shape=cds, label=<<font color="black">9:app __x4__ = (Call promiseCapability.Resolve undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15578 [shape=cds, label=<<font color="black">app argument = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node15592 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let status = __x4__</td></tr>
      <tr><td align="left">10:??? &quot;NextJob Completion ( id:{status} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15577 [shape=cds, label=<<font color="black">app reaction = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15575 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15580 [shape=diamond, label=<<font color="black">(= handler &quot;Identity&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15585 [shape=cds, label=<<font color="black">app __x1__ = (Call handler undefined (new [argument]))</font>> color="black" fillcolor="white" style=filled]
  node15584 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = (new Completion(&quot;Type&quot; -&gt; CONST_throw, &quot;Value&quot; -&gt; argument, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15582 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let handlerResult = __x0__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15587 [shape=cds, label=<<font color="black">6:app __x2__ = (IsAbruptCompletion handlerResult)</font>> color="black" fillcolor="white" style=filled]
  node15588 [shape=diamond, label=<<font color="black">__x2__</font>> color="black" fillcolor="white" style=filled]
  node15583 [shape=diamond, label=<<font color="black">(= handler &quot;Thrower&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15581 [shape=cds, label=<<font color="black">app __x0__ = (NormalCompletion argument)</font>> color="black" fillcolor="white" style=filled]
  node15576 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15589 [shape=cds, label=<<font color="black">7:app __x3__ = (Call promiseCapability.Reject undefined (new [handlerResult.Value]))</font>> color="black" fillcolor="white" style=filled]
  node15588 -> node15589 [label=<<font color="black">true</font>> color="black"]
  node15588 -> node15591 [label=<<font color="black">false</font>> color="black"]
  node15582 -> node15587 [ color="black"]
  node15581 -> node15582 [ color="black"]
  node15580 -> node15581 [label=<<font color="black">true</font>> color="black"]
  node15580 -> node15583 [label=<<font color="black">false</font>> color="black"]
  node15592 -> node15576 [ color="black"]
  node15585 -> node15586 [ color="black"]
  node15589 -> node15590 [ color="black"]
  node15587 -> node15588 [ color="black"]
  node15586 -> node15587 [ color="black"]
  node15584 -> node15587 [ color="black"]
  node15591 -> node15592 [ color="black"]
  node15575 -> node15577 [ color="black"]
  node15579 -> node15580 [ color="black"]
  node15578 -> node15579 [ color="black"]
  node15590 -> node15591 [ color="black"]
  node15577 -> node15578 [ color="black"]
  node15583 -> node15584 [label=<<font color="black">true</font>> color="black"]
  node15583 -> node15585 [label=<<font color="black">false</font>> color="black"]
}
