{
  app callbackfn = (GetArgument argumentsList 0i)
  app thisArg = (GetArgument argumentsList 1i)
  [0] let M = this
  [1] app __x0__ = (Type M)
  [1] if (! (= __x0__ Object)) {
    app __x1__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x1__
  } else [1] {}
  [2] if (= M.MapData absent) {
    app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x2__
  } else [1] {}
  [3] app __x3__ = (IsCallable callbackfn)
  [3] if (= __x3__ false) {
    app __x4__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeError.prototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))
    return __x4__
  } else [1] {}
  [4] if (! (= thisArg absent)) let T = thisArg else let T = undefined
  [5] let entries = M.MapData
  [6] ??? "For each Record { [ [ Key ] ] , [ [ Value ] ] } id:{e} that is an element of id:{entries} , in original key insertion order , do step-list:{...}"
  [9] app __x5__ = (WrapCompletion undefined)
  [9] return __x5__
}