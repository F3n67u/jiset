{
  [0] if (= lex null) {
    [1] app __x0__ = (WrapCompletion (new Reference("BaseValue" -> undefined, "ReferencedName" -> name, "StrictReference" -> strict)))
    [1] return __x0__
  } else [3] {}
  [2] let envRec = lex.EnvironmentRecord
  [3] app __x1__ = (envRec.HasBinding envRec name)
  [3] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [3] {}
  [3] let exists = __x1__
  [6] if (= exists true) {
    [5] app __x2__ = (WrapCompletion (new Reference("BaseValue" -> envRec, "ReferencedName" -> name, "StrictReference" -> strict)))
    [5] return __x2__
  } else {
    [7] let outer = lex.Outer
    [8] app __x3__ = (GetIdentifierReference outer name strict)
    [8] if (is-completion __x3__) if (= __x3__.Type CONST_normal) __x3__ = __x3__.Value else return __x3__ else [3] {}
    [8] app __x4__ = (WrapCompletion __x3__)
    [8] return __x4__
  }
}