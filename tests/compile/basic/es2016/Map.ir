{
  if (= NewTarget undefined) throw INTRINSIC_TypeError else {}
  app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_MapPrototype (new ["MapData"]))
  let map = [? __x0__]
  map.MapData = (new [])
  if (= iterable absent) let iterable = undefined else {}
  if (|| (= iterable undefined) (= iterable null)) let iter = undefined else {
    app __x1__ = (Get map "set")
    let adder = [? __x1__]
    app __x2__ = (IsCallable adder)
    if (= __x2__ false) throw INTRINSIC_TypeError else {}
    app __x3__ = (GetIterator iterable)
    let iter = [? __x3__]
  }
  if (= iter undefined) return map else {}
  while true {
    app __x4__ = (IteratorStep iter)
    let next = [? __x4__]
    if (= next false) return map else {}
    app __x5__ = (IteratorValue next)
    let nextItem = [? __x5__]
    app __x6__ = (Type nextItem)
    if (! (= __x6__ Object)) {
      let error = (new Completion("Type" -> CONST_throw, "Value" -> ??? "TypeError", "Target" -> CONST_empty))
      app __x7__ = (IteratorClose iter error)
      return [? __x7__]
    } else {}
    app __x8__ = (Get nextItem "0")
    let k = __x8__
    app __x9__ = (IsAbruptCompletion k)
    if __x9__ {
      app __x10__ = (IteratorClose iter k)
      return [? __x10__]
    } else {}
    app __x11__ = (Get nextItem "1")
    let v = __x11__
    app __x12__ = (IsAbruptCompletion v)
    if __x12__ {
      app __x13__ = (IteratorClose iter v)
      return [? __x13__]
    } else {}
    app __x14__ = (Call adder map (new [k.Value, v.Value]))
    let status = __x14__
    app __x15__ = (IsAbruptCompletion status)
    if __x15__ {
      app __x16__ = (IteratorClose iter status)
      return [? __x16__]
    } else {}
  }
}