digraph {
  node13586 [shape=cds, label=<<font color="black">3:app __x1__ = (Get cooked &quot;raw&quot;)</font>> color="black" fillcolor="white" style=filled]
  node13596 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let nextKey = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13611 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:nextIndex = (+ nextIndex 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13608 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextSub = [? __x10__]</td></tr>
      <tr><td align="left">17:let __x11__ = nextSub</td></tr>
      <tr><td align="left">17:let __x12__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13580 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13600 [shape=diamond, label=<<font color="black">(&lt; __x8__ __x7__.length)</font>> color="black" fillcolor="white" style=filled]
  node13583 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;Let id:{substitutions} be a List consisting of all of the arguments passed to this function , starting with the second argument . If fewer than two arguments were passed , the List is empty .&quot;</td></tr>
      <tr><td align="left">1:let numberOfSubstitutions = substitutions.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13587 [shape=cds, label=<<font color="black">3:app __x2__ = (ToObject [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node13606 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13592 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13602 [shape=diamond, label=<<font color="black">(== (+ nextIndex 1i) literalSegments)</font>> color="black" fillcolor="white" style=filled]
  node13581 [shape=cds, label=<<font color="black">app template = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13610 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x13__ = __x11__[__x12__]</td></tr>
      <tr><td align="left">append __x13__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x12__ = (+ __x12__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13590 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let literalSegments = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13604 [shape=diamond, label=<<font color="black">(&lt; nextIndex numberOfSubstitutions)</font>> color="black" fillcolor="white" style=filled]
  node13597 [shape=cds, label=<<font color="black">10:app __x5__ = (Get raw nextKey)</font>> color="black" fillcolor="white" style=filled]
  node13607 [shape=cds, label=<<font color="black">16:app __x10__ = (ToString next)</font>> color="black" fillcolor="white" style=filled]
  node13594 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node13591 [shape=diamond, label=<<font color="black">(! (&lt; 0i literalSegments))</font>> color="black" fillcolor="white" style=filled]
  node13603 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Return the String value whose code units are , in order , the elements in the List id:{stringElements} . If id:{stringElements} has no elements , the empty String is returned .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13584 [shape=cds, label=<<font color="black">2:app __x0__ = (ToObject template)</font>> color="black" fillcolor="white" style=filled]
  node13579 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13609 [shape=diamond, label=<<font color="black">(&lt; __x12__ __x11__.length)</font>> color="black" fillcolor="white" style=filled]
  node13582 [shape=cds, label=<<font color="black">app substitutions = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13588 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let raw = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13593 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let stringElements = (new [])</td></tr>
      <tr><td align="left">7:let nextIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13598 [shape=cds, label=<<font color="black">10:app __x6__ = (ToString [? __x5__])</font>> color="black" fillcolor="white" style=filled]
  node13585 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let cooked = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13605 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let next = substitutions[nextIndex]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13595 [shape=cds, label=<<font color="black">9:app __x4__ = (ToString nextIndex)</font>> color="black" fillcolor="white" style=filled]
  node13599 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let nextSeg = [? __x6__]</td></tr>
      <tr><td align="left">11:let __x7__ = nextSeg</td></tr>
      <tr><td align="left">11:let __x8__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13601 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let __x9__ = __x7__[__x8__]</td></tr>
      <tr><td align="left">append __x9__ -&gt; stringElements</td></tr>
      <tr><td align="left">__x8__ = (+ __x8__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13589 [shape=cds, label=<<font color="black">4:app __x3__ = (LengthOfArrayLike raw)</font>> color="black" fillcolor="white" style=filled]
  node13581 -> node13582 [ color="black"]
  node13584 -> node13585 [ color="black"]
  node13592 -> node13593 [ color="black"]
  node13597 -> node13598 [ color="black"]
  node13583 -> node13584 [ color="black"]
  node13609 -> node13610 [label=<<font color="black">true</font>> color="black"]
  node13609 -> node13611 [label=<<font color="black">false</font>> color="black"]
  node13591 -> node13592 [label=<<font color="black">true</font>> color="black"]
  node13591 -> node13593 [label=<<font color="black">false</font>> color="black"]
  node13593 -> node13594 [ color="black"]
  node13600 -> node13601 [label=<<font color="black">true</font>> color="black"]
  node13600 -> node13602 [label=<<font color="black">false</font>> color="black"]
  node13601 -> node13600 [ color="black"]
  node13608 -> node13609 [ color="black"]
  node13582 -> node13583 [ color="black"]
  node13604 -> node13605 [label=<<font color="black">true</font>> color="black"]
  node13604 -> node13606 [label=<<font color="black">false</font>> color="black"]
  node13606 -> node13607 [ color="black"]
  node13588 -> node13589 [ color="black"]
  node13596 -> node13597 [ color="black"]
  node13585 -> node13586 [ color="black"]
  node13589 -> node13590 [ color="black"]
  node13599 -> node13600 [ color="black"]
  node13594 -> node13595 [label=<<font color="black">true</font>> color="black"]
  node13594 -> node13580 [label=<<font color="black">false</font>> color="black"]
  node13587 -> node13588 [ color="black"]
  node13595 -> node13596 [ color="black"]
  node13610 -> node13609 [ color="black"]
  node13607 -> node13608 [ color="black"]
  node13605 -> node13607 [ color="black"]
  node13579 -> node13581 [ color="black"]
  node13611 -> node13594 [ color="black"]
  node13586 -> node13587 [ color="black"]
  node13602 -> node13603 [label=<<font color="black">true</font>> color="black"]
  node13602 -> node13604 [label=<<font color="black">false</font>> color="black"]
  node13603 -> node13604 [ color="black"]
  node13598 -> node13599 [ color="black"]
  node13590 -> node13591 [ color="black"]
}
