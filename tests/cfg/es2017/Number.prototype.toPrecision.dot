digraph {
  node11372 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{m} be the String formed by the concatenation of code unit 0x0030 ( DIGIT ZERO ) , code unit 0x002E ( FULL STOP ) , - ( id:{e} + 1 ) occurrences of code unit 0x0030 ( DIGIT ZERO ) , and the String id:{m} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11340 [shape=cds, label=<<font color="black">app precision = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node11363 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:??? &quot;Let id:{a} be the first element of id:{m} , and let id:{b} be the remaining id:{p} - 1 elements of id:{m} .&quot;</td></tr>
      <tr><td align="left">21:let m = (+ (+ a &quot;.&quot;) b)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11344 [shape=cds, label=<<font color="black">app __x1__ = (ToString x)</font>> color="black" fillcolor="white" style=filled]
  node11356 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw RangeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11364 [shape=diamond, label=<<font color="black">(&lt; 0i e)</font>> color="black" fillcolor="white" style=filled]
  node11368 [shape=diamond, label=<<font color="black">(== e (- p 1i))</font>> color="black" fillcolor="white" style=filled]
  node11343 [shape=diamond, label=<<font color="black">(= precision undefined)</font>> color="black" fillcolor="white" style=filled]
  node11370 [shape=diamond, label=<<font color="black">(! (&lt; e 0i))</font>> color="black" fillcolor="white" style=filled]
  node11366 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let c = &quot;-&quot;</td></tr>
      <tr><td align="left">26:let e = (- e)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11341 [shape=cds, label=<<font color="black">0:app __x0__ = (thisNumberValue this)</font>> color="black" fillcolor="white" style=filled]
  node11362 [shape=diamond, label=<<font color="black">(! (== p 1i))</font>> color="black" fillcolor="white" style=filled]
  node11352 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let s = &quot;-&quot;</td></tr>
      <tr><td align="left">7:let x = (- x)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11350 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let s = &quot;&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11353 [shape=diamond, label=<<font color="black">(== x Infinity)</font>> color="black" fillcolor="white" style=filled]
  node11346 [shape=cds, label=<<font color="black">2:app __x2__ = (ToInteger precision)</font>> color="black" fillcolor="white" style=filled]
  node11367 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:??? &quot;Let id:{d} be the String consisting of the digits of the decimal representation of id:{e} ( in order , with no leading zeroes ) .&quot;</td></tr>
      <tr><td align="left">28:return (+ (+ (+ (+ s m) &quot;e&quot;) c) d)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11357 [shape=diamond, label=<<font color="black">(== x 0i)</font>> color="black" fillcolor="white" style=filled]
  node11339 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11371 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{m} be the concatenation of the first id:{e} + 1 elements of id:{m} , the code unit 0x002E ( FULL STOP ) , and the remaining id:{p} - ( id:{e} + 1 ) elements of id:{m} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11360 [shape=diamond, label=<<font color="black">(|| (&lt; e -6i) (! (&lt; e p)))</font>> color="black" fillcolor="white" style=filled]
  node11347 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let p = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11355 [shape=diamond, label=<<font color="black">(|| (&lt; p 1i) (&lt; 21i p))</font>> color="black" fillcolor="white" style=filled]
  node11338 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node11365 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let c = &quot;+&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11348 [shape=diamond, label=<<font color="black">(= x NaN)</font>> color="black" fillcolor="white" style=filled]
  node11342 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let x = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11359 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:??? &quot;Let id:{e} and id:{n} be integers such that 10 sup:{id:{p} - 1} &le; id:{n} &lt; 10 sup:{id:{p}} and for which the exact mathematical value of id:{n} &times; 10 sup:{id:{e} - id:{p} + 1} - id:{x} is as close to zero as possible . If there are two such sets of id:{e} and id:{n} , pick the id:{e} and id:{n} for which id:{n} &times; 10 sup:{id:{e} - id:{p} + 1} is larger .&quot;</td></tr>
      <tr><td align="left">16:??? &quot;Let id:{m} be the String consisting of the digits of the decimal representation of id:{n} ( in order , with no leading zeroes ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11361 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:assert (! (== e 0i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11354 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (+ s &quot;Infinity&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11351 [shape=diamond, label=<<font color="black">(&lt; x 0i)</font>> color="black" fillcolor="white" style=filled]
  node11349 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return &quot;NaN&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11369 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return (+ s m)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11358 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:??? &quot;Let id:{m} be the String consisting of id:{p} occurrences of the code unit 0x0030 ( DIGIT ZERO ) .&quot;</td></tr>
      <tr><td align="left">13:let e = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11345 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [! __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11373 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:return (+ s m)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11351 -> node11352 [label=<<font color="black">true</font>> color="black"]
  node11351 -> node11353 [label=<<font color="black">false</font>> color="black"]
  node11369 -> node11370 [ color="black"]
  node11344 -> node11345 [ color="black"]
  node11363 -> node11364 [ color="black"]
  node11343 -> node11344 [label=<<font color="black">true</font>> color="black"]
  node11343 -> node11346 [label=<<font color="black">false</font>> color="black"]
  node11366 -> node11367 [ color="black"]
  node11346 -> node11347 [ color="black"]
  node11348 -> node11349 [label=<<font color="black">true</font>> color="black"]
  node11348 -> node11350 [label=<<font color="black">false</font>> color="black"]
  node11368 -> node11369 [label=<<font color="black">true</font>> color="black"]
  node11368 -> node11370 [label=<<font color="black">false</font>> color="black"]
  node11338 -> node11340 [ color="black"]
  node11356 -> node11357 [ color="black"]
  node11347 -> node11348 [ color="black"]
  node11361 -> node11362 [ color="black"]
  node11354 -> node11355 [ color="black"]
  node11345 -> node11346 [ color="black"]
  node11352 -> node11353 [ color="black"]
  node11342 -> node11343 [ color="black"]
  node11349 -> node11350 [ color="black"]
  node11340 -> node11341 [ color="black"]
  node11350 -> node11351 [ color="black"]
  node11371 -> node11373 [ color="black"]
  node11359 -> node11360 [ color="black"]
  node11367 -> node11368 [ color="black"]
  node11372 -> node11373 [ color="black"]
  node11364 -> node11365 [label=<<font color="black">true</font>> color="black"]
  node11364 -> node11366 [label=<<font color="black">false</font>> color="black"]
  node11341 -> node11342 [ color="black"]
  node11370 -> node11371 [label=<<font color="black">true</font>> color="black"]
  node11370 -> node11372 [label=<<font color="black">false</font>> color="black"]
  node11357 -> node11358 [label=<<font color="black">true</font>> color="black"]
  node11357 -> node11359 [label=<<font color="black">false</font>> color="black"]
  node11362 -> node11363 [label=<<font color="black">true</font>> color="black"]
  node11362 -> node11364 [label=<<font color="black">false</font>> color="black"]
  node11355 -> node11356 [label=<<font color="black">true</font>> color="black"]
  node11355 -> node11357 [label=<<font color="black">false</font>> color="black"]
  node11360 -> node11361 [label=<<font color="black">true</font>> color="black"]
  node11360 -> node11368 [label=<<font color="black">false</font>> color="black"]
  node11358 -> node11368 [ color="black"]
  node11365 -> node11367 [ color="black"]
  node11373 -> node11339 [ color="black"]
  node11353 -> node11354 [label=<<font color="black">true</font>> color="black"]
  node11353 -> node11355 [label=<<font color="black">false</font>> color="black"]
}
