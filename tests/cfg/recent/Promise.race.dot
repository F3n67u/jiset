digraph {
  node18985 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18965 [shape=diamond, label=<<font color="black">(= iteratorRecord.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18978 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18958 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x2__) (! (= __x2__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18968 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x4__) (! (= __x4__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18966 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord = iteratorRecord.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18962 [shape=cds, label=<<font color="black">4:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node18952 [shape=cds, label=<<font color="black">2:app __x1__ = (GetPromiseResolve C)</font>> color="black" fillcolor="white" style=filled]
  node18969 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18950 [shape=cds, label=<<font color="black">1:app __x0__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node18960 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18948 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18983 [shape=diamond, label=<<font color="black">(&amp;&amp; (is-completion __x8__) (! (= __x8__.Type CONST_normal)))</font>> color="black" fillcolor="white" style=filled]
  node18981 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">result = result.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18972 [shape=cds, label=<<font color="black">6:app __x5__ = (PerformPromiseRace iteratorRecord C promiseCapability promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18951 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let promiseCapability = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18955 [shape=diamond, label=<<font color="black">(= promiseResolve.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18949 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18977 [shape=cds, label=<<font color="black">app __x7__ = (IteratorClose iteratorRecord result)</font>> color="black" fillcolor="white" style=filled]
  node18976 [shape=diamond, label=<<font color="black">(= iteratorRecord.Done false)</font>> color="black" fillcolor="white" style=filled]
  node18982 [shape=cds, label=<<font color="black">app __x8__ = (Call promiseCapability.Reject undefined (new [result.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18964 [shape=diamond, label=<<font color="black">(is-completion iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18959 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18954 [shape=diamond, label=<<font color="black">(is-completion promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18984 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18961 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:promiseResolve</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:iteratorRecord</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18946 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18975 [shape=diamond, label=<<font color="black">__x6__</font>> color="black" fillcolor="white" style=filled]
  node18970 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18953 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseResolve = __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18979 [shape=diamond, label=<<font color="black">(is-completion result)</font>> color="black" fillcolor="white" style=filled]
  node18974 [shape=cds, label=<<font color="black">7:app __x6__ = (IsAbruptCompletion result)</font>> color="black" fillcolor="white" style=filled]
  node18986 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18947 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18957 [shape=cds, label=<<font color="black">app __x2__ = (Call promiseCapability.Reject undefined (new [promiseResolve.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18956 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">promiseResolve = promiseResolve.Value</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18967 [shape=cds, label=<<font color="black">app __x4__ = (Call promiseCapability.Reject undefined (new [iteratorRecord.Value]))</font>> color="black" fillcolor="white" style=filled]
  node18980 [shape=diamond, label=<<font color="black">(= result.Type CONST_normal)</font>> color="black" fillcolor="white" style=filled]
  node18987 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18963 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let iteratorRecord = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18973 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let result = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18963 -> node18964 [ color="black"]
  node18985 -> node18986 [ color="black"]
  node18976 -> node18977 [label=<<font color="black">true</font>> color="black"]
  node18976 -> node18979 [label=<<font color="black">false</font>> color="black"]
  node18979 -> node18980 [label=<<font color="black">true</font>> color="black"]
  node18979 -> node18986 [label=<<font color="black">false</font>> color="black"]
  node18953 -> node18954 [ color="black"]
  node18974 -> node18975 [ color="black"]
  node18961 -> node18962 [ color="black"]
  node18948 -> node18949 [ color="black"]
  node18987 -> node18947 [ color="black"]
  node18968 -> node18969 [label=<<font color="black">true</font>> color="black"]
  node18968 -> node18970 [label=<<font color="black">false</font>> color="black"]
  node18958 -> node18959 [label=<<font color="black">true</font>> color="black"]
  node18958 -> node18960 [label=<<font color="black">false</font>> color="black"]
  node18957 -> node18958 [ color="black"]
  node18982 -> node18983 [ color="black"]
  node18966 -> node18971 [ color="black"]
  node18959 -> node18960 [ color="black"]
  node18951 -> node18952 [ color="black"]
  node18980 -> node18981 [label=<<font color="black">true</font>> color="black"]
  node18980 -> node18982 [label=<<font color="black">false</font>> color="black"]
  node18946 -> node18948 [ color="black"]
  node18960 -> node18961 [ color="black"]
  node18977 -> node18978 [ color="black"]
  node18962 -> node18963 [ color="black"]
  node18952 -> node18953 [ color="black"]
  node18956 -> node18961 [ color="black"]
  node18972 -> node18973 [ color="black"]
  node18964 -> node18965 [label=<<font color="black">true</font>> color="black"]
  node18964 -> node18971 [label=<<font color="black">false</font>> color="black"]
  node18950 -> node18951 [ color="black"]
  node18949 -> node18950 [ color="black"]
  node18973 -> node18974 [ color="black"]
  node18969 -> node18970 [ color="black"]
  node18970 -> node18971 [ color="black"]
  node18967 -> node18968 [ color="black"]
  node18983 -> node18984 [label=<<font color="black">true</font>> color="black"]
  node18983 -> node18985 [label=<<font color="black">false</font>> color="black"]
  node18981 -> node18986 [ color="black"]
  node18984 -> node18985 [ color="black"]
  node18975 -> node18976 [label=<<font color="black">true</font>> color="black"]
  node18975 -> node18987 [label=<<font color="black">false</font>> color="black"]
  node18955 -> node18956 [label=<<font color="black">true</font>> color="black"]
  node18955 -> node18957 [label=<<font color="black">false</font>> color="black"]
  node18965 -> node18966 [label=<<font color="black">true</font>> color="black"]
  node18965 -> node18967 [label=<<font color="black">false</font>> color="black"]
  node18978 -> node18979 [ color="black"]
  node18971 -> node18972 [ color="black"]
  node18954 -> node18955 [label=<<font color="black">true</font>> color="black"]
  node18954 -> node18961 [label=<<font color="black">false</font>> color="black"]
  node18986 -> node18987 [ color="black"]
}
