{
  app __x0__ = (GetArgument argumentsList 0i)
  let predicate = __x0__
  app __x1__ = (GetArgument argumentsList 1i)
  let thisArg = __x1__
  app __x2__ = (ToObject this)
  let O = [? __x2__]
  app __x3__ = (LengthOfArrayLike O)
  let len = [? __x3__]
  app __x4__ = (IsCallable predicate)
  if (= __x4__ false) throw INTRINSIC_TypeError else {}
  let k = 0i
  while (< k len) {
    app __x5__ = (ToString k)
    let Pk = [! __x5__]
    app __x6__ = (Get O Pk)
    let kValue = [? __x6__]
    app __x7__ = (Call predicate thisArg (new [kValue, k, O]))
    app __x8__ = (ToBoolean [? __x7__])
    let testResult = [! __x8__]
    if (= testResult true) return k else {}
    k = (+ k 1i)
  }
  return -1i
}