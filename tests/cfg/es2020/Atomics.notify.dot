digraph {
  node17639 [shape=cds, label=<<font color="black">18:app __x7__ = (NotifyWaiter WL W)</font>> color="black" fillcolor="white" style=filled]
  node17641 [shape=cds, label=<<font color="black">20:app __x8__ = (LeaveCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node17624 [shape=diamond, label=<<font color="black">(= count undefined)</font>> color="black" fillcolor="white" style=filled]
  node17620 [shape=cds, label=<<font color="black">0:app __x0__ = (ValidateSharedIntegerTypedArray typedArray true)</font>> color="black" fillcolor="white" style=filled]
  node17619 [shape=cds, label=<<font color="black">app count = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node17631 [shape=cds, label=<<font color="black">11:app __x4__ = (GetWaiterList block indexedPosition)</font>> color="black" fillcolor="white" style=filled]
  node17618 [shape=cds, label=<<font color="black">app index = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node17628 [shape=cds, label=<<font color="black">5:app __x3__ = (max intCount 0i)</font>> color="black" fillcolor="white" style=filled]
  node17622 [shape=cds, label=<<font color="black">1:app __x1__ = (ValidateAtomicAccess typedArray index)</font>> color="black" fillcolor="white" style=filled]
  node17637 [shape=diamond, label=<<font color="black">(&lt; 0i S.length)</font>> color="black" fillcolor="white" style=filled]
  node17625 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let c = Infinity</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17621 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let buffer = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17626 [shape=cds, label=<<font color="black">4:app __x2__ = (ToInteger count)</font>> color="black" fillcolor="white" style=filled]
  node17630 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let block = buffer.ArrayBufferData</td></tr>
      <tr><td align="left">7:let offset = typedArray.ByteOffset</td></tr>
      <tr><td align="left">8:let arrayTypeName = typedArray.TypedArrayName</td></tr>
      <tr><td align="left">9:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{arrayTypeName} .&quot;</td></tr>
      <tr><td align="left">10:let indexedPosition = (+ (* i elementSize) offset)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17635 [shape=cds, label=<<font color="black">14:app __x6__ = (RemoveWaiters WL c)</font>> color="black" fillcolor="white" style=filled]
  node17633 [shape=cds, label=<<font color="black">13:app __x5__ = (EnterCriticalSection WL)</font>> color="black" fillcolor="white" style=filled]
  node17627 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let intCount = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17642 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:__x8__</td></tr>
      <tr><td align="left">21:return n</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17623 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let i = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17638 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let W = S[0i]</td></tr>
      <tr><td align="left">17:(pop S 0i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let WL = __x4__</td></tr>
      <tr><td align="left">12:let n = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17615 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17617 [shape=cds, label=<<font color="black">app typedArray = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17640 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x7__</td></tr>
      <tr><td align="left">19:n = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17629 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let c = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17616 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17636 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let S = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17634 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17637 -> node17638 [label=<<font color="black">true</font>> color="black"]
  node17637 -> node17641 [label=<<font color="black">false</font>> color="black"]
  node17620 -> node17621 [ color="black"]
  node17632 -> node17633 [ color="black"]
  node17635 -> node17636 [ color="black"]
  node17615 -> node17617 [ color="black"]
  node17629 -> node17630 [ color="black"]
  node17617 -> node17618 [ color="black"]
  node17618 -> node17619 [ color="black"]
  node17642 -> node17616 [ color="black"]
  node17630 -> node17631 [ color="black"]
  node17621 -> node17622 [ color="black"]
  node17638 -> node17639 [ color="black"]
  node17628 -> node17629 [ color="black"]
  node17639 -> node17640 [ color="black"]
  node17627 -> node17628 [ color="black"]
  node17624 -> node17625 [label=<<font color="black">true</font>> color="black"]
  node17624 -> node17626 [label=<<font color="black">false</font>> color="black"]
  node17626 -> node17627 [ color="black"]
  node17623 -> node17624 [ color="black"]
  node17641 -> node17642 [ color="black"]
  node17631 -> node17632 [ color="black"]
  node17640 -> node17637 [ color="black"]
  node17625 -> node17630 [ color="black"]
  node17619 -> node17620 [ color="black"]
  node17622 -> node17623 [ color="black"]
  node17633 -> node17634 [ color="black"]
  node17636 -> node17637 [ color="black"]
  node17634 -> node17635 [ color="black"]
}
