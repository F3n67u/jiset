[{
  "tokens": ["Evaluate", {
    "nt": "DecimalEscape"
  }, "to", "obtain", "an", "EscapeValue", {
    "id": "E"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "E"
  }, "is", "a", "character", ",", "then"]
}, {
  "tokens": ["Let", {
    "id": "ch"
  }, "be", {
    "id": "E"
  }, "'", "s", "character", "."]
}, {
  "tokens": ["Let", {
    "id": "A"
  }, "be", "a", "one", "-", "element", "CharSet", "containing", "the", "character", {
    "id": "ch"
  }, "."]
}, {
  "tokens": ["Call", "CharacterSetMatcher", "(", {
    "id": "A"
  }, ",", {
    "value": "false"
  }, ")", "and", "return", "its", "Matcher", "result", "."]
}, {
  "tokens": ["Assert", ":", {
    "id": "E"
  }, "must", "be", "an", "integer", "."]
}, {
  "tokens": ["Let", {
    "id": "n"
  }, "be", "that", "integer", "."]
}, {
  "tokens": ["If", {
    "id": "n"
  }, "=", "0", "or", {
    "id": "n"
  }, ">", {
    "id": "NcapturingParens"
  }, ",", "throw", "a", {
    "value": "SyntaxError"
  }, "exception", "."]
}, {
  "tokens": ["Return", "an", "internal", "Matcher", "closure", "that", "takes", "two", "arguments", ",", "a", "State", {
    "id": "x"
  }, "and", "a", "Continuation", {
    "id": "c"
  }, ",", "and", "performs", "the", "following", "steps", ":"]
}, {
  "tokens": ["Let", {
    "id": "cap"
  }, "be", {
    "id": "x"
  }, "'", "s", {
    "id": "captures"
  }, "List", "."]
}, {
  "tokens": ["Let", {
    "id": "s"
  }, "be", {
    "id": "cap"
  }, "[", {
    "id": "n"
  }, "]", "."]
}, {
  "tokens": ["If", {
    "id": "s"
  }, "is", {
    "value": "undefined"
  }, ",", "return", {
    "id": "c"
  }, "(", {
    "id": "x"
  }, ")", "."]
}, {
  "tokens": ["Let", {
    "id": "e"
  }, "be", {
    "id": "x"
  }, "'", "s", {
    "id": "endIndex"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "len"
  }, "be", {
    "id": "s"
  }, "'", "s", "length", "."]
}, {
  "tokens": ["Let", {
    "id": "f"
  }, "be", {
    "id": "e"
  }, "+", {
    "id": "len"
  }, "."]
}, {
  "tokens": ["If", {
    "id": "f"
  }, ">", {
    "id": "InputLength"
  }, ",", "return", {
    "const": "failure"
  }, "."]
}, {
  "tokens": ["If", "there", "exists", "an", "integer", {
    "id": "i"
  }, "between", "0", "(", "inclusive", ")", "and", {
    "id": "len"
  }, "(", "exclusive", ")", "such", "that", "Canonicalize", "(", {
    "id": "s"
  }, "[", {
    "id": "i"
  }, "]", ")", "is", "not", "the", "same", "character", "value", "as", "Canonicalize", "(", {
    "id": "Input"
  }, "[", {
    "id": "e"
  }, "+", {
    "id": "i"
  }, "]", ")", ",", "return", {
    "const": "failure"
  }, "."]
}, {
  "tokens": ["Let", {
    "id": "y"
  }, "be", "the", "State", "(", {
    "id": "f"
  }, ",", {
    "id": "cap"
  }, ")", "."]
}, {
  "tokens": ["Call", {
    "id": "c"
  }, "(", {
    "id": "y"
  }, ")", "and", "return", "its", "result", "."]
}]