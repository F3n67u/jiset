{
  [0] app __x0__ = (ToObject O)
  [0] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [2] {}
  [0] let obj = __x0__
  [1] app __x1__ = (obj.OwnPropertyKeys obj)
  [1] if (is-completion __x1__) if (= __x1__.Type CONST_normal) __x1__ = __x1__.Value else return __x1__ else [2] {}
  [1] let keys = __x1__
  [2] let nameList = (new [])
  [3] let __x2__ = keys
  [3] let __x3__ = 0i
  [3] while (< __x3__ __x2__.length) {
    let nextKey = __x2__[__x3__]
    [4] app __x4__ = (Type nextKey)
    [4] if (= __x4__ type) append nextKey -> nameList else [2] {}
    __x3__ = (+ __x3__ 1i)
  }
  [6] app __x5__ = (CreateArrayFromList nameList)
  [6] app __x6__ = (WrapCompletion __x5__)
  [6] return __x6__
}