{
  let alreadyResolved = (new Record("Value" -> false))
  ??? "Let id:{stepsResolve} be the algorithm steps defined in Promise Resolve Functions ( link:{} ) ."
  app __x0__ = (CreateBuiltinFunction stepsResolve (new ["Promise", "AlreadyResolved"]))
  let resolve = __x0__
  resolve.Promise = promise
  resolve.AlreadyResolved = alreadyResolved
  ??? "Let id:{stepsReject} be the algorithm steps defined in Promise Reject Functions ( link:{} ) ."
  app __x1__ = (CreateBuiltinFunction stepsReject (new ["Promise", "AlreadyResolved"]))
  let reject = __x1__
  reject.Promise = promise
  reject.AlreadyResolved = alreadyResolved
  app __x2__ = (WrapCompletion (new Record("Resolve" -> resolve, "Reject" -> reject)))
  return __x2__
}