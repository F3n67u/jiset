digraph {
  node16836 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16830 [shape=diamond, label=<<font color="black">(= __x0__ true)</font>> color="black" fillcolor="white" style=filled]
  node16840 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16826 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16829 [shape=cds, label=<<font color="black">2:access __x0__ = (StatementList &quot;ContainsDuplicateLabels&quot; (new []))</font>> color="black" fillcolor="white" style=filled]
  node16833 [shape=cds, label=<<font color="black">3:access __x1__ = (StatementList &quot;ContainsUndefinedBreakTarget&quot; (new []))</font>> color="black" fillcolor="white" style=filled]
  node16832 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16837 [shape=cds, label=<<font color="black">4:access __x2__ = (StatementList &quot;ContainsUndefinedContinueTarget&quot; (new []) (new []))</font>> color="black" fillcolor="white" style=filled]
  node16834 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node16828 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:??? &quot;It is a Syntax Error if nt:{StatementList} Contains code:{super} unless the source code containing code:{super} is eval code that is being processed by a direct eval that is contained in function code that is not the function code of an nt:{ArrowFunction} .&quot;</td></tr>
      <tr><td align="left">1:??? &quot;It is a Syntax Error if nt:{StatementList} Contains nt:{NewTarget} unless the source code containing nt:{NewTarget} is eval code that is being processed by a direct eval that is contained in function code that is not the function code of an nt:{ArrowFunction} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16839 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16835 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16827 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16838 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node16831 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw SyntaxError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16831 -> node16833 [ color="black"]
  node16839 -> node16827 [ color="black"]
  node16838 -> node16839 [label=<<font color="black">true</font>> color="black"]
  node16838 -> node16840 [label=<<font color="black">false</font>> color="black"]
  node16836 -> node16837 [ color="black"]
  node16826 -> node16828 [ color="black"]
  node16830 -> node16831 [label=<<font color="black">true</font>> color="black"]
  node16830 -> node16832 [label=<<font color="black">false</font>> color="black"]
  node16837 -> node16838 [ color="black"]
  node16834 -> node16835 [label=<<font color="black">true</font>> color="black"]
  node16834 -> node16836 [label=<<font color="black">false</font>> color="black"]
  node16833 -> node16834 [ color="black"]
  node16835 -> node16837 [ color="black"]
  node16829 -> node16830 [ color="black"]
  node16840 -> node16827 [ color="black"]
  node16832 -> node16833 [ color="black"]
  node16828 -> node16829 [ color="black"]
}
