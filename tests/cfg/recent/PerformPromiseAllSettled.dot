digraph {
  node19123 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node19145 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let nextPromise = [? __x8__]</td></tr>
      <tr><td align="left">21:??? &quot;Let id:{steps} be the algorithm steps defined in link:{unhandled: sec-promise.allsettled-resolve-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19122 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x1__ true)</td></tr>
      <tr><td align="left">2:let values = (new [])</td></tr>
      <tr><td align="left">3:let remainingElementsCount = (new Record(&quot;Value&quot; -&gt; 1i))</td></tr>
      <tr><td align="left">4:let index = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19139 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let nextValue = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19126 [shape=cds, label=<<font color="black">7:app __x3__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node19149 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:let rejectElement = [! __x10__]</td></tr>
      <tr><td align="left">31:rejectElement.AlreadyCalled = alreadyCalled</td></tr>
      <tr><td align="left">32:rejectElement.Index = index</td></tr>
      <tr><td align="left">33:rejectElement.Values = values</td></tr>
      <tr><td align="left">34:rejectElement.Capability = resultCapability</td></tr>
      <tr><td align="left">35:rejectElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">36:remainingElementsCount.Value = (+ remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19146 [shape=cds, label=<<font color="black">22:app __x9__ = (CreateBuiltinFunction steps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node19125 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let next = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19147 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">22:let resolveElement = [! __x9__]</td></tr>
      <tr><td align="left">23:let alreadyCalled = (new Record(&quot;Value&quot; -&gt; false))</td></tr>
      <tr><td align="left">24:resolveElement.AlreadyCalled = alreadyCalled</td></tr>
      <tr><td align="left">25:resolveElement.Index = index</td></tr>
      <tr><td align="left">26:resolveElement.Values = values</td></tr>
      <tr><td align="left">27:resolveElement.Capability = resultCapability</td></tr>
      <tr><td align="left">28:resolveElement.RemainingElements = remainingElementsCount</td></tr>
      <tr><td align="left">29:??? &quot;Let id:{rejectSteps} be the algorithm steps defined in link:{unhandled: sec-promise.allsettled-reject-element-functions} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19124 [shape=cds, label=<<font color="black">6:app __x2__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node19148 [shape=cds, label=<<font color="black">30:app __x10__ = (CreateBuiltinFunction rejectSteps (new [&quot;AlreadyCalled&quot;, &quot;Index&quot;, &quot;Values&quot;, &quot;Capability&quot;, &quot;RemainingElements&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node19117 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19127 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node19142 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19120 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= [! __x0__] true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19140 [shape=cds, label=<<font color="black">17:app __x7__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node19130 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node19131 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">11:remainingElementsCount.Value = (- remainingElementsCount.Value 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19134 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let valuesArray = [! __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19121 [shape=cds, label=<<font color="black">1:app __x1__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node19144 [shape=cds, label=<<font color="black">20:app __x8__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node19135 [shape=cds, label=<<font color="black">14:app __x5__ = (Call resultCapability.Resolve undefined (new [valuesArray]))</font>> color="black" fillcolor="white" style=filled]
  node19150 [shape=cds, label=<<font color="black">37:app __x11__ = (Invoke nextPromise &quot;then&quot; (new [resolveElement, rejectElement]))</font>> color="black" fillcolor="white" style=filled]
  node19138 [shape=cds, label=<<font color="black">16:app __x6__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node19118 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19133 [shape=cds, label=<<font color="black">13:app __x4__ = (CreateArrayFromList values)</font>> color="black" fillcolor="white" style=filled]
  node19132 [shape=diamond, label=<<font color="black">(= remainingElementsCount.Value 0i)</font>> color="black" fillcolor="white" style=filled]
  node19137 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19128 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19141 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node19143 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[? nextValue]</td></tr>
      <tr><td align="left">19:append undefined -&gt; values</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19151 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">37:[? __x11__]</td></tr>
      <tr><td align="left">38:index = (+ index 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19119 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node19129 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19136 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19120 -> node19121 [ color="black"]
  node19145 -> node19146 [ color="black"]
  node19143 -> node19144 [ color="black"]
  node19123 -> node19124 [label=<<font color="black">true</font>> color="black"]
  node19123 -> node19118 [label=<<font color="black">false</font>> color="black"]
  node19122 -> node19123 [ color="black"]
  node19148 -> node19149 [ color="black"]
  node19128 -> node19129 [ color="black"]
  node19144 -> node19145 [ color="black"]
  node19119 -> node19120 [ color="black"]
  node19139 -> node19140 [ color="black"]
  node19117 -> node19119 [ color="black"]
  node19142 -> node19143 [ color="black"]
  node19137 -> node19138 [ color="black"]
  node19135 -> node19136 [ color="black"]
  node19141 -> node19142 [label=<<font color="black">true</font>> color="black"]
  node19141 -> node19143 [label=<<font color="black">false</font>> color="black"]
  node19146 -> node19147 [ color="black"]
  node19125 -> node19126 [ color="black"]
  node19129 -> node19130 [ color="black"]
  node19133 -> node19134 [ color="black"]
  node19130 -> node19131 [label=<<font color="black">true</font>> color="black"]
  node19130 -> node19138 [label=<<font color="black">false</font>> color="black"]
  node19151 -> node19123 [ color="black"]
  node19124 -> node19125 [ color="black"]
  node19127 -> node19128 [label=<<font color="black">true</font>> color="black"]
  node19127 -> node19129 [label=<<font color="black">false</font>> color="black"]
  node19140 -> node19141 [ color="black"]
  node19126 -> node19127 [ color="black"]
  node19150 -> node19151 [ color="black"]
  node19149 -> node19150 [ color="black"]
  node19132 -> node19133 [label=<<font color="black">true</font>> color="black"]
  node19132 -> node19137 [label=<<font color="black">false</font>> color="black"]
  node19134 -> node19135 [ color="black"]
  node19147 -> node19148 [ color="black"]
  node19121 -> node19122 [ color="black"]
  node19136 -> node19137 [ color="black"]
  node19131 -> node19132 [ color="black"]
  node19138 -> node19139 [ color="black"]
}
