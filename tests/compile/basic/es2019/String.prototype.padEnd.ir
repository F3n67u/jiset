{
  app __x0__ = (RequireObjectCoercible this)
  let O = [? __x0__]
  app __x1__ = (ToString O)
  let S = [? __x1__]
  app __x2__ = (ToLength maxLength)
  let intMaxLength = [? __x2__]
  let stringLength = S.length
  if (! (< stringLength intMaxLength)) return S else {}
  if (= fillString undefined) let filler = " " else {
    app __x3__ = (ToString fillString)
    let filler = [? __x3__]
  }
  if (= filler "") return S else {}
  let fillLen = (- intMaxLength stringLength)
  ??? "Let id:{truncatedStringFiller} be the String value consisting of repeated concatenations of id:{filler} truncated to length id:{fillLen} ."
  return (+ S truncatedStringFiller)
}