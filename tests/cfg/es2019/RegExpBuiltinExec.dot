digraph {
  node14023 [shape=diamond, label=<<font color="black">(contains flags &quot;u&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14046 [shape=cds, label=<<font color="black">30:app __x7__ = (Set R &quot;lastIndex&quot; e true)</font>> color="black" fillcolor="white" style=filled]
  node14060 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{captureI} be id:{i} sup:{th} element of id:{r} ' s id:{captures} List .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14028 [shape=diamond, label=<<font color="black">(&lt; length lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14052 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">35:[! __x9__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14049 [shape=cds, label=<<font color="black">33:app __x8__ = (ArrayCreate (+ n 1i))</font>> color="black" fillcolor="white" style=filled]
  node14017 [shape=diamond, label=<<font color="black">(contains flags &quot;y&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14022 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let matcher = R.RegExpMatcher</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14050 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let A = [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14018 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14038 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x5__]</td></tr>
      <tr><td align="left">20:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14057 [shape=cds, label=<<font color="black">43:app __x12__ = (CreateDataProperty A &quot;groups&quot; groups)</font>> color="black" fillcolor="white" style=filled]
  node14014 [shape=diamond, label=<<font color="black">(contains flags &quot;g&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14025 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14039 [shape=cds, label=<<font color="black">21:app __x6__ = (AdvanceStringIndex S lastIndex fullUnicode)</font>> color="black" fillcolor="white" style=filled]
  node14029 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node14007 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14024 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let fullUnicode = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14019 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let sticky = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14051 [shape=cds, label=<<font color="black">35:app __x9__ = (CreateDataProperty A &quot;index&quot; lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14034 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let r = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:[! __x11__]</td></tr>
      <tr><td align="left">39:??? &quot;If id:{R} contains any nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
      <tr><td align="left">41:??? &quot;Else , in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14061 [shape=diamond, label=<<font color="black">(= captureI undefined)</font>> color="black" fillcolor="white" style=filled]
  node14066 [shape=cds, label=<<font color="black">app __x14__ = (ToString i)</font>> color="black" fillcolor="white" style=filled]
  node14032 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:return null</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14043 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node14064 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">??? &quot;Let id:{capturedValue} be the String value whose code units are the UTF16Encoding of the code points of id:{captureI} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14013 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let lastIndex = [? __x2__]</td></tr>
      <tr><td align="left">4:let flags = R.OriginalFlags</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14011 [shape=cds, label=<<font color="black">3:app __x1__ = (Get R &quot;lastIndex&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14040 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:lastIndex = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14067 [shape=cds, label=<<font color="black">app __x15__ = (CreateDataProperty A [! __x14__] capturedValue)</font>> color="black" fillcolor="white" style=filled]
  node14008 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14035 [shape=diamond, label=<<font color="black">(= r CONST_failure)</font>> color="black" fillcolor="white" style=filled]
  node14020 [shape=diamond, label=<<font color="black">(&amp;&amp; (= global false) (= sticky false))</font>> color="black" fillcolor="white" style=filled]
  node14045 [shape=diamond, label=<<font color="black">(|| (= global true) (= sticky true))</font>> color="black" fillcolor="white" style=filled]
  node14021 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">lastIndex = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14044 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:??? &quot;id:{e} is an index into the id:{Input} character list , derived from id:{S} , matched by id:{matcher} . Let id:{eUTF} be the smallest index into id:{S} that corresponds to the character at element id:{e} of id:{Input} . If id:{e} is greater than or equal to the number of elements in id:{Input} , then id:{eUTF} is the number of code units in id:{S} .&quot;</td></tr>
      <tr><td align="left">28:e = eUTF</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14010 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:assert (= __x0__ String)</td></tr>
      <tr><td align="left">2:let length = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14059 [shape=diamond, label=<<font color="black">(&lt; i __x13__)</font>> color="black" fillcolor="white" style=filled]
  node14027 [shape=diamond, label=<<font color="black">(= matchSucceeded false)</font>> color="black" fillcolor="white" style=filled]
  node14048 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">31:??? &quot;Let id:{n} be the number of elements in id:{r} ' s id:{captures} List . ( This is the same value as link:{unhandled: sec-notation} ' s id:{NcapturingParens} . )&quot;</td></tr>
      <tr><td align="left">32:assert (&lt; n (- (** 2.0 32i) 1i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14042 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let e = r.endIndex</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14053 [shape=cds, label=<<font color="black">36:app __x10__ = (CreateDataProperty A &quot;input&quot; S)</font>> color="black" fillcolor="white" style=filled]
  node14016 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14063 [shape=diamond, label=<<font color="black">(= fullUnicode true)</font>> color="black" fillcolor="white" style=filled]
  node14012 [shape=cds, label=<<font color="black">3:app __x2__ = (ToLength [? __x1__])</font>> color="black" fillcolor="white" style=filled]
  node14068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">[! __x15__]</td></tr>
      <tr><td align="left">??? &quot;If the id:{i} th capture of id:{R} was defined with a nt:{GroupName} , then in:{} out:{}&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14036 [shape=diamond, label=<<font color="black">(= sticky true)</font>> color="black" fillcolor="white" style=filled]
  node14031 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:[? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">43:[! __x12__]</td></tr>
      <tr><td align="left">44:let i = (+ 0i 1i)</td></tr>
      <tr><td align="left">44:let __x13__ = (+ n 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14037 [shape=cds, label=<<font color="black">19:app __x5__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node14009 [shape=cds, label=<<font color="black">1:app __x0__ = (Type S)</font>> color="black" fillcolor="white" style=filled]
  node14015 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let global = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14026 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let matchSucceeded = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">57:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14041 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">matchSucceeded = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14054 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">36:[! __x10__]</td></tr>
      <tr><td align="left">37:??? &quot;Let id:{matchedSubstr} be the matched substring ( i . e . the portion of id:{S} between offset id:{lastIndex} inclusive and offset id:{e} exclusive ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14047 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">30:[? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14030 [shape=cds, label=<<font color="black">14:app __x3__ = (Set R &quot;lastIndex&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node14065 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = captureI</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14062 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let capturedValue = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14033 [shape=cds, label=<<font color="black">16:app __x4__ = (matcher S lastIndex)</font>> color="black" fillcolor="white" style=filled]
  node14055 [shape=cds, label=<<font color="black">38:app __x11__ = (CreateDataProperty A &quot;0&quot; matchedSubstr)</font>> color="black" fillcolor="white" style=filled]
  node14035 -> node14036 [label=<<font color="black">true</font>> color="black"]
  node14035 -> node14041 [label=<<font color="black">false</font>> color="black"]
  node14015 -> node14017 [ color="black"]
  node14066 -> node14067 [ color="black"]
  node14052 -> node14053 [ color="black"]
  node14007 -> node14009 [ color="black"]
  node14068 -> node14059 [ color="black"]
  node14067 -> node14068 [ color="black"]
  node14026 -> node14027 [ color="black"]
  node14038 -> node14039 [ color="black"]
  node14014 -> node14015 [label=<<font color="black">true</font>> color="black"]
  node14014 -> node14016 [label=<<font color="black">false</font>> color="black"]
  node14054 -> node14055 [ color="black"]
  node14046 -> node14047 [ color="black"]
  node14069 -> node14008 [ color="black"]
  node14042 -> node14043 [ color="black"]
  node14043 -> node14044 [label=<<font color="black">true</font>> color="black"]
  node14043 -> node14045 [label=<<font color="black">false</font>> color="black"]
  node14057 -> node14058 [ color="black"]
  node14030 -> node14031 [ color="black"]
  node14018 -> node14020 [ color="black"]
  node14022 -> node14023 [ color="black"]
  node14047 -> node14048 [ color="black"]
  node14049 -> node14050 [ color="black"]
  node14027 -> node14028 [label=<<font color="black">true</font>> color="black"]
  node14027 -> node14042 [label=<<font color="black">false</font>> color="black"]
  node14039 -> node14040 [ color="black"]
  node14044 -> node14045 [ color="black"]
  node14013 -> node14014 [ color="black"]
  node14059 -> node14060 [label=<<font color="black">true</font>> color="black"]
  node14059 -> node14069 [label=<<font color="black">false</font>> color="black"]
  node14037 -> node14038 [ color="black"]
  node14021 -> node14022 [ color="black"]
  node14032 -> node14033 [ color="black"]
  node14036 -> node14037 [label=<<font color="black">true</font>> color="black"]
  node14036 -> node14039 [label=<<font color="black">false</font>> color="black"]
  node14056 -> node14057 [ color="black"]
  node14060 -> node14061 [ color="black"]
  node14051 -> node14052 [ color="black"]
  node14063 -> node14064 [label=<<font color="black">true</font>> color="black"]
  node14063 -> node14065 [label=<<font color="black">false</font>> color="black"]
  node14024 -> node14026 [ color="black"]
  node14048 -> node14049 [ color="black"]
  node14033 -> node14034 [ color="black"]
  node14025 -> node14026 [ color="black"]
  node14041 -> node14027 [ color="black"]
  node14017 -> node14018 [label=<<font color="black">true</font>> color="black"]
  node14017 -> node14019 [label=<<font color="black">false</font>> color="black"]
  node14029 -> node14030 [label=<<font color="black">true</font>> color="black"]
  node14029 -> node14032 [label=<<font color="black">false</font>> color="black"]
  node14065 -> node14066 [ color="black"]
  node14012 -> node14013 [ color="black"]
  node14031 -> node14032 [ color="black"]
  node14040 -> node14027 [ color="black"]
  node14034 -> node14035 [ color="black"]
  node14010 -> node14011 [ color="black"]
  node14062 -> node14066 [ color="black"]
  node14053 -> node14054 [ color="black"]
  node14061 -> node14062 [label=<<font color="black">true</font>> color="black"]
  node14061 -> node14063 [label=<<font color="black">false</font>> color="black"]
  node14023 -> node14024 [label=<<font color="black">true</font>> color="black"]
  node14023 -> node14025 [label=<<font color="black">false</font>> color="black"]
  node14055 -> node14056 [ color="black"]
  node14045 -> node14046 [label=<<font color="black">true</font>> color="black"]
  node14045 -> node14048 [label=<<font color="black">false</font>> color="black"]
  node14064 -> node14066 [ color="black"]
  node14016 -> node14017 [ color="black"]
  node14028 -> node14029 [label=<<font color="black">true</font>> color="black"]
  node14028 -> node14033 [label=<<font color="black">false</font>> color="black"]
  node14009 -> node14010 [ color="black"]
  node14058 -> node14059 [ color="black"]
  node14011 -> node14012 [ color="black"]
  node14020 -> node14021 [label=<<font color="black">true</font>> color="black"]
  node14020 -> node14022 [label=<<font color="black">false</font>> color="black"]
  node14050 -> node14051 [ color="black"]
  node14019 -> node14020 [ color="black"]
}
