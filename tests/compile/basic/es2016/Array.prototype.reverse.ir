{
  app __x0__ = (ToObject this)
  let O = [? __x0__]
  app __x1__ = (Get O "length")
  app __x2__ = (ToLength [? __x1__])
  let len = [? __x2__]
  app __x3__ = (floor (/ len 2i))
  let middle = __x3__
  let lower = 0i
  while (! (== lower middle)) {
    let upper = (- (- len lower) 1i)
    app __x4__ = (ToString upper)
    let upperP = [! __x4__]
    app __x5__ = (ToString lower)
    let lowerP = [! __x5__]
    app __x6__ = (HasProperty O lowerP)
    let lowerExists = [? __x6__]
    if (= lowerExists true) {
      app __x7__ = (Get O lowerP)
      let lowerValue = [? __x7__]
    } else {}
    app __x8__ = (HasProperty O upperP)
    let upperExists = [? __x8__]
    if (= upperExists true) {
      app __x9__ = (Get O upperP)
      let upperValue = [? __x9__]
    } else {}
    if (&& (= lowerExists true) (= upperExists true)) {
      app __x10__ = (Set O lowerP upperValue true)
      [? __x10__]
      app __x11__ = (Set O upperP lowerValue true)
      [? __x11__]
    } else if (&& (= lowerExists false) (= upperExists true)) {
      app __x12__ = (Set O lowerP upperValue true)
      [? __x12__]
      app __x13__ = (DeletePropertyOrThrow O upperP)
      [? __x13__]
    } else if (&& (= lowerExists true) (= upperExists false)) {
      app __x14__ = (DeletePropertyOrThrow O lowerP)
      [? __x14__]
      app __x15__ = (Set O upperP lowerValue true)
      [? __x15__]
    } else {}
    lower = (+ lower 1i)
  }
  return O
}