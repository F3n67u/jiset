digraph {
  node15963 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node15971 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let iteratorRecord = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15954 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15975 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node15958 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15962 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15984 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15959 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_SetPrototype (new [&quot;SetData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node15972 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node15960 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let set = [? __x0__]</td></tr>
      <tr><td align="left">2:set.SetData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15956 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15969 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15982 [shape=diamond, label=<<font color="black">__x7__</font>> color="black" fillcolor="white" style=filled]
  node15957 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15964 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15977 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node15974 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15970 [shape=cds, label=<<font color="black">7:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node15980 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let status = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15981 [shape=cds, label=<<font color="black">13:app __x7__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node15967 [shape=cds, label=<<font color="black">6:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node15979 [shape=cds, label=<<font color="black">12:app __x6__ = (Call adder set (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node15976 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return set</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15955 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15978 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15983 [shape=cds, label=<<font color="black">app __x8__ = (IteratorClose iteratorRecord status)</font>> color="black" fillcolor="white" style=filled]
  node15961 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node15968 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15966 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15965 [shape=cds, label=<<font color="black">5:app __x1__ = (Get set &quot;add&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15973 [shape=cds, label=<<font color="black">9:app __x4__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node15972 -> node15973 [label=<<font color="black">true</font>> color="black"]
  node15972 -> node15955 [label=<<font color="black">false</font>> color="black"]
  node15966 -> node15967 [ color="black"]
  node15954 -> node15956 [ color="black"]
  node15976 -> node15977 [ color="black"]
  node15973 -> node15974 [ color="black"]
  node15968 -> node15969 [label=<<font color="black">true</font>> color="black"]
  node15968 -> node15970 [label=<<font color="black">false</font>> color="black"]
  node15982 -> node15983 [label=<<font color="black">true</font>> color="black"]
  node15982 -> node15972 [label=<<font color="black">false</font>> color="black"]
  node15959 -> node15960 [ color="black"]
  node15974 -> node15975 [ color="black"]
  node15977 -> node15978 [ color="black"]
  node15978 -> node15979 [ color="black"]
  node15981 -> node15982 [ color="black"]
  node15979 -> node15980 [ color="black"]
  node15967 -> node15968 [ color="black"]
  node15962 -> node15963 [ color="black"]
  node15980 -> node15981 [ color="black"]
  node15958 -> node15959 [ color="black"]
  node15964 -> node15965 [ color="black"]
  node15971 -> node15972 [ color="black"]
  node15970 -> node15971 [ color="black"]
  node15983 -> node15984 [ color="black"]
  node15975 -> node15976 [label=<<font color="black">true</font>> color="black"]
  node15975 -> node15977 [label=<<font color="black">false</font>> color="black"]
  node15957 -> node15958 [label=<<font color="black">true</font>> color="black"]
  node15957 -> node15959 [label=<<font color="black">false</font>> color="black"]
  node15984 -> node15972 [ color="black"]
  node15961 -> node15962 [label=<<font color="black">true</font>> color="black"]
  node15961 -> node15963 [label=<<font color="black">false</font>> color="black"]
  node15963 -> node15964 [label=<<font color="black">true</font>> color="black"]
  node15963 -> node15965 [label=<<font color="black">false</font>> color="black"]
  node15965 -> node15966 [ color="black"]
  node15960 -> node15961 [ color="black"]
  node15956 -> node15957 [ color="black"]
  node15969 -> node15970 [ color="black"]
}
