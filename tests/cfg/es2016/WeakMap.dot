digraph {
  node14684 [shape=cds, label=<<font color="black">13:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node14662 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node14677 [shape=diamond, label=<<font color="black">(= iter undefined)</font>> color="black" fillcolor="white" style=filled]
  node14666 [shape=diamond, label=<<font color="black">(= iterable absent)</font>> color="black" fillcolor="white" style=filled]
  node14670 [shape=cds, label=<<font color="black">6:app __x1__ = (Get map &quot;set&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14668 [shape=diamond, label=<<font color="black">(|| (= iterable undefined) (= iterable null))</font>> color="black" fillcolor="white" style=filled]
  node14705 [shape=cds, label=<<font color="black">22:app __x15__ = (IsAbruptCompletion status)</font>> color="black" fillcolor="white" style=filled]
  node14685 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let nextItem = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14672 [shape=cds, label=<<font color="black">7:app __x2__ = (IsCallable adder)</font>> color="black" fillcolor="white" style=filled]
  node14689 [shape=cds, label=<<font color="black">16:app __x7__ = (IteratorClose iter error)</font>> color="black" fillcolor="white" style=filled]
  node14694 [shape=diamond, label=<<font color="black">__x9__</font>> color="black" fillcolor="white" style=filled]
  node14665 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let map = [? __x0__]</td></tr>
      <tr><td align="left">2:map.WeakMapData = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14669 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iter = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14701 [shape=cds, label=<<font color="black">app __x13__ = (IteratorClose iter v)</font>> color="black" fillcolor="white" style=filled]
  node14690 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14686 [shape=cds, label=<<font color="black">14:app __x6__ = (Type nextItem)</font>> color="black" fillcolor="white" style=filled]
  node14697 [shape=cds, label=<<font color="black">19:app __x11__ = (Get nextItem &quot;1&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14661 [shape=cds, label=<<font color="black">app iterable = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14698 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:let v = __x11__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14693 [shape=cds, label=<<font color="black">18:app __x9__ = (IsAbruptCompletion k)</font>> color="black" fillcolor="white" style=filled]
  node14680 [shape=cds, label=<<font color="black">11:app __x4__ = (IteratorStep iter)</font>> color="black" fillcolor="white" style=filled]
  node14681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let next = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14676 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let iter = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14687 [shape=diamond, label=<<font color="black">(! (= __x6__ Object))</font>> color="black" fillcolor="white" style=filled]
  node14708 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x16__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14702 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x13__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14667 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let iterable = undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14696 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return [? __x10__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14679 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node14664 [shape=cds, label=<<font color="black">1:app __x0__ = (OrdinaryCreateFromConstructor NewTarget INTRINSIC_WeakMapPrototype (new [&quot;WeakMapData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node14699 [shape=cds, label=<<font color="black">20:app __x12__ = (IsAbruptCompletion v)</font>> color="black" fillcolor="white" style=filled]
  node14706 [shape=diamond, label=<<font color="black">__x15__</font>> color="black" fillcolor="white" style=filled]
  node14682 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node14660 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14675 [shape=cds, label=<<font color="black">8:app __x3__ = (GetIterator iterable)</font>> color="black" fillcolor="white" style=filled]
  node14703 [shape=cds, label=<<font color="black">21:app __x14__ = (Call adder map (new [k.Value, v.Value]))</font>> color="black" fillcolor="white" style=filled]
  node14688 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let error = (new Completion(&quot;Type&quot; -&gt; CONST_throw, &quot;Value&quot; -&gt; ??? &quot;TypeError&quot;, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14692 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let k = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14671 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let adder = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14707 [shape=cds, label=<<font color="black">app __x16__ = (IteratorClose iter status)</font>> color="black" fillcolor="white" style=filled]
  node14678 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return map</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14673 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node14695 [shape=cds, label=<<font color="black">app __x10__ = (IteratorClose iter k)</font>> color="black" fillcolor="white" style=filled]
  node14663 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14700 [shape=diamond, label=<<font color="black">__x12__</font>> color="black" fillcolor="white" style=filled]
  node14659 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14704 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">21:let status = __x14__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14674 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14691 [shape=cds, label=<<font color="black">17:app __x8__ = (Get nextItem &quot;0&quot;)</font>> color="black" fillcolor="white" style=filled]
  node14675 -> node14676 [ color="black"]
  node14664 -> node14665 [ color="black"]
  node14673 -> node14674 [label=<<font color="black">true</font>> color="black"]
  node14673 -> node14675 [label=<<font color="black">false</font>> color="black"]
  node14702 -> node14703 [ color="black"]
  node14693 -> node14694 [ color="black"]
  node14697 -> node14698 [ color="black"]
  node14684 -> node14685 [ color="black"]
  node14685 -> node14686 [ color="black"]
  node14670 -> node14671 [ color="black"]
  node14667 -> node14668 [ color="black"]
  node14663 -> node14664 [ color="black"]
  node14688 -> node14689 [ color="black"]
  node14659 -> node14661 [ color="black"]
  node14672 -> node14673 [ color="black"]
  node14676 -> node14677 [ color="black"]
  node14701 -> node14702 [ color="black"]
  node14705 -> node14706 [ color="black"]
  node14681 -> node14682 [ color="black"]
  node14674 -> node14675 [ color="black"]
  node14666 -> node14667 [label=<<font color="black">true</font>> color="black"]
  node14666 -> node14668 [label=<<font color="black">false</font>> color="black"]
  node14683 -> node14684 [ color="black"]
  node14680 -> node14681 [ color="black"]
  node14703 -> node14704 [ color="black"]
  node14669 -> node14677 [ color="black"]
  node14692 -> node14693 [ color="black"]
  node14708 -> node14679 [ color="black"]
  node14704 -> node14705 [ color="black"]
  node14687 -> node14688 [label=<<font color="black">true</font>> color="black"]
  node14687 -> node14691 [label=<<font color="black">false</font>> color="black"]
  node14682 -> node14683 [label=<<font color="black">true</font>> color="black"]
  node14682 -> node14684 [label=<<font color="black">false</font>> color="black"]
  node14698 -> node14699 [ color="black"]
  node14696 -> node14697 [ color="black"]
  node14690 -> node14691 [ color="black"]
  node14689 -> node14690 [ color="black"]
  node14678 -> node14679 [ color="black"]
  node14671 -> node14672 [ color="black"]
  node14661 -> node14662 [ color="black"]
  node14662 -> node14663 [label=<<font color="black">true</font>> color="black"]
  node14662 -> node14664 [label=<<font color="black">false</font>> color="black"]
  node14700 -> node14701 [label=<<font color="black">true</font>> color="black"]
  node14700 -> node14703 [label=<<font color="black">false</font>> color="black"]
  node14706 -> node14707 [label=<<font color="black">true</font>> color="black"]
  node14706 -> node14679 [label=<<font color="black">false</font>> color="black"]
  node14686 -> node14687 [ color="black"]
  node14691 -> node14692 [ color="black"]
  node14699 -> node14700 [ color="black"]
  node14694 -> node14695 [label=<<font color="black">true</font>> color="black"]
  node14694 -> node14697 [label=<<font color="black">false</font>> color="black"]
  node14668 -> node14669 [label=<<font color="black">true</font>> color="black"]
  node14668 -> node14670 [label=<<font color="black">false</font>> color="black"]
  node14679 -> node14680 [label=<<font color="black">true</font>> color="black"]
  node14679 -> node14660 [label=<<font color="black">false</font>> color="black"]
  node14665 -> node14666 [ color="black"]
  node14707 -> node14708 [ color="black"]
  node14695 -> node14696 [ color="black"]
  node14677 -> node14678 [label=<<font color="black">true</font>> color="black"]
  node14677 -> node14679 [label=<<font color="black">false</font>> color="black"]
}
