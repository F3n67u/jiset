digraph {
  node15325 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15331 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = NewTarget</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let array = [? __x1__]</td></tr>
      <tr><td align="left">5:let k = 0i</td></tr>
      <tr><td align="left">6:??? &quot;Let id:{items} be a zero - origined List containing the argument items in order .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15338 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let Pk = [! __x2__]</td></tr>
      <tr><td align="left">9:let itemK = items[k]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15328 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let numberOfArgs = argumentsList.length</td></tr>
      <tr><td align="left">1:assert (! (&lt; numberOfArgs 2i))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let newTarget = GLOBAL_context.Function</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15339 [shape=cds, label=<<font color="black">10:app __x3__ = (CreateDataPropertyOrThrow array Pk itemK)</font>> color="black" fillcolor="white" style=filled]
  node15334 [shape=cds, label=<<font color="black">4:app __x1__ = (ArrayCreate numberOfArgs proto)</font>> color="black" fillcolor="white" style=filled]
  node15329 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15333 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let proto = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15332 [shape=cds, label=<<font color="black">3:app __x0__ = (GetPrototypeFromConstructor newTarget &quot;%Array.prototype%&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15337 [shape=cds, label=<<font color="black">8:app __x2__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node15327 [shape=cds, label=<<font color="black">app items = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15326 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15340 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[! __x3__]</td></tr>
      <tr><td align="left">11:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15341 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return array</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15336 [shape=diamond, label=<<font color="black">(&lt; k numberOfArgs)</font>> color="black" fillcolor="white" style=filled]
  node15340 -> node15336 [ color="black"]
  node15341 -> node15326 [ color="black"]
  node15338 -> node15339 [ color="black"]
  node15336 -> node15337 [label=<<font color="black">true</font>> color="black"]
  node15336 -> node15341 [label=<<font color="black">false</font>> color="black"]
  node15327 -> node15328 [ color="black"]
  node15335 -> node15336 [ color="black"]
  node15331 -> node15332 [ color="black"]
  node15334 -> node15335 [ color="black"]
  node15339 -> node15340 [ color="black"]
  node15330 -> node15332 [ color="black"]
  node15328 -> node15329 [ color="black"]
  node15333 -> node15334 [ color="black"]
  node15337 -> node15338 [ color="black"]
  node15332 -> node15333 [ color="black"]
  node15329 -> node15330 [label=<<font color="black">true</font>> color="black"]
  node15329 -> node15331 [label=<<font color="black">false</font>> color="black"]
  node15325 -> node15327 [ color="black"]
}
