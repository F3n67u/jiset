digraph {
  node9458 [shape=cds, label=<<font color="black">1:app __x1__ = (OrdinaryCreateFromConstructor functionObject &quot;%AsyncGeneratorFunction.prototype.prototype%&quot; (new [&quot;AsyncGeneratorState&quot;, &quot;AsyncGeneratorContext&quot;, &quot;AsyncGeneratorQueue&quot;, &quot;GeneratorBrand&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node9456 [shape=cds, label=<<font color="black">0:app __x0__ = (FunctionDeclarationInstantiation functionObject argumentsList)</font>> color="black" fillcolor="white" style=filled]
  node9460 [shape=cds, label=<<font color="black">3:app __x2__ = (AsyncGeneratorStart generator FunctionBody)</font>> color="black" fillcolor="white" style=filled]
  node9457 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9455 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9461 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[! __x2__]</td></tr>
      <tr><td align="left">4:return (new Completion(&quot;Type&quot; -&gt; CONST_return, &quot;Value&quot; -&gt; generator, &quot;Target&quot; -&gt; CONST_empty))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9454 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node9459 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let generator = [? __x1__]</td></tr>
      <tr><td align="left">2:generator.GeneratorBrand = CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9456 -> node9457 [ color="black"]
  node9459 -> node9460 [ color="black"]
  node9457 -> node9458 [ color="black"]
  node9460 -> node9461 [ color="black"]
  node9454 -> node9456 [ color="black"]
  node9461 -> node9455 [ color="black"]
  node9458 -> node9459 [ color="black"]
}
