digraph {
  node18393 [shape=cds, label=<<font color="black">app iteratorRecord = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node18416 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18397 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18420 [shape=cds, label=<<font color="black">15:app __x8__ = (Invoke nextPromise &quot;then&quot; (new [resultCapability.Resolve, resultCapability.Reject]))</font>> color="black" fillcolor="white" style=filled]
  node18407 [shape=diamond, label=<<font color="black">__x4__</font>> color="black" fillcolor="white" style=filled]
  node18411 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:iteratorRecord.Done = true</td></tr>
      <tr><td align="left">10:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18415 [shape=diamond, label=<<font color="black">__x6__</font>> color="black" fillcolor="white" style=filled]
  node18403 [shape=diamond, label=<<font color="black">true</font>> color="black" fillcolor="white" style=filled]
  node18418 [shape=cds, label=<<font color="black">14:app __x7__ = (Call promiseResolve constructor (new [nextValue]))</font>> color="black" fillcolor="white" style=filled]
  node18399 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseResolve = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18414 [shape=cds, label=<<font color="black">12:app __x6__ = (IsAbruptCompletion nextValue)</font>> color="black" fillcolor="white" style=filled]
  node18395 [shape=cds, label=<<font color="black">app resultCapability = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node18405 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let next = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18394 [shape=cds, label=<<font color="black">app constructor = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18409 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:[? next]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18401 [shape=diamond, label=<<font color="black">(= [! __x2__] false)</font>> color="black" fillcolor="white" style=filled]
  node18391 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18406 [shape=cds, label=<<font color="black">6:app __x4__ = (IsAbruptCompletion next)</font>> color="black" fillcolor="white" style=filled]
  node18417 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? nextValue]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18392 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node18412 [shape=cds, label=<<font color="black">11:app __x5__ = (IteratorValue next)</font>> color="black" fillcolor="white" style=filled]
  node18400 [shape=cds, label=<<font color="black">3:app __x2__ = (IsCallable promiseResolve)</font>> color="black" fillcolor="white" style=filled]
  node18402 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18404 [shape=cds, label=<<font color="black">5:app __x3__ = (IteratorStep iteratorRecord)</font>> color="black" fillcolor="white" style=filled]
  node18421 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:[? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18396 [shape=cds, label=<<font color="black">0:app __x0__ = (IsConstructor constructor)</font>> color="black" fillcolor="white" style=filled]
  node18408 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">iteratorRecord.Done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18419 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:let nextPromise = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18410 [shape=diamond, label=<<font color="black">(= next false)</font>> color="black" fillcolor="white" style=filled]
  node18413 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let nextValue = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node18398 [shape=cds, label=<<font color="black">2:app __x1__ = (Get constructor &quot;resolve&quot;)</font>> color="black" fillcolor="white" style=filled]
  node18396 -> node18397 [ color="black"]
  node18416 -> node18417 [ color="black"]
  node18402 -> node18403 [ color="black"]
  node18411 -> node18412 [ color="black"]
  node18414 -> node18415 [ color="black"]
  node18408 -> node18409 [ color="black"]
  node18412 -> node18413 [ color="black"]
  node18405 -> node18406 [ color="black"]
  node18400 -> node18401 [ color="black"]
  node18401 -> node18402 [label=<<font color="black">true</font>> color="black"]
  node18401 -> node18403 [label=<<font color="black">false</font>> color="black"]
  node18407 -> node18408 [label=<<font color="black">true</font>> color="black"]
  node18407 -> node18409 [label=<<font color="black">false</font>> color="black"]
  node18410 -> node18411 [label=<<font color="black">true</font>> color="black"]
  node18410 -> node18412 [label=<<font color="black">false</font>> color="black"]
  node18406 -> node18407 [ color="black"]
  node18421 -> node18403 [ color="black"]
  node18415 -> node18416 [label=<<font color="black">true</font>> color="black"]
  node18415 -> node18417 [label=<<font color="black">false</font>> color="black"]
  node18393 -> node18394 [ color="black"]
  node18395 -> node18396 [ color="black"]
  node18418 -> node18419 [ color="black"]
  node18413 -> node18414 [ color="black"]
  node18398 -> node18399 [ color="black"]
  node18420 -> node18421 [ color="black"]
  node18403 -> node18404 [label=<<font color="black">true</font>> color="black"]
  node18403 -> node18392 [label=<<font color="black">false</font>> color="black"]
  node18399 -> node18400 [ color="black"]
  node18391 -> node18393 [ color="black"]
  node18409 -> node18410 [ color="black"]
  node18417 -> node18418 [ color="black"]
  node18404 -> node18405 [ color="black"]
  node18397 -> node18398 [ color="black"]
  node18394 -> node18395 [ color="black"]
  node18419 -> node18420 [ color="black"]
}
