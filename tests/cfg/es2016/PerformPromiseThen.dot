digraph {
  node15889 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let value = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15885 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let fulfillReaction = (new PromiseReaction(&quot;Capabilities&quot; -&gt; resultCapability, &quot;Handler&quot; -&gt; onFulfilled))</td></tr>
      <tr><td align="left">7:let rejectReaction = (new PromiseReaction(&quot;Capabilities&quot; -&gt; resultCapability, &quot;Handler&quot; -&gt; onRejected))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15881 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let onFulfilled = &quot;Identity&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15892 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:assert (= promise.PromiseState &quot;rejected&quot;)</td></tr>
      <tr><td align="left">16:let reason = promise.PromiseResult</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15886 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;pending&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15896 [shape=cds, label=<<font color="black">18:app __x5__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [rejectReaction, reason]))</font>> color="black" fillcolor="white" style=filled]
  node15877 [shape=cds, label=<<font color="black">0:app __x0__ = (IsPromise promise)</font>> color="black" fillcolor="white" style=filled]
  node15898 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:promise.PromiseIsHandled = true</td></tr>
      <tr><td align="left">20:return resultCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15895 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15890 [shape=cds, label=<<font color="black">13:app __x3__ = (EnqueueJob &quot;PromiseJobs&quot; PromiseReactionJob (new [fulfillReaction, value]))</font>> color="black" fillcolor="white" style=filled]
  node15875 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15894 [shape=cds, label=<<font color="black">app __x4__ = (HostPromiseRejectionTracker promise &quot;handle&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15878 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15893 [shape=diamond, label=<<font color="black">(= promise.PromiseIsHandled false)</font>> color="black" fillcolor="white" style=filled]
  node15882 [shape=cds, label=<<font color="black">4:app __x2__ = (IsCallable onRejected)</font>> color="black" fillcolor="white" style=filled]
  node15897 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:__x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15876 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15887 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:append fulfillReaction -&gt; promise.PromiseFulfillReactions</td></tr>
      <tr><td align="left">10:append rejectReaction -&gt; promise.PromiseRejectReactions</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15880 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node15891 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:__x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15883 [shape=diamond, label=<<font color="black">(= __x2__ false)</font>> color="black" fillcolor="white" style=filled]
  node15888 [shape=diamond, label=<<font color="black">(= promise.PromiseState &quot;fulfilled&quot;)</font>> color="black" fillcolor="white" style=filled]
  node15884 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let onRejected = &quot;Thrower&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15879 [shape=cds, label=<<font color="black">2:app __x1__ = (IsCallable onFulfilled)</font>> color="black" fillcolor="white" style=filled]
  node15893 -> node15894 [label=<<font color="black">true</font>> color="black"]
  node15893 -> node15896 [label=<<font color="black">false</font>> color="black"]
  node15898 -> node15876 [ color="black"]
  node15896 -> node15897 [ color="black"]
  node15891 -> node15898 [ color="black"]
  node15897 -> node15898 [ color="black"]
  node15877 -> node15878 [ color="black"]
  node15878 -> node15879 [ color="black"]
  node15895 -> node15896 [ color="black"]
  node15894 -> node15895 [ color="black"]
  node15882 -> node15883 [ color="black"]
  node15880 -> node15881 [label=<<font color="black">true</font>> color="black"]
  node15880 -> node15882 [label=<<font color="black">false</font>> color="black"]
  node15886 -> node15887 [label=<<font color="black">true</font>> color="black"]
  node15886 -> node15888 [label=<<font color="black">false</font>> color="black"]
  node15879 -> node15880 [ color="black"]
  node15892 -> node15893 [ color="black"]
  node15883 -> node15884 [label=<<font color="black">true</font>> color="black"]
  node15883 -> node15885 [label=<<font color="black">false</font>> color="black"]
  node15884 -> node15885 [ color="black"]
  node15875 -> node15877 [ color="black"]
  node15887 -> node15898 [ color="black"]
  node15881 -> node15882 [ color="black"]
  node15890 -> node15891 [ color="black"]
  node15885 -> node15886 [ color="black"]
  node15888 -> node15889 [label=<<font color="black">true</font>> color="black"]
  node15888 -> node15892 [label=<<font color="black">false</font>> color="black"]
  node15889 -> node15890 [ color="black"]
}
