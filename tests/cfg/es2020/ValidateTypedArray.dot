digraph {
  node16459 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireInternalSlot O &quot;TypedArrayName&quot;)</font>> color="black" fillcolor="white" style=filled]
  node16456 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16463 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16460 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:[? __x0__]</td></tr>
      <tr><td align="left">1:assert (! (= O.ViewedArrayBuffer absent))</td></tr>
      <tr><td align="left">2:let buffer = O.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16464 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return buffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16457 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16461 [shape=cds, label=<<font color="black">3:app __x1__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node16458 [shape=cds, label=<<font color="black">app O = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16462 [shape=diamond, label=<<font color="black">(= __x1__ true)</font>> color="black" fillcolor="white" style=filled]
  node16460 -> node16461 [ color="black"]
  node16464 -> node16457 [ color="black"]
  node16456 -> node16458 [ color="black"]
  node16462 -> node16463 [label=<<font color="black">true</font>> color="black"]
  node16462 -> node16464 [label=<<font color="black">false</font>> color="black"]
  node16458 -> node16459 [ color="black"]
  node16463 -> node16464 [ color="black"]
  node16459 -> node16460 [ color="black"]
  node16461 -> node16462 [ color="black"]
}
