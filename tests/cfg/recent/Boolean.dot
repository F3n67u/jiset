digraph {
  node12388 [shape=cds, label=<<font color="black">0:app __x0__ = (ToBoolean value)</font>> color="black" fillcolor="white" style=filled]
  node12392 [shape=cds, label=<<font color="black">2:app __x1__ = (OrdinaryCreateFromConstructor NewTarget &quot;%Boolean.prototype%&quot; (new [&quot;BooleanData&quot;]))</font>> color="black" fillcolor="white" style=filled]
  node12385 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12393 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let O = [? __x1__]</td></tr>
      <tr><td align="left">3:O.BooleanData = b</td></tr>
      <tr><td align="left">4:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12389 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let b = [! __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12386 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12390 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node12387 [shape=cds, label=<<font color="black">app value = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12391 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return b</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12391 -> node12392 [ color="black"]
  node12393 -> node12386 [ color="black"]
  node12385 -> node12387 [ color="black"]
  node12390 -> node12391 [label=<<font color="black">true</font>> color="black"]
  node12390 -> node12392 [label=<<font color="black">false</font>> color="black"]
  node12392 -> node12393 [ color="black"]
  node12389 -> node12390 [ color="black"]
  node12387 -> node12388 [ color="black"]
  node12388 -> node12389 [ color="black"]
}
