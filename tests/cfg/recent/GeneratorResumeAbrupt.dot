digraph {
  node19494 [shape=diamond, label=<<font color="black">(= state CONST_completed)</font>> color="black" fillcolor="white" style=filled]
  node19490 [shape=cds, label=<<font color="black">0:app __x0__ = (GeneratorValidate generator generatorBrand)</font>> color="black" fillcolor="white" style=filled]
  node19495 [shape=diamond, label=<<font color="black">(= abruptCompletion.Type CONST_return)</font>> color="black" fillcolor="white" style=filled]
  node19497 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:return __x1__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19488 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19499 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:assert (= state CONST_suspendedYield)</td></tr>
      <tr><td align="left">10:let genContext = generator.GeneratorContext</td></tr>
      <tr><td align="left">11:let methodContext = GLOBAL_context</td></tr>
      <tr><td align="left">12:GLOBAL_context = null</td></tr>
      <tr><td align="left">13:generator.GeneratorState = CONST_executing</td></tr>
      <tr><td align="left">14:append genContext -&gt; GLOBAL_executionStack</td></tr>
      <tr><td align="left">14:GLOBAL_context = GLOBAL_executionStack[(- GLOBAL_executionStack.length 1i)]</td></tr>
      <tr><td align="left">15:??? &quot;Resume the suspended evaluation of id:{genContext} using id:{abruptCompletion} as the result of the operation that suspended it . Let id:{result} be the completion record returned by the resumed computation .&quot;</td></tr>
      <tr><td align="left">17:return result</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19492 [shape=diamond, label=<<font color="black">(= state CONST_suspendedStart)</font>> color="black" fillcolor="white" style=filled]
  node19493 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:generator.GeneratorState = CONST_completed</td></tr>
      <tr><td align="left">4:state = CONST_completed</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19489 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node19496 [shape=cds, label=<<font color="black">7:app __x1__ = (CreateIterResultObject abruptCompletion.Value true)</font>> color="black" fillcolor="white" style=filled]
  node19498 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:return abruptCompletion</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19491 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let state = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19490 -> node19491 [ color="black"]
  node19488 -> node19490 [ color="black"]
  node19496 -> node19497 [ color="black"]
  node19491 -> node19492 [ color="black"]
  node19494 -> node19495 [label=<<font color="black">true</font>> color="black"]
  node19494 -> node19499 [label=<<font color="black">false</font>> color="black"]
  node19495 -> node19496 [label=<<font color="black">true</font>> color="black"]
  node19495 -> node19498 [label=<<font color="black">false</font>> color="black"]
  node19498 -> node19499 [ color="black"]
  node19493 -> node19494 [ color="black"]
  node19499 -> node19489 [ color="black"]
  node19492 -> node19493 [label=<<font color="black">true</font>> color="black"]
  node19492 -> node19494 [label=<<font color="black">false</font>> color="black"]
  node19497 -> node19498 [ color="black"]
}
