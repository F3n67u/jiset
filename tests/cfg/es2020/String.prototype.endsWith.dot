digraph {
  node13690 [shape=cds, label=<<font color="black">7:app __x5__ = (max pos 0i)</font>> color="black" fillcolor="white" style=filled]
  node13679 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13683 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13676 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node13682 [shape=diamond, label=<<font color="black">(= isRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node13685 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let searchStr = [? __x3__]</td></tr>
      <tr><td align="left">5:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13673 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13674 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node13688 [shape=cds, label=<<font color="black">app __x4__ = (ToInteger endPosition)</font>> color="black" fillcolor="white" style=filled]
  node13691 [shape=cds, label=<<font color="black">7:app __x6__ = (min __x5__ len)</font>> color="black" fillcolor="white" style=filled]
  node13695 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:??? &quot;If the sequence of code units of id:{S} starting at id:{start} of length id:{searchLength} is the same as the full code unit sequence of id:{searchStr} , return value:{true} .&quot;</td></tr>
      <tr><td align="left">12:??? &quot;Otherwise , return value:{false} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13684 [shape=cds, label=<<font color="black">4:app __x3__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node13672 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13687 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13675 [shape=cds, label=<<font color="black">app endPosition = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node13692 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let end = __x6__</td></tr>
      <tr><td align="left">8:let searchLength = searchStr.length</td></tr>
      <tr><td align="left">9:let start = (- end searchLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13686 [shape=diamond, label=<<font color="black">(= endPosition undefined)</font>> color="black" fillcolor="white" style=filled]
  node13681 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isRegExp = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13680 [shape=cds, label=<<font color="black">2:app __x2__ = (IsRegExp searchString)</font>> color="black" fillcolor="white" style=filled]
  node13693 [shape=diamond, label=<<font color="black">(&lt; start 0i)</font>> color="black" fillcolor="white" style=filled]
  node13677 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13694 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13678 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node13689 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13692 -> node13693 [ color="black"]
  node13675 -> node13676 [ color="black"]
  node13681 -> node13682 [ color="black"]
  node13691 -> node13692 [ color="black"]
  node13688 -> node13689 [ color="black"]
  node13686 -> node13687 [label=<<font color="black">true</font>> color="black"]
  node13686 -> node13688 [label=<<font color="black">false</font>> color="black"]
  node13695 -> node13673 [ color="black"]
  node13677 -> node13678 [ color="black"]
  node13679 -> node13680 [ color="black"]
  node13687 -> node13690 [ color="black"]
  node13680 -> node13681 [ color="black"]
  node13689 -> node13690 [ color="black"]
  node13676 -> node13677 [ color="black"]
  node13694 -> node13695 [ color="black"]
  node13685 -> node13686 [ color="black"]
  node13683 -> node13684 [ color="black"]
  node13678 -> node13679 [ color="black"]
  node13690 -> node13691 [ color="black"]
  node13674 -> node13675 [ color="black"]
  node13672 -> node13674 [ color="black"]
  node13693 -> node13694 [label=<<font color="black">true</font>> color="black"]
  node13693 -> node13695 [label=<<font color="black">false</font>> color="black"]
  node13684 -> node13685 [ color="black"]
  node13682 -> node13683 [label=<<font color="black">true</font>> color="black"]
  node13682 -> node13684 [label=<<font color="black">false</font>> color="black"]
}
