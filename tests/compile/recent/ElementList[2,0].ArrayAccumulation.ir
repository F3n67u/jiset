{
  [0] access __x0__ = (ElementList "ArrayAccumulation")
  [0] app __x1__ = (__x0__ array nextIndex)
  [0] nextIndex = __x1__
  [1] if (is-completion nextIndex) if (= nextIndex.Type CONST_normal) nextIndex = nextIndex.Value else return nextIndex else [2] {}
  [1] nextIndex
  [2] if (! (= Elision absent)) {
    [3] access __x2__ = (Elision "ArrayAccumulation")
    [3] app __x3__ = (__x2__ array nextIndex)
    [3] nextIndex = __x3__
    [4] if (is-completion nextIndex) if (= nextIndex.Type CONST_normal) nextIndex = nextIndex.Value else return nextIndex else [2] {}
    [4] nextIndex
  } else [2] {}
  [5] access __x4__ = (AssignmentExpression "Evaluation")
  [5] let initResult = __x4__
  [6] app __x5__ = (GetValue initResult)
  [6] if (is-completion __x5__) if (= __x5__.Type CONST_normal) __x5__ = __x5__.Value else return __x5__ else [2] {}
  [6] let initValue = __x5__
  [7] ??? "Let id:{created} be ! CreateDataPropertyOrThrow ( id:{array} , ! ToString ( ùîΩ ( id:{nextIndex} ) ) , id:{initValue} ) ."
  [8] app __x6__ = (WrapCompletion (+ nextIndex 1i))
  [8] return __x6__
}