{
  if (= NewTarget undefined) {
    ??? "Let id:{now} be the time value ( UTC ) identifying the current time ."
    app __x0__ = (ToDateString now)
    return __x0__
  } else {}
  let numberOfArgs = values.length
  if (== numberOfArgs 0i) ??? "Let id:{dv} be the time value ( UTC ) identifying the current time ." else if (== numberOfArgs 1i) {
    let value = values[0i]
    app __x1__ = (Type value)
    if (&& (= __x1__ Object) (! (= value.DateValue absent))) {
      app __x2__ = (thisTimeValue value)
      let tv = [! __x2__]
    } else {
      app __x3__ = (ToPrimitive value)
      let v = [? __x3__]
      app __x4__ = (Type v)
      if (= __x4__ String) ??? "Let id:{tv} be the result of parsing id:{v} as a date , in exactly the same manner as for the code:{parse} method ( link:{unhandled: sec-date.parse} ) ." else {
        app __x5__ = (ToNumber v)
        let tv = [? __x5__]
      }
    }
    app __x6__ = (TimeClip tv)
    let dv = __x6__
  } else {
    assert (! (< numberOfArgs 2i))
    app __x7__ = (ToNumber values[0i])
    let y = [? __x7__]
    app __x8__ = (ToNumber values[1i])
    let m = [? __x8__]
    if (< 2i numberOfArgs) {
      app __x9__ = (ToNumber values[2i])
      let dt = [? __x9__]
    } else let dt = 1i
    if (< 3i numberOfArgs) {
      app __x10__ = (ToNumber values[3i])
      let h = [? __x10__]
    } else let h = 0i
    if (< 4i numberOfArgs) {
      app __x11__ = (ToNumber values[4i])
      let min = [? __x11__]
    } else let min = 0i
    if (< 5i numberOfArgs) {
      app __x12__ = (ToNumber values[5i])
      let s = [? __x12__]
    } else let s = 0i
    if (< 6i numberOfArgs) {
      app __x13__ = (ToNumber values[6i])
      let milli = [? __x13__]
    } else let milli = 0i
    if (= y NaN) let yr = NaN else {
      app __x14__ = (ToIntegerOrInfinity y)
      let yi = [! __x14__]
      if (&& (! (< yi 0i)) (! (< 99i yi))) let yr = (+ 1900i yi) else let yr = y
    }
    app __x15__ = (MakeDay yr m dt)
    app __x16__ = (MakeTime h min s milli)
    app __x17__ = (MakeDate __x15__ __x16__)
    let finalDate = __x17__
    app __x18__ = (UTC finalDate)
    app __x19__ = (TimeClip __x18__)
    let dv = __x19__
  }
  app __x20__ = (OrdinaryCreateFromConstructor NewTarget "%Date.prototype%" (new ["DateValue"]))
  let O = [? __x20__]
  O.DateValue = dv
  return O
}