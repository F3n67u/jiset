digraph {
  node17072 [shape=cds, label=<<font color="black">16:app __x5__ = (RawBytesToNumeric type rawValue isLittleEndian)</font>> color="black" fillcolor="white" style=filled]
  node17068 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:??? &quot;Let id:{rawValue} be a List of length id:{elementSize} of nondeterministically chosen byte values .&quot;</td></tr>
      <tr><td align="left">11:let readEvent = (new ReadSharedMemory(&quot;Order&quot; -&gt; order, &quot;NoTear&quot; -&gt; noTear, &quot;Block&quot; -&gt; block, &quot;ByteIndex&quot; -&gt; byteIndex, &quot;ElementSize&quot; -&gt; elementSize))</td></tr>
      <tr><td align="left">12:append readEvent -&gt; eventList</td></tr>
      <tr><td align="left">13:append (new ChosenValueRecord(&quot;Event&quot; -&gt; readEvent, &quot;ChosenValue&quot; -&gt; rawValue)) -&gt; execution.ChosenValues</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17053 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17058 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:assert (= [! __x1__] true)</td></tr>
      <tr><td align="left">3:let block = arrayBuffer.ArrayBufferData</td></tr>
      <tr><td align="left">4:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for Element Type id:{type} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17061 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let execution = GLOBAL_agent.CandidateExecution</td></tr>
      <tr><td align="left">7:??? &quot;Let id:{eventList} be the [ [ EventList ] ] field of the element in id:{execution} . [ [ EventsRecords ] ] whose [ [ AgentSignifier ] ] is AgentSignifier ( ) .&quot;</td></tr>
      <tr><td align="left">8:let __x3__ = true</td></tr>
      <tr><td align="left">8:__x3__ = (= isTypedArray true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17065 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node17066 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17070 [shape=diamond, label=<<font color="black">(= isLittleEndian absent)</font>> color="black" fillcolor="white" style=filled]
  node17073 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:return __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17063 [shape=cds, label=<<font color="black">app __x4__ = (IsNoTearConfiguration type order)</font>> color="black" fillcolor="white" style=filled]
  node17059 [shape=cds, label=<<font color="black">5:app __x2__ = (IsSharedArrayBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17054 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node17064 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x3__ = (= __x4__ true)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17069 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:??? &quot;Else , let id:{rawValue} be a List of id:{elementSize} containing , in order , the id:{elementSize} sequence of bytes starting with id:{block} [ id:{byteIndex} ] .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17060 [shape=diamond, label=<<font color="black">(= __x2__ true)</font>> color="black" fillcolor="white" style=filled]
  node17055 [shape=cds, label=<<font color="black">0:app __x0__ = (IsDetachedBuffer arrayBuffer)</font>> color="black" fillcolor="white" style=filled]
  node17057 [shape=cds, label=<<font color="black">2:app __x1__ = (IsNonNegativeInteger byteIndex)</font>> color="black" fillcolor="white" style=filled]
  node17067 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let noTear = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17056 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ false)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17062 [shape=diamond, label=<<font color="black">__x3__</font>> color="black" fillcolor="white" style=filled]
  node17071 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">isLittleEndian = GLOBAL_agent.LittleEndian</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node17072 -> node17073 [ color="black"]
  node17059 -> node17060 [ color="black"]
  node17058 -> node17059 [ color="black"]
  node17065 -> node17066 [label=<<font color="black">true</font>> color="black"]
  node17065 -> node17067 [label=<<font color="black">false</font>> color="black"]
  node17063 -> node17064 [ color="black"]
  node17055 -> node17056 [ color="black"]
  node17053 -> node17055 [ color="black"]
  node17062 -> node17063 [label=<<font color="black">true</font>> color="black"]
  node17062 -> node17065 [label=<<font color="black">false</font>> color="black"]
  node17073 -> node17054 [ color="black"]
  node17066 -> node17068 [ color="black"]
  node17056 -> node17057 [ color="black"]
  node17064 -> node17065 [ color="black"]
  node17071 -> node17072 [ color="black"]
  node17061 -> node17062 [ color="black"]
  node17057 -> node17058 [ color="black"]
  node17068 -> node17069 [ color="black"]
  node17070 -> node17071 [label=<<font color="black">true</font>> color="black"]
  node17070 -> node17072 [label=<<font color="black">false</font>> color="black"]
  node17067 -> node17068 [ color="black"]
  node17060 -> node17061 [label=<<font color="black">true</font>> color="black"]
  node17060 -> node17069 [label=<<font color="black">false</font>> color="black"]
  node17069 -> node17070 [ color="black"]
}
