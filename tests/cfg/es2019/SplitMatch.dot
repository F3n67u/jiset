digraph {
  node13283 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13287 [shape=diamond, label=<<font color="black">(&lt; s (+ q r))</font>> color="black" fillcolor="white" style=filled]
  node13286 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:assert (= __x0__ String)</td></tr>
      <tr><td align="left">1:let r = R.length</td></tr>
      <tr><td align="left">2:let s = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13285 [shape=cds, label=<<font color="black">0:app __x0__ = (Type R)</font>> color="black" fillcolor="white" style=filled]
  node13284 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node13288 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13289 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;If there exists an integer id:{i} between 0 ( inclusive ) and id:{r} ( exclusive ) such that the code unit at index id:{q} + id:{i} within id:{S} is different from the code unit at index id:{i} within id:{R} , return value:{false} .&quot;</td></tr>
      <tr><td align="left">5:return (+ q r)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13287 -> node13288 [label=<<font color="black">true</font>> color="black"]
  node13287 -> node13289 [label=<<font color="black">false</font>> color="black"]
  node13285 -> node13286 [ color="black"]
  node13288 -> node13289 [ color="black"]
  node13283 -> node13285 [ color="black"]
  node13286 -> node13287 [ color="black"]
  node13289 -> node13284 [ color="black"]
}
