digraph {
  node5561 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let lref = __x0__</td></tr>
      <tr><td align="left">2:[? lref]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5565 [shape=cds, label=<<font color="black">4:access __x3__ = (AssignmentExpression &quot;NamedEvaluation&quot; lref.ReferencedName)</font>> color="black" fillcolor="white" style=filled]
  node5558 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5572 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x6__]</td></tr>
      <tr><td align="left">9:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5562 [shape=cds, label=<<font color="black">5:app __x1__ = (IsAnonymousFunctionDefinition AssignmentExpression)</font>> color="black" fillcolor="white" style=filled]
  node5579 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:[? __x9__]</td></tr>
      <tr><td align="left">14:return rval</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5566 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let rval = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5577 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let rval = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5576 [shape=cds, label=<<font color="black">12:app __x8__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5563 [shape=cds, label=<<font color="black">5:access __x2__ = (LeftHandSideExpression &quot;IsIdentifierRef&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5575 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:let rref = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5570 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let rval = [? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5560 [shape=cds, label=<<font color="black">1:access __x0__ = (LeftHandSideExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5573 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let assignmentPattern = (parse-syntax LeftHandSideExpression &quot;AssignmentPattern&quot; (new []))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5568 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let rref = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node5557 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5571 [shape=cds, label=<<font color="black">8:app __x6__ = (PutValue lref rval)</font>> color="black" fillcolor="white" style=filled]
  node5567 [shape=cds, label=<<font color="black">6:access __x4__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5578 [shape=cds, label=<<font color="black">13:access __x9__ = (assignmentPattern &quot;DestructuringAssignmentEvaluation&quot; rval)</font>> color="black" fillcolor="white" style=filled]
  node5559 [shape=diamond, label=<<font color="black">(! (|| (is-instance-of LeftHandSideExpression ObjectLiteral) (is-instance-of LeftHandSideExpression ArrayLiteral)))</font>> color="black" fillcolor="white" style=filled]
  node5564 [shape=diamond, label=<<font color="black">(&amp;&amp; (= __x1__ true) (= __x2__ true))</font>> color="black" fillcolor="white" style=filled]
  node5569 [shape=cds, label=<<font color="black">7:app __x5__ = (GetValue rref)</font>> color="black" fillcolor="white" style=filled]
  node5574 [shape=cds, label=<<font color="black">11:access __x7__ = (AssignmentExpression &quot;Evaluation&quot;)</font>> color="black" fillcolor="white" style=filled]
  node5574 -> node5575 [ color="black"]
  node5571 -> node5572 [ color="black"]
  node5561 -> node5562 [ color="black"]
  node5559 -> node5560 [label=<<font color="black">true</font>> color="black"]
  node5559 -> node5573 [label=<<font color="black">false</font>> color="black"]
  node5579 -> node5558 [ color="black"]
  node5576 -> node5577 [ color="black"]
  node5575 -> node5576 [ color="black"]
  node5573 -> node5574 [ color="black"]
  node5577 -> node5578 [ color="black"]
  node5560 -> node5561 [ color="black"]
  node5566 -> node5571 [ color="black"]
  node5557 -> node5559 [ color="black"]
  node5563 -> node5564 [ color="black"]
  node5565 -> node5566 [ color="black"]
  node5570 -> node5571 [ color="black"]
  node5578 -> node5579 [ color="black"]
  node5564 -> node5565 [label=<<font color="black">true</font>> color="black"]
  node5564 -> node5567 [label=<<font color="black">false</font>> color="black"]
  node5562 -> node5563 [ color="black"]
  node5567 -> node5568 [ color="black"]
  node5572 -> node5573 [ color="black"]
  node5569 -> node5570 [ color="black"]
  node5568 -> node5569 [ color="black"]
}
