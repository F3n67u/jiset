digraph {
  node16630 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16636 [shape=cds, label=<<font color="black">2:app __x1__ = (NewPromiseCapability C)</font>> color="black" fillcolor="white" style=filled]
  node16633 [shape=cds, label=<<font color="black">1:app __x0__ = (Type C)</font>> color="black" fillcolor="white" style=filled]
  node16629 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16637 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let promiseCapability = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16634 [shape=diamond, label=<<font color="black">(! (= __x0__ Object))</font>> color="black" fillcolor="white" style=filled]
  node16632 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let C = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16638 [shape=cds, label=<<font color="black">3:app __x2__ = (Call promiseCapability.Reject undefined (new [r]))</font>> color="black" fillcolor="white" style=filled]
  node16631 [shape=cds, label=<<font color="black">app r = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node16635 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16639 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? __x2__]</td></tr>
      <tr><td align="left">4:return promiseCapability.Promise</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16629 -> node16631 [ color="black"]
  node16631 -> node16632 [ color="black"]
  node16637 -> node16638 [ color="black"]
  node16634 -> node16635 [label=<<font color="black">true</font>> color="black"]
  node16634 -> node16636 [label=<<font color="black">false</font>> color="black"]
  node16636 -> node16637 [ color="black"]
  node16635 -> node16636 [ color="black"]
  node16633 -> node16634 [ color="black"]
  node16638 -> node16639 [ color="black"]
  node16632 -> node16633 [ color="black"]
  node16639 -> node16630 [ color="black"]
}
