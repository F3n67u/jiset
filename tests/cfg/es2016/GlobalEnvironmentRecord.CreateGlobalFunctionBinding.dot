digraph {
  node1322 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1327 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let desc = (new PropertyDescriptor(&quot;Value&quot; -&gt; V, &quot;Writable&quot; -&gt; true, &quot;Enumerable&quot; -&gt; true, &quot;Configurable&quot; -&gt; D))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1334 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">append N -&gt; varDeclaredNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1328 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let desc = (new PropertyDescriptor(&quot;Value&quot; -&gt; V))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1329 [shape=cds, label=<<font color="black">8:app __x1__ = (DefinePropertyOrThrow globalObject N desc)</font>> color="black" fillcolor="white" style=filled]
  node1324 [shape=cds, label=<<font color="black">3:app __x0__ = (globalObject.GetOwnProperty globalObject N)</font>> color="black" fillcolor="white" style=filled]
  node1333 [shape=diamond, label=<<font color="black">(! (contains varDeclaredNames N))</font>> color="black" fillcolor="white" style=filled]
  node1332 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x2__]</td></tr>
      <tr><td align="left">11:let varDeclaredNames = envRec.VarNames</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1325 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let existingProp = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1321 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node1326 [shape=diamond, label=<<font color="black">(|| (= existingProp undefined) (= existingProp.Configurable true))</font>> color="black" fillcolor="white" style=filled]
  node1335 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:return CONST_empty</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1331 [shape=cds, label=<<font color="black">10:app __x2__ = (Set globalObject N V false)</font>> color="black" fillcolor="white" style=filled]
  node1330 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:[? __x1__]</td></tr>
      <tr><td align="left">9:??? &quot;Record that the binding for id:{N} in id:{ObjRec} has been initialized .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1323 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let ObjRec = envRec.ObjectRecord</td></tr>
      <tr><td align="left">2:let globalObject = ObjRec.BindingObject</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node1331 -> node1332 [ color="black"]
  node1330 -> node1331 [ color="black"]
  node1323 -> node1324 [ color="black"]
  node1321 -> node1323 [ color="black"]
  node1326 -> node1327 [label=<<font color="black">true</font>> color="black"]
  node1326 -> node1328 [label=<<font color="black">false</font>> color="black"]
  node1328 -> node1329 [ color="black"]
  node1327 -> node1329 [ color="black"]
  node1329 -> node1330 [ color="black"]
  node1334 -> node1335 [ color="black"]
  node1335 -> node1322 [ color="black"]
  node1332 -> node1333 [ color="black"]
  node1325 -> node1326 [ color="black"]
  node1324 -> node1325 [ color="black"]
  node1333 -> node1334 [label=<<font color="black">true</font>> color="black"]
  node1333 -> node1335 [label=<<font color="black">false</font>> color="black"]
}
