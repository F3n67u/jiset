digraph {
  node14729 [shape=diamond, label=<<font color="black">(== searchLength 0i)</font>> color="black" fillcolor="white" style=filled]
  node14726 [shape=cds, label=<<font color="black">app __x4__ = (ToIntegerOrInfinity position)</font>> color="black" fillcolor="white" style=filled]
  node14716 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node14733 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14735 [shape=diamond, label=<<font color="black">(&lt; __x6__ (+ end 1i))</font>> color="black" fillcolor="white" style=filled]
  node14725 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14719 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let isRegExp = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14711 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14736 [shape=cds, label=<<font color="black">access __x7__ = (S __x6__)</font>> color="black" fillcolor="white" style=filled]
  node14739 [shape=cds, label=<<font color="black">13:app __x8__ = (SameValueNonNumeric substring searchStr)</font>> color="black" fillcolor="white" style=filled]
  node14728 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:??? &quot;Let id:{start} be the result of clamping id:{pos} between 0 and id:{len} .&quot;</td></tr>
      <tr><td align="left">8:let searchLength = searchStr.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14715 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14717 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14727 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let pos = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14737 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x5__ = (+ __x5__ __x7__)</td></tr>
      <tr><td align="left">__x6__ = (+ __x6__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14718 [shape=cds, label=<<font color="black">2:app __x2__ = (IsRegExp searchString)</font>> color="black" fillcolor="white" style=filled]
  node14722 [shape=cds, label=<<font color="black">4:app __x3__ = (ToString searchString)</font>> color="black" fillcolor="white" style=filled]
  node14730 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14712 [shape=cds, label=<<font color="black">app searchString = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node14740 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:return [! __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14721 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14734 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let __x5__ = &quot;&quot;</td></tr>
      <tr><td align="left">12:let __x6__ = start</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14713 [shape=cds, label=<<font color="black">app position = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node14714 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node14731 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let end = (+ start searchLength)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14720 [shape=diamond, label=<<font color="black">(= isRegExp true)</font>> color="black" fillcolor="white" style=filled]
  node14724 [shape=diamond, label=<<font color="black">(= position undefined)</font>> color="black" fillcolor="white" style=filled]
  node14732 [shape=diamond, label=<<font color="black">(&lt; len end)</font>> color="black" fillcolor="white" style=filled]
  node14710 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node14738 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let substring = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14723 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let searchStr = [? __x3__]</td></tr>
      <tr><td align="left">5:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14724 -> node14725 [label=<<font color="black">true</font>> color="black"]
  node14724 -> node14726 [label=<<font color="black">false</font>> color="black"]
  node14721 -> node14722 [ color="black"]
  node14716 -> node14717 [ color="black"]
  node14733 -> node14734 [ color="black"]
  node14719 -> node14720 [ color="black"]
  node14723 -> node14724 [ color="black"]
  node14714 -> node14715 [ color="black"]
  node14740 -> node14711 [ color="black"]
  node14738 -> node14739 [ color="black"]
  node14732 -> node14733 [label=<<font color="black">true</font>> color="black"]
  node14732 -> node14734 [label=<<font color="black">false</font>> color="black"]
  node14739 -> node14740 [ color="black"]
  node14729 -> node14730 [label=<<font color="black">true</font>> color="black"]
  node14729 -> node14731 [label=<<font color="black">false</font>> color="black"]
  node14727 -> node14728 [ color="black"]
  node14712 -> node14713 [ color="black"]
  node14715 -> node14716 [ color="black"]
  node14726 -> node14727 [ color="black"]
  node14717 -> node14718 [ color="black"]
  node14731 -> node14732 [ color="black"]
  node14725 -> node14728 [ color="black"]
  node14735 -> node14736 [label=<<font color="black">true</font>> color="black"]
  node14735 -> node14738 [label=<<font color="black">false</font>> color="black"]
  node14736 -> node14737 [ color="black"]
  node14728 -> node14729 [ color="black"]
  node14720 -> node14721 [label=<<font color="black">true</font>> color="black"]
  node14720 -> node14722 [label=<<font color="black">false</font>> color="black"]
  node14722 -> node14723 [ color="black"]
  node14718 -> node14719 [ color="black"]
  node14730 -> node14731 [ color="black"]
  node14734 -> node14735 [ color="black"]
  node14713 -> node14714 [ color="black"]
  node14710 -> node14712 [ color="black"]
  node14737 -> node14735 [ color="black"]
}
