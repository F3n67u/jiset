digraph {
  node16261 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:[? __x2__]</td></tr>
      <tr><td align="left">4:return undefined</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16268 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:[? __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16255 [shape=cds, label=<<font color="black">0:app __x0__ = (ToObject this)</font>> color="black" fillcolor="white" style=filled]
  node16269 [shape=cds, label=<<font color="black">11:app __x6__ = (Set O &quot;length&quot; newLen true)</font>> color="black" fillcolor="white" style=filled]
  node16258 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let len = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16263 [shape=cds, label=<<font color="black">8:app __x3__ = (ToString newLen)</font>> color="black" fillcolor="white" style=filled]
  node16270 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">11:[? __x6__]</td></tr>
      <tr><td align="left">12:return element</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16253 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16266 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let element = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16262 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:assert (&lt; 0i len)</td></tr>
      <tr><td align="left">7:let newLen = (- len 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16259 [shape=diamond, label=<<font color="black">(== len 0i)</font>> color="black" fillcolor="white" style=filled]
  node16264 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let index = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16265 [shape=cds, label=<<font color="black">9:app __x4__ = (Get O index)</font>> color="black" fillcolor="white" style=filled]
  node16260 [shape=cds, label=<<font color="black">3:app __x2__ = (Set O &quot;length&quot; 0i true)</font>> color="black" fillcolor="white" style=filled]
  node16257 [shape=cds, label=<<font color="black">1:app __x1__ = (LengthOfArrayLike O)</font>> color="black" fillcolor="white" style=filled]
  node16267 [shape=cds, label=<<font color="black">10:app __x5__ = (DeletePropertyOrThrow O index)</font>> color="black" fillcolor="white" style=filled]
  node16256 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16254 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node16257 -> node16258 [ color="black"]
  node16266 -> node16267 [ color="black"]
  node16268 -> node16269 [ color="black"]
  node16262 -> node16263 [ color="black"]
  node16259 -> node16260 [label=<<font color="black">true</font>> color="black"]
  node16259 -> node16262 [label=<<font color="black">false</font>> color="black"]
  node16267 -> node16268 [ color="black"]
  node16256 -> node16257 [ color="black"]
  node16261 -> node16254 [ color="black"]
  node16265 -> node16266 [ color="black"]
  node16270 -> node16254 [ color="black"]
  node16263 -> node16264 [ color="black"]
  node16255 -> node16256 [ color="black"]
  node16264 -> node16265 [ color="black"]
  node16253 -> node16255 [ color="black"]
  node16269 -> node16270 [ color="black"]
  node16260 -> node16261 [ color="black"]
  node16258 -> node16259 [ color="black"]
}
