digraph {
  node15450 [shape=diamond, label=<<font color="black">(= NewTarget undefined)</font>> color="black" fillcolor="white" style=filled]
  node15449 [shape=cds, label=<<font color="black">app length = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node15454 [shape=cds, label=<<font color="black">2:app __x1__ = (AllocateArrayBuffer NewTarget byteLength)</font>> color="black" fillcolor="white" style=filled]
  node15447 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15448 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node15452 [shape=cds, label=<<font color="black">1:app __x0__ = (ToIndex length)</font>> color="black" fillcolor="white" style=filled]
  node15455 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:return [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15453 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let byteLength = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15455 -> node15448 [ color="black"]
  node15453 -> node15454 [ color="black"]
  node15450 -> node15451 [label=<<font color="black">true</font>> color="black"]
  node15450 -> node15452 [label=<<font color="black">false</font>> color="black"]
  node15452 -> node15453 [ color="black"]
  node15449 -> node15450 [ color="black"]
  node15454 -> node15455 [ color="black"]
  node15447 -> node15449 [ color="black"]
  node15451 -> node15452 [ color="black"]
}
