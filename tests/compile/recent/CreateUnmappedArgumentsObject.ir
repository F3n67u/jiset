{
  [0] let len = argumentsList.length
  [1] ??? "Let id:{obj} be ! OrdinaryObjectCreate ( % Object . prototype % , « [ [ ParameterMap ] ] » ) ."
  [2] obj.ParameterMap = undefined
  [3] ??? "Perform DefinePropertyOrThrow ( id:{obj} , value:{\"length\"} , PropertyDescriptor { [ [ Value ] ] : 𝔽 ( id:{len} ) , [ [ Writable ] ] : value:{true} , [ [ Enumerable ] ] : value:{false} , [ [ Configurable ] ] : value:{true} } ) ."
  [4] let index = 0i
  [5] while (< index len) {
    [6] let val = argumentsList[index]
    [7] ??? "Perform ! CreateDataPropertyOrThrow ( id:{obj} , ! ToString ( 𝔽 ( id:{index} ) ) , id:{val} ) ."
    [8] index = (+ index 1i)
  }
  [9] ??? "Perform ! DefinePropertyOrThrow ( id:{obj} , @ @ iterator , PropertyDescriptor { [ [ Value ] ] : % Array . prototype . values % , [ [ Writable ] ] : value:{true} , [ [ Enumerable ] ] : value:{false} , [ [ Configurable ] ] : value:{true} } ) ."
  [10] app __x0__ = (DefinePropertyOrThrow obj "callee" (new PropertyDescriptor("Get" -> INTRINSIC_ThrowTypeError, "Set" -> INTRINSIC_ThrowTypeError, "Enumerable" -> false, "Configurable" -> false)))
  [10] if (is-completion __x0__) if (= __x0__.Type CONST_normal) __x0__ = __x0__.Value else return __x0__ else [7] {}
  [10] __x0__
  [11] app __x1__ = (WrapCompletion obj)
  [11] return __x1__
}