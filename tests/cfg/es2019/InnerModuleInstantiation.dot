digraph {
  node10251 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">25:let requiredModule = stack[(- stack.length 1i)]</td></tr>
      <tr><td align="left">26:(pop stack (- stack.length 1i))</td></tr>
      <tr><td align="left">27:requiredModule.Status = &quot;instantiated&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10243 [shape=cds, label=<<font color="black">18:app __x5__ = (min module.DFSAncestorIndex requiredModule.DFSAncestorIndex)</font>> color="black" fillcolor="white" style=filled]
  node10229 [shape=diamond, label=<<font color="black">(! (= (typeof module) &quot;CyclicModuleRecord&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10239 [shape=cds, label=<<font color="black">13:app __x4__ = (InnerModuleInstantiation requiredModule stack index)</font>> color="black" fillcolor="white" style=filled]
  node10252 [shape=diamond, label=<<font color="black">(= requiredModule module)</font>> color="black" fillcolor="white" style=filled]
  node10227 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10236 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let required = __x1__[__x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10253 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">done = true</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10240 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:index = [? __x4__]</td></tr>
      <tr><td align="left">14:assert (|| (|| (= requiredModule.Status &quot;instantiating&quot;) (= requiredModule.Status &quot;instantiated&quot;)) (= requiredModule.Status &quot;evaluated&quot;))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10249 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">23:let done = false</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10231 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10241 [shape=diamond, label=<<font color="black">(= requiredModule.Status &quot;instantiating&quot;)</font>> color="black" fillcolor="white" style=filled]
  node10254 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">29:return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10250 [shape=diamond, label=<<font color="black">(= done false)</font>> color="black" fillcolor="white" style=filled]
  node10237 [shape=cds, label=<<font color="black">12:app __x3__ = (HostResolveImportedModule module required)</font>> color="black" fillcolor="white" style=filled]
  node10245 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">__x2__ = (+ __x2__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10234 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:assert (= module.Status &quot;uninstantiated&quot;)</td></tr>
      <tr><td align="left">6:module.Status = &quot;instantiating&quot;</td></tr>
      <tr><td align="left">7:module.DFSIndex = index</td></tr>
      <tr><td align="left">8:module.DFSAncestorIndex = index</td></tr>
      <tr><td align="left">9:index = (+ index 1i)</td></tr>
      <tr><td align="left">10:append module -&gt; stack</td></tr>
      <tr><td align="left">11:let __x1__ = module.RequestedModules</td></tr>
      <tr><td align="left">11:let __x2__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10244 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:module.DFSAncestorIndex = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10230 [shape=cds, label=<<font color="black">1:app __x0__ = (module.Instantiate module)</font>> color="black" fillcolor="white" style=filled]
  node10248 [shape=diamond, label=<<font color="black">(= module.DFSAncestorIndex module.DFSIndex)</font>> color="black" fillcolor="white" style=filled]
  node10238 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let requiredModule = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10233 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return index</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10247 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">19:[? __x6__]</td></tr>
      <tr><td align="left">21:assert (! (&lt; module.DFSIndex module.DFSAncestorIndex))</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10235 [shape=diamond, label=<<font color="black">(&lt; __x2__ __x1__.length)</font>> color="black" fillcolor="white" style=filled]
  node10232 [shape=diamond, label=<<font color="black">(|| (|| (= module.Status &quot;instantiating&quot;) (= module.Status &quot;instantiated&quot;)) (= module.Status &quot;evaluated&quot;))</font>> color="black" fillcolor="white" style=filled]
  node10242 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:assert (= (typeof requiredModule) &quot;CyclicModuleRecord&quot;)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10246 [shape=cds, label=<<font color="black">19:app __x6__ = (module.InitializeEnvironment module)</font>> color="black" fillcolor="white" style=filled]
  node10228 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node10233 -> node10234 [ color="black"]
  node10252 -> node10253 [label=<<font color="black">true</font>> color="black"]
  node10252 -> node10250 [label=<<font color="black">false</font>> color="black"]
  node10248 -> node10249 [label=<<font color="black">true</font>> color="black"]
  node10248 -> node10254 [label=<<font color="black">false</font>> color="black"]
  node10242 -> node10243 [ color="black"]
  node10237 -> node10238 [ color="black"]
  node10253 -> node10250 [ color="black"]
  node10239 -> node10240 [ color="black"]
  node10236 -> node10237 [ color="black"]
  node10227 -> node10229 [ color="black"]
  node10247 -> node10248 [ color="black"]
  node10232 -> node10233 [label=<<font color="black">true</font>> color="black"]
  node10232 -> node10234 [label=<<font color="black">false</font>> color="black"]
  node10229 -> node10230 [label=<<font color="black">true</font>> color="black"]
  node10229 -> node10232 [label=<<font color="black">false</font>> color="black"]
  node10250 -> node10251 [label=<<font color="black">true</font>> color="black"]
  node10250 -> node10254 [label=<<font color="black">false</font>> color="black"]
  node10251 -> node10252 [ color="black"]
  node10249 -> node10250 [ color="black"]
  node10231 -> node10232 [ color="black"]
  node10245 -> node10235 [ color="black"]
  node10234 -> node10235 [ color="black"]
  node10241 -> node10242 [label=<<font color="black">true</font>> color="black"]
  node10241 -> node10245 [label=<<font color="black">false</font>> color="black"]
  node10246 -> node10247 [ color="black"]
  node10238 -> node10239 [ color="black"]
  node10254 -> node10228 [ color="black"]
  node10240 -> node10241 [ color="black"]
  node10235 -> node10236 [label=<<font color="black">true</font>> color="black"]
  node10235 -> node10246 [label=<<font color="black">false</font>> color="black"]
  node10230 -> node10231 [ color="black"]
  node10243 -> node10244 [ color="black"]
  node10244 -> node10245 [ color="black"]
}
