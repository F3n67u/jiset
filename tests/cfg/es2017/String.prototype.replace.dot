digraph {
  node12440 [shape=diamond, label=<<font color="black">(! (= replacer undefined))</font>> color="black" fillcolor="white" style=filled]
  node12458 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let captures = (new [])</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12447 [shape=cds, label=<<font color="black">7:app __x5__ = (IsCallable replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12443 [shape=cds, label=<<font color="black">5:app __x3__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12437 [shape=diamond, label=<<font color="black">(! (|| (= searchValue undefined) (= searchValue null)))</font>> color="black" fillcolor="white" style=filled]
  node12442 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:return [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12441 [shape=cds, label=<<font color="black">4:app __x2__ = (Call replacer searchValue (new [O, replaceValue]))</font>> color="black" fillcolor="white" style=filled]
  node12451 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let replaceValue = [? __x6__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12445 [shape=cds, label=<<font color="black">6:app __x4__ = (ToString searchValue)</font>> color="black" fillcolor="white" style=filled]
  node12434 [shape=cds, label=<<font color="black">app replaceValue = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12455 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:let replValue = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12439 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">2:let replacer = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12452 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:??? &quot;Search id:{string} for the first occurrence of id:{searchString} and let id:{pos} be the index within id:{string} of the first code unit of the matched substring and let id:{matched} be id:{searchString} . If no occurrences of id:{searchString} were found , return id:{string} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12448 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let functionalReplace = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12435 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12456 [shape=cds, label=<<font color="black">13:app __x8__ = (ToString replValue)</font>> color="black" fillcolor="white" style=filled]
  node12453 [shape=diamond, label=<<font color="black">(= functionalReplace true)</font>> color="black" fillcolor="white" style=filled]
  node12436 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12457 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:let replStr = [? __x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12446 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">6:let searchString = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12461 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">17:let tailPos = (+ pos matched.length)</td></tr>
      <tr><td align="left">18:??? &quot;Let id:{newString} be the String formed by concatenating the first id:{pos} code units of id:{string} , id:{replStr} , and the trailing substring of id:{string} starting at index id:{tailPos} . If id:{pos} is 0 , the first element of the concatenation will be the empty String .&quot;</td></tr>
      <tr><td align="left">19:return newString</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12450 [shape=cds, label=<<font color="black">9:app __x6__ = (ToString replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12449 [shape=diamond, label=<<font color="black">(= functionalReplace false)</font>> color="black" fillcolor="white" style=filled]
  node12454 [shape=cds, label=<<font color="black">12:app __x7__ = (Call replaceValue undefined (new [matched, pos, string]))</font>> color="black" fillcolor="white" style=filled]
  node12433 [shape=cds, label=<<font color="black">app searchValue = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12438 [shape=cds, label=<<font color="black">2:app __x1__ = (GetMethod searchValue SYMBOL_replace)</font>> color="black" fillcolor="white" style=filled]
  node12460 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:let replStr = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12432 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12459 [shape=cds, label=<<font color="black">16:app __x9__ = (GetSubstitution matched string pos captures replaceValue)</font>> color="black" fillcolor="white" style=filled]
  node12431 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12444 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">5:let string = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12447 -> node12448 [ color="black"]
  node12443 -> node12444 [ color="black"]
  node12436 -> node12437 [ color="black"]
  node12454 -> node12455 [ color="black"]
  node12439 -> node12440 [ color="black"]
  node12446 -> node12447 [ color="black"]
  node12445 -> node12446 [ color="black"]
  node12435 -> node12436 [ color="black"]
  node12461 -> node12432 [ color="black"]
  node12452 -> node12453 [ color="black"]
  node12458 -> node12459 [ color="black"]
  node12456 -> node12457 [ color="black"]
  node12434 -> node12435 [ color="black"]
  node12431 -> node12433 [ color="black"]
  node12450 -> node12451 [ color="black"]
  node12438 -> node12439 [ color="black"]
  node12433 -> node12434 [ color="black"]
  node12451 -> node12452 [ color="black"]
  node12437 -> node12438 [label=<<font color="black">true</font>> color="black"]
  node12437 -> node12443 [label=<<font color="black">false</font>> color="black"]
  node12448 -> node12449 [ color="black"]
  node12457 -> node12461 [ color="black"]
  node12449 -> node12450 [label=<<font color="black">true</font>> color="black"]
  node12449 -> node12452 [label=<<font color="black">false</font>> color="black"]
  node12455 -> node12456 [ color="black"]
  node12459 -> node12460 [ color="black"]
  node12442 -> node12443 [ color="black"]
  node12440 -> node12441 [label=<<font color="black">true</font>> color="black"]
  node12440 -> node12443 [label=<<font color="black">false</font>> color="black"]
  node12441 -> node12442 [ color="black"]
  node12460 -> node12461 [ color="black"]
  node12444 -> node12445 [ color="black"]
  node12453 -> node12454 [label=<<font color="black">true</font>> color="black"]
  node12453 -> node12458 [label=<<font color="black">false</font>> color="black"]
}
