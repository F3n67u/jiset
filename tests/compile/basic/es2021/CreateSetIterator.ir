{
  assert (|| (= kind CONST_keyPLUSvalue) (= kind CONST_value))
  app __x0__ = (RequireInternalSlot set "SetData")
  [? __x0__]
  let closure = ()[set, kind] => {
    let index = 0i
    let entries = set.SetData
    let numEntries = entries.length
    while (< index numEntries) {
      let e = entries[index]
      index = (+ index 1i)
      if (! (= e CONST_empty)) {
        if (= kind CONST_keyPLUSvalue) {
          app __x1__ = (CreateArrayFromList (new [e, e]))
          app __x2__ = (Yield [! __x1__])
          [? __x2__]
        } else {
          assert (= kind CONST_value)
          app __x3__ = (Yield e)
          [? __x3__]
        }
        numEntries = entries.length
      } else {}
    }
    return undefined
  }
  app __x4__ = (CreateIteratorFromClosure closure "%SetIteratorPrototype%" INTRINSIC_SetIteratorPrototype)
  return [! __x4__]
}