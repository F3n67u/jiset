digraph {
  node12500 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let intEnd = [? __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12489 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node12510 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x7__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12501 [shape=diamond, label=<<font color="black">(&lt; intStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node12509 [shape=cds, label=<<font color="black">app __x7__ = (min intEnd len)</font>> color="black" fillcolor="white" style=filled]
  node12497 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node12492 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12512 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let span = __x8__</td></tr>
      <tr><td align="left">8:??? &quot;Return a String value containing id:{span} consecutive elements from id:{S} beginning with the element at index id:{from} .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12495 [shape=cds, label=<<font color="black">3:app __x2__ = (ToInteger start)</font>> color="black" fillcolor="white" style=filled]
  node12491 [shape=cds, label=<<font color="black">0:app __x0__ = (RequireObjectCoercible this)</font>> color="black" fillcolor="white" style=filled]
  node12498 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let intEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12503 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x4__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12508 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12488 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12490 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node12507 [shape=cds, label=<<font color="black">app __x6__ = (max (+ len intEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12511 [shape=cds, label=<<font color="black">7:app __x8__ = (max (- to from) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12494 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let S = [? __x1__]</td></tr>
      <tr><td align="left">2:let len = S.length</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12504 [shape=cds, label=<<font color="black">app __x5__ = (min intStart len)</font>> color="black" fillcolor="white" style=filled]
  node12499 [shape=cds, label=<<font color="black">app __x3__ = (ToInteger end)</font>> color="black" fillcolor="white" style=filled]
  node12493 [shape=cds, label=<<font color="black">1:app __x1__ = (ToString O)</font>> color="black" fillcolor="white" style=filled]
  node12506 [shape=diamond, label=<<font color="black">(&lt; intEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node12496 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let intStart = [? __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12505 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12487 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node12502 [shape=cds, label=<<font color="black">app __x4__ = (max (+ len intStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node12492 -> node12493 [ color="black"]
  node12502 -> node12503 [ color="black"]
  node12503 -> node12506 [ color="black"]
  node12507 -> node12508 [ color="black"]
  node12495 -> node12496 [ color="black"]
  node12501 -> node12502 [label=<<font color="black">true</font>> color="black"]
  node12501 -> node12504 [label=<<font color="black">false</font>> color="black"]
  node12487 -> node12489 [ color="black"]
  node12496 -> node12497 [ color="black"]
  node12491 -> node12492 [ color="black"]
  node12508 -> node12511 [ color="black"]
  node12490 -> node12491 [ color="black"]
  node12493 -> node12494 [ color="black"]
  node12498 -> node12501 [ color="black"]
  node12510 -> node12511 [ color="black"]
  node12511 -> node12512 [ color="black"]
  node12512 -> node12488 [ color="black"]
  node12505 -> node12506 [ color="black"]
  node12509 -> node12510 [ color="black"]
  node12489 -> node12490 [ color="black"]
  node12504 -> node12505 [ color="black"]
  node12494 -> node12495 [ color="black"]
  node12500 -> node12501 [ color="black"]
  node12499 -> node12500 [ color="black"]
  node12497 -> node12498 [label=<<font color="black">true</font>> color="black"]
  node12497 -> node12499 [label=<<font color="black">false</font>> color="black"]
  node12506 -> node12507 [label=<<font color="black">true</font>> color="black"]
  node12506 -> node12509 [label=<<font color="black">false</font>> color="black"]
}
